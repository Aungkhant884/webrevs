{"files":[{"patch":"@@ -3181,1 +3181,1 @@\n-instruct insertB_fast(vReg dst, vReg src, iRegIorL2I val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+instruct insertB_small(vReg dst, vReg src, iRegIorL2I val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -3209,1 +3209,1 @@\n-instruct insertS_fast(vReg dst, vReg src, iRegIorL2I val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+instruct insertS_small(vReg dst, vReg src, iRegIorL2I val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -3237,1 +3237,1 @@\n-instruct insertI_fast(vReg dst, vReg src, iRegIorL2I val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+instruct insertI_small(vReg dst, vReg src, iRegIorL2I val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -3265,1 +3265,1 @@\n-instruct insertL_fast(vReg dst, vReg src, iRegL val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+instruct insertF_small(vReg dst, vReg src, vRegF val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -3268,1 +3268,1 @@\n-            n->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n+            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n@@ -3272,1 +3272,1 @@\n-  format %{ \"sve_index $tmp, D, -16, 1\\n\\t\"\n+  format %{ \"sve_index $tmp, S, -16, 1\\n\\t\"\n@@ -3275,1 +3275,1 @@\n-            \"sve_cpy $dst, $pTmp, $val\\n\\t# insert into vector (L)\" %}\n+            \"sve_cpy $dst, $pTmp, $val\\n\\t# insert into vector (F)\" %}\n@@ -3277,2 +3277,2 @@\n-    __ sve_index(as_FloatRegister($tmp$$reg), __ D, -16, 1);\n-    __ sve_cmpeq(as_PRegister($pTmp$$reg), __ D, ptrue,\n+    __ sve_index(as_FloatRegister($tmp$$reg), __ S, -16, 1);\n+    __ sve_cmpeq(as_PRegister($pTmp$$reg), __ S, ptrue,\n@@ -3286,2 +3286,2 @@\n-    __ sve_cpy(as_FloatRegister($dst$$reg), __ D,\n-               as_PRegister($pTmp$$reg), as_Register($val$$reg));\n+    __ sve_cpy(as_FloatRegister($dst$$reg), __ S,\n+               as_PRegister($pTmp$$reg), as_FloatRegister($val$$reg));\n@@ -3293,1 +3293,2 @@\n-instruct insertF_fast(vReg dst, vReg src, vRegF val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+\n+instruct insertL_d(vReg dst, vReg src, iRegL val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -3295,2 +3296,2 @@\n-  predicate(UseSVE > 0 && n->as_Vector()->length() <= 32 &&\n-            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n@@ -3300,1 +3301,1 @@\n-  format %{ \"sve_index $tmp, S, -16, 1\\n\\t\"\n+  format %{ \"sve_index $tmp, D, -16, 1\\n\\t\"\n@@ -3303,1 +3304,1 @@\n-            \"sve_cpy $dst, $pTmp, $val\\n\\t# insert into vector (F)\" %}\n+            \"sve_cpy $dst, $pTmp, $val\\n\\t# insert into vector (L)\" %}\n@@ -3305,2 +3306,2 @@\n-    __ sve_index(as_FloatRegister($tmp$$reg), __ S, -16, 1);\n-    __ sve_cmpeq(as_PRegister($pTmp$$reg), __ S, ptrue,\n+    __ sve_index(as_FloatRegister($tmp$$reg), __ D, -16, 1);\n+    __ sve_cmpeq(as_PRegister($pTmp$$reg), __ D, ptrue,\n@@ -3314,2 +3315,2 @@\n-    __ sve_cpy(as_FloatRegister($dst$$reg), __ S,\n-               as_PRegister($pTmp$$reg), as_FloatRegister($val$$reg));\n+    __ sve_cpy(as_FloatRegister($dst$$reg), __ D,\n+               as_PRegister($pTmp$$reg), as_Register($val$$reg));\n@@ -3321,1 +3322,1 @@\n-instruct insertD_fast(vReg dst, vReg src, vRegD val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+instruct insertD_d(vReg dst, vReg src, vRegD val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -3323,1 +3324,1 @@\n-  predicate(UseSVE > 0 && n->as_Vector()->length() <= 32 &&\n+  predicate(UseSVE > 0 &&\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":23,"deletions":22,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -1888,2 +1888,2 @@\n-define(`VECTOR_INSERT_FAST', `\n-instruct insert$1_fast`'(vReg dst, vReg src, $2 val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+define(`VECTOR_INSERT_SMALL', `\n+instruct insert$1_small`'(vReg dst, vReg src, $2 val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n@@ -1916,7 +1916,37 @@\n-dnl                $1 $2          $3 $4\n-VECTOR_INSERT_FAST(B, iRegIorL2I, B, Register)\n-VECTOR_INSERT_FAST(S, iRegIorL2I, H, Register)\n-VECTOR_INSERT_FAST(I, iRegIorL2I, S, Register)\n-VECTOR_INSERT_FAST(L, iRegL,      D, Register)\n-VECTOR_INSERT_FAST(F, vRegF,      S, FloatRegister)\n-VECTOR_INSERT_FAST(D, vRegD,      D, FloatRegister)\n+dnl                 $1 $2          $3 $4\n+VECTOR_INSERT_SMALL(B, iRegIorL2I, B, Register)\n+VECTOR_INSERT_SMALL(S, iRegIorL2I, H, Register)\n+VECTOR_INSERT_SMALL(I, iRegIorL2I, S, Register)\n+VECTOR_INSERT_SMALL(F, vRegF,      S, FloatRegister)\n+\n+define(`VECTOR_INSERT_D', `\n+instruct insert$1_d`'(vReg dst, vReg src, $2 val, immI idx, vReg tmp, pRegGov pTmp, rFlagsReg cr)\n+%{\n+  predicate(UseSVE > 0 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_`'TYPE2DATATYPE($1));\n+  match(Set dst (VectorInsert (Binary src val) idx));\n+  effect(TEMP tmp, TEMP pTmp, KILL cr);\n+  ins_cost(4 * SVE_COST);\n+  format %{ \"sve_index $tmp, $3, -16, 1\\n\\t\"\n+            \"sve_cmpeq $pTmp, $tmp, ($idx-#16) \/\/ shift from [0, 31] to [-16, 15]\\n\\t\"\n+            \"sve_orr $dst, $src, $src\\n\\t\"\n+            \"sve_cpy $dst, $pTmp, $val\\n\\t# insert into vector ($1)\" %}\n+  ins_encode %{\n+    __ sve_index(as_FloatRegister($tmp$$reg), __ $3, -16, 1);\n+    __ sve_cmpeq(as_PRegister($pTmp$$reg), __ $3, ptrue,\n+                 as_FloatRegister($tmp$$reg), (int)($idx$$constant) - 16);\n+    \/\/ If src and dst are the same reg, this move is not needed.\n+    if (as_FloatRegister($dst$$reg) != as_FloatRegister($src$$reg)) {\n+      __ sve_orr(as_FloatRegister($dst$$reg),\n+             as_FloatRegister($src$$reg),\n+             as_FloatRegister($src$$reg));\n+    }\n+    __ sve_cpy(as_FloatRegister($dst$$reg), __ $3,\n+               as_PRegister($pTmp$$reg), as_$4($val$$reg));\n+\n+  %}\n+  ins_pipe(pipe_slow);\n+%}')dnl\n+dnl             $1 $2     $3 $4\n+VECTOR_INSERT_D(L, iRegL, D, Register)\n+VECTOR_INSERT_D(D, vRegD, D, FloatRegister)\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":39,"deletions":9,"binary":false,"changes":48,"status":"modified"}]}