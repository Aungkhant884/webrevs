{"files":[{"patch":"@@ -1901,0 +1901,4 @@\n+  \/\/ Support for calling svml double64 vectors\n+  if (bt == T_DOUBLE) {\n+    size = 1;\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -127,0 +127,24 @@\n+  if (num_elem == 1) {\n+    if (mask_use_type != VecMaskNotUsed) {\n+#ifndef PRODUCT\n+      if (C->print_intrinsics()) {\n+        tty->print_cr(\"  ** Rejected vector mask op (%s,%s,%d) because architecture does not support it\",\n+                      NodeClassNames[sopc], type2name(type), num_elem);\n+      }\n+#endif\n+      return false;\n+    }\n+\n+    if (sopc != 0) {\n+      if (sopc != Op_LoadVector && sopc != Op_StoreVector) {\n+#ifndef PRODUCT\n+        if (C->print_intrinsics()) {\n+          tty->print_cr(\"  ** Not a svml call or load\/store vector op (%s,%s,%d)\",\n+                        NodeClassNames[sopc], type2name(type), num_elem);\n+        }\n+#endif\n+        return false;\n+      }\n+    }\n+  }\n+\n@@ -240,0 +264,9 @@\n+  if (num_elem == 1) {\n+    if (opc != Op_CallLeafVector || elem_bt != T_DOUBLE) {\n+      if (C->print_intrinsics()) {\n+        tty->print_cr(\"  ** not a svml call: arity=%d opc=%d vlen=%d etype=%s\",\n+                      n, opc, num_elem, type2name(elem_bt));\n+      }\n+      return false;\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"}]}