{"files":[{"patch":"@@ -236,2 +236,0 @@\n-      case Op_VectorCastD2X:\n-      case Op_VectorCastF2X:\n@@ -2761,0 +2759,18 @@\n+instruct vcvtDtoF(vReg dst, vReg src, vReg tmp)\n+%{\n+  predicate(UseSVE > 0 && n->bottom_type()->is_vect()->length_in_bytes() >= 16 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  match(Set dst (VectorCastD2X src));\n+  effect(TEMP_DEF dst, TEMP tmp);\n+  ins_cost(3 * SVE_COST);\n+  format %{ \"sve_fcvt  $dst, S, $src, D\\n\\t\"\n+            \"sve_dup  $tmp, S, 0\\n\\t\"\n+            \"sve_uzp1  $dst, S, $dst, $tmp\\t# convert D to F vector\" %}\n+  ins_encode %{\n+    __ sve_fcvt(as_FloatRegister($dst$$reg), __ S, ptrue, as_FloatRegister($src$$reg), __ D);\n+    __ sve_dup(as_FloatRegister($tmp$$reg), __ S, 0);\n+    __ sve_uzp1(as_FloatRegister($dst$$reg), __ S, as_FloatRegister($dst$$reg), as_FloatRegister($tmp$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -2818,0 +2834,15 @@\n+\n+instruct vcvtFtoD(vReg dst, vReg src)\n+%{\n+  predicate(UseSVE > 0 && n->bottom_type()->is_vect()->length_in_bytes() >= 16 &&\n+            n->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE);\n+  match(Set dst (VectorCastF2X src));\n+  ins_cost(2 * SVE_COST);\n+  format %{ \"sve_sunpklo  $dst, D, $src\\n\\t\"\n+            \"sve_fcvt  $dst, D, $dst, S\\t# convert F to D vector\" %}\n+  ins_encode %{\n+    __ sve_sunpklo(as_FloatRegister($dst$$reg), __ D, as_FloatRegister($src$$reg));\n+    __ sve_fcvt(as_FloatRegister($dst$$reg), __ D, ptrue, as_FloatRegister($dst$$reg), __ S);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":33,"deletions":2,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -232,2 +232,0 @@\n-      case Op_VectorCastD2X:\n-      case Op_VectorCastF2X:\n@@ -1636,1 +1634,1 @@\n-define(`VECTOR_CAST_I2F_NARROW1', `\n+define(`VECTOR_CAST_X2F_NARROW1', `\n@@ -1655,1 +1653,2 @@\n-VECTOR_CAST_I2F_NARROW1(L, F, scvtf, S, D, dup, S, uzp1)\n+VECTOR_CAST_X2F_NARROW1(L, F, scvtf, S, D, dup, S, uzp1)\n+VECTOR_CAST_X2F_NARROW1(D, F, fcvt,  S, D, dup, S, uzp1)\n@@ -1676,1 +1675,1 @@\n-define(`VECTOR_CAST_I2F_EXTEND1', `\n+define(`VECTOR_CAST_X2F_EXTEND1', `\n@@ -1692,2 +1691,3 @@\n-VECTOR_CAST_I2F_EXTEND1(I, D, sunpklo, D, scvtf, D)\n-VECTOR_CAST_I2F_EXTEND1(S, F, sunpklo, S, scvtf, S)\n+VECTOR_CAST_X2F_EXTEND1(I, D, sunpklo, D, scvtf, D)\n+VECTOR_CAST_X2F_EXTEND1(S, F, sunpklo, S, scvtf, S)\n+VECTOR_CAST_X2F_EXTEND1(F, D, sunpklo, D, fcvt,  S)\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3359,1 +3359,1 @@\n-                     int& opc, int& opc2) {\n+                     unsigned& opc, unsigned& opc2) {\n@@ -3395,1 +3395,1 @@\n-    int opc, opc2;                                                      \\\n+    unsigned opc, opc2;                                                 \\\n@@ -3406,0 +3406,46 @@\n+private:\n+\n+  void encode_fcvt_T(SIMD_RegVariant T_src,SIMD_RegVariant T_dst,\n+                     unsigned& opc, unsigned& opc2) {\n+    assert(T_src != B && T_dst != B &&\n+           T_src != Q && T_dst != Q, \"invalid register variant\");\n+    assert(T_src != T_dst, \"invalid register variant\");\n+    if (T_src == S) {\n+      if (T_dst == H) {\n+        opc = 0b10;\n+        opc2 = 0b00;\n+      } else if (T_dst == D) {\n+        opc = 0b11;\n+        opc2 = 0b11;\n+      }\n+    } else if (T_src == H) {\n+      if (T_dst == S) {\n+        opc = 0b10;\n+        opc2 = 0b01;\n+      } else if (T_dst == D) {\n+        opc = 0b11;\n+        opc2 = 0b01;\n+      }\n+    } else if (T_src == D) {\n+      if (T_dst == H) {\n+        opc = 0b11;\n+        opc2 = 0b00;\n+      } else if (T_dst == S) {\n+        opc = 0b11;\n+        opc2 = 0b10;\n+      }\n+    }\n+  }\n+public:\n+\n+\/\/ SVE floating-point convert precision (predicated)\n+  void sve_fcvt(FloatRegister Zd, SIMD_RegVariant T_dst, PRegister Pg,\n+            FloatRegister Zn, SIMD_RegVariant T_src) {\n+    starti;\n+    unsigned opc, opc2;\n+    encode_fcvt_T(T_src, T_dst, opc, opc2);\n+    f(0b01100101, 31, 24), f(opc, 23, 22), f(0b0010, 21, 18);\n+    f(opc2, 17, 16), f(0b101, 15, 13);\n+    pgrf(Pg, 10), rf(Zn, 5), rf(Zd, 0);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":48,"deletions":2,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -1585,0 +1585,1 @@\n+                        [\"fcvt\",    \"__ sve_fcvt(z5, __ D, p3, z4, __ S);\",               \"fcvt\\tz5.d, p3\/m, z4.s\"],\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -770,0 +770,1 @@\n+    __ sve_fcvt(z5, __ D, p3, z4, __ S);               \/\/       fcvt    z5.d, p3\/m, z4.s\n@@ -975,7 +976,7 @@\n-    0x14000000,     0x17ffffd7,     0x14000306,     0x94000000,\n-    0x97ffffd4,     0x94000303,     0x3400000a,     0x34fffa2a,\n-    0x3400600a,     0x35000008,     0x35fff9c8,     0x35005fa8,\n-    0xb400000b,     0xb4fff96b,     0xb4005f4b,     0xb500001d,\n-    0xb5fff91d,     0xb5005efd,     0x10000013,     0x10fff8b3,\n-    0x10005e93,     0x90000013,     0x36300016,     0x3637f836,\n-    0x36305e16,     0x3758000c,     0x375ff7cc,     0x37585dac,\n+    0x14000000,     0x17ffffd7,     0x14000307,     0x94000000,\n+    0x97ffffd4,     0x94000304,     0x3400000a,     0x34fffa2a,\n+    0x3400602a,     0x35000008,     0x35fff9c8,     0x35005fc8,\n+    0xb400000b,     0xb4fff96b,     0xb4005f6b,     0xb500001d,\n+    0xb5fff91d,     0xb5005f1d,     0x10000013,     0x10fff8b3,\n+    0x10005eb3,     0x90000013,     0x36300016,     0x3637f836,\n+    0x36305e36,     0x3758000c,     0x375ff7cc,     0x37585dcc,\n@@ -986,13 +987,13 @@\n-    0x54005b80,     0x54000001,     0x54fff541,     0x54005b21,\n-    0x54000002,     0x54fff4e2,     0x54005ac2,     0x54000002,\n-    0x54fff482,     0x54005a62,     0x54000003,     0x54fff423,\n-    0x54005a03,     0x54000003,     0x54fff3c3,     0x540059a3,\n-    0x54000004,     0x54fff364,     0x54005944,     0x54000005,\n-    0x54fff305,     0x540058e5,     0x54000006,     0x54fff2a6,\n-    0x54005886,     0x54000007,     0x54fff247,     0x54005827,\n-    0x54000008,     0x54fff1e8,     0x540057c8,     0x54000009,\n-    0x54fff189,     0x54005769,     0x5400000a,     0x54fff12a,\n-    0x5400570a,     0x5400000b,     0x54fff0cb,     0x540056ab,\n-    0x5400000c,     0x54fff06c,     0x5400564c,     0x5400000d,\n-    0x54fff00d,     0x540055ed,     0x5400000e,     0x54ffefae,\n-    0x5400558e,     0x5400000f,     0x54ffef4f,     0x5400552f,\n+    0x54005ba0,     0x54000001,     0x54fff541,     0x54005b41,\n+    0x54000002,     0x54fff4e2,     0x54005ae2,     0x54000002,\n+    0x54fff482,     0x54005a82,     0x54000003,     0x54fff423,\n+    0x54005a23,     0x54000003,     0x54fff3c3,     0x540059c3,\n+    0x54000004,     0x54fff364,     0x54005964,     0x54000005,\n+    0x54fff305,     0x54005905,     0x54000006,     0x54fff2a6,\n+    0x540058a6,     0x54000007,     0x54fff247,     0x54005847,\n+    0x54000008,     0x54fff1e8,     0x540057e8,     0x54000009,\n+    0x54fff189,     0x54005789,     0x5400000a,     0x54fff12a,\n+    0x5400572a,     0x5400000b,     0x54fff0cb,     0x540056cb,\n+    0x5400000c,     0x54fff06c,     0x5400566c,     0x5400000d,\n+    0x54fff00d,     0x5400560d,     0x5400000e,     0x54ffefae,\n+    0x540055ae,     0x5400000f,     0x54ffef4f,     0x5400554f,\n@@ -1030,1 +1031,1 @@\n-    0xbd1b1869,     0x5800457b,     0x1800000b,     0xf8945060,\n+    0xbd1b1869,     0x5800459b,     0x1800000b,     0xf8945060,\n@@ -1128,42 +1129,42 @@\n-    0x25eb0d52,     0x65d0a001,     0x65d1a443,     0x1e601000,\n-    0x1e603000,     0x1e621000,     0x1e623000,     0x1e641000,\n-    0x1e643000,     0x1e661000,     0x1e663000,     0x1e681000,\n-    0x1e683000,     0x1e6a1000,     0x1e6a3000,     0x1e6c1000,\n-    0x1e6c3000,     0x1e6e1000,     0x1e6e3000,     0x1e701000,\n-    0x1e703000,     0x1e721000,     0x1e723000,     0x1e741000,\n-    0x1e743000,     0x1e761000,     0x1e763000,     0x1e781000,\n-    0x1e783000,     0x1e7a1000,     0x1e7a3000,     0x1e7c1000,\n-    0x1e7c3000,     0x1e7e1000,     0x1e7e3000,     0xf8238358,\n-    0xf83702af,     0xf8231118,     0xf8392214,     0xf8313022,\n-    0xf8205098,     0xf82343ec,     0xf83c734a,     0xf82261ec,\n-    0xf8bf81a1,     0xf8bd0260,     0xf8ac12d1,     0xf8ad23dc,\n-    0xf8bf3341,     0xf8bc53c4,     0xf8a443c6,     0xf8ba7130,\n-    0xf8a8600c,     0xf8f48301,     0xf8e20120,     0xf8f8121a,\n-    0xf8fe2143,     0xf8f7308a,     0xf8f05162,     0xf8e841ea,\n-    0xf8f17142,     0xf8ec61ec,     0xf86d80e2,     0xf874021a,\n-    0xf8641082,     0xf86c22b0,     0xf8703170,     0xf8755197,\n-    0xf87a4397,     0xf86e730b,     0xf86163ec,     0xb82a80f0,\n-    0xb82201a3,     0xb8331211,     0xb8232161,     0xb83e3105,\n-    0xb82f53dd,     0xb82040f4,     0xb8347397,     0xb835633b,\n-    0xb8a582e1,     0xb8b000bf,     0xb8ac1389,     0xb8af22dd,\n-    0xb8bf33f3,     0xb8a551ee,     0xb8bf4370,     0xb8b47190,\n-    0xb8ab60c9,     0xb8fe8371,     0xb8fc00fe,     0xb8ea1154,\n-    0xb8e42238,     0xb8f13076,     0xb8fd52cf,     0xb8f342d3,\n-    0xb8e270cf,     0xb8ec6170,     0xb86d8037,     0xb87e00b3,\n-    0xb8711202,     0xb876214d,     0xb875337d,     0xb86c507b,\n-    0xb861431f,     0xb8737131,     0xb87c61fb,     0xce367a86,\n-    0xce1e6858,     0xce768d51,     0xce910451,     0xce768338,\n-    0xce6c8622,     0xcec08363,     0xce708b9d,     0x04e900da,\n-    0x042404f1,     0x6596012f,     0x65d40b62,     0x65c00745,\n-    0x0456a72e,     0x04c0175b,     0x04109418,     0x041ab006,\n-    0x0413812f,     0x04118b65,     0x04101694,     0x04d7aa0a,\n-    0x045eb046,     0x04c81c5d,     0x044a1dd6,     0x040112fb,\n-    0x04dcad42,     0x65809aca,     0x658d9603,     0x65c69201,\n-    0x65878d8c,     0x65c28290,     0x04dda4e5,     0x65c2be0c,\n-    0x6580a386,     0x65c1a624,     0x658dae6d,     0x65819638,\n-    0x65f318ca,     0x65a030cd,     0x65a8532e,     0x65bb76d6,\n-    0x04144e23,     0x04407ce4,     0x04363270,     0x04b6312f,\n-    0x047e30b9,     0x052b6acd,     0x05b46d0d,     0x041a2c99,\n-    0x04d828d1,     0x04d93e04,     0x040829da,     0x040a3c6b,\n-    0x65c73aa1,     0x65c62a2e,     0x65d82678,     0x04c13611,\n-\n+    0x25eb0d52,     0x65d0a001,     0x65d1a443,     0x65cbac85,\n+    0x1e601000,     0x1e603000,     0x1e621000,     0x1e623000,\n+    0x1e641000,     0x1e643000,     0x1e661000,     0x1e663000,\n+    0x1e681000,     0x1e683000,     0x1e6a1000,     0x1e6a3000,\n+    0x1e6c1000,     0x1e6c3000,     0x1e6e1000,     0x1e6e3000,\n+    0x1e701000,     0x1e703000,     0x1e721000,     0x1e723000,\n+    0x1e741000,     0x1e743000,     0x1e761000,     0x1e763000,\n+    0x1e781000,     0x1e783000,     0x1e7a1000,     0x1e7a3000,\n+    0x1e7c1000,     0x1e7c3000,     0x1e7e1000,     0x1e7e3000,\n+    0xf8238358,     0xf83702af,     0xf8231118,     0xf8392214,\n+    0xf8313022,     0xf8205098,     0xf82343ec,     0xf83c734a,\n+    0xf82261ec,     0xf8bf81a1,     0xf8bd0260,     0xf8ac12d1,\n+    0xf8ad23dc,     0xf8bf3341,     0xf8bc53c4,     0xf8a443c6,\n+    0xf8ba7130,     0xf8a8600c,     0xf8f48301,     0xf8e20120,\n+    0xf8f8121a,     0xf8fe2143,     0xf8f7308a,     0xf8f05162,\n+    0xf8e841ea,     0xf8f17142,     0xf8ec61ec,     0xf86d80e2,\n+    0xf874021a,     0xf8641082,     0xf86c22b0,     0xf8703170,\n+    0xf8755197,     0xf87a4397,     0xf86e730b,     0xf86163ec,\n+    0xb82a80f0,     0xb82201a3,     0xb8331211,     0xb8232161,\n+    0xb83e3105,     0xb82f53dd,     0xb82040f4,     0xb8347397,\n+    0xb835633b,     0xb8a582e1,     0xb8b000bf,     0xb8ac1389,\n+    0xb8af22dd,     0xb8bf33f3,     0xb8a551ee,     0xb8bf4370,\n+    0xb8b47190,     0xb8ab60c9,     0xb8fe8371,     0xb8fc00fe,\n+    0xb8ea1154,     0xb8e42238,     0xb8f13076,     0xb8fd52cf,\n+    0xb8f342d3,     0xb8e270cf,     0xb8ec6170,     0xb86d8037,\n+    0xb87e00b3,     0xb8711202,     0xb876214d,     0xb875337d,\n+    0xb86c507b,     0xb861431f,     0xb8737131,     0xb87c61fb,\n+    0xce367a86,     0xce1e6858,     0xce768d51,     0xce910451,\n+    0xce768338,     0xce6c8622,     0xcec08363,     0xce708b9d,\n+    0x04e900da,     0x042404f1,     0x6596012f,     0x65d40b62,\n+    0x65c00745,     0x0456a72e,     0x04c0175b,     0x04109418,\n+    0x041ab006,     0x0413812f,     0x04118b65,     0x04101694,\n+    0x04d7aa0a,     0x045eb046,     0x04c81c5d,     0x044a1dd6,\n+    0x040112fb,     0x04dcad42,     0x65809aca,     0x658d9603,\n+    0x65c69201,     0x65878d8c,     0x65c28290,     0x04dda4e5,\n+    0x65c2be0c,     0x6580a386,     0x65c1a624,     0x658dae6d,\n+    0x65819638,     0x65f318ca,     0x65a030cd,     0x65a8532e,\n+    0x65bb76d6,     0x04144e23,     0x04407ce4,     0x04363270,\n+    0x04b6312f,     0x047e30b9,     0x052b6acd,     0x05b46d0d,\n+    0x041a2c99,     0x04d828d1,     0x04d93e04,     0x040829da,\n+    0x040a3c6b,     0x65c73aa1,     0x65c62a2e,     0x65d82678,\n+    0x04c13611,\n","filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h","additions":64,"deletions":63,"binary":false,"changes":127,"status":"modified"}]}