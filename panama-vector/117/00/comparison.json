{"files":[{"patch":"@@ -812,2 +812,3 @@\n-   do_signature(vector_unary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;\"              \\\n-                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$UnaryOperation;)Ljava\/lang\/Object;\")                              \\\n+   do_signature(vector_unary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;\"     \\\n+                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$UnaryOperation;)\"\\\n+                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")                                                         \\\n@@ -818,1 +819,1 @@\n-                                       \"Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$BinaryOperation;)Ljava\/lang\/Object;\")          \\\n+                                       \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$BinaryOperation;)Ljava\/lang\/Object;\") \\\n@@ -822,2 +823,4 @@\n-   do_signature(vector_ternary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;\" \\\n-                                        \"Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljava\/lang\/Object;\")        \\\n+   do_signature(vector_ternary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;\"   \\\n+                                        \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"           \\\n+                                        \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)\" \\\n+                                        \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")                                                       \\\n@@ -849,1 +852,1 @@\n-                                            \"Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorMaskedOperation;)Ljava\/lang\/Object;\")             \\\n+                                            \"Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorMaskedOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")         \\\n@@ -864,2 +867,2 @@\n-   do_signature(vector_reduction_coerced_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;\"     \\\n-                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$ReductionOperation;)J\")                                  \\\n+   do_signature(vector_reduction_coerced_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;\" \\\n+                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$ReductionOperation;)J\") \\\n@@ -906,1 +909,1 @@\n-                                           \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjava\/lang\/Object;\"                                  \\\n+                                           \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorMask;\"   \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -305,2 +305,4 @@\n-\/\/ <V, M>\n-\/\/ V unaryOp(int oprId, Class<? extends V> vmClass, Class<? extends M> maskClass, Class<?> elementType,\n+\/\/ <V extends Vector<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ V unaryOp(int oprId, Class<? extends V> vmClass, Class<? extends M> maskClass, Class<E> elementType,\n@@ -311,2 +313,4 @@\n-\/\/ <V, M>\n-\/\/ V binaryOp(int oprId, Class<? extends V> vmClass, Class<? extends M> maskClass, Class<?> elementType,\n+\/\/ <V,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ V binaryOp(int oprId, Class<? extends V> vmClass, Class<? extends M> maskClass, Class<E> elementType,\n@@ -317,2 +321,4 @@\n-\/\/ <V, M>\n-\/\/ V ternaryOp(int oprId, Class<? extends V> vmClass, Class<? extends M> maskClass, Class<?> elementType,\n+\/\/ <V extends Vector<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ V ternaryOp(int oprId, Class<? extends V> vmClass, Class<? extends M> maskClass, Class<E> elementType,\n@@ -552,1 +558,1 @@\n-\/\/  Sh ShuffleIota(Class<?> E, Class<?> ShuffleClass, Vector.Species<E> s, int length,\n+\/\/  Sh ShuffleIota(Class<?> E, Class<?> shuffleClass, Vector.Species<E> s, int length,\n@@ -702,3 +708,7 @@\n-\/\/ <VM ,Sh extends VectorShuffle<E>, E>\n-\/\/ VM shuffleToVector(Class<VM> VecClass, Class<?>E , Class<?> ShuffleClass, Sh s, int length,\n-\/\/                    ShuffleToVectorOperation<VM,Sh,E> defaultImpl)\n+\/\/ public static\n+\/\/ <V,\n+\/\/  Sh extends VectorShuffle<E>,\n+\/\/  E>\n+\/\/ V shuffleToVector(Class<? extends Vector<E>> vclass, Class<E> elementType,\n+\/\/                   Class<? extends Sh> shuffleClass, Sh s, int length,\n+\/\/                   ShuffleToVectorOperation<V, Sh, E> defaultImpl)\n@@ -763,4 +773,7 @@\n-\/\/ <V extends Vector<?,?>>\n-\/\/ V broadcastCoerced(Class<?> vectorClass, Class<?> elementType, int vlen,\n-\/\/                    long bits,\n-\/\/                    LongFunction<V> defaultImpl)\n+\/\/ public static\n+\/\/ <M,\n+\/\/  S extends VectorSpecies<E>,\n+\/\/  E>\n+\/\/ M broadcastCoerced(Class<? extends M> vmClass, Class<E> elementType, int length,\n+\/\/                    long bits, S s,\n+\/\/                    BroadcastOperation<M, E, S> defaultImpl)\n@@ -864,6 +877,9 @@\n-\/\/    <C, V extends Vector<?,?>>\n-\/\/    V load(Class<?> vectorClass, Class<?> elementType, int vlen,\n-\/\/           Object base, long offset,\n-\/\/           \/* Vector.Mask<E,S> m*\/\n-\/\/           Object container, int index,\n-\/\/           LoadOperation<C, VM> defaultImpl) {\n+\/\/ public static\n+\/\/ <C,\n+\/\/  VM,\n+\/\/  E,\n+\/\/  S extends VectorSpecies<E>>\n+\/\/ VM load(Class<? extends VM> vmClass, Class<E> elementType, int length,\n+\/\/         Object base, long offset,    \/\/ Unsafe addressing\n+\/\/         C container, int index, S s,     \/\/ Arguments for default implementation\n+\/\/         LoadOperation<C, VM, E, S> defaultImpl)\n@@ -871,6 +887,8 @@\n-\/\/    <C, V extends Vector<?,?>>\n-\/\/    void store(Class<?> vectorClass, Class<?> elementType, int vlen,\n-\/\/               Object base, long offset,\n-\/\/               V v, \/*Vector.Mask<E,S> m*\/\n-\/\/               Object container, int index,\n-\/\/               StoreVectorOperation<C, V> defaultImpl)\n+\/\/ public static\n+\/\/ <C,\n+\/\/  V extends Vector<?>>\n+\/\/ void store(Class<?> vectorClass, Class<?> elementType, int length,\n+\/\/            Object base, long offset,    \/\/ Unsafe addressing\n+\/\/            V v,\n+\/\/            C container, int index,      \/\/ Arguments for default implementation\n+\/\/            StoreVectorOperation<C, V> defaultImpl)\n@@ -1059,6 +1077,10 @@\n-\/\/    <C, V, E, S extends VectorSpecies<E>,\n-\/\/     M extends VectorMask<E>>\n-\/\/    V loadMasked(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType,\n-\/\/                 int length, Object base, long offset, M m\n-\/\/                 C container, int index, S s,  \/\/ Arguments for default implementation\n-\/\/                 LoadVectorMaskedOperation<C, V, E, S, M> defaultImpl) {\n+\/\/ public static\n+\/\/ <C,\n+\/\/  V extends Vector<?>,\n+\/\/  E,\n+\/\/  S extends VectorSpecies<E>,\n+\/\/  M extends VectorMask<E>>\n+\/\/ V loadMasked(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType,\n+\/\/              int length, Object base, long offset, M m,\n+\/\/              C container, int index, S s,  \/\/ Arguments for default implementation\n+\/\/              LoadVectorMaskedOperation<C, V, S, M> defaultImpl) {\n@@ -1066,7 +1088,10 @@\n-\/\/    <C, V extends Vector<?>,\n-\/\/     M extends VectorMask<?>>\n-\/\/    void storeMasked(Class<?> vectorClass, Class<M> maskClass, Class<?> elementType,\n-\/\/                     int length, Object base, long offset,\n-\/\/                     V v, M m,\n-\/\/                     C container, int index,  \/\/ Arguments for default implementation\n-\/\/                     StoreVectorMaskedOperation<C, V, M> defaultImpl) {\n+\/\/ public static\n+\/\/ <C,\n+\/\/  V extends Vector<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ void storeMasked(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType,\n+\/\/                  int length, Object base, long offset,\n+\/\/                  V v, M m,\n+\/\/                  C container, int index,  \/\/ Arguments for default implementation\n+\/\/                  StoreVectorMaskedOperation<C, V, M, E> defaultImpl) {\n@@ -1289,8 +1314,12 @@\n-\/\/   <C, V extends Vector<?>, W extends Vector<Integer>, E,\n-\/\/    S extends VectorSpecies<E>, M extends VectorMask<E>>\n-\/\/   V loadWithMap(Class<?> vectorClass, Class<M> maskClass, Class<E> E, int length,\n-\/\/                 Class<?> vectorIndexClass,\n-\/\/                 Object base, long offset, \/\/ Unsafe addressing\n-\/\/                 W index_vector, M m,\n-\/\/                 C container, int index, int[] indexMap, int indexM, S s, \/\/ Arguments for default implementation\n-\/\/                 LoadVectorOperationWithMap<C, V, E, S, M> defaultImpl)\n+\/\/ <C,\n+\/\/  V extends Vector<?>,\n+\/\/  W extends Vector<Integer>,\n+\/\/  S extends VectorSpecies<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ V loadWithMap(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType, int length,\n+\/\/               Class<? extends Vector<Integer>> vectorIndexClass,\n+\/\/               Object base, long offset, \/\/ Unsafe addressing\n+\/\/               W index_vector, M m,\n+\/\/               C container, int index, int[] indexMap, int indexM, S s, \/\/ Arguments for default implementation\n+\/\/               LoadVectorOperationWithMap<C, V, E, S, M> defaultImpl)\n@@ -1298,6 +1327,10 @@\n-\/\/    <C, V extends Vector<?>, W extends Vector<Integer>, M extends VectorMask<?>>\n-\/\/    void storeWithMap(Class<?> vectorClass, Class<M> maskClass, Class<?> elementType,\n-\/\/                      int length, Class<?> vectorIndexClass, Object base, long offset,    \/\/ Unsafe addressing\n-\/\/                      W index_vector, V v, M m,\n-\/\/                      C container, int index, int[] indexMap, int indexM, \/\/ Arguments for default implementation\n-\/\/                      StoreVectorOperationWithMap<C, V, M> defaultImpl)\n+\/\/  <C,\n+\/\/   V extends Vector<E>,\n+\/\/   W extends Vector<Integer>,\n+\/\/   M extends VectorMask<E>,\n+\/\/   E>\n+\/\/  void storeWithMap(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType,\n+\/\/                    int length, Class<? extends Vector<Integer>> vectorIndexClass, Object base, long offset,    \/\/ Unsafe addressing\n+\/\/                    W index_vector, V v, M m,\n+\/\/                    C container, int index, int[] indexMap, int indexM, \/\/ Arguments for default implementation\n+\/\/                    StoreVectorOperationWithMap<C, V, M, E> defaultImpl)\n@@ -1490,1 +1523,4 @@\n-\/\/ <V, M>\n+\/\/ public static\n+\/\/ <V extends Vector<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n@@ -1492,1 +1528,1 @@\n-\/\/                       Class<?> elementType, int length, V v, M m,\n+\/\/                       Class<E> elementType, int length, V v, M m,\n@@ -1494,1 +1530,0 @@\n-\/\/\n@@ -1708,2 +1743,4 @@\n-\/\/ <V extends Vector, M extends Mask>\n-\/\/ V blend(Class<V> vectorClass, Class<M> maskClass, Class<?> elementType, int vlen,\n+\/\/ <V extends Vector<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ V blend(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType, int vlen,\n@@ -1711,2 +1748,1 @@\n-\/\/         VectorBlendOp<V,M> defaultImpl)\n-\/\/\n+\/\/         VectorBlendOp<V, M, E> defaultImpl)\n@@ -1779,4 +1815,5 @@\n-\/\/  public static <V extends Vector<E,S>,\n-\/\/          M extends Vector.Mask<E,S>,\n-\/\/          S extends Vector.Shape, E>\n-\/\/  M compare(int cond, Class<V> vectorClass, Class<M> maskClass, Class<?> elementType, int vlen,\n+\/\/  public static\n+\/\/  <V extends Vector<E>,\n+\/\/   M extends VectorMask<E>,\n+\/\/   E>\n+\/\/  M compare(int cond, Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType, int vlen,\n@@ -1785,1 +1822,0 @@\n-\/\/\n@@ -1901,4 +1937,4 @@\n-\/\/     Sh extends VectorShuffle<E>,\n-\/\/     M extends VectorMask<E>,\n-\/\/     E>\n-\/\/ V rearrangeOp(Class<? extends V> vectorClass, Class<Sh> shuffleClass, Class<M> maskClass, Class<?> elementType, int vlen,\n+\/\/  Sh extends VectorShuffle<E>,\n+\/\/  M extends VectorMask<E>,\n+\/\/  E>\n+\/\/ V rearrangeOp(Class<? extends V> vectorClass, Class<Sh> shuffleClass, Class<M> maskClass, Class<E> elementType, int vlen,\n@@ -1906,1 +1942,1 @@\n-\/\/               VectorRearrangeOp<V,Sh,M,E> defaultImpl)\n+\/\/               VectorRearrangeOp<V, Sh, M, E> defaultImpl)\n@@ -2086,1 +2122,3 @@\n-\/\/  <V extends Vector<?>, M>\n+\/\/  <V extends Vector<E>,\n+\/\/   M extends VectorMask<E>,\n+\/\/   E>\n@@ -2088,1 +2126,1 @@\n-\/\/                 Class<?> elementType, int length,\n+\/\/                 Class<E> elementType, int length,\n@@ -2090,2 +2128,1 @@\n-\/\/                 VectorBroadcastIntOp<V> defaultImpl)\n-\/\/\n+\/\/                 VectorBroadcastIntOp<V, M> defaultImpl)\n@@ -2468,2 +2505,3 @@\n-\/\/  <V extends Vector<?>>\n-\/\/  V insert(Class<? extends V> vectorClass, Class<?> elementType, int vlen,\n+\/\/  <V extends Vector<E>,\n+\/\/   E>\n+\/\/  V insert(Class<? extends V> vectorClass, Class<E> elementType, int vlen,\n@@ -2472,1 +2510,0 @@\n-\/\/\n@@ -2561,2 +2598,3 @@\n-\/\/  <V extends Vector<?>>\n-\/\/  long extract(Class<?> vectorClass, Class<?> elementType, int vlen,\n+\/\/  <V extends Vector<E>,\n+\/\/   E>\n+\/\/  long extract(Class<? extends V> vectorClass, Class<E> elementType, int vlen,\n@@ -2565,1 +2603,0 @@\n-\/\/\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":117,"deletions":80,"binary":false,"changes":197,"status":"modified"},{"patch":"@@ -522,1 +522,1 @@\n-                                   VectorSupport.StoreVectorMaskedOperation<ByteBuffer, V, M> defaultImpl) {\n+                                   VectorSupport.StoreVectorMaskedOperation<ByteBuffer, V, M, E> defaultImpl) {\n@@ -543,1 +543,1 @@\n-                                         VectorSupport.StoreVectorMaskedOperation<ByteBuffer, V, M> defaultImpl) {\n+                                         VectorSupport.StoreVectorMaskedOperation<ByteBuffer, V, M, E> defaultImpl) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,2 +159,2 @@\n-    public interface BroadcastOperation<VM, E, S extends VectorSpecies<E>> {\n-        VM broadcast(long l, S s);\n+    public interface BroadcastOperation<M, E, S extends VectorSpecies<E>> {\n+        M broadcast(long l, S s);\n@@ -165,4 +165,6 @@\n-    <VM, E, S extends VectorSpecies<E>>\n-    VM broadcastCoerced(Class<? extends VM> vmClass, Class<E> E, int length,\n-                                  long bits, S s,\n-                                  BroadcastOperation<VM, E, S> defaultImpl) {\n+    <M,\n+     S extends VectorSpecies<E>,\n+     E>\n+    M broadcastCoerced(Class<? extends M> vmClass, Class<E> elementType, int length,\n+                       long bits, S s,\n+                       BroadcastOperation<M, E, S> defaultImpl) {\n@@ -180,2 +182,4 @@\n-    <E, S extends VectorSpecies<E>>\n-    VectorShuffle<E> shuffleIota(Class<?> E, Class<?> ShuffleClass, S s, int length,\n+    <E,\n+     S extends VectorSpecies<E>,\n+     Sh extends VectorShuffle<E>>\n+    VectorShuffle<E> shuffleIota(Class<E> elementType, Class<? extends Sh> shuffleClass, S s, int length,\n@@ -187,2 +191,2 @@\n-    public interface ShuffleToVectorOperation<VM, Sh, E> {\n-       VM apply(Sh s);\n+    public interface ShuffleToVectorOperation<V, Sh extends VectorShuffle<E>, E> {\n+       V apply(Sh s);\n@@ -193,3 +197,6 @@\n-    <VM ,Sh extends VectorShuffle<E>, E>\n-    VM shuffleToVector(Class<?> VM, Class<?>E , Class<?> ShuffleClass, Sh s, int length,\n-                       ShuffleToVectorOperation<VM,Sh,E> defaultImpl) {\n+    <V,\n+     Sh extends VectorShuffle<E>,\n+     E>\n+    V shuffleToVector(Class<? extends Vector<E>> vclass, Class<E> elementType,\n+                      Class<? extends Sh> shuffleClass, Sh s, int length,\n+                      ShuffleToVectorOperation<V, Sh, E> defaultImpl) {\n@@ -217,0 +224,4 @@\n+    public interface ReductionOperation<V extends Vector<?>, M extends VectorMask<?>> {\n+        long apply(V v, M mask);\n+    }\n+\n@@ -219,1 +230,3 @@\n-    <V, M>\n+    <V extends Vector<E>,\n+     M extends VectorMask<E>,\n+     E>\n@@ -221,1 +234,1 @@\n-                          Class<?> elementType, int length, V v, M m,\n+                          Class<E> elementType, int length, V v, M m,\n@@ -227,4 +240,0 @@\n-    public interface ReductionOperation<V, M> {\n-        long apply(V v, M mask);\n-    }\n-\n@@ -240,2 +249,3 @@\n-    <V extends Vector<?>>\n-    long extract(Class<?> vectorClass, Class<?> elementType, int vlen,\n+    <V extends Vector<E>,\n+     E>\n+    long extract(Class<? extends V> vectorClass, Class<E> elementType, int vlen,\n@@ -256,2 +266,3 @@\n-    <V extends Vector<?>>\n-    V insert(Class<? extends V> vectorClass, Class<?> elementType, int vlen,\n+    <V extends Vector<E>,\n+     E>\n+    V insert(Class<? extends V> vectorClass, Class<E> elementType, int vlen,\n@@ -268,1 +279,3 @@\n-    <V, M>\n+    <V extends Vector<E>,\n+     M extends VectorMask<E>,\n+     E>\n@@ -270,1 +283,1 @@\n-              Class<?> elementType, int length, V v, M m,\n+              Class<E> elementType, int length, V v, M m,\n@@ -276,1 +289,1 @@\n-    public interface UnaryOperation<V, M> {\n+    public interface UnaryOperation<V extends Vector<?>, M extends VectorMask<?>> {\n@@ -284,1 +297,3 @@\n-    <V, M>\n+    <V,\n+     M extends VectorMask<E>,\n+     E>\n@@ -286,1 +301,1 @@\n-               Class<?> elementType, int length, V v1, V v2, M m,\n+               Class<E> elementType, int length, V v1, V v2, M m,\n@@ -292,1 +307,1 @@\n-    public interface BinaryOperation<V, M> {\n+    public interface BinaryOperation<V, M extends VectorMask<?>> {\n@@ -300,1 +315,3 @@\n-    <V, M>\n+    <V extends Vector<E>,\n+     M extends VectorMask<E>,\n+     E>\n@@ -302,1 +319,1 @@\n-                Class<?> elementType, int length, V v1, V v2, V v3, M m,\n+                Class<E> elementType, int length, V v1, V v2, V v3, M m,\n@@ -308,1 +325,1 @@\n-    public interface TernaryOperation<V, M> {\n+    public interface TernaryOperation<V extends Vector<?>, M extends VectorMask<?>> {\n@@ -322,2 +339,5 @@\n-    <C, VM, E, S extends VectorSpecies<E>>\n-    VM load(Class<? extends VM> vmClass, Class<E> E, int length,\n+    <C,\n+     V,\n+     E,\n+     S extends VectorSpecies<E>>\n+    V load(Class<? extends V> vClass, Class<E> elementType, int length,\n@@ -326,1 +346,1 @@\n-           LoadOperation<C, VM, E, S> defaultImpl) {\n+           LoadOperation<C, V, E, S> defaultImpl) {\n@@ -333,1 +353,3 @@\n-    public interface LoadVectorMaskedOperation<C, V, E, S extends VectorSpecies<E>, M extends VectorMask<E>> {\n+    public interface LoadVectorMaskedOperation<C, V extends Vector<?>, E,\n+                                               S extends VectorSpecies<E>,\n+                                               M extends VectorMask<E>> {\n@@ -339,1 +361,4 @@\n-    <C, V, E, S extends VectorSpecies<E>,\n+    <C,\n+     V extends Vector<?>,\n+     E,\n+     S extends VectorSpecies<E>,\n@@ -358,4 +383,8 @@\n-    <C, V extends Vector<?>, W extends Vector<Integer>, E,\n-     S extends VectorSpecies<E>, M extends VectorMask<E>>\n-    V loadWithMap(Class<?> vectorClass, Class<M> maskClass, Class<E> E, int length,\n-                  Class<?> vectorIndexClass,\n+    <C,\n+     V extends Vector<?>,\n+     W extends Vector<Integer>,\n+     S extends VectorSpecies<E>,\n+     M extends VectorMask<E>,\n+     E>\n+    V loadWithMap(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType, int length,\n+                  Class<? extends Vector<Integer>> vectorIndexClass,\n@@ -378,1 +407,2 @@\n-    <C, V extends Vector<?>>\n+    <C,\n+     V extends Vector<?>>\n@@ -388,1 +418,1 @@\n-    public interface StoreVectorMaskedOperation<C, V extends Vector<?>, M extends VectorMask<?>> {\n+    public interface StoreVectorMaskedOperation<C, V extends Vector<E>, M extends VectorMask<E>, E> {\n@@ -394,3 +424,5 @@\n-    <C, V extends Vector<?>,\n-     M extends VectorMask<?>>\n-    void storeMasked(Class<?> vectorClass, Class<M> maskClass, Class<?> elementType,\n+    <C,\n+     V extends Vector<E>,\n+     M extends VectorMask<E>,\n+     E>\n+    void storeMasked(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType,\n@@ -400,1 +432,1 @@\n-                     StoreVectorMaskedOperation<C, V, M> defaultImpl) {\n+                     StoreVectorMaskedOperation<C, V, M, E> defaultImpl) {\n@@ -407,1 +439,1 @@\n-    public interface StoreVectorOperationWithMap<C, V extends Vector<?>, M extends VectorMask<?>> {\n+    public interface StoreVectorOperationWithMap<C, V extends Vector<E>, M extends VectorMask<E>, E> {\n@@ -413,3 +445,7 @@\n-    <C, V extends Vector<?>, W extends Vector<Integer>, M extends VectorMask<?>>\n-    void storeWithMap(Class<?> vectorClass, Class<M> maskClass, Class<?> elementType,\n-                      int length, Class<?> vectorIndexClass, Object base, long offset,    \/\/ Unsafe addressing\n+    <C,\n+     V extends Vector<E>,\n+     W extends Vector<Integer>,\n+     M extends VectorMask<E>,\n+     E>\n+    void storeWithMap(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType,\n+                      int length, Class<? extends Vector<Integer>> vectorIndexClass, Object base, long offset,    \/\/ Unsafe addressing\n@@ -418,1 +454,1 @@\n-                      StoreVectorOperationWithMap<C, V, M> defaultImpl) {\n+                      StoreVectorOperationWithMap<C, V, M, E> defaultImpl) {\n@@ -442,4 +478,5 @@\n-    public static <V extends Vector<E>,\n-                   M extends VectorMask<E>,\n-                   E>\n-    M compare(int cond, Class<? extends V> vectorClass, Class<M> maskClass, Class<?> elementType, int length,\n+    public static\n+    <V extends Vector<E>,\n+     M extends VectorMask<E>,\n+     E>\n+    M compare(int cond, Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType, int length,\n@@ -453,4 +490,2 @@\n-    public interface VectorRearrangeOp<V extends Vector<E>,\n-            Sh extends VectorShuffle<E>,\n-            M  extends VectorMask<E>,\n-            E> {\n+    public interface VectorRearrangeOp<V extends Vector<E>, Sh extends VectorShuffle<E>,\n+                                       M  extends VectorMask<E>, E> {\n@@ -463,4 +498,4 @@\n-            Sh extends VectorShuffle<E>,\n-            M  extends VectorMask<E>,\n-            E>\n-    V rearrangeOp(Class<? extends V> vectorClass, Class<Sh> shuffleClass, Class<M> maskClass, Class<?> elementType, int vlen,\n+     Sh extends VectorShuffle<E>,\n+     M  extends VectorMask<E>,\n+     E>\n+    V rearrangeOp(Class<? extends V> vectorClass, Class<Sh> shuffleClass, Class<M> maskClass, Class<E> elementType, int vlen,\n@@ -468,1 +503,1 @@\n-                  VectorRearrangeOp<V,Sh,M,E> defaultImpl) {\n+                  VectorRearrangeOp<V, Sh, M, E> defaultImpl) {\n@@ -486,1 +521,1 @@\n-    V blend(Class<? extends V> vectorClass, Class<M> maskClass, Class<?> elementType, int length,\n+    V blend(Class<? extends V> vectorClass, Class<M> maskClass, Class<E> elementType, int length,\n@@ -488,1 +523,1 @@\n-            VectorBlendOp<V,M, E> defaultImpl) {\n+            VectorBlendOp<V, M, E> defaultImpl) {\n@@ -495,1 +530,1 @@\n-    public interface VectorBroadcastIntOp<V extends Vector<?>, M> {\n+    public interface VectorBroadcastIntOp<V extends Vector<?>, M extends VectorMask<?>> {\n@@ -501,1 +536,3 @@\n-    <V extends Vector<?>, M>\n+    <V extends Vector<E>,\n+     M extends VectorMask<E>,\n+     E>\n@@ -503,1 +540,1 @@\n-                   Class<?> elementType, int length,\n+                   Class<E> elementType, int length,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":107,"deletions":70,"binary":false,"changes":177,"status":"modified"}]}