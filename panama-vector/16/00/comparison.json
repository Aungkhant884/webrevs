{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,1 @@\n+        int elemSize = 0;\n@@ -79,0 +80,1 @@\n+            elemSize = Byte.SIZE;\n@@ -81,0 +83,1 @@\n+            elemSize = Short.SIZE;\n@@ -83,0 +86,1 @@\n+            elemSize = Integer.SIZE;\n@@ -85,0 +89,1 @@\n+            elemSize = Long.SIZE;\n@@ -87,0 +92,1 @@\n+            elemSize = Float.SIZE;\n@@ -89,0 +95,1 @@\n+            elemSize = Double.SIZE;\n@@ -93,0 +100,1 @@\n+        VectorShape largestShape = VectorShape.forBitSize(VectorSupport.getMaxLaneCount(c) * elemSize);\n@@ -94,2 +102,2 @@\n-        System.out.println(\"class = \"+c+\"; preferred species\"+species+\"; largest species = \"+largestSpecies+\"; maxSize=\"+VectorSupport.getMaxLaneCount(c));\n-        Assert.assertEquals(species.vectorShape(), largestSpecies.vectorShape());\n+        System.out.println(\"class = \"+c+\"; largest species = \"+largestSpecies+\"; maxSize=\"+VectorSupport.getMaxLaneCount(c));\n+        Assert.assertEquals(largestSpecies.vectorShape(), largestShape);\n@@ -97,0 +105,1 @@\n+        Assert.assertEquals(largestSpecies.length(), Math.max(species.length(), VectorSupport.getMaxLaneCount(c)));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/PreferredSpeciesTest.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"}]}