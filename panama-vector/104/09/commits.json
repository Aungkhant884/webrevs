[{"commit":{"message":"Revert: gitignore(s)"},"files":[],"sha":"542ce4c1336e15ea16f36700a7ccf4d354dcacf1"},{"commit":{"message":"CR changes:\n* reformat checks\n* bring array mismatched access back"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"cf6190feb6cf9510c3097b43325468b826d1ce29"},{"commit":{"message":"Code review changes:\n* make specied final static in test\n* use Unsafe to check if ByteBuffer is readOnly\n* remove if in X-ScopedMemory when loading \/ storing vectors,\n   stay with byte[] cast\n* inline copyMemory in micro benchmark"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMemoryAlias.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ByteBufferVectorAccess.java"}],"sha":"ccb7e68f4a2bd4a50d0c98970a763a7f652cee0b"},{"commit":{"message":"Minor stylistic fixes."},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"472f0a17746fb86d275c8e54bbd07328c24dbc4d"},{"commit":{"message":"Put barrier when accessing on-heap types which may not be an array"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"b315eafa36dfd12dbea347eec26d246a973642b0"},{"commit":{"message":"Revert: polluted case support\n\nThis is not something we want to fix with this PR, and can be moved to other PR."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"}],"sha":"4f992d88cb735bdefa75f7cbff546ce4f63f85b9"},{"commit":{"message":"Benchamk fixes"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ByteBufferVectorAccess.java"}],"sha":"dc5ef5a1f7dbbfc9dd36fadb4517f059b698ac62"},{"commit":{"message":"Remove some accidental line"},"files":[],"sha":"fe190ec31d098d3d3ea040ea95541d8ae7212387"},{"commit":{"message":"Support polluted cases.\n\nFactor load and stores to supported polluted cases.\n\nUse more immutable memory and instance fields, to avoid\nvirtual calls.\n\nUse immutable memory to help unswitching loops.\n\nThis code works suspicousyly well (I see loop get unswitched 4 times).\n\n```\nBenchmark                                (size)  Mode  Cnt   Score   Error  Units\nByteBufferVectorAccess.arrayCopy           1024  avgt   10  14.524 ? 0.356  ns\/op\nByteBufferVectorAccess.directBuffers       1024  avgt   10  19.633 ? 0.137  ns\/op\nByteBufferVectorAccess.heapBuffers         1024  avgt   10  19.148 ? 0.505  ns\/op\nByteBufferVectorAccess.pollutedBuffers2    1024  avgt   10  31.682 ? 0.762  ns\/op\nByteBufferVectorAccess.pollutedBuffers3    1024  avgt   10  74.878 ? 1.127  ns\/op\nByteBufferVectorAccess.pollutedBuffers4    1024  avgt   10  71.133 ? 1.822  ns\/op\nByteBufferVectorAccess.pollutedBuffers5    1024  avgt   10  66.990 ? 1.323  ns\/op\n```\n\nWith loop unrolling\n```\nBenchmark                                (size)  Mode  Cnt     Score    Error  Units\nByteBufferVectorAccess.arrayCopy           1024  avgt   10    14.517 ?  0.103  ns\/op\nByteBufferVectorAccess.directBuffers       1024  avgt   10    12.140 ?  0.134  ns\/op\nByteBufferVectorAccess.pollutedBuffers2    1024  avgt   10    34.582 ?  0.250  ns\/op\nByteBufferVectorAccess.pollutedBuffers3    1024  avgt   10    69.405 ?  0.845  ns\/op\nByteBufferVectorAccess.pollutedBuffers4    1024  avgt   10    58.719 ?  0.491  ns\/op\nByteBufferVectorAccess.pollutedBuffers5    1024  avgt   10    60.044 ?  0.338  ns\/op\n```\nplus heap buff which sometimes executes slower...\n```\nByteBufferVectorAccess.heapBuffers    1024  avgt   10  15.878 ? 0.423  ns\/op\n```"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ByteBufferVectorAccess.java"}],"sha":"4852ea23dfd1fdc4783a8525028c6fa5d4f77130"},{"commit":{"message":"Revert \"Refactor: use library access checks\"\n\nThis reverts commit 0caf08550d96a7630049946fcd49371f6b7d592c."},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"ed6c744db4927bdc4a957da1cb48f983aa64cb07"},{"commit":{"message":"White space fix"},"files":[],"sha":"4f44dbc8e48fd8ae31a0001fbecca215124c6fef"},{"commit":{"message":"Remove buffer checks in ScopedMemoryAccess\n\nThis checks right now do not bring anything useful (right now),\nperformance issues has to be addressd in different way."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"}],"sha":"bc19a2e44c9e74c64924a1191a5d58d80b21cc4d"},{"commit":{"message":"Refactor: use library access checks\n\n- extract access \/decorators checks from library_call\n- re-use extracted code to build fencing for vectors"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"0caf08550d96a7630049946fcd49371f6b7d592c"},{"commit":{"message":"Added jtreg test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMemoryAlias.java"}],"sha":"a8d4b218374657a60a9f34f9770bacc6bd42df82"},{"commit":{"message":"Revert template"},"files":[{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"}],"sha":"f0007d105ef413a17d5f40e565081672918f1410"},{"commit":{"message":"Ignore"},"files":[],"sha":"a0377831377937382bbeace48478b52c5ed61139"},{"commit":{"message":"Make comparision same like in access fence"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"7ff7e2e7c7bcb5daa118adf178cc6938014c9294"},{"commit":{"message":"Avoid unneded casts, new mixed test"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ByteBufferVectorAccess.java"}],"sha":"601b5ed11b8fda0901a6979e3c1aec9627a95129"},{"commit":{"message":"Move null \/ byte closer to intrinsic"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ByteBufferVectorAccess.java"}],"sha":"3b64e73537be2aa51ff5cd8d9a0df1fa9c96c33f"},{"commit":{"message":"Add missing templates"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template"}],"sha":"49c3d9d9086736f77dcc296cf52e9980b8365dac"},{"commit":{"message":"Check for mixed access."},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java"},{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ByteBufferVectorAccess.java"}],"sha":"86a5390356a8b4c37e8f2c32ac76c9520228aeed"}]