{"files":[{"patch":"@@ -617,2 +617,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( \/* as def'd in frame section *\/ )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class compiler_method_reg        ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class interpreter_method_reg     ( \/* as def'd in frame section *\/ )\n@@ -2423,6 +2423,0 @@\n-int Matcher::regnum_to_fpu_offset(int regnum)\n-{\n-  Unimplemented();\n-  return 0;\n-}\n-\n@@ -4078,3 +4072,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for C & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n@@ -4087,2 +4078,2 @@\n-  \/\/ Method Oop Register when calling interpreter.\n-  interpreter_method_oop_reg(R12);\n+  \/\/ Method Register when calling interpreter.\n+  interpreter_method_reg(R12);\n@@ -5677,1 +5668,1 @@\n-operand interpreter_method_oop_RegP(iRegP reg)\n+operand interpreter_method_RegP(iRegP reg)\n@@ -5679,1 +5670,1 @@\n-  constraint(ALLOC_IN_RC(method_reg)); \/\/ interpreter_method_oop_reg\n+  constraint(ALLOC_IN_RC(method_reg)); \/\/ interpreter_method_reg\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":6,"deletions":15,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1004,4 +1004,0 @@\n-int Matcher::regnum_to_fpu_offset(int regnum) {\n-  return regnum - 32; \/\/ The FP registers are in the second chunk\n-}\n-\n@@ -1671,3 +1667,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for native & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n@@ -1677,1 +1670,1 @@\n-  interpreter_method_oop_reg(R_Rmethod); \/\/ Method Oop Register when calling interpreter\n+  interpreter_method_reg(R_Rmethod);     \/\/ Method Register when calling interpreter\n@@ -2537,1 +2530,1 @@\n-operand interpreter_method_oop_regP(iRegP reg) %{\n+operand interpreter_method_regP(iRegP reg) %{\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -538,2 +538,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( as defined in frame section )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( as defined in frame section )\n+\/\/ 2) reg_class compiler_method_reg        ( as defined in frame section )\n+\/\/ 2) reg_class interpreter_method_reg     ( as defined in frame section )\n@@ -1373,25 +1373,0 @@\n-\/\/ Macro used instead of the common __ to emulate the pipes of PPC.\n-\/\/ Instead of e.g. __ ld(...) one hase to write ___(ld) ld(...) This enables the\n-\/\/ micro scheduler to cope with \"hand written\" assembler like in the prolog. Though\n-\/\/ still no scheduling of this code is possible, the micro scheduler is aware of the\n-\/\/ code and can update its internal data. The following mechanism is used to achieve this:\n-\/\/ The micro scheduler calls size() of each compound node during scheduling. size() does a\n-\/\/ dummy emit and only during this dummy emit C->hb_scheduling() is not NULL.\n-#if 0 \/\/ TODO: PPC port\n-#define ___(op) if (UsePower6SchedulerPPC64 && C->hb_scheduling())                    \\\n-                  C->hb_scheduling()->_pdScheduling->PdEmulatePipe(ppc64Opcode_##op); \\\n-                _masm.\n-#define ___stop if (UsePower6SchedulerPPC64 && C->hb_scheduling())                    \\\n-                  C->hb_scheduling()->_pdScheduling->PdEmulatePipe(archOpcode_none)\n-#define ___advance if (UsePower6SchedulerPPC64 && C->hb_scheduling())                 \\\n-                  C->hb_scheduling()->_pdScheduling->advance_offset\n-#else\n-#define ___(op) if (UsePower6SchedulerPPC64)                                          \\\n-                  Unimplemented();                                                    \\\n-                _masm.\n-#define ___stop if (UsePower6SchedulerPPC64)                                          \\\n-                  Unimplemented()\n-#define ___advance if (UsePower6SchedulerPPC64)                                       \\\n-                  Unimplemented()\n-#endif\n-\n@@ -1417,1 +1392,1 @@\n-    ___(nop) nop();\n+    __ nop();\n@@ -1420,1 +1395,1 @@\n-    ___(mflr) mflr(return_pc);\n+    __ mflr(return_pc);\n@@ -1480,1 +1455,1 @@\n-          ___(ld) ld(R0,  (int)(signed short)stdoffset, R1_SP);\n+          __ ld(R0,  (int)(signed short)stdoffset, R1_SP);\n@@ -1482,1 +1457,1 @@\n-          ___(std) std(R0, (int)(signed short)stdoffset, R1_SP);\n+          __ std(R0, (int)(signed short)stdoffset, R1_SP);\n@@ -1490,1 +1465,1 @@\n-        ___(addis) addis(tmp, R1_SP, hi);\n+        __ addis(tmp, R1_SP, hi);\n@@ -1492,1 +1467,1 @@\n-          ___(ld) ld(R0, lo, tmp);\n+          __ ld(R0, lo, tmp);\n@@ -1494,1 +1469,1 @@\n-          ___(std) std(R0, lo, tmp);\n+          __ std(R0, lo, tmp);\n@@ -1509,10 +1484,0 @@\n-  \/\/ Optimized version for most common case.\n-  if (UsePower6SchedulerPPC64 &&\n-      !method_is_frameless && Assembler::is_simm((int)(-offset), 16) &&\n-      !(false \/* ConstantsALot TODO: PPC port*\/)) {\n-    ___(or) mr(callers_sp, R1_SP);\n-    ___(std) std(return_pc, _abi(lr), R1_SP);\n-    ___(stdu) stdu(R1_SP, -offset, R1_SP);\n-    return;\n-  }\n-\n@@ -1521,1 +1486,1 @@\n-    ___(or) mr(callers_sp, R1_SP);\n+    __ mr(callers_sp, R1_SP);\n@@ -1530,1 +1495,1 @@\n-      ___(stdu) stdu(R1_SP, -offset, R1_SP);\n+      __ stdu(R1_SP, -offset, R1_SP);\n@@ -1534,5 +1499,5 @@\n-      ___(addis)  lis( tmp, (int)((signed short)(((x >> 32) & 0xffff0000) >> 16)));\n-      ___(ori)    ori( tmp, tmp, ((x >> 32) & 0x0000ffff));\n-      ___(rldicr) sldi(tmp, tmp, 32);\n-      ___(oris)   oris(tmp, tmp, (x & 0xffff0000) >> 16);\n-      ___(ori)    ori( tmp, tmp, (x & 0x0000ffff));\n+      __ lis( tmp, (int)((signed short)(((x >> 32) & 0xffff0000) >> 16)));\n+      __ ori( tmp, tmp, ((x >> 32) & 0x0000ffff));\n+      __ sldi(tmp, tmp, 32);\n+      __ oris(tmp, tmp, (x & 0xffff0000) >> 16);\n+      __ ori( tmp, tmp, (x & 0x0000ffff));\n@@ -1540,1 +1505,1 @@\n-      ___(stdux) stdux(R1_SP, R1_SP, tmp);\n+      __ stdux(R1_SP, R1_SP, tmp);\n@@ -1555,1 +1520,1 @@\n-    ___(std) std(return_pc, _abi(lr), callers_sp);\n+    __ std(return_pc, _abi(lr), callers_sp);\n@@ -1560,3 +1525,0 @@\n-#undef ___\n-#undef ___stop\n-#undef ___advance\n@@ -1644,29 +1606,0 @@\n-#if 0 \/\/ TODO: PPC port\n-void MachLoadPollAddrLateNode::emit(CodeBuffer& cbuf, PhaseRegAlloc* ra_) const {\n-  C2_MacroAssembler _masm(&cbuf);\n-  if (LoadPollAddressFromThread) {\n-    _masm.ld(R11, in_bytes(JavaThread::poll_address_offset()), R16_thread);\n-  } else {\n-    _masm.nop();\n-  }\n-}\n-\n-uint MachLoadPollAddrLateNode::size(PhaseRegAlloc* ra_) const {\n-  if (LoadPollAddressFromThread) {\n-    return 4;\n-  } else {\n-    return 4;\n-  }\n-}\n-\n-#ifndef PRODUCT\n-void MachLoadPollAddrLateNode::format(PhaseRegAlloc* ra_, outputStream* st) const {\n-  st->print_cr(\" LD R11, PollAddressOffset, R16_thread \\t\/\/ LoadPollAddressFromThread\");\n-}\n-#endif\n-\n-const RegMask &MachLoadPollAddrLateNode::out_RegMask() const {\n-  return RSCRATCH1_BITS64_REG_mask();\n-}\n-#endif \/\/ PPC port\n-\n@@ -1955,96 +1888,0 @@\n-#if 0 \/\/ TODO: PPC port\n-ArchOpcode MachSpillCopyNode_archOpcode(MachSpillCopyNode *n, PhaseRegAlloc *ra_) {\n-#ifndef PRODUCT\n-  if (ra_->node_regs_max_index() == 0) return archOpcode_undefined;\n-#endif\n-  assert(ra_->node_regs_max_index() != 0, \"\");\n-\n-  \/\/ Get registers to move.\n-  OptoReg::Name src_hi = ra_->get_reg_second(n->in(1));\n-  OptoReg::Name src_lo = ra_->get_reg_first(n->in(1));\n-  OptoReg::Name dst_hi = ra_->get_reg_second(n);\n-  OptoReg::Name dst_lo = ra_->get_reg_first(n);\n-\n-  enum RC src_lo_rc = rc_class(src_lo);\n-  enum RC dst_lo_rc = rc_class(dst_lo);\n-\n-  if (src_lo == dst_lo && src_hi == dst_hi)\n-    return ppc64Opcode_none;            \/\/ Self copy, no move.\n-\n-  \/\/ --------------------------------------\n-  \/\/ Memory->Memory Spill. Use R0 to hold the value.\n-  if (src_lo_rc == rc_stack && dst_lo_rc == rc_stack) {\n-    return ppc64Opcode_compound;\n-  }\n-\n-  \/\/ --------------------------------------\n-  \/\/ Check for float->int copy; requires a trip through memory.\n-  if (src_lo_rc == rc_float && dst_lo_rc == rc_int) {\n-    Unimplemented();\n-  }\n-\n-  \/\/ --------------------------------------\n-  \/\/ Check for integer reg-reg copy.\n-  if (src_lo_rc == rc_int && dst_lo_rc == rc_int) {\n-    Register Rsrc = as_Register(Matcher::_regEncode[src_lo]);\n-    Register Rdst = as_Register(Matcher::_regEncode[dst_lo]);\n-    if (Rsrc == Rdst) {\n-      return ppc64Opcode_none;\n-    } else {\n-      return ppc64Opcode_or;\n-    }\n-  }\n-\n-  \/\/ Check for integer store.\n-  if (src_lo_rc == rc_int && dst_lo_rc == rc_stack) {\n-    if (src_hi != OptoReg::Bad) {\n-      return ppc64Opcode_std;\n-    } else {\n-      return ppc64Opcode_stw;\n-    }\n-  }\n-\n-  \/\/ Check for integer load.\n-  if (dst_lo_rc == rc_int && src_lo_rc == rc_stack) {\n-    if (src_hi != OptoReg::Bad) {\n-      return ppc64Opcode_ld;\n-    } else {\n-      return ppc64Opcode_lwz;\n-    }\n-  }\n-\n-  \/\/ Check for float reg-reg copy.\n-  if (src_lo_rc == rc_float && dst_lo_rc == rc_float) {\n-    return ppc64Opcode_fmr;\n-  }\n-\n-  \/\/ Check for float store.\n-  if (src_lo_rc == rc_float && dst_lo_rc == rc_stack) {\n-    if (src_hi != OptoReg::Bad) {\n-      return ppc64Opcode_stfd;\n-    } else {\n-      return ppc64Opcode_stfs;\n-    }\n-  }\n-\n-  \/\/ Check for float load.\n-  if (dst_lo_rc == rc_float && src_lo_rc == rc_stack) {\n-    if (src_hi != OptoReg::Bad) {\n-      return ppc64Opcode_lfd;\n-    } else {\n-      return ppc64Opcode_lfs;\n-    }\n-  }\n-\n-  \/\/ --------------------------------------------------------------------\n-  \/\/ Check for hi bits still needing moving. Only happens for misaligned\n-  \/\/ arguments to native calls.\n-  if (src_hi == dst_hi) {\n-    return ppc64Opcode_none;               \/\/ Self copy; no move.\n-  }\n-\n-  ShouldNotReachHere();\n-  return ppc64Opcode_undefined;\n-}\n-#endif \/\/ PPC port\n-\n@@ -2146,7 +1983,0 @@\n-#if 0 \/\/ TODO: PPC port\n-\/\/ Optimize UEP code on z (save a load_const() call in main path).\n-int MachUEPNode::ep_offset() {\n-  return 0;\n-}\n-#endif\n-\n@@ -2342,6 +2172,0 @@\n-int Matcher::regnum_to_fpu_offset(int regnum) {\n-  \/\/ No user for this method?\n-  Unimplemented();\n-  return 999;\n-}\n-\n@@ -2685,1 +2509,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -2692,1 +2515,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -2696,1 +2518,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_none);\n@@ -2701,1 +2522,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lbz);\n@@ -2709,1 +2529,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -2718,1 +2537,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lhz);\n@@ -2727,1 +2545,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -2737,1 +2554,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lwz);\n@@ -2746,1 +2562,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -2756,1 +2571,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ld);\n@@ -2766,1 +2580,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -2777,1 +2590,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lfd);\n@@ -2784,1 +2596,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ld);\n@@ -2808,1 +2619,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -3043,1 +2853,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ld);\n@@ -3076,1 +2885,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -3211,1 +3019,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_stw);\n@@ -3218,1 +3025,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_std);\n@@ -3227,1 +3033,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_stfs);\n@@ -3234,1 +3039,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_stfd);\n@@ -3243,1 +3047,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -3259,7 +3062,0 @@\n-#if 0 \/\/ TODO: PPC port\n-    \/\/ Check CMSCollectorCardTableBarrierSetBSExt::_requires_release and do the\n-    \/\/ StoreStore barrier conditionally.\n-    __ lwz(R0, 0, $releaseFieldAddr$$Register);\n-    __ cmpwi($crx$$CondRegister, R0, 0);\n-    __ beq_predict_taken($crx$$CondRegister, skip_storestore);\n-#endif\n@@ -3268,3 +3064,0 @@\n-#if 0 \/\/ TODO: PPC port\n-    __ bind(skip_storestore);\n-#endif\n@@ -3475,1 +3268,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -3485,1 +3277,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -3490,1 +3281,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -3498,1 +3288,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -3505,1 +3294,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andc);\n@@ -3511,1 +3299,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -3524,1 +3311,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -3537,1 +3323,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -3544,1 +3329,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -3549,1 +3333,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -3555,1 +3338,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -3560,1 +3342,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_bc);\n@@ -3590,1 +3371,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_bc);\n@@ -3618,41 +3398,0 @@\n-  \/\/ Branch used with Power6 scheduling (can be shortened without changing the node).\n-  enc_class enc_bc_short_far(flagsRegSrc crx, cmpOp cmp, Label lbl) %{\n-    \/\/ The scheduler doesn't know about branch shortening, so we set the opcode\n-    \/\/ to ppc64Opcode_bc in order to hide this detail from the scheduler.\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_bc);\n-\n-    C2_MacroAssembler _masm(&cbuf);\n-    Label d;   \/\/ dummy\n-    __ bind(d);\n-    Label* p = ($lbl$$label);\n-    \/\/ `p' is `NULL' when this encoding class is used only to\n-    \/\/ determine the size of the encoded instruction.\n-    Label& l = (NULL == p)? d : *(p);\n-    int cc = $cmp$$cmpcode;\n-    int flags_reg = $crx$$reg;\n-    int bhint = Assembler::bhintNoHint;\n-\n-    if (UseStaticBranchPredictionForUncommonPathsPPC64) {\n-      if (_prob <= PROB_NEVER) {\n-        bhint = Assembler::bhintIsNotTaken;\n-      } else if (_prob >= PROB_ALWAYS) {\n-        bhint = Assembler::bhintIsTaken;\n-      }\n-    }\n-\n-#if 0 \/\/ TODO: PPC port\n-    if (_size == 8) {\n-      \/\/ Tell the conditional far branch to optimize itself when being relocated.\n-      __ bc_far(Assembler::add_bhint_to_boint(bhint, cc_to_boint(cc)),\n-                    cc_to_biint(cc, flags_reg),\n-                    l,\n-                    MacroAssembler::bc_far_optimize_on_relocate);\n-    } else {\n-      __ bc    (Assembler::add_bhint_to_boint(bhint, cc_to_boint(cc)),\n-                    cc_to_biint(cc, flags_reg),\n-                    l);\n-    }\n-#endif\n-    Unimplemented();\n-  %}\n-\n@@ -3705,1 +3444,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ld);\n@@ -3763,1 +3501,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_bl);\n@@ -3813,1 +3550,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_bl);\n@@ -3870,1 +3606,0 @@\n-    call->_argsize           = _argsize;\n@@ -3917,1 +3652,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -3975,1 +3709,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -4009,1 +3742,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mtctr);\n@@ -4074,1 +3806,0 @@\n-    call->_argsize     = _argsize;\n@@ -4125,3 +3856,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for native & Java).\n-  stack_direction(TOWARDS_LOW);\n-\n@@ -4134,2 +3862,2 @@\n-  \/\/ Method Oop Register when calling interpreter.\n-  interpreter_method_oop_reg(R19); \/\/ R19_method\n+  \/\/ Method Register when calling interpreter.\n+  interpreter_method_reg(R19); \/\/ R19_method\n@@ -5044,2 +4772,2 @@\n-operand compiler_method_oop_regP(iRegPdst reg) %{\n-  constraint(ALLOC_IN_RC(rscratch1_bits64_reg)); \/\/ compiler_method_oop_reg\n+operand compiler_method_regP(iRegPdst reg) %{\n+  constraint(ALLOC_IN_RC(rscratch1_bits64_reg)); \/\/ compiler_method_reg\n@@ -5051,2 +4779,2 @@\n-operand interpreter_method_oop_regP(iRegPdst reg) %{\n-  constraint(ALLOC_IN_RC(r19_bits64_reg)); \/\/ interpreter_method_oop_reg\n+operand interpreter_method_regP(iRegPdst reg) %{\n+  constraint(ALLOC_IN_RC(r19_bits64_reg)); \/\/ interpreter_method_reg\n@@ -5521,1 +5249,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_extsb);\n@@ -5679,1 +5406,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lha);\n@@ -5696,1 +5422,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -5803,1 +5528,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lwa);\n@@ -5820,1 +5544,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lwa);\n@@ -6022,1 +5745,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lfs);\n@@ -6042,1 +5764,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -6079,1 +5800,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -6114,1 +5834,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -6128,1 +5847,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ori);\n@@ -6141,1 +5859,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -6155,1 +5872,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -6172,1 +5888,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ori);\n@@ -6200,1 +5915,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -6214,1 +5928,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -6230,1 +5943,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ori);\n@@ -6310,1 +6022,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ld);\n@@ -6337,1 +6048,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -6351,1 +6061,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -6365,1 +6074,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -6396,1 +6104,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -6409,1 +6116,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -6457,1 +6163,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -6473,1 +6178,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -6489,1 +6193,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ori);\n@@ -6547,1 +6250,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -6595,1 +6297,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ld);\n@@ -6632,1 +6333,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lfs);\n@@ -6655,1 +6355,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -6696,1 +6395,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lfd);\n@@ -6720,1 +6418,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -6763,1 +6460,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_dcbtst);\n@@ -6777,1 +6473,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_dcbtst);\n@@ -6791,1 +6486,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_dcbtst);\n@@ -6805,1 +6499,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_dcbtst);\n@@ -6821,1 +6514,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_stb);\n@@ -6836,1 +6528,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sth);\n@@ -6990,1 +6681,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7012,1 +6702,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -7026,1 +6715,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7042,1 +6730,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7061,1 +6748,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7075,1 +6761,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -7114,1 +6799,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -7129,1 +6813,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -7146,1 +6829,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -7160,1 +6842,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7179,1 +6860,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7200,1 +6880,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7229,1 +6908,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -7246,1 +6924,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldimi);\n@@ -7357,1 +7034,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -7372,1 +7048,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -7391,1 +7066,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -7406,1 +7080,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_subf);\n@@ -7420,1 +7093,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -7480,1 +7152,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -7496,1 +7167,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -7560,1 +7230,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lwsync);\n@@ -7594,1 +7263,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lwsync);\n@@ -7607,1 +7275,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lwsync);\n@@ -7630,1 +7297,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sync);\n@@ -7689,1 +7355,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7706,1 +7371,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7719,1 +7384,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7735,1 +7400,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7752,1 +7416,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7765,1 +7429,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7781,1 +7445,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7799,1 +7462,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7812,1 +7475,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7828,1 +7491,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7845,1 +7507,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7858,1 +7520,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -7871,1 +7533,1 @@\n-  size((false \/* TODO: PPC PORT (InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 12 : 8));\n+  size(8);\n@@ -7873,1 +7535,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmovef);\n@@ -7879,1 +7540,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -7893,1 +7553,1 @@\n-  size((false \/* TODO: PPC PORT (InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 12 : 8));\n+  size(8);\n@@ -7895,1 +7555,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmovef);\n@@ -7901,1 +7560,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -7923,1 +7581,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7943,1 +7600,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_stdcx_);\n@@ -7959,1 +7615,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ldarx);\n@@ -7979,1 +7634,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -7999,1 +7653,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8019,1 +7672,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8039,1 +7691,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8058,1 +7709,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8077,1 +7727,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8096,1 +7745,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8115,1 +7763,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8137,1 +7784,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8152,1 +7798,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8167,1 +7812,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8182,1 +7826,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8197,1 +7840,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8212,1 +7854,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8227,1 +7868,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8242,1 +7882,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8257,1 +7896,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8272,1 +7910,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8289,1 +7926,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8304,1 +7940,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8321,1 +7956,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8337,1 +7971,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8354,1 +7987,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8369,1 +8001,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8388,1 +8019,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8403,1 +8033,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8418,1 +8047,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8439,1 +8067,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8460,1 +8087,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8475,1 +8101,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8490,1 +8115,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8511,1 +8135,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8532,1 +8155,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8547,1 +8169,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8568,1 +8189,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8583,1 +8203,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8604,1 +8223,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8619,1 +8237,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8640,1 +8257,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8655,1 +8271,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -8913,1 +8528,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -8926,1 +8540,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -8952,1 +8565,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -8964,1 +8576,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -8976,1 +8587,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -8989,1 +8599,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -9016,1 +8625,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -9029,1 +8637,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -9043,1 +8650,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -9055,1 +8661,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_add);\n@@ -9069,1 +8674,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -9083,1 +8687,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addis);\n@@ -9098,1 +8701,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_subf);\n@@ -9115,1 +8717,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_subfic);\n@@ -9131,1 +8732,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_srawi);\n@@ -9155,1 +8755,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_neg);\n@@ -9167,1 +8766,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_subf);\n@@ -9180,1 +8778,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_subf);\n@@ -9196,1 +8793,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sradi);\n@@ -9212,1 +8808,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sradi);\n@@ -9237,1 +8832,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_neg);\n@@ -9250,1 +8844,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_neg);\n@@ -9267,1 +8860,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mullw);\n@@ -9281,1 +8873,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mulli);\n@@ -9294,1 +8885,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mulld);\n@@ -9308,1 +8898,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mulhd);\n@@ -9322,1 +8911,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mulli);\n@@ -9336,1 +8924,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_neg);\n@@ -9353,1 +8940,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_divw);\n@@ -9367,1 +8953,1 @@\n-  size((false \/* TODO: PPC PORT (InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 12 : 8));\n+  size(8);\n@@ -9369,1 +8955,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -9373,1 +8958,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -9401,1 +8985,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_neg);\n@@ -9416,1 +8999,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_divd);\n@@ -9430,1 +9012,1 @@\n-  size((false \/* TODO: PPC PORT (InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 12 : 8));\n+  size(8);\n@@ -9432,1 +9014,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -9436,1 +9017,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 12);\n@@ -9506,1 +9086,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -9520,1 +9099,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_slw);\n@@ -9544,1 +9122,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm);\n@@ -9558,1 +9135,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm); \/\/ FIXME: assert that rlwinm is equal to addi\n@@ -9579,1 +9155,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm); \/\/ FIXME: assert that rlwinm is equal to addi\n@@ -9600,1 +9175,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sld);\n@@ -9624,1 +9198,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -9638,1 +9211,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -9653,1 +9225,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldic);\n@@ -9667,1 +9238,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sraw);\n@@ -9692,1 +9262,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_srawi);\n@@ -9706,1 +9275,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_srad);\n@@ -9732,1 +9300,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sradi);\n@@ -9745,1 +9312,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_sradi);\n@@ -9759,1 +9325,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_srw);\n@@ -9785,1 +9350,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm);\n@@ -9799,1 +9363,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_srd);\n@@ -9825,1 +9388,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -9838,1 +9400,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -9851,1 +9412,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -9864,1 +9424,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -9883,1 +9442,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -9901,1 +9459,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_extsw);\n@@ -9917,1 +9474,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm);\n@@ -9931,1 +9487,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm);\n@@ -9946,1 +9501,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fadds);\n@@ -9959,1 +9513,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fadd);\n@@ -9972,1 +9525,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fsubs);\n@@ -9984,1 +9536,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fsub);\n@@ -9996,1 +9547,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmuls);\n@@ -10008,1 +9558,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmul);\n@@ -10020,1 +9569,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fdivs);\n@@ -10032,1 +9580,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fdiv);\n@@ -10044,1 +9591,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fabs);\n@@ -10056,1 +9602,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fabs);\n@@ -10067,1 +9612,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fneg);\n@@ -10078,1 +9622,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fneg);\n@@ -10090,1 +9633,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fnabs);\n@@ -10102,1 +9644,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fnabs);\n@@ -10115,1 +9656,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fsqrt);\n@@ -10130,1 +9670,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fsqrts);\n@@ -10167,1 +9706,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmadds);\n@@ -10180,1 +9718,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmadd);\n@@ -10194,1 +9731,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fnmsubs);\n@@ -10208,1 +9744,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fnmsub);\n@@ -10222,1 +9757,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fnmadds);\n@@ -10236,1 +9770,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fnmadd);\n@@ -10249,1 +9782,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmsubs);\n@@ -10262,1 +9794,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmsub);\n@@ -10279,1 +9810,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_and);\n@@ -10292,1 +9822,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andis_);\n@@ -10306,1 +9835,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andi_);\n@@ -10319,1 +9847,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -10330,1 +9857,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -10342,1 +9868,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm);\n@@ -10357,1 +9882,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_and);\n@@ -10371,1 +9895,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andi_);\n@@ -10384,1 +9907,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -10395,1 +9917,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -10409,1 +9930,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -10423,1 +9943,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -10436,1 +9955,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -10462,1 +9980,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ori);\n@@ -10476,1 +9993,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -10490,1 +10006,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -10504,1 +10019,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_ori);\n@@ -10518,1 +10032,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_xor);\n@@ -10531,1 +10044,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_xor);\n@@ -10557,1 +10069,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_xori);\n@@ -10571,1 +10082,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_xor);\n@@ -10585,1 +10095,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_xor);\n@@ -10599,1 +10108,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_xori);\n@@ -10612,1 +10120,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_nor);\n@@ -10625,1 +10132,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_nor);\n@@ -10651,1 +10157,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andc);\n@@ -10778,1 +10283,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_lfs);\n@@ -10866,1 +10370,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -10881,1 +10384,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -10894,1 +10396,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -11009,1 +10510,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwinm);\n@@ -11111,1 +10611,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_srawi);\n@@ -11129,1 +10628,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_extsb);\n@@ -11151,1 +10649,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_extsh);\n@@ -11164,1 +10661,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_extsw);\n@@ -11175,1 +10671,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_or);\n@@ -11189,1 +10684,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fctiwz);;\n@@ -11204,1 +10698,1 @@\n-  size((false \/* TODO: PPC PORT(InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 12 : 8));\n+  size(8);\n@@ -11218,1 +10712,1 @@\n-  size((false \/* TODO: PPC PORT(InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 12 : 8));\n+  size(8);\n@@ -11371,1 +10865,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fctiwz);\n@@ -11416,1 +10909,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_extsw);\n@@ -11430,1 +10922,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -11444,1 +10935,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicl);\n@@ -11458,1 +10948,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fctiwz);\n@@ -11473,1 +10962,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -11487,1 +10976,1 @@\n-  size((false \/* TODO: PPC PORT Compile::current()->do_hb_scheduling()*\/ ? 12 : 8));\n+  size(8);\n@@ -11634,1 +11123,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fctiwz);\n@@ -11683,1 +11171,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fcfid);\n@@ -11695,1 +11182,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_frsp);\n@@ -11728,1 +11214,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fcfid);\n@@ -11857,1 +11342,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmr);\n@@ -11872,1 +11356,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmp);\n@@ -11883,1 +11366,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpi);\n@@ -11896,1 +11378,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andi_);\n@@ -11907,1 +11388,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmp);\n@@ -11918,1 +11398,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpi);\n@@ -11930,1 +11409,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpl);\n@@ -11941,1 +11419,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpli);\n@@ -11953,1 +11430,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_and_);\n@@ -11965,1 +11441,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_andi_);\n@@ -11980,1 +11455,1 @@\n-  size((false \/* TODO: PPC PORTInsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 20 : 16));\n+  size(16);\n@@ -11982,1 +11457,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmove);\n@@ -11989,1 +11463,0 @@\n-    \/\/ TODO: PPC port__ endgroup_if_needed(_size == 20);\n@@ -12078,1 +11551,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_twi);\n@@ -12105,1 +11577,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_tw);\n@@ -12132,1 +11603,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_twi);\n@@ -12150,1 +11620,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpl);\n@@ -12161,1 +11630,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpli);\n@@ -12183,1 +11651,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_tdi);\n@@ -12204,1 +11671,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpl);\n@@ -12218,1 +11684,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpli);\n@@ -12240,1 +11705,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_tdi);\n@@ -12259,1 +11723,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpl);\n@@ -12270,1 +11733,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpl);\n@@ -12287,1 +11749,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmpi);\n@@ -12304,1 +11765,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fcmpu);\n@@ -12319,1 +11779,1 @@\n-  size((false \/* TODO: PPC PORT(InsertEndGroupPPC64 && Compile::current()->do_hb_scheduling())*\/ ? 16 : 12));\n+  size(12);\n@@ -12321,1 +11781,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cmovecr);\n@@ -12326,1 +11785,0 @@\n-    \/\/ TODO PPC port __ endgroup_if_needed(_size == 16);\n@@ -12419,1 +11877,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fcmpu);\n@@ -12624,1 +12081,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_b);\n@@ -12664,1 +12120,0 @@\n-  predicate(!false \/* TODO: PPC port HB_Schedule*\/);\n@@ -12677,20 +12132,0 @@\n-\/\/ Conditional Branch used with Power6 scheduler (can be far or short).\n-instruct branchConSched(cmpOp cmp, flagsRegSrc crx, label lbl) %{\n-  \/\/ Same match rule as `branchCon'.\n-  match(If cmp crx);\n-  effect(USE crx, USE lbl);\n-  predicate(false \/* TODO: PPC port HB_Schedule*\/);\n-  \/\/ Higher cost than `branchCon'.\n-  ins_cost(5*BRANCH_COST);\n-\n-  \/\/ Actually size doesn't depend on alignment but on shortening.\n-  ins_variable_size_depending_on_alignment(true);\n-  \/\/ long variant.\n-  ins_short_branch(0);\n-\n-  format %{ \"B_FAR$cmp $crx, $lbl\" %}\n-  size(8); \/\/ worst case\n-  ins_encode( enc_bc_short_far(crx, cmp, lbl) );\n-  ins_pipe(pipe_class_default);\n-%}\n-\n@@ -12714,1 +12149,0 @@\n-  predicate(!false \/* TODO: PPC port HB_Schedule *\/);\n@@ -12726,19 +12160,0 @@\n-\/\/ Conditional Branch used with Power6 scheduler (can be far or short).\n-instruct branchLoopEndSched(cmpOp cmp, flagsRegSrc crx, label labl) %{\n-  match(CountedLoopEnd cmp crx);\n-  effect(USE labl);\n-  predicate(false \/* TODO: PPC port HB_Schedule *\/);\n-  \/\/ Higher cost than `branchCon'.\n-  ins_cost(5*BRANCH_COST);\n-\n-  \/\/ Actually size doesn't depend on alignment but on shortening.\n-  ins_variable_size_depending_on_alignment(true);\n-  \/\/ Long variant.\n-  ins_short_branch(0);\n-\n-  format %{ \"B_FAR$cmp $crx, $labl \\t\/\/ counted loop end\" %}\n-  size(8); \/\/ worst case\n-  ins_encode( enc_bc_short_far(crx, cmp, labl) );\n-  ins_pipe(pipe_class_default);\n-%}\n-\n@@ -12764,1 +12179,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12780,1 +12194,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12799,1 +12212,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12820,1 +12232,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12839,1 +12250,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12857,1 +12267,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldicr);\n@@ -12870,1 +12279,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_subf);\n@@ -12884,1 +12292,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12898,1 +12305,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12912,1 +12318,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12926,1 +12331,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12943,1 +12347,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12960,1 +12363,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12977,1 +12379,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -12994,1 +12395,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13010,1 +12410,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13026,1 +12425,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13042,1 +12440,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13064,1 +12461,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13098,1 +12494,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13125,1 +12520,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13153,1 +12547,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13188,1 +12581,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13216,1 +12608,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13239,1 +12630,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13264,1 +12654,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13292,1 +12681,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13320,1 +12708,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13345,1 +12732,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13367,1 +12753,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13389,1 +12774,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13407,1 +12791,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13430,1 +12813,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13451,1 +12833,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13467,1 +12848,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13524,1 +12904,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13558,1 +12937,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -13576,1 +12954,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_popcntb);\n@@ -13591,1 +12968,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_popcntb);\n@@ -13605,1 +12981,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cntlzw);\n@@ -13619,1 +12994,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cntlzd);\n@@ -13633,1 +13007,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_cntlzd);\n@@ -13710,1 +13083,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwimi);\n@@ -13724,1 +13096,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rlwimi);\n@@ -14119,1 +13490,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldimi);\n@@ -14133,1 +13503,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldimi);\n@@ -14147,1 +13516,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_rldimi);\n@@ -14170,1 +13538,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14182,1 +13549,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14244,1 +13610,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14256,1 +13621,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14318,1 +13682,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14330,1 +13693,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14408,1 +13770,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_addi);\n@@ -14856,1 +14217,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -14869,1 +14229,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -14882,1 +14241,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -14895,1 +14253,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -15160,1 +14517,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_bctrl);\n@@ -15209,1 +14565,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -15222,1 +14577,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_blr);\n@@ -15244,1 +14598,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -15273,1 +14626,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_compound);\n@@ -15288,1 +14640,0 @@\n-      \/\/ TODO: PPC port $archOpcode(ppc64Opcode_tdi);\n@@ -15322,1 +14673,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_endgroup);\n@@ -15338,1 +14688,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmr);\n@@ -15352,1 +14701,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmr);\n@@ -15366,1 +14714,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_fmr);\n@@ -15377,1 +14724,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mcrf);\n@@ -15392,1 +14738,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mcrf);\n@@ -15406,1 +14751,0 @@\n-    \/\/ TODO: PPC port $archOpcode(ppc64Opcode_mcrf);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":42,"deletions":698,"binary":false,"changes":740,"status":"modified"},{"patch":"@@ -281,2 +281,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    (as defined in frame section)\n-\/\/ 2) reg_class interpreter_method_oop_reg (as defined in frame section)\n+\/\/ 2) reg_class compiler_method_reg        (as defined in frame section)\n+\/\/ 2) reg_class interpreter_method_reg     (as defined in frame section)\n@@ -1572,5 +1572,0 @@\n-int Matcher::regnum_to_fpu_offset(int regnum) {\n-  ShouldNotReachHere();\n-  return regnum - 32; \/\/ The FP registers are in the second chunk.\n-}\n-\n@@ -2463,3 +2458,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for native & Java).\n-  stack_direction(TOWARDS_LOW);\n-\n@@ -2478,1 +2470,1 @@\n-  \/\/ compiler_method_oop_reg(Z_R1);\/\/Z_R1_scratch\n+  \/\/ compiler_method_reg(Z_R1);\/\/Z_R1_scratch\n@@ -2480,2 +2472,2 @@\n-  \/\/ Method Oop Register when calling interpreter\n-  interpreter_method_oop_reg(Z_R9);\/\/Z_method\n+  \/\/ Method Register when calling interpreter\n+  interpreter_method_reg(Z_R9);\/\/Z_method\n@@ -3546,2 +3538,2 @@\n-operand compiler_method_oop_regP(iRegP reg) %{\n-  constraint(ALLOC_IN_RC(z_r1_RegP)); \/\/ compiler_method_oop_reg\n+operand compiler_method_regP(iRegP reg) %{\n+  constraint(ALLOC_IN_RC(z_r1_RegP)); \/\/ compiler_method_reg\n@@ -3553,2 +3545,2 @@\n-operand interpreter_method_oop_regP(iRegP reg) %{\n-  constraint(ALLOC_IN_RC(z_r9_regP)); \/\/ interpreter_method_oop_reg\n+operand interpreter_method_regP(iRegP reg) %{\n+  constraint(ALLOC_IN_RC(z_r9_regP)); \/\/ interpreter_method_reg\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":9,"deletions":17,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -134,2 +134,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( \/* as def'd in frame section *\/ )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class compiler_method_reg        ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class interpreter_method_reg     ( \/* as def'd in frame section *\/ )\n@@ -1374,4 +1374,0 @@\n-int Matcher::regnum_to_fpu_offset(int regnum) {\n-  return regnum - 32; \/\/ The FP registers are in the second chunk\n-}\n-\n@@ -1934,1 +1930,1 @@\n-\/\/     \/\/ int imo_reg    = Matcher::interpreter_method_oop_reg();\n+\/\/     \/\/ int imo_reg    = Matcher::interpreter_method_reg();\n@@ -3194,3 +3190,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for C & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n@@ -3200,1 +3193,1 @@\n-  interpreter_method_oop_reg(EBX);      \/\/ Method Oop Register when calling interpreter\n+  interpreter_method_reg(EBX);          \/\/ Method Register when calling interpreter\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -164,2 +164,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( \/* as def'd in frame section *\/ )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class compiler_method_reg        ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class interpreter_method_reg     ( \/* as def'd in frame section *\/ )\n@@ -1581,5 +1581,0 @@\n-int Matcher::regnum_to_fpu_offset(int regnum)\n-{\n-  return regnum - 32; \/\/ The FP registers are in the second chunk\n-}\n-\n@@ -2743,3 +2738,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for C & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n@@ -2749,1 +2741,1 @@\n-  interpreter_method_oop_reg(RBX);      \/\/ Method Oop Register when\n+  interpreter_method_reg(RBX);          \/\/ Method Register when\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -404,1 +404,1 @@\n-  LinkResolver::resolve_field(result, link_info, bc, false, KILL_COMPILE_ON_FATAL_(false));\n+  LinkResolver::resolve_field(result, link_info, bc, false, CHECK_AND_CLEAR_(false));\n","filename":"src\/hotspot\/share\/ci\/ciField.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1244,1 +1244,1 @@\n-    bool has_unloaded = Method::has_unloaded_classes_in_signature(m, (JavaThread *)THREAD);\n+    bool has_unloaded = Method::has_unloaded_classes_in_signature(m, thread);\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -411,2 +411,1 @@\n-    assert(THREAD->is_Java_thread(), \"must be java thread\");\n-    JavaThread* thread = (JavaThread*)THREAD;\n+    JavaThread* thread = THREAD->as_Java_thread();\n@@ -438,2 +437,1 @@\n-  { JavaThread* thread = (JavaThread*)THREAD;\n-    assert(thread->is_Java_thread(), \"must be java thread\");\n+  { JavaThread* thread = THREAD->as_Java_thread();\n@@ -2419,1 +2417,1 @@\n-  JavaThread* thread = (JavaThread*)THREAD;\n+  JavaThread* thread = THREAD->as_Java_thread();\n@@ -3397,1 +3395,1 @@\n-ModuleEntry* java_lang_Module::module_entry(oop module) {\n+ModuleEntry* java_lang_Module::module_entry_raw(oop module) {\n@@ -3403,0 +3401,5 @@\n+  return module_entry;\n+}\n+\n+ModuleEntry* java_lang_Module::module_entry(oop module) {\n+  ModuleEntry* module_entry = module_entry_raw(module);\n@@ -4850,2 +4853,1 @@\n-      klass == SystemDictionary::Module_klass() ||       \/\/ Module::module_entry is malloc'ed\n-      \/\/ regular Java code. The implementation of java.lang.invoke uses generated anonymoys classes\n+      \/\/ regular Java code. The implementation of java.lang.invoke uses generated anonymous classes\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -801,0 +801,1 @@\n+    static ModuleEntry* module_entry_raw(oop module);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"classfile\/classLoaderDataShared.hpp\"\n@@ -42,0 +43,1 @@\n+#include \"memory\/metaspaceShared.hpp\"\n@@ -43,0 +45,2 @@\n+#include \"prims\/jvmtiExport.hpp\"\n+#include \"runtime\/globals_extension.hpp\"\n@@ -271,0 +275,1 @@\n+  check_cds_restrictions(CHECK);\n@@ -471,0 +476,40 @@\n+#if INCLUDE_CDS_JAVA_HEAP\n+void Modules::define_archived_modules(jobject platform_loader, jobject system_loader, TRAPS) {\n+  assert(UseSharedSpaces && MetaspaceShared::use_full_module_graph(), \"must be\");\n+\n+  \/\/ We don't want the classes used by the archived full module graph to be redefined by JVMTI.\n+  \/\/ Luckily, such classes are loaded in the JVMTI \"early\" phase, and CDS is disabled if a JVMTI\n+  \/\/ agent wants to redefine classes in this phase.\n+  JVMTI_ONLY(assert(JvmtiExport::is_early_phase(), \"must be\"));\n+  assert(!(JvmtiExport::should_post_class_file_load_hook() && JvmtiExport::has_early_class_hook_env()),\n+         \"CDS should be disabled if early class hooks are enabled\");\n+\n+  Handle java_base_module(THREAD, ClassLoaderDataShared::restore_archived_oops_for_null_class_loader_data());\n+  \/\/ Patch any previously loaded class's module field with java.base's java.lang.Module.\n+  ModuleEntryTable::patch_javabase_entries(java_base_module);\n+\n+  if (platform_loader == NULL) {\n+    THROW_MSG(vmSymbols::java_lang_NullPointerException(), \"Null platform loader object\");\n+  }\n+\n+  if (system_loader == NULL) {\n+    THROW_MSG(vmSymbols::java_lang_NullPointerException(), \"Null system loader object\");\n+  }\n+\n+  Handle h_platform_loader(THREAD, JNIHandles::resolve_non_null(platform_loader));\n+  ClassLoaderData* platform_loader_data = SystemDictionary::register_loader(h_platform_loader);\n+  ClassLoaderDataShared::restore_java_platform_loader_from_archive(platform_loader_data);\n+\n+  Handle h_system_loader(THREAD, JNIHandles::resolve_non_null(system_loader));\n+  ClassLoaderData* system_loader_data = SystemDictionary::register_loader(h_system_loader);\n+  ClassLoaderDataShared::restore_java_system_loader_from_archive(system_loader_data);\n+}\n+\n+void Modules::check_cds_restrictions(TRAPS) {\n+  if (DumpSharedSpaces && Universe::is_module_initialized() && MetaspaceShared::use_full_module_graph()) {\n+    THROW_MSG(vmSymbols::java_lang_UnsupportedOperationException(),\n+              \"During -Xshare:dump, module system cannot be modified after it's initialized\");\n+  }\n+}\n+#endif \/\/ INCLUDE_CDS_JAVA_HEAP\n+\n@@ -509,0 +554,1 @@\n+  check_cds_restrictions(CHECK);\n@@ -576,0 +622,1 @@\n+  check_cds_restrictions(CHECK);\n@@ -584,0 +631,1 @@\n+  check_cds_restrictions(CHECK);\n@@ -689,0 +737,1 @@\n+  check_cds_restrictions(CHECK);\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":49,"deletions":0,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -190,0 +190,1 @@\n+  do_klass(jdk_internal_loader_BuiltinClassLoader_klass,jdk_internal_loader_BuiltinClassLoader                ) \\\n@@ -194,0 +195,2 @@\n+  do_klass(ConcurrentHashMap_klass,                     java_util_concurrent_ConcurrentHashMap                ) \\\n+  do_klass(ArrayList_klass,                             java_util_ArrayList                                   ) \\\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,989 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_CLASSFILE_VMINTRINSICS_HPP\n+#define SHARE_CLASSFILE_VMINTRINSICS_HPP\n+\n+\/\/ Here are all the intrinsics known to the runtime and the CI.\n+\/\/ Each intrinsic consists of a public enum name (like _hashCode),\n+\/\/ followed by a specification of its klass, name, and signature:\n+\/\/    template(<id>,  <klass>,  <name>, <sig>, <FCODE>)\n+\/\/\n+\/\/ If you add an intrinsic here, you must also define its name\n+\/\/ and signature as members of the VM symbols.  The VM symbols for\n+\/\/ the intrinsic name and signature may be defined above.\n+\/\/\n+\/\/ Because the VM_SYMBOLS_DO macro makes reference to VM_INTRINSICS_DO,\n+\/\/ you can also define an intrinsic's name and\/or signature locally to the\n+\/\/ intrinsic, if this makes sense.  (It often does make sense.)\n+\/\/\n+\/\/ For example:\n+\/\/    do_intrinsic(_foo,  java_lang_Object,  foo_name, foo_signature, F_xx)\n+\/\/     do_name(     foo_name, \"foo\")\n+\/\/     do_signature(foo_signature, \"()F\")\n+\/\/ klass      = vmSymbols::java_lang_Object()\n+\/\/ name       = vmSymbols::foo_name()\n+\/\/ signature  = vmSymbols::foo_signature()\n+\/\/\n+\/\/ The name and\/or signature might be a \"well known\" symbol\n+\/\/ like \"equal\" or \"()I\", in which case there will be no local\n+\/\/ re-definition of the symbol.\n+\/\/\n+\/\/ The do_class, do_name, and do_signature calls are all used for the\n+\/\/ same purpose:  Define yet another VM symbol.  They could all be merged\n+\/\/ into a common 'do_symbol' call, but it seems useful to record our\n+\/\/ intentions here about kinds of symbols (class vs. name vs. signature).\n+\/\/\n+\/\/ The F_xx is one of the Flags enum; see below.\n+\/\/\n+\/\/ for Emacs: (let ((c-backslash-column 120) (c-backslash-max-column 120)) (c-backslash-region (point) (point-max) nil t))\n+\/\/\n+\/\/\n+\/\/ There are two types of intrinsic methods: (1) Library intrinsics and (2) bytecode intrinsics.\n+\/\/\n+\/\/ (1) A library intrinsic method may be replaced with hand-crafted assembly code,\n+\/\/ with hand-crafted compiler IR, or with a combination of the two. The semantics\n+\/\/ of the replacement code may differ from the semantics of the replaced code.\n+\/\/\n+\/\/ (2) Bytecode intrinsic methods are not replaced by special code, but they are\n+\/\/ treated in some other special way by the compiler. For example, the compiler\n+\/\/ may delay inlining for some String-related intrinsic methods (e.g., some methods\n+\/\/ defined in the StringBuilder and StringBuffer classes, see\n+\/\/ Compile::should_delay_string_inlining() for more details).\n+\/\/\n+\/\/ Due to the difference between the semantics of an intrinsic method as defined\n+\/\/ in the (Java) source code and the semantics of the method as defined\n+\/\/ by the code in the VM, intrinsic methods must be explicitly marked.\n+\/\/\n+\/\/ Intrinsic methods are marked by the jdk.internal.HotSpotIntrinsicCandidate\n+\/\/ annotation. If CheckIntrinsics is enabled, the VM performs the following\n+\/\/ checks when a class C is loaded: (1) all intrinsics defined by the VM for\n+\/\/ class C are present in the loaded class file and are marked;\n+\/\/ (2) an intrinsic is defined by the VM for all marked methods of class C;\n+\/\/ (3) check for orphan methods in class C (i.e., methods for which the VM\n+\/\/ declares an intrinsic but that are not declared for the loaded class C.\n+\/\/ Check (3) is available only in debug builds.\n+\/\/\n+\/\/ If a mismatch is detected for a method, the VM behaves differently depending\n+\/\/ on the type of build. A fastdebug build exits and reports an error on a mismatch.\n+\/\/ A product build will not replace an unmarked library intrinsic method with\n+\/\/ hand-crafted code, that is, unmarked library intrinsics are treated as ordinary\n+\/\/ methods in a product build. The special treatment of a bytecode intrinsic method\n+\/\/ persists even if the method not marked.\n+\/\/\n+\/\/ When adding an intrinsic for a method, please make sure to appropriately\n+\/\/ annotate the method in the source code. The list below contains all\n+\/\/ library intrinsics followed by bytecode intrinsics. Please also make sure to\n+\/\/ add the declaration of the intrinsic to the approriate section of the list.\n+#define VM_INTRINSICS_DO(do_intrinsic, do_class, do_name, do_signature, do_alias)                                       \\\n+  \/* (1) Library intrinsics                                                                        *\/                   \\\n+  do_intrinsic(_hashCode,                 java_lang_Object,       hashCode_name, void_int_signature,             F_R)   \\\n+   do_name(     hashCode_name,                                   \"hashCode\")                                            \\\n+  do_intrinsic(_getClass,                 java_lang_Object,       getClass_name, void_class_signature,           F_R)   \\\n+   do_name(     getClass_name,                                   \"getClass\")                                            \\\n+  do_intrinsic(_clone,                    java_lang_Object,       clone_name, void_object_signature,             F_R)   \\\n+   do_name(     clone_name,                                      \"clone\")                                               \\\n+  do_intrinsic(_notify,                   java_lang_Object,       notify_name, void_method_signature,            F_R)   \\\n+   do_name(     notify_name,                                     \"notify\")                                              \\\n+  do_intrinsic(_notifyAll,                java_lang_Object,       notifyAll_name, void_method_signature,         F_R)   \\\n+   do_name(     notifyAll_name,                                  \"notifyAll\")                                           \\\n+                                                                                                                        \\\n+  \/* Math & StrictMath intrinsics are defined in terms of just a few signatures: *\/                                     \\\n+  do_class(java_lang_Math,                \"java\/lang\/Math\")                                                             \\\n+  do_class(java_lang_StrictMath,          \"java\/lang\/StrictMath\")                                                       \\\n+  do_signature(double2_double_signature,  \"(DD)D\")                                                                      \\\n+  do_signature(double3_double_signature,  \"(DDD)D\")                                                                     \\\n+  do_signature(float2_float_signature,    \"(FF)F\")                                                                      \\\n+  do_signature(float3_float_signature,    \"(FFF)F\")                                                                     \\\n+  do_signature(int2_int_signature,        \"(II)I\")                                                                      \\\n+  do_signature(long2_long_signature,      \"(JJ)J\")                                                                      \\\n+                                                                                                                        \\\n+  \/* here are the math names, all together: *\/                                                                          \\\n+  do_name(abs_name,\"abs\")       do_name(sin_name,\"sin\")         do_name(cos_name,\"cos\")                                 \\\n+  do_name(tan_name,\"tan\")       do_name(atan2_name,\"atan2\")     do_name(sqrt_name,\"sqrt\")                               \\\n+  do_name(log_name,\"log\")       do_name(log10_name,\"log10\")     do_name(pow_name,\"pow\")                                 \\\n+  do_name(exp_name,\"exp\")       do_name(min_name,\"min\")         do_name(max_name,\"max\")                                 \\\n+  do_name(floor_name, \"floor\")  do_name(ceil_name, \"ceil\")      do_name(rint_name, \"rint\")                              \\\n+                                                                                                                        \\\n+  do_name(addExact_name,\"addExact\")                                                                                     \\\n+  do_name(decrementExact_name,\"decrementExact\")                                                                         \\\n+  do_name(incrementExact_name,\"incrementExact\")                                                                         \\\n+  do_name(multiplyExact_name,\"multiplyExact\")                                                                           \\\n+  do_name(multiplyHigh_name,\"multiplyHigh\")                                                                             \\\n+  do_name(negateExact_name,\"negateExact\")                                                                               \\\n+  do_name(subtractExact_name,\"subtractExact\")                                                                           \\\n+  do_name(fma_name, \"fma\")                                                                                              \\\n+  do_name(copySign_name, \"copySign\")                                                                                    \\\n+  do_name(signum_name,\"signum\")                                                                                         \\\n+                                                                                                                        \\\n+  do_intrinsic(_dabs,                     java_lang_Math,         abs_name,   double_double_signature,           F_S)   \\\n+  do_intrinsic(_fabs,                     java_lang_Math,         abs_name,   float_float_signature,           F_S)   \\\n+  do_intrinsic(_iabs,                     java_lang_Math,         abs_name,   int_int_signature,           F_S)   \\\n+  do_intrinsic(_labs,                     java_lang_Math,         abs_name,   long_long_signature,           F_S)   \\\n+  do_intrinsic(_dsin,                     java_lang_Math,         sin_name,   double_double_signature,           F_S)   \\\n+  do_intrinsic(_floor,                    java_lang_Math,         floor_name, double_double_signature,           F_S)   \\\n+  do_intrinsic(_ceil,                     java_lang_Math,         ceil_name,  double_double_signature,           F_S)   \\\n+  do_intrinsic(_rint,                     java_lang_Math,         rint_name,  double_double_signature,           F_S)   \\\n+  do_intrinsic(_dcos,                     java_lang_Math,         cos_name,   double_double_signature,           F_S)   \\\n+  do_intrinsic(_dtan,                     java_lang_Math,         tan_name,   double_double_signature,           F_S)   \\\n+  do_intrinsic(_datan2,                   java_lang_Math,         atan2_name, double2_double_signature,          F_S)   \\\n+  do_intrinsic(_dsqrt,                    java_lang_Math,         sqrt_name,  double_double_signature,           F_S)   \\\n+  do_intrinsic(_dlog,                     java_lang_Math,         log_name,   double_double_signature,           F_S)   \\\n+  do_intrinsic(_dlog10,                   java_lang_Math,         log10_name, double_double_signature,           F_S)   \\\n+  do_intrinsic(_dpow,                     java_lang_Math,         pow_name,   double2_double_signature,          F_S)   \\\n+  do_intrinsic(_dexp,                     java_lang_Math,         exp_name,   double_double_signature,           F_S)   \\\n+  do_intrinsic(_min,                      java_lang_Math,         min_name,   int2_int_signature,                F_S)   \\\n+  do_intrinsic(_max,                      java_lang_Math,         max_name,   int2_int_signature,                F_S)   \\\n+  do_intrinsic(_addExactI,                java_lang_Math,         addExact_name, int2_int_signature,             F_S)   \\\n+  do_intrinsic(_addExactL,                java_lang_Math,         addExact_name, long2_long_signature,           F_S)   \\\n+  do_intrinsic(_decrementExactI,          java_lang_Math,         decrementExact_name, int_int_signature,        F_S)   \\\n+  do_intrinsic(_decrementExactL,          java_lang_Math,         decrementExact_name, long_long_signature,      F_S)   \\\n+  do_intrinsic(_incrementExactI,          java_lang_Math,         incrementExact_name, int_int_signature,        F_S)   \\\n+  do_intrinsic(_incrementExactL,          java_lang_Math,         incrementExact_name, long_long_signature,      F_S)   \\\n+  do_intrinsic(_multiplyExactI,           java_lang_Math,         multiplyExact_name, int2_int_signature,        F_S)   \\\n+  do_intrinsic(_multiplyExactL,           java_lang_Math,         multiplyExact_name, long2_long_signature,      F_S)   \\\n+  do_intrinsic(_multiplyHigh,             java_lang_Math,         multiplyHigh_name, long2_long_signature,       F_S)   \\\n+  do_intrinsic(_negateExactI,             java_lang_Math,         negateExact_name, int_int_signature,           F_S)   \\\n+  do_intrinsic(_negateExactL,             java_lang_Math,         negateExact_name, long_long_signature,         F_S)   \\\n+  do_intrinsic(_subtractExactI,           java_lang_Math,         subtractExact_name, int2_int_signature,        F_S)   \\\n+  do_intrinsic(_subtractExactL,           java_lang_Math,         subtractExact_name, long2_long_signature,      F_S)   \\\n+  do_intrinsic(_fmaD,                     java_lang_Math,         fma_name,           double3_double_signature,  F_S)   \\\n+  do_intrinsic(_fmaF,                     java_lang_Math,         fma_name,           float3_float_signature,    F_S)   \\\n+  do_intrinsic(_maxF,                     java_lang_Math,         max_name,           float2_float_signature,    F_S)   \\\n+  do_intrinsic(_minF,                     java_lang_Math,         min_name,           float2_float_signature,    F_S)   \\\n+  do_intrinsic(_maxD,                     java_lang_Math,         max_name,           double2_double_signature,  F_S)   \\\n+  do_intrinsic(_minD,                     java_lang_Math,         min_name,           double2_double_signature,  F_S)   \\\n+  do_intrinsic(_dcopySign,                java_lang_Math,         copySign_name,      double2_double_signature,  F_S)   \\\n+  do_intrinsic(_fcopySign,                java_lang_Math,         copySign_name,      float2_float_signature,    F_S)   \\\n+  do_intrinsic(_dsignum,                  java_lang_Math,         signum_name,        double_double_signature,   F_S)   \\\n+  do_intrinsic(_fsignum,                  java_lang_Math,         signum_name,        float_float_signature,     F_S)   \\\n+                                                                                                                        \\\n+  do_intrinsic(_floatToRawIntBits,        java_lang_Float,        floatToRawIntBits_name,   float_int_signature, F_S)   \\\n+   do_name(     floatToRawIntBits_name,                          \"floatToRawIntBits\")                                   \\\n+  do_intrinsic(_floatToIntBits,           java_lang_Float,        floatToIntBits_name,      float_int_signature, F_S)   \\\n+   do_name(     floatToIntBits_name,                             \"floatToIntBits\")                                      \\\n+  do_intrinsic(_intBitsToFloat,           java_lang_Float,        intBitsToFloat_name,      int_float_signature, F_S)   \\\n+   do_name(     intBitsToFloat_name,                             \"intBitsToFloat\")                                      \\\n+  do_intrinsic(_doubleToRawLongBits,      java_lang_Double,       doubleToRawLongBits_name, double_long_signature, F_S) \\\n+   do_name(     doubleToRawLongBits_name,                        \"doubleToRawLongBits\")                                 \\\n+  do_intrinsic(_doubleToLongBits,         java_lang_Double,       doubleToLongBits_name,    double_long_signature, F_S) \\\n+   do_name(     doubleToLongBits_name,                           \"doubleToLongBits\")                                    \\\n+  do_intrinsic(_longBitsToDouble,         java_lang_Double,       longBitsToDouble_name,    long_double_signature, F_S) \\\n+   do_name(     longBitsToDouble_name,                           \"longBitsToDouble\")                                    \\\n+                                                                                                                        \\\n+  do_intrinsic(_numberOfLeadingZeros_i,   java_lang_Integer,      numberOfLeadingZeros_name,int_int_signature,   F_S)   \\\n+  do_intrinsic(_numberOfLeadingZeros_l,   java_lang_Long,         numberOfLeadingZeros_name,long_int_signature,  F_S)   \\\n+                                                                                                                        \\\n+  do_intrinsic(_numberOfTrailingZeros_i,  java_lang_Integer,      numberOfTrailingZeros_name,int_int_signature,  F_S)   \\\n+  do_intrinsic(_numberOfTrailingZeros_l,  java_lang_Long,         numberOfTrailingZeros_name,long_int_signature, F_S)   \\\n+                                                                                                                        \\\n+  do_intrinsic(_bitCount_i,               java_lang_Integer,      bitCount_name,            int_int_signature,   F_S)   \\\n+  do_intrinsic(_bitCount_l,               java_lang_Long,         bitCount_name,            long_int_signature,  F_S)   \\\n+                                                                                                                        \\\n+  do_intrinsic(_reverseBytes_i,           java_lang_Integer,      reverseBytes_name,        int_int_signature,   F_S)   \\\n+   do_name(     reverseBytes_name,                               \"reverseBytes\")                                        \\\n+  do_intrinsic(_reverseBytes_l,           java_lang_Long,         reverseBytes_name,        long_long_signature, F_S)   \\\n+    \/*  (symbol reverseBytes_name defined above) *\/                                                                     \\\n+  do_intrinsic(_reverseBytes_c,           java_lang_Character,    reverseBytes_name,        char_char_signature, F_S)   \\\n+    \/*  (symbol reverseBytes_name defined above) *\/                                                                     \\\n+  do_intrinsic(_reverseBytes_s,           java_lang_Short,        reverseBytes_name,        short_short_signature, F_S) \\\n+    \/*  (symbol reverseBytes_name defined above) *\/                                                                     \\\n+                                                                                                                        \\\n+  do_intrinsic(_identityHashCode,         java_lang_System,       identityHashCode_name, object_int_signature,   F_S)   \\\n+   do_name(     identityHashCode_name,                           \"identityHashCode\")                                    \\\n+  do_intrinsic(_currentTimeMillis,        java_lang_System,       currentTimeMillis_name, void_long_signature,   F_S)   \\\n+                                                                                                                        \\\n+   do_name(     currentTimeMillis_name,                          \"currentTimeMillis\")                                   \\\n+  do_intrinsic(_nanoTime,                 java_lang_System,       nanoTime_name,          void_long_signature,   F_S)   \\\n+   do_name(     nanoTime_name,                                   \"nanoTime\")                                            \\\n+                                                                                                                        \\\n+  JFR_INTRINSICS(do_intrinsic, do_class, do_name, do_signature, do_alias)                                               \\\n+                                                                                                                        \\\n+  do_intrinsic(_arraycopy,                java_lang_System,       arraycopy_name, arraycopy_signature,           F_S)   \\\n+   do_name(     arraycopy_name,                                  \"arraycopy\")                                           \\\n+   do_signature(arraycopy_signature,                             \"(Ljava\/lang\/Object;ILjava\/lang\/Object;II)V\")          \\\n+  do_intrinsic(_currentThread,            java_lang_Thread,       currentThread_name, currentThread_signature,   F_S)   \\\n+   do_name(     currentThread_name,                              \"currentThread\")                                       \\\n+   do_signature(currentThread_signature,                         \"()Ljava\/lang\/Thread;\")                                \\\n+                                                                                                                        \\\n+  \/* reflective intrinsics, for java\/lang\/Class, etc. *\/                                                                \\\n+  do_intrinsic(_isAssignableFrom,         java_lang_Class,        isAssignableFrom_name, class_boolean_signature, F_RN) \\\n+   do_name(     isAssignableFrom_name,                           \"isAssignableFrom\")                                    \\\n+  do_intrinsic(_isInstance,               java_lang_Class,        isInstance_name, object_boolean_signature,     F_RN)  \\\n+   do_name(     isInstance_name,                                 \"isInstance\")                                          \\\n+  do_intrinsic(_getModifiers,             java_lang_Class,        getModifiers_name, void_int_signature,         F_RN)  \\\n+   do_name(     getModifiers_name,                               \"getModifiers\")                                        \\\n+  do_intrinsic(_isInterface,              java_lang_Class,        isInterface_name, void_boolean_signature,      F_RN)  \\\n+   do_name(     isInterface_name,                                \"isInterface\")                                         \\\n+  do_intrinsic(_isArray,                  java_lang_Class,        isArray_name, void_boolean_signature,          F_RN)  \\\n+   do_name(     isArray_name,                                    \"isArray\")                                             \\\n+  do_intrinsic(_isPrimitive,              java_lang_Class,        isPrimitive_name, void_boolean_signature,      F_RN)  \\\n+   do_name(     isPrimitive_name,                                \"isPrimitive\")                                         \\\n+  do_intrinsic(_isHidden,                 java_lang_Class,        isHidden_name, void_boolean_signature,         F_RN)  \\\n+   do_name(     isHidden_name,                                   \"isHidden\")                                            \\\n+  do_intrinsic(_getSuperclass,            java_lang_Class,        getSuperclass_name, void_class_signature,      F_RN)  \\\n+   do_name(     getSuperclass_name,                              \"getSuperclass\")                                       \\\n+  do_intrinsic(_Class_cast,               java_lang_Class,        Class_cast_name, object_object_signature,      F_R)   \\\n+   do_name(     Class_cast_name,                                 \"cast\")                                                \\\n+                                                                                                                        \\\n+  do_intrinsic(_getClassAccessFlags,      reflect_Reflection,     getClassAccessFlags_name, class_int_signature, F_SN)  \\\n+   do_name(     getClassAccessFlags_name,                        \"getClassAccessFlags\")                                 \\\n+  do_intrinsic(_getLength,                java_lang_reflect_Array, getLength_name, object_int_signature,         F_SN)  \\\n+   do_name(     getLength_name,                                   \"getLength\")                                          \\\n+                                                                                                                        \\\n+  do_intrinsic(_getCallerClass,           reflect_Reflection,     getCallerClass_name, void_class_signature,     F_SN)  \\\n+   do_name(     getCallerClass_name,                             \"getCallerClass\")                                      \\\n+                                                                                                                        \\\n+  do_intrinsic(_newArray,                 java_lang_reflect_Array, newArray_name, newArray_signature,            F_SN)  \\\n+   do_name(     newArray_name,                                    \"newArray\")                                           \\\n+   do_signature(newArray_signature,                               \"(Ljava\/lang\/Class;I)Ljava\/lang\/Object;\")             \\\n+                                                                                                                        \\\n+  do_intrinsic(_onSpinWait,               java_lang_Thread,       onSpinWait_name, onSpinWait_signature,         F_S)   \\\n+   do_name(     onSpinWait_name,                                  \"onSpinWait\")                                         \\\n+   do_alias(    onSpinWait_signature,                             void_method_signature)                                \\\n+                                                                                                                        \\\n+  do_intrinsic(_copyOf,                   java_util_Arrays,       copyOf_name, copyOf_signature,                 F_S)   \\\n+   do_name(     copyOf_name,                                     \"copyOf\")                                              \\\n+   do_signature(copyOf_signature,             \"([Ljava\/lang\/Object;ILjava\/lang\/Class;)[Ljava\/lang\/Object;\")             \\\n+                                                                                                                        \\\n+  do_intrinsic(_copyOfRange,              java_util_Arrays,       copyOfRange_name, copyOfRange_signature,       F_S)   \\\n+   do_name(     copyOfRange_name,                                \"copyOfRange\")                                         \\\n+   do_signature(copyOfRange_signature,        \"([Ljava\/lang\/Object;IILjava\/lang\/Class;)[Ljava\/lang\/Object;\")            \\\n+                                                                                                                        \\\n+  do_intrinsic(_equalsC,                  java_util_Arrays,       equals_name,    equalsC_signature,             F_S)   \\\n+   do_signature(equalsC_signature,                               \"([C[C)Z\")                                             \\\n+  do_intrinsic(_equalsB,                  java_util_Arrays,       equals_name,    equalsB_signature,             F_S)   \\\n+   do_signature(equalsB_signature,                               \"([B[B)Z\")                                             \\\n+                                                                                                                        \\\n+  do_intrinsic(_compressStringC,          java_lang_StringUTF16,  compress_name, encodeISOArray_signature,       F_S)   \\\n+   do_name(     compress_name,                                   \"compress\")                                            \\\n+  do_intrinsic(_compressStringB,          java_lang_StringUTF16,  compress_name, indexOfI_signature,             F_S)   \\\n+  do_intrinsic(_inflateStringC,           java_lang_StringLatin1, inflate_name, inflateC_signature,              F_S)   \\\n+   do_name(     inflate_name,                                    \"inflate\")                                             \\\n+   do_signature(inflateC_signature,                              \"([BI[CII)V\")                                          \\\n+  do_intrinsic(_inflateStringB,           java_lang_StringLatin1, inflate_name, inflateB_signature,              F_S)   \\\n+   do_signature(inflateB_signature,                              \"([BI[BII)V\")                                          \\\n+  do_intrinsic(_toBytesStringU,           java_lang_StringUTF16, toBytes_name, toBytesU_signature,               F_S)   \\\n+   do_name(     toBytes_name,                                    \"toBytes\")                                             \\\n+   do_signature(toBytesU_signature,                              \"([CII)[B\")                                            \\\n+  do_intrinsic(_getCharsStringU,          java_lang_StringUTF16, getCharsU_name, getCharsU_signature,            F_S)   \\\n+   do_name(     getCharsU_name,                                  \"getChars\")                                            \\\n+   do_signature(getCharsU_signature,                             \"([BII[CI)V\")                                          \\\n+  do_intrinsic(_getCharStringU,           java_lang_StringUTF16, getChar_name, getCharStringU_signature,         F_S)   \\\n+   do_signature(getCharStringU_signature,                        \"([BI)C\")                                              \\\n+  do_intrinsic(_putCharStringU,           java_lang_StringUTF16, putChar_name, putCharStringU_signature,         F_S)   \\\n+   do_signature(putCharStringU_signature,                        \"([BII)V\")                                             \\\n+  do_intrinsic(_compareToL,               java_lang_StringLatin1,compareTo_name, compareTo_indexOf_signature,    F_S)   \\\n+  do_intrinsic(_compareToU,               java_lang_StringUTF16, compareTo_name, compareTo_indexOf_signature,    F_S)   \\\n+  do_intrinsic(_compareToLU,              java_lang_StringLatin1,compareToLU_name, compareTo_indexOf_signature,  F_S)   \\\n+  do_intrinsic(_compareToUL,              java_lang_StringUTF16, compareToUL_name, compareTo_indexOf_signature,  F_S)   \\\n+   do_signature(compareTo_indexOf_signature,                     \"([B[B)I\")                                             \\\n+   do_name(     compareTo_name,                                  \"compareTo\")                                           \\\n+   do_name(     compareToLU_name,                                \"compareToUTF16\")                                      \\\n+   do_name(     compareToUL_name,                                \"compareToLatin1\")                                     \\\n+  do_intrinsic(_indexOfL,                 java_lang_StringLatin1,indexOf_name, compareTo_indexOf_signature,      F_S)   \\\n+  do_intrinsic(_indexOfU,                 java_lang_StringUTF16, indexOf_name, compareTo_indexOf_signature,      F_S)   \\\n+  do_intrinsic(_indexOfUL,                java_lang_StringUTF16, indexOfUL_name, compareTo_indexOf_signature,    F_S)   \\\n+  do_intrinsic(_indexOfIL,                java_lang_StringLatin1,indexOf_name, indexOfI_signature,               F_S)   \\\n+  do_intrinsic(_indexOfIU,                java_lang_StringUTF16, indexOf_name, indexOfI_signature,               F_S)   \\\n+  do_intrinsic(_indexOfIUL,               java_lang_StringUTF16, indexOfUL_name, indexOfI_signature,             F_S)   \\\n+  do_intrinsic(_indexOfU_char,            java_lang_StringUTF16, indexOfChar_name, indexOfChar_signature,        F_S)   \\\n+   do_name(     indexOf_name,                                    \"indexOf\")                                             \\\n+   do_name(     indexOfChar_name,                                \"indexOfChar\")                                         \\\n+   do_name(     indexOfUL_name,                                  \"indexOfLatin1\")                                       \\\n+   do_signature(indexOfI_signature,                              \"([BI[BII)I\")                                          \\\n+   do_signature(indexOfChar_signature,                           \"([BIII)I\")                                            \\\n+  do_intrinsic(_equalsL,                  java_lang_StringLatin1,equals_name, equalsB_signature,                 F_S)   \\\n+  do_intrinsic(_equalsU,                  java_lang_StringUTF16, equals_name, equalsB_signature,                 F_S)   \\\n+                                                                                                                        \\\n+  do_intrinsic(_isDigit,                  java_lang_CharacterDataLatin1, isDigit_name,      int_bool_signature,  F_R)   \\\n+   do_name(     isDigit_name,                                           \"isDigit\")                                      \\\n+  do_intrinsic(_isLowerCase,              java_lang_CharacterDataLatin1, isLowerCase_name,  int_bool_signature,  F_R)   \\\n+   do_name(     isLowerCase_name,                                       \"isLowerCase\")                                  \\\n+  do_intrinsic(_isUpperCase,              java_lang_CharacterDataLatin1, isUpperCase_name,  int_bool_signature,  F_R)   \\\n+   do_name(     isUpperCase_name,                                       \"isUpperCase\")                                  \\\n+  do_intrinsic(_isWhitespace,             java_lang_CharacterDataLatin1, isWhitespace_name, int_bool_signature,  F_R)   \\\n+   do_name(     isWhitespace_name,                                      \"isWhitespace\")                                 \\\n+                                                                                                                        \\\n+  do_intrinsic(_Preconditions_checkIndex, jdk_internal_util_Preconditions, checkIndex_name, Preconditions_checkIndex_signature, F_S)   \\\n+   do_signature(Preconditions_checkIndex_signature,              \"(IILjava\/util\/function\/BiFunction;)I\")                \\\n+                                                                                                                        \\\n+  do_class(java_nio_Buffer,               \"java\/nio\/Buffer\")                                                            \\\n+  do_intrinsic(_checkIndex,               java_nio_Buffer,        checkIndex_name, int_int_signature,            F_R)   \\\n+   do_name(     checkIndex_name,                                 \"checkIndex\")                                          \\\n+                                                                                                                        \\\n+  do_class(java_lang_StringCoding,        \"java\/lang\/StringCoding\")                                                     \\\n+  do_intrinsic(_hasNegatives,             java_lang_StringCoding, hasNegatives_name, hasNegatives_signature,     F_S)   \\\n+   do_name(     hasNegatives_name,                               \"hasNegatives\")                                        \\\n+   do_signature(hasNegatives_signature,                          \"([BII)Z\")                                             \\\n+                                                                                                                        \\\n+  do_class(sun_nio_cs_iso8859_1_Encoder,  \"sun\/nio\/cs\/ISO_8859_1$Encoder\")                                              \\\n+  do_intrinsic(_encodeISOArray,     sun_nio_cs_iso8859_1_Encoder, encodeISOArray_name, encodeISOArray_signature, F_S)   \\\n+   do_name(     encodeISOArray_name,                             \"implEncodeISOArray\")                                  \\\n+   do_signature(encodeISOArray_signature,                        \"([CI[BII)I\")                                          \\\n+                                                                                                                        \\\n+  do_intrinsic(_encodeByteISOArray,     java_lang_StringCoding, encodeISOArray_name, indexOfI_signature,         F_S)   \\\n+                                                                                                                        \\\n+  do_class(java_math_BigInteger,                      \"java\/math\/BigInteger\")                                           \\\n+  do_intrinsic(_multiplyToLen,      java_math_BigInteger, multiplyToLen_name, multiplyToLen_signature, F_S)             \\\n+   do_name(     multiplyToLen_name,                             \"implMultiplyToLen\")                                    \\\n+   do_signature(multiplyToLen_signature,                        \"([II[II[I)[I\")                                         \\\n+                                                                                                                        \\\n+  do_intrinsic(_squareToLen, java_math_BigInteger, squareToLen_name, squareToLen_signature, F_S)                        \\\n+   do_name(     squareToLen_name,                             \"implSquareToLen\")                                        \\\n+   do_signature(squareToLen_signature,                        \"([II[II)[I\")                                             \\\n+                                                                                                                        \\\n+  do_intrinsic(_mulAdd, java_math_BigInteger, mulAdd_name, mulAdd_signature, F_S)                                       \\\n+   do_name(     mulAdd_name,                                  \"implMulAdd\")                                             \\\n+   do_signature(mulAdd_signature,                             \"([I[IIII)I\")                                             \\\n+                                                                                                                        \\\n+  do_intrinsic(_montgomeryMultiply,      java_math_BigInteger, montgomeryMultiply_name, montgomeryMultiply_signature, F_S) \\\n+   do_name(     montgomeryMultiply_name,                             \"implMontgomeryMultiply\")                          \\\n+   do_signature(montgomeryMultiply_signature,                        \"([I[I[IIJ[I)[I\")                                  \\\n+                                                                                                                        \\\n+  do_intrinsic(_montgomerySquare,      java_math_BigInteger, montgomerySquare_name, montgomerySquare_signature, F_S)    \\\n+   do_name(     montgomerySquare_name,                             \"implMontgomerySquare\")                              \\\n+   do_signature(montgomerySquare_signature,                        \"([I[IIJ[I)[I\")                                      \\\n+                                                                                                                        \\\n+  do_intrinsic(_bigIntegerRightShiftWorker, java_math_BigInteger, rightShift_name, big_integer_shift_worker_signature, F_S) \\\n+   do_name(     rightShift_name,                                 \"shiftRightImplWorker\")                                \\\n+                                                                                                                        \\\n+  do_intrinsic(_bigIntegerLeftShiftWorker, java_math_BigInteger, leftShift_name, big_integer_shift_worker_signature, F_S) \\\n+   do_name(     leftShift_name,                                 \"shiftLeftImplWorker\")                                  \\\n+                                                                                                                        \\\n+  do_class(jdk_internal_util_ArraysSupport, \"jdk\/internal\/util\/ArraysSupport\")                                                          \\\n+  do_intrinsic(_vectorizedMismatch, jdk_internal_util_ArraysSupport, vectorizedMismatch_name, vectorizedMismatch_signature, F_S)\\\n+   do_name(vectorizedMismatch_name, \"vectorizedMismatch\")                                                               \\\n+   do_signature(vectorizedMismatch_signature, \"(Ljava\/lang\/Object;JLjava\/lang\/Object;JII)I\")                            \\\n+                                                                                                                        \\\n+  \/* java\/lang\/ref\/Reference *\/                                                                                         \\\n+  do_intrinsic(_Reference_get,            java_lang_ref_Reference, get_name,    void_object_signature, F_R)             \\\n+                                                                                                                        \\\n+  \/* support for com.sun.crypto.provider.AESCrypt and some of its callers *\/                                            \\\n+  do_class(com_sun_crypto_provider_aescrypt,      \"com\/sun\/crypto\/provider\/AESCrypt\")                                   \\\n+  do_intrinsic(_aescrypt_encryptBlock, com_sun_crypto_provider_aescrypt, encryptBlock_name, byteArray_int_byteArray_int_signature, F_R)   \\\n+  do_intrinsic(_aescrypt_decryptBlock, com_sun_crypto_provider_aescrypt, decryptBlock_name, byteArray_int_byteArray_int_signature, F_R)   \\\n+   do_name(     encryptBlock_name,                                 \"implEncryptBlock\")                                  \\\n+   do_name(     decryptBlock_name,                                 \"implDecryptBlock\")                                  \\\n+   do_signature(byteArray_int_byteArray_int_signature,             \"([BI[BI)V\")                                         \\\n+                                                                                                                        \\\n+  do_class(com_sun_crypto_provider_cipherBlockChaining,            \"com\/sun\/crypto\/provider\/CipherBlockChaining\")       \\\n+   do_intrinsic(_cipherBlockChaining_encryptAESCrypt, com_sun_crypto_provider_cipherBlockChaining, encrypt_name, byteArray_int_int_byteArray_int_signature, F_R)   \\\n+   do_intrinsic(_cipherBlockChaining_decryptAESCrypt, com_sun_crypto_provider_cipherBlockChaining, decrypt_name, byteArray_int_int_byteArray_int_signature, F_R)   \\\n+   do_name(     encrypt_name,                                      \"implEncrypt\")                                       \\\n+   do_name(     decrypt_name,                                      \"implDecrypt\")                                       \\\n+   do_signature(byteArray_int_int_byteArray_int_signature,         \"([BII[BI)I\")                                        \\\n+                                                                                                                        \\\n+  do_class(com_sun_crypto_provider_electronicCodeBook, \"com\/sun\/crypto\/provider\/ElectronicCodeBook\")                    \\\n+   do_intrinsic(_electronicCodeBook_encryptAESCrypt, com_sun_crypto_provider_electronicCodeBook, ecb_encrypt_name, byteArray_int_int_byteArray_int_signature, F_R)  \\\n+   do_intrinsic(_electronicCodeBook_decryptAESCrypt, com_sun_crypto_provider_electronicCodeBook, ecb_decrypt_name, byteArray_int_int_byteArray_int_signature, F_R)  \\\n+   do_name(ecb_encrypt_name, \"implECBEncrypt\")                                                                          \\\n+   do_name(ecb_decrypt_name, \"implECBDecrypt\")                                                                          \\\n+                                                                                                                        \\\n+  do_class(com_sun_crypto_provider_counterMode,      \"com\/sun\/crypto\/provider\/CounterMode\")                             \\\n+   do_intrinsic(_counterMode_AESCrypt, com_sun_crypto_provider_counterMode, crypt_name, byteArray_int_int_byteArray_int_signature, F_R)   \\\n+   do_name(     crypt_name,                                 \"implCrypt\")                                                    \\\n+                                                                                                                        \\\n+  \/* support for sun.security.provider.MD5 *\/                                                                           \\\n+  do_class(sun_security_provider_md5,                              \"sun\/security\/provider\/MD5\")                         \\\n+  do_intrinsic(_md5_implCompress, sun_security_provider_md5, implCompress_name, implCompress_signature, F_R)            \\\n+   do_name(     implCompress_name,                                 \"implCompress0\")                                     \\\n+   do_signature(implCompress_signature,                            \"([BI)V\")                                            \\\n+                                                                                                                        \\\n+  \/* support for sun.security.provider.SHA *\/                                                                           \\\n+  do_class(sun_security_provider_sha,                              \"sun\/security\/provider\/SHA\")                         \\\n+  do_intrinsic(_sha_implCompress, sun_security_provider_sha, implCompress_name, implCompress_signature, F_R)            \\\n+                                                                                                                        \\\n+  \/* support for sun.security.provider.SHA2 *\/                                                                          \\\n+  do_class(sun_security_provider_sha2,                             \"sun\/security\/provider\/SHA2\")                        \\\n+  do_intrinsic(_sha2_implCompress, sun_security_provider_sha2, implCompress_name, implCompress_signature, F_R)          \\\n+                                                                                                                        \\\n+  \/* support for sun.security.provider.SHA5 *\/                                                                          \\\n+  do_class(sun_security_provider_sha5,                             \"sun\/security\/provider\/SHA5\")                        \\\n+  do_intrinsic(_sha5_implCompress, sun_security_provider_sha5, implCompress_name, implCompress_signature, F_R)          \\\n+                                                                                                                        \\\n+  \/* support for sun.security.provider.DigestBase *\/                                                                    \\\n+  do_class(sun_security_provider_digestbase,                       \"sun\/security\/provider\/DigestBase\")                  \\\n+  do_intrinsic(_digestBase_implCompressMB, sun_security_provider_digestbase, implCompressMB_name, implCompressMB_signature, F_R)   \\\n+   do_name(     implCompressMB_name,                               \"implCompressMultiBlock0\")                           \\\n+   do_signature(implCompressMB_signature,                          \"([BII)I\")                                           \\\n+                                                                                                                        \\\n+   \/* support for java.util.Base64.Encoder*\/                                                                            \\\n+  do_class(java_util_Base64_Encoder, \"java\/util\/Base64$Encoder\")                                                        \\\n+  do_intrinsic(_base64_encodeBlock, java_util_Base64_Encoder, encodeBlock_name, encodeBlock_signature, F_R)             \\\n+  do_name(encodeBlock_name, \"encodeBlock\")                                                                              \\\n+  do_signature(encodeBlock_signature, \"([BII[BIZ)V\")                                                                    \\\n+                                                                                                                        \\\n+  \/* support for com.sun.crypto.provider.GHASH *\/                                                                       \\\n+  do_class(com_sun_crypto_provider_ghash, \"com\/sun\/crypto\/provider\/GHASH\")                                              \\\n+  do_intrinsic(_ghash_processBlocks, com_sun_crypto_provider_ghash, processBlocks_name, ghash_processBlocks_signature, F_S) \\\n+   do_name(processBlocks_name, \"processBlocks\")                                                                         \\\n+   do_signature(ghash_processBlocks_signature, \"([BII[J[J)V\")                                                           \\\n+                                                                                                                        \\\n+  \/* support for java.util.zip *\/                                                                                       \\\n+  do_class(java_util_zip_CRC32,           \"java\/util\/zip\/CRC32\")                                                        \\\n+  do_intrinsic(_updateCRC32,               java_util_zip_CRC32,   update_name, int2_int_signature,               F_SN)  \\\n+   do_name(     update_name,                                      \"update\")                                             \\\n+  do_intrinsic(_updateBytesCRC32,          java_util_zip_CRC32,   updateBytes_name, updateBytes_signature,       F_SN)  \\\n+   do_name(     updateBytes_name,                                \"updateBytes0\")                                        \\\n+   do_signature(updateBytes_signature,                           \"(I[BII)I\")                                            \\\n+  do_intrinsic(_updateByteBufferCRC32,     java_util_zip_CRC32,   updateByteBuffer_name, updateByteBuffer_signature, F_SN) \\\n+   do_name(     updateByteBuffer_name,                           \"updateByteBuffer0\")                                   \\\n+   do_signature(updateByteBuffer_signature,                      \"(IJII)I\")                                             \\\n+                                                                                                                        \\\n+  \/* support for java.util.zip.CRC32C *\/                                                                                \\\n+  do_class(java_util_zip_CRC32C,          \"java\/util\/zip\/CRC32C\")                                                       \\\n+  do_intrinsic(_updateBytesCRC32C,         java_util_zip_CRC32C,  updateBytes_C_name, updateBytes_signature,       F_S) \\\n+   do_name(     updateBytes_C_name,                               \"updateBytes\")                                        \\\n+  do_intrinsic(_updateDirectByteBufferCRC32C, java_util_zip_CRC32C, updateDirectByteBuffer_C_name, updateByteBuffer_signature, F_S) \\\n+   do_name(    updateDirectByteBuffer_C_name,                     \"updateDirectByteBuffer\")                             \\\n+                                                                                                                        \\\n+   \/* support for java.util.zip.Adler32 *\/                                                                              \\\n+  do_class(java_util_zip_Adler32,        \"java\/util\/zip\/Adler32\")                                                       \\\n+  do_intrinsic(_updateBytesAdler32,       java_util_zip_Adler32,  updateBytes_C_name,  updateBytes_signature,  F_SN)    \\\n+  do_intrinsic(_updateByteBufferAdler32,  java_util_zip_Adler32,  updateByteBuffer_A_name,  updateByteBuffer_signature,  F_SN) \\\n+   do_name(     updateByteBuffer_A_name,                          \"updateByteBuffer\")                                   \\\n+                                                                                                                        \\\n+  \/* support for UnsafeConstants *\/                                                                                     \\\n+  do_class(jdk_internal_misc_UnsafeConstants,      \"jdk\/internal\/misc\/UnsafeConstants\")                                 \\\n+                                                                                                                        \\\n+  \/* support for Unsafe *\/                                                                                              \\\n+  do_class(jdk_internal_misc_Unsafe,               \"jdk\/internal\/misc\/Unsafe\")                                          \\\n+  do_class(sun_misc_Unsafe,                        \"sun\/misc\/Unsafe\")                                                   \\\n+                                                                                                                        \\\n+  do_intrinsic(_writeback0,               jdk_internal_misc_Unsafe,     writeback0_name, long_void_signature , F_RN)             \\\n+   do_name(     writeback0_name,                                        \"writeback0\")                                            \\\n+  do_intrinsic(_writebackPreSync0,        jdk_internal_misc_Unsafe,     writebackPreSync0_name, void_method_signature , F_RN)    \\\n+   do_name(     writebackPreSync0_name,                                 \"writebackPreSync0\")                                     \\\n+  do_intrinsic(_writebackPostSync0,       jdk_internal_misc_Unsafe,    writebackPostSync0_name, void_method_signature , F_RN)    \\\n+   do_name(     writebackPostSync0_name,                                \"writebackPostSync0\")                                    \\\n+  do_intrinsic(_allocateInstance,         jdk_internal_misc_Unsafe,     allocateInstance_name, allocateInstance_signature, F_RN) \\\n+   do_name(     allocateInstance_name,                                  \"allocateInstance\")                                      \\\n+   do_signature(allocateInstance_signature,                             \"(Ljava\/lang\/Class;)Ljava\/lang\/Object;\")                 \\\n+  do_intrinsic(_allocateUninitializedArray, jdk_internal_misc_Unsafe,   allocateUninitializedArray_name, newArray_signature,  F_R) \\\n+   do_name(     allocateUninitializedArray_name,                        \"allocateUninitializedArray0\")                           \\\n+  do_intrinsic(_copyMemory,               jdk_internal_misc_Unsafe,     copyMemory_name, copyMemory_signature,         F_RN)     \\\n+   do_name(     copyMemory_name,                                        \"copyMemory0\")                                           \\\n+   do_signature(copyMemory_signature,                                   \"(Ljava\/lang\/Object;JLjava\/lang\/Object;JJ)V\")            \\\n+  do_intrinsic(_loadFence,                jdk_internal_misc_Unsafe,     loadFence_name, loadFence_signature,           F_RN)     \\\n+   do_name(     loadFence_name,                                         \"loadFence\")                                             \\\n+   do_alias(    loadFence_signature,                                    void_method_signature)                                   \\\n+  do_intrinsic(_storeFence,               jdk_internal_misc_Unsafe,     storeFence_name, storeFence_signature,         F_RN)     \\\n+   do_name(     storeFence_name,                                        \"storeFence\")                                            \\\n+   do_alias(    storeFence_signature,                                   void_method_signature)                                   \\\n+  do_intrinsic(_fullFence,                jdk_internal_misc_Unsafe,     fullFence_name, fullFence_signature,           F_RN)     \\\n+   do_name(     fullFence_name,                                         \"fullFence\")                                             \\\n+   do_alias(    fullFence_signature,                                    void_method_signature)                                   \\\n+                                                                                                                        \\\n+  \/* Custom branch frequencies profiling support for JSR292 *\/                                                          \\\n+  do_class(java_lang_invoke_MethodHandleImpl,               \"java\/lang\/invoke\/MethodHandleImpl\")                        \\\n+  do_intrinsic(_profileBoolean, java_lang_invoke_MethodHandleImpl, profileBoolean_name, profileBoolean_signature, F_S)  \\\n+   do_name(     profileBoolean_name,                             \"profileBoolean\")                                      \\\n+   do_signature(profileBoolean_signature,                        \"(Z[I)Z\")                                              \\\n+  do_intrinsic(_isCompileConstant, java_lang_invoke_MethodHandleImpl, isCompileConstant_name, isCompileConstant_signature, F_S) \\\n+   do_name(     isCompileConstant_name,                          \"isCompileConstant\")                                   \\\n+   do_alias(    isCompileConstant_signature,                      object_boolean_signature)                             \\\n+                                                                                                                        \\\n+  \/* unsafe memory references (there are a lot of them...) *\/                                                           \\\n+  do_signature(getReference_signature,    \"(Ljava\/lang\/Object;J)Ljava\/lang\/Object;\")                                    \\\n+  do_signature(putReference_signature,    \"(Ljava\/lang\/Object;JLjava\/lang\/Object;)V\")                                   \\\n+  do_signature(getBoolean_signature,      \"(Ljava\/lang\/Object;J)Z\")                                                     \\\n+  do_signature(putBoolean_signature,      \"(Ljava\/lang\/Object;JZ)V\")                                                    \\\n+  do_signature(getByte_signature,         \"(Ljava\/lang\/Object;J)B\")                                                     \\\n+  do_signature(putByte_signature,         \"(Ljava\/lang\/Object;JB)V\")                                                    \\\n+  do_signature(getShort_signature,        \"(Ljava\/lang\/Object;J)S\")                                                     \\\n+  do_signature(putShort_signature,        \"(Ljava\/lang\/Object;JS)V\")                                                    \\\n+  do_signature(getChar_signature,         \"(Ljava\/lang\/Object;J)C\")                                                     \\\n+  do_signature(putChar_signature,         \"(Ljava\/lang\/Object;JC)V\")                                                    \\\n+  do_signature(getInt_signature,          \"(Ljava\/lang\/Object;J)I\")                                                     \\\n+  do_signature(putInt_signature,          \"(Ljava\/lang\/Object;JI)V\")                                                    \\\n+  do_signature(getLong_signature,         \"(Ljava\/lang\/Object;J)J\")                                                     \\\n+  do_signature(putLong_signature,         \"(Ljava\/lang\/Object;JJ)V\")                                                    \\\n+  do_signature(getFloat_signature,        \"(Ljava\/lang\/Object;J)F\")                                                     \\\n+  do_signature(putFloat_signature,        \"(Ljava\/lang\/Object;JF)V\")                                                    \\\n+  do_signature(getDouble_signature,       \"(Ljava\/lang\/Object;J)D\")                                                     \\\n+  do_signature(putDouble_signature,       \"(Ljava\/lang\/Object;JD)V\")                                                    \\\n+                                                                                                                        \\\n+  do_name(getReference_name,\"getReference\")     do_name(putReference_name,\"putReference\")                               \\\n+  do_name(getBoolean_name,\"getBoolean\")         do_name(putBoolean_name,\"putBoolean\")                                   \\\n+  do_name(getByte_name,\"getByte\")               do_name(putByte_name,\"putByte\")                                         \\\n+  do_name(getShort_name,\"getShort\")             do_name(putShort_name,\"putShort\")                                       \\\n+  do_name(getChar_name,\"getChar\")               do_name(putChar_name,\"putChar\")                                         \\\n+  do_name(getInt_name,\"getInt\")                 do_name(putInt_name,\"putInt\")                                           \\\n+  do_name(getLong_name,\"getLong\")               do_name(putLong_name,\"putLong\")                                         \\\n+  do_name(getFloat_name,\"getFloat\")             do_name(putFloat_name,\"putFloat\")                                       \\\n+  do_name(getDouble_name,\"getDouble\")           do_name(putDouble_name,\"putDouble\")                                     \\\n+                                                                                                                        \\\n+  do_intrinsic(_getReference,       jdk_internal_misc_Unsafe,     getReference_name, getReference_signature,     F_RN)  \\\n+  do_intrinsic(_getBoolean,         jdk_internal_misc_Unsafe,     getBoolean_name, getBoolean_signature,         F_RN)  \\\n+  do_intrinsic(_getByte,            jdk_internal_misc_Unsafe,     getByte_name, getByte_signature,               F_RN)  \\\n+  do_intrinsic(_getShort,           jdk_internal_misc_Unsafe,     getShort_name, getShort_signature,             F_RN)  \\\n+  do_intrinsic(_getChar,            jdk_internal_misc_Unsafe,     getChar_name, getChar_signature,               F_RN)  \\\n+  do_intrinsic(_getInt,             jdk_internal_misc_Unsafe,     getInt_name, getInt_signature,                 F_RN)  \\\n+  do_intrinsic(_getLong,            jdk_internal_misc_Unsafe,     getLong_name, getLong_signature,               F_RN)  \\\n+  do_intrinsic(_getFloat,           jdk_internal_misc_Unsafe,     getFloat_name, getFloat_signature,             F_RN)  \\\n+  do_intrinsic(_getDouble,          jdk_internal_misc_Unsafe,     getDouble_name, getDouble_signature,           F_RN)  \\\n+  do_intrinsic(_putReference,       jdk_internal_misc_Unsafe,     putReference_name, putReference_signature,     F_RN)  \\\n+  do_intrinsic(_putBoolean,         jdk_internal_misc_Unsafe,     putBoolean_name, putBoolean_signature,         F_RN)  \\\n+  do_intrinsic(_putByte,            jdk_internal_misc_Unsafe,     putByte_name, putByte_signature,               F_RN)  \\\n+  do_intrinsic(_putShort,           jdk_internal_misc_Unsafe,     putShort_name, putShort_signature,             F_RN)  \\\n+  do_intrinsic(_putChar,            jdk_internal_misc_Unsafe,     putChar_name, putChar_signature,               F_RN)  \\\n+  do_intrinsic(_putInt,             jdk_internal_misc_Unsafe,     putInt_name, putInt_signature,                 F_RN)  \\\n+  do_intrinsic(_putLong,            jdk_internal_misc_Unsafe,     putLong_name, putLong_signature,               F_RN)  \\\n+  do_intrinsic(_putFloat,           jdk_internal_misc_Unsafe,     putFloat_name, putFloat_signature,             F_RN)  \\\n+  do_intrinsic(_putDouble,          jdk_internal_misc_Unsafe,     putDouble_name, putDouble_signature,           F_RN)  \\\n+                                                                                                                        \\\n+  do_name(getReferenceVolatile_name,\"getReferenceVolatile\")   do_name(putReferenceVolatile_name,\"putReferenceVolatile\") \\\n+  do_name(getBooleanVolatile_name,\"getBooleanVolatile\")       do_name(putBooleanVolatile_name,\"putBooleanVolatile\")     \\\n+  do_name(getByteVolatile_name,\"getByteVolatile\")             do_name(putByteVolatile_name,\"putByteVolatile\")           \\\n+  do_name(getShortVolatile_name,\"getShortVolatile\")           do_name(putShortVolatile_name,\"putShortVolatile\")         \\\n+  do_name(getCharVolatile_name,\"getCharVolatile\")             do_name(putCharVolatile_name,\"putCharVolatile\")           \\\n+  do_name(getIntVolatile_name,\"getIntVolatile\")               do_name(putIntVolatile_name,\"putIntVolatile\")             \\\n+  do_name(getLongVolatile_name,\"getLongVolatile\")             do_name(putLongVolatile_name,\"putLongVolatile\")           \\\n+  do_name(getFloatVolatile_name,\"getFloatVolatile\")           do_name(putFloatVolatile_name,\"putFloatVolatile\")         \\\n+  do_name(getDoubleVolatile_name,\"getDoubleVolatile\")         do_name(putDoubleVolatile_name,\"putDoubleVolatile\")       \\\n+                                                                                                                        \\\n+  do_intrinsic(_getReferenceVolatile,     jdk_internal_misc_Unsafe,     getReferenceVolatile_name, getReference_signature, F_RN)  \\\n+  do_intrinsic(_getBooleanVolatile,       jdk_internal_misc_Unsafe,     getBooleanVolatile_name, getBoolean_signature,     F_RN)  \\\n+  do_intrinsic(_getByteVolatile,          jdk_internal_misc_Unsafe,     getByteVolatile_name, getByte_signature,           F_RN)  \\\n+  do_intrinsic(_getShortVolatile,         jdk_internal_misc_Unsafe,     getShortVolatile_name, getShort_signature,         F_RN)  \\\n+  do_intrinsic(_getCharVolatile,          jdk_internal_misc_Unsafe,     getCharVolatile_name, getChar_signature,           F_RN)  \\\n+  do_intrinsic(_getIntVolatile,           jdk_internal_misc_Unsafe,     getIntVolatile_name, getInt_signature,             F_RN)  \\\n+  do_intrinsic(_getLongVolatile,          jdk_internal_misc_Unsafe,     getLongVolatile_name, getLong_signature,           F_RN)  \\\n+  do_intrinsic(_getFloatVolatile,         jdk_internal_misc_Unsafe,     getFloatVolatile_name, getFloat_signature,         F_RN)  \\\n+  do_intrinsic(_getDoubleVolatile,        jdk_internal_misc_Unsafe,     getDoubleVolatile_name, getDouble_signature,       F_RN)  \\\n+  do_intrinsic(_putReferenceVolatile,     jdk_internal_misc_Unsafe,     putReferenceVolatile_name, putReference_signature, F_RN)  \\\n+  do_intrinsic(_putBooleanVolatile,       jdk_internal_misc_Unsafe,     putBooleanVolatile_name, putBoolean_signature,     F_RN)  \\\n+  do_intrinsic(_putByteVolatile,          jdk_internal_misc_Unsafe,     putByteVolatile_name, putByte_signature,           F_RN)  \\\n+  do_intrinsic(_putShortVolatile,         jdk_internal_misc_Unsafe,     putShortVolatile_name, putShort_signature,         F_RN)  \\\n+  do_intrinsic(_putCharVolatile,          jdk_internal_misc_Unsafe,     putCharVolatile_name, putChar_signature,           F_RN)  \\\n+  do_intrinsic(_putIntVolatile,           jdk_internal_misc_Unsafe,     putIntVolatile_name, putInt_signature,             F_RN)  \\\n+  do_intrinsic(_putLongVolatile,          jdk_internal_misc_Unsafe,     putLongVolatile_name, putLong_signature,           F_RN)  \\\n+  do_intrinsic(_putFloatVolatile,         jdk_internal_misc_Unsafe,     putFloatVolatile_name, putFloat_signature,         F_RN)  \\\n+  do_intrinsic(_putDoubleVolatile,        jdk_internal_misc_Unsafe,     putDoubleVolatile_name, putDouble_signature,       F_RN)  \\\n+                                                                                                                        \\\n+  do_name(getReferenceOpaque_name,\"getReferenceOpaque\") do_name(putReferenceOpaque_name,\"putReferenceOpaque\")           \\\n+  do_name(getBooleanOpaque_name,\"getBooleanOpaque\")     do_name(putBooleanOpaque_name,\"putBooleanOpaque\")               \\\n+  do_name(getByteOpaque_name,\"getByteOpaque\")           do_name(putByteOpaque_name,\"putByteOpaque\")                     \\\n+  do_name(getShortOpaque_name,\"getShortOpaque\")         do_name(putShortOpaque_name,\"putShortOpaque\")                   \\\n+  do_name(getCharOpaque_name,\"getCharOpaque\")           do_name(putCharOpaque_name,\"putCharOpaque\")                     \\\n+  do_name(getIntOpaque_name,\"getIntOpaque\")             do_name(putIntOpaque_name,\"putIntOpaque\")                       \\\n+  do_name(getLongOpaque_name,\"getLongOpaque\")           do_name(putLongOpaque_name,\"putLongOpaque\")                     \\\n+  do_name(getFloatOpaque_name,\"getFloatOpaque\")         do_name(putFloatOpaque_name,\"putFloatOpaque\")                   \\\n+  do_name(getDoubleOpaque_name,\"getDoubleOpaque\")       do_name(putDoubleOpaque_name,\"putDoubleOpaque\")                 \\\n+                                                                                                                        \\\n+  do_intrinsic(_getReferenceOpaque,       jdk_internal_misc_Unsafe,        getReferenceOpaque_name, getReference_signature, F_R)  \\\n+  do_intrinsic(_getBooleanOpaque,         jdk_internal_misc_Unsafe,        getBooleanOpaque_name, getBoolean_signature,     F_R)  \\\n+  do_intrinsic(_getByteOpaque,            jdk_internal_misc_Unsafe,        getByteOpaque_name, getByte_signature,           F_R)  \\\n+  do_intrinsic(_getShortOpaque,           jdk_internal_misc_Unsafe,        getShortOpaque_name, getShort_signature,         F_R)  \\\n+  do_intrinsic(_getCharOpaque,            jdk_internal_misc_Unsafe,        getCharOpaque_name, getChar_signature,           F_R)  \\\n+  do_intrinsic(_getIntOpaque,             jdk_internal_misc_Unsafe,        getIntOpaque_name, getInt_signature,             F_R)  \\\n+  do_intrinsic(_getLongOpaque,            jdk_internal_misc_Unsafe,        getLongOpaque_name, getLong_signature,           F_R)  \\\n+  do_intrinsic(_getFloatOpaque,           jdk_internal_misc_Unsafe,        getFloatOpaque_name, getFloat_signature,         F_R)  \\\n+  do_intrinsic(_getDoubleOpaque,          jdk_internal_misc_Unsafe,        getDoubleOpaque_name, getDouble_signature,       F_R)  \\\n+  do_intrinsic(_putReferenceOpaque,       jdk_internal_misc_Unsafe,        putReferenceOpaque_name, putReference_signature, F_R)  \\\n+  do_intrinsic(_putBooleanOpaque,         jdk_internal_misc_Unsafe,        putBooleanOpaque_name, putBoolean_signature,     F_R)  \\\n+  do_intrinsic(_putByteOpaque,            jdk_internal_misc_Unsafe,        putByteOpaque_name, putByte_signature,           F_R)  \\\n+  do_intrinsic(_putShortOpaque,           jdk_internal_misc_Unsafe,        putShortOpaque_name, putShort_signature,         F_R)  \\\n+  do_intrinsic(_putCharOpaque,            jdk_internal_misc_Unsafe,        putCharOpaque_name, putChar_signature,           F_R)  \\\n+  do_intrinsic(_putIntOpaque,             jdk_internal_misc_Unsafe,        putIntOpaque_name, putInt_signature,             F_R)  \\\n+  do_intrinsic(_putLongOpaque,            jdk_internal_misc_Unsafe,        putLongOpaque_name, putLong_signature,           F_R)  \\\n+  do_intrinsic(_putFloatOpaque,           jdk_internal_misc_Unsafe,        putFloatOpaque_name, putFloat_signature,         F_R)  \\\n+  do_intrinsic(_putDoubleOpaque,          jdk_internal_misc_Unsafe,        putDoubleOpaque_name, putDouble_signature,       F_R)  \\\n+                                                                                                                        \\\n+  do_name(getReferenceAcquire_name,  \"getReferenceAcquire\") do_name(putReferenceRelease_name,  \"putReferenceRelease\")   \\\n+  do_name(getBooleanAcquire_name, \"getBooleanAcquire\")      do_name(putBooleanRelease_name, \"putBooleanRelease\")        \\\n+  do_name(getByteAcquire_name,    \"getByteAcquire\")         do_name(putByteRelease_name,    \"putByteRelease\")           \\\n+  do_name(getShortAcquire_name,   \"getShortAcquire\")        do_name(putShortRelease_name,   \"putShortRelease\")          \\\n+  do_name(getCharAcquire_name,    \"getCharAcquire\")         do_name(putCharRelease_name,    \"putCharRelease\")           \\\n+  do_name(getIntAcquire_name,     \"getIntAcquire\")          do_name(putIntRelease_name,     \"putIntRelease\")            \\\n+  do_name(getLongAcquire_name,    \"getLongAcquire\")         do_name(putLongRelease_name,    \"putLongRelease\")           \\\n+  do_name(getFloatAcquire_name,   \"getFloatAcquire\")        do_name(putFloatRelease_name,   \"putFloatRelease\")          \\\n+  do_name(getDoubleAcquire_name,  \"getDoubleAcquire\")       do_name(putDoubleRelease_name,  \"putDoubleRelease\")         \\\n+                                                                                                                        \\\n+  do_intrinsic(_getReferenceAcquire,     jdk_internal_misc_Unsafe,        getReferenceAcquire_name, getReference_signature, F_R)  \\\n+  do_intrinsic(_getBooleanAcquire,       jdk_internal_misc_Unsafe,        getBooleanAcquire_name, getBoolean_signature,     F_R)  \\\n+  do_intrinsic(_getByteAcquire,          jdk_internal_misc_Unsafe,        getByteAcquire_name, getByte_signature,           F_R)  \\\n+  do_intrinsic(_getShortAcquire,         jdk_internal_misc_Unsafe,        getShortAcquire_name, getShort_signature,         F_R)  \\\n+  do_intrinsic(_getCharAcquire,          jdk_internal_misc_Unsafe,        getCharAcquire_name, getChar_signature,           F_R)  \\\n+  do_intrinsic(_getIntAcquire,           jdk_internal_misc_Unsafe,        getIntAcquire_name, getInt_signature,             F_R)  \\\n+  do_intrinsic(_getLongAcquire,          jdk_internal_misc_Unsafe,        getLongAcquire_name, getLong_signature,           F_R)  \\\n+  do_intrinsic(_getFloatAcquire,         jdk_internal_misc_Unsafe,        getFloatAcquire_name, getFloat_signature,         F_R)  \\\n+  do_intrinsic(_getDoubleAcquire,        jdk_internal_misc_Unsafe,        getDoubleAcquire_name, getDouble_signature,       F_R)  \\\n+  do_intrinsic(_putReferenceRelease,     jdk_internal_misc_Unsafe,        putReferenceRelease_name, putReference_signature, F_R)  \\\n+  do_intrinsic(_putBooleanRelease,       jdk_internal_misc_Unsafe,        putBooleanRelease_name, putBoolean_signature,     F_R)  \\\n+  do_intrinsic(_putByteRelease,          jdk_internal_misc_Unsafe,        putByteRelease_name, putByte_signature,           F_R)  \\\n+  do_intrinsic(_putShortRelease,         jdk_internal_misc_Unsafe,        putShortRelease_name, putShort_signature,         F_R)  \\\n+  do_intrinsic(_putCharRelease,          jdk_internal_misc_Unsafe,        putCharRelease_name, putChar_signature,           F_R)  \\\n+  do_intrinsic(_putIntRelease,           jdk_internal_misc_Unsafe,        putIntRelease_name, putInt_signature,             F_R)  \\\n+  do_intrinsic(_putLongRelease,          jdk_internal_misc_Unsafe,        putLongRelease_name, putLong_signature,           F_R)  \\\n+  do_intrinsic(_putFloatRelease,         jdk_internal_misc_Unsafe,        putFloatRelease_name, putFloat_signature,         F_R)  \\\n+  do_intrinsic(_putDoubleRelease,        jdk_internal_misc_Unsafe,        putDoubleRelease_name, putDouble_signature,       F_R)  \\\n+                                                                                                                        \\\n+  do_name(getShortUnaligned_name,\"getShortUnaligned\")     do_name(putShortUnaligned_name,\"putShortUnaligned\")           \\\n+  do_name(getCharUnaligned_name,\"getCharUnaligned\")       do_name(putCharUnaligned_name,\"putCharUnaligned\")             \\\n+  do_name(getIntUnaligned_name,\"getIntUnaligned\")         do_name(putIntUnaligned_name,\"putIntUnaligned\")               \\\n+  do_name(getLongUnaligned_name,\"getLongUnaligned\")       do_name(putLongUnaligned_name,\"putLongUnaligned\")             \\\n+                                                                                                                        \\\n+  do_intrinsic(_getShortUnaligned,         jdk_internal_misc_Unsafe,    getShortUnaligned_name, getShort_signature,     F_R)  \\\n+  do_intrinsic(_getCharUnaligned,          jdk_internal_misc_Unsafe,    getCharUnaligned_name, getChar_signature,       F_R)  \\\n+  do_intrinsic(_getIntUnaligned,           jdk_internal_misc_Unsafe,    getIntUnaligned_name, getInt_signature,         F_R)  \\\n+  do_intrinsic(_getLongUnaligned,          jdk_internal_misc_Unsafe,    getLongUnaligned_name, getLong_signature,       F_R)  \\\n+  do_intrinsic(_putShortUnaligned,         jdk_internal_misc_Unsafe,    putShortUnaligned_name, putShort_signature,     F_R)  \\\n+  do_intrinsic(_putCharUnaligned,          jdk_internal_misc_Unsafe,    putCharUnaligned_name, putChar_signature,       F_R)  \\\n+  do_intrinsic(_putIntUnaligned,           jdk_internal_misc_Unsafe,    putIntUnaligned_name, putInt_signature,         F_R)  \\\n+  do_intrinsic(_putLongUnaligned,          jdk_internal_misc_Unsafe,    putLongUnaligned_name, putLong_signature,       F_R)  \\\n+                                                                                                                        \\\n+  do_signature(compareAndSetReference_signature,      \"(Ljava\/lang\/Object;JLjava\/lang\/Object;Ljava\/lang\/Object;)Z\")        \\\n+  do_signature(compareAndExchangeReference_signature, \"(Ljava\/lang\/Object;JLjava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\") \\\n+  do_signature(compareAndSetLong_signature,        \"(Ljava\/lang\/Object;JJJ)Z\")                                          \\\n+  do_signature(compareAndExchangeLong_signature,   \"(Ljava\/lang\/Object;JJJ)J\")                                          \\\n+  do_signature(compareAndSetInt_signature,         \"(Ljava\/lang\/Object;JII)Z\")                                          \\\n+  do_signature(compareAndExchangeInt_signature,    \"(Ljava\/lang\/Object;JII)I\")                                          \\\n+  do_signature(compareAndSetByte_signature,        \"(Ljava\/lang\/Object;JBB)Z\")                                          \\\n+  do_signature(compareAndExchangeByte_signature,   \"(Ljava\/lang\/Object;JBB)B\")                                          \\\n+  do_signature(compareAndSetShort_signature,       \"(Ljava\/lang\/Object;JSS)Z\")                                          \\\n+  do_signature(compareAndExchangeShort_signature,  \"(Ljava\/lang\/Object;JSS)S\")                                          \\\n+                                                                                                                        \\\n+  do_name(compareAndSetReference_name,              \"compareAndSetReference\")                                           \\\n+  do_name(compareAndExchangeReference_name,         \"compareAndExchangeReference\")                                      \\\n+  do_name(compareAndExchangeReferenceAcquire_name,  \"compareAndExchangeReferenceAcquire\")                               \\\n+  do_name(compareAndExchangeReferenceRelease_name,  \"compareAndExchangeReferenceRelease\")                               \\\n+  do_name(compareAndSetLong_name,                   \"compareAndSetLong\")                                                \\\n+  do_name(compareAndExchangeLong_name,              \"compareAndExchangeLong\")                                           \\\n+  do_name(compareAndExchangeLongAcquire_name,       \"compareAndExchangeLongAcquire\")                                    \\\n+  do_name(compareAndExchangeLongRelease_name,       \"compareAndExchangeLongRelease\")                                    \\\n+  do_name(compareAndSetInt_name,                    \"compareAndSetInt\")                                                 \\\n+  do_name(compareAndExchangeInt_name,               \"compareAndExchangeInt\")                                            \\\n+  do_name(compareAndExchangeIntAcquire_name,        \"compareAndExchangeIntAcquire\")                                     \\\n+  do_name(compareAndExchangeIntRelease_name,        \"compareAndExchangeIntRelease\")                                     \\\n+  do_name(compareAndSetByte_name,                   \"compareAndSetByte\")                                                \\\n+  do_name(compareAndExchangeByte_name,              \"compareAndExchangeByte\")                                           \\\n+  do_name(compareAndExchangeByteAcquire_name,       \"compareAndExchangeByteAcquire\")                                    \\\n+  do_name(compareAndExchangeByteRelease_name,       \"compareAndExchangeByteRelease\")                                    \\\n+  do_name(compareAndSetShort_name,                  \"compareAndSetShort\")                                               \\\n+  do_name(compareAndExchangeShort_name,             \"compareAndExchangeShort\")                                          \\\n+  do_name(compareAndExchangeShortAcquire_name,      \"compareAndExchangeShortAcquire\")                                   \\\n+  do_name(compareAndExchangeShortRelease_name,      \"compareAndExchangeShortRelease\")                                   \\\n+                                                                                                                        \\\n+  do_name(weakCompareAndSetReferencePlain_name,     \"weakCompareAndSetReferencePlain\")                                  \\\n+  do_name(weakCompareAndSetReferenceAcquire_name,   \"weakCompareAndSetReferenceAcquire\")                                \\\n+  do_name(weakCompareAndSetReferenceRelease_name,   \"weakCompareAndSetReferenceRelease\")                                \\\n+  do_name(weakCompareAndSetReference_name,          \"weakCompareAndSetReference\")                                       \\\n+  do_name(weakCompareAndSetLongPlain_name,          \"weakCompareAndSetLongPlain\")                                       \\\n+  do_name(weakCompareAndSetLongAcquire_name,        \"weakCompareAndSetLongAcquire\")                                     \\\n+  do_name(weakCompareAndSetLongRelease_name,        \"weakCompareAndSetLongRelease\")                                     \\\n+  do_name(weakCompareAndSetLong_name,               \"weakCompareAndSetLong\")                                            \\\n+  do_name(weakCompareAndSetIntPlain_name,           \"weakCompareAndSetIntPlain\")                                        \\\n+  do_name(weakCompareAndSetIntAcquire_name,         \"weakCompareAndSetIntAcquire\")                                      \\\n+  do_name(weakCompareAndSetIntRelease_name,         \"weakCompareAndSetIntRelease\")                                      \\\n+  do_name(weakCompareAndSetInt_name,                \"weakCompareAndSetInt\")                                             \\\n+  do_name(weakCompareAndSetBytePlain_name,          \"weakCompareAndSetBytePlain\")                                       \\\n+  do_name(weakCompareAndSetByteAcquire_name,        \"weakCompareAndSetByteAcquire\")                                     \\\n+  do_name(weakCompareAndSetByteRelease_name,        \"weakCompareAndSetByteRelease\")                                     \\\n+  do_name(weakCompareAndSetByte_name,               \"weakCompareAndSetByte\")                                            \\\n+  do_name(weakCompareAndSetShortPlain_name,         \"weakCompareAndSetShortPlain\")                                      \\\n+  do_name(weakCompareAndSetShortAcquire_name,       \"weakCompareAndSetShortAcquire\")                                    \\\n+  do_name(weakCompareAndSetShortRelease_name,       \"weakCompareAndSetShortRelease\")                                    \\\n+  do_name(weakCompareAndSetShort_name,              \"weakCompareAndSetShort\")                                           \\\n+                                                                                                                        \\\n+  do_intrinsic(_compareAndSetReference,              jdk_internal_misc_Unsafe,  compareAndSetReference_name,              compareAndSetReference_signature,      F_RN) \\\n+  do_intrinsic(_compareAndExchangeReference,         jdk_internal_misc_Unsafe,  compareAndExchangeReference_name,         compareAndExchangeReference_signature, F_RN) \\\n+  do_intrinsic(_compareAndExchangeReferenceAcquire,  jdk_internal_misc_Unsafe,  compareAndExchangeReferenceAcquire_name,  compareAndExchangeReference_signature, F_R)  \\\n+  do_intrinsic(_compareAndExchangeReferenceRelease,  jdk_internal_misc_Unsafe,  compareAndExchangeReferenceRelease_name,  compareAndExchangeReference_signature, F_R)  \\\n+  do_intrinsic(_compareAndSetLong,                jdk_internal_misc_Unsafe,  compareAndSetLong_name,                compareAndSetLong_signature,        F_RN) \\\n+  do_intrinsic(_compareAndExchangeLong,           jdk_internal_misc_Unsafe,  compareAndExchangeLong_name,           compareAndExchangeLong_signature,   F_RN) \\\n+  do_intrinsic(_compareAndExchangeLongAcquire,    jdk_internal_misc_Unsafe,  compareAndExchangeLongAcquire_name,    compareAndExchangeLong_signature,   F_R)  \\\n+  do_intrinsic(_compareAndExchangeLongRelease,    jdk_internal_misc_Unsafe,  compareAndExchangeLongRelease_name,    compareAndExchangeLong_signature,   F_R)  \\\n+  do_intrinsic(_compareAndSetInt,                 jdk_internal_misc_Unsafe,  compareAndSetInt_name,                 compareAndSetInt_signature,         F_RN) \\\n+  do_intrinsic(_compareAndExchangeInt,            jdk_internal_misc_Unsafe,  compareAndExchangeInt_name,            compareAndExchangeInt_signature,    F_RN) \\\n+  do_intrinsic(_compareAndExchangeIntAcquire,     jdk_internal_misc_Unsafe,  compareAndExchangeIntAcquire_name,     compareAndExchangeInt_signature,    F_R)  \\\n+  do_intrinsic(_compareAndExchangeIntRelease,     jdk_internal_misc_Unsafe,  compareAndExchangeIntRelease_name,     compareAndExchangeInt_signature,    F_R)  \\\n+  do_intrinsic(_compareAndSetByte,                jdk_internal_misc_Unsafe,  compareAndSetByte_name,                compareAndSetByte_signature,        F_R)  \\\n+  do_intrinsic(_compareAndExchangeByte,           jdk_internal_misc_Unsafe,  compareAndExchangeByte_name,           compareAndExchangeByte_signature,   F_R)  \\\n+  do_intrinsic(_compareAndExchangeByteAcquire,    jdk_internal_misc_Unsafe,  compareAndExchangeByteAcquire_name,    compareAndExchangeByte_signature,   F_R)  \\\n+  do_intrinsic(_compareAndExchangeByteRelease,    jdk_internal_misc_Unsafe,  compareAndExchangeByteRelease_name,    compareAndExchangeByte_signature,   F_R)  \\\n+  do_intrinsic(_compareAndSetShort,               jdk_internal_misc_Unsafe,  compareAndSetShort_name,               compareAndSetShort_signature,       F_R)  \\\n+  do_intrinsic(_compareAndExchangeShort,          jdk_internal_misc_Unsafe,  compareAndExchangeShort_name,          compareAndExchangeShort_signature,  F_R)  \\\n+  do_intrinsic(_compareAndExchangeShortAcquire,   jdk_internal_misc_Unsafe,  compareAndExchangeShortAcquire_name,   compareAndExchangeShort_signature,  F_R)  \\\n+  do_intrinsic(_compareAndExchangeShortRelease,   jdk_internal_misc_Unsafe,  compareAndExchangeShortRelease_name,   compareAndExchangeShort_signature,  F_R)  \\\n+                                                                                                                                                             \\\n+  do_intrinsic(_weakCompareAndSetReferencePlain,  jdk_internal_misc_Unsafe,  weakCompareAndSetReferencePlain_name,     compareAndSetReference_signature,      F_R) \\\n+  do_intrinsic(_weakCompareAndSetReferenceAcquire,jdk_internal_misc_Unsafe,  weakCompareAndSetReferenceAcquire_name,   compareAndSetReference_signature,      F_R) \\\n+  do_intrinsic(_weakCompareAndSetReferenceRelease,jdk_internal_misc_Unsafe,  weakCompareAndSetReferenceRelease_name,   compareAndSetReference_signature,      F_R) \\\n+  do_intrinsic(_weakCompareAndSetReference,       jdk_internal_misc_Unsafe,  weakCompareAndSetReference_name,          compareAndSetReference_signature,      F_R) \\\n+  do_intrinsic(_weakCompareAndSetLongPlain,       jdk_internal_misc_Unsafe,  weakCompareAndSetLongPlain_name,       compareAndSetLong_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetLongAcquire,     jdk_internal_misc_Unsafe,  weakCompareAndSetLongAcquire_name,     compareAndSetLong_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetLongRelease,     jdk_internal_misc_Unsafe,  weakCompareAndSetLongRelease_name,     compareAndSetLong_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetLong,            jdk_internal_misc_Unsafe,  weakCompareAndSetLong_name,            compareAndSetLong_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetIntPlain,        jdk_internal_misc_Unsafe,  weakCompareAndSetIntPlain_name,        compareAndSetInt_signature,         F_R) \\\n+  do_intrinsic(_weakCompareAndSetIntAcquire,      jdk_internal_misc_Unsafe,  weakCompareAndSetIntAcquire_name,      compareAndSetInt_signature,         F_R) \\\n+  do_intrinsic(_weakCompareAndSetIntRelease,      jdk_internal_misc_Unsafe,  weakCompareAndSetIntRelease_name,      compareAndSetInt_signature,         F_R) \\\n+  do_intrinsic(_weakCompareAndSetInt,             jdk_internal_misc_Unsafe,  weakCompareAndSetInt_name,             compareAndSetInt_signature,         F_R) \\\n+  do_intrinsic(_weakCompareAndSetBytePlain,       jdk_internal_misc_Unsafe,  weakCompareAndSetBytePlain_name,       compareAndSetByte_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetByteAcquire,     jdk_internal_misc_Unsafe,  weakCompareAndSetByteAcquire_name,     compareAndSetByte_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetByteRelease,     jdk_internal_misc_Unsafe,  weakCompareAndSetByteRelease_name,     compareAndSetByte_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetByte,            jdk_internal_misc_Unsafe,  weakCompareAndSetByte_name,            compareAndSetByte_signature,        F_R) \\\n+  do_intrinsic(_weakCompareAndSetShortPlain,      jdk_internal_misc_Unsafe,  weakCompareAndSetShortPlain_name,      compareAndSetShort_signature,       F_R) \\\n+  do_intrinsic(_weakCompareAndSetShortAcquire,    jdk_internal_misc_Unsafe,  weakCompareAndSetShortAcquire_name,    compareAndSetShort_signature,       F_R) \\\n+  do_intrinsic(_weakCompareAndSetShortRelease,    jdk_internal_misc_Unsafe,  weakCompareAndSetShortRelease_name,    compareAndSetShort_signature,       F_R) \\\n+  do_intrinsic(_weakCompareAndSetShort,           jdk_internal_misc_Unsafe,  weakCompareAndSetShort_name,           compareAndSetShort_signature,       F_R) \\\n+                           \\\n+  do_intrinsic(_getAndAddInt,             jdk_internal_misc_Unsafe,     getAndAddInt_name, getAndAddInt_signature, F_R)       \\\n+   do_name(     getAndAddInt_name,                                      \"getAndAddInt\")                                       \\\n+   do_signature(getAndAddInt_signature,                                 \"(Ljava\/lang\/Object;JI)I\" )                           \\\n+  do_intrinsic(_getAndAddLong,            jdk_internal_misc_Unsafe,     getAndAddLong_name, getAndAddLong_signature, F_R)     \\\n+   do_name(     getAndAddLong_name,                                     \"getAndAddLong\")                                      \\\n+   do_signature(getAndAddLong_signature,                                \"(Ljava\/lang\/Object;JJ)J\" )                           \\\n+  do_intrinsic(_getAndAddByte,            jdk_internal_misc_Unsafe,     getAndAddByte_name, getAndAddByte_signature, F_R)     \\\n+   do_name(     getAndAddByte_name,                                     \"getAndAddByte\")                                      \\\n+   do_signature(getAndAddByte_signature,                                \"(Ljava\/lang\/Object;JB)B\" )                           \\\n+  do_intrinsic(_getAndAddShort,           jdk_internal_misc_Unsafe,     getAndAddShort_name, getAndAddShort_signature, F_R)   \\\n+   do_name(     getAndAddShort_name,                                    \"getAndAddShort\")                                     \\\n+   do_signature(getAndAddShort_signature,                               \"(Ljava\/lang\/Object;JS)S\" )                           \\\n+  do_intrinsic(_getAndSetInt,             jdk_internal_misc_Unsafe,     getAndSetInt_name, getAndSetInt_signature, F_R)       \\\n+   do_name(     getAndSetInt_name,                                      \"getAndSetInt\")                                       \\\n+   do_alias(    getAndSetInt_signature,                                 \/*\"(Ljava\/lang\/Object;JI)I\"*\/ getAndAddInt_signature)   \\\n+  do_intrinsic(_getAndSetLong,            jdk_internal_misc_Unsafe,     getAndSetLong_name, getAndSetLong_signature, F_R)     \\\n+   do_name(     getAndSetLong_name,                                     \"getAndSetLong\")                                      \\\n+   do_alias(    getAndSetLong_signature,                                \/*\"(Ljava\/lang\/Object;JJ)J\"*\/ getAndAddLong_signature)  \\\n+  do_intrinsic(_getAndSetByte,            jdk_internal_misc_Unsafe,     getAndSetByte_name, getAndSetByte_signature, F_R)     \\\n+   do_name(     getAndSetByte_name,                                     \"getAndSetByte\")                                      \\\n+   do_alias(    getAndSetByte_signature,                                \/*\"(Ljava\/lang\/Object;JB)B\"*\/ getAndAddByte_signature)  \\\n+  do_intrinsic(_getAndSetShort,           jdk_internal_misc_Unsafe,     getAndSetShort_name, getAndSetShort_signature, F_R)   \\\n+   do_name(     getAndSetShort_name,                                    \"getAndSetShort\")                                     \\\n+   do_alias(    getAndSetShort_signature,                               \/*\"(Ljava\/lang\/Object;JS)S\"*\/ getAndAddShort_signature) \\\n+  do_intrinsic(_getAndSetReference,       jdk_internal_misc_Unsafe,     getAndSetReference_name, getAndSetReference_signature, F_R) \\\n+   do_name(     getAndSetReference_name,                                \"getAndSetReference\")                                  \\\n+   do_signature(getAndSetReference_signature,                           \"(Ljava\/lang\/Object;JLjava\/lang\/Object;)Ljava\/lang\/Object;\" ) \\\n+                                                                                                                                               \\\n+  \/* Vector API intrinsification support *\/                                                                                                    \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorUnaryOp, jdk_internal_vm_vector_VectorSupport, vector_unary_op_name, vector_unary_op_sig, F_S)                           \\\n+   do_signature(vector_unary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\") \\\n+   do_name(vector_unary_op_name,     \"unaryOp\")                                                                                                \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorBinaryOp, jdk_internal_vm_vector_VectorSupport, vector_binary_op_name, vector_binary_op_sig, F_S)                        \\\n+   do_signature(vector_binary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;\"                              \\\n+                                       \"Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\")                                                   \\\n+   do_name(vector_binary_op_name,     \"binaryOp\")                                                                                              \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorTernaryOp, jdk_internal_vm_vector_VectorSupport, vector_ternary_op_name, vector_ternary_op_sig, F_S)                     \\\n+   do_signature(vector_ternary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;\"                             \\\n+                                        \"Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljava\/lang\/Object;\")        \\\n+   do_name(vector_ternary_op_name,     \"ternaryOp\")                                                                                            \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorBroadcastCoerced, jdk_internal_vm_vector_VectorSupport, vector_broadcast_coerced_name, vector_broadcast_coerced_sig, F_S)\\\n+   do_signature(vector_broadcast_coerced_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;IJLjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"      \\\n+                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)Ljava\/lang\/Object;\")                 \\\n+   do_name(vector_broadcast_coerced_name, \"broadcastCoerced\")                                                                                  \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorShuffleIota, jdk_internal_vm_vector_VectorSupport, vector_shuffle_step_iota_name, vector_shuffle_step_iota_sig, F_S)     \\\n+   do_signature(vector_shuffle_step_iota_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"        \\\n+                                               \"IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\") \\\n+   do_name(vector_shuffle_step_iota_name, \"shuffleIota\")                                                                                       \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorShuffleToVector, jdk_internal_vm_vector_VectorSupport, vector_shuffle_to_vector_name, vector_shuffle_to_vector_sig, F_S) \\\n+   do_signature(vector_shuffle_to_vector_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\" \\\n+                                               \"ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation;)Ljava\/lang\/Object;\")          \\\n+   do_name(vector_shuffle_to_vector_name, \"shuffleToVector\")                                                                                   \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorLoadOp, jdk_internal_vm_vector_VectorSupport, vector_load_op_name, vector_load_op_sig, F_S)                              \\\n+   do_signature(vector_load_op_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjava\/lang\/Object;\"                                \\\n+                                     \"ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation;)Ljava\/lang\/Object;\") \\\n+   do_name(vector_load_op_name,     \"load\")                                                                                                    \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorStoreOp, jdk_internal_vm_vector_VectorSupport, vector_store_op_name, vector_store_op_sig, F_S)                           \\\n+   do_signature(vector_store_op_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;\"    \\\n+                                      \"Ljava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperation;)V\")                      \\\n+   do_name(vector_store_op_name,     \"store\")                                                                                                  \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorReductionCoerced, jdk_internal_vm_vector_VectorSupport, vector_reduction_coerced_name, vector_reduction_coerced_sig, F_S) \\\n+   do_signature(vector_reduction_coerced_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/util\/function\/Function;)J\") \\\n+   do_name(vector_reduction_coerced_name, \"reductionCoerced\")                                                                                  \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorTest, jdk_internal_vm_vector_VectorSupport, vector_test_name, vector_test_sig, F_S)                                      \\\n+   do_signature(vector_test_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Z\") \\\n+   do_name(vector_test_name, \"test\")                                                                                                           \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorBlend, jdk_internal_vm_vector_VectorSupport, vector_blend_name, vector_blend_sig, F_S)                                   \\\n+   do_signature(vector_blend_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                      \\\n+                                   \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;\" \\\n+                                   \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")       \\\n+   do_name(vector_blend_name, \"blend\")                                                                                                         \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorCompare, jdk_internal_vm_vector_VectorSupport, vector_compare_name, vector_compare_sig, F_S)                             \\\n+   do_signature(vector_compare_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                   \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\" \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"           \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp;\" \")\" \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;\") \\\n+   do_name(vector_compare_name, \"compare\")                                                                                                     \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorRearrange, jdk_internal_vm_vector_VectorSupport, vector_rearrange_name, vector_rearrange_sig, F_S)                       \\\n+   do_signature(vector_rearrange_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                  \\\n+                                       \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\"     \\\n+                                       \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\") \\\n+   do_name(vector_rearrange_name, \"rearrangeOp\")                                                                                               \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorExtract, jdk_internal_vm_vector_VectorSupport, vector_extract_name, vector_extract_sig, F_S)                             \\\n+   do_signature(vector_extract_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                     \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;I\"                                                          \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J\")                                                  \\\n+   do_name(vector_extract_name, \"extract\")                                                                                                     \\\n+                                                                                                                                               \\\n+ do_intrinsic(_VectorInsert, jdk_internal_vm_vector_VectorSupport, vector_insert_name, vector_insert_sig, F_S)                                 \\\n+   do_signature(vector_insert_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                      \\\n+                                    \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;IJ\"                                                          \\\n+                                    \"Ljdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")        \\\n+   do_name(vector_insert_name, \"insert\")                                                                                                       \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorBroadcastInt, jdk_internal_vm_vector_VectorSupport, vector_broadcast_int_name, vector_broadcast_int_sig, F_S)            \\\n+   do_signature(vector_broadcast_int_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;I\"                                                              \\\n+                                           \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;I\"                                                    \\\n+                                           \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\") \\\n+   do_name(vector_broadcast_int_name, \"broadcastInt\")                                                                                          \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorConvert, jdk_internal_vm_vector_VectorSupport, vector_convert_name, vector_convert_sig, F_S)                             \\\n+   do_signature(vector_convert_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                    \\\n+                                     \"Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                     \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\"                                                    \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"                                                    \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorConvertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\") \\\n+   do_name(vector_convert_name, \"convert\")                                                                                                     \\\n+                                                                                                                                               \\\n+   do_intrinsic(_VectorGatherOp, jdk_internal_vm_vector_VectorSupport, vector_gather_name, vector_gather_sig, F_S)                             \\\n+    do_signature(vector_gather_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;\"                                                    \\\n+                                     \"Ljava\/lang\/Object;J\"                                                                                     \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"                                                           \\\n+                                     \"Ljava\/lang\/Object;I[II\"                                                                                  \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"                                                    \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap;)\"                                      \\\n+                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")                                                          \\\n+    do_name(vector_gather_name, \"loadWithMap\")                                                                                                 \\\n+                                                                                                                                               \\\n+   do_intrinsic(_VectorScatterOp, jdk_internal_vm_vector_VectorSupport, vector_scatter_name, vector_scatter_sig, F_S)                          \\\n+    do_signature(vector_scatter_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;\"                                                   \\\n+                                      \"Ljava\/lang\/Object;J\"                                                                                    \\\n+                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"             \\\n+                                      \"Ljava\/lang\/Object;I[II\"                                                                                 \\\n+                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap;)V\")                                  \\\n+    do_name(vector_scatter_name, \"storeWithMap\")                                                                                               \\\n+                                                                                                                                               \\\n+  do_intrinsic(_VectorRebox, jdk_internal_vm_vector_VectorSupport, vector_rebox_name, vector_rebox_sig, F_S)                                   \\\n+   do_alias(vector_rebox_sig, object_object_signature)                                                                                         \\\n+   do_name(vector_rebox_name, \"maybeRebox\")                                                                                                    \\\n+                                                                                                                                               \\\n+                                                                                                                               \\\n+   \/* (2) Bytecode intrinsics                                                                        *\/                        \\\n+                                                                                                                               \\\n+  do_intrinsic(_park,                     jdk_internal_misc_Unsafe,     park_name, park_signature,                     F_R)    \\\n+   do_name(     park_name,                                              \"park\")                                                \\\n+   do_signature(park_signature,                                         \"(ZJ)V\")                                               \\\n+  do_intrinsic(_unpark,                   jdk_internal_misc_Unsafe,     unpark_name, unpark_signature,                 F_R)    \\\n+   do_name(     unpark_name,                                            \"unpark\")                                              \\\n+   do_alias(    unpark_signature,                                       \/*(LObject;)V*\/ object_void_signature)                 \\\n+                                                                                                                               \\\n+  do_intrinsic(_StringBuilder_void,   java_lang_StringBuilder, object_initializer_name, void_method_signature,     F_R)   \\\n+  do_intrinsic(_StringBuilder_int,    java_lang_StringBuilder, object_initializer_name, int_void_signature,        F_R)   \\\n+  do_intrinsic(_StringBuilder_String, java_lang_StringBuilder, object_initializer_name, string_void_signature,     F_R)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_StringBuilder_append_char,   java_lang_StringBuilder, append_name, char_StringBuilder_signature,   F_R)   \\\n+  do_intrinsic(_StringBuilder_append_int,    java_lang_StringBuilder, append_name, int_StringBuilder_signature,    F_R)   \\\n+  do_intrinsic(_StringBuilder_append_String, java_lang_StringBuilder, append_name, String_StringBuilder_signature, F_R)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_StringBuilder_toString, java_lang_StringBuilder, toString_name, void_string_signature,             F_R)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_StringBuffer_void,   java_lang_StringBuffer, object_initializer_name, void_method_signature,       F_R)   \\\n+  do_intrinsic(_StringBuffer_int,    java_lang_StringBuffer, object_initializer_name, int_void_signature,          F_R)   \\\n+  do_intrinsic(_StringBuffer_String, java_lang_StringBuffer, object_initializer_name, string_void_signature,       F_R)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_StringBuffer_append_char,   java_lang_StringBuffer, append_name, char_StringBuffer_signature,      F_Y)   \\\n+  do_intrinsic(_StringBuffer_append_int,    java_lang_StringBuffer, append_name, int_StringBuffer_signature,       F_Y)   \\\n+  do_intrinsic(_StringBuffer_append_String, java_lang_StringBuffer, append_name, String_StringBuffer_signature,    F_Y)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_StringBuffer_toString,  java_lang_StringBuffer, toString_name, void_string_signature,              F_Y)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_Integer_toString,      java_lang_Integer, toString_name, int_String_signature,                     F_S)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_String_String, java_lang_String, object_initializer_name, string_void_signature,                   F_R)   \\\n+                                                                                                                          \\\n+  do_intrinsic(_Object_init,              java_lang_Object, object_initializer_name, void_method_signature,        F_R)   \\\n+  \/*    (symbol object_initializer_name defined above) *\/                                                                 \\\n+                                                                                                                          \\\n+  do_intrinsic(_invoke,                   java_lang_reflect_Method, invoke_name, object_object_array_object_signature, F_R) \\\n+  \/*   (symbols invoke_name and invoke_signature defined above) *\/                                                      \\\n+  \/* the polymorphic MH intrinsics must be in compact order, with _invokeGeneric first and _linkToInterface last *\/     \\\n+  do_intrinsic(_invokeGeneric,            java_lang_invoke_MethodHandle, invoke_name,           star_name, F_RN)        \\\n+  do_intrinsic(_invokeBasic,              java_lang_invoke_MethodHandle, invokeBasic_name,      star_name, F_RN)        \\\n+  do_intrinsic(_linkToVirtual,            java_lang_invoke_MethodHandle, linkToVirtual_name,    star_name, F_SN)        \\\n+  do_intrinsic(_linkToStatic,             java_lang_invoke_MethodHandle, linkToStatic_name,     star_name, F_SN)        \\\n+  do_intrinsic(_linkToSpecial,            java_lang_invoke_MethodHandle, linkToSpecial_name,    star_name, F_SN)        \\\n+  do_intrinsic(_linkToInterface,          java_lang_invoke_MethodHandle, linkToInterface_name,  star_name, F_SN)        \\\n+  \/* special marker for bytecode generated for the JVM from a LambdaForm: *\/                                            \\\n+  do_intrinsic(_compiledLambdaForm,       java_lang_invoke_MethodHandle, compiledLambdaForm_name, star_name, F_RN)      \\\n+                                                                                                                        \\\n+  \/* unboxing methods: *\/                                                                                               \\\n+  do_intrinsic(_booleanValue,             java_lang_Boolean,      booleanValue_name, void_boolean_signature, F_R)       \\\n+   do_name(     booleanValue_name,       \"booleanValue\")                                                                \\\n+  do_intrinsic(_byteValue,                java_lang_Byte,         byteValue_name, void_byte_signature, F_R)             \\\n+   do_name(     byteValue_name,          \"byteValue\")                                                                   \\\n+  do_intrinsic(_charValue,                java_lang_Character,    charValue_name, void_char_signature, F_R)             \\\n+   do_name(     charValue_name,          \"charValue\")                                                                   \\\n+  do_intrinsic(_shortValue,               java_lang_Short,        shortValue_name, void_short_signature, F_R)           \\\n+   do_name(     shortValue_name,         \"shortValue\")                                                                  \\\n+  do_intrinsic(_intValue,                 java_lang_Integer,      intValue_name, void_int_signature, F_R)               \\\n+   do_name(     intValue_name,           \"intValue\")                                                                    \\\n+  do_intrinsic(_longValue,                java_lang_Long,         longValue_name, void_long_signature, F_R)             \\\n+   do_name(     longValue_name,          \"longValue\")                                                                   \\\n+  do_intrinsic(_floatValue,               java_lang_Float,        floatValue_name, void_float_signature, F_R)           \\\n+   do_name(     floatValue_name,         \"floatValue\")                                                                  \\\n+  do_intrinsic(_doubleValue,              java_lang_Double,       doubleValue_name, void_double_signature, F_R)         \\\n+   do_name(     doubleValue_name,        \"doubleValue\")                                                                 \\\n+                                                                                                                        \\\n+  \/* boxing methods: *\/                                                                                                 \\\n+   do_name(    valueOf_name,              \"valueOf\")                                                                    \\\n+  do_intrinsic(_Boolean_valueOf,          java_lang_Boolean,      valueOf_name, Boolean_valueOf_signature, F_S)         \\\n+   do_name(     Boolean_valueOf_signature,                       \"(Z)Ljava\/lang\/Boolean;\")                              \\\n+  do_intrinsic(_Byte_valueOf,             java_lang_Byte,         valueOf_name, Byte_valueOf_signature, F_S)            \\\n+   do_name(     Byte_valueOf_signature,                          \"(B)Ljava\/lang\/Byte;\")                                 \\\n+  do_intrinsic(_Character_valueOf,        java_lang_Character,    valueOf_name, Character_valueOf_signature, F_S)       \\\n+   do_name(     Character_valueOf_signature,                     \"(C)Ljava\/lang\/Character;\")                            \\\n+  do_intrinsic(_Short_valueOf,            java_lang_Short,        valueOf_name, Short_valueOf_signature, F_S)           \\\n+   do_name(     Short_valueOf_signature,                         \"(S)Ljava\/lang\/Short;\")                                \\\n+  do_intrinsic(_Integer_valueOf,          java_lang_Integer,      valueOf_name, Integer_valueOf_signature, F_S)         \\\n+   do_name(     Integer_valueOf_signature,                       \"(I)Ljava\/lang\/Integer;\")                              \\\n+  do_intrinsic(_Long_valueOf,             java_lang_Long,         valueOf_name, Long_valueOf_signature, F_S)            \\\n+   do_name(     Long_valueOf_signature,                          \"(J)Ljava\/lang\/Long;\")                                 \\\n+  do_intrinsic(_Float_valueOf,            java_lang_Float,        valueOf_name, Float_valueOf_signature, F_S)           \\\n+   do_name(     Float_valueOf_signature,                         \"(F)Ljava\/lang\/Float;\")                                \\\n+  do_intrinsic(_Double_valueOf,           java_lang_Double,       valueOf_name, Double_valueOf_signature, F_S)          \\\n+   do_name(     Double_valueOf_signature,                        \"(D)Ljava\/lang\/Double;\")                               \\\n+                                                                                                                        \\\n+  \/* forEachRemaining *\/                                                                             \\\n+  do_intrinsic(_forEachRemaining, java_util_stream_StreamsRangeIntSpliterator, forEachRemaining_name, forEachRemaining_signature, F_R) \\\n+   do_name(     forEachRemaining_name,    \"forEachRemaining\")                                                           \\\n+   do_name(     forEachRemaining_signature,                      \"(Ljava\/util\/function\/IntConsumer;)V\")                 \\\n+\n+    \/*end*\/\n+\n+#endif \/\/ SHARE_CLASSFILE_VMINTRINSICS_HPP\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":989,"deletions":0,"binary":false,"changes":989,"status":"added"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"vmIntrinsics.hpp\"\n@@ -143,0 +144,1 @@\n+  template(jdk_internal_loader_BuiltinClassLoader,    \"jdk\/internal\/loader\/BuiltinClassLoader\")   \\\n@@ -677,0 +679,2 @@\n+  template(java_util_concurrent_ConcurrentHashMap, \"java\/util\/concurrent\/ConcurrentHashMap\")                      \\\n+  template(java_util_ArrayList,                    \"java\/util\/ArrayList\")                                         \\\n@@ -683,962 +687,0 @@\n-\/\/ Here are all the intrinsics known to the runtime and the CI.\n-\/\/ Each intrinsic consists of a public enum name (like _hashCode),\n-\/\/ followed by a specification of its klass, name, and signature:\n-\/\/    template(<id>,  <klass>,  <name>, <sig>, <FCODE>)\n-\/\/\n-\/\/ If you add an intrinsic here, you must also define its name\n-\/\/ and signature as members of the VM symbols.  The VM symbols for\n-\/\/ the intrinsic name and signature may be defined above.\n-\/\/\n-\/\/ Because the VM_SYMBOLS_DO macro makes reference to VM_INTRINSICS_DO,\n-\/\/ you can also define an intrinsic's name and\/or signature locally to the\n-\/\/ intrinsic, if this makes sense.  (It often does make sense.)\n-\/\/\n-\/\/ For example:\n-\/\/    do_intrinsic(_foo,  java_lang_Object,  foo_name, foo_signature, F_xx)\n-\/\/     do_name(     foo_name, \"foo\")\n-\/\/     do_signature(foo_signature, \"()F\")\n-\/\/ klass      = vmSymbols::java_lang_Object()\n-\/\/ name       = vmSymbols::foo_name()\n-\/\/ signature  = vmSymbols::foo_signature()\n-\/\/\n-\/\/ The name and\/or signature might be a \"well known\" symbol\n-\/\/ like \"equal\" or \"()I\", in which case there will be no local\n-\/\/ re-definition of the symbol.\n-\/\/\n-\/\/ The do_class, do_name, and do_signature calls are all used for the\n-\/\/ same purpose:  Define yet another VM symbol.  They could all be merged\n-\/\/ into a common 'do_symbol' call, but it seems useful to record our\n-\/\/ intentions here about kinds of symbols (class vs. name vs. signature).\n-\/\/\n-\/\/ The F_xx is one of the Flags enum; see below.\n-\/\/\n-\/\/ for Emacs: (let ((c-backslash-column 120) (c-backslash-max-column 120)) (c-backslash-region (point) (point-max) nil t))\n-\/\/\n-\/\/\n-\/\/ There are two types of intrinsic methods: (1) Library intrinsics and (2) bytecode intrinsics.\n-\/\/\n-\/\/ (1) A library intrinsic method may be replaced with hand-crafted assembly code,\n-\/\/ with hand-crafted compiler IR, or with a combination of the two. The semantics\n-\/\/ of the replacement code may differ from the semantics of the replaced code.\n-\/\/\n-\/\/ (2) Bytecode intrinsic methods are not replaced by special code, but they are\n-\/\/ treated in some other special way by the compiler. For example, the compiler\n-\/\/ may delay inlining for some String-related intrinsic methods (e.g., some methods\n-\/\/ defined in the StringBuilder and StringBuffer classes, see\n-\/\/ Compile::should_delay_string_inlining() for more details).\n-\/\/\n-\/\/ Due to the difference between the semantics of an intrinsic method as defined\n-\/\/ in the (Java) source code and the semantics of the method as defined\n-\/\/ by the code in the VM, intrinsic methods must be explicitly marked.\n-\/\/\n-\/\/ Intrinsic methods are marked by the jdk.internal.HotSpotIntrinsicCandidate\n-\/\/ annotation. If CheckIntrinsics is enabled, the VM performs the following\n-\/\/ checks when a class C is loaded: (1) all intrinsics defined by the VM for\n-\/\/ class C are present in the loaded class file and are marked;\n-\/\/ (2) an intrinsic is defined by the VM for all marked methods of class C;\n-\/\/ (3) check for orphan methods in class C (i.e., methods for which the VM\n-\/\/ declares an intrinsic but that are not declared for the loaded class C.\n-\/\/ Check (3) is available only in debug builds.\n-\/\/\n-\/\/ If a mismatch is detected for a method, the VM behaves differently depending\n-\/\/ on the type of build. A fastdebug build exits and reports an error on a mismatch.\n-\/\/ A product build will not replace an unmarked library intrinsic method with\n-\/\/ hand-crafted code, that is, unmarked library intrinsics are treated as ordinary\n-\/\/ methods in a product build. The special treatment of a bytecode intrinsic method\n-\/\/ persists even if the method not marked.\n-\/\/\n-\/\/ When adding an intrinsic for a method, please make sure to appropriately\n-\/\/ annotate the method in the source code. The list below contains all\n-\/\/ library intrinsics followed by bytecode intrinsics. Please also make sure to\n-\/\/ add the declaration of the intrinsic to the approriate section of the list.\n-#define VM_INTRINSICS_DO(do_intrinsic, do_class, do_name, do_signature, do_alias)                                       \\\n-  \/* (1) Library intrinsics                                                                        *\/                   \\\n-  do_intrinsic(_hashCode,                 java_lang_Object,       hashCode_name, void_int_signature,             F_R)   \\\n-   do_name(     hashCode_name,                                   \"hashCode\")                                            \\\n-  do_intrinsic(_getClass,                 java_lang_Object,       getClass_name, void_class_signature,           F_R)   \\\n-   do_name(     getClass_name,                                   \"getClass\")                                            \\\n-  do_intrinsic(_clone,                    java_lang_Object,       clone_name, void_object_signature,             F_R)   \\\n-   do_name(     clone_name,                                      \"clone\")                                               \\\n-  do_intrinsic(_notify,                   java_lang_Object,       notify_name, void_method_signature,            F_R)   \\\n-   do_name(     notify_name,                                     \"notify\")                                              \\\n-  do_intrinsic(_notifyAll,                java_lang_Object,       notifyAll_name, void_method_signature,         F_R)   \\\n-   do_name(     notifyAll_name,                                  \"notifyAll\")                                           \\\n-                                                                                                                        \\\n-  \/* Math & StrictMath intrinsics are defined in terms of just a few signatures: *\/                                     \\\n-  do_class(java_lang_Math,                \"java\/lang\/Math\")                                                             \\\n-  do_class(java_lang_StrictMath,          \"java\/lang\/StrictMath\")                                                       \\\n-  do_signature(double2_double_signature,  \"(DD)D\")                                                                      \\\n-  do_signature(double3_double_signature,  \"(DDD)D\")                                                                     \\\n-  do_signature(float2_float_signature,    \"(FF)F\")                                                                      \\\n-  do_signature(float3_float_signature,    \"(FFF)F\")                                                                     \\\n-  do_signature(int2_int_signature,        \"(II)I\")                                                                      \\\n-  do_signature(long2_long_signature,      \"(JJ)J\")                                                                      \\\n-                                                                                                                        \\\n-  \/* here are the math names, all together: *\/                                                                          \\\n-  do_name(abs_name,\"abs\")       do_name(sin_name,\"sin\")         do_name(cos_name,\"cos\")                                 \\\n-  do_name(tan_name,\"tan\")       do_name(atan2_name,\"atan2\")     do_name(sqrt_name,\"sqrt\")                               \\\n-  do_name(log_name,\"log\")       do_name(log10_name,\"log10\")     do_name(pow_name,\"pow\")                                 \\\n-  do_name(exp_name,\"exp\")       do_name(min_name,\"min\")         do_name(max_name,\"max\")                                 \\\n-  do_name(floor_name, \"floor\")  do_name(ceil_name, \"ceil\")      do_name(rint_name, \"rint\")                              \\\n-                                                                                                                        \\\n-  do_name(addExact_name,\"addExact\")                                                                                     \\\n-  do_name(decrementExact_name,\"decrementExact\")                                                                         \\\n-  do_name(incrementExact_name,\"incrementExact\")                                                                         \\\n-  do_name(multiplyExact_name,\"multiplyExact\")                                                                           \\\n-  do_name(multiplyHigh_name,\"multiplyHigh\")                                                                             \\\n-  do_name(negateExact_name,\"negateExact\")                                                                               \\\n-  do_name(subtractExact_name,\"subtractExact\")                                                                           \\\n-  do_name(fma_name, \"fma\")                                                                                              \\\n-  do_name(copySign_name, \"copySign\")                                                                                    \\\n-  do_name(signum_name,\"signum\")                                                                                         \\\n-                                                                                                                        \\\n-  do_intrinsic(_dabs,                     java_lang_Math,         abs_name,   double_double_signature,           F_S)   \\\n-  do_intrinsic(_fabs,                     java_lang_Math,         abs_name,   float_float_signature,           F_S)   \\\n-  do_intrinsic(_iabs,                     java_lang_Math,         abs_name,   int_int_signature,           F_S)   \\\n-  do_intrinsic(_labs,                     java_lang_Math,         abs_name,   long_long_signature,           F_S)   \\\n-  do_intrinsic(_dsin,                     java_lang_Math,         sin_name,   double_double_signature,           F_S)   \\\n-  do_intrinsic(_floor,                    java_lang_Math,         floor_name, double_double_signature,           F_S)   \\\n-  do_intrinsic(_ceil,                     java_lang_Math,         ceil_name,  double_double_signature,           F_S)   \\\n-  do_intrinsic(_rint,                     java_lang_Math,         rint_name,  double_double_signature,           F_S)   \\\n-  do_intrinsic(_dcos,                     java_lang_Math,         cos_name,   double_double_signature,           F_S)   \\\n-  do_intrinsic(_dtan,                     java_lang_Math,         tan_name,   double_double_signature,           F_S)   \\\n-  do_intrinsic(_datan2,                   java_lang_Math,         atan2_name, double2_double_signature,          F_S)   \\\n-  do_intrinsic(_dsqrt,                    java_lang_Math,         sqrt_name,  double_double_signature,           F_S)   \\\n-  do_intrinsic(_dlog,                     java_lang_Math,         log_name,   double_double_signature,           F_S)   \\\n-  do_intrinsic(_dlog10,                   java_lang_Math,         log10_name, double_double_signature,           F_S)   \\\n-  do_intrinsic(_dpow,                     java_lang_Math,         pow_name,   double2_double_signature,          F_S)   \\\n-  do_intrinsic(_dexp,                     java_lang_Math,         exp_name,   double_double_signature,           F_S)   \\\n-  do_intrinsic(_min,                      java_lang_Math,         min_name,   int2_int_signature,                F_S)   \\\n-  do_intrinsic(_max,                      java_lang_Math,         max_name,   int2_int_signature,                F_S)   \\\n-  do_intrinsic(_addExactI,                java_lang_Math,         addExact_name, int2_int_signature,             F_S)   \\\n-  do_intrinsic(_addExactL,                java_lang_Math,         addExact_name, long2_long_signature,           F_S)   \\\n-  do_intrinsic(_decrementExactI,          java_lang_Math,         decrementExact_name, int_int_signature,        F_S)   \\\n-  do_intrinsic(_decrementExactL,          java_lang_Math,         decrementExact_name, long_long_signature,      F_S)   \\\n-  do_intrinsic(_incrementExactI,          java_lang_Math,         incrementExact_name, int_int_signature,        F_S)   \\\n-  do_intrinsic(_incrementExactL,          java_lang_Math,         incrementExact_name, long_long_signature,      F_S)   \\\n-  do_intrinsic(_multiplyExactI,           java_lang_Math,         multiplyExact_name, int2_int_signature,        F_S)   \\\n-  do_intrinsic(_multiplyExactL,           java_lang_Math,         multiplyExact_name, long2_long_signature,      F_S)   \\\n-  do_intrinsic(_multiplyHigh,             java_lang_Math,         multiplyHigh_name, long2_long_signature,       F_S)   \\\n-  do_intrinsic(_negateExactI,             java_lang_Math,         negateExact_name, int_int_signature,           F_S)   \\\n-  do_intrinsic(_negateExactL,             java_lang_Math,         negateExact_name, long_long_signature,         F_S)   \\\n-  do_intrinsic(_subtractExactI,           java_lang_Math,         subtractExact_name, int2_int_signature,        F_S)   \\\n-  do_intrinsic(_subtractExactL,           java_lang_Math,         subtractExact_name, long2_long_signature,      F_S)   \\\n-  do_intrinsic(_fmaD,                     java_lang_Math,         fma_name,           double3_double_signature,  F_S)   \\\n-  do_intrinsic(_fmaF,                     java_lang_Math,         fma_name,           float3_float_signature,    F_S)   \\\n-  do_intrinsic(_maxF,                     java_lang_Math,         max_name,           float2_float_signature,    F_S)   \\\n-  do_intrinsic(_minF,                     java_lang_Math,         min_name,           float2_float_signature,    F_S)   \\\n-  do_intrinsic(_maxD,                     java_lang_Math,         max_name,           double2_double_signature,  F_S)   \\\n-  do_intrinsic(_minD,                     java_lang_Math,         min_name,           double2_double_signature,  F_S)   \\\n-  do_intrinsic(_dcopySign,                java_lang_Math,         copySign_name,      double2_double_signature,  F_S)   \\\n-  do_intrinsic(_fcopySign,                java_lang_Math,         copySign_name,      float2_float_signature,    F_S)   \\\n-  do_intrinsic(_dsignum,                  java_lang_Math,         signum_name,        double_double_signature,   F_S)   \\\n-  do_intrinsic(_fsignum,                  java_lang_Math,         signum_name,        float_float_signature,     F_S)   \\\n-                                                                                                                        \\\n-  do_intrinsic(_floatToRawIntBits,        java_lang_Float,        floatToRawIntBits_name,   float_int_signature, F_S)   \\\n-   do_name(     floatToRawIntBits_name,                          \"floatToRawIntBits\")                                   \\\n-  do_intrinsic(_floatToIntBits,           java_lang_Float,        floatToIntBits_name,      float_int_signature, F_S)   \\\n-   do_name(     floatToIntBits_name,                             \"floatToIntBits\")                                      \\\n-  do_intrinsic(_intBitsToFloat,           java_lang_Float,        intBitsToFloat_name,      int_float_signature, F_S)   \\\n-   do_name(     intBitsToFloat_name,                             \"intBitsToFloat\")                                      \\\n-  do_intrinsic(_doubleToRawLongBits,      java_lang_Double,       doubleToRawLongBits_name, double_long_signature, F_S) \\\n-   do_name(     doubleToRawLongBits_name,                        \"doubleToRawLongBits\")                                 \\\n-  do_intrinsic(_doubleToLongBits,         java_lang_Double,       doubleToLongBits_name,    double_long_signature, F_S) \\\n-   do_name(     doubleToLongBits_name,                           \"doubleToLongBits\")                                    \\\n-  do_intrinsic(_longBitsToDouble,         java_lang_Double,       longBitsToDouble_name,    long_double_signature, F_S) \\\n-   do_name(     longBitsToDouble_name,                           \"longBitsToDouble\")                                    \\\n-                                                                                                                        \\\n-  do_intrinsic(_numberOfLeadingZeros_i,   java_lang_Integer,      numberOfLeadingZeros_name,int_int_signature,   F_S)   \\\n-  do_intrinsic(_numberOfLeadingZeros_l,   java_lang_Long,         numberOfLeadingZeros_name,long_int_signature,  F_S)   \\\n-                                                                                                                        \\\n-  do_intrinsic(_numberOfTrailingZeros_i,  java_lang_Integer,      numberOfTrailingZeros_name,int_int_signature,  F_S)   \\\n-  do_intrinsic(_numberOfTrailingZeros_l,  java_lang_Long,         numberOfTrailingZeros_name,long_int_signature, F_S)   \\\n-                                                                                                                        \\\n-  do_intrinsic(_bitCount_i,               java_lang_Integer,      bitCount_name,            int_int_signature,   F_S)   \\\n-  do_intrinsic(_bitCount_l,               java_lang_Long,         bitCount_name,            long_int_signature,  F_S)   \\\n-                                                                                                                        \\\n-  do_intrinsic(_reverseBytes_i,           java_lang_Integer,      reverseBytes_name,        int_int_signature,   F_S)   \\\n-   do_name(     reverseBytes_name,                               \"reverseBytes\")                                        \\\n-  do_intrinsic(_reverseBytes_l,           java_lang_Long,         reverseBytes_name,        long_long_signature, F_S)   \\\n-    \/*  (symbol reverseBytes_name defined above) *\/                                                                     \\\n-  do_intrinsic(_reverseBytes_c,           java_lang_Character,    reverseBytes_name,        char_char_signature, F_S)   \\\n-    \/*  (symbol reverseBytes_name defined above) *\/                                                                     \\\n-  do_intrinsic(_reverseBytes_s,           java_lang_Short,        reverseBytes_name,        short_short_signature, F_S) \\\n-    \/*  (symbol reverseBytes_name defined above) *\/                                                                     \\\n-                                                                                                                        \\\n-  do_intrinsic(_identityHashCode,         java_lang_System,       identityHashCode_name, object_int_signature,   F_S)   \\\n-   do_name(     identityHashCode_name,                           \"identityHashCode\")                                    \\\n-  do_intrinsic(_currentTimeMillis,        java_lang_System,       currentTimeMillis_name, void_long_signature,   F_S)   \\\n-                                                                                                                        \\\n-   do_name(     currentTimeMillis_name,                          \"currentTimeMillis\")                                   \\\n-  do_intrinsic(_nanoTime,                 java_lang_System,       nanoTime_name,          void_long_signature,   F_S)   \\\n-   do_name(     nanoTime_name,                                   \"nanoTime\")                                            \\\n-                                                                                                                        \\\n-  JFR_INTRINSICS(do_intrinsic, do_class, do_name, do_signature, do_alias)                                               \\\n-                                                                                                                        \\\n-  do_intrinsic(_arraycopy,                java_lang_System,       arraycopy_name, arraycopy_signature,           F_S)   \\\n-   do_name(     arraycopy_name,                                  \"arraycopy\")                                           \\\n-   do_signature(arraycopy_signature,                             \"(Ljava\/lang\/Object;ILjava\/lang\/Object;II)V\")          \\\n-  do_intrinsic(_currentThread,            java_lang_Thread,       currentThread_name, currentThread_signature,   F_S)   \\\n-   do_name(     currentThread_name,                              \"currentThread\")                                       \\\n-   do_signature(currentThread_signature,                         \"()Ljava\/lang\/Thread;\")                                \\\n-                                                                                                                        \\\n-  \/* reflective intrinsics, for java\/lang\/Class, etc. *\/                                                                \\\n-  do_intrinsic(_isAssignableFrom,         java_lang_Class,        isAssignableFrom_name, class_boolean_signature, F_RN) \\\n-   do_name(     isAssignableFrom_name,                           \"isAssignableFrom\")                                    \\\n-  do_intrinsic(_isInstance,               java_lang_Class,        isInstance_name, object_boolean_signature,     F_RN)  \\\n-   do_name(     isInstance_name,                                 \"isInstance\")                                          \\\n-  do_intrinsic(_getModifiers,             java_lang_Class,        getModifiers_name, void_int_signature,         F_RN)  \\\n-   do_name(     getModifiers_name,                               \"getModifiers\")                                        \\\n-  do_intrinsic(_isInterface,              java_lang_Class,        isInterface_name, void_boolean_signature,      F_RN)  \\\n-   do_name(     isInterface_name,                                \"isInterface\")                                         \\\n-  do_intrinsic(_isArray,                  java_lang_Class,        isArray_name, void_boolean_signature,          F_RN)  \\\n-   do_name(     isArray_name,                                    \"isArray\")                                             \\\n-  do_intrinsic(_isPrimitive,              java_lang_Class,        isPrimitive_name, void_boolean_signature,      F_RN)  \\\n-   do_name(     isPrimitive_name,                                \"isPrimitive\")                                         \\\n-  do_intrinsic(_isHidden,                 java_lang_Class,        isHidden_name, void_boolean_signature,         F_RN)  \\\n-   do_name(     isHidden_name,                                   \"isHidden\")                                            \\\n-  do_intrinsic(_getSuperclass,            java_lang_Class,        getSuperclass_name, void_class_signature,      F_RN)  \\\n-   do_name(     getSuperclass_name,                              \"getSuperclass\")                                       \\\n-  do_intrinsic(_Class_cast,               java_lang_Class,        Class_cast_name, object_object_signature,      F_R)   \\\n-   do_name(     Class_cast_name,                                 \"cast\")                                                \\\n-                                                                                                                        \\\n-  do_intrinsic(_getClassAccessFlags,      reflect_Reflection,     getClassAccessFlags_name, class_int_signature, F_SN)  \\\n-   do_name(     getClassAccessFlags_name,                        \"getClassAccessFlags\")                                 \\\n-  do_intrinsic(_getLength,                java_lang_reflect_Array, getLength_name, object_int_signature,         F_SN)  \\\n-   do_name(     getLength_name,                                   \"getLength\")                                          \\\n-                                                                                                                        \\\n-  do_intrinsic(_getCallerClass,           reflect_Reflection,     getCallerClass_name, void_class_signature,     F_SN)  \\\n-   do_name(     getCallerClass_name,                             \"getCallerClass\")                                      \\\n-                                                                                                                        \\\n-  do_intrinsic(_newArray,                 java_lang_reflect_Array, newArray_name, newArray_signature,            F_SN)  \\\n-   do_name(     newArray_name,                                    \"newArray\")                                           \\\n-   do_signature(newArray_signature,                               \"(Ljava\/lang\/Class;I)Ljava\/lang\/Object;\")             \\\n-                                                                                                                        \\\n-  do_intrinsic(_onSpinWait,               java_lang_Thread,       onSpinWait_name, onSpinWait_signature,         F_S)   \\\n-   do_name(     onSpinWait_name,                                  \"onSpinWait\")                                         \\\n-   do_alias(    onSpinWait_signature,                             void_method_signature)                                \\\n-                                                                                                                        \\\n-  do_intrinsic(_copyOf,                   java_util_Arrays,       copyOf_name, copyOf_signature,                 F_S)   \\\n-   do_name(     copyOf_name,                                     \"copyOf\")                                              \\\n-   do_signature(copyOf_signature,             \"([Ljava\/lang\/Object;ILjava\/lang\/Class;)[Ljava\/lang\/Object;\")             \\\n-                                                                                                                        \\\n-  do_intrinsic(_copyOfRange,              java_util_Arrays,       copyOfRange_name, copyOfRange_signature,       F_S)   \\\n-   do_name(     copyOfRange_name,                                \"copyOfRange\")                                         \\\n-   do_signature(copyOfRange_signature,        \"([Ljava\/lang\/Object;IILjava\/lang\/Class;)[Ljava\/lang\/Object;\")            \\\n-                                                                                                                        \\\n-  do_intrinsic(_equalsC,                  java_util_Arrays,       equals_name,    equalsC_signature,             F_S)   \\\n-   do_signature(equalsC_signature,                               \"([C[C)Z\")                                             \\\n-  do_intrinsic(_equalsB,                  java_util_Arrays,       equals_name,    equalsB_signature,             F_S)   \\\n-   do_signature(equalsB_signature,                               \"([B[B)Z\")                                             \\\n-                                                                                                                        \\\n-  do_intrinsic(_compressStringC,          java_lang_StringUTF16,  compress_name, encodeISOArray_signature,       F_S)   \\\n-   do_name(     compress_name,                                   \"compress\")                                            \\\n-  do_intrinsic(_compressStringB,          java_lang_StringUTF16,  compress_name, indexOfI_signature,             F_S)   \\\n-  do_intrinsic(_inflateStringC,           java_lang_StringLatin1, inflate_name, inflateC_signature,              F_S)   \\\n-   do_name(     inflate_name,                                    \"inflate\")                                             \\\n-   do_signature(inflateC_signature,                              \"([BI[CII)V\")                                          \\\n-  do_intrinsic(_inflateStringB,           java_lang_StringLatin1, inflate_name, inflateB_signature,              F_S)   \\\n-   do_signature(inflateB_signature,                              \"([BI[BII)V\")                                          \\\n-  do_intrinsic(_toBytesStringU,           java_lang_StringUTF16, toBytes_name, toBytesU_signature,               F_S)   \\\n-   do_name(     toBytes_name,                                    \"toBytes\")                                             \\\n-   do_signature(toBytesU_signature,                              \"([CII)[B\")                                            \\\n-  do_intrinsic(_getCharsStringU,          java_lang_StringUTF16, getCharsU_name, getCharsU_signature,            F_S)   \\\n-   do_name(     getCharsU_name,                                  \"getChars\")                                            \\\n-   do_signature(getCharsU_signature,                             \"([BII[CI)V\")                                          \\\n-  do_intrinsic(_getCharStringU,           java_lang_StringUTF16, getChar_name, getCharStringU_signature,         F_S)   \\\n-   do_signature(getCharStringU_signature,                        \"([BI)C\")                                              \\\n-  do_intrinsic(_putCharStringU,           java_lang_StringUTF16, putChar_name, putCharStringU_signature,         F_S)   \\\n-   do_signature(putCharStringU_signature,                        \"([BII)V\")                                             \\\n-  do_intrinsic(_compareToL,               java_lang_StringLatin1,compareTo_name, compareTo_indexOf_signature,    F_S)   \\\n-  do_intrinsic(_compareToU,               java_lang_StringUTF16, compareTo_name, compareTo_indexOf_signature,    F_S)   \\\n-  do_intrinsic(_compareToLU,              java_lang_StringLatin1,compareToLU_name, compareTo_indexOf_signature,  F_S)   \\\n-  do_intrinsic(_compareToUL,              java_lang_StringUTF16, compareToUL_name, compareTo_indexOf_signature,  F_S)   \\\n-   do_signature(compareTo_indexOf_signature,                     \"([B[B)I\")                                             \\\n-   do_name(     compareTo_name,                                  \"compareTo\")                                           \\\n-   do_name(     compareToLU_name,                                \"compareToUTF16\")                                      \\\n-   do_name(     compareToUL_name,                                \"compareToLatin1\")                                     \\\n-  do_intrinsic(_indexOfL,                 java_lang_StringLatin1,indexOf_name, compareTo_indexOf_signature,      F_S)   \\\n-  do_intrinsic(_indexOfU,                 java_lang_StringUTF16, indexOf_name, compareTo_indexOf_signature,      F_S)   \\\n-  do_intrinsic(_indexOfUL,                java_lang_StringUTF16, indexOfUL_name, compareTo_indexOf_signature,    F_S)   \\\n-  do_intrinsic(_indexOfIL,                java_lang_StringLatin1,indexOf_name, indexOfI_signature,               F_S)   \\\n-  do_intrinsic(_indexOfIU,                java_lang_StringUTF16, indexOf_name, indexOfI_signature,               F_S)   \\\n-  do_intrinsic(_indexOfIUL,               java_lang_StringUTF16, indexOfUL_name, indexOfI_signature,             F_S)   \\\n-  do_intrinsic(_indexOfU_char,            java_lang_StringUTF16, indexOfChar_name, indexOfChar_signature,        F_S)   \\\n-   do_name(     indexOf_name,                                    \"indexOf\")                                             \\\n-   do_name(     indexOfChar_name,                                \"indexOfChar\")                                         \\\n-   do_name(     indexOfUL_name,                                  \"indexOfLatin1\")                                       \\\n-   do_signature(indexOfI_signature,                              \"([BI[BII)I\")                                          \\\n-   do_signature(indexOfChar_signature,                           \"([BIII)I\")                                            \\\n-  do_intrinsic(_equalsL,                  java_lang_StringLatin1,equals_name, equalsB_signature,                 F_S)   \\\n-  do_intrinsic(_equalsU,                  java_lang_StringUTF16, equals_name, equalsB_signature,                 F_S)   \\\n-                                                                                                                        \\\n-  do_intrinsic(_isDigit,                  java_lang_CharacterDataLatin1, isDigit_name,      int_bool_signature,  F_R)   \\\n-   do_name(     isDigit_name,                                           \"isDigit\")                                      \\\n-  do_intrinsic(_isLowerCase,              java_lang_CharacterDataLatin1, isLowerCase_name,  int_bool_signature,  F_R)   \\\n-   do_name(     isLowerCase_name,                                       \"isLowerCase\")                                  \\\n-  do_intrinsic(_isUpperCase,              java_lang_CharacterDataLatin1, isUpperCase_name,  int_bool_signature,  F_R)   \\\n-   do_name(     isUpperCase_name,                                       \"isUpperCase\")                                  \\\n-  do_intrinsic(_isWhitespace,             java_lang_CharacterDataLatin1, isWhitespace_name, int_bool_signature,  F_R)   \\\n-   do_name(     isWhitespace_name,                                      \"isWhitespace\")                                 \\\n-                                                                                                                        \\\n-  do_intrinsic(_Preconditions_checkIndex, jdk_internal_util_Preconditions, checkIndex_name, Preconditions_checkIndex_signature, F_S)   \\\n-   do_signature(Preconditions_checkIndex_signature,              \"(IILjava\/util\/function\/BiFunction;)I\")                \\\n-                                                                                                                        \\\n-  do_class(java_nio_Buffer,               \"java\/nio\/Buffer\")                                                            \\\n-  do_intrinsic(_checkIndex,               java_nio_Buffer,        checkIndex_name, int_int_signature,            F_R)   \\\n-   do_name(     checkIndex_name,                                 \"checkIndex\")                                          \\\n-                                                                                                                        \\\n-  do_class(java_lang_StringCoding,        \"java\/lang\/StringCoding\")                                                     \\\n-  do_intrinsic(_hasNegatives,             java_lang_StringCoding, hasNegatives_name, hasNegatives_signature,     F_S)   \\\n-   do_name(     hasNegatives_name,                               \"hasNegatives\")                                        \\\n-   do_signature(hasNegatives_signature,                          \"([BII)Z\")                                             \\\n-                                                                                                                        \\\n-  do_class(sun_nio_cs_iso8859_1_Encoder,  \"sun\/nio\/cs\/ISO_8859_1$Encoder\")                                              \\\n-  do_intrinsic(_encodeISOArray,     sun_nio_cs_iso8859_1_Encoder, encodeISOArray_name, encodeISOArray_signature, F_S)   \\\n-   do_name(     encodeISOArray_name,                             \"implEncodeISOArray\")                                  \\\n-   do_signature(encodeISOArray_signature,                        \"([CI[BII)I\")                                          \\\n-                                                                                                                        \\\n-  do_intrinsic(_encodeByteISOArray,     java_lang_StringCoding, encodeISOArray_name, indexOfI_signature,         F_S)   \\\n-                                                                                                                        \\\n-  do_class(java_math_BigInteger,                      \"java\/math\/BigInteger\")                                           \\\n-  do_intrinsic(_multiplyToLen,      java_math_BigInteger, multiplyToLen_name, multiplyToLen_signature, F_S)             \\\n-   do_name(     multiplyToLen_name,                             \"implMultiplyToLen\")                                    \\\n-   do_signature(multiplyToLen_signature,                        \"([II[II[I)[I\")                                         \\\n-                                                                                                                        \\\n-  do_intrinsic(_squareToLen, java_math_BigInteger, squareToLen_name, squareToLen_signature, F_S)                        \\\n-   do_name(     squareToLen_name,                             \"implSquareToLen\")                                        \\\n-   do_signature(squareToLen_signature,                        \"([II[II)[I\")                                             \\\n-                                                                                                                        \\\n-  do_intrinsic(_mulAdd, java_math_BigInteger, mulAdd_name, mulAdd_signature, F_S)                                       \\\n-   do_name(     mulAdd_name,                                  \"implMulAdd\")                                             \\\n-   do_signature(mulAdd_signature,                             \"([I[IIII)I\")                                             \\\n-                                                                                                                        \\\n-  do_intrinsic(_montgomeryMultiply,      java_math_BigInteger, montgomeryMultiply_name, montgomeryMultiply_signature, F_S) \\\n-   do_name(     montgomeryMultiply_name,                             \"implMontgomeryMultiply\")                          \\\n-   do_signature(montgomeryMultiply_signature,                        \"([I[I[IIJ[I)[I\")                                  \\\n-                                                                                                                        \\\n-  do_intrinsic(_montgomerySquare,      java_math_BigInteger, montgomerySquare_name, montgomerySquare_signature, F_S)    \\\n-   do_name(     montgomerySquare_name,                             \"implMontgomerySquare\")                              \\\n-   do_signature(montgomerySquare_signature,                        \"([I[IIJ[I)[I\")                                      \\\n-                                                                                                                        \\\n-  do_intrinsic(_bigIntegerRightShiftWorker, java_math_BigInteger, rightShift_name, big_integer_shift_worker_signature, F_S) \\\n-   do_name(     rightShift_name,                                 \"shiftRightImplWorker\")                                \\\n-                                                                                                                        \\\n-  do_intrinsic(_bigIntegerLeftShiftWorker, java_math_BigInteger, leftShift_name, big_integer_shift_worker_signature, F_S) \\\n-   do_name(     leftShift_name,                                 \"shiftLeftImplWorker\")                                  \\\n-                                                                                                                        \\\n-  do_class(jdk_internal_util_ArraysSupport, \"jdk\/internal\/util\/ArraysSupport\")                                                          \\\n-  do_intrinsic(_vectorizedMismatch, jdk_internal_util_ArraysSupport, vectorizedMismatch_name, vectorizedMismatch_signature, F_S)\\\n-   do_name(vectorizedMismatch_name, \"vectorizedMismatch\")                                                               \\\n-   do_signature(vectorizedMismatch_signature, \"(Ljava\/lang\/Object;JLjava\/lang\/Object;JII)I\")                            \\\n-                                                                                                                        \\\n-  \/* java\/lang\/ref\/Reference *\/                                                                                         \\\n-  do_intrinsic(_Reference_get,            java_lang_ref_Reference, get_name,    void_object_signature, F_R)             \\\n-                                                                                                                        \\\n-  \/* support for com.sun.crypto.provider.AESCrypt and some of its callers *\/                                            \\\n-  do_class(com_sun_crypto_provider_aescrypt,      \"com\/sun\/crypto\/provider\/AESCrypt\")                                   \\\n-  do_intrinsic(_aescrypt_encryptBlock, com_sun_crypto_provider_aescrypt, encryptBlock_name, byteArray_int_byteArray_int_signature, F_R)   \\\n-  do_intrinsic(_aescrypt_decryptBlock, com_sun_crypto_provider_aescrypt, decryptBlock_name, byteArray_int_byteArray_int_signature, F_R)   \\\n-   do_name(     encryptBlock_name,                                 \"implEncryptBlock\")                                  \\\n-   do_name(     decryptBlock_name,                                 \"implDecryptBlock\")                                  \\\n-   do_signature(byteArray_int_byteArray_int_signature,             \"([BI[BI)V\")                                         \\\n-                                                                                                                        \\\n-  do_class(com_sun_crypto_provider_cipherBlockChaining,            \"com\/sun\/crypto\/provider\/CipherBlockChaining\")       \\\n-   do_intrinsic(_cipherBlockChaining_encryptAESCrypt, com_sun_crypto_provider_cipherBlockChaining, encrypt_name, byteArray_int_int_byteArray_int_signature, F_R)   \\\n-   do_intrinsic(_cipherBlockChaining_decryptAESCrypt, com_sun_crypto_provider_cipherBlockChaining, decrypt_name, byteArray_int_int_byteArray_int_signature, F_R)   \\\n-   do_name(     encrypt_name,                                      \"implEncrypt\")                                       \\\n-   do_name(     decrypt_name,                                      \"implDecrypt\")                                       \\\n-   do_signature(byteArray_int_int_byteArray_int_signature,         \"([BII[BI)I\")                                        \\\n-                                                                                                                        \\\n-  do_class(com_sun_crypto_provider_electronicCodeBook, \"com\/sun\/crypto\/provider\/ElectronicCodeBook\")                    \\\n-   do_intrinsic(_electronicCodeBook_encryptAESCrypt, com_sun_crypto_provider_electronicCodeBook, ecb_encrypt_name, byteArray_int_int_byteArray_int_signature, F_R)  \\\n-   do_intrinsic(_electronicCodeBook_decryptAESCrypt, com_sun_crypto_provider_electronicCodeBook, ecb_decrypt_name, byteArray_int_int_byteArray_int_signature, F_R)  \\\n-   do_name(ecb_encrypt_name, \"implECBEncrypt\")                                                                          \\\n-   do_name(ecb_decrypt_name, \"implECBDecrypt\")                                                                          \\\n-                                                                                                                        \\\n-  do_class(com_sun_crypto_provider_counterMode,      \"com\/sun\/crypto\/provider\/CounterMode\")                             \\\n-   do_intrinsic(_counterMode_AESCrypt, com_sun_crypto_provider_counterMode, crypt_name, byteArray_int_int_byteArray_int_signature, F_R)   \\\n-   do_name(     crypt_name,                                 \"implCrypt\")                                                    \\\n-                                                                                                                        \\\n-  \/* support for sun.security.provider.MD5 *\/                                                                           \\\n-  do_class(sun_security_provider_md5,                              \"sun\/security\/provider\/MD5\")                         \\\n-  do_intrinsic(_md5_implCompress, sun_security_provider_md5, implCompress_name, implCompress_signature, F_R)            \\\n-   do_name(     implCompress_name,                                 \"implCompress0\")                                     \\\n-   do_signature(implCompress_signature,                            \"([BI)V\")                                            \\\n-                                                                                                                        \\\n-  \/* support for sun.security.provider.SHA *\/                                                                           \\\n-  do_class(sun_security_provider_sha,                              \"sun\/security\/provider\/SHA\")                         \\\n-  do_intrinsic(_sha_implCompress, sun_security_provider_sha, implCompress_name, implCompress_signature, F_R)            \\\n-                                                                                                                        \\\n-  \/* support for sun.security.provider.SHA2 *\/                                                                          \\\n-  do_class(sun_security_provider_sha2,                             \"sun\/security\/provider\/SHA2\")                        \\\n-  do_intrinsic(_sha2_implCompress, sun_security_provider_sha2, implCompress_name, implCompress_signature, F_R)          \\\n-                                                                                                                        \\\n-  \/* support for sun.security.provider.SHA5 *\/                                                                          \\\n-  do_class(sun_security_provider_sha5,                             \"sun\/security\/provider\/SHA5\")                        \\\n-  do_intrinsic(_sha5_implCompress, sun_security_provider_sha5, implCompress_name, implCompress_signature, F_R)          \\\n-                                                                                                                        \\\n-  \/* support for sun.security.provider.DigestBase *\/                                                                    \\\n-  do_class(sun_security_provider_digestbase,                       \"sun\/security\/provider\/DigestBase\")                  \\\n-  do_intrinsic(_digestBase_implCompressMB, sun_security_provider_digestbase, implCompressMB_name, implCompressMB_signature, F_R)   \\\n-   do_name(     implCompressMB_name,                               \"implCompressMultiBlock0\")                           \\\n-   do_signature(implCompressMB_signature,                          \"([BII)I\")                                           \\\n-                                                                                                                        \\\n-   \/* support for java.util.Base64.Encoder*\/                                                                            \\\n-  do_class(java_util_Base64_Encoder, \"java\/util\/Base64$Encoder\")                                                        \\\n-  do_intrinsic(_base64_encodeBlock, java_util_Base64_Encoder, encodeBlock_name, encodeBlock_signature, F_R)             \\\n-  do_name(encodeBlock_name, \"encodeBlock\")                                                                              \\\n-  do_signature(encodeBlock_signature, \"([BII[BIZ)V\")                                                                    \\\n-                                                                                                                        \\\n-  \/* support for com.sun.crypto.provider.GHASH *\/                                                                       \\\n-  do_class(com_sun_crypto_provider_ghash, \"com\/sun\/crypto\/provider\/GHASH\")                                              \\\n-  do_intrinsic(_ghash_processBlocks, com_sun_crypto_provider_ghash, processBlocks_name, ghash_processBlocks_signature, F_S) \\\n-   do_name(processBlocks_name, \"processBlocks\")                                                                         \\\n-   do_signature(ghash_processBlocks_signature, \"([BII[J[J)V\")                                                           \\\n-                                                                                                                        \\\n-  \/* support for java.util.zip *\/                                                                                       \\\n-  do_class(java_util_zip_CRC32,           \"java\/util\/zip\/CRC32\")                                                        \\\n-  do_intrinsic(_updateCRC32,               java_util_zip_CRC32,   update_name, int2_int_signature,               F_SN)  \\\n-   do_name(     update_name,                                      \"update\")                                             \\\n-  do_intrinsic(_updateBytesCRC32,          java_util_zip_CRC32,   updateBytes_name, updateBytes_signature,       F_SN)  \\\n-   do_name(     updateBytes_name,                                \"updateBytes0\")                                        \\\n-   do_signature(updateBytes_signature,                           \"(I[BII)I\")                                            \\\n-  do_intrinsic(_updateByteBufferCRC32,     java_util_zip_CRC32,   updateByteBuffer_name, updateByteBuffer_signature, F_SN) \\\n-   do_name(     updateByteBuffer_name,                           \"updateByteBuffer0\")                                   \\\n-   do_signature(updateByteBuffer_signature,                      \"(IJII)I\")                                             \\\n-                                                                                                                        \\\n-  \/* support for java.util.zip.CRC32C *\/                                                                                \\\n-  do_class(java_util_zip_CRC32C,          \"java\/util\/zip\/CRC32C\")                                                       \\\n-  do_intrinsic(_updateBytesCRC32C,         java_util_zip_CRC32C,  updateBytes_C_name, updateBytes_signature,       F_S) \\\n-   do_name(     updateBytes_C_name,                               \"updateBytes\")                                        \\\n-  do_intrinsic(_updateDirectByteBufferCRC32C, java_util_zip_CRC32C, updateDirectByteBuffer_C_name, updateByteBuffer_signature, F_S) \\\n-   do_name(    updateDirectByteBuffer_C_name,                     \"updateDirectByteBuffer\")                             \\\n-                                                                                                                        \\\n-   \/* support for java.util.zip.Adler32 *\/                                                                              \\\n-  do_class(java_util_zip_Adler32,        \"java\/util\/zip\/Adler32\")                                                       \\\n-  do_intrinsic(_updateBytesAdler32,       java_util_zip_Adler32,  updateBytes_C_name,  updateBytes_signature,  F_SN)    \\\n-  do_intrinsic(_updateByteBufferAdler32,  java_util_zip_Adler32,  updateByteBuffer_A_name,  updateByteBuffer_signature,  F_SN) \\\n-   do_name(     updateByteBuffer_A_name,                          \"updateByteBuffer\")                                   \\\n-                                                                                                                        \\\n-  \/* support for UnsafeConstants *\/                                                                                     \\\n-  do_class(jdk_internal_misc_UnsafeConstants,      \"jdk\/internal\/misc\/UnsafeConstants\")                                 \\\n-                                                                                                                        \\\n-  \/* support for Unsafe *\/                                                                                              \\\n-  do_class(jdk_internal_misc_Unsafe,               \"jdk\/internal\/misc\/Unsafe\")                                          \\\n-  do_class(sun_misc_Unsafe,                        \"sun\/misc\/Unsafe\")                                                   \\\n-                                                                                                                        \\\n-  do_intrinsic(_writeback0,               jdk_internal_misc_Unsafe,     writeback0_name, long_void_signature , F_RN)             \\\n-   do_name(     writeback0_name,                                        \"writeback0\")                                            \\\n-  do_intrinsic(_writebackPreSync0,        jdk_internal_misc_Unsafe,     writebackPreSync0_name, void_method_signature , F_RN)    \\\n-   do_name(     writebackPreSync0_name,                                 \"writebackPreSync0\")                                     \\\n-  do_intrinsic(_writebackPostSync0,       jdk_internal_misc_Unsafe,    writebackPostSync0_name, void_method_signature , F_RN)    \\\n-   do_name(     writebackPostSync0_name,                                \"writebackPostSync0\")                                    \\\n-  do_intrinsic(_allocateInstance,         jdk_internal_misc_Unsafe,     allocateInstance_name, allocateInstance_signature, F_RN) \\\n-   do_name(     allocateInstance_name,                                  \"allocateInstance\")                                      \\\n-   do_signature(allocateInstance_signature,                             \"(Ljava\/lang\/Class;)Ljava\/lang\/Object;\")                 \\\n-  do_intrinsic(_allocateUninitializedArray, jdk_internal_misc_Unsafe,   allocateUninitializedArray_name, newArray_signature,  F_R) \\\n-   do_name(     allocateUninitializedArray_name,                        \"allocateUninitializedArray0\")                           \\\n-  do_intrinsic(_copyMemory,               jdk_internal_misc_Unsafe,     copyMemory_name, copyMemory_signature,         F_RN)     \\\n-   do_name(     copyMemory_name,                                        \"copyMemory0\")                                           \\\n-   do_signature(copyMemory_signature,                                   \"(Ljava\/lang\/Object;JLjava\/lang\/Object;JJ)V\")            \\\n-  do_intrinsic(_loadFence,                jdk_internal_misc_Unsafe,     loadFence_name, loadFence_signature,           F_RN)     \\\n-   do_name(     loadFence_name,                                         \"loadFence\")                                             \\\n-   do_alias(    loadFence_signature,                                    void_method_signature)                                   \\\n-  do_intrinsic(_storeFence,               jdk_internal_misc_Unsafe,     storeFence_name, storeFence_signature,         F_RN)     \\\n-   do_name(     storeFence_name,                                        \"storeFence\")                                            \\\n-   do_alias(    storeFence_signature,                                   void_method_signature)                                   \\\n-  do_intrinsic(_fullFence,                jdk_internal_misc_Unsafe,     fullFence_name, fullFence_signature,           F_RN)     \\\n-   do_name(     fullFence_name,                                         \"fullFence\")                                             \\\n-   do_alias(    fullFence_signature,                                    void_method_signature)                                   \\\n-                                                                                                                        \\\n-  \/* Custom branch frequencies profiling support for JSR292 *\/                                                          \\\n-  do_class(java_lang_invoke_MethodHandleImpl,               \"java\/lang\/invoke\/MethodHandleImpl\")                        \\\n-  do_intrinsic(_profileBoolean, java_lang_invoke_MethodHandleImpl, profileBoolean_name, profileBoolean_signature, F_S)  \\\n-   do_name(     profileBoolean_name,                             \"profileBoolean\")                                      \\\n-   do_signature(profileBoolean_signature,                        \"(Z[I)Z\")                                              \\\n-  do_intrinsic(_isCompileConstant, java_lang_invoke_MethodHandleImpl, isCompileConstant_name, isCompileConstant_signature, F_S) \\\n-   do_name(     isCompileConstant_name,                          \"isCompileConstant\")                                   \\\n-   do_alias(    isCompileConstant_signature,                      object_boolean_signature)                             \\\n-                                                                                                                        \\\n-  \/* unsafe memory references (there are a lot of them...) *\/                                                           \\\n-  do_signature(getReference_signature,    \"(Ljava\/lang\/Object;J)Ljava\/lang\/Object;\")                                    \\\n-  do_signature(putReference_signature,    \"(Ljava\/lang\/Object;JLjava\/lang\/Object;)V\")                                   \\\n-  do_signature(getBoolean_signature,      \"(Ljava\/lang\/Object;J)Z\")                                                     \\\n-  do_signature(putBoolean_signature,      \"(Ljava\/lang\/Object;JZ)V\")                                                    \\\n-  do_signature(getByte_signature,         \"(Ljava\/lang\/Object;J)B\")                                                     \\\n-  do_signature(putByte_signature,         \"(Ljava\/lang\/Object;JB)V\")                                                    \\\n-  do_signature(getShort_signature,        \"(Ljava\/lang\/Object;J)S\")                                                     \\\n-  do_signature(putShort_signature,        \"(Ljava\/lang\/Object;JS)V\")                                                    \\\n-  do_signature(getChar_signature,         \"(Ljava\/lang\/Object;J)C\")                                                     \\\n-  do_signature(putChar_signature,         \"(Ljava\/lang\/Object;JC)V\")                                                    \\\n-  do_signature(getInt_signature,          \"(Ljava\/lang\/Object;J)I\")                                                     \\\n-  do_signature(putInt_signature,          \"(Ljava\/lang\/Object;JI)V\")                                                    \\\n-  do_signature(getLong_signature,         \"(Ljava\/lang\/Object;J)J\")                                                     \\\n-  do_signature(putLong_signature,         \"(Ljava\/lang\/Object;JJ)V\")                                                    \\\n-  do_signature(getFloat_signature,        \"(Ljava\/lang\/Object;J)F\")                                                     \\\n-  do_signature(putFloat_signature,        \"(Ljava\/lang\/Object;JF)V\")                                                    \\\n-  do_signature(getDouble_signature,       \"(Ljava\/lang\/Object;J)D\")                                                     \\\n-  do_signature(putDouble_signature,       \"(Ljava\/lang\/Object;JD)V\")                                                    \\\n-                                                                                                                        \\\n-  do_name(getReference_name,\"getReference\")     do_name(putReference_name,\"putReference\")                               \\\n-  do_name(getBoolean_name,\"getBoolean\")         do_name(putBoolean_name,\"putBoolean\")                                   \\\n-  do_name(getByte_name,\"getByte\")               do_name(putByte_name,\"putByte\")                                         \\\n-  do_name(getShort_name,\"getShort\")             do_name(putShort_name,\"putShort\")                                       \\\n-  do_name(getChar_name,\"getChar\")               do_name(putChar_name,\"putChar\")                                         \\\n-  do_name(getInt_name,\"getInt\")                 do_name(putInt_name,\"putInt\")                                           \\\n-  do_name(getLong_name,\"getLong\")               do_name(putLong_name,\"putLong\")                                         \\\n-  do_name(getFloat_name,\"getFloat\")             do_name(putFloat_name,\"putFloat\")                                       \\\n-  do_name(getDouble_name,\"getDouble\")           do_name(putDouble_name,\"putDouble\")                                     \\\n-                                                                                                                        \\\n-  do_intrinsic(_getReference,       jdk_internal_misc_Unsafe,     getReference_name, getReference_signature,     F_RN)  \\\n-  do_intrinsic(_getBoolean,         jdk_internal_misc_Unsafe,     getBoolean_name, getBoolean_signature,         F_RN)  \\\n-  do_intrinsic(_getByte,            jdk_internal_misc_Unsafe,     getByte_name, getByte_signature,               F_RN)  \\\n-  do_intrinsic(_getShort,           jdk_internal_misc_Unsafe,     getShort_name, getShort_signature,             F_RN)  \\\n-  do_intrinsic(_getChar,            jdk_internal_misc_Unsafe,     getChar_name, getChar_signature,               F_RN)  \\\n-  do_intrinsic(_getInt,             jdk_internal_misc_Unsafe,     getInt_name, getInt_signature,                 F_RN)  \\\n-  do_intrinsic(_getLong,            jdk_internal_misc_Unsafe,     getLong_name, getLong_signature,               F_RN)  \\\n-  do_intrinsic(_getFloat,           jdk_internal_misc_Unsafe,     getFloat_name, getFloat_signature,             F_RN)  \\\n-  do_intrinsic(_getDouble,          jdk_internal_misc_Unsafe,     getDouble_name, getDouble_signature,           F_RN)  \\\n-  do_intrinsic(_putReference,       jdk_internal_misc_Unsafe,     putReference_name, putReference_signature,     F_RN)  \\\n-  do_intrinsic(_putBoolean,         jdk_internal_misc_Unsafe,     putBoolean_name, putBoolean_signature,         F_RN)  \\\n-  do_intrinsic(_putByte,            jdk_internal_misc_Unsafe,     putByte_name, putByte_signature,               F_RN)  \\\n-  do_intrinsic(_putShort,           jdk_internal_misc_Unsafe,     putShort_name, putShort_signature,             F_RN)  \\\n-  do_intrinsic(_putChar,            jdk_internal_misc_Unsafe,     putChar_name, putChar_signature,               F_RN)  \\\n-  do_intrinsic(_putInt,             jdk_internal_misc_Unsafe,     putInt_name, putInt_signature,                 F_RN)  \\\n-  do_intrinsic(_putLong,            jdk_internal_misc_Unsafe,     putLong_name, putLong_signature,               F_RN)  \\\n-  do_intrinsic(_putFloat,           jdk_internal_misc_Unsafe,     putFloat_name, putFloat_signature,             F_RN)  \\\n-  do_intrinsic(_putDouble,          jdk_internal_misc_Unsafe,     putDouble_name, putDouble_signature,           F_RN)  \\\n-                                                                                                                        \\\n-  do_name(getReferenceVolatile_name,\"getReferenceVolatile\")   do_name(putReferenceVolatile_name,\"putReferenceVolatile\") \\\n-  do_name(getBooleanVolatile_name,\"getBooleanVolatile\")       do_name(putBooleanVolatile_name,\"putBooleanVolatile\")     \\\n-  do_name(getByteVolatile_name,\"getByteVolatile\")             do_name(putByteVolatile_name,\"putByteVolatile\")           \\\n-  do_name(getShortVolatile_name,\"getShortVolatile\")           do_name(putShortVolatile_name,\"putShortVolatile\")         \\\n-  do_name(getCharVolatile_name,\"getCharVolatile\")             do_name(putCharVolatile_name,\"putCharVolatile\")           \\\n-  do_name(getIntVolatile_name,\"getIntVolatile\")               do_name(putIntVolatile_name,\"putIntVolatile\")             \\\n-  do_name(getLongVolatile_name,\"getLongVolatile\")             do_name(putLongVolatile_name,\"putLongVolatile\")           \\\n-  do_name(getFloatVolatile_name,\"getFloatVolatile\")           do_name(putFloatVolatile_name,\"putFloatVolatile\")         \\\n-  do_name(getDoubleVolatile_name,\"getDoubleVolatile\")         do_name(putDoubleVolatile_name,\"putDoubleVolatile\")       \\\n-                                                                                                                        \\\n-  do_intrinsic(_getReferenceVolatile,     jdk_internal_misc_Unsafe,     getReferenceVolatile_name, getReference_signature, F_RN)  \\\n-  do_intrinsic(_getBooleanVolatile,       jdk_internal_misc_Unsafe,     getBooleanVolatile_name, getBoolean_signature,     F_RN)  \\\n-  do_intrinsic(_getByteVolatile,          jdk_internal_misc_Unsafe,     getByteVolatile_name, getByte_signature,           F_RN)  \\\n-  do_intrinsic(_getShortVolatile,         jdk_internal_misc_Unsafe,     getShortVolatile_name, getShort_signature,         F_RN)  \\\n-  do_intrinsic(_getCharVolatile,          jdk_internal_misc_Unsafe,     getCharVolatile_name, getChar_signature,           F_RN)  \\\n-  do_intrinsic(_getIntVolatile,           jdk_internal_misc_Unsafe,     getIntVolatile_name, getInt_signature,             F_RN)  \\\n-  do_intrinsic(_getLongVolatile,          jdk_internal_misc_Unsafe,     getLongVolatile_name, getLong_signature,           F_RN)  \\\n-  do_intrinsic(_getFloatVolatile,         jdk_internal_misc_Unsafe,     getFloatVolatile_name, getFloat_signature,         F_RN)  \\\n-  do_intrinsic(_getDoubleVolatile,        jdk_internal_misc_Unsafe,     getDoubleVolatile_name, getDouble_signature,       F_RN)  \\\n-  do_intrinsic(_putReferenceVolatile,     jdk_internal_misc_Unsafe,     putReferenceVolatile_name, putReference_signature, F_RN)  \\\n-  do_intrinsic(_putBooleanVolatile,       jdk_internal_misc_Unsafe,     putBooleanVolatile_name, putBoolean_signature,     F_RN)  \\\n-  do_intrinsic(_putByteVolatile,          jdk_internal_misc_Unsafe,     putByteVolatile_name, putByte_signature,           F_RN)  \\\n-  do_intrinsic(_putShortVolatile,         jdk_internal_misc_Unsafe,     putShortVolatile_name, putShort_signature,         F_RN)  \\\n-  do_intrinsic(_putCharVolatile,          jdk_internal_misc_Unsafe,     putCharVolatile_name, putChar_signature,           F_RN)  \\\n-  do_intrinsic(_putIntVolatile,           jdk_internal_misc_Unsafe,     putIntVolatile_name, putInt_signature,             F_RN)  \\\n-  do_intrinsic(_putLongVolatile,          jdk_internal_misc_Unsafe,     putLongVolatile_name, putLong_signature,           F_RN)  \\\n-  do_intrinsic(_putFloatVolatile,         jdk_internal_misc_Unsafe,     putFloatVolatile_name, putFloat_signature,         F_RN)  \\\n-  do_intrinsic(_putDoubleVolatile,        jdk_internal_misc_Unsafe,     putDoubleVolatile_name, putDouble_signature,       F_RN)  \\\n-                                                                                                                        \\\n-  do_name(getReferenceOpaque_name,\"getReferenceOpaque\") do_name(putReferenceOpaque_name,\"putReferenceOpaque\")           \\\n-  do_name(getBooleanOpaque_name,\"getBooleanOpaque\")     do_name(putBooleanOpaque_name,\"putBooleanOpaque\")               \\\n-  do_name(getByteOpaque_name,\"getByteOpaque\")           do_name(putByteOpaque_name,\"putByteOpaque\")                     \\\n-  do_name(getShortOpaque_name,\"getShortOpaque\")         do_name(putShortOpaque_name,\"putShortOpaque\")                   \\\n-  do_name(getCharOpaque_name,\"getCharOpaque\")           do_name(putCharOpaque_name,\"putCharOpaque\")                     \\\n-  do_name(getIntOpaque_name,\"getIntOpaque\")             do_name(putIntOpaque_name,\"putIntOpaque\")                       \\\n-  do_name(getLongOpaque_name,\"getLongOpaque\")           do_name(putLongOpaque_name,\"putLongOpaque\")                     \\\n-  do_name(getFloatOpaque_name,\"getFloatOpaque\")         do_name(putFloatOpaque_name,\"putFloatOpaque\")                   \\\n-  do_name(getDoubleOpaque_name,\"getDoubleOpaque\")       do_name(putDoubleOpaque_name,\"putDoubleOpaque\")                 \\\n-                                                                                                                        \\\n-  do_intrinsic(_getReferenceOpaque,       jdk_internal_misc_Unsafe,        getReferenceOpaque_name, getReference_signature, F_R)  \\\n-  do_intrinsic(_getBooleanOpaque,         jdk_internal_misc_Unsafe,        getBooleanOpaque_name, getBoolean_signature,     F_R)  \\\n-  do_intrinsic(_getByteOpaque,            jdk_internal_misc_Unsafe,        getByteOpaque_name, getByte_signature,           F_R)  \\\n-  do_intrinsic(_getShortOpaque,           jdk_internal_misc_Unsafe,        getShortOpaque_name, getShort_signature,         F_R)  \\\n-  do_intrinsic(_getCharOpaque,            jdk_internal_misc_Unsafe,        getCharOpaque_name, getChar_signature,           F_R)  \\\n-  do_intrinsic(_getIntOpaque,             jdk_internal_misc_Unsafe,        getIntOpaque_name, getInt_signature,             F_R)  \\\n-  do_intrinsic(_getLongOpaque,            jdk_internal_misc_Unsafe,        getLongOpaque_name, getLong_signature,           F_R)  \\\n-  do_intrinsic(_getFloatOpaque,           jdk_internal_misc_Unsafe,        getFloatOpaque_name, getFloat_signature,         F_R)  \\\n-  do_intrinsic(_getDoubleOpaque,          jdk_internal_misc_Unsafe,        getDoubleOpaque_name, getDouble_signature,       F_R)  \\\n-  do_intrinsic(_putReferenceOpaque,       jdk_internal_misc_Unsafe,        putReferenceOpaque_name, putReference_signature, F_R)  \\\n-  do_intrinsic(_putBooleanOpaque,         jdk_internal_misc_Unsafe,        putBooleanOpaque_name, putBoolean_signature,     F_R)  \\\n-  do_intrinsic(_putByteOpaque,            jdk_internal_misc_Unsafe,        putByteOpaque_name, putByte_signature,           F_R)  \\\n-  do_intrinsic(_putShortOpaque,           jdk_internal_misc_Unsafe,        putShortOpaque_name, putShort_signature,         F_R)  \\\n-  do_intrinsic(_putCharOpaque,            jdk_internal_misc_Unsafe,        putCharOpaque_name, putChar_signature,           F_R)  \\\n-  do_intrinsic(_putIntOpaque,             jdk_internal_misc_Unsafe,        putIntOpaque_name, putInt_signature,             F_R)  \\\n-  do_intrinsic(_putLongOpaque,            jdk_internal_misc_Unsafe,        putLongOpaque_name, putLong_signature,           F_R)  \\\n-  do_intrinsic(_putFloatOpaque,           jdk_internal_misc_Unsafe,        putFloatOpaque_name, putFloat_signature,         F_R)  \\\n-  do_intrinsic(_putDoubleOpaque,          jdk_internal_misc_Unsafe,        putDoubleOpaque_name, putDouble_signature,       F_R)  \\\n-                                                                                                                        \\\n-  do_name(getReferenceAcquire_name,  \"getReferenceAcquire\") do_name(putReferenceRelease_name,  \"putReferenceRelease\")   \\\n-  do_name(getBooleanAcquire_name, \"getBooleanAcquire\")      do_name(putBooleanRelease_name, \"putBooleanRelease\")        \\\n-  do_name(getByteAcquire_name,    \"getByteAcquire\")         do_name(putByteRelease_name,    \"putByteRelease\")           \\\n-  do_name(getShortAcquire_name,   \"getShortAcquire\")        do_name(putShortRelease_name,   \"putShortRelease\")          \\\n-  do_name(getCharAcquire_name,    \"getCharAcquire\")         do_name(putCharRelease_name,    \"putCharRelease\")           \\\n-  do_name(getIntAcquire_name,     \"getIntAcquire\")          do_name(putIntRelease_name,     \"putIntRelease\")            \\\n-  do_name(getLongAcquire_name,    \"getLongAcquire\")         do_name(putLongRelease_name,    \"putLongRelease\")           \\\n-  do_name(getFloatAcquire_name,   \"getFloatAcquire\")        do_name(putFloatRelease_name,   \"putFloatRelease\")          \\\n-  do_name(getDoubleAcquire_name,  \"getDoubleAcquire\")       do_name(putDoubleRelease_name,  \"putDoubleRelease\")         \\\n-                                                                                                                        \\\n-  do_intrinsic(_getReferenceAcquire,     jdk_internal_misc_Unsafe,        getReferenceAcquire_name, getReference_signature, F_R)  \\\n-  do_intrinsic(_getBooleanAcquire,       jdk_internal_misc_Unsafe,        getBooleanAcquire_name, getBoolean_signature,     F_R)  \\\n-  do_intrinsic(_getByteAcquire,          jdk_internal_misc_Unsafe,        getByteAcquire_name, getByte_signature,           F_R)  \\\n-  do_intrinsic(_getShortAcquire,         jdk_internal_misc_Unsafe,        getShortAcquire_name, getShort_signature,         F_R)  \\\n-  do_intrinsic(_getCharAcquire,          jdk_internal_misc_Unsafe,        getCharAcquire_name, getChar_signature,           F_R)  \\\n-  do_intrinsic(_getIntAcquire,           jdk_internal_misc_Unsafe,        getIntAcquire_name, getInt_signature,             F_R)  \\\n-  do_intrinsic(_getLongAcquire,          jdk_internal_misc_Unsafe,        getLongAcquire_name, getLong_signature,           F_R)  \\\n-  do_intrinsic(_getFloatAcquire,         jdk_internal_misc_Unsafe,        getFloatAcquire_name, getFloat_signature,         F_R)  \\\n-  do_intrinsic(_getDoubleAcquire,        jdk_internal_misc_Unsafe,        getDoubleAcquire_name, getDouble_signature,       F_R)  \\\n-  do_intrinsic(_putReferenceRelease,     jdk_internal_misc_Unsafe,        putReferenceRelease_name, putReference_signature, F_R)  \\\n-  do_intrinsic(_putBooleanRelease,       jdk_internal_misc_Unsafe,        putBooleanRelease_name, putBoolean_signature,     F_R)  \\\n-  do_intrinsic(_putByteRelease,          jdk_internal_misc_Unsafe,        putByteRelease_name, putByte_signature,           F_R)  \\\n-  do_intrinsic(_putShortRelease,         jdk_internal_misc_Unsafe,        putShortRelease_name, putShort_signature,         F_R)  \\\n-  do_intrinsic(_putCharRelease,          jdk_internal_misc_Unsafe,        putCharRelease_name, putChar_signature,           F_R)  \\\n-  do_intrinsic(_putIntRelease,           jdk_internal_misc_Unsafe,        putIntRelease_name, putInt_signature,             F_R)  \\\n-  do_intrinsic(_putLongRelease,          jdk_internal_misc_Unsafe,        putLongRelease_name, putLong_signature,           F_R)  \\\n-  do_intrinsic(_putFloatRelease,         jdk_internal_misc_Unsafe,        putFloatRelease_name, putFloat_signature,         F_R)  \\\n-  do_intrinsic(_putDoubleRelease,        jdk_internal_misc_Unsafe,        putDoubleRelease_name, putDouble_signature,       F_R)  \\\n-                                                                                                                        \\\n-  do_name(getShortUnaligned_name,\"getShortUnaligned\")     do_name(putShortUnaligned_name,\"putShortUnaligned\")           \\\n-  do_name(getCharUnaligned_name,\"getCharUnaligned\")       do_name(putCharUnaligned_name,\"putCharUnaligned\")             \\\n-  do_name(getIntUnaligned_name,\"getIntUnaligned\")         do_name(putIntUnaligned_name,\"putIntUnaligned\")               \\\n-  do_name(getLongUnaligned_name,\"getLongUnaligned\")       do_name(putLongUnaligned_name,\"putLongUnaligned\")             \\\n-                                                                                                                        \\\n-  do_intrinsic(_getShortUnaligned,         jdk_internal_misc_Unsafe,    getShortUnaligned_name, getShort_signature,     F_R)  \\\n-  do_intrinsic(_getCharUnaligned,          jdk_internal_misc_Unsafe,    getCharUnaligned_name, getChar_signature,       F_R)  \\\n-  do_intrinsic(_getIntUnaligned,           jdk_internal_misc_Unsafe,    getIntUnaligned_name, getInt_signature,         F_R)  \\\n-  do_intrinsic(_getLongUnaligned,          jdk_internal_misc_Unsafe,    getLongUnaligned_name, getLong_signature,       F_R)  \\\n-  do_intrinsic(_putShortUnaligned,         jdk_internal_misc_Unsafe,    putShortUnaligned_name, putShort_signature,     F_R)  \\\n-  do_intrinsic(_putCharUnaligned,          jdk_internal_misc_Unsafe,    putCharUnaligned_name, putChar_signature,       F_R)  \\\n-  do_intrinsic(_putIntUnaligned,           jdk_internal_misc_Unsafe,    putIntUnaligned_name, putInt_signature,         F_R)  \\\n-  do_intrinsic(_putLongUnaligned,          jdk_internal_misc_Unsafe,    putLongUnaligned_name, putLong_signature,       F_R)  \\\n-                                                                                                                        \\\n-  do_signature(compareAndSetReference_signature,      \"(Ljava\/lang\/Object;JLjava\/lang\/Object;Ljava\/lang\/Object;)Z\")        \\\n-  do_signature(compareAndExchangeReference_signature, \"(Ljava\/lang\/Object;JLjava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\") \\\n-  do_signature(compareAndSetLong_signature,        \"(Ljava\/lang\/Object;JJJ)Z\")                                          \\\n-  do_signature(compareAndExchangeLong_signature,   \"(Ljava\/lang\/Object;JJJ)J\")                                          \\\n-  do_signature(compareAndSetInt_signature,         \"(Ljava\/lang\/Object;JII)Z\")                                          \\\n-  do_signature(compareAndExchangeInt_signature,    \"(Ljava\/lang\/Object;JII)I\")                                          \\\n-  do_signature(compareAndSetByte_signature,        \"(Ljava\/lang\/Object;JBB)Z\")                                          \\\n-  do_signature(compareAndExchangeByte_signature,   \"(Ljava\/lang\/Object;JBB)B\")                                          \\\n-  do_signature(compareAndSetShort_signature,       \"(Ljava\/lang\/Object;JSS)Z\")                                          \\\n-  do_signature(compareAndExchangeShort_signature,  \"(Ljava\/lang\/Object;JSS)S\")                                          \\\n-                                                                                                                        \\\n-  do_name(compareAndSetReference_name,              \"compareAndSetReference\")                                           \\\n-  do_name(compareAndExchangeReference_name,         \"compareAndExchangeReference\")                                      \\\n-  do_name(compareAndExchangeReferenceAcquire_name,  \"compareAndExchangeReferenceAcquire\")                               \\\n-  do_name(compareAndExchangeReferenceRelease_name,  \"compareAndExchangeReferenceRelease\")                               \\\n-  do_name(compareAndSetLong_name,                   \"compareAndSetLong\")                                                \\\n-  do_name(compareAndExchangeLong_name,              \"compareAndExchangeLong\")                                           \\\n-  do_name(compareAndExchangeLongAcquire_name,       \"compareAndExchangeLongAcquire\")                                    \\\n-  do_name(compareAndExchangeLongRelease_name,       \"compareAndExchangeLongRelease\")                                    \\\n-  do_name(compareAndSetInt_name,                    \"compareAndSetInt\")                                                 \\\n-  do_name(compareAndExchangeInt_name,               \"compareAndExchangeInt\")                                            \\\n-  do_name(compareAndExchangeIntAcquire_name,        \"compareAndExchangeIntAcquire\")                                     \\\n-  do_name(compareAndExchangeIntRelease_name,        \"compareAndExchangeIntRelease\")                                     \\\n-  do_name(compareAndSetByte_name,                   \"compareAndSetByte\")                                                \\\n-  do_name(compareAndExchangeByte_name,              \"compareAndExchangeByte\")                                           \\\n-  do_name(compareAndExchangeByteAcquire_name,       \"compareAndExchangeByteAcquire\")                                    \\\n-  do_name(compareAndExchangeByteRelease_name,       \"compareAndExchangeByteRelease\")                                    \\\n-  do_name(compareAndSetShort_name,                  \"compareAndSetShort\")                                               \\\n-  do_name(compareAndExchangeShort_name,             \"compareAndExchangeShort\")                                          \\\n-  do_name(compareAndExchangeShortAcquire_name,      \"compareAndExchangeShortAcquire\")                                   \\\n-  do_name(compareAndExchangeShortRelease_name,      \"compareAndExchangeShortRelease\")                                   \\\n-                                                                                                                        \\\n-  do_name(weakCompareAndSetReferencePlain_name,     \"weakCompareAndSetReferencePlain\")                                  \\\n-  do_name(weakCompareAndSetReferenceAcquire_name,   \"weakCompareAndSetReferenceAcquire\")                                \\\n-  do_name(weakCompareAndSetReferenceRelease_name,   \"weakCompareAndSetReferenceRelease\")                                \\\n-  do_name(weakCompareAndSetReference_name,          \"weakCompareAndSetReference\")                                       \\\n-  do_name(weakCompareAndSetLongPlain_name,          \"weakCompareAndSetLongPlain\")                                       \\\n-  do_name(weakCompareAndSetLongAcquire_name,        \"weakCompareAndSetLongAcquire\")                                     \\\n-  do_name(weakCompareAndSetLongRelease_name,        \"weakCompareAndSetLongRelease\")                                     \\\n-  do_name(weakCompareAndSetLong_name,               \"weakCompareAndSetLong\")                                            \\\n-  do_name(weakCompareAndSetIntPlain_name,           \"weakCompareAndSetIntPlain\")                                        \\\n-  do_name(weakCompareAndSetIntAcquire_name,         \"weakCompareAndSetIntAcquire\")                                      \\\n-  do_name(weakCompareAndSetIntRelease_name,         \"weakCompareAndSetIntRelease\")                                      \\\n-  do_name(weakCompareAndSetInt_name,                \"weakCompareAndSetInt\")                                             \\\n-  do_name(weakCompareAndSetBytePlain_name,          \"weakCompareAndSetBytePlain\")                                       \\\n-  do_name(weakCompareAndSetByteAcquire_name,        \"weakCompareAndSetByteAcquire\")                                     \\\n-  do_name(weakCompareAndSetByteRelease_name,        \"weakCompareAndSetByteRelease\")                                     \\\n-  do_name(weakCompareAndSetByte_name,               \"weakCompareAndSetByte\")                                            \\\n-  do_name(weakCompareAndSetShortPlain_name,         \"weakCompareAndSetShortPlain\")                                      \\\n-  do_name(weakCompareAndSetShortAcquire_name,       \"weakCompareAndSetShortAcquire\")                                    \\\n-  do_name(weakCompareAndSetShortRelease_name,       \"weakCompareAndSetShortRelease\")                                    \\\n-  do_name(weakCompareAndSetShort_name,              \"weakCompareAndSetShort\")                                           \\\n-                                                                                                                        \\\n-  do_intrinsic(_compareAndSetReference,              jdk_internal_misc_Unsafe,  compareAndSetReference_name,              compareAndSetReference_signature,      F_RN) \\\n-  do_intrinsic(_compareAndExchangeReference,         jdk_internal_misc_Unsafe,  compareAndExchangeReference_name,         compareAndExchangeReference_signature, F_RN) \\\n-  do_intrinsic(_compareAndExchangeReferenceAcquire,  jdk_internal_misc_Unsafe,  compareAndExchangeReferenceAcquire_name,  compareAndExchangeReference_signature, F_R)  \\\n-  do_intrinsic(_compareAndExchangeReferenceRelease,  jdk_internal_misc_Unsafe,  compareAndExchangeReferenceRelease_name,  compareAndExchangeReference_signature, F_R)  \\\n-  do_intrinsic(_compareAndSetLong,                jdk_internal_misc_Unsafe,  compareAndSetLong_name,                compareAndSetLong_signature,        F_RN) \\\n-  do_intrinsic(_compareAndExchangeLong,           jdk_internal_misc_Unsafe,  compareAndExchangeLong_name,           compareAndExchangeLong_signature,   F_RN) \\\n-  do_intrinsic(_compareAndExchangeLongAcquire,    jdk_internal_misc_Unsafe,  compareAndExchangeLongAcquire_name,    compareAndExchangeLong_signature,   F_R)  \\\n-  do_intrinsic(_compareAndExchangeLongRelease,    jdk_internal_misc_Unsafe,  compareAndExchangeLongRelease_name,    compareAndExchangeLong_signature,   F_R)  \\\n-  do_intrinsic(_compareAndSetInt,                 jdk_internal_misc_Unsafe,  compareAndSetInt_name,                 compareAndSetInt_signature,         F_RN) \\\n-  do_intrinsic(_compareAndExchangeInt,            jdk_internal_misc_Unsafe,  compareAndExchangeInt_name,            compareAndExchangeInt_signature,    F_RN) \\\n-  do_intrinsic(_compareAndExchangeIntAcquire,     jdk_internal_misc_Unsafe,  compareAndExchangeIntAcquire_name,     compareAndExchangeInt_signature,    F_R)  \\\n-  do_intrinsic(_compareAndExchangeIntRelease,     jdk_internal_misc_Unsafe,  compareAndExchangeIntRelease_name,     compareAndExchangeInt_signature,    F_R)  \\\n-  do_intrinsic(_compareAndSetByte,                jdk_internal_misc_Unsafe,  compareAndSetByte_name,                compareAndSetByte_signature,        F_R)  \\\n-  do_intrinsic(_compareAndExchangeByte,           jdk_internal_misc_Unsafe,  compareAndExchangeByte_name,           compareAndExchangeByte_signature,   F_R)  \\\n-  do_intrinsic(_compareAndExchangeByteAcquire,    jdk_internal_misc_Unsafe,  compareAndExchangeByteAcquire_name,    compareAndExchangeByte_signature,   F_R)  \\\n-  do_intrinsic(_compareAndExchangeByteRelease,    jdk_internal_misc_Unsafe,  compareAndExchangeByteRelease_name,    compareAndExchangeByte_signature,   F_R)  \\\n-  do_intrinsic(_compareAndSetShort,               jdk_internal_misc_Unsafe,  compareAndSetShort_name,               compareAndSetShort_signature,       F_R)  \\\n-  do_intrinsic(_compareAndExchangeShort,          jdk_internal_misc_Unsafe,  compareAndExchangeShort_name,          compareAndExchangeShort_signature,  F_R)  \\\n-  do_intrinsic(_compareAndExchangeShortAcquire,   jdk_internal_misc_Unsafe,  compareAndExchangeShortAcquire_name,   compareAndExchangeShort_signature,  F_R)  \\\n-  do_intrinsic(_compareAndExchangeShortRelease,   jdk_internal_misc_Unsafe,  compareAndExchangeShortRelease_name,   compareAndExchangeShort_signature,  F_R)  \\\n-                                                                                                                                                             \\\n-  do_intrinsic(_weakCompareAndSetReferencePlain,  jdk_internal_misc_Unsafe,  weakCompareAndSetReferencePlain_name,     compareAndSetReference_signature,      F_R) \\\n-  do_intrinsic(_weakCompareAndSetReferenceAcquire,jdk_internal_misc_Unsafe,  weakCompareAndSetReferenceAcquire_name,   compareAndSetReference_signature,      F_R) \\\n-  do_intrinsic(_weakCompareAndSetReferenceRelease,jdk_internal_misc_Unsafe,  weakCompareAndSetReferenceRelease_name,   compareAndSetReference_signature,      F_R) \\\n-  do_intrinsic(_weakCompareAndSetReference,       jdk_internal_misc_Unsafe,  weakCompareAndSetReference_name,          compareAndSetReference_signature,      F_R) \\\n-  do_intrinsic(_weakCompareAndSetLongPlain,       jdk_internal_misc_Unsafe,  weakCompareAndSetLongPlain_name,       compareAndSetLong_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetLongAcquire,     jdk_internal_misc_Unsafe,  weakCompareAndSetLongAcquire_name,     compareAndSetLong_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetLongRelease,     jdk_internal_misc_Unsafe,  weakCompareAndSetLongRelease_name,     compareAndSetLong_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetLong,            jdk_internal_misc_Unsafe,  weakCompareAndSetLong_name,            compareAndSetLong_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetIntPlain,        jdk_internal_misc_Unsafe,  weakCompareAndSetIntPlain_name,        compareAndSetInt_signature,         F_R) \\\n-  do_intrinsic(_weakCompareAndSetIntAcquire,      jdk_internal_misc_Unsafe,  weakCompareAndSetIntAcquire_name,      compareAndSetInt_signature,         F_R) \\\n-  do_intrinsic(_weakCompareAndSetIntRelease,      jdk_internal_misc_Unsafe,  weakCompareAndSetIntRelease_name,      compareAndSetInt_signature,         F_R) \\\n-  do_intrinsic(_weakCompareAndSetInt,             jdk_internal_misc_Unsafe,  weakCompareAndSetInt_name,             compareAndSetInt_signature,         F_R) \\\n-  do_intrinsic(_weakCompareAndSetBytePlain,       jdk_internal_misc_Unsafe,  weakCompareAndSetBytePlain_name,       compareAndSetByte_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetByteAcquire,     jdk_internal_misc_Unsafe,  weakCompareAndSetByteAcquire_name,     compareAndSetByte_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetByteRelease,     jdk_internal_misc_Unsafe,  weakCompareAndSetByteRelease_name,     compareAndSetByte_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetByte,            jdk_internal_misc_Unsafe,  weakCompareAndSetByte_name,            compareAndSetByte_signature,        F_R) \\\n-  do_intrinsic(_weakCompareAndSetShortPlain,      jdk_internal_misc_Unsafe,  weakCompareAndSetShortPlain_name,      compareAndSetShort_signature,       F_R) \\\n-  do_intrinsic(_weakCompareAndSetShortAcquire,    jdk_internal_misc_Unsafe,  weakCompareAndSetShortAcquire_name,    compareAndSetShort_signature,       F_R) \\\n-  do_intrinsic(_weakCompareAndSetShortRelease,    jdk_internal_misc_Unsafe,  weakCompareAndSetShortRelease_name,    compareAndSetShort_signature,       F_R) \\\n-  do_intrinsic(_weakCompareAndSetShort,           jdk_internal_misc_Unsafe,  weakCompareAndSetShort_name,           compareAndSetShort_signature,       F_R) \\\n-                           \\\n-  do_intrinsic(_getAndAddInt,             jdk_internal_misc_Unsafe,     getAndAddInt_name, getAndAddInt_signature, F_R)       \\\n-   do_name(     getAndAddInt_name,                                      \"getAndAddInt\")                                       \\\n-   do_signature(getAndAddInt_signature,                                 \"(Ljava\/lang\/Object;JI)I\" )                           \\\n-  do_intrinsic(_getAndAddLong,            jdk_internal_misc_Unsafe,     getAndAddLong_name, getAndAddLong_signature, F_R)     \\\n-   do_name(     getAndAddLong_name,                                     \"getAndAddLong\")                                      \\\n-   do_signature(getAndAddLong_signature,                                \"(Ljava\/lang\/Object;JJ)J\" )                           \\\n-  do_intrinsic(_getAndAddByte,            jdk_internal_misc_Unsafe,     getAndAddByte_name, getAndAddByte_signature, F_R)     \\\n-   do_name(     getAndAddByte_name,                                     \"getAndAddByte\")                                      \\\n-   do_signature(getAndAddByte_signature,                                \"(Ljava\/lang\/Object;JB)B\" )                           \\\n-  do_intrinsic(_getAndAddShort,           jdk_internal_misc_Unsafe,     getAndAddShort_name, getAndAddShort_signature, F_R)   \\\n-   do_name(     getAndAddShort_name,                                    \"getAndAddShort\")                                     \\\n-   do_signature(getAndAddShort_signature,                               \"(Ljava\/lang\/Object;JS)S\" )                           \\\n-  do_intrinsic(_getAndSetInt,             jdk_internal_misc_Unsafe,     getAndSetInt_name, getAndSetInt_signature, F_R)       \\\n-   do_name(     getAndSetInt_name,                                      \"getAndSetInt\")                                       \\\n-   do_alias(    getAndSetInt_signature,                                 \/*\"(Ljava\/lang\/Object;JI)I\"*\/ getAndAddInt_signature)   \\\n-  do_intrinsic(_getAndSetLong,            jdk_internal_misc_Unsafe,     getAndSetLong_name, getAndSetLong_signature, F_R)     \\\n-   do_name(     getAndSetLong_name,                                     \"getAndSetLong\")                                      \\\n-   do_alias(    getAndSetLong_signature,                                \/*\"(Ljava\/lang\/Object;JJ)J\"*\/ getAndAddLong_signature)  \\\n-  do_intrinsic(_getAndSetByte,            jdk_internal_misc_Unsafe,     getAndSetByte_name, getAndSetByte_signature, F_R)     \\\n-   do_name(     getAndSetByte_name,                                     \"getAndSetByte\")                                      \\\n-   do_alias(    getAndSetByte_signature,                                \/*\"(Ljava\/lang\/Object;JB)B\"*\/ getAndAddByte_signature)  \\\n-  do_intrinsic(_getAndSetShort,           jdk_internal_misc_Unsafe,     getAndSetShort_name, getAndSetShort_signature, F_R)   \\\n-   do_name(     getAndSetShort_name,                                    \"getAndSetShort\")                                     \\\n-   do_alias(    getAndSetShort_signature,                               \/*\"(Ljava\/lang\/Object;JS)S\"*\/ getAndAddShort_signature) \\\n-  do_intrinsic(_getAndSetReference,       jdk_internal_misc_Unsafe,     getAndSetReference_name, getAndSetReference_signature, F_R) \\\n-   do_name(     getAndSetReference_name,                                \"getAndSetReference\")                                  \\\n-   do_signature(getAndSetReference_signature,                           \"(Ljava\/lang\/Object;JLjava\/lang\/Object;)Ljava\/lang\/Object;\" ) \\\n-                                                                                                                                               \\\n-  \/* Vector API intrinsification support *\/                                                                                                    \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorUnaryOp, jdk_internal_vm_vector_VectorSupport, vector_unary_op_name, vector_unary_op_sig, F_S)                           \\\n-   do_signature(vector_unary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\") \\\n-   do_name(vector_unary_op_name,     \"unaryOp\")                                                                                                \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorBinaryOp, jdk_internal_vm_vector_VectorSupport, vector_binary_op_name, vector_binary_op_sig, F_S)                        \\\n-   do_signature(vector_binary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;\"                              \\\n-                                       \"Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\")                                                   \\\n-   do_name(vector_binary_op_name,     \"binaryOp\")                                                                                              \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorTernaryOp, jdk_internal_vm_vector_VectorSupport, vector_ternary_op_name, vector_ternary_op_sig, F_S)                     \\\n-   do_signature(vector_ternary_op_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;\"                             \\\n-                                        \"Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljava\/lang\/Object;\")        \\\n-   do_name(vector_ternary_op_name,     \"ternaryOp\")                                                                                            \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorBroadcastCoerced, jdk_internal_vm_vector_VectorSupport, vector_broadcast_coerced_name, vector_broadcast_coerced_sig, F_S)\\\n-   do_signature(vector_broadcast_coerced_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;IJLjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"      \\\n-                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)Ljava\/lang\/Object;\")                 \\\n-   do_name(vector_broadcast_coerced_name, \"broadcastCoerced\")                                                                                  \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorShuffleIota, jdk_internal_vm_vector_VectorSupport, vector_shuffle_step_iota_name, vector_shuffle_step_iota_sig, F_S)     \\\n-   do_signature(vector_shuffle_step_iota_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"        \\\n-                                               \"IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\") \\\n-   do_name(vector_shuffle_step_iota_name, \"shuffleIota\")                                                                                       \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorShuffleToVector, jdk_internal_vm_vector_VectorSupport, vector_shuffle_to_vector_name, vector_shuffle_to_vector_sig, F_S) \\\n-   do_signature(vector_shuffle_to_vector_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\" \\\n-                                               \"ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation;)Ljava\/lang\/Object;\")          \\\n-   do_name(vector_shuffle_to_vector_name, \"shuffleToVector\")                                                                                   \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorLoadOp, jdk_internal_vm_vector_VectorSupport, vector_load_op_name, vector_load_op_sig, F_S)                              \\\n-   do_signature(vector_load_op_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjava\/lang\/Object;\"                                \\\n-                                     \"ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation;)Ljava\/lang\/Object;\") \\\n-   do_name(vector_load_op_name,     \"load\")                                                                                                    \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorStoreOp, jdk_internal_vm_vector_VectorSupport, vector_store_op_name, vector_store_op_sig, F_S)                           \\\n-   do_signature(vector_store_op_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;\"    \\\n-                                      \"Ljava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperation;)V\")                      \\\n-   do_name(vector_store_op_name,     \"store\")                                                                                                  \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorReductionCoerced, jdk_internal_vm_vector_VectorSupport, vector_reduction_coerced_name, vector_reduction_coerced_sig, F_S) \\\n-   do_signature(vector_reduction_coerced_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/util\/function\/Function;)J\") \\\n-   do_name(vector_reduction_coerced_name, \"reductionCoerced\")                                                                                  \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorTest, jdk_internal_vm_vector_VectorSupport, vector_test_name, vector_test_sig, F_S)                                      \\\n-   do_signature(vector_test_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Z\") \\\n-   do_name(vector_test_name, \"test\")                                                                                                           \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorBlend, jdk_internal_vm_vector_VectorSupport, vector_blend_name, vector_blend_sig, F_S)                                   \\\n-   do_signature(vector_blend_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                      \\\n-                                   \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;\" \\\n-                                   \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")       \\\n-   do_name(vector_blend_name, \"blend\")                                                                                                         \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorCompare, jdk_internal_vm_vector_VectorSupport, vector_compare_name, vector_compare_sig, F_S)                             \\\n-   do_signature(vector_compare_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                   \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\" \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"           \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp;\" \")\" \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;\") \\\n-   do_name(vector_compare_name, \"compare\")                                                                                                     \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorRearrange, jdk_internal_vm_vector_VectorSupport, vector_rearrange_name, vector_rearrange_sig, F_S)                       \\\n-   do_signature(vector_rearrange_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                  \\\n-                                       \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\"     \\\n-                                       \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\") \\\n-   do_name(vector_rearrange_name, \"rearrangeOp\")                                                                                               \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorExtract, jdk_internal_vm_vector_VectorSupport, vector_extract_name, vector_extract_sig, F_S)                             \\\n-   do_signature(vector_extract_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                     \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;I\"                                                          \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J\")                                                  \\\n-   do_name(vector_extract_name, \"extract\")                                                                                                     \\\n-                                                                                                                                               \\\n- do_intrinsic(_VectorInsert, jdk_internal_vm_vector_VectorSupport, vector_insert_name, vector_insert_sig, F_S)                                 \\\n-   do_signature(vector_insert_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                      \\\n-                                    \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;IJ\"                                                          \\\n-                                    \"Ljdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")        \\\n-   do_name(vector_insert_name, \"insert\")                                                                                                       \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorBroadcastInt, jdk_internal_vm_vector_VectorSupport, vector_broadcast_int_name, vector_broadcast_int_sig, F_S)            \\\n-   do_signature(vector_broadcast_int_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;I\"                                                              \\\n-                                           \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;I\"                                                    \\\n-                                           \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\") \\\n-   do_name(vector_broadcast_int_name, \"broadcastInt\")                                                                                          \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorConvert, jdk_internal_vm_vector_VectorSupport, vector_convert_name, vector_convert_sig, F_S)                             \\\n-   do_signature(vector_convert_sig, \"(ILjava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                    \\\n-                                     \"Ljava\/lang\/Class;Ljava\/lang\/Class;I\"                                                                     \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\"                                                    \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"                                                    \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorConvertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\") \\\n-   do_name(vector_convert_name, \"convert\")                                                                                                     \\\n-                                                                                                                                               \\\n-   do_intrinsic(_VectorGatherOp, jdk_internal_vm_vector_VectorSupport, vector_gather_name, vector_gather_sig, F_S)                             \\\n-    do_signature(vector_gather_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;\"                                                    \\\n-                                     \"Ljava\/lang\/Object;J\"                                                                                     \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"                                                           \\\n-                                     \"Ljava\/lang\/Object;I[II\"                                                                                  \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;\"                                                    \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap;)\"                                      \\\n-                                     \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\")                                                          \\\n-    do_name(vector_gather_name, \"loadWithMap\")                                                                                                 \\\n-                                                                                                                                               \\\n-   do_intrinsic(_VectorScatterOp, jdk_internal_vm_vector_VectorSupport, vector_scatter_name, vector_scatter_sig, F_S)                          \\\n-    do_signature(vector_scatter_sig, \"(Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;\"                                                   \\\n-                                      \"Ljava\/lang\/Object;J\"                                                                                    \\\n-                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\"             \\\n-                                      \"Ljava\/lang\/Object;I[II\"                                                                                 \\\n-                                      \"Ljdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap;)V\")                                  \\\n-    do_name(vector_scatter_name, \"storeWithMap\")                                                                                               \\\n-                                                                                                                                               \\\n-  do_intrinsic(_VectorRebox, jdk_internal_vm_vector_VectorSupport, vector_rebox_name, vector_rebox_sig, F_S)                                   \\\n-   do_alias(vector_rebox_sig, object_object_signature)                                                                                         \\\n-   do_name(vector_rebox_name, \"maybeRebox\")                                                                                                    \\\n-                                                                                                                                               \\\n-                                                                                                                               \\\n-   \/* (2) Bytecode intrinsics                                                                        *\/                        \\\n-                                                                                                                               \\\n-  do_intrinsic(_park,                     jdk_internal_misc_Unsafe,     park_name, park_signature,                     F_R)    \\\n-   do_name(     park_name,                                              \"park\")                                                \\\n-   do_signature(park_signature,                                         \"(ZJ)V\")                                               \\\n-  do_intrinsic(_unpark,                   jdk_internal_misc_Unsafe,     unpark_name, unpark_signature,                 F_R)    \\\n-   do_name(     unpark_name,                                            \"unpark\")                                              \\\n-   do_alias(    unpark_signature,                                       \/*(LObject;)V*\/ object_void_signature)                 \\\n-                                                                                                                               \\\n-  do_intrinsic(_StringBuilder_void,   java_lang_StringBuilder, object_initializer_name, void_method_signature,     F_R)   \\\n-  do_intrinsic(_StringBuilder_int,    java_lang_StringBuilder, object_initializer_name, int_void_signature,        F_R)   \\\n-  do_intrinsic(_StringBuilder_String, java_lang_StringBuilder, object_initializer_name, string_void_signature,     F_R)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_StringBuilder_append_char,   java_lang_StringBuilder, append_name, char_StringBuilder_signature,   F_R)   \\\n-  do_intrinsic(_StringBuilder_append_int,    java_lang_StringBuilder, append_name, int_StringBuilder_signature,    F_R)   \\\n-  do_intrinsic(_StringBuilder_append_String, java_lang_StringBuilder, append_name, String_StringBuilder_signature, F_R)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_StringBuilder_toString, java_lang_StringBuilder, toString_name, void_string_signature,             F_R)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_StringBuffer_void,   java_lang_StringBuffer, object_initializer_name, void_method_signature,       F_R)   \\\n-  do_intrinsic(_StringBuffer_int,    java_lang_StringBuffer, object_initializer_name, int_void_signature,          F_R)   \\\n-  do_intrinsic(_StringBuffer_String, java_lang_StringBuffer, object_initializer_name, string_void_signature,       F_R)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_StringBuffer_append_char,   java_lang_StringBuffer, append_name, char_StringBuffer_signature,      F_Y)   \\\n-  do_intrinsic(_StringBuffer_append_int,    java_lang_StringBuffer, append_name, int_StringBuffer_signature,       F_Y)   \\\n-  do_intrinsic(_StringBuffer_append_String, java_lang_StringBuffer, append_name, String_StringBuffer_signature,    F_Y)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_StringBuffer_toString,  java_lang_StringBuffer, toString_name, void_string_signature,              F_Y)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_Integer_toString,      java_lang_Integer, toString_name, int_String_signature,                     F_S)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_String_String, java_lang_String, object_initializer_name, string_void_signature,                   F_R)   \\\n-                                                                                                                          \\\n-  do_intrinsic(_Object_init,              java_lang_Object, object_initializer_name, void_method_signature,        F_R)   \\\n-  \/*    (symbol object_initializer_name defined above) *\/                                                                 \\\n-                                                                                                                          \\\n-  do_intrinsic(_invoke,                   java_lang_reflect_Method, invoke_name, object_object_array_object_signature, F_R) \\\n-  \/*   (symbols invoke_name and invoke_signature defined above) *\/                                                      \\\n-  \/* the polymorphic MH intrinsics must be in compact order, with _invokeGeneric first and _linkToInterface last *\/     \\\n-  do_intrinsic(_invokeGeneric,            java_lang_invoke_MethodHandle, invoke_name,           star_name, F_RN)        \\\n-  do_intrinsic(_invokeBasic,              java_lang_invoke_MethodHandle, invokeBasic_name,      star_name, F_RN)        \\\n-  do_intrinsic(_linkToVirtual,            java_lang_invoke_MethodHandle, linkToVirtual_name,    star_name, F_SN)        \\\n-  do_intrinsic(_linkToStatic,             java_lang_invoke_MethodHandle, linkToStatic_name,     star_name, F_SN)        \\\n-  do_intrinsic(_linkToSpecial,            java_lang_invoke_MethodHandle, linkToSpecial_name,    star_name, F_SN)        \\\n-  do_intrinsic(_linkToInterface,          java_lang_invoke_MethodHandle, linkToInterface_name,  star_name, F_SN)        \\\n-  \/* special marker for bytecode generated for the JVM from a LambdaForm: *\/                                            \\\n-  do_intrinsic(_compiledLambdaForm,       java_lang_invoke_MethodHandle, compiledLambdaForm_name, star_name, F_RN)      \\\n-                                                                                                                        \\\n-  \/* unboxing methods: *\/                                                                                               \\\n-  do_intrinsic(_booleanValue,             java_lang_Boolean,      booleanValue_name, void_boolean_signature, F_R)       \\\n-   do_name(     booleanValue_name,       \"booleanValue\")                                                                \\\n-  do_intrinsic(_byteValue,                java_lang_Byte,         byteValue_name, void_byte_signature, F_R)             \\\n-   do_name(     byteValue_name,          \"byteValue\")                                                                   \\\n-  do_intrinsic(_charValue,                java_lang_Character,    charValue_name, void_char_signature, F_R)             \\\n-   do_name(     charValue_name,          \"charValue\")                                                                   \\\n-  do_intrinsic(_shortValue,               java_lang_Short,        shortValue_name, void_short_signature, F_R)           \\\n-   do_name(     shortValue_name,         \"shortValue\")                                                                  \\\n-  do_intrinsic(_intValue,                 java_lang_Integer,      intValue_name, void_int_signature, F_R)               \\\n-   do_name(     intValue_name,           \"intValue\")                                                                    \\\n-  do_intrinsic(_longValue,                java_lang_Long,         longValue_name, void_long_signature, F_R)             \\\n-   do_name(     longValue_name,          \"longValue\")                                                                   \\\n-  do_intrinsic(_floatValue,               java_lang_Float,        floatValue_name, void_float_signature, F_R)           \\\n-   do_name(     floatValue_name,         \"floatValue\")                                                                  \\\n-  do_intrinsic(_doubleValue,              java_lang_Double,       doubleValue_name, void_double_signature, F_R)         \\\n-   do_name(     doubleValue_name,        \"doubleValue\")                                                                 \\\n-                                                                                                                        \\\n-  \/* boxing methods: *\/                                                                                                 \\\n-   do_name(    valueOf_name,              \"valueOf\")                                                                    \\\n-  do_intrinsic(_Boolean_valueOf,          java_lang_Boolean,      valueOf_name, Boolean_valueOf_signature, F_S)         \\\n-   do_name(     Boolean_valueOf_signature,                       \"(Z)Ljava\/lang\/Boolean;\")                              \\\n-  do_intrinsic(_Byte_valueOf,             java_lang_Byte,         valueOf_name, Byte_valueOf_signature, F_S)            \\\n-   do_name(     Byte_valueOf_signature,                          \"(B)Ljava\/lang\/Byte;\")                                 \\\n-  do_intrinsic(_Character_valueOf,        java_lang_Character,    valueOf_name, Character_valueOf_signature, F_S)       \\\n-   do_name(     Character_valueOf_signature,                     \"(C)Ljava\/lang\/Character;\")                            \\\n-  do_intrinsic(_Short_valueOf,            java_lang_Short,        valueOf_name, Short_valueOf_signature, F_S)           \\\n-   do_name(     Short_valueOf_signature,                         \"(S)Ljava\/lang\/Short;\")                                \\\n-  do_intrinsic(_Integer_valueOf,          java_lang_Integer,      valueOf_name, Integer_valueOf_signature, F_S)         \\\n-   do_name(     Integer_valueOf_signature,                       \"(I)Ljava\/lang\/Integer;\")                              \\\n-  do_intrinsic(_Long_valueOf,             java_lang_Long,         valueOf_name, Long_valueOf_signature, F_S)            \\\n-   do_name(     Long_valueOf_signature,                          \"(J)Ljava\/lang\/Long;\")                                 \\\n-  do_intrinsic(_Float_valueOf,            java_lang_Float,        valueOf_name, Float_valueOf_signature, F_S)           \\\n-   do_name(     Float_valueOf_signature,                         \"(F)Ljava\/lang\/Float;\")                                \\\n-  do_intrinsic(_Double_valueOf,           java_lang_Double,       valueOf_name, Double_valueOf_signature, F_S)          \\\n-   do_name(     Double_valueOf_signature,                        \"(D)Ljava\/lang\/Double;\")                               \\\n-                                                                                                                        \\\n-  \/* forEachRemaining *\/                                                                             \\\n-  do_intrinsic(_forEachRemaining, java_util_stream_StreamsRangeIntSpliterator, forEachRemaining_name, forEachRemaining_signature, F_R) \\\n-   do_name(     forEachRemaining_name,    \"forEachRemaining\")                                                           \\\n-   do_name(     forEachRemaining_signature,                      \"(Ljava\/util\/function\/IntConsumer;)V\")                 \\\n-\n-    \/*end*\/\n-\n-\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":4,"deletions":962,"binary":false,"changes":966,"status":"modified"},{"patch":"@@ -38,12 +38,9 @@\n-#define C2_FLAGS(develop, \\\n-                 develop_pd, \\\n-                 product, \\\n-                 product_pd, \\\n-                 diagnostic, \\\n-                 diagnostic_pd, \\\n-                 experimental, \\\n-                 notproduct, \\\n-                 range, \\\n-                 constraint) \\\n-                                                                            \\\n-  diagnostic(bool, StressLCM, false,                                        \\\n+#define C2_FLAGS(develop,                                                   \\\n+                 develop_pd,                                                \\\n+                 product,                                                   \\\n+                 product_pd,                                                \\\n+                 notproduct,                                                \\\n+                 range,                                                     \\\n+                 constraint)                                                \\\n+                                                                            \\\n+  product(bool, StressLCM, false, DIAGNOSTIC,                               \\\n@@ -52,1 +49,1 @@\n-  diagnostic(bool, StressGCM, false,                                        \\\n+  product(bool, StressGCM, false, DIAGNOSTIC,                               \\\n@@ -119,1 +116,1 @@\n-  diagnostic_pd(bool, IdealizeClearArrayNode,                               \\\n+  product_pd(bool, IdealizeClearArrayNode, DIAGNOSTIC,                      \\\n@@ -140,1 +137,1 @@\n-  diagnostic(bool, PrintOptoAssembly, false,                                \\\n+  product(bool, PrintOptoAssembly, false, DIAGNOSTIC,                       \\\n@@ -180,1 +177,1 @@\n-  experimental(bool, PostLoopMultiversioning, false,                        \\\n+  product(bool, PostLoopMultiversioning, false, EXPERIMENTAL,               \\\n@@ -186,1 +183,1 @@\n-  diagnostic(bool, UseVectorMacroLogic, true,                               \\\n+  product(bool, UseVectorMacroLogic, true, DIAGNOSTIC,                      \\\n@@ -387,3 +384,0 @@\n-  product(bool, InsertMemBarAfterArraycopy, true,                           \\\n-          \"Insert memory barrier after arraycopy call\")                     \\\n-                                                                            \\\n@@ -488,1 +482,1 @@\n-  diagnostic(bool, PrintPreciseBiasedLockingStatistics, false,              \\\n+  product(bool, PrintPreciseBiasedLockingStatistics, false, DIAGNOSTIC,     \\\n@@ -492,1 +486,1 @@\n-  diagnostic(bool, PrintPreciseRTMLockingStatistics, false,                 \\\n+  product(bool, PrintPreciseRTMLockingStatistics, false, DIAGNOSTIC,        \\\n@@ -505,1 +499,1 @@\n-  diagnostic(bool, AggressiveUnboxing, true,                                \\\n+  product(bool, AggressiveUnboxing, true, DIAGNOSTIC,                       \\\n@@ -560,1 +554,1 @@\n-  diagnostic(intx, DominatorSearchLimit, 1000,                              \\\n+  product(intx, DominatorSearchLimit, 1000, DIAGNOSTIC,                     \\\n@@ -575,1 +569,1 @@\n-  diagnostic(bool, InlineReflectionGetCallerClass, true,                    \\\n+  product(bool, InlineReflectionGetCallerClass, true, DIAGNOSTIC,           \\\n@@ -579,1 +573,1 @@\n-  diagnostic(bool, InlineObjectCopy, true,                                  \\\n+  product(bool, InlineObjectCopy, true, DIAGNOSTIC,                         \\\n@@ -582,1 +576,1 @@\n-  diagnostic(bool, SpecialStringCompareTo, true,                            \\\n+  product(bool, SpecialStringCompareTo, true, DIAGNOSTIC,                   \\\n@@ -585,1 +579,1 @@\n-  diagnostic(bool, SpecialStringIndexOf, true,                              \\\n+  product(bool, SpecialStringIndexOf, true, DIAGNOSTIC,                     \\\n@@ -588,1 +582,1 @@\n-  diagnostic(bool, SpecialStringEquals, true,                               \\\n+  product(bool, SpecialStringEquals, true, DIAGNOSTIC,                      \\\n@@ -591,1 +585,1 @@\n-  diagnostic(bool, SpecialArraysEquals, true,                               \\\n+  product(bool, SpecialArraysEquals, true, DIAGNOSTIC,                      \\\n@@ -594,1 +588,1 @@\n-  diagnostic(bool, SpecialEncodeISOArray, true,                             \\\n+  product(bool, SpecialEncodeISOArray, true, DIAGNOSTIC,                    \\\n@@ -616,1 +610,1 @@\n-  diagnostic(bool, TraceSpilling, false,                                    \\\n+  product(bool, TraceSpilling, false, DIAGNOSTIC,                           \\\n@@ -619,1 +613,1 @@\n-  diagnostic(bool, TraceTypeProfile, false,                                 \\\n+  product(bool, TraceTypeProfile, false, DIAGNOSTIC,                        \\\n@@ -635,1 +629,1 @@\n-  diagnostic(bool, PrintIntrinsics, false,                                  \\\n+  product(bool, PrintIntrinsics, false, DIAGNOSTIC,                         \\\n@@ -641,1 +635,1 @@\n-  diagnostic(bool, DebugInlinedCalls, true,                                 \\\n+  product(bool, DebugInlinedCalls, true, DIAGNOSTIC,                        \\\n@@ -647,1 +641,1 @@\n-  diagnostic(bool, ProfileDynamicTypes, true,                               \\\n+  product(bool, ProfileDynamicTypes, true, DIAGNOSTIC,                      \\\n@@ -716,1 +710,1 @@\n-  diagnostic(bool, OptimizeExpensiveOps, true,                              \\\n+  product(bool, OptimizeExpensiveOps, true, DIAGNOSTIC,                     \\\n@@ -719,1 +713,1 @@\n-  diagnostic(bool, UseMathExactIntrinsics, true,                            \\\n+  product(bool, UseMathExactIntrinsics, true, DIAGNOSTIC,                   \\\n@@ -722,1 +716,1 @@\n-  diagnostic(bool, UseCharacterCompareIntrinsics, false,                    \\\n+  product(bool, UseCharacterCompareIntrinsics, false, DIAGNOSTIC,           \\\n@@ -725,1 +719,1 @@\n-  diagnostic(bool, UseMultiplyToLenIntrinsic, false,                        \\\n+  product(bool, UseMultiplyToLenIntrinsic, false, DIAGNOSTIC,               \\\n@@ -728,1 +722,1 @@\n-  diagnostic(bool, UseSquareToLenIntrinsic, false,                          \\\n+  product(bool, UseSquareToLenIntrinsic, false, DIAGNOSTIC,                 \\\n@@ -731,1 +725,1 @@\n-  diagnostic(bool, UseMulAddIntrinsic, false,                               \\\n+  product(bool, UseMulAddIntrinsic, false, DIAGNOSTIC,                      \\\n@@ -734,1 +728,1 @@\n-  diagnostic(bool, UseMontgomeryMultiplyIntrinsic, false,                   \\\n+  product(bool, UseMontgomeryMultiplyIntrinsic, false, DIAGNOSTIC,          \\\n@@ -737,1 +731,1 @@\n-  diagnostic(bool, UseMontgomerySquareIntrinsic, false,                     \\\n+  product(bool, UseMontgomerySquareIntrinsic, false, DIAGNOSTIC,            \\\n@@ -740,1 +734,1 @@\n-  experimental(bool, EnableVectorSupport, false,                            \\\n+  product(bool, EnableVectorSupport, false, EXPERIMENTAL,                   \\\n@@ -743,1 +737,1 @@\n-  experimental(bool, EnableVectorReboxing, false,                           \\\n+  product(bool, EnableVectorReboxing, false, EXPERIMENTAL,                  \\\n@@ -746,1 +740,1 @@\n-  experimental(bool, EnableVectorAggressiveReboxing, false,                 \\\n+  product(bool, EnableVectorAggressiveReboxing, false, EXPERIMENTAL,        \\\n@@ -752,1 +746,1 @@\n-  diagnostic(bool, UseInlineDepthForSpeculativeTypes, true,                 \\\n+  product(bool, UseInlineDepthForSpeculativeTypes, true, DIAGNOSTIC,        \\\n@@ -783,2 +777,4 @@\n-  diagnostic(bool, ExpandSubTypeCheckAtParseTime, false,                    \\\n-          \"Do not use subtype check macro node\")                            \\\n+  product(bool, ExpandSubTypeCheckAtParseTime, false, DIAGNOSTIC,           \\\n+          \"Do not use subtype check macro node\")\n+\n+\/\/ end of C2_FLAGS\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":46,"deletions":50,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -1364,4 +1364,0 @@\n-\n-    \/\/ Compute number of stack slots needed to restore stack in case of\n-    \/\/ Pascal-style argument popping.\n-    mcall->_argsize = out_arg_limit_per_call - begin_out_arg_area;\n@@ -1405,3 +1401,0 @@\n-  \/\/ Move the OopMap\n-  msfpt->_oop_map = sfpt->_oop_map;\n-\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -364,3 +364,0 @@\n-  \/\/ TRUE - grows up, FALSE - grows down (Intel)\n-  virtual bool stack_direction() const;\n-\n@@ -424,2 +421,2 @@\n-  static OptoReg::Name  interpreter_method_oop_reg();\n-  static int            interpreter_method_oop_reg_encode();\n+  static OptoReg::Name  interpreter_method_reg();\n+  static int            interpreter_method_reg_encode();\n@@ -427,3 +424,3 @@\n-  static OptoReg::Name  compiler_method_oop_reg();\n-  static const RegMask &compiler_method_oop_reg_mask();\n-  static int            compiler_method_oop_reg_encode();\n+  static OptoReg::Name  compiler_method_reg();\n+  static const RegMask &compiler_method_reg_mask();\n+  static int            compiler_method_reg_encode();\n@@ -446,3 +443,0 @@\n-  \/\/ !!!!! Special stuff for building ScopeDescs\n-  virtual int      regnum_to_fpu_offset(int regnum);\n-\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+  { Bad,             T_ILLEGAL,    \"vectora:\",      false, Op_VecA,              relocInfo::none          },  \/\/ VectorA.\n@@ -71,0 +72,1 @@\n+  { Bad,             T_ILLEGAL,    \"vectora:\",      false, Op_VecA,              relocInfo::none          },  \/\/ VectorA.\n@@ -251,1 +253,1 @@\n-            con_type = con_type->is_aryptr()->cast_to_autobox_cache(true);\n+            con_type = con_type->is_aryptr()->cast_to_autobox_cache();\n@@ -4220,2 +4222,2 @@\n-const TypeAryPtr* TypeAryPtr::cast_to_autobox_cache(bool cache) const {\n-  if (is_autobox_cache() == cache)  return this;\n+const TypeAryPtr* TypeAryPtr::cast_to_autobox_cache() const {\n+  if (is_autobox_cache())  return this;\n@@ -4225,1 +4227,0 @@\n-  TypePtr::PTR ptr_type = cache ? TypePtr::NotNull : TypePtr::AnyNull;\n@@ -4228,1 +4229,1 @@\n-  return make(ptr(), const_oop(), new_ary, klass(), klass_is_exact(), _offset, _instance_id, _speculative, _inline_depth, cache);\n+  return make(ptr(), const_oop(), new_ary, klass(), klass_is_exact(), _offset, _instance_id, _speculative, _inline_depth, \/*is_autobox_cache=*\/true);\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1237,1 +1237,1 @@\n-  const TypeAryPtr* cast_to_autobox_cache(bool cache) const;\n+  const TypeAryPtr* cast_to_autobox_cache() const;\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -556,0 +556,1 @@\n+  { \"InsertMemBarAfterArraycopy\",    JDK_Version::undefined(), JDK_Version::jdk(16), JDK_Version::jdk(17) },\n@@ -1461,1 +1462,8 @@\n-    log_info(cds)(\"Using optimized module handling disabled due to incompatible property: %s=%s\", key, value);\n+    log_info(cds)(\"optimized module handling: disabled due to incompatible property: %s=%s\", key, value);\n+  }\n+  if (strcmp(key, \"jdk.module.showModuleResolution\") == 0 ||\n+      strcmp(key, \"jdk.module.illegalAccess\") == 0 ||\n+      strcmp(key, \"jdk.module.validation\") == 0 ||\n+      strcmp(key, \"java.system.class.loader\") == 0) {\n+    MetaspaceShared::disable_full_module_graph();\n+    log_info(cds)(\"full module graph: disabled due to incompatible property: %s=%s\", key, value);\n@@ -2510,1 +2518,1 @@\n-      log_info(cds)(\"Using optimized module handling disabled due to bootclasspath was appended\");\n+      log_info(cds)(\"optimized module handling: disabled because bootclasspath was appended\");\n@@ -3900,4 +3908,1 @@\n-\n-  \/\/ Initialize ranges and constraints\n-  JVMFlagRangeList::init();\n-  JVMFlagConstraintList::init();\n+  JVMFlag::check_all_flag_declarations();\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -814,1 +814,1 @@\n-    JavaThread* jt = (JavaThread*)thread;\n+    JavaThread* jt = thread->as_Java_thread();\n@@ -1714,2 +1714,1 @@\n-    assert(THREAD->is_Java_thread(), \"only a java thread can be here\");\n-    JavaThread* thread = (JavaThread*)THREAD;\n+    JavaThread* thread = THREAD->as_Java_thread();\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -341,3 +341,3 @@\n-  \/********************************\/                                                                                                 \\\n-  \/* MethodOop-related structures *\/                                                                                                 \\\n-  \/********************************\/                                                                                                 \\\n+  \/*****************************\/                                                                                                    \\\n+  \/* Method related structures *\/                                                                                                    \\\n+  \/*****************************\/                                                                                                    \\\n@@ -1287,3 +1287,3 @@\n-  \/*************************************\/                                 \\\n-  \/* MethodOop-related data structures *\/                                 \\\n-  \/*************************************\/                                 \\\n+  \/**********************************\/                                    \\\n+  \/* Method related data structures *\/                                    \\\n+  \/**********************************\/                                    \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -998,6 +998,6 @@\n-template<class T> inline T MAX2(T a, T b)           { return (a > b) ? a : b; }\n-template<class T> inline T MIN2(T a, T b)           { return (a < b) ? a : b; }\n-template<class T> inline T MAX3(T a, T b, T c)      { return MAX2(MAX2(a, b), c); }\n-template<class T> inline T MIN3(T a, T b, T c)      { return MIN2(MIN2(a, b), c); }\n-template<class T> inline T MAX4(T a, T b, T c, T d) { return MAX2(MAX3(a, b, c), d); }\n-template<class T> inline T MIN4(T a, T b, T c, T d) { return MIN2(MIN3(a, b, c), d); }\n+template<class T> constexpr T MAX2(T a, T b)           { return (a > b) ? a : b; }\n+template<class T> constexpr T MIN2(T a, T b)           { return (a < b) ? a : b; }\n+template<class T> constexpr T MAX3(T a, T b, T c)      { return MAX2(MAX2(a, b), c); }\n+template<class T> constexpr T MIN3(T a, T b, T c)      { return MIN2(MIN2(a, b), c); }\n+template<class T> constexpr T MAX4(T a, T b, T c, T d) { return MAX2(MAX3(a, b, c), d); }\n+template<class T> constexpr T MIN4(T a, T b, T c, T d) { return MIN2(MIN3(a, b, c), d); }\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}