{"files":[{"patch":"@@ -0,0 +1,8 @@\n+Benchmarks generated to test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\n+\n+Run benchmarks from top dir level using:\n+\n+make test TEST=\"micro:<benchmark-name>\" MICRO=\"FORK=2;WARMUP_ITER=5;\" CONF=linux-x86_64-server-release\n+\n+example:\n+make test TEST=\"micro:Int64Vector\" MICRO=\"FORK=2;WARMUP_ITER=5;\" CONF=linux-x86_64-server-release\n\\ No newline at end of file\n","filename":"test\/jdk\/jdk\/incubator\/vector\/BENCHMARKS.md","additions":8,"deletions":0,"binary":false,"changes":8,"status":"added"},{"patch":"@@ -1,15 +0,0 @@\n-Vector API Benchmarks\n-\n-This suite contains a set of microbenchmarks automatically derived from unit tests.\n-\n-1. (Re-)Generate benchmarks\n-  $ cd ..; bash gen-tests.sh\n-\n-2. Build\n-  $ mvn install\n-\n-3. Run benchmarks\n-  $ java -jar target\/vector-benchmarks.jar '.*'\n-\n-Parameters:\n-    -p size=1024  # data set size (in # of elements)\n","filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/README","additions":0,"deletions":15,"binary":false,"changes":15,"status":"deleted"},{"patch":"@@ -1,174 +0,0 @@\n-<!--\n-~ Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n-~ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-~\n-~ This code is free software; you can redistribute it and\/or modify it\n-~ under the terms of the GNU General Public License version 2 only, as\n-~ published by the Free Software Foundation.  Oracle designates this\n-~ particular file as subject to the \"Classpath\" exception as provided\n-~ by Oracle in the LICENSE file that accompanied this code.\n-~\n-~ This code is distributed in the hope that it will be useful, but WITHOUT\n-~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-~ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-~ version 2 for more details (a copy is included in the LICENSE file that\n-~ accompanied this code).\n-~\n-~ You should have received a copy of the GNU General Public License version\n-~ 2 along with this work; if not, write to the Free Software Foundation,\n-~ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-~\n-~ Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-~ or visit www.oracle.com if you need additional information or have any\n-~ questions.\n--->\n-\n-<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0<\/modelVersion>\n-\n-    <groupId>jdk.incubator.vector<\/groupId>\n-    <artifactId>benchmark<\/artifactId>\n-    <version>1.0<\/version>\n-    <packaging>jar<\/packaging>\n-\n-    <name>JMH benchmark sample: Java<\/name>\n-\n-    <!--\n-       This is the demo\/sample template build script for building Java benchmarks with JMH.\n-       Edit as needed.\n-    -->\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jmh<\/groupId>\n-            <artifactId>jmh-core<\/artifactId>\n-            <version>${jmh.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jmh<\/groupId>\n-            <artifactId>jmh-generator-annprocess<\/artifactId>\n-            <version>${jmh.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.junit.jupiter<\/groupId>\n-            <artifactId>junit-jupiter-api<\/artifactId>\n-            <version>5.3.2<\/version>\n-        <\/dependency>\n-    <\/dependencies>\n-\n-    <properties>\n-        <project.build.sourceEncoding>UTF-8<\/project.build.sourceEncoding>\n-\n-        <!--\n-            JMH version to use with this project.\n-          -->\n-        <jmh.version>1.25.1<\/jmh.version>\n-\n-        <!--\n-            Java source\/target to use for compilation.\n-          -->\n-        <javac.target>12<\/javac.target>\n-\n-        <!--\n-            Name of the benchmark Uber-JAR to generate.\n-          -->\n-        <uberjar.name>vector-benchmarks<\/uberjar.name>\n-    <\/properties>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins<\/groupId>\n-                <artifactId>maven-compiler-plugin<\/artifactId>\n-                <version>3.1<\/version>\n-                <configuration>\n-                    <compilerVersion>${javac.target}<\/compilerVersion>\n-                    <source>${javac.target}<\/source>\n-                    <target>${javac.target}<\/target>\n-                    <compilerArgs>\n-                        <arg>-Xlint:unchecked<\/arg>\n-                        <arg>--add-modules<\/arg><arg>jdk.incubator.vector<\/arg>\n-                    <\/compilerArgs>\n-                <\/configuration>\n-            <\/plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins<\/groupId>\n-                <artifactId>maven-shade-plugin<\/artifactId>\n-                <version>2.2<\/version>\n-                <executions>\n-                    <execution>\n-                        <phase>package<\/phase>\n-                        <goals>\n-                            <goal>shade<\/goal>\n-                        <\/goals>\n-                        <configuration>\n-                            <finalName>${uberjar.name}<\/finalName>\n-                            <transformers>\n-                                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n-                                    <mainClass>org.openjdk.jmh.Main<\/mainClass>\n-                                <\/transformer>\n-                            <\/transformers>\n-                            <filters>\n-                                <filter>\n-                                    <!--\n-                                        Shading signed JARs will fail without this.\n-                                        http:\/\/stackoverflow.com\/questions\/999489\/invalid-signature-file-when-attempting-to-run-a-jar\n-                                    -->\n-                                    <artifact>*:*<\/artifact>\n-                                    <excludes>\n-                                        <exclude>META-INF\/*.SF<\/exclude>\n-                                        <exclude>META-INF\/*.DSA<\/exclude>\n-                                        <exclude>META-INF\/*.RSA<\/exclude>\n-                                    <\/excludes>\n-                                <\/filter>\n-                            <\/filters>\n-                        <\/configuration>\n-                    <\/execution>\n-                <\/executions>\n-            <\/plugin>\n-        <\/plugins>\n-        <pluginManagement>\n-            <plugins>\n-                <plugin>\n-                    <artifactId>maven-clean-plugin<\/artifactId>\n-                    <version>2.5<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-deploy-plugin<\/artifactId>\n-                    <version>2.8.1<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-install-plugin<\/artifactId>\n-                    <version>2.5.1<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-jar-plugin<\/artifactId>\n-                    <version>2.4<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-javadoc-plugin<\/artifactId>\n-                    <version>2.9.1<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-resources-plugin<\/artifactId>\n-                    <version>2.6<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-site-plugin<\/artifactId>\n-                    <version>3.3<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-source-plugin<\/artifactId>\n-                    <version>2.2.1<\/version>\n-                <\/plugin>\n-                <plugin>\n-                    <artifactId>maven-surefire-plugin<\/artifactId>\n-                    <version>2.17<\/version>\n-                <\/plugin>\n-            <\/plugins>\n-        <\/pluginManagement>\n-    <\/build>\n-\n-<\/project>\n","filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/pom.xml","additions":0,"deletions":174,"binary":false,"changes":174,"status":"deleted"},{"patch":"@@ -27,2 +27,2 @@\n-VECTORTESTS_HOME=\"$(pwd)\"\n-JDK_SRC_HOME=\".\/..\/..\/..\/..\/..\/\"\n+JDK_SRC_HOME=\"$(git rev-parse --show-toplevel)\"\n+VECTORTESTS_HOME=\"$JDK_SRC_HOME\/test\/jdk\/jdk\/incubator\/vector\/\"\n@@ -41,1 +41,0 @@\n-TEST_ITER_COUNT=100\n@@ -45,1 +44,2 @@\n-PERF_DEST=\"benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/\"\n+PERF_DEST=\"$JDK_SRC_HOME\/test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\"\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/config.sh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -264,1 +264,0 @@\n-\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-tests.sh","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Perf-Scalar-header.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Perf-header.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-package benchmark.bigdata;\n+package org.openjdk.bench.jdk.incubator.vector.bigdata;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/bigdata\/BooleanArrayCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/BooleanArrayCheck.java","status":"renamed"},{"patch":"@@ -24,1 +24,1 @@\n-package benchmark.bigdata;\n+package org.openjdk.bench.jdk.incubator.vector.bigdata;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/bigdata\/ValueRangeCheckAndCastL2I.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/ValueRangeCheckAndCastL2I.java","status":"renamed"},{"patch":"@@ -24,1 +24,1 @@\n-package benchmark.bigdata;\n+package org.openjdk.bench.jdk.incubator.vector.bigdata;\n@@ -31,2 +31,0 @@\n-import static org.junit.jupiter.api.Assertions.*;\n-\n@@ -85,1 +83,1 @@\n-    public static void init() {\n+    public void init() {\n@@ -103,1 +101,1 @@\n-    public static float cosinesimilOptimizedScalarFloat() {\n+    public float cosinesimilOptimizedScalarFloat() {\n@@ -118,1 +116,1 @@\n-    public static float cosinesimilOptimizedVectorFloat128() {\n+    public float cosinesimilOptimizedVectorFloat128() {\n@@ -141,1 +139,1 @@\n-    public static float cosinesimilOptimizedVectorFloat256() {\n+    public float cosinesimilOptimizedVectorFloat256() {\n@@ -164,1 +162,1 @@\n-    public static float cosinesimilOptimizedVectorFloatMax() {\n+    public float cosinesimilOptimizedVectorFloatMax() {\n@@ -187,1 +185,1 @@\n-    public static float cosinesimilScalarFloat() {\n+    public float cosinesimilScalarFloat() {\n@@ -282,1 +280,1 @@\n-    public static double cosinesimilOptimizedScalarDouble() {\n+    public double cosinesimilOptimizedScalarDouble() {\n@@ -294,1 +292,1 @@\n-    public static double cosinesimilOptimizedVectorDouble128() {\n+    public double cosinesimilOptimizedVectorDouble128() {\n@@ -317,1 +315,1 @@\n-    public static double cosinesimilOptimizedVectorDouble256() {\n+    public double cosinesimilOptimizedVectorDouble256() {\n@@ -340,1 +338,1 @@\n-    public static double cosinesimilOptimizedVectorDoubleMax() {\n+    public double cosinesimilOptimizedVectorDoubleMax() {\n@@ -363,1 +361,1 @@\n-    public static double cosinesimilScalarDouble() {\n+    public double cosinesimilScalarDouble() {\n@@ -576,1 +574,1 @@\n-    public static float l2SquaredScalar() {\n+    public float l2SquaredScalar() {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/bigdata\/VectorDistance.java","additions":13,"deletions":15,"binary":false,"changes":28,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/VectorDistance.java","status":"renamed"},{"patch":"@@ -24,1 +24,1 @@\n-package benchmark.crypto;\n+package org.openjdk.bench.jdk.incubator.vector.crypto;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/crypto\/ChaChaBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/crypto\/ChaChaBench.java","status":"renamed"},{"patch":"@@ -24,1 +24,1 @@\n-package benchmark.crypto;\n+package org.openjdk.bench.jdk.incubator.vector.crypto;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/crypto\/Poly1305Bench.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/crypto\/Poly1305Bench.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/AbstractVectorBenchmark.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/AbstractVectorBenchmark.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte128Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Byte128Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte256Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Byte256Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte512Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Byte512Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Byte64Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Byte64Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteMaxVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/ByteMaxVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteScalar.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/ByteScalar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double128Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Double128Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double256Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Double256Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double512Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Double512Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Double64Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Double64Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/DoubleMaxVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/DoubleMaxVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/DoubleScalar.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/DoubleScalar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float128Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Float128Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float256Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Float256Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float512Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Float512Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Float64Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Float64Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/FloatMaxVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/FloatMaxVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/FloatScalar.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/FloatScalar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int128Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Int128Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int256Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Int256Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int512Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Int512Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Int64Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Int64Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntMaxVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/IntMaxVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/IntScalar.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/IntScalar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long128Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Long128Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long256Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Long256Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long512Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Long512Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Long64Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Long64Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongMaxVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/LongMaxVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/LongScalar.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/LongScalar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n@@ -31,0 +31,1 @@\n+import java.util.Arrays;\n@@ -33,2 +34,0 @@\n-import static org.junit.jupiter.api.Assertions.*;\n-\n@@ -116,1 +115,1 @@\n-        assertArrayEquals(in, out);\n+        assert Arrays.deepEquals(new Object[] {in}, new Object[] {out});\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Merge.java","additions":4,"deletions":5,"binary":false,"changes":9,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Merge.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n@@ -33,2 +33,0 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-\n@@ -66,8 +64,8 @@\n-        assertEquals(popCount, treeOfAdders());\n-        assertEquals(popCount, WilkesWheelerGill());\n-        assertEquals(popCount, Wegner());\n-        assertEquals(popCount, Lauradoux());\n-        assertEquals(popCount, HarleySeal());\n-        assertEquals(popCount, Mula128());\n-        assertEquals(popCount, Mula256());\n-        assertEquals(popCount, HarleySeal256());\n+        assert popCount == treeOfAdders();\n+        assert popCount == WilkesWheelerGill();\n+        assert popCount == Wegner();\n+        assert popCount == Lauradoux();\n+        assert popCount == HarleySeal();\n+        assert popCount == Mula128();\n+        assert popCount == Mula256();\n+        assert popCount == HarleySeal256();\n@@ -337,1 +335,1 @@\n-    \/\/ FIGURE 9. A C function using SSE intrinsics implementing Mula’s algorithm to compute sixteen population counts,\n+    \/\/ FIGURE 9. A C function using SSE intrinsics implementing Mula's algorithm to compute sixteen population counts,\n@@ -383,1 +381,1 @@\n-    \/\/ FIGURE 10. A C function using AVX2 intrinsics implementing Mula’s algorithm to compute the four population counts\n+    \/\/ FIGURE 10. A C function using AVX2 intrinsics implementing Mula's algorithm to compute the four population counts\n@@ -508,1 +506,1 @@\n-    \/\/ FIGURE 12. A C function using AVX2 intrinsics implementing Harley-Seal’s algorithm. It assumes, for\n+    \/\/ FIGURE 12. A C function using AVX2 intrinsics implementing Harley-Seal's algorithm. It assumes, for\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/PopulationCount.java","additions":13,"deletions":15,"binary":false,"changes":28,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/PopulationCount.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short128Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Short128Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short256Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Short256Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short512Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Short512Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/Short64Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Short64Vector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ShortMaxVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/ShortMaxVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ShortScalar.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/ShortScalar.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/SortVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/SortVector.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-package benchmark.jdk.incubator.vector;\n+package org.openjdk.bench.jdk.incubator.vector.operation;\n@@ -33,1 +33,0 @@\n-import static org.junit.jupiter.api.Assertions.*;\n@@ -59,4 +58,4 @@\n-        assertEquals(vectorInt(),   sum);\n-        assertEquals(vectorShort(), sum);\n-        \/\/assertEquals(vectorByte(),  sum);\n-        \/\/assertEquals(vectorSAD(),   sum);\n+        assert vectorInt() == sum;\n+        assert vectorShort() == sum;\n+        \/\/assert vectorByte() == sum;\n+        \/\/assert vectorSAD() == sum;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/SumOfUnsignedBytes.java","additions":6,"deletions":7,"binary":false,"changes":13,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/SumOfUnsignedBytes.java","status":"renamed"},{"patch":"@@ -24,1 +24,1 @@\n-package benchmark.utf8;\n+package org.openjdk.bench.jdk.incubator.vector.utf8;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/utf8\/DecodeBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/utf8\/DecodeBench.java","status":"renamed"}]}