{"files":[{"patch":"@@ -54,1 +54,1 @@\n-    if (mark.is_neutral()) {\n+    if (mark.is_neutral() || mark.is_fast_locked()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahObjectUtils.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-  assert(header.is_neutral(), \"expect neutral header here\");\n+  assert(header.is_neutral() || header.is_fast_locked(), \"expect neutral or fast-locked header here\");\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3107,0 +3107,3 @@\n+  \/\/ Lilliput requires fast-locking.\n+  FLAG_SET_DEFAULT(UseFastLocking, true);\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -920,1 +920,1 @@\n-    assert(mark.is_neutral() || mark.is_marked(), \"invariant: header=\" INTPTR_FORMAT, mark.value());\n+    assert(mark.is_neutral() || mark.is_marked() || mark.is_fast_locked(), \"invariant: header=\" INTPTR_FORMAT, mark.value());\n@@ -1416,1 +1416,1 @@\n-          lsh.print_cr(\"inflate(locked): object=\" INTPTR_FORMAT \", mark=\"\n+          lsh.print_cr(\"inflate(has_locker): object=\" INTPTR_FORMAT \", mark=\"\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}