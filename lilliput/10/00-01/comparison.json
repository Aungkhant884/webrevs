{"files":[{"patch":"@@ -135,1 +135,0 @@\n-  static const uintptr_t self_forwarded_value     = 1 << self_forwarded_shift;\n@@ -277,3 +276,1 @@\n-    intptr_t bits = (intptr_t)value();\n-    set_bits(bits, self_forwarded_value | marked_value);\n-    return markWord((uintptr_t)bits);\n+    return markWord(value() | self_forwarded_mask_in_place | marked_value);\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -305,11 +305,8 @@\n-  while (true) {\n-    markWord m = compare.set_self_forwarded();\n-    assert(forwardee(m) == cast_to_oop(this), \"encoding must be reversable\");\n-    markWord old_mark = cas_set_mark(m, compare, order);\n-    if (old_mark == compare) {\n-      return NULL;\n-    } else if (old_mark.is_marked()) {\n-      return forwardee(old_mark);\n-    } else {\n-      compare = old_mark;\n-    }\n+  markWord m = compare.set_self_forwarded();\n+  assert(forwardee(m) == cast_to_oop(this), \"encoding must be reversable\");\n+  markWord old_mark = cas_set_mark(m, compare, order);\n+  if (old_mark == compare) {\n+    return NULL;\n+  } else {\n+    assert(old_mark.is_marked(), \"must be marked here\");\n+    return forwardee(old_mark);\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"}]}