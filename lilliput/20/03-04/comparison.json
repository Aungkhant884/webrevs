{"files":[{"patch":"@@ -246,0 +246,3 @@\n+void LoadKlassStub::emit_code(LIR_Assembler* ce) {\n+  \/\/ Currently not needed.\n+}\n","filename":"src\/hotspot\/cpu\/arm\/c1_CodeStubs_arm.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -723,5 +723,1 @@\n-      if (UseCompressedClassPointers && addr->disp() == oopDesc::klass_offset_in_bytes()) {\n-        __ ldr_u32(dest->as_pointer_register(), as_Address(addr));\n-      } else {\n-        __ ldr(dest->as_pointer_register(), as_Address(addr));\n-      }\n+      __ ldr(dest->as_pointer_register(), as_Address(addr));\n@@ -2448,0 +2444,9 @@\n+void LIR_Assembler::emit_load_klass(LIR_OpLoadKlass* op) {\n+  Register obj = op->obj()->as_pointer_register();\n+  Register result = op->result_opr()->as_pointer_register();\n+  if (UseCompressedClassPointers) { \/\/ On 32 bit arm??\n+    __ ldr_u32(result, Address(obj, oopDesc::klass_offset_in_bytes()));\n+  } else {\n+    __ ldr(result, Address(obj, oopDesc::klass_offset_in_bytes()));\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRAssembler_arm.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -322,0 +322,3 @@\n+void LoadKlassStub::emit_code(LIR_Assembler* ce) {\n+  \/\/ Currently not needed.\n+}\n","filename":"src\/hotspot\/cpu\/ppc\/c1_CodeStubs_ppc.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -815,6 +815,1 @@\n-        if (offset == oopDesc::klass_offset_in_bytes() && UseCompressedClassPointers) {\n-          __ lwz(to_reg->as_register(), offset, base);\n-          __ decode_klass_not_null(to_reg->as_register());\n-        } else {\n-          __ ld(to_reg->as_register(), offset, base);\n-        }\n+        __ ld(to_reg->as_register(), offset, base);\n@@ -2735,0 +2730,10 @@\n+void LIR_Assembler::emit_load_klass(LIR_OpLoadKlass* op) {\n+  Register obj = op->obj()->as_pointer_register();\n+  Register result = op->result_opr()->as_pointer_register();\n+  if (UseCompressedClassPointers) {\n+    __ lwz(result, oopDesc::klass_offset_in_bytes(), obj);\n+    __ decode_klass_not_null(result);\n+  } else {\n+    __ ld(result, oopDesc::klass_offset_in_bytes(), obj);\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -273,0 +273,4 @@\n+void LoadKlassStub::emit_code(LIR_Assembler* ce) {\n+  \/\/ Currently not needed.\n+}\n+\n","filename":"src\/hotspot\/cpu\/s390\/c1_CodeStubs_s390.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -953,6 +953,1 @@\n-      if (UseCompressedClassPointers && addr->disp() == oopDesc::klass_offset_in_bytes()) {\n-        __ z_llgf(dest->as_register(), disp_value, disp_reg, src);\n-        __ decode_klass_not_null(dest->as_register());\n-      } else {\n-        __ z_lg(dest->as_register(), disp_value, disp_reg, src);\n-      }\n+      __ z_lg(dest->as_register(), disp_value, disp_reg, src);\n@@ -2757,0 +2752,10 @@\n+void LIR_Assembler::emit_load_klass(LIR_OpLoadKlass* op) {\n+  Register obj = op->obj()->as_pointer_register();\n+  Register result = op->result_opr()->as_pointer_register();\n+  if (UseCompressedClassPointers) {\n+    __ z_llgf(result, Address(obj, oopDesc::klass_offset_in_bytes()));\n+    __ decode_klass_not_null(result);\n+  } else {\n+    __ z_lg(result, Address(obj, oopDesc::klass_offset_in_bytes()));\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -4562,1 +4562,1 @@\n-  jmpb(done);\n+  jmp(done);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}