{"files":[{"patch":"@@ -7603,1 +7603,1 @@\n-instruct loadNKlass(iRegNNoSp dst, memory4 mem)\n+instruct loadNKlass(iRegNNoSp dst, memory4 mem, rFlagsReg cr)\n@@ -7606,0 +7606,1 @@\n+  effect(TEMP_DEF dst, KILL cr);\n@@ -7610,4 +7611,6 @@\n-\n-  ins_encode(aarch64_enc_ldrw(dst, mem));\n-\n-  ins_pipe(iload_reg_mem);\n+  ins_encode %{\n+    assert($mem$$disp == oopDesc::nklass_offset_in_bytes(), \"expect correct offset\");\n+    assert($mem$$index$$Register == noreg, \"expect no index\");\n+    __ load_nklass($dst$$Register, $mem$$base$$Register);\n+  %}\n+  ins_pipe(pipe_slow);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -3716,1 +3716,1 @@\n-  enter();\n+  RegSet saved_regs = RegSet::of(lr);\n@@ -3719,1 +3719,1 @@\n-    push(RegSet::of(r0), sp);\n+    saved_regs += RegSet::of(r0);\n@@ -3721,0 +3721,1 @@\n+  push(saved_regs, sp);\n@@ -3726,1 +3727,0 @@\n-    pop(RegSet::of(r0), sp);\n@@ -3728,2 +3728,1 @@\n-  leave();\n-\n+  pop(saved_regs, sp);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -5292,1 +5292,1 @@\n-instruct loadNKlass(rRegN dst, memory mem)\n+instruct loadNKlass(rRegN dst, indOffset8 mem, rFlagsReg cr)\n@@ -5295,1 +5295,1 @@\n-\n+  effect(TEMP_DEF dst, KILL cr);\n@@ -5299,1 +5299,3 @@\n-    __ movl($dst$$Register, $mem$$Address);\n+    assert($mem$$disp == oopDesc::nklass_offset_in_bytes(), \"expect correct offset 4, but got: %d\", $mem$$disp);\n+    assert($mem$$index == 4, \"expect no index register: %d\", $mem$$index);\n+    __ load_nklass($dst$$Register, $mem$$base$$Register);\n@@ -5301,1 +5303,1 @@\n-  ins_pipe(ialu_reg_mem); \/\/ XXX\n+  ins_pipe(pipe_slow); \/\/ XXX\n@@ -12261,0 +12263,3 @@\n+\/\/ Disabled because the compressed Klass* in header cannot be safely\n+\/\/ accessed. TODO: Re-enable it as soon as synchronization does not\n+\/\/ overload the upper header bits anymore.\n@@ -12263,0 +12268,1 @@\n+  predicate(false);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -310,1 +310,0 @@\n-#ifdef _LP64\n@@ -312,0 +311,1 @@\n+#ifdef _LP64\n@@ -314,1 +314,2 @@\n-  }\n+#else\n+    return klass_offset_in_bytes();\n@@ -316,0 +317,1 @@\n+  }\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1313,1 +1313,1 @@\n-      } else if( offset == oopDesc::klass_offset_in_bytes() ) {\n+      } else if( offset == oopDesc::nklass_offset_in_bytes() ) {\n@@ -1485,1 +1485,1 @@\n-          (offset == oopDesc::klass_offset_in_bytes() && tj->base() == Type::AryPtr) ||\n+          (offset == oopDesc::nklass_offset_in_bytes() && tj->base() == Type::AryPtr) ||\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -918,1 +918,1 @@\n-    Node* p = basic_plus_adr( ex_node, ex_node, oopDesc::klass_offset_in_bytes());\n+    Node* p = basic_plus_adr( ex_node, ex_node, oopDesc::nklass_offset_in_bytes());\n@@ -936,1 +936,1 @@\n-        Node* p = basic_plus_adr(ex_in, ex_in, oopDesc::klass_offset_in_bytes());\n+        Node* p = basic_plus_adr(ex_in, ex_in, oopDesc::nklass_offset_in_bytes());\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2187,1 +2187,1 @@\n-  } else if (offset != oopDesc::klass_offset_in_bytes()) {\n+  } else if (offset != oopDesc::nklass_offset_in_bytes()) {\n@@ -3170,1 +3170,1 @@\n-      _compile->get_alias_index(tinst->add_offset(oopDesc::klass_offset_in_bytes()));\n+      _compile->get_alias_index(tinst->add_offset(oopDesc::nklass_offset_in_bytes()));\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1173,1 +1173,1 @@\n-  Node* k_adr = basic_plus_adr(obj, oopDesc::klass_offset_in_bytes());\n+  Node* k_adr = basic_plus_adr(obj, oopDesc::nklass_offset_in_bytes());\n@@ -3701,1 +3701,1 @@\n-    set_memory(minit_out, C->get_alias_index(oop_type->add_offset(oopDesc::klass_offset_in_bytes())));\n+    set_memory(minit_out, C->get_alias_index(oop_type->add_offset(oopDesc::nklass_offset_in_bytes())));\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1675,1 +1675,1 @@\n-\n+  rawmem = make_store(control, rawmem, object, oopDesc::nklass_offset_in_bytes(), klass_node, T_METADATA);\n@@ -2286,1 +2286,1 @@\n-      Node* k_adr = basic_plus_adr(obj_or_subklass, oopDesc::klass_offset_in_bytes());\n+      Node* k_adr = basic_plus_adr(obj_or_subklass, oopDesc::nklass_offset_in_bytes());\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-          adr_check->offset() == oopDesc::klass_offset_in_bytes() ||\n+          adr_check->offset() == oopDesc::nklass_offset_in_bytes() ||\n@@ -870,1 +870,1 @@\n-           adr_type->offset() == oopDesc::klass_offset_in_bytes()),\n+           adr_type->offset() == oopDesc::nklass_offset_in_bytes()),\n@@ -2323,1 +2323,1 @@\n-    if (offset == oopDesc::klass_offset_in_bytes()) {\n+    if (offset == oopDesc::nklass_offset_in_bytes()) {\n@@ -2349,1 +2349,1 @@\n-        && tary->offset() == oopDesc::klass_offset_in_bytes()) {\n+        && tary->offset() == oopDesc::nklass_offset_in_bytes()) {\n@@ -2437,1 +2437,1 @@\n-  if (offset == oopDesc::klass_offset_in_bytes()) {\n+  if (offset == oopDesc::nklass_offset_in_bytes()) {\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2076,1 +2076,1 @@\n-  Node* klass_addr = basic_plus_adr( receiver, receiver, oopDesc::klass_offset_in_bytes() );\n+  Node* klass_addr = basic_plus_adr( receiver, receiver, oopDesc::nklass_offset_in_bytes() );\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1642,1 +1642,1 @@\n-  if (obj == NULL || off != oopDesc::klass_offset_in_bytes()) \/\/ loading oopDesc::_klass?\n+  if (obj == NULL || off != oopDesc::nklass_offset_in_bytes()) \/\/ loading oopDesc::_klass?\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-  int klass_offset = oopDesc::klass_offset_in_bytes();\n+  int klass_offset = oopDesc::nklass_offset_in_bytes();\n","filename":"src\/hotspot\/share\/opto\/parseHelper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1157,1 +1157,1 @@\n-  if (con2 == oopDesc::klass_offset_in_bytes()) {\n+  if (con2 == oopDesc::nklass_offset_in_bytes()) {\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-    if (con == oopDesc::klass_offset_in_bytes() && obj != NULL) {\n+    if (con == oopDesc::nklass_offset_in_bytes() && obj != NULL) {\n@@ -212,1 +212,1 @@\n-      Node* adr = phase->transform(new AddPNode(obj_or_subklass, obj_or_subklass, phase->MakeConX(oopDesc::klass_offset_in_bytes())));\n+      Node* adr = phase->transform(new AddPNode(obj_or_subklass, obj_or_subklass, phase->MakeConX(oopDesc::nklass_offset_in_bytes())));\n","filename":"src\/hotspot\/share\/opto\/subtypenode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -549,1 +549,1 @@\n-                                           false, 0, oopDesc::klass_offset_in_bytes());\n+                                           false, 0, oopDesc::nklass_offset_in_bytes());\n@@ -3160,1 +3160,1 @@\n-    if (_offset == oopDesc::klass_offset_in_bytes()) {\n+    if (_offset == oopDesc::nklass_offset_in_bytes()) {\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,4 @@\n-    final int hubOffset = getFieldOffset(\"oopDesc::_metadata._klass\", Integer.class, \"Klass*\");\n+    \/\/ TODO: with Lilliput, we cannot safely access the klass* field. The offset is always 4,\n+    \/\/ but it looks like CompilerToVM.getResolvedJavaType0() ignores that offset, and always\n+    \/\/ calls oopDesc::klass(), which is what we want anyway.\n+    final int hubOffset = 4; \/\/getFieldOffset(\"oopDesc::_metadata._klass\", Integer.class, \"Klass*\");\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}