{"files":[{"patch":"@@ -4108,0 +4108,7 @@\n+#ifdef _LP64\n+  if (!FLAG_IS_DEFAULT(UseCompressedClassPointers) && !UseCompressedClassPointers) {\n+    warning(\"Compressed class pointers are required with Lilliput build; ignoring UsCompressedClassPointers flag.\");\n+  }\n+  UseCompressedClassPointers = true;\n+#endif\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xcomp -XX:-UseCompressedClassPointers -XX:CompileOnly=TestArrayCopyToFromObject.test TestArrayCopyToFromObject\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestArrayCopyToFromObject.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,5 +36,0 @@\n- *                                 -XX:+UseCompressedOops -XX:-UseCompressedClassPointers\n- *                                 -XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\n- *                                 compiler.unsafe.OpaqueAccesses\n- * @run main\/bootclasspath\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                                 -XX:-TieredCompilation -Xbatch\n@@ -43,5 +38,0 @@\n- *                                 compiler.unsafe.OpaqueAccesses\n- * @run main\/bootclasspath\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                                 -XX:-TieredCompilation -Xbatch\n- *                                 -XX:-UseCompressedOops -XX:-UseCompressedClassPointers\n- *                                 -XX:CompileCommand=dontinline,compiler.unsafe.OpaqueAccesses::test*\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/OpaqueAccesses.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package gc.arguments;\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Platform;\n-\n-\/*\n- * @test\n- * @bug 8015107\n- * @summary Tests that VM prints a warning when -XX:CompressedClassSpaceSize\n- *          is used together with -XX:-UseCompressedClassPointers\n- * @library \/test\/lib\n- * @library \/\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @run driver gc.arguments.TestCompressedClassFlags\n- *\/\n-public class TestCompressedClassFlags {\n-    public static void main(String[] args) throws Exception {\n-        if (Platform.is64bit()) {\n-            OutputAnalyzer output = runJava(\"-XX:CompressedClassSpaceSize=1g\",\n-                                            \"-XX:-UseCompressedClassPointers\",\n-                                            \"-version\");\n-            output.shouldContain(\"warning\");\n-            output.shouldNotContain(\"error\");\n-            output.shouldHaveExitValue(0);\n-        }\n-    }\n-\n-    private static OutputAnalyzer runJava(String ... args) throws Exception {\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(args);\n-        return new OutputAnalyzer(pb.start());\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestCompressedClassFlags.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -50,2 +50,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UsePerfData -XX:+UseSerialGC gc.metaspace.TestMetaspacePerfCounters\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UsePerfData -XX:+UseSerialGC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:+UsePerfData -XX:+UseSerialGC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UsePerfData -XX:+UseSerialGC gc.metaspace.TestMetaspacePerfCounters\n@@ -64,2 +64,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UsePerfData -XX:+UseParallelGC gc.metaspace.TestMetaspacePerfCounters\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UsePerfData -XX:+UseParallelGC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:+UsePerfData -XX:+UseParallelGC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UsePerfData -XX:+UseParallelGC gc.metaspace.TestMetaspacePerfCounters\n@@ -78,2 +78,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UsePerfData -XX:+UseG1GC gc.metaspace.TestMetaspacePerfCounters\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UsePerfData -XX:+UseG1GC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:+UsePerfData -XX:+UseG1GC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UsePerfData -XX:+UseG1GC gc.metaspace.TestMetaspacePerfCounters\n@@ -92,2 +92,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UsePerfData -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC gc.metaspace.TestMetaspacePerfCounters\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UsePerfData -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:+UsePerfData -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC gc.metaspace.TestMetaspacePerfCounters\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UsePerfData -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC gc.metaspace.TestMetaspacePerfCounters\n@@ -177,1 +177,1 @@\n-        return Platform.is64bit() && InputArguments.contains(\"-XX:+UseCompressedClassPointers\");\n+        return Platform.is64bit();\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestMetaspacePerfCounters.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestPerfCountersAndMemoryPools.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,2 +38,1 @@\n- * @run driver gc.metaspace.TestSizeTransitions false -XX:+UseSerialGC\n- * @run driver gc.metaspace.TestSizeTransitions true  -XX:+UseSerialGC\n+ * @run driver gc.metaspace.TestSizeTransitions -XX:+UseSerialGC\n@@ -46,2 +45,1 @@\n- * @run driver gc.metaspace.TestSizeTransitions false -XX:+UseParallelGC\n- * @run driver gc.metaspace.TestSizeTransitions true  -XX:+UseParallelGC\n+ * @run driver gc.metaspace.TestSizeTransitions -XX:+UseParallelGC\n@@ -54,2 +52,1 @@\n- * @run driver gc.metaspace.TestSizeTransitions false -XX:+UseG1GC\n- * @run driver gc.metaspace.TestSizeTransitions true  -XX:+UseG1GC\n+ * @run driver gc.metaspace.TestSizeTransitions -XX:+UseG1GC\n@@ -93,2 +90,2 @@\n-    \/\/ args: <use-coops> <gc-arg>\n-    if (args.length != 2) {\n+    \/\/ args: <gc-arg>\n+    if (args.length != 1) {\n@@ -99,8 +96,1 @@\n-    final boolean useCompressedKlassPointers = Boolean.parseBoolean(args[0]);\n-    final String gcArg = args[1];\n-\n-    if (!hasCompressedKlassPointers && useCompressedKlassPointers) {\n-       \/\/ No need to run this configuration.\n-       System.out.println(\"Skipping test.\");\n-       return;\n-    }\n+    final String gcArg = args[0];\n@@ -109,3 +99,0 @@\n-    if (hasCompressedKlassPointers) {\n-      jvmArgs.add(useCompressedKlassPointers ? \"-XX:+UseCompressedClassPointers\" : \"-XX:-UseCompressedClassPointers\");\n-    }\n@@ -127,1 +114,1 @@\n-    if (useCompressedKlassPointers) {\n+    if (hasCompressedKlassPointers) {\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestSizeTransitions.java","additions":7,"deletions":20,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -89,13 +89,0 @@\n-\n-\n-\n-\n-\/* @test id=balanced-no-ccs\n- * @summary Run metaspace-related gtests with compressed class pointers off\n- * @requires vm.bits == 64\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.xml\n- * @requires vm.flagless\n- * @run main\/native GTestWrapper --gtest_filter=metaspace* -XX:MetaspaceReclaimPolicy=balanced -XX:-UseCompressedClassPointers\n- *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/MetaspaceGtests.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -30,11 +30,0 @@\n-\n-\/* @test\n- * @bug 8264008\n- * @summary Run metaspace utils related gtests with compressed class pointers off\n- * @requires vm.bits == 64\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.xml\n- * @requires vm.flagless\n- * @run main\/native GTestWrapper --gtest_filter=MetaspaceUtils* -XX:-UseCompressedClassPointers\n- *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/MetaspaceUtilsGtests.java","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -86,8 +86,0 @@\n-\n-\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:-UseCompressedClassPointers\",\n-                                                   \"-XX:CompressedClassSpaceSize=1m\",\n-                                                   \"-version\");\n-        output = new OutputAnalyzer(pb.start());\n-        output.shouldContain(\"Setting CompressedClassSpaceSize has no effect when compressed class pointers are not used\")\n-              .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassSpaceSize.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n- * @run main\/othervm -XX:+UseCompressedOops -XX:-UseCompressedClassPointers FieldDensityTest\n","filename":"test\/hotspot\/jtreg\/runtime\/FieldLayout\/FieldDensityTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -70,20 +70,0 @@\n-\/*\n- * @test id=test-64bit-noccs\n- * @summary Test the VM.metaspace command\n- * @requires vm.bits == \"64\"\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @run main\/othervm -Dwithout-compressed-class-space -XX:MaxMetaspaceSize=201M -Xmx100M -XX:-UseCompressedOops -XX:-UseCompressedClassPointers PrintMetaspaceDcmd\n- *\/\n-\n- \/*\n- * @test id=test-nospecified\n- * @summary Test the VM.metaspace command\n- * @requires vm.bits == \"64\"\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @run main\/othervm -Dno-specified-flag -Xmx100M -XX:-UseCompressedOops -XX:-UseCompressedClassPointers PrintMetaspaceDcmd\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/PrintMetaspaceDcmd.java","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -70,2 +70,0 @@\n-        testTable.add( new TestVector(\"-XX:+UseCompressedClassPointers\", \"-XX:-UseCompressedClassPointers\",\n-           \"The saved state of UseCompressedOops and UseCompressedClassPointers is different from runtime, CDS will be disabled.\", 1) );\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CommandLineFlagComboNegative.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-        public boolean useCompressedClassPointers;   \/\/ UseCompressedClassPointers\n@@ -52,1 +51,1 @@\n-        public ConfArg(boolean useCompressedOops, boolean useCompressedClassPointers, String msg, int code) {\n+        public ConfArg(boolean useCompressedOops, String msg, int code) {\n@@ -54,1 +53,0 @@\n-            this.useCompressedClassPointers = useCompressedClassPointers;\n@@ -69,1 +67,1 @@\n-            *          UseCompressedOops   UseCompressedClassPointers  Result\n+            *          UseCompressedOops   Result\n@@ -71,5 +69,3 @@\n-            *    dump: on                  on\n-            *    test: on                  on                          Pass\n-            *          on                  off                         Fail\n-            *          off                 on                          Fail\n-            *          off                 off                         Fail\n+            *    dump: on\n+            *    test: on                  Pass\n+            *          off                 Fail\n@@ -77,15 +73,3 @@\n-            *    dump: on                  off\n-            *    test: on                  off                         Pass\n-            *          on                  on                          Fail\n-            *          off                 on                          Pass\n-            *          off                 off                         Fail\n-            *    3.\n-            *    dump: off                 on\n-            *    test: off                 on                          Pass\n-            *          on                  on                          Fail\n-            *          on                  off                         Fail\n-            *    4.\n-            *    dump: off                 off\n-            *    test: off                 off                         Pass\n-            *          on                  on                          Fail\n-            *          on                  off                         Fail\n+            *    dump: off\n+            *    test: off                 Pass\n+            *          on                  Fail\n@@ -94,1 +78,1 @@\n-            if (dumpArg.useCompressedOops && dumpArg.useCompressedClassPointers) {\n+            if (dumpArg.useCompressedOops) {\n@@ -96,1 +80,1 @@\n-                    .add(new ConfArg(true, true, HELLO_STRING, PASS));\n+                    .add(new ConfArg(true, HELLO_STRING, PASS));\n@@ -98,15 +82,1 @@\n-                    .add(new ConfArg(true, false, EXEC_ABNORMAL_MSG, FAIL));\n-                execArgs\n-                    .add(new ConfArg(false, true, EXEC_ABNORMAL_MSG, FAIL));\n-                execArgs\n-                    .add(new ConfArg(false, false, EXEC_ABNORMAL_MSG, FAIL));\n-\n-            }  else if(dumpArg.useCompressedOops && !dumpArg.useCompressedClassPointers) {\n-                execArgs\n-                    .add(new ConfArg(true, false, HELLO_STRING, PASS));\n-                execArgs\n-                    .add(new ConfArg(true, true, EXEC_ABNORMAL_MSG, FAIL));\n-                execArgs\n-                    .add(new ConfArg(false, true, EXEC_ABNORMAL_MSG, FAIL));\n-                execArgs\n-                    .add(new ConfArg(false, false, EXEC_ABNORMAL_MSG, FAIL));\n+                    .add(new ConfArg(false, EXEC_ABNORMAL_MSG, FAIL));\n@@ -114,3 +84,1 @@\n-            } else if (!dumpArg.useCompressedOops && dumpArg.useCompressedClassPointers) {\n-                execArgs\n-                    .add(new ConfArg(false, true, HELLO_STRING, PASS));\n+            } else if (!dumpArg.useCompressedOops) {\n@@ -118,1 +86,1 @@\n-                    .add(new ConfArg(true, true, EXEC_ABNORMAL_MSG, FAIL));\n+                    .add(new ConfArg(false, HELLO_STRING, PASS));\n@@ -120,8 +88,1 @@\n-                    .add(new ConfArg(true, false, EXEC_ABNORMAL_MSG, FAIL));\n-            } else if (!dumpArg.useCompressedOops && !dumpArg.useCompressedClassPointers) {\n-                execArgs\n-                    .add(new ConfArg(false, false, HELLO_STRING, PASS));\n-                execArgs\n-                    .add(new ConfArg(true, true, EXEC_ABNORMAL_MSG, FAIL));\n-                execArgs\n-                    .add(new ConfArg(true, false, EXEC_ABNORMAL_MSG, FAIL));\n+                    .add(new ConfArg(true, EXEC_ABNORMAL_MSG, FAIL));\n@@ -137,5 +98,0 @@\n-    public static String getCompressedClassPointersArg(boolean on) {\n-        if (on) return \"-XX:+UseCompressedClassPointers\";\n-        else    return \"-XX:-UseCompressedClassPointers\";\n-    }\n-\n@@ -147,5 +103,1 @@\n-            .add(new RunArg(new ConfArg(true, true, null, PASS)));\n-        runList\n-            .add(new RunArg(new ConfArg(true, false, null, PASS)));\n-        runList\n-            .add(new RunArg(new ConfArg(false, true, null, PASS)));\n+            .add(new RunArg(new ConfArg(true, null, PASS)));\n@@ -153,1 +105,1 @@\n-            .add(new RunArg(new ConfArg(false, false, null, PASS)));\n+            .add(new RunArg(new ConfArg(false, null, PASS)));\n@@ -165,1 +117,0 @@\n-                      getCompressedClassPointersArg(t.dumpArg.useCompressedClassPointers),\n@@ -178,1 +129,0 @@\n-                                      getCompressedClassPointersArg(c.useCompressedClassPointers),\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCombinedCompressedFlags.java","additions":16,"deletions":66,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -75,13 +75,1 @@\n-         System.out.println(\"3. Run with -UseCompressedOops -UseCompressedClassPointers\");\n-         out = TestCommon\n-                   .exec(helloJar,\n-                         \"-XX:+UseSerialGC\",\n-                         \"-XX:-UseCompressedOops\",\n-                         \"-XX:-UseCompressedClassPointers\",\n-                         \"-Xlog:cds\",\n-                         \"Hello\");\n-         out.shouldContain(UNABLE_TO_USE_ARCHIVE);\n-         out.shouldContain(ERR_MSG);\n-         out.shouldHaveExitValue(1);\n-\n-         System.out.println(\"4. Run with -UseCompressedOops +UseCompressedClassPointers\");\n+         System.out.println(\"3. Run with -UseCompressedOops +UseCompressedClassPointers\");\n@@ -98,13 +86,1 @@\n-         System.out.println(\"5. Run with +UseCompressedOops -UseCompressedClassPointers\");\n-         out = TestCommon\n-                   .exec(helloJar,\n-                         \"-XX:+UseSerialGC\",\n-                         \"-XX:+UseCompressedOops\",\n-                         \"-XX:-UseCompressedClassPointers\",\n-                         \"-Xlog:cds\",\n-                         \"Hello\");\n-         out.shouldContain(UNABLE_TO_USE_ARCHIVE);\n-         out.shouldContain(ERR_MSG);\n-         out.shouldHaveExitValue(1);\n-\n-         System.out.println(\"6. Run with +UseCompressedOops +UseCompressedClassPointers\");\n+         System.out.println(\"4. Run with +UseCompressedOops +UseCompressedClassPointers\");\n@@ -122,12 +98,1 @@\n-         System.out.println(\"7. Dump with -UseCompressedOops -UseCompressedClassPointers\");\n-         out = TestCommon\n-                   .dump(helloJar,\n-                         new String[] {\"Hello\"},\n-                         \"-XX:+UseSerialGC\",\n-                         \"-XX:-UseCompressedOops\",\n-                         \"-XX:+UseCompressedClassPointers\",\n-                         \"-Xlog:cds\");\n-         out.shouldContain(\"Dumping shared data to file:\");\n-         out.shouldHaveExitValue(0);\n-\n-         System.out.println(\"8. Run with ZGC\");\n+         System.out.println(\"5. Run with ZGC\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestZGCWithCDS.java","additions":3,"deletions":38,"binary":false,"changes":41,"status":"modified"}]}