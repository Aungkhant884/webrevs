{"files":[{"patch":"@@ -32,1 +32,0 @@\n-#include \"runtime\/objectMonitor.hpp\"\n@@ -266,1 +265,0 @@\n-        ObjectMonitor::maybe_deflate_dead(ptr);\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorage.inline.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,0 @@\n-      ObjectMonitor::maybe_deflate_dead(p);\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -603,16 +603,0 @@\n-\/\/ We might access the dead object headers for parsable heap walk, make sure\n-\/\/ headers are in correct shape, e.g. monitors deflated.\n-void ObjectMonitor::maybe_deflate_dead(oop* p) {\n-  oop obj = *p;\n-  assert(obj != NULL, \"must not yet been cleared\");\n-  markWord mark = obj->mark();\n-  if (mark.has_monitor()) {\n-    ObjectMonitor* monitor = mark.monitor();\n-    if (p == monitor->_object.ptr_raw()) {\n-      assert(monitor->object_peek() == obj, \"lock object must match\");\n-      markWord dmw = monitor->header();\n-      obj->set_mark(dmw);\n-    }\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -346,2 +346,0 @@\n-  static void maybe_deflate_dead(oop* p);\n-\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}