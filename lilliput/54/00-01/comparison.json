{"files":[{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Check that monitorenter A; monitorenter B; monitorexit A; monitorexit B; works\n+ * @compile TestUnstructuredLocking.jasm\n+ * @run main\/othervm -Xint TestUnstructuredLocking\n+ *\/\n+\n+super public class TestUnstructuredLocking version 64:0 {\n+\n+    public static Method main:\"([Ljava\/lang\/String;)V\" stack 2 locals 4 {\n+        new class java\/lang\/Object;\n+        dup;\n+        invokespecial Method java\/lang\/Object.\"<init>\":\"()V\";\n+        astore_1;\n+        new class java\/lang\/Object;\n+        dup;\n+        invokespecial Method java\/lang\/Object.\"<init>\":\"()V\";\n+        astore_2;\n+        aload_1;\n+        monitorenter;\n+        aload_2;\n+        monitorenter;\n+        aload_1;\n+        monitorexit;\n+        \/\/ At this point, we should have exited monitor#1, but still hold monitor#2.\n+        \/\/ Attempt to call notify will inflate the monitor. If we blindly pop\n+        \/\/ the top monitor in the first monitorexit, then the lock-stack will\n+        \/\/ no longer have monitor#2 on it, and fail inflation.\n+        aload_2;\n+        invokevirtual Method java\/lang\/Object.notify:\"()V\";\n+        aload_2;\n+        monitorexit;\n+        return;\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/locking\/TestUnstructuredLocking.jasm","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}