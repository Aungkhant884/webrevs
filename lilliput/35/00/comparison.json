{"files":[{"patch":"@@ -2609,1 +2609,0 @@\n-  __ decode_klass_not_null(result);\n@@ -2612,0 +2611,1 @@\n+  __ decode_klass_not_null(result);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -727,1 +727,1 @@\n-        __ call_VM_leaf(CAST_FROM_FN_PTR(address, oopDesc::load_klass_runtime), r0);\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, oopDesc::load_nklass_runtime), r0);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,0 +305,1 @@\n+#ifdef _LP64\n@@ -318,0 +319,3 @@\n+#else\n+  __ should_not_reach_here();\n+#endif\n","filename":"src\/hotspot\/cpu\/x86\/c1_CodeStubs_x86.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3545,0 +3545,2 @@\n+\n+  __ bind(*op->stub()->continuation());\n@@ -3548,0 +3550,2 @@\n+  \/\/ Not really needed, but bind the label anyway to make compiler happy.\n+  __ bind(*op->stub()->continuation());\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1120,1 +1120,1 @@\n-        __ call_VM_leaf(CAST_FROM_FN_PTR(address, oopDesc::load_klass_runtime), c_rarg0);\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, oopDesc::load_nklass_runtime), c_rarg0);\n","filename":"src\/hotspot\/cpu\/x86\/c1_Runtime1_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4573,1 +4573,0 @@\n-  decode_klass_not_null(dst, tmp);\n@@ -4589,1 +4588,1 @@\n-  MacroAssembler::call_VM_leaf(CAST_FROM_FN_PTR(address, oopDesc::load_klass_runtime), src);\n+  MacroAssembler::call_VM_leaf(CAST_FROM_FN_PTR(address, oopDesc::load_nklass_runtime), src);\n@@ -4605,0 +4604,1 @@\n+  decode_klass_not_null(dst, tmp);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1237,1 +1237,0 @@\n-  __ branch_destination(slow_path->continuation());\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -178,1 +178,2 @@\n-JRT_LEAF(Klass*, oopDesc::load_klass_runtime(oopDesc* o))\n+#ifdef _LP64\n+JRT_LEAF(narrowKlass, oopDesc::load_nklass_runtime(oopDesc* o))\n@@ -182,1 +183,7 @@\n-  return obj->klass();\n+  markWord header = obj->mark();\n+  if (!header.is_neutral()) {\n+    header = ObjectSynchronizer::stable_mark(obj);\n+  }\n+  assert(header.is_neutral(), \"expect neutral header here\");\n+  narrowKlass nklass = header.narrow_klass();\n+  return nklass;\n@@ -184,0 +191,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -321,1 +321,3 @@\n-  static Klass* load_klass_runtime(oopDesc* o);\n+#ifdef _LP64\n+  static narrowKlass load_nklass_runtime(oopDesc* o);\n+#endif\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}