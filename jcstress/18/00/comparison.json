{"files":[{"patch":"@@ -99,1 +99,3 @@\n-        new DiskReadCollector(opts.getResultFile(), collector).dump();\n+        DiskReadCollector drc = new DiskReadCollector(opts.getResultFile(), collector);\n+        drc.dump();\n+        drc.close();\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/JCStress.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -345,2 +345,2 @@\n-                    result.addVMOut(out);\n-                    result.addVMErr(err);\n+                    result.addVMOuts(out);\n+                    result.addVMErrs(err);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import org.openjdk.jcstress.infra.grading.ReportUtils;\n@@ -66,0 +67,1 @@\n+        if (ReportUtils.skipMessage(msg)) return;\n@@ -69,0 +71,6 @@\n+    public void addMessages(Collection<String> msgs) {\n+        for (String m : msgs) {\n+            addMessage(m);\n+        }\n+    }\n+\n@@ -70,0 +78,1 @@\n+        if (ReportUtils.skipMessage(msg)) return;\n@@ -73,2 +82,4 @@\n-    public void addVMOut(Collection<String> msg) {\n-        vmOut.addAll(msg);\n+    public void addVMOuts(Collection<String> msgs) {\n+        for (String m : msgs) {\n+            addVMOut(m);\n+        }\n@@ -78,0 +89,1 @@\n+        if (ReportUtils.skipMessage(msg)) return;\n@@ -81,2 +93,4 @@\n-    public void addVMErr(Collection<String> msg) {\n-        vmErr.addAll(msg);\n+    public void addVMErrs(Collection<String> msgs) {\n+        for (String m : msgs) {\n+            addVMErr(m);\n+        }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/collectors\/TestResult.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    public HTMLReportPrinter(Options opts, InProcessCollector collector) throws FileNotFoundException {\n+    public HTMLReportPrinter(Options opts, InProcessCollector collector) {\n@@ -382,1 +382,1 @@\n-        o.println(\"<table width=100% cellpadding=5>\");\n+        o.println(\"<table cellpadding=5>\");\n@@ -427,1 +427,1 @@\n-        o.println(\"<h3>Auxiliary data<\/h3>\");\n+        o.println(\"<h3>Messages<\/h3>\");\n@@ -441,0 +441,28 @@\n+        o.println(\"<h3>VM Output Streams<\/h3>\");\n+\n+        for (TestResult r : sorted) {\n+            if (!r.getVmOut().isEmpty()) {\n+                o.println(\"<p><b>\" + r.getConfig() + \"<\/b><\/p>\");\n+                o.println(\"<pre>\");\n+                for (String data : r.getVmOut()) {\n+                    o.println(data);\n+                }\n+                o.println(\"<\/pre>\");\n+                o.println();\n+            }\n+        }\n+\n+        o.println(\"<h3>VM Error Streams<\/h3>\");\n+\n+        for (TestResult r : sorted) {\n+            if (!r.getVmErr().isEmpty()) {\n+                o.println(\"<p><b>\" + r.getConfig() + \"<\/b><\/p>\");\n+                o.println(\"<pre>\");\n+                for (String data : r.getVmErr()) {\n+                    o.println(data);\n+                }\n+                o.println(\"<\/pre>\");\n+                o.println();\n+            }\n+        }\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/HTMLReportPrinter.java","additions":31,"deletions":3,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -84,1 +84,4 @@\n-        List<String> auxData = new ArrayList<>();\n+        List<String> messages = new ArrayList<>();\n+\n+        List<String> vmOuts = new ArrayList<>();\n+        List<String> vmErrs = new ArrayList<>();\n@@ -94,1 +97,3 @@\n-            auxData.addAll(r.getMessages());\n+            messages.addAll(r.getMessages());\n+            vmOuts.addAll(r.getVmOut());\n+            vmErrs.addAll(r.getVmErr());\n@@ -105,1 +110,1 @@\n-        for (String data : auxData) {\n+        for (String data : messages) {\n@@ -108,0 +113,4 @@\n+\n+        root.addVMOuts(vmOuts);\n+        root.addVMErrs(vmErrs);\n+\n@@ -198,1 +207,1 @@\n-    private static boolean skipMessage(String data) {\n+    public static boolean skipMessage(String data) {\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ReportUtils.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -152,0 +152,1 @@\n+        if (!name.equals(that.name)) return false;\n@@ -160,1 +161,0 @@\n-        if (!name.equals(that.name)) return false;\n@@ -168,12 +168,1 @@\n-        int result = spinLoopStyle.hashCode();\n-        result = 31 * result + minStride;\n-        result = 31 * result + maxStride;\n-        result = 31 * result + time;\n-        result = 31 * result + iters;\n-        result = 31 * result + deoptMode.hashCode();\n-        result = 31 * result + threads;\n-        result = 31 * result + compileMode;\n-        result = 31 * result + name.hashCode();\n-        result = 31 * result + jvmArgs.hashCode();\n-        result = 31 * result + runMode.hashCode();\n-        return result;\n+        return name.hashCode();\n@@ -184,4 +173,1 @@\n-        return \"JVM options: \" + jvmArgs + \"\\n\" +\n-                \"Iterations: \" + iters + \"\\n\" +\n-                \"Time: \" + time + \"\\n\" +\n-                \"Stride: [\" + minStride + \", \" + maxStride + \"] (capped by \" + strideCap + \")\";\n+        return \"JVM options: \" + jvmArgs +\"; Compile mode: \" + getCompileMode();\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/TestConfig.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"}]}