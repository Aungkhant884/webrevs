{"files":[{"patch":"@@ -50,4 +50,1 @@\n-        \/\/ Pre-initialize the affinity support and threads, so that workers\n-        \/\/ do not have to do this on critical paths during the execution.\n-        \/\/ This also runs when the rest of the infrastructure starts up.\n-        new WarmupAffinityTask().start();\n+        boolean initLocalAffinity = Boolean.parseBoolean(args[0]);\n@@ -55,3 +52,10 @@\n-        String host = args[0];\n-        int port = Integer.parseInt(args[1]);\n-        int token = Integer.parseInt(args[2]);\n+        if (initLocalAffinity) {\n+            \/\/ Pre-initialize the affinity support and threads, so that workers\n+            \/\/ do not have to do this on critical paths during the execution.\n+            \/\/ This also runs when the rest of the infrastructure starts up.\n+            new WarmupAffinityTask().start();\n+        }\n+\n+        String host = args[1];\n+        int port = Integer.parseInt(args[2]);\n+        int token = Integer.parseInt(args[3]);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/ForkedMain.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -345,0 +345,3 @@\n+                \/\/ notify the forked VM whether we want the local affinity initialized\n+                command.add(Boolean.toString(task.shClass.mode() == AffinityMode.LOCAL));\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -460,0 +460,12 @@\n+\n+        \/\/ Initialize affinity before starting the timing measurement, so that init time\n+        \/\/ does not eat up into the test run time.\n+        pw.println(\"        if (config.localAffinity) {\");\n+        pw.println(\"            try {\");\n+        pw.println(\"                AffinitySupport.tryBind();\");\n+        pw.println(\"            } catch (Exception e) {\");\n+        pw.println(\"                \/\/ Do not care\");\n+        pw.println(\"            }\");\n+        pw.println(\"        }\");\n+        pw.println();\n+\n@@ -560,1 +572,1 @@\n-            pw.println(\"        AffinitySupport.bind(config.actorMap[\" + n + \"]);\");\n+            pw.println(\"        if (config.localAffinity) AffinitySupport.bind(config.actorMap[\" + n + \"]);\");\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/processors\/JCStressTestProcessor.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jcstress.os.AffinityMode;\n+\n@@ -40,0 +42,1 @@\n+    public boolean localAffinity;\n@@ -50,0 +53,1 @@\n+        localAffinity = cfg.shClass.mode() == AffinityMode.LOCAL;\n@@ -61,0 +65,1 @@\n+        localAffinity = dis.readBoolean();\n@@ -76,0 +81,1 @@\n+        dos.writeBoolean(localAffinity);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/ForkedTestConfig.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,5 +36,0 @@\n-        if (cpu == -1) {\n-            \/\/ Special case: no need to affine.\n-            return;\n-        }\n-\n@@ -58,0 +53,1 @@\n+        private static boolean BIND_TRIED;\n@@ -79,1 +75,4 @@\n-            tryInit();\n+            if (BIND_TRIED) return;\n+\n+            synchronized (Linux.class) {\n+                if (BIND_TRIED) return;\n@@ -81,3 +80,1 @@\n-            final cpu_set_t new_cpuset = new cpu_set_t();\n-            new_cpuset.set(0);\n-            final cpu_set_t old_cpuset = new cpu_set_t();\n+                tryInit();\n@@ -85,3 +82,10 @@\n-            get(old_cpuset);\n-            set(new_cpuset);\n-            set(old_cpuset);\n+                final cpu_set_t new_cpuset = new cpu_set_t();\n+                new_cpuset.set(0);\n+                final cpu_set_t old_cpuset = new cpu_set_t();\n+\n+                get(old_cpuset);\n+                set(new_cpuset);\n+                set(old_cpuset);\n+\n+                BIND_TRIED = true;\n+            }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/os\/AffinitySupport.java","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"}]}