{"files":[{"patch":"@@ -152,1 +152,1 @@\n-            ReportUtils.printResult(output, r, true);\n+            ReportUtils.printResult(output, r, false);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ConsoleReportPrinter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    public static void printResult(PrintWriter pw, TestResult r, boolean inProgress) {\n+    public static void printResult(PrintWriter pw, TestResult r, boolean finalResults) {\n@@ -120,7 +120,9 @@\n-        pw.format(\"  Scheduling class:%n\");\n-        pw.println(SchedulingClass.description(config.getSchedulingClass(), config.actorNames));\n-        pw.format(\"  CPU allocation:%n\");\n-        pw.println(CPUMap.description(config.cpuMap, config.actorNames));\n-        pw.format(\"  Compilation: %s%n\", CompileMode.description(config.getCompileMode(), config.actorNames));\n-        pw.format(\"  JVM args: %s%n\", config.jvmArgs);\n-        if (inProgress) {\n+        if (finalResults) {\n+            pw.println(\"  Results across all configurations:\");\n+        } else {\n+            pw.format(\"  Scheduling class:%n\");\n+            pw.println(SchedulingClass.description(config.getSchedulingClass(), config.actorNames));\n+            pw.format(\"  CPU allocation:%n\");\n+            pw.println(CPUMap.description(config.cpuMap, config.actorNames));\n+            pw.format(\"  Compilation: %s%n\", CompileMode.description(config.getCompileMode(), config.actorNames));\n+            pw.format(\"  JVM args: %s%n\", config.jvmArgs);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ReportUtils.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -61,4 +61,2 @@\n-        List<TestResult> byConfig = ReportUtils.mergedByConfig(collector.getTestResults());\n-        Collections.sort(byConfig, Comparator\n-                .comparing(TestResult::getName)\n-                .thenComparing(t -> t.getConfig().jvmArgs.toString()));\n+        List<TestResult> byName = ReportUtils.mergedByName(collector.getTestResults());\n+        Collections.sort(byName, Comparator.comparing(TestResult::getName));\n@@ -68,1 +66,1 @@\n-        printXTests(byConfig,\n+        printXTests(byName,\n@@ -71,1 +69,1 @@\n-                verbosity.printAllTests()\n+                true\n@@ -74,1 +72,1 @@\n-        printXTests(byConfig,\n+        printXTests(byName,\n@@ -77,1 +75,1 @@\n-                verbosity.printAllTests()\n+                true\n@@ -80,1 +78,1 @@\n-        printXTests(byConfig,\n+        printXTests(byName,\n@@ -83,1 +81,1 @@\n-                verbosity.printAllTests()\n+                true\n@@ -86,1 +84,1 @@\n-        printXTests(byConfig,\n+        printXTests(byName,\n@@ -119,1 +117,1 @@\n-        ReportUtils.printResult(pw, result, false);\n+        ReportUtils.printResult(pw, result, true);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/TextReportPrinter.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"}]}