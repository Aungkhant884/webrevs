{"files":[{"patch":"@@ -39,2 +39,0 @@\n-    @sun.misc.Contended\n-    @jdk.internal.vm.annotation.Contended\n@@ -42,3 +40,0 @@\n-\n-    @sun.misc.Contended\n-    @jdk.internal.vm.annotation.Contended\n","filename":"jcstress-benchmarks\/src\/main\/java\/org\/openjdk\/jcstress\/SampleTest.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,146 @@\n+<!--\n+Copyright (c) 2021, Red Hat Inc. All rights reserved.\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+This code is free software; you can redistribute it and\/or modify it\n+under the terms of the GNU General Public License version 2 only, as\n+published by the Free Software Foundation.  Oracle designates this\n+particular file as subject to the \"Classpath\" exception as provided\n+by Oracle in the LICENSE file that accompanied this code.\n+\n+This code is distributed in the hope that it will be useful, but WITHOUT\n+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+version 2 for more details (a copy is included in the LICENSE file that\n+accompanied this code).\n+\n+You should have received a copy of the GNU General Public License version\n+2 along with this work; if not, write to the Free Software Foundation,\n+Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+or visit www.oracle.com if you need additional information or have any\n+questions.\n+-->\n+\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0<\/modelVersion>\n+\n+    <parent>\n+        <groupId>org.openjdk.jcstress<\/groupId>\n+        <artifactId>jcstress-parent<\/artifactId>\n+        <version>0.13-SNAPSHOT<\/version>\n+    <\/parent>\n+\n+    <artifactId>jcstress-contended-autoinjector<\/artifactId>\n+    <packaging>jar<\/packaging>\n+\n+    <name>JCStress @Contended Auto-Injector<\/name>\n+    <url>http:\/\/maven.apache.org<\/url>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8<\/project.build.sourceEncoding>\n+    <\/properties>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-compiler-plugin<\/artifactId>\n+                <configuration>\n+                    <source>8<\/source>\n+                    <target>8<\/target>\n+                <\/configuration>\n+            <\/plugin>\n+            <plugin>\n+                <groupId>com.mycila<\/groupId>\n+                <artifactId>license-maven-plugin<\/artifactId>\n+            <\/plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-shade-plugin<\/artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>testgen<\/id>\n+                        <phase>package<\/phase>\n+                        <goals>\n+                            <goal>shade<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <finalName>contended-autoinjector<\/finalName>\n+                            <transformers>\n+                                <transformer\n+                                        implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n+                                    <mainClass>org.openjdk.jcstress.ContendedAutoInjectorMain<\/mainClass>\n+                                <\/transformer>\n+                            <\/transformers>\n+                        <\/configuration>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+            <plugin>\n+                <groupId>org.codehaus.mojo<\/groupId>\n+                <artifactId>exec-maven-plugin<\/artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>run<\/id>\n+                        <phase>pre-integration-test<\/phase>\n+                        <goals>\n+                            <goal>exec<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <executable>${java.home}\/bin\/java<\/executable>\n+                            <arguments>\n+                                <argument>-jar<\/argument>\n+                                <argument>${project.build.directory}\/contended-autoinjector.jar<\/argument>\n+                                <argument>${project.build.testOutputDirectory}<\/argument>\n+                            <\/arguments>\n+                        <\/configuration>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-surefire-plugin<\/artifactId>\n+                <configuration>\n+                    <excludes>\n+                        <exclude>**\/*<\/exclude>\n+                    <\/excludes>\n+                <\/configuration>\n+                <executions>\n+                    <execution>\n+                        <id>integration-test<\/id>\n+                        <goals>\n+                            <goal>test<\/goal>\n+                        <\/goals>\n+                        <phase>integration-test<\/phase>\n+                        <configuration>\n+                            <excludes>\n+                                <exclude>none<\/exclude>\n+                            <\/excludes>\n+                            <includes>\n+                                <include>**\/org\/openjdk\/jcstress\/**\/*.java<\/include>\n+                            <\/includes>\n+                        <\/configuration>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.ow2.asm<\/groupId>\n+            <artifactId>asm<\/artifactId>\n+        <\/dependency>\n+        <dependency>\n+            <groupId>junit<\/groupId>\n+            <artifactId>junit<\/artifactId>\n+        <\/dependency>\n+    <\/dependencies>\n+<\/project>\n","filename":"jcstress-contended-autoinjector\/pom.xml","additions":146,"deletions":0,"binary":false,"changes":146,"status":"added"},{"patch":"@@ -0,0 +1,205 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress;\n+\n+import org.objectweb.asm.*;\n+\n+import java.io.IOException;\n+import java.nio.file.*;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class ContendedAutoInjectorMain {\n+\n+    static final String SUN_MISC_CONTENDED = \"Lsun\/misc\/Contended;\";\n+    static final String JDK_INTERNAL_CONTENDED = \"Ljdk\/internal\/vm\/annotation\/Contended;\";\n+\n+    static final Set<String> EXISTS_SUN_MISC_CONTENDED = new HashSet<>();\n+    static final Set<String> EXISTS_JDK_INTERNAL_CONTENDED = new HashSet<>();\n+\n+    public static void main(String[] args) throws IOException {\n+        if (args.length >= 1) {\n+            Path rootPath = Path.of(args[0]);\n+\n+            System.out.println(\"Processing classes at \" + rootPath);\n+            Files.walkFileTree(rootPath, new FileVisitor<Path>() {\n+                @Override\n+                public FileVisitResult visitFile(Path path, BasicFileAttributes basicFileAttributes) throws IOException {\n+                    if (path.toString().endsWith(\"class\")) {\n+                        byte[] origBytes = Files.readAllBytes(path);\n+\n+                        if (parseAnnotations(origBytes)) {\n+                            System.out.println(\"Processing \" + rootPath.relativize(path));\n+                            final byte[] newBytes = retransform(origBytes);\n+                            Files.write(path, newBytes);\n+                        }\n+                    }\n+                    return FileVisitResult.CONTINUE;\n+                }\n+\n+                @Override\n+                public FileVisitResult visitFileFailed(Path path, IOException e) {\n+                    return FileVisitResult.CONTINUE;\n+                }\n+\n+                @Override\n+                public FileVisitResult preVisitDirectory(Path path, BasicFileAttributes basicFileAttributes) {\n+                    return FileVisitResult.CONTINUE;\n+                }\n+\n+                @Override\n+                public FileVisitResult postVisitDirectory(Path path, IOException e) {\n+                    return FileVisitResult.CONTINUE;\n+                }\n+            });\n+        } else {\n+            throw new IllegalStateException(\"Please provide the destination dir\");\n+        }\n+    }\n+\n+    private static byte[] retransform(byte[] origBytes) {\n+        ClassReader cr = new ClassReader(origBytes);\n+        ClassWriter cw = new ClassWriter(cr, 0);\n+        ContendedAnnotator ca = new ContendedAnnotator(cw);\n+        cr.accept(ca, 0);\n+        return cw.toByteArray();\n+    }\n+\n+    static class ClassNameTracker extends ClassVisitor  {\n+        public ClassNameTracker() {\n+            super(Opcodes.ASM6);\n+        }\n+\n+        public ClassNameTracker(ClassWriter cw) {\n+            super(Opcodes.ASM6, cw);\n+        }\n+\n+        protected String className;\n+\n+        @Override\n+        public void visit(int version, int access, String name, String signature, String superName, String[] interfaces) {\n+            className = name;\n+            super.visit(version, access, name, signature, superName, interfaces);\n+        }\n+\n+        @Override\n+        public void visitOuterClass(String owner, String name, String descriptor) {\n+            String oldName = className;\n+            className = name;\n+            super.visitOuterClass(owner, name, descriptor);\n+            className = oldName;\n+        }\n+\n+        @Override\n+        public void visitInnerClass(String name, String outerName, String innerName, int access) {\n+            String oldName = className;\n+            className = name;\n+            super.visitInnerClass(name, outerName, innerName, access);\n+            className = oldName;\n+        }\n+    }\n+\n+    static class ContendedAnnotator extends ClassNameTracker {\n+        public ContendedAnnotator(ClassWriter cw) {\n+            super(cw);\n+        }\n+\n+        @Override\n+        public FieldVisitor visitField(int access, String name, String desc, String signature, Object value) {\n+            FieldVisitor fv = super.visitField(access, name, desc, signature, value);\n+            String id = className + \".\" + name;\n+            if (!EXISTS_SUN_MISC_CONTENDED.contains(id)) {\n+                System.out.println(\"  Added: \" + id + \" <- \" + SUN_MISC_CONTENDED);\n+                fv.visitAnnotation(SUN_MISC_CONTENDED, true);\n+            } else {\n+                System.out.println(\"  Skip: \" + id + \" already carries \" + SUN_MISC_CONTENDED);\n+            }\n+            if (!EXISTS_JDK_INTERNAL_CONTENDED.contains(id)) {\n+                System.out.println(\"  Added: \" + id + \" <- \" + JDK_INTERNAL_CONTENDED);\n+                fv.visitAnnotation(JDK_INTERNAL_CONTENDED, true);\n+            } else {\n+                System.out.println(\"  Skip: \" + id + \" already carries \" + JDK_INTERNAL_CONTENDED);\n+            }\n+            return fv;\n+        }\n+    }\n+\n+    private static boolean parseAnnotations(byte[] origBytes) {\n+        ClassReader cr = new ClassReader(origBytes);\n+        StateDetector sd = new StateDetector();\n+        cr.accept(sd, 0);\n+        return sd.isDetected();\n+    }\n+\n+    static class StateDetector extends ClassNameTracker {\n+        private boolean detected;\n+\n+        @Override\n+        public AnnotationVisitor visitAnnotation(String desc, boolean visible) {\n+            if (desc.equals(\"Lorg\/openjdk\/jcstress\/annotations\/State;\")) {\n+                detected = true;\n+            }\n+            return super.visitAnnotation(desc, visible);\n+        }\n+\n+        @Override\n+        public FieldVisitor visitField(int access, String name, String descriptor, String signature, Object value) {\n+            FieldVisitor fv = super.visitField(access, name, descriptor, signature, value);\n+            if (detected) {\n+                return new FieldEnumerator(fv, className, name);\n+            } else {\n+                return fv;\n+            }\n+        }\n+\n+        public boolean isDetected() {\n+            return detected;\n+        }\n+    }\n+\n+    static class FieldEnumerator extends FieldVisitor {\n+        private final String className;\n+        private final String fieldName;\n+\n+        public FieldEnumerator(FieldVisitor fieldVisitor, String className, String fieldName) {\n+            super(Opcodes.ASM6, fieldVisitor);\n+            this.className = className;\n+            this.fieldName = fieldName;\n+        }\n+\n+        @Override\n+        public AnnotationVisitor visitAnnotation(String desc, boolean visible) {\n+            String id = className + \".\" + fieldName;\n+            if (desc.equals(SUN_MISC_CONTENDED)) {\n+                EXISTS_SUN_MISC_CONTENDED.add(id);\n+            }\n+            if (desc.equals(JDK_INTERNAL_CONTENDED)) {\n+                EXISTS_JDK_INTERNAL_CONTENDED.add(id);\n+            }\n+            return super.visitAnnotation(desc, visible);\n+        }\n+    }\n+}\n","filename":"jcstress-contended-autoinjector\/src\/main\/java\/org\/openjdk\/jcstress\/ContendedAutoInjectorMain.java","additions":205,"deletions":0,"binary":false,"changes":205,"status":"added"},{"patch":"","filename":"jcstress-contended-autoinjector\/src\/test\/java\/jdk\/internal\/vm\/annotation\/Contended.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"jcstress-core\/src\/main\/java\/jdk\/internal\/vm\/annotation\/Contended.java","status":"copied"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Target(ElementType.TYPE)\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface State {\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/annotations\/State.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.flat;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+@State\n+public class TestBoth {\n+\n+    @sun.misc.Contended\n+    @jdk.internal.vm.annotation.Contended\n+    int field;\n+\n+    @Test\n+    public void run() {\n+        System.out.println(field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/flat\/TestBoth.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.flat;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+@State\n+public class TestNone {\n+    int field;\n+\n+    @Test\n+    public void run() {\n+        System.out.println(field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/flat\/TestNone.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.flat;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+@State\n+public class TestOnlyJdkInternal {\n+\n+    @jdk.internal.vm.annotation.Contended\n+    int field;\n+\n+    @Test\n+    public void run() {\n+        System.out.println(field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/flat\/TestOnlyJdkInternal.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.flat;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+@State\n+public class TestOnlySunMisc {\n+\n+    @sun.misc.Contended\n+    int field;\n+\n+    @Test\n+    public void run() {\n+        System.out.println(field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/flat\/TestOnlySunMisc.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestBoth {\n+\n+    @State\n+    class Inner {\n+        @sun.misc.Contended\n+        @jdk.internal.vm.annotation.Contended\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Inner().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/inner\/TestBoth.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestNone {\n+\n+    @State\n+    class Inner {\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Inner().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/inner\/TestNone.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestOnlyJdkInternal {\n+\n+    @State\n+    class Inner {\n+        @jdk.internal.vm.annotation.Contended\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Inner().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/inner\/TestOnlyJdkInternal.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestOnlySunMisc {\n+\n+    @State\n+    class Inner {\n+        @sun.misc.Contended\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Inner().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/inner\/TestOnlySunMisc.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.nested.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestBoth {\n+\n+    @State\n+    static class Nested {\n+        @sun.misc.Contended\n+        @jdk.internal.vm.annotation.Contended\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Nested().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/nested\/inner\/TestBoth.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.nested.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestNone {\n+\n+    @State\n+    static class Nested {\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Nested().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/nested\/inner\/TestNone.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.nested.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestOnlyJdkInternal {\n+\n+    @State\n+    static class Nested {\n+        @jdk.internal.vm.annotation.Contended\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Nested().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/nested\/inner\/TestOnlyJdkInternal.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.nested.inner;\n+\n+import org.junit.Test;\n+import org.openjdk.jcstress.annotations.State;\n+\n+public class TestOnlySunMisc {\n+\n+    @State\n+    static class Nested {\n+        @sun.misc.Contended\n+        int field;\n+    }\n+\n+    @Test\n+    public void run() {\n+        System.out.println(new Nested().field);\n+    }\n+\n+}\n","filename":"jcstress-contended-autoinjector\/src\/test\/java\/org\/openjdk\/jcstress\/nested\/inner\/TestOnlySunMisc.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"","filename":"jcstress-contended-autoinjector\/src\/test\/java\/sun\/misc\/Contended.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"jcstress-core\/src\/main\/java\/sun\/misc\/Contended.java","status":"copied"},{"patch":"@@ -39,0 +39,1 @@\n+    public final String name;\n@@ -50,0 +51,1 @@\n+        name = cfg.name;\n@@ -64,0 +66,1 @@\n+        name = dis.readUTF();\n@@ -82,0 +85,1 @@\n+        dos.writeUTF(name);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/ForkedTestConfig.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -84,0 +85,4 @@\n+            <plugin>\n+                <groupId>org.codehaus.mojo<\/groupId>\n+                <artifactId>exec-maven-plugin<\/artifactId>\n+            <\/plugin>\n@@ -86,8 +91,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"jcstress-samples\/pom.xml","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+<!--\n+Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+This code is free software; you can redistribute it and\/or modify it\n+under the terms of the GNU General Public License version 2 only, as\n+published by the Free Software Foundation.  Oracle designates this\n+particular file as subject to the \"Classpath\" exception as provided\n+by Oracle in the LICENSE file that accompanied this code.\n+\n+This code is distributed in the hope that it will be useful, but WITHOUT\n+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+version 2 for more details (a copy is included in the LICENSE file that\n+accompanied this code).\n+\n+You should have received a copy of the GNU General Public License version\n+2 along with this work; if not, write to the Free Software Foundation,\n+Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+or visit www.oracle.com if you need additional information or have any\n+questions.\n+-->\n+\n+<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0<\/modelVersion>\n+\n+    <parent>\n+        <groupId>org.openjdk.jcstress<\/groupId>\n+        <artifactId>jcstress-parent<\/artifactId>\n+        <version>0.13-SNAPSHOT<\/version>\n+    <\/parent>\n+\n+    <artifactId>jcstress-test-base<\/artifactId>\n+    <packaging>pom<\/packaging>\n+\n+    <name>JCStress Test Base Configuration<\/name>\n+    <url>http:\/\/maven.apache.org<\/url>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8<\/project.build.sourceEncoding>\n+    <\/properties>\n+\n+    <build>\n+        <pluginManagement>\n+            <plugins>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo<\/groupId>\n+                    <artifactId>exec-maven-plugin<\/artifactId>\n+                    <executions>\n+                        <execution>\n+                            <id>contended-autoinjector<\/id>\n+                            <goals>\n+                                <goal>exec<\/goal>\n+                            <\/goals>\n+                            <phase>process-classes<\/phase>\n+                            <configuration>\n+                                <executable>${java.home}\/bin\/java<\/executable>\n+                                <arguments>\n+                                    <argument>-jar<\/argument>\n+                                    <argument>..\/jcstress-contended-autoinjector\/target\/contended-autoinjector.jar<\/argument>\n+                                    <argument>${project.build.directory}\/classes\/<\/argument>\n+                                <\/arguments>\n+                            <\/configuration>\n+                        <\/execution>\n+                    <\/executions>\n+                <\/plugin>\n+            <\/plugins>\n+        <\/pluginManagement>\n+    <\/build>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.openjdk.jcstress<\/groupId>\n+            <artifactId>jcstress-core<\/artifactId>\n+            <version>${project.version}<\/version>\n+        <\/dependency>\n+        <dependency>\n+            <groupId>org.openjdk.jcstress<\/groupId>\n+            <artifactId>jcstress-test-gen<\/artifactId>\n+            <version>${project.version}<\/version>\n+            <scope>provided<\/scope>\n+        <\/dependency>\n+        <dependency>\n+            <groupId>org.openjdk.jcstress<\/groupId>\n+            <artifactId>jcstress-contended-autoinjector<\/artifactId>\n+            <version>${project.version}<\/version>\n+            <scope>provided<\/scope>\n+        <\/dependency>\n+    <\/dependencies>\n+<\/project>\n","filename":"jcstress-test-base\/pom.xml","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -160,0 +160,1 @@\n+\n@@ -330,0 +331,10 @@\n+            <dependency>\n+                <groupId>org.ow2.asm<\/groupId>\n+                <artifactId>asm<\/artifactId>\n+                <version>9.0<\/version>\n+            <\/dependency>\n+            <dependency>\n+                <groupId>org.ow2.asm<\/groupId>\n+                <artifactId>asm-util<\/artifactId>\n+                <version>9.0<\/version>\n+            <\/dependency>\n@@ -334,0 +345,1 @@\n+        <module>jcstress-test-base<\/module>\n@@ -336,0 +348,1 @@\n+        <module>jcstress-contended-autoinjector<\/module>\n","filename":"pom.xml","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -114,14 +116,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-0a\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -120,14 +122,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-0b\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -120,14 +122,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-0c\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -73,14 +75,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-0d\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -114,14 +116,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-0e\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -120,14 +122,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-1a\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -120,14 +122,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-1b\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -120,14 +122,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-1c\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -115,14 +117,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-1d\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -120,14 +122,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-2a\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -35,0 +36,1 @@\n+\n@@ -121,14 +123,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-test-gen<\/artifactId>\n-            <version>${project.version}<\/version>\n-            <scope>provided<\/scope>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-chapter-2b\/pom.xml","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        <artifactId>jcstress-parent<\/artifactId>\n+        <artifactId>jcstress-test-base<\/artifactId>\n@@ -34,0 +34,1 @@\n+        <relativePath>..\/jcstress-test-base<\/relativePath>\n@@ -72,0 +73,4 @@\n+            <plugin>\n+                <groupId>org.codehaus.mojo<\/groupId>\n+                <artifactId>exec-maven-plugin<\/artifactId>\n+            <\/plugin>\n@@ -74,8 +79,0 @@\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.openjdk.jcstress<\/groupId>\n-            <artifactId>jcstress-core<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-    <\/dependencies>\n","filename":"tests-custom\/pom.xml","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import sun.misc.Contended;\n@@ -54,2 +53,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/FencedAcquireReleaseTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import sun.misc.Contended;\n@@ -49,1 +48,0 @@\n-    @Contended\n@@ -51,2 +49,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/FencedDekkerTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import sun.misc.Contended;\n@@ -53,1 +52,0 @@\n-    @Contended\n@@ -55,2 +53,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/FencedReadTwiceTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import sun.misc.Contended;\n@@ -53,2 +52,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/UnfencedAcquireReleaseTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import sun.misc.Contended;\n@@ -49,1 +48,0 @@\n-    @Contended\n@@ -51,2 +49,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/UnfencedDekkerTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import sun.misc.Contended;\n@@ -52,1 +51,0 @@\n-    @Contended\n@@ -54,2 +52,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/UnfencedReadTwiceTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import sun.misc.Contended;\n@@ -56,2 +55,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/unsafe\/UnsafeAddLong1.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import sun.misc.Contended;\n@@ -56,2 +55,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/unsafe\/UnsafeAddLong42.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import sun.misc.Contended;\n@@ -51,1 +50,0 @@\n-    @Contended\n@@ -53,2 +51,0 @@\n-\n-    @Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/unsafe\/UnsafePutOrderedTwice.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,2 +37,0 @@\n-    @sun.misc.Contended\n-    @jdk.internal.vm.annotation.Contended\n@@ -40,3 +38,0 @@\n-\n-    @sun.misc.Contended\n-    @jdk.internal.vm.annotation.Contended\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/volatiles\/PowerSCViolation.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}