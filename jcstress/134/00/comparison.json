{"files":[{"patch":"@@ -69,0 +69,1 @@\n+    private boolean pretouchHeap;\n@@ -144,0 +145,3 @@\n+        OptionSpec<Boolean> optPretouchHeap = parser.accepts(\"pth\", \"Pre-touch Java heap, if possible.\")\n+                .withOptionalArg().ofType(Boolean.class).describedAs(\"bool\");\n+\n@@ -207,0 +211,1 @@\n+        this.pretouchHeap = true;\n@@ -216,0 +221,1 @@\n+            this.pretouchHeap = false;\n@@ -242,0 +248,1 @@\n+        this.pretouchHeap = orDefault(set.valueOf(optPretouchHeap), this.pretouchHeap);\n@@ -383,0 +390,5 @@\n+\n+    public boolean isPretouchHeap() {\n+        return pretouchHeap;\n+    }\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/Options.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -130,0 +130,14 @@\n+        \/\/ After heap size is set, check if we can pre-touch it. This would allow\n+        \/\/ tests to run in fully committed heap without experiencing the occasional\n+        \/\/ memory stalls. This also provides better safety in face of OS OOM-killers.\n+        \/\/ On large heaps, this might take a while, so users are allowed to disable\n+        \/\/ pre-touch for better performance.\n+\n+        if (opts.isPretouchHeap()) {\n+            detect(\"Enabling Java heap pre-touch\",\n+                    SimpleTestMain.class,\n+                    GLOBAL_JVM_FLAGS,\n+                    \"-XX:+AlwaysPreTouch\"\n+            );\n+        }\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/vm\/VMSupport.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}