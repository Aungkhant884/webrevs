{"files":[{"patch":"@@ -113,0 +113,5 @@\n+\n+        @Override\n+        public void purge() {\n+            \/\/ Do nothing\n+        }\n@@ -128,0 +133,5 @@\n+\n+        @Override\n+        public void purge() {\n+            \/\/ Do nothing\n+        }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/ForkedMain.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -351,3 +351,0 @@\n-        if (!isStateItself) {\n-            pw.println(\"    \" + t + \" test;\");\n-        }\n@@ -355,2 +352,0 @@\n-        pw.println(\"    \" + s + \"[] gs;\");\n-        pw.println(\"    \" + r + \"[] gr;\");\n@@ -375,3 +370,3 @@\n-            pw.println(\"        final \" + t + \" t;\");\n-            pw.println(\"        final \" + s + \" s;\");\n-            pw.println(\"        final \" + r + \" r;\");\n+            pw.println(\"        \" + t + \" t;\");\n+            pw.println(\"        \" + s + \" s;\");\n+            pw.println(\"        \" + r + \" r;\");\n@@ -391,0 +386,6 @@\n+            pw.println();\n+            pw.println(\"        public void purge() {\");\n+            pw.println(\"            t = null;\");\n+            pw.println(\"            s = null;\");\n+            pw.println(\"            r = null;\");\n+            pw.println(\"        }\");\n@@ -412,0 +413,1 @@\n+        \/\/ TODO: What if one thread throws, but we are waiting for the join on another?\n@@ -417,0 +419,1 @@\n+            pw.println(\"        a\" + a + \".purge();\");\n@@ -432,3 +435,3 @@\n-            pw.println(\"        final \" + s + \"[] ss;\");\n-            pw.println(\"        final \" + r + \"[] rs;\");\n-            pw.println(\"        final int size;\");\n+            pw.println(\"        \" + s + \"[] ss;\");\n+            pw.println(\"        \" + r + \"[] rs;\");\n+            pw.println(\"        int size;\");\n@@ -460,0 +463,5 @@\n+            pw.println();\n+            pw.println(\"        public void purge() {\");\n+            pw.println(\"            ss = null;\");\n+            pw.println(\"            rs = null;\");\n+            pw.println(\"        }\");\n@@ -497,0 +505,1 @@\n+            pw.println(\"                a\" + a + \".purge();\");\n@@ -523,1 +532,1 @@\n-            pw.println(\"        test = new \" + t + \"();\");\n+            pw.println(\"        \" + t + \" test = new \" + t + \"();\");\n@@ -526,2 +535,2 @@\n-        pw.println(\"        gs = new \" + s + \"[len];\");\n-        pw.println(\"        gr = new \" + r + \"[len];\");\n+        pw.println(\"        \" + s + \"[] ls = new \" + s + \"[len];\");\n+        pw.println(\"        \" + r + \"[] lr = new \" + r + \"[len];\");\n@@ -529,2 +538,2 @@\n-        pw.println(\"            gs[c] = new \" + s + \"();\");\n-        pw.println(\"            gr[c] = new \" + r + \"();\");\n+        pw.println(\"            ls[c] = new \" + s + \"();\");\n+        pw.println(\"            lr[c] = new \" + r + \"();\");\n@@ -551,1 +560,1 @@\n-            pw.println(\"        threads.add(new \" + name + \"());\");\n+            pw.println(\"        threads.add(new \" + name + \"(ls, lr, \" + (isStateItself ? \"null\" : \"test\") + \"));\");\n@@ -626,1 +635,5 @@\n-            pw.println(\"        public \" + name + \"() {\");\n+            pw.println(\"        \" + s + \"[] ss;\");\n+            pw.println(\"        \" + r + \"[] rs;\");\n+            pw.println(\"        \" + t + \" test;\");\n+            pw.println();\n+            pw.println(\"        public \" + name + \"(\" + s + \"[] ss, \" + r + \"[] rs, \" + t + \" test) {\");\n@@ -628,0 +641,3 @@\n+            pw.println(\"            this.ss = ss;\");\n+            pw.println(\"            this.rs = rs;\");\n+            pw.println(\"            this.test = test;\");\n@@ -635,2 +651,0 @@\n-            pw.println(\"            \" + s + \"[] ls = gs;\");\n-            pw.println(\"            \" + r + \"[] lr = gr;\");\n@@ -645,1 +659,1 @@\n-            pw.println(\"                    \" + STRIDE_LOOP_PREFIX + a.getSimpleName() + \"(ls, lr, start, start + stride);\");\n+            pw.println(\"                    \" + STRIDE_LOOP_PREFIX + a.getSimpleName() + \"(start, start + stride);\");\n@@ -650,1 +664,1 @@\n-            pw.println(\"                    \" + CONSUME_NI_PREFIX + \"final(counter, ls, lr, \" + (isStateItself ? \"null\" : \"test\") + \", len, \" + n + \");\");\n+            pw.println(\"                    \" + CONSUME_NI_PREFIX + \"final(counter, ss, rs, \" + (isStateItself ? \"null\" : \"test\") + \", len, \" + n + \");\");\n@@ -653,1 +667,1 @@\n-            pw.println(\"                    \" + CONSUME_PREFIX + \"reinit(counter, ls, lr, \" + (isStateItself ? \"null\" : \"test\") + \", len, \" + n + \");\");\n+            pw.println(\"                    \" + CONSUME_PREFIX + \"reinit(counter, ss, rs, \" + (isStateItself ? \"null\" : \"test\") + \", len, \" + n + \");\");\n@@ -662,1 +676,1 @@\n-            pw.println(\"        private void \" + STRIDE_LOOP_PREFIX + a.getSimpleName() + \"(\" + s + \"[] gs, \" + r + \"[] gr, int start, int end) {\");\n+            pw.println(\"        private void \" + STRIDE_LOOP_PREFIX + a.getSimpleName() + \"(int start, int end) {\");\n@@ -666,2 +680,2 @@\n-            pw.println(\"            \" + s + \"[] ls = gs;\");\n-            pw.println(\"            \" + r + \"[] lr = gr;\");\n+            pw.println(\"            \" + s + \"[] ls = ss;\");\n+            pw.println(\"            \" + r + \"[] lr = rs;\");\n@@ -698,0 +712,6 @@\n+            pw.println();\n+            pw.println(\"        public void purge() {\");\n+            pw.println(\"            ss = null;\");\n+            pw.println(\"            rs = null;\");\n+            pw.println(\"            test = null;\");\n+            pw.println(\"        }\");\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/processors\/JCStressTestProcessor.java","additions":46,"deletions":26,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -42,0 +42,2 @@\n+    public abstract void purge();\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/AbstractThread.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-            \/\/ do not go over the the limit\n+            \/\/ do not go over the limit\n@@ -107,1 +107,2 @@\n-            count *= 2;\n+            \/\/ slightly adjust for the next try\n+            count = Math.max((int)(count * 1.5), count + 1);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/ForkedTestConfig.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}