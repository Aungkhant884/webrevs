{"files":[{"patch":"@@ -331,1 +331,3 @@\n-                dumpFailure(sink, Collections.singleton(pendingException.getMessage()), Collections.emptyList());\n+                result = new TestResult(task, Status.VM_ERROR);\n+                result.addMessage(pendingException.getMessage());\n+                sink.add(result);\n@@ -359,5 +361,2 @@\n-                    dumpFailure(sink, out, err);\n-                } else {\n-                    result.addVMOuts(out);\n-                    result.addVMErrs(err);\n-                    sink.add(result);\n+                    result = new TestResult(task, Status.VM_ERROR);\n+                    result.addMessage(\"Failed with error code \" + ecode);\n@@ -365,0 +364,3 @@\n+                result.addVMOuts(out);\n+                result.addVMErrs(err);\n+                sink.add(result);\n@@ -366,1 +368,3 @@\n-                dumpFailure(sink, Collections.singleton(ex.getMessage()), Collections.emptyList());\n+                result = new TestResult(task, Status.VM_ERROR);\n+                result.addMessage(ex.getMessage());\n+                sink.add(result);\n@@ -375,12 +379,0 @@\n-        private void dumpFailure(TestResultCollector sink, Collection<String> out, Collection<String> err) {\n-            TestConfig task = getTask();\n-            TestResult result = new TestResult(task, Status.VM_ERROR);\n-            for (String i : out) {\n-                result.addMessage(i);\n-            }\n-            for (String i : err) {\n-                result.addMessage(i);\n-            }\n-            sink.add(result);\n-        }\n-\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -133,3 +133,5 @@\n-        if (!r.hasSamples()) {\n-            return;\n-        }\n+        if (r.hasSamples()) {\n+            int idLen = \"Observed state\".length();\n+            int occLen = \"Occurrences\".length();\n+            int expectLen = \"Expectation\".length();\n+            int descLen = 60;\n@@ -137,4 +139,5 @@\n-        int idLen = \"Observed state\".length();\n-        int occLen = \"Occurrences\".length();\n-        int expectLen = \"Expectation\".length();\n-        int descLen = 60;\n+            for (String s : r.getStateKeys()) {\n+                idLen = Math.max(idLen, s.length());\n+                occLen = Math.max(occLen, String.format(\"%,d\", r.getCount(s)).length());\n+                expectLen = Math.max(expectLen, Expect.UNKNOWN.toString().length());\n+            }\n@@ -142,5 +145,6 @@\n-        for (String s : r.getStateKeys()) {\n-            idLen = Math.max(idLen, s.length());\n-            occLen = Math.max(occLen, String.format(\"%,d\", r.getCount(s)).length());\n-            expectLen = Math.max(expectLen, Expect.UNKNOWN.toString().length());\n-        }\n+            TestInfo test = TestList.getInfo(r.getName());\n+            for (StateCase c : test.cases()) {\n+                idLen = Math.max(idLen, c.matchPattern().length());\n+                expectLen = Math.max(expectLen, c.expect().toString().length());\n+            }\n+            expectLen = Math.max(expectLen, test.unmatched().expect().toString().length());\n@@ -148,6 +152,3 @@\n-        TestInfo test = TestList.getInfo(r.getName());\n-        for (StateCase c : test.cases()) {\n-            idLen = Math.max(idLen, c.matchPattern().length());\n-            expectLen = Math.max(expectLen, c.expect().toString().length());\n-        }\n-        expectLen = Math.max(expectLen, test.unmatched().expect().toString().length());\n+            idLen += 2;\n+            occLen += 2;\n+            expectLen += 2;\n@@ -155,3 +156,1 @@\n-        idLen += 2;\n-        occLen += 2;\n-        expectLen += 2;\n+            pw.printf(\"%\" + idLen + \"s %\" + occLen + \"s %\" + expectLen + \"s  %-\" + descLen + \"s%n\", \"Observed state\", \"Occurrences\", \"Expectation\", \"Interpretation\");\n@@ -159,1 +158,7 @@\n-        pw.printf(\"%\" + idLen + \"s %\" + occLen +\"s %\" + expectLen + \"s  %-\" + descLen + \"s%n\", \"Observed state\", \"Occurrences\", \"Expectation\", \"Interpretation\");\n+            for (GradingResult gradeRes : r.grading().gradingResults) {\n+                pw.printf(\"%\" + idLen + \"s %,\" + occLen + \"d %\" + expectLen + \"s  %-\" + descLen + \"s%n\",\n+                        StringUtils.cutoff(gradeRes.id, idLen),\n+                        gradeRes.count,\n+                        gradeRes.expect,\n+                        StringUtils.cutoff(gradeRes.description, descLen));\n+            }\n@@ -161,6 +166,1 @@\n-        for (GradingResult gradeRes : r.grading().gradingResults) {\n-            pw.printf(\"%\" + idLen + \"s %,\" + occLen + \"d %\" + expectLen + \"s  %-\" + descLen + \"s%n\",\n-                    StringUtils.cutoff(gradeRes.id, idLen),\n-                    gradeRes.count,\n-                    gradeRes.expect,\n-                    StringUtils.cutoff(gradeRes.description, descLen));\n+            pw.println();\n@@ -169,2 +169,0 @@\n-        pw.println();\n-\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ReportUtils.java","additions":28,"deletions":30,"binary":false,"changes":58,"status":"modified"}]}