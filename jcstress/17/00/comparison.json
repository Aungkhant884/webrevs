{"files":[{"patch":"@@ -78,1 +78,1 @@\n-        ConsoleReportPrinter printer = new ConsoleReportPrinter(opts, new PrintWriter(out, true), tests.size(), configs.size());\n+        ConsoleReportPrinter printer = new ConsoleReportPrinter(opts, new PrintWriter(out, true), configs.size());\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/JCStress.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import org.openjdk.jcstress.infra.runners.TestConfig;\n@@ -35,1 +34,0 @@\n-import java.util.*;\n@@ -49,3 +47,0 @@\n-    private final long expectedTests;\n-    private final long expectedForks;\n-    private final long expectedResults;\n@@ -53,0 +48,1 @@\n+    private final long expectedResults;\n@@ -54,1 +50,0 @@\n-    private long observedCount;\n@@ -56,2 +51,2 @@\n-    private final Set<String> observedTests = Collections.newSetFromMap(new HashMap<>());\n-    private final Set<ConfigFork> observedForks = Collections.newSetFromMap(new HashMap<>());\n+    private long sampleCount;\n+    private long sampleResults;\n@@ -72,1 +67,1 @@\n-    public ConsoleReportPrinter(Options opts, PrintWriter pw, long expectedTests, long expectedForks) {\n+    public ConsoleReportPrinter(Options opts, PrintWriter pw, long expectedForks) {\n@@ -74,2 +69,0 @@\n-        this.expectedTests = expectedTests;\n-        this.expectedForks = expectedForks;\n@@ -87,1 +80,1 @@\n-        output.println(\"  Printing the progress line at least every \" + printIntervalMs + \" milliseconds.\");\n+        output.println(\"  Printing the progress line at most every \" + printIntervalMs + \" milliseconds.\");\n@@ -95,0 +88,4 @@\n+        } else {\n+            \/\/ First event does not have reliable time estimate, do not record it.\n+            sampleCount += r.getTotalCount();\n+            sampleResults++;\n@@ -97,2 +94,0 @@\n-        observedTests.add(r.getName());\n-        observedForks.add(new ConfigFork(r.getConfig()));\n@@ -100,2 +95,0 @@\n-        observedCount += r.getTotalCount();\n-\n@@ -157,1 +150,1 @@\n-            String line = String.format(\"(ETA: %10s) (Sample Rate: %s) (Tests: %d of %d) (Forks: %2d of %d) (Results: %2d of %d; %d passed, %d failed, %d soft errs, %d hard errs) \",\n+            String line = String.format(\"(ETA: %10s) (Sample Rate: %s) (Results: %2d of %d; %d passed, %d failed, %d soft errs, %d hard errs) \",\n@@ -160,2 +153,0 @@\n-                    observedTests.size(), expectedTests,\n-                    observedForks.size(), expectedForks,\n@@ -175,0 +166,4 @@\n+        if (sampleCount == 0) {\n+            return \"N\/A\";\n+        }\n+\n@@ -176,1 +171,1 @@\n-        double v = 1.0 * TimeUnit.SECONDS.toNanos(1) * observedCount \/ timeSpent;\n+        double v = 1.0 * TimeUnit.SECONDS.toNanos(1) * sampleCount \/ timeSpent;\n@@ -204,1 +199,1 @@\n-        long resultsGot = observedResults;\n+        long resultsGot = sampleResults;\n@@ -206,1 +201,1 @@\n-            return \"n\/a\";\n+            return \"N\/A\";\n@@ -232,26 +227,0 @@\n-    static class ConfigFork {\n-        private TestConfig config;\n-\n-        public ConfigFork(TestConfig config) {\n-            this.config = config;\n-        }\n-\n-        @Override\n-        public boolean equals(Object o) {\n-            if (this == o) return true;\n-            if (o == null || getClass() != o.getClass()) return false;\n-\n-            ConfigFork that = (ConfigFork) o;\n-\n-            if (config.forkId != that.config.forkId) return false;\n-            return config.equals(that.config);\n-        }\n-\n-        @Override\n-        public int hashCode() {\n-            int result = config.hashCode();\n-            result = 31 * result + config.forkId;\n-            return result;\n-        }\n-    }\n-\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ConsoleReportPrinter.java","additions":17,"deletions":48,"binary":false,"changes":65,"status":"modified"}]}