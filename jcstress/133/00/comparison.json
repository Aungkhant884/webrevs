{"files":[{"patch":"@@ -434,1 +434,1 @@\n-            pw.println(\"    private class \" + name + \" extends LongThread {\");\n+            pw.println(\"    private static class \" + name + \" extends LongThread {\");\n@@ -472,3 +472,8 @@\n-        pw.println(\"    private void \" + SANITY_CHECK_PREFIX + \"Resource(Counter<\" + r + \"> counter) throws Throwable {\");\n-        pw.println(\"        config.adjustStrideCount(new FootprintEstimator() {\");\n-        pw.println(\"          public void runWith(int size, long[] cnts) {\");\n+        pw.println(\"    private static class TestResourceEstimator implements ResourceEstimator {\");\n+        pw.println(\"        final Counter<\" + r + \"> counter;\");\n+        pw.println();\n+        pw.println(\"        public TestResourceEstimator(Counter<\" + r + \"> counter) {\");\n+        pw.println(\"            this.counter = counter;\");\n+        pw.println(\"        }\");\n+        pw.println();\n+        pw.println(\"        public void runWith(int size, long[] cnts) {\");\n@@ -525,1 +530,6 @@\n-        pw.println(\"        }});\");\n+        pw.println(\"        }\");\n+        pw.println(\"    }\");\n+        pw.println();\n+\n+        pw.println(\"    private void \" + SANITY_CHECK_PREFIX + \"Resource(Counter<\" + r + \"> counter) throws Throwable {\");\n+        pw.println(\"        config.adjustStrideCount(new TestResourceEstimator(counter));\");\n@@ -1052,1 +1062,1 @@\n-                FootprintEstimator.class,\n+                ResourceEstimator.class,\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/processors\/JCStressTestProcessor.java","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    public void adjustStrideCount(FootprintEstimator estimator) {\n+    public void adjustStrideCount(ResourceEstimator estimator) {\n@@ -107,2 +107,2 @@\n-            \/\/ slightly adjust for the next try\n-            count = Math.max((int)(count * 1.5), count + 1);\n+            \/\/ adjust for the next try\n+            count *= 2;\n@@ -115,1 +115,1 @@\n-    private boolean tryWith(FootprintEstimator estimator, int count) {\n+    private boolean tryWith(ResourceEstimator estimator, int count) {\n@@ -117,9 +117,2 @@\n-            long[] cnts = new long[2];\n-            estimator.runWith(count, cnts);\n-            long footprint = cnts[0];\n-            long usedTime = cnts[1];\n-\n-            if (footprint > maxFootprintMB * 1024 * 1024) {\n-                \/\/ blown the footprint estimate\n-                return false;\n-            }\n+            final long footprintThresh = maxFootprintMB * 1024 * 1024;\n+            final long timeThresh = TimeUnit.MILLISECONDS.toNanos(time);\n@@ -127,4 +120,9 @@\n-            if (TimeUnit.NANOSECONDS.toMillis(usedTime) > time) {\n-                \/\/ blown the time estimate\n-                return false;\n-            }\n+            \/\/ Try several times, to be more reliable when the test does not\n+            \/\/ run with the similar time\/footprint at the same count.\n+            final int tries = 5;\n+\n+            for (int t = 0; t < tries; t++) {\n+                long[] cnts = new long[2];\n+                estimator.runWith(count, cnts);\n+                long footprint = cnts[0];\n+                long usedTime = cnts[1];\n@@ -132,0 +130,9 @@\n+                if (footprint > footprintThresh) {\n+                    return false;\n+                }\n+\n+                if (usedTime > timeThresh) {\n+                    return false;\n+                }\n+            }\n+            return true;\n@@ -136,1 +143,0 @@\n-        return true;\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/ForkedTestConfig.java","additions":24,"deletions":18,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-public interface FootprintEstimator {\n+public interface ResourceEstimator {\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/ResourceEstimator.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/FootprintEstimator.java","status":"renamed"}]}