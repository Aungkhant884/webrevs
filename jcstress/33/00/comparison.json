{"files":[{"patch":"@@ -41,1 +41,1 @@\n-    public BinaryLinkClient(String hostName, int hostPort) throws IOException {\n+    public BinaryLinkClient(String hostName, int hostPort) {\n@@ -49,3 +49,1 @@\n-            Socket socket = null;\n-            try {\n-                socket = new Socket(hostName, hostPort);\n+            try (Socket socket = new Socket(hostName, hostPort)) {\n@@ -55,3 +53,4 @@\n-                ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());\n-                oos.writeObject(frame);\n-                oos.flush();\n+                try (BufferedOutputStream bos = new BufferedOutputStream(socket.getOutputStream());\n+                     ObjectOutputStream oos = new ObjectOutputStream(bos)) {\n+                    oos.writeObject(frame);\n+                    oos.flush();\n@@ -59,11 +58,6 @@\n-                ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\n-                Object o = ois.readObject();\n-\n-                oos.close();\n-                ois.close();\n-                return o;\n-            } catch (ClassNotFoundException e) {\n-                throw new IOException(e);\n-            } finally {\n-                if (socket != null) {\n-                    socket.close();\n+                    try (BufferedInputStream bis = new BufferedInputStream(socket.getInputStream());\n+                         ObjectInputStream ois = new ObjectInputStream(bis)) {\n+                        return ois.readObject();\n+                    } catch (ClassNotFoundException e) {\n+                        throw new IOException(e);\n+                    }\n@@ -75,1 +69,1 @@\n-    public TestConfig nextJob(String token) throws IOException, ClassNotFoundException {\n+    public TestConfig nextJob(String token) throws IOException {\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/link\/BinaryLinkClient.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -117,20 +117,19 @@\n-            Socket socket = null;\n-            try {\n-                socket = server.accept();\n-\n-                ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());\n-                Object obj = ois.readObject();\n-\n-                ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());\n-\n-                if (obj instanceof JobRequestFrame) {\n-                    String tkn = ((JobRequestFrame) obj).getToken();\n-                    TestConfig cfg = listener.onJobRequest(tkn);\n-                    oos.writeObject(new JobResponseFrame(cfg));\n-                } else if (obj instanceof ResultsFrame) {\n-                    ResultsFrame rf = (ResultsFrame) obj;\n-                    listener.onResult(rf.getToken(), rf.getRes());\n-                    oos.writeObject(new OkResponseFrame());\n-                } else {\n-                    \/\/ should always reply something\n-                    oos.writeObject(new WTFWasThatFrame());\n+            try (Socket socket = server.accept()) {\n+                try (BufferedInputStream bis = new BufferedInputStream(socket.getInputStream());\n+                     ObjectInputStream ois = new ObjectInputStream(bis)) {\n+                    Object obj = ois.readObject();\n+                    try (BufferedOutputStream bos = new BufferedOutputStream(socket.getOutputStream());\n+                         ObjectOutputStream oos = new ObjectOutputStream(bos)) {\n+                        if (obj instanceof JobRequestFrame) {\n+                            String tkn = ((JobRequestFrame) obj).getToken();\n+                            TestConfig cfg = listener.onJobRequest(tkn);\n+                            oos.writeObject(new JobResponseFrame(cfg));\n+                        } else if (obj instanceof ResultsFrame) {\n+                            ResultsFrame rf = (ResultsFrame) obj;\n+                            listener.onResult(rf.getToken(), rf.getRes());\n+                            oos.writeObject(new OkResponseFrame());\n+                        } else {\n+                            \/\/ should always reply something\n+                            oos.writeObject(new WTFWasThatFrame());\n+                        }\n+                    }\n@@ -138,3 +137,0 @@\n-\n-                oos.close();\n-                ois.close();\n@@ -145,8 +141,0 @@\n-            } finally {\n-                if (socket != null) {\n-                    try {\n-                        socket.close();\n-                    } catch (IOException e) {\n-                        \/\/ do nothing\n-                    }\n-                }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/link\/BinaryLinkServer.java","additions":19,"deletions":31,"binary":false,"changes":50,"status":"modified"}]}