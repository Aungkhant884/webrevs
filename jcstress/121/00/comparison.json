{"files":[{"patch":"@@ -564,4 +564,0 @@\n-        for (String type : new String[] { \"int\", \"short\", \"byte\", \"char\", \"long\", \"float\", \"double\", \"Object\" }) {\n-            pw.println(\"    private void \" + AUX_PREFIX + \"sink(\" + type + \" v) {};\");\n-        }\n-\n@@ -607,4 +603,2 @@\n-            \/\/ For results, we access the most convenient result field, and make sure\n-            \/\/ its null-checking effects stays behind by calling the empty method.\n-            \/\/ That method would be normally inlined and eliminated, but the NP-check\n-            \/\/ would persist.\n+            \/\/ For results, we access the most convenient result field, and access it.\n+            \/\/ Java rules require the JVMs to perform the NP-check there anyway.\n@@ -618,1 +612,1 @@\n-                pw.println(\"            \" + AUX_PREFIX + \"sink(r.jcstress_trap);\");\n+                pw.println(\"            int trap_r = r.jcstress_trap;\");\n@@ -624,1 +618,1 @@\n-                String sf = selectSinkField(info.getState());\n+                String[] sf = selectSinkField(info.getState());\n@@ -626,1 +620,1 @@\n-                    pw.println(\"            \" + AUX_PREFIX + \"sink(s.\" + sf + \");\");\n+                    pw.println(\"            \" + sf[0] + \" trap_s = s.\" + sf[1] + \";\");\n@@ -642,1 +636,1 @@\n-    private String selectSinkField(TypeElement cl) {\n+    private String[] selectSinkField(TypeElement cl) {\n@@ -653,1 +647,1 @@\n-                if (t.equals(typeP)) return var.getSimpleName().toString();\n+                if (t.equals(typeP)) return new String[] { t, var.getSimpleName().toString() };\n@@ -663,1 +657,1 @@\n-            return var.getSimpleName().toString();\n+            return new String[] { \"Object\", var.getSimpleName().toString() };\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/processors\/JCStressTestProcessor.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"}]}