{"files":[{"patch":"@@ -52,0 +52,7 @@\n+        makeTests(\n+                dest,\n+                GeneratorUtils.readFromResource(\"\/accessAtomic\/X-FieldConflictAtomicityTest.java.template\"),\n+                \"accessAtomic.fields.conflict\",\n+                new String[]{ \"\", \"volatile\" }\n+        );\n+\n","filename":"jcstress-test-gen\/src\/main\/java\/org\/openjdk\/jcstress\/chapters\/Chapter0aTestGenerator.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package $package$;\n+\n+import org.openjdk.jcstress.annotations.*;\n+import org.openjdk.jcstress.infra.results.*;\n+\n+#warn\n+\n+\/**\n+ * Tests if fields experience non-atomic reads\/writes.\n+ *\/\n+@JCStressTest\n+@Outcome(id = \"$default$\", expect = Expect.ACCEPTABLE, desc = \"Full store from T1.\")\n+@Outcome(id = \"$set$\", expect = Expect.ACCEPTABLE, desc = \"Full store from T2.\")\n+#if[alwaysAtomic]\n+@Outcome(expect = Expect.FORBIDDEN, desc = \"Conflicting stores: atomicity violation.\")\n+#else[alwaysAtomic]\n+@Outcome(expect = Expect.ACCEPTABLE_INTERESTING, desc = \"Conflicting stores, persisting non-atomic result.\")\n+@Ref(\"http:\/\/docs.oracle.com\/javase\/specs\/jls\/se7\/html\/jls-17.html#jls-17.7\")\n+#end[alwaysAtomic]\n+@State\n+public class $name$ {\n+\n+    $modifier$$type$ x;\n+\n+    @Actor\n+    public void actor1() {\n+        x = $defaultLiteral$;\n+    }\n+\n+    @Actor\n+    public void actor2() {\n+        x = $setLiteral$;\n+    }\n+\n+    @Arbiter\n+    public void check($T$_Result r) {\n+        r.r1 = x;\n+    }\n+\n+}\n","filename":"jcstress-test-gen\/src\/main\/resources\/accessAtomic\/X-FieldConflictAtomicityTest.java.template","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}