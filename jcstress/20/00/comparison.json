{"files":[{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.jcstress.tests.volatiles;\n-\n-import org.openjdk.jcstress.annotations.Actor;\n-import org.openjdk.jcstress.annotations.Description;\n-import org.openjdk.jcstress.annotations.Expect;\n-import org.openjdk.jcstress.annotations.JCStressTest;\n-import org.openjdk.jcstress.annotations.Outcome;\n-import org.openjdk.jcstress.annotations.Ref;\n-import org.openjdk.jcstress.annotations.State;\n-import org.openjdk.jcstress.infra.results.IIII_Result;\n-\n-@JCStressTest\n-@Description(\"Tests the IRIW sequential consistency.\")\n-@Outcome(id = \"0, 1, 1, 0\", expect = Expect.ACCEPTABLE, desc = \"This is a rare event, because it requires precise juxtaposition of threads to observe.\")\n-@Outcome(id = \"1, 0, 0, 1\", expect = Expect.ACCEPTABLE, desc = \"Threads see the updates in the inconsistent order\")\n-@Outcome(                     expect = Expect.ACCEPTABLE, desc =  \"All other cases are acceptable.\")\n-@Ref(\"http:\/\/cs.oswego.edu\/pipermail\/concurrency-interest\/2013-January\/010608.html\")\n-@State\n-public class IRIWTest {\n-\n-    public int x;\n-    public int y;\n-\n-    @Actor\n-    public void actor1() {\n-        x = 1;\n-    }\n-\n-    @Actor\n-    public void actor2() {\n-        y = 1;\n-    }\n-\n-    @Actor\n-    public void actor3(IIII_Result r) {\n-        r.r1 = x;\n-        r.r2 = y;\n-    }\n-\n-    @Actor\n-    public void actor4(IIII_Result r) {\n-        r.r4 = y;\n-        r.r3 = x;\n-    }\n-\n-}\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/volatiles\/IRIWTest.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.tests.volatiles;\n+\n+import org.openjdk.jcstress.annotations.*;\n+import org.openjdk.jcstress.infra.results.IIII_Result;\n+\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.VarHandle;\n+\n+@JCStressTest\n+@Description(\"Tests the IRIW sequential consistency: machine ordering case.\")\n+@Outcome(id = \"0, 1, 0, 1\", expect = Expect.ACCEPTABLE, desc = \"This is a rare event, because it requires precise juxtaposition of threads to observe.\")\n+@Outcome(id = \"1, 0, 1, 0\", expect = Expect.ACCEPTABLE_INTERESTING, desc = \"Threads see the updates in the inconsistent order\")\n+@Outcome(                   expect = Expect.ACCEPTABLE, desc = \"All other cases are acceptable.\")\n+@Ref(\"http:\/\/cs.oswego.edu\/pipermail\/concurrency-interest\/2013-January\/010608.html\")\n+@State\n+public class OpaqueIRIWTest {\n+\n+    static final VarHandle VH_X, VH_Y;\n+\n+    static {\n+        try {\n+            VH_X = MethodHandles.lookup().findVarHandle(OpaqueIRIWTest.class, \"x\", int.class);\n+            VH_Y = MethodHandles.lookup().findVarHandle(OpaqueIRIWTest.class, \"y\", int.class);\n+        } catch (NoSuchFieldException | IllegalAccessException e) {\n+            throw new IllegalStateException(e);\n+        }\n+    }\n+\n+    public int x;\n+    public int y;\n+\n+    @Actor\n+    public void actor1() {\n+        VH_X.setOpaque(this, 1);\n+    }\n+\n+    @Actor\n+    public void actor2() {\n+        VH_Y.setOpaque(this, 1);\n+    }\n+\n+    @Actor\n+    public void actor3(IIII_Result r) {\n+        r.r1 = (int) VH_X.getOpaque(this);\n+        r.r2 = (int) VH_Y.getOpaque(this);\n+    }\n+\n+    @Actor\n+    public void actor4(IIII_Result r) {\n+        r.r3 = (int) VH_Y.getOpaque(this);\n+        r.r4 = (int) VH_X.getOpaque(this);\n+    }\n+\n+}\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/volatiles\/OpaqueIRIWTest.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.tests.volatiles;\n+\n+import org.openjdk.jcstress.annotations.Actor;\n+import org.openjdk.jcstress.annotations.Description;\n+import org.openjdk.jcstress.annotations.Expect;\n+import org.openjdk.jcstress.annotations.JCStressTest;\n+import org.openjdk.jcstress.annotations.Outcome;\n+import org.openjdk.jcstress.annotations.Ref;\n+import org.openjdk.jcstress.annotations.State;\n+import org.openjdk.jcstress.infra.results.IIII_Result;\n+\n+@JCStressTest\n+@Description(\"Tests the IRIW sequential consistency: non-synchronized test.\")\n+@Outcome(id = \"0, 1, 0, 1\", expect = Expect.ACCEPTABLE, desc = \"This is a rare event, because it requires precise juxtaposition of threads to observe.\")\n+@Outcome(id = \"1, 0, 1, 0\", expect = Expect.ACCEPTABLE_INTERESTING, desc = \"Threads see the updates in the inconsistent order\")\n+@Outcome(                   expect = Expect.ACCEPTABLE, desc = \"All other cases are acceptable.\")\n+@Ref(\"http:\/\/cs.oswego.edu\/pipermail\/concurrency-interest\/2013-January\/010608.html\")\n+@State\n+public class RelaxedIRIWTest {\n+\n+    public int x;\n+    public int y;\n+\n+    @Actor\n+    public void actor1() {\n+        x = 1;\n+    }\n+\n+    @Actor\n+    public void actor2() {\n+        y = 1;\n+    }\n+\n+    @Actor\n+    public void actor3(IIII_Result r) {\n+        r.r1 = x;\n+        r.r2 = y;\n+    }\n+\n+    @Actor\n+    public void actor4(IIII_Result r) {\n+        r.r3 = y;\n+        r.r4 = x;\n+    }\n+\n+}\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/volatiles\/RelaxedIRIWTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -37,4 +37,4 @@\n-@Description(\"Tests the IRIW sequential consistency.\")\n-@Outcome(id = \"0, 1, 1, 0\", expect = Expect.ACCEPTABLE, desc = \"This is a rare event, because it requires precise juxtaposition of threads to observe.\")\n-@Outcome(id = \"1, 0, 0, 1\", expect = Expect.FORBIDDEN,  desc = \"Threads see the updates in the inconsistent order\")\n-@Outcome(                     expect = Expect.ACCEPTABLE, desc =  \"All other cases are acceptable.\")\n+@Description(\"Tests the IRIW sequential consistency: strongest case.\")\n+@Outcome(id = \"0, 1, 0, 1\", expect = Expect.ACCEPTABLE, desc = \"This is a rare event, because it requires precise juxtaposition of threads to observe.\")\n+@Outcome(id = \"1, 0, 1, 0\", expect = Expect.FORBIDDEN,  desc = \"Threads see the updates in the inconsistent order\")\n+@Outcome(                   expect = Expect.ACCEPTABLE, desc = \"All other cases are acceptable.\")\n@@ -66,2 +66,2 @@\n-        r.r4 = y;\n-        r.r3 = x;\n+        r.r3 = y;\n+        r.r4 = x;\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/volatiles\/VolatileIRIWTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}