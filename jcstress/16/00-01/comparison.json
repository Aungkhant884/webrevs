{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import org.openjdk.jcstress.vm.CompileMode;\n","filename":"jcstress-benchmarks\/src\/main\/java\/org\/openjdk\/jcstress\/SampleTestBench.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import org.openjdk.jcstress.vm.CompileMode;\n@@ -120,12 +121,1 @@\n-                        for (int cc = 0; cc < CompileMode.casesFor(info.threads()); cc++) {\n-                            CompileMode cm = new CompileMode(cc, info.actorNames(), info.threads());\n-                            if (config.onlyIfC2() && !cm.hasC2()) {\n-                                \/\/ This configuration is expected to run only when C2 is enabled,\n-                                \/\/ but compilation mode does not include C2. Can skip it to optimize\n-                                \/\/ testing time.\n-                                continue;\n-                            }\n-                            for (int f = 0; f < opts.getForks(); f++) {\n-                                configs.add(new TestConfig(opts, info, TestConfig.RunMode.FORKED, f, config.args(), cc));\n-                            }\n-                        }\n+                        forkedSplit(configs, config, info);\n@@ -133,3 +123,1 @@\n-                        for (int f = 0; f < opts.getForks(); f++) {\n-                            configs.add(new TestConfig(opts, info, TestConfig.RunMode.FORKED, f, config.args(), CompileMode.UNIFIED));\n-                        }\n+                        forkedUnified(configs, config, info);\n@@ -142,2 +130,1 @@\n-                TestConfig.RunMode mode = info.requiresFork() ? TestConfig.RunMode.FORKED : TestConfig.RunMode.EMBEDDED;\n-                configs.add(new TestConfig(opts, info, mode, -1, Collections.emptyList(), CompileMode.UNIFIED));\n+                embedded(configs, info);\n@@ -153,0 +140,26 @@\n+    private void forkedSplit(List<TestConfig> testConfigs, VMSupport.Config config, TestInfo info) {\n+        for (int cc = 0; cc < CompileMode.casesFor(info.threads()); cc++) {\n+            CompileMode cm = new CompileMode(cc, info.actorNames(), info.threads());\n+            if (config.onlyIfC2() && !cm.hasC2()) {\n+                \/\/ This configuration is expected to run only when C2 is enabled,\n+                \/\/ but compilation mode does not include C2. Can skip it to optimize\n+                \/\/ testing time.\n+                continue;\n+            }\n+            for (int f = 0; f < opts.getForks(); f++) {\n+                testConfigs.add(new TestConfig(opts, info, TestConfig.RunMode.FORKED, f, config.args(), cc));\n+            }\n+        }\n+    }\n+\n+    private void forkedUnified(List<TestConfig> testConfigs, VMSupport.Config config, TestInfo info) {\n+        for (int f = 0; f < opts.getForks(); f++) {\n+            testConfigs.add(new TestConfig(opts, info, TestConfig.RunMode.FORKED, f, config.args(), CompileMode.UNIFIED));\n+        }\n+    }\n+\n+    private void embedded(List<TestConfig> testConfigs, TestInfo info) {\n+        TestConfig.RunMode mode = info.requiresFork() ? TestConfig.RunMode.FORKED : TestConfig.RunMode.EMBEDDED;\n+        testConfigs.add(new TestConfig(opts, info, mode, -1, Collections.emptyList(), CompileMode.UNIFIED));\n+    }\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/JCStress.java","additions":30,"deletions":17,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import org.openjdk.jcstress.vm.CompileMode;\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import org.openjdk.jcstress.CompileMode;\n+import org.openjdk.jcstress.vm.CompileMode;\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/TestConfig.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package org.openjdk.jcstress;\n+package org.openjdk.jcstress.vm;\n@@ -113,1 +113,0 @@\n-\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/vm\/CompileMode.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/CompileMode.java","status":"renamed"},{"patch":"@@ -5,0 +5,1 @@\n+import org.openjdk.jcstress.vm.CompileMode;\n","filename":"jcstress-core\/src\/test\/java\/org\/openjdk\/jcstress\/CompileModeTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import org.openjdk.jcstress.vm.CompileMode;\n","filename":"jcstress-core\/src\/test\/java\/org\/openjdk\/jcstress\/EmbeddedExecutorTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}