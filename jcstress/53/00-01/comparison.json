{"files":[{"patch":"@@ -66,1 +66,1 @@\n-    private final AtomicInteger cntRunning;\n+    private final AtomicInteger jvmsRunning;\n@@ -88,5 +88,1 @@\n-        this.cntRunning = new AtomicInteger();\n-    }\n-\n-    public int getJVMsRunning() {\n-        return cntRunning.get();\n+        this.jvmsRunning = new AtomicInteger();\n@@ -188,0 +184,4 @@\n+    public int getJVMsRunning() {\n+        return jvmsRunning.get();\n+    }\n+\n@@ -354,1 +354,1 @@\n-                cntRunning.incrementAndGet();\n+                jvmsRunning.incrementAndGet();\n@@ -397,1 +397,1 @@\n-                cntRunning.decrementAndGet();\n+                jvmsRunning.decrementAndGet();\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -283,2 +283,3 @@\n-        if (use != currentActorUse) {\n-            throw new IllegalStateException(when + \": CPU use counts are inconsistent, counter = \" + currentActorUse + \", actually taken = \" + use);\n+        final int expected = currentActorUse + currentSystemUse;\n+        if (use != expected) {\n+            throw new IllegalStateException(when + \": CPU use counts are inconsistent, counter = \" + expected + \", actually taken = \" + use);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/os\/Scheduler.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -171,8 +171,0 @@\n-    public static String repeat(String s, int count) {\n-        StringBuilder sb = new StringBuilder();\n-        for (int c = 0; c < count; c++) {\n-            sb.append(s);\n-        }\n-        return sb.toString();\n-    }\n-\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/util\/StringUtils.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"}]}