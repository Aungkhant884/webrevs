{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jcstress.vm.VMSupport;\n@@ -36,2 +37,2 @@\n-    static final int DEFAULT_PER_TEST_MS = Integer.getInteger(\"jcstress.timeBudget.defaultPerTestMs\", 1000);\n-    static final int MIN_TIME_MS = Integer.getInteger(\"jcstress.timeBudget.minTimeMs\", 10);\n+    static final int DEFAULT_PER_TEST_MS = Integer.getInteger(\"jcstress.timeBudget.defaultPerTestMs\", 5000);\n+    static final int MIN_TIME_MS = Integer.getInteger(\"jcstress.timeBudget.minTimeMs\", 30);\n@@ -62,1 +63,4 @@\n-        return new TimeValue((long) expectedTests * DEFAULT_PER_TEST_MS, TimeUnit.MILLISECONDS);\n+        \/\/ Assume the nearly worst case, all 4-actor tests taking the cores exclusively.\n+        long expectedTotalTime = (long) expectedTests * DEFAULT_PER_TEST_MS;\n+        long expectedPerTest = expectedTotalTime \/ Math.max(1, VMSupport.figureOutHotCPUs() \/ 8);\n+        return new TimeValue(expectedPerTest, TimeUnit.MILLISECONDS);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TimeBudget.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}