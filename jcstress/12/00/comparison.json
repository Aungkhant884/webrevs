{"files":[{"patch":"@@ -85,1 +85,1 @@\n-                TestResult result = new TestResult(config, Status.API_MISMATCH, 0);\n+                TestResult result = new TestResult(config, Status.API_MISMATCH);\n@@ -89,1 +89,1 @@\n-                TestResult result = new TestResult(config, Status.TEST_ERROR, 0);\n+                TestResult result = new TestResult(config, Status.TEST_ERROR);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/EmbeddedExecutor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-                TestResult result = new TestResult(task, Status.VM_ERROR, -1);\n+                TestResult result = new TestResult(task, Status.VM_ERROR);\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-    private final int iterationId;\n@@ -51,1 +50,1 @@\n-    public TestResult(TestConfig config, Status status, int iterationId) {\n+    public TestResult(TestConfig config, Status status) {\n@@ -54,1 +53,0 @@\n-        this.iterationId = iterationId;\n@@ -59,4 +57,0 @@\n-    public int getIteration() {\n-        return iterationId;\n-    }\n-\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/collectors\/TestResult.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.io.FileNotFoundException;\n@@ -50,1 +49,0 @@\n-    private final long expectedIterations;\n@@ -52,0 +50,1 @@\n+    private final long expectedResults;\n@@ -53,1 +52,1 @@\n-    private long observedIterations;\n+    private long observedResults;\n@@ -76,1 +75,1 @@\n-        this.expectedIterations = expectedForks * (opts.getIterations() + 1); \/\/ +1 sanity check iteration #0\n+        this.expectedResults = expectedForks;\n@@ -99,1 +98,1 @@\n-        observedIterations++;\n+        observedResults++;\n@@ -157,1 +156,1 @@\n-            String line = String.format(\"(ETA: %10s) (Sample Rate: %s) (Tests: %d of %d) (Forks: %2d of %d) (Iterations: %2d of %d; %d passed, %d failed, %d soft errs, %d hard errs) \",\n+            String line = String.format(\"(ETA: %10s) (Sample Rate: %s) (Tests: %d of %d) (Forks: %2d of %d) (Results: %2d of %d; %d passed, %d failed, %d soft errs, %d hard errs) \",\n@@ -162,1 +161,1 @@\n-                    observedIterations, expectedIterations, passed, failed, softErrors, hardErrors\n+                    observedResults, expectedResults, passed, failed, softErrors, hardErrors\n@@ -204,1 +203,1 @@\n-        long resultsGot = observedIterations;\n+        long resultsGot = observedResults;\n@@ -209,1 +208,1 @@\n-        long nsToGo = (long)(timeSpent * (1.0 * (expectedIterations - 1) \/ resultsGot - 1));\n+        long nsToGo = (long)(timeSpent * (1.0 * (expectedResults - 1) \/ resultsGot - 1));\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ConsoleReportPrinter.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        TestResult root = new TestResult(config, status, 0);\n+        TestResult root = new TestResult(config, status);\n@@ -113,1 +113,1 @@\n-            pw.format(\"    (fork: #%d, iteration #%d, JVM args: %s)%n\",\n+            pw.format(\"    (fork: #%d, JVM args: %s)%n\",\n@@ -115,1 +115,0 @@\n-                    r.getIteration(),\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/grading\/ReportUtils.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -770,1 +770,1 @@\n-        pw.println(\"                dump(c, results);\");\n+        pw.println(\"                dump(results);\");\n@@ -772,2 +772,0 @@\n-        pw.println(\"            } else {\");\n-        pw.println(\"                dump(c, results);\");\n@@ -776,0 +774,1 @@\n+        pw.println(\"        dump(results);\");\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/processors\/JCStressTestProcessor.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -72,0 +72,3 @@\n+        @SuppressWarnings(\"unchecked\")\n+        Counter<R>[] results = (Counter<R>[]) new Counter[config.iters + 1];\n+\n@@ -73,1 +76,1 @@\n-            dump(0, sanityCheck());\n+            results[0] = sanityCheck();\n@@ -75,1 +78,1 @@\n-            dumpFailure(0, Status.API_MISMATCH, \"Test sanity check failed, skipping\", e);\n+            dumpFailure(Status.API_MISMATCH, \"Test sanity check failed, skipping\", e);\n@@ -78,1 +81,1 @@\n-            dumpFailure(0, Status.CHECK_TEST_ERROR, \"Check test failed\", e);\n+            dumpFailure(Status.CHECK_TEST_ERROR, \"Check test failed\", e);\n@@ -89,1 +92,1 @@\n-            dump(c, internalRun());\n+            results[c] = internalRun();\n@@ -91,0 +94,1 @@\n+        dump(results);\n@@ -93,2 +97,2 @@\n-    private TestResult prepareResult(int iteration, Status status) {\n-        TestResult result = new TestResult(config, status, iteration);\n+    private TestResult prepareResult(Status status) {\n+        TestResult result = new TestResult(config, status);\n@@ -102,1 +106,1 @@\n-    protected void dumpFailure(int iteration, Status status, String message) {\n+    protected void dumpFailure(Status status, String message) {\n@@ -104,1 +108,1 @@\n-        TestResult result = prepareResult(iteration, status);\n+        TestResult result = prepareResult(status);\n@@ -108,1 +112,1 @@\n-    protected void dumpFailure(int iteration, Status status, String message, Throwable aux) {\n+    protected void dumpFailure(Status status, String message, Throwable aux) {\n@@ -110,1 +114,1 @@\n-        TestResult result = prepareResult(iteration, status);\n+        TestResult result = prepareResult(status);\n@@ -115,4 +119,14 @@\n-    protected void dump(int iteration, Counter<R> results) {\n-        TestResult result = prepareResult(iteration, Status.NORMAL);\n-        for (R e : results.elementSet()) {\n-            result.addState(String.valueOf(e), results.count(e));\n+    protected void dump(Counter<R> cnt) {\n+        TestResult result = prepareResult(Status.NORMAL);\n+        for (R e : cnt.elementSet()) {\n+             result.addState(String.valueOf(e), cnt.count(e));\n+        }\n+        collector.add(result);\n+    }\n+\n+    protected void dump(Counter<R>[] results) {\n+        TestResult result = prepareResult(Status.NORMAL);\n+        for (Counter<R> cnt : results) {\n+            for (R e : cnt.elementSet()) {\n+                result.addState(String.valueOf(e), cnt.count(e));\n+            }\n@@ -138,1 +152,1 @@\n-                    dumpFailure(-1, Status.TEST_ERROR, \"Unrecoverable error while running\", e.getCause());\n+                    dumpFailure(Status.TEST_ERROR, \"Unrecoverable error while running\", e.getCause());\n@@ -147,1 +161,1 @@\n-                dumpFailure(-1, Status.TIMEOUT_ERROR, \"Timeout waiting for tasks to complete: \" + timeSpent + \" ms\");\n+                dumpFailure(Status.TIMEOUT_ERROR, \"Timeout waiting for tasks to complete: \" + timeSpent + \" ms\");\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/Runner.java","additions":30,"deletions":16,"binary":false,"changes":46,"status":"modified"}]}