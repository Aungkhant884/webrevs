{"files":[{"patch":"@@ -181,1 +181,2 @@\n-            for (int f = 0; f < opts.getForks(); f++) {\n+            int forks = opts.getForks() * (config.stress() ? opts.getForksStressMultiplier() : 1);\n+            for (int f = 0; f < forks; f++) {\n@@ -188,1 +189,2 @@\n-        for (int f = 0; f < opts.getForks(); f++) {\n+        int forks = opts.getForks() * (config.stress() ? opts.getForksStressMultiplier() : 1);\n+        for (int f = 0; f < forks; f++) {\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/JCStress.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+    private int forksStressMultiplier;\n@@ -120,0 +121,4 @@\n+        OptionSpec<Integer> forksStressMultiplier = parser.accepts(\"fsm\", \"Fork multiplier for randomized\/stress tests. \" +\n+                \"This allows more efficient randomized testing, as each fork would use a different seed.\")\n+                .withOptionalArg().ofType(Integer.class).describedAs(\"multiplier\");\n+\n@@ -199,0 +204,1 @@\n+        this.forksStressMultiplier = 5;\n@@ -207,0 +213,1 @@\n+            this.forksStressMultiplier = 1;\n@@ -209,2 +216,1 @@\n-        } else\n-        if (this.mode.equalsIgnoreCase(\"quick\")) {\n+        } else if (this.mode.equalsIgnoreCase(\"quick\")) {\n@@ -212,2 +218,2 @@\n-        } else\n-        if (this.mode.equalsIgnoreCase(\"default\")) {\n+            this.forksStressMultiplier = 1;\n+        } else if (this.mode.equalsIgnoreCase(\"default\")) {\n@@ -215,2 +221,1 @@\n-        } else\n-        if (this.mode.equalsIgnoreCase(\"tough\")) {\n+        } else if (this.mode.equalsIgnoreCase(\"tough\")) {\n@@ -219,2 +224,1 @@\n-        } else\n-        if (this.mode.equalsIgnoreCase(\"stress\")) {\n+        } else if (this.mode.equalsIgnoreCase(\"stress\")) {\n@@ -223,0 +227,1 @@\n+            this.forksStressMultiplier = 10;\n@@ -234,0 +239,1 @@\n+        this.forksStressMultiplier = orDefault(set.valueOf(forksStressMultiplier), this.forksStressMultiplier);\n@@ -273,0 +279,4 @@\n+    public int getForksStressMultiplier() {\n+        return forksStressMultiplier;\n+    }\n+\n@@ -279,1 +289,1 @@\n-        out.printf(\"    Forks per test: %d%n\", getForks());\n+        out.printf(\"    Forks per test: %d normal, %d stress%n\", getForks(), getForks()*getForksStressMultiplier());\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/Options.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-            configs.add(new Config(jvmArgs, false));\n+            configs.add(new Config(jvmArgs, false, false));\n@@ -268,1 +268,1 @@\n-            configs.add(new Config(Collections.emptyList(), false));\n+            configs.add(new Config(Collections.emptyList(), false, false));\n@@ -271,1 +271,1 @@\n-                configs.add(new Config(C2_STRESS_JVM_FLAGS, true));\n+                configs.add(new Config(C2_STRESS_JVM_FLAGS, true, true));\n@@ -275,1 +275,1 @@\n-            configs.add(new Config(Arrays.asList(\"-Xint\"), false));\n+            configs.add(new Config(Arrays.asList(\"-Xint\"), false, false));\n@@ -278,1 +278,1 @@\n-                configs.add(new Config(Arrays.asList(\"-XX:TieredStopAtLevel=1\"), false));\n+                configs.add(new Config(Arrays.asList(\"-XX:TieredStopAtLevel=1\"), false, false));\n@@ -282,1 +282,1 @@\n-                configs.add(new Config(Arrays.asList(\"-XX:-TieredCompilation\"), false));\n+                configs.add(new Config(Arrays.asList(\"-XX:-TieredCompilation\"), false, false));\n@@ -284,1 +284,1 @@\n-                configs.add(new Config(C2_ONLY_STRESS_JVM_FLAGS, true));\n+                configs.add(new Config(C2_ONLY_STRESS_JVM_FLAGS, true, true));\n@@ -302,1 +302,1 @@\n-                return new Config(l, c.onlyIfC2());\n+                return new Config(l, c.onlyIfC2(), c.stress());\n@@ -312,1 +312,1 @@\n-                return new Config(l, c.onlyIfC2());\n+                return new Config(l, c.onlyIfC2(), c.stress());\n@@ -470,0 +470,1 @@\n+        private final boolean stress;\n@@ -471,1 +472,1 @@\n-        private Config(List<String> args, boolean onlyIfC2) {\n+        private Config(List<String> args, boolean onlyIfC2, boolean stress) {\n@@ -474,0 +475,1 @@\n+            this.stress = stress;\n@@ -480,0 +482,4 @@\n+        public boolean stress() {\n+            return stress;\n+        }\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/vm\/VMSupport.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"}]}