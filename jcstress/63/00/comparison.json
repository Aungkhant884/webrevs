{"files":[{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.infra.results;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class I_Result_Test {\n+\n+    @Test\n+    public void testEquals() {\n+        I_Result res1 = new I_Result();\n+        res1.r1 = 1;\n+\n+        I_Result res2 = new I_Result();\n+        res2.r1 = 1;\n+\n+        I_Result res3 = new I_Result();\n+        res3.r1 = 2;\n+\n+        Assert.assertEquals(res1, res2);\n+        Assert.assertEquals(res1.hashCode(), res2.hashCode());\n+        Assert.assertNotEquals(res3, res1);\n+        Assert.assertNotEquals(res3, res2);\n+    }\n+\n+    @Test\n+    public void testCopy() {\n+        I_Result res1 = new I_Result();\n+        res1.r1 = 1;\n+\n+        Object res2 = res1.copy();\n+        Assert.assertEquals(res1, res2);\n+        Assert.assertEquals(res1.hashCode(), res2.hashCode());\n+        res1.r1 = 2;\n+        Assert.assertNotEquals(res1, res2);\n+    }\n+\n+}\n","filename":"jcstress-core\/src\/test\/java\/org\/openjdk\/jcstress\/infra\/results\/I_Result_Test.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.infra.results;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class L_Result_Test {\n+\n+    @Test\n+    public void testEquals() {\n+        Object o1 = new Object();\n+        Object o2 = new Object();\n+\n+        L_Result res1 = new L_Result();\n+        res1.r1 = o1;\n+\n+        L_Result res2 = new L_Result();\n+        res2.r1 = o1;\n+\n+        L_Result res3 = new L_Result();\n+        res3.r1 = o2;\n+\n+        Assert.assertEquals(res1, res2);\n+        Assert.assertEquals(res1.hashCode(), res2.hashCode());\n+        Assert.assertNotEquals(res3, res1);\n+        Assert.assertNotEquals(res3, res2);\n+    }\n+\n+}\n","filename":"jcstress-core\/src\/test\/java\/org\/openjdk\/jcstress\/infra\/results\/L_Result_Test.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -128,1 +128,1 @@\n-                    pw.print(\"0\");\n+                    pw.print(\"(r\" + n + \" == null ? 0 : r\" + n + \".hashCode())\");\n@@ -154,2 +154,1 @@\n-                }\n-                if (k == double.class) {\n+                } else if (k == double.class) {\n@@ -157,2 +156,1 @@\n-                }\n-                if (k == float.class) {\n+                } else if (k == float.class) {\n@@ -160,0 +158,2 @@\n+                } else {\n+                    pw.println(\"        if (!objEquals(r\" + n + \", that.r\" + n + \")) return false;\");\n@@ -194,0 +194,6 @@\n+        if (!allPrimitive) {\n+            pw.println(\"    private static boolean objEquals(Object a, Object b) {\");\n+            pw.println(\"        return a == b || a != null && a.equals(b);\");\n+            pw.println(\"    }\");\n+        }\n+\n","filename":"jcstress-result-gen\/src\/main\/java\/org\/openjdk\/jcstress\/ResultGenerator.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"}]}