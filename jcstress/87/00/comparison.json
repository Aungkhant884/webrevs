{"files":[{"patch":"@@ -54,1 +54,1 @@\n-                        <arg>-Xlint:all<\/arg>\n+                        <arg>-Xlint:all,-options,-serial<\/arg>\n","filename":"jcstress-core\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        Class clazz = Main.class;\n+        Class<?> clazz = Main.class;\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    Class value();\n+    Class<?> value();\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/annotations\/JCStressMeta.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,20 @@\n-        return Collections.singleton(JCStressTest.class.getName());\n+        List<Class<?>> classes = Arrays.asList(\n+                JCStressTest.class,\n+                JCStressMeta.class,\n+                State.class,\n+                Result.class,\n+                Actor.class,\n+                Arbiter.class,\n+                Signal.class,\n+                Outcome.class,\n+                Outcome.Outcomes.class,\n+                Ref.class,\n+                Ref.Refs.class,\n+                Description.class\n+        );\n+\n+        HashSet<String> set = new HashSet<>();\n+        for (Class<?> cl : classes) {\n+            set.add(cl.getCanonicalName());\n+        }\n+        return set;\n@@ -483,1 +502,1 @@\n-        pw.println(\"        for (CounterThread t : threads) {\");\n+        pw.println(\"        for (CounterThread<\" + r + \"> t : threads) {\");\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/processors\/JCStressTestProcessor.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -527,0 +527,1 @@\n+    @SuppressWarnings(\"fallthrough\")\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/os\/Scheduler.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-        for (Class k : args) {\n+        for (Class<?> k : args) {\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/util\/ResultUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-    public abstract int arrayBaseOffset(java.lang.Class aClass);\n+    public abstract int arrayBaseOffset(java.lang.Class<?> aClass);\n@@ -251,1 +251,1 @@\n-    public abstract int arrayIndexScale(java.lang.Class aClass);\n+    public abstract int arrayIndexScale(java.lang.Class<?> aClass);\n","filename":"jcstress-core\/src\/main\/java\/sun\/misc\/Unsafe.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        for (Class k : args) {\n+        for (Class<?> k : args) {\n@@ -91,1 +91,1 @@\n-            for (Class k : args) {\n+            for (Class<?> k : args) {\n@@ -111,1 +111,1 @@\n-            for (Class k : args) {\n+            for (Class<?> k : args) {\n@@ -150,1 +150,1 @@\n-            for (Class k : args) {\n+            for (Class<?> k : args) {\n@@ -173,1 +173,1 @@\n-            for (Class k : args) {\n+            for (Class<?> k : args) {\n","filename":"jcstress-result-gen\/src\/main\/java\/org\/openjdk\/jcstress\/ResultGenerator.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-        public Class[] all() {\n+        public Class<?>[] all() {\n","filename":"jcstress-test-gen\/src\/main\/java\/org\/openjdk\/jcstress\/generator\/TestGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -188,4 +188,2 @@\n-        Class[] klasses = new Class[mt.loadCount() + mt.allVariables().size()];\n-        for (int c = 0; c < klasses.length; c++) {\n-            klasses[c] = int.class;\n-        }\n+        Class<?>[] klasses = new Class<?>[mt.loadCount() + mt.allVariables().size()];\n+        Arrays.fill(klasses, int.class);\n","filename":"jcstress-test-gen\/src\/main\/java\/org\/openjdk\/jcstress\/generator\/seqcst\/SeqCstTraceGenerator.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,2 +55,3 @@\n-        r.r1 = field;\n-        x = ($type$) r.r1;\n+        $type$ t = field;\n+        x = t;\n+        r.r1 = t;\n","filename":"jcstress-test-gen\/src\/main\/resources\/fences\/X-LoadStoreFenceTest1.java.template","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -55,2 +55,3 @@\n-        r.r1 = y;\n-        field = ($type$) r.r1;\n+        $type$ t = y;\n+        field = t;\n+        r.r1 = t;\n","filename":"jcstress-test-gen\/src\/main\/resources\/fences\/X-LoadStoreFenceTest2.java.template","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                    <version>3.8.0<\/version>\n+                    <version>3.8.1<\/version>\n@@ -85,0 +85,5 @@\n+                        <compilerArgs>\n+                            <arg>-Xlint:all,-deprecation,-options,-serial,-processing<\/arg>\n+                            <arg>-Werror<\/arg>\n+                        <\/compilerArgs>\n+                        <showWarnings>true<\/showWarnings>\n","filename":"pom.xml","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}