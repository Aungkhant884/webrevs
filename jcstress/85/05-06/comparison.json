{"files":[{"patch":"@@ -47,1 +47,11 @@\n- *\n+ * All samples for mutex algorithm use a trick:\n+ * Instead of telling their results they themselves have entered the critical section,\n+ * they witness whether both actors have entered the critical section at the same time.\n+ * The actors achieve that by setting their result to the state of the other actor\n+ * because their own state is clear at that moment: they are in the critical section.\n+ * Therefore, only the state of the other actor is relevant.\n+ * And if the other actor's state is true, then the actor has observed both actors have been in the section at the same time.\n+ * Otherwise he hasn't observed.\n+ * As both actors do that, at least one actor will always witness it because\n+ * even if both actors are in the critical section and one actor leaves it too fast\n+ * so that the otheractor cannot observe it anymore, the one actor who left it so fast will have observed it.\n","filename":"jcstress-samples\/src\/main\/java\/org\/openjdk\/jcstress\/samples\/concurreny\/mutex\/Mutex_01_NoAlgorithm.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}