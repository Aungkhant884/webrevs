{"files":[{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.ByteVector;\n+import jdk.incubator.vector.Vector;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+import java.util.Arrays;\n+\n+import jdk.test.lib.format.ArrayDiff;\n+\n+\/*\n+ * @test\n+ * @bug 8259353 8259601\n+ * @summary VectorReinterpretNode is incorrectly optimized out\n+ * @modules jdk.incubator.vector\n+ * @library \/test\/lib\n+ *\n+ * @run main compiler.vectorapi.Test8259353\n+ *\/\n+public class Test8259353 {\n+\n+    static final VectorSpecies<Byte> SPECIES_128 = ByteVector.SPECIES_128;\n+    static final VectorSpecies<Byte> SPECIES_64 = ByteVector.SPECIES_64;\n+\n+    static final byte[] a = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};\n+    static final byte[] b = new byte[16];\n+    static final byte[] c = new byte[16];\n+    static final byte[] r = {0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0};\n+\n+    private static void func() {\n+        var av = ByteVector.fromArray(SPECIES_128, a, 0);\n+        var bv = (ByteVector)av.reinterpretShape(SPECIES_64, 0);\n+        bv.intoArray(b, 0);\n+\n+        var cv = (ByteVector)bv.reinterpretShape(SPECIES_128, 0);\n+        cv.intoArray(c, 0);\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 100000; i++) {\n+            func();\n+        }\n+\n+        System.out.println(\"a: \" + Arrays.toString(a));\n+        System.out.println(\"b: \" + Arrays.toString(b));\n+        System.out.println(\"c: \" + Arrays.toString(c));\n+\n+        var diff = ArrayDiff.of(b, r);\n+        if (!diff.areEqual()) {\n+            throw new AssertionError(\"b array is unexpected: \" + diff.format());\n+        }\n+\n+        diff = ArrayDiff.of(c, r);\n+        if (!diff.areEqual()) {\n+            throw new AssertionError(\"c array is unexpected: \" + diff.format());\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/Test8259353.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"}]}