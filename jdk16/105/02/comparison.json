{"files":[{"patch":"@@ -2048,1 +2048,2 @@\n-  if (is_instance) {\n+  bool is_vect = (_type->isa_vect() != NULL);\n+  if (is_instance && !is_vect) {\n@@ -2051,1 +2052,2 @@\n-    \/\/ so just return a zero of the appropriate type\n+    \/\/ so just return a zero of the appropriate type -\n+    \/\/ except if it is vectorized - then we have no zero constant.\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8258272\n+ * @summary Test that LoadVectorMaskedNodes works when the source array is known to only contain zeros\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:CompileCommand=dontinline,*::testArrayCopy*\n+ *                   compiler.arraycopy.TestArrayCopyMaskedWithZeroSrc\n+ *\/\n+\n+package compiler.arraycopy;\n+\n+import java.util.*;\n+\n+public class TestArrayCopyMaskedWithZeroSrc {\n+\n+    public static void main(String[] args) {\n+        TestArrayCopyMaskedWithZeroSrc t = new TestArrayCopyMaskedWithZeroSrc();\n+        t.test();\n+    }\n+\n+    void test() {\n+        for (int i = 0; i < 20000; i++) {\n+            testArrayCopy1(3);\n+        }\n+    }\n+\n+    \/\/ src is allocated locally - it is known it only contains zeros.\n+    \/\/ The copy of will exapnd into LoadVectorMasked on AVX512 machines\n+    \/\/ LoadNode::value will try to replace the load from src with a zero constant.\n+\n+    byte [] testArrayCopy1(int partial_len) {\n+        byte [] src = new byte[5];\n+        byte [] dest = Arrays.copyOf(src, partial_len);\n+        return dest;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyMaskedWithZeroSrc.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}