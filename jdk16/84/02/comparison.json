{"files":[{"patch":"@@ -892,1 +892,1 @@\n-            return address;\n+            return address + pagePosition;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -467,0 +467,22 @@\n+    @Test\n+    public void testMapOffset() throws IOException {\n+        File f = new File(\"testMapOffset.out\");\n+        f.createNewFile();\n+        f.deleteOnExit();\n+\n+        int SIZE = Byte.MAX_VALUE;\n+\n+        try (MemorySegment segment = MemorySegment.mapFile(f.toPath(), 0, SIZE, FileChannel.MapMode.READ_WRITE)) {\n+            for (byte offset = 0; offset < SIZE; offset++) {\n+                MemoryAccess.setByteAtOffset(segment, offset, offset);\n+            }\n+            MappedMemorySegments.force(segment);\n+        }\n+\n+        for (int offset = 0 ; offset < SIZE ; offset++) {\n+            try (MemorySegment segment = MemorySegment.mapFile(f.toPath(), offset, SIZE - offset, FileChannel.MapMode.READ_ONLY)) {\n+                assertEquals(MemoryAccess.getByte(segment), offset);\n+            }\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}