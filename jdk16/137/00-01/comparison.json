{"files":[{"patch":"@@ -37,0 +37,1 @@\n+\/\/ the test code is derived from a randomly generated test\n@@ -38,3 +39,3 @@\n-    int a = 400;\n-    static int counter = 0;\n-    long b[] = new long[a];\n+    private static class MyException extends RuntimeException { }\n+    private static final int ITERATIONS = 100000;\n+    private static final int SIZE = 400;\n@@ -42,8 +43,10 @@\n-    void c(String[] d) {\n-        int e = 0, f, g, h, i[] = new int[a];\n-        long j;\n-        f = 2;\n-        b[f] = e;\n-        b = b;\n-        for (j = 301; j > 2; j -= 2) {\n-            g = 1;\n+    private static int counter = 0;\n+\n+    int[] array1 = new int[SIZE];\n+\n+    void test() {\n+        int[] array2 = new int[SIZE];\n+        array1[2] = 0;\n+        array1 = array1;\n+        for (long i = 301; i > 2; i -= 2) {\n+            int j = 1;\n@@ -51,3 +54,2 @@\n-                for (h = (int) j; h < 1; h++) {\n-                }\n-            } while (++g < 4);\n+               for (int k = (int) i; k < 1; k++) { }\n+            } while (++j < 4);\n@@ -55,0 +57,1 @@\n+\n@@ -56,2 +59,2 @@\n-        if (counter == 100000) {\n-            throw new RuntimeException(\"expected\");\n+        if (counter == ITERATIONS) {\n+            throw new MyException();\n@@ -61,1 +64,1 @@\n-    public static void main(String[] k) {\n+    public static void main(String[] args) {\n@@ -63,3 +66,3 @@\n-            TestLoopLimitNodeElimination l = new TestLoopLimitNodeElimination();\n-            for (;;) {\n-                l.c(k);\n+            var test = new TestLoopLimitNodeElimination();\n+            while (true) {\n+                test.test();\n@@ -67,2 +70,2 @@\n-        } catch (RuntimeException ex) {\n-            \/\/ Expected\n+        } catch (MyException e) {\n+            \/\/ expected\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestLoopLimitNodeElimination.java","additions":25,"deletions":22,"binary":false,"changes":47,"status":"modified"}]}