[{"commit":{"message":"Move asterisk in pointer declaration for consistency"},"files":[{"filename":"src\/hotspot\/share\/opto\/block.cpp"}],"sha":"4f2763c2b0c178273b9f36c8ed13f9f43b14929e"},{"commit":{"message":"Merge master"},"files":[],"sha":"622299c3f2cc4934554f3ed4988418d2b16581d5"},{"commit":{"message":"8255763: C2: OSR miscompilation caused by invalid memory instruction placement\n\nDisable GCM hoisting of memory-writing nodes for irreducible CFGs. This prevents\nGCM from wrongly \"hoisting\" stores into descendants of their original loop. Such\nan \"inverted hoisting\" can happen due to CFGLoop::compute_freq()'s inaccurate\nestimation of frequencies for irreducible CFGs.\n\nExtend CFG verification code by checking that memory-writing nodes are placed in\neither their original loop or an ancestor.\n\nAdd tests for the reducible and irreducible cases. The former was already\nhandled correctly before the change (the frequency estimation model prevents\n\"inverted hoisting\" for reducible CFGs), and is just added for coverage.\n\nThis change addresses the specific miscompilation issue in a conservative way,\nfor simplicity and risk reduction. Future work includes discarding only illegal\nblocks as candidates for GCM hoisting, and refining frequency estimation for\nirreducible CFGs."},"files":[{"filename":"src\/hotspot\/share\/opto\/block.cpp"},{"filename":"src\/hotspot\/share\/opto\/block.hpp"},{"filename":"src\/hotspot\/share\/opto\/gcm.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestGCMStorePlacement.java"}],"sha":"a839f8cd62c4b029260a51e2cb0f3be206c55a4d"}]