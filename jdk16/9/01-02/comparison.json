{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8257822\n+ * @bug 8229496\n@@ -30,2 +30,12 @@\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=compiler\/loopopts\/TestDivZeroWithSplitIf::test\n- *                   -XX:+StressGCM -XX:StressSeed=873732072 compiler.loopopts.TestDivZeroWithSplitIf\n+ * @run main\/othervm -Xbatch -XX:LoopUnrollLimit=0\n+ *                   -XX:CompileCommand=dontinline,compiler.loopopts.TestDivZeroCheckControl::test*\n+ *                   compiler.loopopts.TestDivZeroCheckControl\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Verify that zero check is executed before division\/modulo operation.\n+ * @requires vm.graal.enabled\n+ * @run main\/othervm -Xbatch\n+ *                   -XX:CompileCommand=dontinline,compiler.loopopts.TestDivZeroCheckControl::test*\n+ *                   compiler.loopopts.TestDivZeroCheckControl\n@@ -36,2 +46,1 @@\n-public class TestDivZeroWithSplitIf {\n-    public static int iArrFld[] = new int[10];\n+public class TestDivZeroCheckControl {\n@@ -39,19 +48,10 @@\n-    public static void test() {\n-        int x = 20;\n-        int y = 0;\n-        int z = 10;\n-        for (int i = 9; i < 99; i += 2) {\n-            for (int j = 3; j < 100; j++) {\n-                for (int k = 1; k < 2; k++) {\n-                    try {\n-                        x = (-65229 \/ y); \/\/ Division by zero\n-                        z = (iArrFld[5] \/ 8); \/\/ RangeCheckNode\n-                    } catch (ArithmeticException a_e) {}\n-                    try {\n-                        y = (-38077 \/ y);\n-                        z = (y \/ 9);\n-                    } catch (ArithmeticException a_e) {}\n-                    y = 8;\n-                    z += k;\n-                }\n-            }\n+    public static int test1(int div, int array[]) {\n+        int res = 0;\n+        for (int i = 0; i < 256; i++) {\n+            int j = 0;\n+            do {\n+                array[i] = i;\n+                try {\n+                    res = 1 % div;\n+                } catch (ArithmeticException ex) { }\n+            } while (++j < 9);\n@@ -59,0 +59,1 @@\n+        return res;\n@@ -60,3 +61,12 @@\n-    public static void main(String[] strArr) {\n-        for (int i = 0; i < 10; i++) {\n-            test();\n+\n+    \/\/ Same as test1 but with division instead of modulo\n+    public static int test2(int div, int array[]) {\n+        int res = 0;\n+        for (int i = 0; i < 256; i++) {\n+            int j = 0;\n+            do {\n+                array[i] = i;\n+                try {\n+                    res = 1 \/ div;\n+                } catch (ArithmeticException ex) { }\n+            } while (++j < 9);\n@@ -64,0 +74,31 @@\n+        return res;\n+    }\n+\n+    \/\/ Same as test1 but with long\n+    public static long test3(long div, int array[]) {\n+        long res = 0;\n+        for (int i = 0; i < 256; i++) {\n+            int j = 0;\n+            do {\n+                array[i] = i;\n+                try {\n+                    res = 1L % div;\n+                } catch (ArithmeticException ex) { }\n+            } while (++j < 9);\n+        }\n+        return res;\n+    }\n+\n+    \/\/ Same as test2 but with long\n+    public static long test4(long div, int array[]) {\n+        long res = 0;\n+        for (int i = 0; i < 256; i++) {\n+            int j = 0;\n+            do {\n+                array[i] = i;\n+                try {\n+                    res = 1L \/ div;\n+                } catch (ArithmeticException ex) { }\n+            } while (++j < 9);\n+        }\n+        return res;\n@@ -65,1 +106,0 @@\n-}\n@@ -67,0 +107,10 @@\n+    public static void main(String[] args) {\n+        int array[] = new int[256];\n+        for (int i = 0; i < 50_000; ++i) {\n+            test1(0, array);\n+            test2(0, array);\n+            test3(0, array);\n+            test4(0, array);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDivZeroCheckControl.java","additions":79,"deletions":29,"binary":false,"changes":108,"status":"modified"},{"patch":"","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDivZeroWithSplitIf.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDivZeroCheckControl.java","status":"copied"}]}