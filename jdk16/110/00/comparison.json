{"files":[{"patch":"@@ -206,1 +206,1 @@\n-        address = db.address() + off;\n+        address = ((Buffer)db).address + off;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Direct-X-Buffer.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+import java.util.function.Supplier;\n@@ -651,0 +652,17 @@\n+    @Test(dataProvider=\"segments\")\n+    public void viewsFromSharedSegment(Supplier<MemorySegment> segmentSupplier) {\n+        try (MemorySegment segment = segmentSupplier.get().share()) {\n+            var byteBuffer = segment.asByteBuffer();\n+            byteBuffer.asReadOnlyBuffer();\n+            byteBuffer.slice(0, 8);\n+        }\n+    }\n+\n+    @DataProvider(name = \"segments\")\n+    public static Object[][] segments() throws Throwable {\n+        return new Object[][] {\n+                { (Supplier<MemorySegment>) () -> MemorySegment.allocateNative(16) },\n+                { (Supplier<MemorySegment>) () -> MemorySegment.ofArray(new byte[16]) }\n+        };\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}