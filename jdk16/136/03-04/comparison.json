{"files":[{"patch":"@@ -43,2 +43,2 @@\n-    private static byte[]  bytesA,  bytesB,  bytesC;\n-    private static short[] shortsA, shortsB, shortsC;\n+    private static byte[]  bytesA,  bytesB,  bytesC,  bytesD;\n+    private static short[] shortsA, shortsB, shortsC, shortsD;\n@@ -88,1 +88,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -91,0 +91,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS]));\n@@ -94,1 +95,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -97,0 +98,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 1]));\n@@ -100,1 +102,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -103,0 +105,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 2]));\n@@ -106,1 +109,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -109,0 +112,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 3]));\n@@ -111,2 +115,2 @@\n-            bytesC[i] = (byte) (bytesA[i] + (bytesB[i] >>> 2));\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesC[i] = (byte) (bytesA[i] + (bytesB[i] >>> 1));\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -115,0 +119,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 4]));\n@@ -118,1 +123,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -121,0 +126,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 5]));\n@@ -124,1 +130,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -127,0 +133,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 6]));\n@@ -130,1 +137,1 @@\n-            bytesC[i] = (byte) (bytesC[i] + bytesA[i] + bytesB[i]);\n+            bytesD[i] = (byte) (bytesA[i] + bytesB[i]);\n@@ -133,0 +140,1 @@\n+        assertTrue(Arrays.equals(bytesD, gBytes[MAX_TESTS + 7]));\n@@ -137,2 +145,2 @@\n-            shortsC[i] = (short) (shortsA[i] + (shortsB[i] >> 7));\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsC[i] = (short) (shortsA[i] + (shortsB[i] >> 5));\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -141,0 +149,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS]));\n@@ -144,1 +153,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -147,0 +156,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 1]));\n@@ -150,1 +160,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -153,0 +163,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 2]));\n@@ -156,1 +167,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -159,0 +170,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 3]));\n@@ -162,1 +174,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -165,0 +177,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 4]));\n@@ -168,1 +181,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -171,0 +184,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 5]));\n@@ -174,1 +188,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -177,0 +191,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 6]));\n@@ -180,1 +195,1 @@\n-            shortsC[i] = (short) (shortsC[i] + shortsA[i] + shortsB[i]);\n+            shortsD[i] = (short) (shortsA[i] + shortsB[i]);\n@@ -183,0 +198,1 @@\n+        assertTrue(Arrays.equals(shortsD, gShorts[MAX_TESTS + 7]));\n@@ -330,2 +346,5 @@\n-        gBytes  = new byte[MAX_TESTS][count];\n-        gShorts = new short[MAX_TESTS][count];\n+        bytesD  = new byte[count];\n+        shortsD = new short[count];\n+\n+        gBytes  = new byte[MAX_TESTS * 2][count];\n+        gShorts = new short[MAX_TESTS * 2][count];\n@@ -351,33 +370,33 @@\n-            gBytes[0][i]  = (byte) (bytesA[i] + (bytesB[i] >> 1));\n-            gBytes[0][i]  = (byte) (gBytes[0][i] + bytesA[i] + bytesB[i]);\n-            gBytes[1][i]  = (byte) (bytesA[i] + (bytesB[i] >> 8));\n-            gBytes[1][i]  = (byte) (gBytes[1][i] + bytesA[i] + bytesB[i]);\n-            gBytes[2][i]  = (byte) (bytesA[i] + (bytesB[i] >> 13));\n-            gBytes[2][i]  = (byte) (gBytes[2][i] + bytesA[i] + bytesB[i]);\n-            gBytes[3][i]  = (byte) (bytesA[i] + (bytesB[i] >> 19));\n-            gBytes[3][i]  = (byte) (gBytes[3][i] + bytesA[i] + bytesB[i]);\n-            gBytes[4][i]  = (byte) (bytesA[i] + (bytesB[i] >>> 2));\n-            gBytes[4][i]  = (byte) (gBytes[4][i] + bytesA[i] + bytesB[i]);\n-            gBytes[5][i]  = (byte) (bytesA[i] + (bytesB[i] >>> 8));\n-            gBytes[5][i]  = (byte) (gBytes[5][i] + bytesA[i] + bytesB[i]);\n-            gBytes[6][i]  = (byte) (bytesA[i] + (bytesB[i] >>> 13));\n-            gBytes[6][i]  = (byte) (gBytes[6][i] + bytesA[i] + bytesB[i]);\n-            gBytes[7][i]  = (byte) (bytesA[i] + (bytesB[i] >>> 19));\n-            gBytes[7][i]  = (byte) (gBytes[7][i] + bytesA[i] + bytesB[i]);\n-\n-            gShorts[0][i]  = (short) (shortsA[i] + (shortsB[i] >> 7));\n-            gShorts[0][i]  = (short) (gShorts[0][i] + shortsA[i] + shortsB[i]);\n-            gShorts[1][i]  = (short) (shortsA[i] + (shortsB[i] >> 16));\n-            gShorts[1][i]  = (short) (gShorts[1][i] + shortsA[i] + shortsB[i]);\n-            gShorts[2][i]  = (short) (shortsA[i] + (shortsB[i] >> 23));\n-            gShorts[2][i]  = (short) (gShorts[2][i] + shortsA[i] + shortsB[i]);\n-            gShorts[3][i]  = (short) (shortsA[i] + (shortsB[i] >> 35));\n-            gShorts[3][i]  = (short) (gShorts[3][i] + shortsA[i] + shortsB[i]);\n-            gShorts[4][i]  = (short) (shortsA[i] + (shortsB[i] >>> 7));\n-            gShorts[4][i]  = (short) (gShorts[4][i] + shortsA[i] + shortsB[i]);\n-            gShorts[5][i]  = (short) (shortsA[i] + (shortsB[i] >>> 16));\n-            gShorts[5][i]  = (short) (gShorts[5][i] + shortsA[i] + shortsB[i]);\n-            gShorts[6][i]  = (short) (shortsA[i] + (shortsB[i] >>> 23));\n-            gShorts[6][i]  = (short) (gShorts[6][i] + shortsA[i] + shortsB[i]);\n-            gShorts[7][i]  = (short) (shortsA[i] + (shortsB[i] >>> 35));\n-            gShorts[7][i]  = (short) (gShorts[7][i] + shortsA[i] + shortsB[i]);\n+            gBytes[0][i]              = (byte) (bytesA[i] + (bytesB[i] >> 1));\n+            gBytes[MAX_TESTS][i]      = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[1][i]              = (byte) (bytesA[i] + (bytesB[i] >> 8));\n+            gBytes[MAX_TESTS + 1][i]  = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[2][i]              = (byte) (bytesA[i] + (bytesB[i] >> 13));\n+            gBytes[MAX_TESTS + 2][i]  = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[3][i]              = (byte) (bytesA[i] + (bytesB[i] >> 19));\n+            gBytes[MAX_TESTS + 3][i]  = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[4][i]              = (byte) (bytesA[i] + (bytesB[i] >>> 1));\n+            gBytes[MAX_TESTS + 4][i]  = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[5][i]              = (byte) (bytesA[i] + (bytesB[i] >>> 8));\n+            gBytes[MAX_TESTS + 5][i]  = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[6][i]              = (byte) (bytesA[i] + (bytesB[i] >>> 13));\n+            gBytes[MAX_TESTS + 6][i]  = (byte) (bytesA[i] + bytesB[i]);\n+            gBytes[7][i]              = (byte) (bytesA[i] + (bytesB[i] >>> 19));\n+            gBytes[MAX_TESTS + 7][i]  = (byte) (bytesA[i] + bytesB[i]);\n+\n+            gShorts[0][i]              = (short) (shortsA[i] + (shortsB[i] >> 5));\n+            gShorts[MAX_TESTS][i]      = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[1][i]              = (short) (shortsA[i] + (shortsB[i] >> 16));\n+            gShorts[MAX_TESTS + 1][i]  = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[2][i]              = (short) (shortsA[i] + (shortsB[i] >> 23));\n+            gShorts[MAX_TESTS + 2][i]  = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[3][i]              = (short) (shortsA[i] + (shortsB[i] >> 35));\n+            gShorts[MAX_TESTS + 3][i]  = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[4][i]              = (short) (shortsA[i] + (shortsB[i] >>> 7));\n+            gShorts[MAX_TESTS + 4][i]  = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[5][i]              = (short) (shortsA[i] + (shortsB[i] >>> 16));\n+            gShorts[MAX_TESTS + 5][i]  = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[6][i]              = (short) (shortsA[i] + (shortsB[i] >>> 23));\n+            gShorts[MAX_TESTS + 6][i]  = (short) (shortsA[i] + shortsB[i]);\n+            gShorts[7][i]              = (short) (shortsA[i] + (shortsB[i] >>> 35));\n+            gShorts[MAX_TESTS + 7][i]  = (short) (shortsA[i] + shortsB[i]);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestShiftRightAndAccumulate.java","additions":74,"deletions":55,"binary":false,"changes":129,"status":"modified"}]}