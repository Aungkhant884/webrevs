{"files":[{"patch":"@@ -28,2 +28,2 @@\n- * @run main\/othervm compiler.c2.TestShiftRightAndAccumulate\n- *\n+ * @run main\/othervm -Xcomp compiler.c2.TestShiftRightAndAccumulate\n+ * @run main\/othervm -XX:-SuperWordLoopUnrollAnalysis compiler.c2.TestShiftRightAndAccumulate\n@@ -42,0 +42,1 @@\n+    private static final int SMALL_INTS_LEN = 3;\n@@ -58,2 +59,17 @@\n-      test_small();\n-      test_large();\n+      test_init(SMALL_LEN);\n+      for (int it = 0; it < NUM_ITERS; it++) {\n+          test_bytes();\n+          test_shorts();\n+          test_chars();\n+          test_ints();\n+          test_longs();\n+      }\n+\n+      test_init(LARGE_LEN);\n+      for (int it = 0; it < NUM_ITERS; it++) {\n+          test_bytes();\n+          test_shorts();\n+          test_chars();\n+          test_ints();\n+          test_longs();\n+      }\n@@ -63,22 +79,0 @@\n-    static void test_small() {\n-        test_init(SMALL_LEN);\n-        for (int i = 0; i < NUM_ITERS; i++) {\n-            test_bytes();\n-            test_shorts();\n-            test_chars();\n-            test_ints();\n-            test_longs();\n-        }\n-    }\n-\n-    static void test_large() {\n-        test_init(LARGE_LEN);\n-        for (int i = 0; i < NUM_ITERS; i++) {\n-            test_bytes();\n-            test_shorts();\n-            test_chars();\n-            test_ints();\n-            test_longs();\n-        }\n-    }\n-\n@@ -328,0 +322,2 @@\n+        int countI = count == SMALL_LEN ? SMALL_INTS_LEN : count;\n+\n@@ -331,1 +327,1 @@\n-        intsA   = new int[count];\n+        intsA   = new int[countI];\n@@ -337,1 +333,1 @@\n-        intsB   = new int[count];\n+        intsB   = new int[countI];\n@@ -343,1 +339,1 @@\n-        intsC   = new int[count];\n+        intsC   = new int[countI];\n@@ -352,1 +348,1 @@\n-        gInts   = new int[MAX_TESTS][count];\n+        gInts   = new int[MAX_TESTS][countI];\n@@ -359,1 +355,0 @@\n-            intsA[i]   = r.nextInt();\n@@ -365,1 +360,0 @@\n-            intsB[i]   = r.nextInt();\n@@ -413,17 +407,0 @@\n-            gInts[0][i]  = intsA[i] + (intsB[i] >> 19);\n-            gInts[0][i]  = gInts[0][i] + intsA[i] + intsB[i];\n-            gInts[1][i]  = intsA[i] + (intsB[i] >> 32);\n-            gInts[1][i]  = gInts[1][i] + intsA[i] + intsB[i];\n-            gInts[2][i]  = intsA[i] + (intsB[i] >> 49);\n-            gInts[2][i]  = gInts[2][i] + intsA[i] + intsB[i];\n-            gInts[3][i]  = intsA[i] + (intsB[i] >> 67);\n-            gInts[3][i]  = gInts[3][i] + intsA[i] + intsB[i];\n-            gInts[4][i]  = intsA[i] + (intsB[i] >>> 19);\n-            gInts[4][i]  = gInts[4][i] + intsA[i] + intsB[i];\n-            gInts[5][i]  = intsA[i] + (intsB[i] >>> 32);\n-            gInts[5][i]  = gInts[5][i] + intsA[i] + intsB[i];\n-            gInts[6][i]  = intsA[i] + (intsB[i] >>> 49);\n-            gInts[6][i]  = gInts[6][i] + intsA[i] + intsB[i];\n-            gInts[7][i]  = intsA[i] + (intsB[i] >>> 67);\n-            gInts[7][i]  = gInts[7][i] + intsA[i] + intsB[i];\n-\n@@ -447,0 +424,21 @@\n+\n+        for (int i = 0; i < intsA.length; i++) {\n+            intsA[i]     = r.nextInt();\n+            intsB[i]     = r.nextInt();\n+            gInts[0][i]  = intsA[i] + (intsB[i] >> 19);\n+            gInts[0][i]  = gInts[0][i] + intsA[i] + intsB[i];\n+            gInts[1][i]  = intsA[i] + (intsB[i] >> 32);\n+            gInts[1][i]  = gInts[1][i] + intsA[i] + intsB[i];\n+            gInts[2][i]  = intsA[i] + (intsB[i] >> 49);\n+            gInts[2][i]  = gInts[2][i] + intsA[i] + intsB[i];\n+            gInts[3][i]  = intsA[i] + (intsB[i] >> 67);\n+            gInts[3][i]  = gInts[3][i] + intsA[i] + intsB[i];\n+            gInts[4][i]  = intsA[i] + (intsB[i] >>> 19);\n+            gInts[4][i]  = gInts[4][i] + intsA[i] + intsB[i];\n+            gInts[5][i]  = intsA[i] + (intsB[i] >>> 32);\n+            gInts[5][i]  = gInts[5][i] + intsA[i] + intsB[i];\n+            gInts[6][i]  = intsA[i] + (intsB[i] >>> 49);\n+            gInts[6][i]  = gInts[6][i] + intsA[i] + intsB[i];\n+            gInts[7][i]  = intsA[i] + (intsB[i] >>> 67);\n+            gInts[7][i]  = gInts[7][i] + intsA[i] + intsB[i];\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestShiftRightAndAccumulate.java","additions":47,"deletions":49,"binary":false,"changes":96,"status":"modified"}]}