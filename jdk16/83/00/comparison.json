{"files":[{"patch":"@@ -119,4 +119,10 @@\n-            MemoryScope scope = MemoryScope.createConfined(null, unmapperProxy::unmap, null);\n-            int modes = defaultAccessModes(bytesSize);\n-            if (mapMode == FileChannel.MapMode.READ_ONLY) {\n-                modes &= ~WRITE;\n+            if (unmapperProxy != null) {\n+                MemoryScope scope = MemoryScope.createConfined(null, unmapperProxy::unmap, null);\n+                int modes = defaultAccessModes(bytesSize);\n+                if (mapMode == FileChannel.MapMode.READ_ONLY) {\n+                    modes &= ~WRITE;\n+                }\n+                return new MappedMemorySegmentImpl(unmapperProxy.address(), unmapperProxy, bytesSize,\n+                        modes, scope);\n+            } else {\n+                return new EmptyMappedMemorySegmentImpl();\n@@ -124,2 +130,0 @@\n-            return new MappedMemorySegmentImpl(unmapperProxy.address(), unmapperProxy, bytesSize,\n-                    modes, scope);\n@@ -138,0 +142,28 @@\n+\n+    static class EmptyMappedMemorySegmentImpl extends MappedMemorySegmentImpl {\n+\n+        public EmptyMappedMemorySegmentImpl() {\n+            super(0, null, 0, MemorySegment.ALL_ACCESS,\n+                    MemoryScope.createConfined(null, MemoryScope.DUMMY_CLEANUP_ACTION, null));\n+        }\n+\n+        @Override\n+        public void load() {\n+            \/\/ do nothing\n+        }\n+\n+        @Override\n+        public void unload() {\n+            \/\/ do nothing\n+        }\n+\n+        @Override\n+        public boolean isLoaded() {\n+            return true;\n+        }\n+\n+        @Override\n+        public void force() {\n+            \/\/ do nothing\n+        }\n+    };\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java","additions":38,"deletions":6,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -467,0 +467,1 @@\n+    @Test\n@@ -473,0 +474,5 @@\n+            assertEquals(segment.isMapped(), true);\n+            MappedMemorySegments.force(segment);\n+            MappedMemorySegments.load(segment);\n+            MappedMemorySegments.isLoaded(segment);\n+            MappedMemorySegments.unload(segment);\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}