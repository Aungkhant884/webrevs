{"files":[{"patch":"@@ -29,1 +29,1 @@\n- * The common interface extended by all annotation types.  Note that an\n+ * The common interface extended by all annotation interfaces.  Note that an\n@@ -31,2 +31,2 @@\n- * an annotation type.  Also note that this interface does not itself\n- * define an annotation type.\n+ * an annotation interface.  Also note that this interface does not itself\n+ * define an annotation interface.\n@@ -34,2 +34,2 @@\n- * More information about annotation types can be found in section {@jls 9.6} of\n- * <cite>The Java Language Specification<\/cite>.\n+ * More information about annotation interfaces can be found in section\n+ * {@jls 9.6} of <cite>The Java Language Specification<\/cite>.\n@@ -38,1 +38,1 @@\n- * compatibility concerns when evolving an annotation type from being\n+ * compatibility concerns when evolving an annotation interface from being\n@@ -49,1 +49,1 @@\n-     * annotation type as this instance, all of whose members are equal\n+     * annotation interface as this instance, all of whose members are equal\n@@ -130,1 +130,1 @@\n-     * Returns the annotation type of this annotation.\n+     * Returns the annotation interface of this annotation.\n@@ -136,1 +136,1 @@\n-     * reliably return the annotation type of the annotation.\n+     * reliably return the annotation interface of the annotation.\n@@ -138,1 +138,1 @@\n-     * @return the annotation type of this annotation\n+     * @return the annotation interface of this annotation\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Annotation.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * of an annotation type <i>A<\/i>, then any {@code @A} annotation on\n+ * of an annotation interface <i>A<\/i>, then any {@code @A} annotation on\n@@ -33,3 +33,3 @@\n- * In more detail, when an annotation type <i>A<\/i> is annotated with\n- * {@code Documented}, the presence and value of annotations of type\n- * <i>A<\/i> are a part of the public contract of the elements <i>A<\/i>\n+ * In more detail, when an annotation interface <i>A<\/i> is annotated with\n+ * {@code Documented}, the presence and value of <i>A<\/i> annotations\n+ * are a part of the public contract of the elements <i>A<\/i>\n@@ -38,1 +38,1 @@\n- * Conversely, if an annotation type <i>B<\/i> is <em>not<\/em>\n+ * Conversely, if an annotation interface <i>B<\/i> is <em>not<\/em>\n@@ -43,4 +43,4 @@\n- * Concretely, if an annotation type is annotated with {@code\n- * Documented}, by default a tool like javadoc will display\n- * annotations of that type in its output while annotations of\n- * annotation types without {@code Documented} will not be displayed.\n+ * Concretely, if an annotation interface is annotated with {@code Documented},\n+ * by default a tool like javadoc will display annotations of that interface\n+ * in its output while annotations of annotation interfaces without\n+ * {@code Documented} will not be displayed.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Documented.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * The constants of this enumerated type provide a simple classification of the\n+ * The constants of this enumerated class provide a simple classification of the\n@@ -45,1 +45,1 @@\n- * <p>For example, an annotation whose type is meta-annotated with\n+ * <p>For example, an annotation whose interface is meta-annotated with\n@@ -50,2 +50,3 @@\n- * 4.11, as well as to two declaration contexts: type declarations (including\n- * annotation type declarations) and type parameter declarations.\n+ * 4.11, as well as to two declaration contexts: class and interface\n+ * declarations (including annotation declarations) and type parameter\n+ * declarations.\n@@ -53,4 +54,5 @@\n- * <p>For example, an annotation whose type is meta-annotated with\n- * {@code @Target(ElementType.TYPE_USE)} may be written on the type of a field\n- * (or within the type of the field, if it is a nested, parameterized, or array\n- * type), and may also appear as a modifier for, say, a class declaration.\n+ * <p>For example, an annotation whose interface is meta-annotated with\n+ * {@code @Target(ElementType.TYPE_USE)} may be written on the class or\n+ * interface of a field (or within the class or interface of the field, if it\n+ * is a nested or parameterized class or interface, or array class), and may\n+ * also appear as a modifier for, say, a class declaration.\n@@ -58,4 +60,4 @@\n- * <p>The {@code TYPE_USE} constant includes type declarations and type\n- * parameter declarations as a convenience for designers of type checkers which\n- * give semantics to annotation types. For example, if the annotation type\n- * {@code NonNull} is meta-annotated with\n+ * <p>The {@code TYPE_USE} constant includes class and interface declarations\n+ * and type parameter declarations as a convenience for designers of\n+ * type checkers which give semantics to annotation interfaces. For example,\n+ * if the annotation interface {@code NonNull} is meta-annotated with\n@@ -74,1 +76,1 @@\n-    \/** Class, interface (including annotation type), enum, or record\n+    \/** Class, interface (including annotation interface), enum, or record\n@@ -93,1 +95,1 @@\n-    \/** Annotation type declaration *\/\n+    \/** Annotation interface declaration (Formerly known as an annotation type.) *\/\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/ElementType.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * an annotation type that was added to the annotation type definition after\n- * the annotation was compiled (or serialized).  This exception will not be\n+ * an annotation interface that was added to the annotation interface definition\n+ * after the annotation was compiled (or serialized). This exception will not be\n@@ -46,1 +46,1 @@\n-     * The annotation type.\n+     * The annotation interface.\n@@ -56,1 +56,1 @@\n-     * the named element was missing from the specified annotation type.\n+     * the named element was missing from the specified annotation interface.\n@@ -58,1 +58,1 @@\n-     * @param annotationType the Class object for the annotation type\n+     * @param annotationType the Class object for the annotation interface\n@@ -73,1 +73,1 @@\n-     * Returns the Class object for the annotation type with the\n+     * Returns the Class object for the annotation interface with the\n@@ -76,1 +76,1 @@\n-     * @return the Class object for the annotation type with the\n+     * @return the Class object for the annotation interface with the\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/IncompleteAnnotationException.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,4 +29,4 @@\n- * Indicates that an annotation type is automatically inherited.  If\n- * an Inherited meta-annotation is present on an annotation type\n- * declaration, and the user queries the annotation type on a class\n- * declaration, and the class declaration has no annotation for this type,\n+ * Indicates that an annotation interface is automatically inherited.  If\n+ * an Inherited meta-annotation is present on an annotation interface\n+ * declaration, and the user queries the annotation interface on a class\n+ * declaration, and the class declaration has no annotation for this interface,\n@@ -34,3 +34,3 @@\n- * annotation type.  This process will be repeated until an annotation for this\n- * type is found, or the top of the class hierarchy (Object)\n- * is reached.  If no superclass has an annotation for this type, then\n+ * annotation interface.  This process will be repeated until an annotation for\n+ * this interface is found, or the top of the class hierarchy (Object)\n+ * is reached.  If no superclass has an annotation for this interface, then\n@@ -39,2 +39,2 @@\n- * <p>Note that this meta-annotation type has no effect if the annotated\n- * type is used to annotate anything other than a class.  Note also\n+ * <p>Note that this meta-annotation interface has no effect if the annotated\n+ * interface is used to annotate anything other than a class.  Note also\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Inherited.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n- * The annotation type {@code java.lang.annotation.Repeatable} is\n- * used to indicate that the annotation type whose declaration it\n+ * The annotation interface {@code java.lang.annotation.Repeatable} is\n+ * used to indicate that the annotation interface whose declaration it\n@@ -33,1 +33,1 @@\n- * type<\/em> for the repeatable annotation type.\n+ * interface<\/em> for the repeatable annotation interface.\n@@ -36,2 +36,2 @@\n- * @jls 9.6.3 Repeatable Annotation Types\n- * @jls 9.7.5 Multiple Annotations of the Same Type\n+ * @jls 9.6.3 Repeatable Annotation Interfaces\n+ * @jls 9.7.5 Multiple Annotations of the Same Interface\n@@ -44,3 +44,3 @@\n-     * Indicates the <em>containing annotation type<\/em> for the\n-     * repeatable annotation type.\n-     * @return the containing annotation type\n+     * Indicates the <em>containing annotation interface<\/em> for the\n+     * repeatable annotation interface.\n+     * @return the containing annotation interface\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Repeatable.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * Indicates how long annotations with the annotated type are to\n+ * Indicates how long annotations with the annotated interface are to\n@@ -31,1 +31,1 @@\n- * an annotation type declaration, the retention policy defaults to\n+ * an annotation interface declaration, the retention policy defaults to\n@@ -35,3 +35,3 @@\n- * meta-annotated type is used directly for annotation.  It has no\n- * effect if the meta-annotated type is used as a member type in\n- * another annotation type.\n+ * meta-annotated interface is used directly for annotation.  It has no\n+ * effect if the meta-annotated interface is used as a member interface in\n+ * another annotation interface.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Retention.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * Annotation retention policy.  The constants of this enumerated type\n+ * Annotation retention policy.  The constants of this enumerated class\n@@ -31,2 +31,2 @@\n- * in conjunction with the {@link Retention} meta-annotation type to specify\n- * how long annotations are to be retained.\n+ * in conjunction with the {@link Retention} meta-annotation interface to\n+ * specify how long annotations are to be retained.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/RetentionPolicy.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,4 +29,4 @@\n- * Indicates the contexts in which an annotation type is applicable. The\n- * declaration contexts and type contexts in which an annotation type may be\n- * applicable are specified in JLS 9.6.4.1, and denoted in source code by enum\n- * constants of {@link ElementType java.lang.annotation.ElementType}.\n+ * Indicates the contexts in which an annotation interface is applicable. The\n+ * declaration contexts and type contexts in which an annotation interface may\n+ * be applicable are specified in JLS 9.6.4.1, and denoted in source code by\n+ * enum constants of {@link ElementType java.lang.annotation.ElementType}.\n@@ -34,3 +34,3 @@\n- * <p>If an {@code @Target} meta-annotation is not present on an annotation type\n- * {@code T}, then an annotation of type {@code T} may be written as a\n- * modifier for any declaration except a type parameter declaration.\n+ * <p>If an {@code @Target} meta-annotation is not present on an annotation\n+ * interface {@code T}, then an annotation of type {@code T} may be written as\n+ * a modifier for any declaration except a type parameter declaration.\n@@ -43,2 +43,2 @@\n- * declared type is itself a meta-annotation type.  It can only be used on\n- * annotation type declarations:\n+ * declared interface is itself a meta-annotation interface.  It can only be\n+ * used on annotation interface declarations:\n@@ -52,3 +52,4 @@\n- * <p>This {@code @Target} meta-annotation indicates that the declared type is\n- * intended solely for use as a member type in complex annotation type\n- * declarations.  It cannot be used to annotate anything directly:\n+ * <p>This {@code @Target} meta-annotation indicates that the declared class or\n+ * interface is intended solely for use as a member class or interface in\n+ * complex annotation interface declarations.  It cannot be used to annotate\n+ * anything directly:\n@@ -57,1 +58,1 @@\n- *    public &#064;interface MemberType {\n+ *    public &#064;interface MemberInterface {\n@@ -75,1 +76,1 @@\n- * @jls 9.7.5 Multiple Annotations of the Same Type\n+ * @jls 9.7.5 Multiple Annotations of the Same Interface\n@@ -82,1 +83,1 @@\n-     * Returns an array of the kinds of elements an annotation type\n+     * Returns an array of the kinds of elements an annotation interface\n@@ -84,1 +85,1 @@\n-     * @return an array of the kinds of elements an annotation type\n+     * @return an array of the kinds of elements an annotation interface\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Target.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"}]}