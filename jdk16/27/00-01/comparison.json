{"files":[{"patch":"@@ -34,2 +34,2 @@\n- * More information about annotation interfaces can be found in section {@jls 9.6} of\n- * <cite>The Java Language Specification<\/cite>.\n+ * More information about annotation interfaces can be found in section\n+ * {@jls 9.6} of <cite>The Java Language Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Annotation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,4 +43,4 @@\n- * Concretely, if an annotation interface is annotated with {@code\n- * Documented}, by default a tool like javadoc will display\n- * annotations of that interface in its output while annotations of\n- * annotation interfaces without {@code Documented} will not be displayed.\n+ * Concretely, if an annotation interface is annotated with {@code Documented},\n+ * by default a tool like javadoc will display annotations of that interface\n+ * in its output while annotations of annotation interfaces without\n+ * {@code Documented} will not be displayed.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Documented.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,2 +50,3 @@\n- * 4.11, as well as to two declaration contexts: class and interface declarations (including\n- * annotation declarations) and type parameter declarations.\n+ * 4.11, as well as to two declaration contexts: class and interface\n+ * declarations (including annotation declarations) and type parameter\n+ * declarations.\n@@ -54,3 +55,4 @@\n- * {@code @Target(ElementType.TYPE_USE)} may be written on the class or interface of a field\n- * (or within the class or interface of the field, if it is a nested or parameterized class or interface, or array\n- * class), and may also appear as a modifier for, say, a class declaration.\n+ * {@code @Target(ElementType.TYPE_USE)} may be written on the class or\n+ * interface of a field (or within the class or interface of the field, if it\n+ * is a nested or parameterized class or interface, or array class), and may\n+ * also appear as a modifier for, say, a class declaration.\n@@ -58,4 +60,4 @@\n- * <p>The {@code TYPE_USE} constant includes class and interface declarations and type\n- * parameter declarations as a convenience for designers of type checkers which\n- * give semantics to annotation interfaces. For example, if the annotation interface\n- * {@code NonNull} is meta-annotated with\n+ * <p>The {@code TYPE_USE} constant includes class and interface declarations\n+ * and type parameter declarations as a convenience for designers of\n+ * type checkers which give semantics to annotation interfaces. For example,\n+ * if the annotation interface {@code NonNull} is meta-annotated with\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/ElementType.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * an annotation interface that was added to the annotation interface definition after\n- * the annotation was compiled (or serialized). This exception will not be\n+ * an annotation interface that was added to the annotation interface definition\n+ * after the annotation was compiled (or serialized). This exception will not be\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/IncompleteAnnotationException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * annotation interface.  This process will be repeated until an annotation for this\n- * interface is found, or the top of the class hierarchy (Object)\n+ * annotation interface.  This process will be repeated until an annotation for\n+ * this interface is found, or the top of the class hierarchy (Object)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Inherited.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * in conjunction with the {@link Retention} meta-annotation interface to specify\n- * how long annotations are to be retained.\n+ * in conjunction with the {@link Retention} meta-annotation interface to\n+ * specify how long annotations are to be retained.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/RetentionPolicy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * declaration contexts and type contexts in which an annotation interface may be\n- * applicable are specified in JLS 9.6.4.1, and denoted in source code by enum\n- * constants of {@link ElementType java.lang.annotation.ElementType}.\n+ * declaration contexts and type contexts in which an annotation interface may\n+ * be applicable are specified in JLS 9.6.4.1, and denoted in source code by\n+ * enum constants of {@link ElementType java.lang.annotation.ElementType}.\n@@ -34,3 +34,3 @@\n- * <p>If an {@code @Target} meta-annotation is not present on an annotation interface\n- * {@code T}, then an annotation of type {@code T} may be written as a\n- * modifier for any declaration except a type parameter declaration.\n+ * <p>If an {@code @Target} meta-annotation is not present on an annotation\n+ * interface {@code T}, then an annotation of type {@code T} may be written as\n+ * a modifier for any declaration except a type parameter declaration.\n@@ -43,2 +43,2 @@\n- * declared interface is itself a meta-annotation interface.  It can only be used on\n- * annotation interface declarations:\n+ * declared interface is itself a meta-annotation interface.  It can only be\n+ * used on annotation interface declarations:\n@@ -52,3 +52,4 @@\n- * <p>This {@code @Target} meta-annotation indicates that the declared class or interface is\n- * intended solely for use as a member class or interface in complex annotation interface\n- * declarations.  It cannot be used to annotate anything directly:\n+ * <p>This {@code @Target} meta-annotation indicates that the declared class or\n+ * interface is intended solely for use as a member class or interface in\n+ * complex annotation interface declarations.  It cannot be used to annotate\n+ * anything directly:\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Target.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"}]}