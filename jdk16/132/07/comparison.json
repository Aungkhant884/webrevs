{"files":[{"patch":"@@ -527,0 +527,1 @@\n+  case T_VOID:\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co. Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.IntVector;\n+import jdk.incubator.vector.LongVector;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+\/*\n+ * @test\n+ * @bug 8260339\n+ * @summary StoreVectorNode is not considered with -XX:+OptimizeFill\n+ * @modules jdk.incubator.vector\n+ *\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+OptimizeFill compiler.vectorapi.TestLoopStoreVector\n+ *\/\n+\n+public class TestLoopStoreVector {\n+    static final VectorSpecies<Integer> SPECIESi = IntVector.SPECIES_PREFERRED;\n+    static final VectorSpecies<Long> SPECIESl = LongVector.SPECIES_PREFERRED;\n+\n+    static final int INVOC_COUNT = 5000;\n+    static final int size = 64;\n+\n+    static int[] ai = {20, 21, 02, 14, 83, 119, 101, 101, 116, 121, 44, 32,\n+                       73, 32, 76, 79, 86, 69, 32, 89, 79, 85, 32, 102, 111,\n+                       114, 101, 118, 101, 114, 33, 32, 32, 32, 45, 45, 32,\n+                       32, 32, 66, 121, 32, 87, 97, 110, 103, 72, 117, 97,\n+                       110, 103,46, 76, 105, 102, 101, 32, 105, 115, 32, 116,\n+                       104, 101, 32};\n+    static long[] al = {102, 108, 111, 119, 101, 114, 32, 102, 111, 114, 32,\n+                        119, 104, 105, 99, 104, 32, 108, 111, 118, 101, 32,\n+                        105, 115, 32, 116, 104, 101, 32, 104, 111, 110, 101,\n+                        121, 46, 32, 87, 101, 32, 119, 105, 108, 108, 32, 115,\n+                        116, 105, 99, 107, 32, 116, 111, 103, 101, 116, 104,\n+                        101, 114, 32, 33, 33, 33, 33, 32};\n+\n+    public static void testVectorCastL2I(long[] input, int[] output, VectorSpecies<Long> speciesl, VectorSpecies<Integer> speciesi) {\n+        LongVector av = LongVector.fromArray(speciesl, input, 0);\n+        IntVector bv = (IntVector) av.castShape(speciesi, 0);\n+        bv.intoArray(output, 0);\n+    }\n+\n+    public static int test0() {\n+        for (int i = 0; i < 1000; i++) {\n+            testVectorCastL2I(al, ai, SPECIESl, SPECIESi);\n+        }\n+        return 0;\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < INVOC_COUNT; i++) {\n+            test0();\n+        }\n+        for (int i = 0; i < 64; i++) {\n+            System.out.print(ai[i] + \" \");\n+        }\n+        System.out.println(\"\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestLoopStoreVector.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"}]}