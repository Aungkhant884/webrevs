{"files":[{"patch":"@@ -25,1 +25,1 @@\n-.TH \"JAVA\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JAVA\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n@@ -1123,66 +1123,0 @@\n-.B \\f[CB]\\-\\-illegal\\-access=\\f[R]\\f[I]parameter\\f[R]\n-When present at run time, \\f[CB]\\-\\-illegal\\-access=\\f[R] takes a keyword\n-\\f[I]parameter\\f[R] to specify a mode of operation:\n-.RS\n-.RS\n-.PP\n-\\f[B]Note:\\f[R] This option will be removed in a future release.\n-.RE\n-.IP \\[bu] 2\n-\\f[CB]permit\\f[R]: This mode opens each package in each module in the\n-run\\-time image to code in all unnamed modules ( such as code on the\n-class path), if that package existed in JDK 8.\n-This enables both static access, (for example, by compiled bytecode, and\n-deep reflective access) through the platform\\[aq]s various reflection\n-APIs.\n-The first reflective\\-access operation to any such package causes a\n-warning to be issued.\n-However, no warnings are issued after the first occurrence.\n-This single warning describes how to enable further warnings.\n-This mode is the default for the current JDK but will change in a future\n-release.\n-.IP \\[bu] 2\n-\\f[CB]warn\\f[R]: This mode is identical to \\f[CB]permit\\f[R] except that a\n-warning message is issued for each illegal reflective\\-access operation.\n-.IP \\[bu] 2\n-\\f[CB]debug\\f[R]: This mode is identical to \\f[CB]warn\\f[R] except that both\n-a warning message and a stack trace are issued for each illegal\n-reflective\\-access operation.\n-.IP \\[bu] 2\n-\\f[CB]deny\\f[R]: This mode disables all illegal\\-access operations except\n-for those enabled by other command\\-line options, such as\n-\\f[CB]\\-\\-add\\-opens\\f[R].\n-This mode will become the default in a future release.\n-.PP\n-The default mode, \\f[CB]\\-\\-illegal\\-access=permit\\f[R], is intended to\n-make you aware of code on the class path that reflectively accesses any\n-JDK\\-internal APIs at least once.\n-To learn about all such accesses, you can use the \\f[CB]warn\\f[R] or the\n-\\f[CB]debug\\f[R] modes.\n-For each library or framework on the class path that requires illegal\n-access, you have two options:\n-.IP \\[bu] 2\n-If the component\\[aq]s maintainers have already released a fixed version\n-that no longer uses JDK\\-internal APIs then you can consider upgrading\n-to that version.\n-.IP \\[bu] 2\n-If the component still needs to be fixed, then you can contact its\n-maintainers and ask them to replace their use of JDK\\-internal APIs with\n-the proper exported APIs.\n-.PP\n-If you must continue to use a component that requires illegal access,\n-then you can eliminate the warning messages by using one or more\n-\\f[CB]\\-\\-add\\-opens\\f[R] options to open only those internal packages to\n-which access is required.\n-.PP\n-To verify that your application is ready for a future version of the\n-JDK, run it with \\f[CB]\\-\\-illegal\\-access=deny\\f[R] along with any\n-necessary \\f[CB]\\-\\-add\\-opens\\f[R] options.\n-Any remaining illegal\\-access errors will most likely be due to static\n-references from compiled code to JDK\\-internal APIs.\n-You can identify those by running the \\f[B]jdeps\\f[R] tool with the\n-\\f[CB]\\-\\-jdk\\-internals\\f[R] option.\n-For performance reasons, the current JDK does not issue warnings for\n-illegal static\\-access operations.\n-.RE\n-.TP\n@@ -3940,0 +3874,62 @@\n+.B \\f[CB]\\-\\-illegal\\-access=\\f[R]\\f[I]parameter\\f[R]\n+When present at run time, \\f[CB]\\-\\-illegal\\-access=\\f[R] takes a keyword\n+\\f[I]parameter\\f[R] to specify a mode of operation:\n+.RS\n+.RS\n+.PP\n+\\f[B]Note:\\f[R] This option will be removed in a future release.\n+.RE\n+.IP \\[bu] 2\n+\\f[CB]permit\\f[R]: This mode opens each package in each module in the\n+run\\-time image to code in all unnamed modules ( such as code on the\n+class path), if that package existed in JDK 8.\n+This enables both static access, (for example, by compiled bytecode, and\n+deep reflective access) through the platform\\[aq]s various reflection\n+APIs.\n+The first reflective\\-access operation to any such package causes a\n+warning to be issued.\n+However, no warnings are issued after the first occurrence.\n+This single warning describes how to enable further warnings.\n+.IP \\[bu] 2\n+\\f[CB]warn\\f[R]: This mode is identical to \\f[CB]permit\\f[R] except that a\n+warning message is issued for each illegal reflective\\-access operation.\n+.IP \\[bu] 2\n+\\f[CB]debug\\f[R]: This mode is identical to \\f[CB]warn\\f[R] except that both\n+a warning message and a stack trace are issued for each illegal\n+reflective\\-access operation.\n+.IP \\[bu] 2\n+\\f[CB]deny\\f[R]: This mode disables all illegal\\-access operations except\n+for those enabled by other command\\-line options, such as\n+\\f[CB]\\-\\-add\\-opens\\f[R].\n+This mode is the default.\n+.PP\n+If your application does not work with the default mode of\n+\\f[CB]\\-\\-illegal\\-access=deny\\f[R] then you can learn more about what is\n+going on with the \\f[CB]warn\\f[R] and \\f[CB]debug\\f[R] modes.\n+For each library or framework on the class path that requires illegal\n+access, you have two options:\n+.IP \\[bu] 2\n+If the component\\[aq]s maintainers have already released a fixed version\n+that no longer uses JDK\\-internal APIs then you can consider upgrading\n+to that version.\n+.IP \\[bu] 2\n+If the component still needs to be fixed, then you can contact its\n+maintainers and ask them to replace their use of JDK\\-internal APIs with\n+the proper exported APIs.\n+.PP\n+If you must continue to use a component that requires illegal access,\n+then you can eliminate the warning messages by using one or more\n+\\f[CB]\\-\\-add\\-opens\\f[R] options to open only those internal packages to\n+which access is required.\n+.PP\n+To verify that your application is ready for a future version of the\n+JDK, run it with \\f[CB]\\-\\-illegal\\-access=deny\\f[R] along with any\n+necessary \\f[CB]\\-\\-add\\-opens\\f[R] options.\n+Any remaining illegal\\-access errors will most likely be due to static\n+references from compiled code to JDK\\-internal APIs.\n+You can identify those by running the \\f[B]jdeps\\f[R] tool with the\n+\\f[CB]\\-\\-jdk\\-internals\\f[R] option.\n+For performance reasons, the current JDK does not issue warnings for\n+illegal static\\-access operations.\n+.RE\n+.TP\n@@ -4009,0 +4005,36 @@\n+.B \\f[CB]\\-XX:+UseBiasedLocking\\f[R]\n+Enables the use of biased locking.\n+Some applications with significant amounts of uncontended\n+synchronization may attain significant speedups with this flag enabled,\n+but applications with certain patterns of locking may see slowdowns.\n+.RS\n+.PP\n+By default, this option is disabled.\n+.RE\n+.SH OBSOLETE JAVA OPTIONS\n+.PP\n+These \\f[CB]java\\f[R] options are still accepted but ignored, and a\n+warning is issued when they\\[aq]re used.\n+.TP\n+.B \\f[CB]\\-XX:+UseMembar\\f[R]\n+Enabled issuing membars on thread\\-state transitions.\n+This option was disabled by default on all platforms except ARM servers,\n+where it was enabled.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-XX:MaxPermSize=\\f[R]\\f[I]size\\f[R]\n+Sets the maximum permanent generation space size (in bytes).\n+This option was deprecated in JDK 8 and superseded by the\n+\\f[CB]\\-XX:MaxMetaspaceSize\\f[R] option.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-XX:PermSize=\\f[R]\\f[I]size\\f[R]\n+Sets the space (in bytes) allocated to the permanent generation that\n+triggers a garbage collection if it\\[aq]s exceeded.\n+This option was deprecated in JDK 8 and superseded by the\n+\\f[CB]\\-XX:MetaspaceSize\\f[R] option.\n+.RS\n+.RE\n+.TP\n@@ -4056,36 +4088,0 @@\n-.TP\n-.B \\f[CB]\\-XX:+UseBiasedLocking\\f[R]\n-Enables the use of biased locking.\n-Some applications with significant amounts of uncontended\n-synchronization may attain significant speedups with this flag enabled,\n-but applications with certain patterns of locking may see slowdowns.\n-.RS\n-.PP\n-By default, this option is disabled.\n-.RE\n-.SH OBSOLETE JAVA OPTIONS\n-.PP\n-These \\f[CB]java\\f[R] options are still accepted but ignored, and a\n-warning is issued when they\\[aq]re used.\n-.TP\n-.B \\f[CB]\\-XX:+UseMembar\\f[R]\n-Enabled issuing membars on thread\\-state transitions.\n-This option was disabled by default on all platforms except ARM servers,\n-where it was enabled.\n-.RS\n-.RE\n-.TP\n-.B \\f[CB]\\-XX:MaxPermSize=\\f[R]\\f[I]size\\f[R]\n-Sets the maximum permanent generation space size (in bytes).\n-This option was deprecated in JDK 8 and superseded by the\n-\\f[CB]\\-XX:MaxMetaspaceSize\\f[R] option.\n-.RS\n-.RE\n-.TP\n-.B \\f[CB]\\-XX:PermSize=\\f[R]\\f[I]size\\f[R]\n-Sets the space (in bytes) allocated to the permanent generation that\n-triggers a garbage collection if it\\[aq]s exceeded.\n-This option was deprecated in JDK 8 and superseded by the\n-\\f[CB]\\-XX:MetaspaceSize\\f[R] option.\n-.RS\n-.RE\n@@ -4094,1 +4090,1 @@\n-These \\f[CB]java\\f[R] options have been removed in JDK 15 and using them\n+These \\f[CB]java\\f[R] options have been removed in JDK 16 and using them\n","filename":"src\/java.base\/share\/man\/java.1","additions":100,"deletions":104,"binary":false,"changes":204,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-.TH \"KEYTOOL\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"KEYTOOL\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.base\/share\/man\/keytool.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"RMID\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"RMID\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.rmi\/share\/man\/rmid.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"RMIREGISTRY\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"RMIREGISTRY\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.rmi\/share\/man\/rmiregistry.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JRUNSCRIPT\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JRUNSCRIPT\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.scripting\/share\/man\/jrunscript.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAVAC\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JAVAC\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.compiler\/share\/man\/javac.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"SERIALVER\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"SERIALVER\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.compiler\/share\/man\/serialver.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JHSDB\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JHSDB\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.hotspot.agent\/share\/man\/jhsdb.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAR\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JAR\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-.TH \"JARSIGNER\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JARSIGNER\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n@@ -963,9 +963,0 @@\n-.B \\f[CB]\\-directsign\\f[R]\n-By default, jarsigner stores the hash of the \\f[CB]\\&.SF\\f[R] file and\n-possibly other information in a SignerInfo signedAttributes field, and\n-then calculates the signature on this field.\n-If this option is set, no SignerInfo signedAttributes field is generated\n-and the signature is calculated on the \\f[CB]\\&.SF\\f[R] file directly.\n-.RS\n-.RE\n-.TP\n","filename":"src\/jdk.jartool\/share\/man\/jarsigner.1","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAVADOC\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JAVADOC\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n@@ -599,1 +599,1 @@\n-\\f[CB]javadoc\\ \\-header\\ \"<b>My\\ Library<\/b><br>v1.0\"\\ com.mypackage.\\f[R]\n+\\f[CB]javadoc\\ \\-doctitle\\ \"<b>My\\ Library<\/b><br>v1.0\"\\ com.mypackage.\\f[R]\n","filename":"src\/jdk.javadoc\/share\/man\/javadoc.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JCMD\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JCMD\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JINFO\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JINFO\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jinfo.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JMAP\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JMAP\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jmap.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JPS\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JPS\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jps.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JSTACK\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JSTACK\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jstack.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JSTAT\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JSTAT\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jstat.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JCONSOLE\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JCONSOLE\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jconsole\/share\/man\/jconsole.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JAVAP\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JAVAP\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/javap.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JDEPRSCAN\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JDEPRSCAN\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/jdeprscan.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JDEPS\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JDEPS\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/jdeps.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JDB\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JDB\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdi\/share\/man\/jdb.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JFR\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JFR\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jfr\/share\/man\/jfr.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JLINK\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JLINK\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jlink\/share\/man\/jlink.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JMOD\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JMOD\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jlink\/share\/man\/jmod.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-.TH \"JSHELL\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JSHELL\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jshell\/share\/man\/jshell.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-.TH \"JSTATD\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n+.TH \"JSTATD\" \"1\" \"2021\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jstatd\/share\/man\/jstatd.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}