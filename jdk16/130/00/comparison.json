{"files":[{"patch":"@@ -826,2 +826,1 @@\n-\/\/ Helper function for enforcing certain bytecodes to reexecute if\n-\/\/ deoptimization happens\n+\/\/ Helper function for enforcing certain bytecodes to reexecute if deoptimization happens.\n@@ -842,1 +841,1 @@\n-  } else\n+  } else {\n@@ -844,0 +843,1 @@\n+  }\n@@ -897,0 +897,6 @@\n+#ifdef ASSERT\n+    int inputs = 0, not_used; \/\/ initialized by GraphKit::compute_stack_effects()\n+    assert(method() == youngest_jvms->method(), \"sanity\");\n+    assert(compute_stack_effects(inputs, not_used), \"unknown bytecode: %s\", Bytecodes::name(java_bc()));\n+    assert(out_jvms->sp() >= (uint)inputs, \"not enough operands for reexecution\");\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -422,1 +422,0 @@\n-  Node* lookup = pop();\n@@ -432,0 +431,1 @@\n+    pop(); \/\/ the effect of the instruction execution on the operand stack\n@@ -488,1 +488,1 @@\n-  if( makes_backward_branch && UseLoopSafepoints )\n+  if (makes_backward_branch && UseLoopSafepoints) {\n@@ -490,0 +490,1 @@\n+  }\n@@ -491,0 +492,1 @@\n+  Node* lookup = pop(); \/\/ lookup value\n@@ -497,1 +499,0 @@\n-  Node *lookup = pop();         \/\/ lookup value\n@@ -504,0 +505,1 @@\n+    pop(); \/\/ the effect of the instruction execution on the operand stack\n@@ -580,1 +582,1 @@\n-  if (makes_backward_branch && UseLoopSafepoints)\n+  if (makes_backward_branch && UseLoopSafepoints) {\n@@ -582,0 +584,1 @@\n+  }\n@@ -583,0 +586,1 @@\n+  Node *lookup = pop(); \/\/ lookup value\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"}]}