{"files":[{"patch":"@@ -33,1 +33,1 @@\n-  JfrObjectAllocationSample sample(klass, alloc_size, outside_tlab, thread);\n+  JfrObjectAllocationSample::send_event(klass, alloc_size, outside_tlab, thread);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrAllocationTracer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/shared\/threadLocalAllocBuffer.inline.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"gc\/shared\/threadLocalAllocBuffer.inline.hpp\"\n@@ -103,1 +103,1 @@\n-JfrObjectAllocationSample::JfrObjectAllocationSample(const Klass* klass, size_t alloc_size, bool outside_tlab, Thread* thread) {\n+void JfrObjectAllocationSample::send_event(const Klass* klass, size_t alloc_size, bool outside_tlab, Thread* thread) {\n@@ -114,1 +114,0 @@\n-\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrObjectAllocationSample.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-class JfrObjectAllocationSample : public StackObj {\n+class JfrObjectAllocationSample : AllStatic {\n@@ -35,1 +35,1 @@\n-  JfrObjectAllocationSample(const Klass* klass, size_t alloc_size, bool outside_tlab, Thread* thread);\n+  static void send_event(const Klass* klass, size_t alloc_size, bool outside_tlab, Thread* thread);\n@@ -38,1 +38,1 @@\n-#endif\n+#endif \/\/ SHARE_JFR_SUPPORT_JFROBJECTALLOCATIONSAMPLE_HPP\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrObjectAllocationSample.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}