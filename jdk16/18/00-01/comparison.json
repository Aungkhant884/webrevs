{"files":[{"patch":"@@ -125,1 +125,1 @@\n-jboolean JNICALL jfr_add_string_constant(JNIEnv* env, jclass jvm, jboolean epoch, jlong id, jstring string);\n+jboolean JNICALL jfr_add_string_constant(JNIEnv* env, jclass jvm, jlong gen, jlong id, jstring string);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-      (char*)\"addStringConstant\", (char*)\"(JJLjava\/lang\/String;)J\", (void*)jfr_add_string_constant,\n+      (char*)\"addStringConstant\", (char*)\"(JJLjava\/lang\/String;)Z\", (void*)jfr_add_string_constant,\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-jlong JfrStringPool::add(jlong gen, jlong id, jstring string, JavaThread* jt) {\n+jboolean JfrStringPool::add(jlong gen, jlong id, jstring string, JavaThread* jt) {\n@@ -147,1 +147,1 @@\n-    return _generation;\n+    return JNI_FALSE;\n@@ -156,1 +156,1 @@\n-  return _generation;\n+  return JNI_TRUE;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stringpool\/jfrStringPool.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  static jlong add(jlong gen, jlong id, jstring string, JavaThread* jt);\n+  static jboolean add(jlong gen, jlong id, jstring string, JavaThread* jt);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stringpool\/jfrStringPool.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -493,1 +493,1 @@\n-     * @return the corresponding generation in native, must be the same as the generation attempted for a successful add.\n+     * @return true, if the string was successfully added.\n@@ -495,1 +495,1 @@\n-    public static native long addStringConstant(long generation, long id, String s);\n+    public static native boolean addStringConstant(long generation, long id, String s);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-    static final long RETRY = -2;\n@@ -41,1 +40,1 @@\n-    private static final SimpleStringIdPool sp = new SimpleStringIdPool();\n+    private static final SimpleStringIdPool sp;\n@@ -44,1 +43,1 @@\n-        sp.reset();\n+        sp = new SimpleStringIdPool(getCurrentGeneration());\n@@ -47,5 +46,1 @@\n-        long result;\n-        do {\n-            result = sp.addString(s);\n-        } while (result == RETRY);\n-        return result;\n+        return sp.addString(s);\n@@ -69,1 +64,0 @@\n-\n@@ -77,5 +71,3 @@\n-        SimpleStringIdPool() {\n-            cache = new ConcurrentHashMap<>(MAX_SIZE, 0.75f);\n-        }\n-        void reset() {\n-            reset(getCurrentGeneration());\n+        SimpleStringIdPool(long generation) {\n+            this.poolGen = generation;\n+            this.cache = new ConcurrentHashMap<>(MAX_SIZE, 0.75f);\n@@ -91,1 +83,7 @@\n-                \/* pool is for current chunk *\/\n+                \/* At this moment, the pool is associated with the current chunk.\n+                 * If there is a safepoint that rotates the chunk after this point,\n+                 * we have a safety guard in that the EventWriter will be notified,\n+                 * and it will discard the stale id to string association and issue a retry.\n+                 * On retry, the generations are again checked, now they differ,\n+                 * and the cache is reset.\n+                 *\/\n@@ -115,1 +113,0 @@\n-            long currentGen;\n@@ -117,1 +114,1 @@\n-                currentGen = JVM.addStringConstant(poolGen, sid, s);\n+                JVM.addStringConstant(poolGen, sid, s);\n@@ -120,2 +117,1 @@\n-            \/* did we write in chunk that this pool represent *\/\n-            return currentGen == poolGen ? sid : RETRY;\n+            return sid;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/StringPool.java","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"}]}