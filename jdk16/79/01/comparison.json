{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,0 +123,3 @@\n+        if (VectorIntrinsics.VECTOR_ACCESS_OOB_CHECK == 0) {\n+            return this;\n+        }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,1 +315,1 @@\n-                return slice(origin, vsp.zero()).convert0('X', rsp);\n+                return slice(origin).convert0('X', rsp);\n@@ -326,0 +326,3 @@\n+    @Override\n+    public abstract AbstractVector<E> slice(int origin);\n+\n@@ -368,1 +371,1 @@\n-                return slice(origin, vsp.zero()).convert0(kind, rsp);\n+                return slice(origin).convert0(kind, rsp);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}