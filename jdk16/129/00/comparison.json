{"files":[{"patch":"@@ -1668,0 +1668,4 @@\n+      if (n->in(2)->is_top()) {\n+        \/\/ 'n' is dead. Treat as if zero check is still there to avoid any further optimizations.\n+        return false;\n+      }\n@@ -1674,0 +1678,4 @@\n+      if (n->in(2)->is_top()) {\n+        \/\/ 'n' is dead. Treat as if zero check is still there to avoid any further optimizations.\n+        return false;\n+      }\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8260284\n+ * @summary Fix \"assert(_base == Int) failed: Not an Int\" due to a top divisor not handled correctly in no_dependent_zero_check().\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=compiler\/loopopts\/TestDivWithTopDivisor compiler.loopopts.TestDivWithTopDivisor\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class TestDivWithTopDivisor {\n+    static boolean bFld;\n+\n+    static int test(int d, long e, long f) {\n+        float g = 1;\n+        int a, b = 4, c = 4;\n+        int iArr[] = new int[400];\n+        init(iArr, 8);\n+        if (bFld) {\n+        } else if (bFld) {\n+            if (bFld) {\n+                if (bFld) {\n+                    for (a = 7; a > 1; --a) {\n+                        if (bFld) {\n+                            try {\n+                                c = b \/ a;\n+                                b = 9 \/ a;\n+                            } catch (ArithmeticException k) {\n+                            }\n+                        }\n+                    }\n+                }\n+                g = 0;\n+            }\n+        } else {\n+            iArr[d] <<= b;\n+        }\n+        long l = f + c + checkSum(iArr);\n+        return (int) l;\n+    }\n+\n+    public static void init(int[] a, int seed) {\n+        for (int j = 0; j < a.length; j++) {\n+            a[j] = (j % 2 == 0) ? seed + j : seed - j;\n+        }\n+    }\n+\n+    public static long checkSum(int[] a) {\n+        long sum = 0;\n+        for (int j = 0; j < a.length; j++) {\n+            sum += (a[j] \/ (j + 1) + a[j] % (j + 1));\n+        }\n+        return sum;\n+    }\n+\n+    public static void main(String[] s) {\n+        for (int i = 0; i < 10; i++) {\n+            test(3, 0, 0);\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDivWithTopDivisor.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}