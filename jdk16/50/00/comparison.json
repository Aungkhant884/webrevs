{"files":[{"patch":"@@ -1914,1 +1914,1 @@\n-  if (UseSVE > 0 && C->max_vector_size() >= 16) {\n+  if (C->max_vector_size() >= 16) {\n@@ -3796,5 +3796,3 @@\n-    if (UseSVE > 0 && Compile::current()->max_vector_size() >= 16) {\n-      \/\/ Only non uncommon_trap calls need to reinitialize ptrue.\n-      if (uncommon_trap_request() == 0) {\n-        __ reinitialize_ptrue();\n-      }\n+    \/\/ Only non uncommon_trap calls need to reinitialize ptrue.\n+    if (Compile::current()->max_vector_size() >= 16 && uncommon_trap_request() == 0) {\n+      __ reinitialize_ptrue();\n@@ -3811,1 +3809,1 @@\n-    } else if (UseSVE > 0 && Compile::current()->max_vector_size() >= 16) {\n+    } else if (Compile::current()->max_vector_size() >= 16) {\n@@ -3849,1 +3847,1 @@\n-    if (UseSVE > 0 && Compile::current()->max_vector_size() >= 16) {\n+    if (Compile::current()->max_vector_size() >= 16) {\n@@ -3862,1 +3860,1 @@\n-    if (UseSVE > 0 && Compile::current()->max_vector_size() >= 16) {\n+    if (Compile::current()->max_vector_size() >= 16) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -357,0 +357,4 @@\n+\n+    \/\/ External runtime call may clobber ptrue reg\n+    __ reinitialize_ptrue();\n+\n@@ -431,5 +435,0 @@\n-    if (UseSVE > 0) {\n-      \/\/ Reinitialize the ptrue predicate register, in case the external runtime\n-      \/\/ call clobbers ptrue reg, as we may return to SVE compiled code.\n-      __ reinitialize_ptrue();\n-    }\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2662,0 +2662,2 @@\n+  reinitialize_ptrue();\n+\n@@ -2698,0 +2700,5 @@\n+\n+  if (restore_vectors) {\n+    reinitialize_ptrue();\n+  }\n+\n@@ -5307,1 +5314,3 @@\n-  assert(UseSVE > 0, \"should only be used for SVE\");\n+  if (!UseSVE) {\n+    return;\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -970,1 +970,3 @@\n-    sve_ptrue(ptrue, B);\n+    if (UseSVE > 0) {\n+      sve_ptrue(ptrue, B);\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2794,6 +2794,0 @@\n-  if (UseSVE > 0 && save_vectors) {\n-    \/\/ Reinitialize the ptrue predicate register, in case the external runtime\n-    \/\/ call clobbers ptrue reg, as we may return to SVE compiled code.\n-    __ reinitialize_ptrue();\n-  }\n-\n@@ -3022,0 +3016,3 @@\n+  \/\/ May jump to SVE compiled code\n+  __ reinitialize_ptrue();\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -491,5 +491,4 @@\n-    if (UseSVE > 0 ) {\n-      \/\/ Reinitialize the ptrue predicate register, in case the external runtime\n-      \/\/ call clobbers ptrue reg, as we may return to SVE compiled code.\n-      __ reinitialize_ptrue();\n-    }\n+    \/\/ Reinitialize the ptrue predicate register, in case the external runtime\n+    \/\/ call clobbers ptrue reg, as we may return to SVE compiled code.\n+    __ reinitialize_ptrue();\n+\n@@ -5656,5 +5655,3 @@\n-    if (UseSVE > 0) {\n-      \/\/ Reinitialize the ptrue predicate register, in case the external runtime\n-      \/\/ call clobbers ptrue reg, as we may return to SVE compiled code.\n-      __ reinitialize_ptrue();\n-    }\n+    \/\/ Reinitialize the ptrue predicate register, in case the external runtime\n+    \/\/ call clobbers ptrue reg, as we may return to SVE compiled code.\n+    __ reinitialize_ptrue();\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -248,1 +248,4 @@\n-        return false; \/\/ Fatal error\n+        va_list detail_args;\n+        VMError::report_and_die(INTERNAL_ERROR, msg, detail_msg, detail_args, thread,\n+                                pc, info, NULL, NULL, 0, 0);\n+        va_end(detail_args);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}