{"files":[{"patch":"@@ -77,1 +77,1 @@\n-      COPY := .gif .png .xml .css .js .txt javax.tools.JavaCompilerTool, \\\n+      COPY := .gif .png .xml .css .js .js.template .txt javax.tools.JavaCompilerTool, \\\n","filename":"make\/CompileInterimLangtools.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-jdk.javadoc_COPY += .xml .css .js .png .txt\n+jdk.javadoc_COPY += .xml .css .js .js.template .png .txt\n","filename":"make\/CompileJavaModules.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import jdk.javadoc.doclet.DocletEnvironment;\n@@ -219,1 +218,1 @@\n-            f.copyResource(DOCLET_RESOURCES.resolve(DocPaths.SEARCH_JS), true, true);\n+            f.copyResource(DOCLET_RESOURCES.resolve(DocPaths.SEARCH_JS_TEMPLATE), configuration.docResources);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,7 +26,7 @@\n-var noResult = {l: \"No results found\"};\n-var loading = {l: \"Loading search index...\"};\n-var catModules = \"Modules\";\n-var catPackages = \"Packages\";\n-var catTypes = \"Types\";\n-var catMembers = \"Members\";\n-var catSearchTags = \"SearchTags\";\n+var noResult = {l: \"##REPLACE:doclet.search.no_results##\"};\n+var loading = {l: \"##REPLACE:doclet.search.loading##\"};\n+var catModules = \"##REPLACE:doclet.search.modules##\";\n+var catPackages = \"##REPLACE:doclet.search.packages##\";\n+var catTypes = \"##REPLACE:doclet.search.types##\";\n+var catMembers = \"##REPLACE:doclet.search.members##\";\n+var catSearchTags = \"##REPLACE:doclet.search.search_tags##\";\n@@ -40,1 +40,1 @@\n-var UNNAMED = \"<Unnamed>\";\n+var UNNAMED = \"##REPLACE:doclet.search.unnamed##\";\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search.js.template","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search.js","status":"renamed"},{"patch":"@@ -335,0 +335,9 @@\n+\n+doclet.search.no_results=No results found\n+doclet.search.loading=Loading search index...\n+doclet.search.modules=Modules\n+doclet.search.packages=Packages\n+doclet.search.types=Types\n+doclet.search.members=Members\n+doclet.search.search_tags=Search Tags\n+doclet.search.unnamed=<Unnamed>\n\\ No newline at end of file\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,0 +35,3 @@\n+import java.util.MissingResourceException;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -36,0 +39,1 @@\n+import javax.tools.DocumentationTool;\n@@ -41,0 +45,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.Resources;\n@@ -178,1 +183,1 @@\n-                throws DocFileIOException, ResourceIOException {\n+            throws DocFileIOException, ResourceIOException {\n@@ -182,0 +187,18 @@\n+        copyResource(resource, replaceNewLine, null);\n+    }\n+\n+    \/**\n+     * Copy the contents of a resource file to this file.\n+     *\n+     * @param resource the path of the resource, relative to the package of this class\n+     * @param resources if not {@code null}, substitute occurrences of {@code ##REPLACE:key##}\n+     *\n+     * @throws DocFileIOException if there is a problem while writing the copy\n+     * @throws ResourceIOException if there is a problem while reading the resource\n+     *\/\n+    public void copyResource(DocPath resource, Resources resources) throws DocFileIOException, ResourceIOException {\n+        copyResource(resource, true, resources);\n+    }\n+\n+    private void copyResource(DocPath resource, boolean replaceNewLine, Resources resources)\n+                throws DocFileIOException, ResourceIOException {\n@@ -193,1 +216,1 @@\n-                                write(this, writer, line);\n+                                write(this, writer, resources == null ? line : localize(line, resources));\n@@ -219,0 +242,26 @@\n+    private static final Pattern replacePtn = Pattern.compile(\"##REPLACE:(?<key>[A-Za-z0-9._]+)##\");\n+\n+    private String localize(String line, Resources resources) {\n+        Matcher m = replacePtn.matcher(line);\n+        StringBuilder sb = null;\n+        int start = 0;\n+        while (m.find()) {\n+            if (sb == null) {\n+                sb = new StringBuilder();\n+            }\n+            sb.append(line, start, m.start());\n+            try {\n+                sb.append(resources.getText(m.group(\"key\")));\n+            } catch (MissingResourceException e) {\n+                sb.append(m.group());\n+            }\n+            start = m.end();\n+        }\n+        if (sb == null) {\n+            return line;\n+        } else {\n+            sb.append(line.substring(start));\n+            return sb.toString();\n+        }\n+    }\n+\n@@ -282,1 +331,1 @@\n-     * If an IOException occurs, it is wrapped in a DocFileIOException.\n+     * If an {@code IOException} occurs, it is wrapped in a {@code DocFileIOException}.\n@@ -285,2 +334,3 @@\n-     * @param input the stream\n-     * @param buf the buffer\n+     * @param input  the stream\n+     * @param buf    the buffer\n+     *\n@@ -300,1 +350,1 @@\n-     * If an IOException occurs, it is wrapped in a DocFileIOException.\n+     * If an {@code IOException} occurs, it is wrapped in a {@code DocFileIOException}.\n@@ -303,2 +353,3 @@\n-     * @param out the stream\n-     * @param buf the buffer\n+     * @param out     the stream\n+     * @param buf     the buffer\n+     *\n@@ -317,1 +368,1 @@\n-     * If an IOException occurs, it is wrapped in a DocFileIOException.\n+     * If an {@code IOException} occurs, it is wrapped in a {@code DocFileIOException}.\n@@ -320,2 +371,3 @@\n-     * @param out the stream\n-     * @param text the text to be written\n+     * @param out     the stream\n+     * @param text    the text to be written\n+     *\n@@ -334,1 +386,5 @@\n-     * If an IOException occurs, it is wrapped in a ResourceIOException.\n+     * If an {@code IOException} occurs, it is wrapped in a {@code ResourceIOException}.\n+     *\n+     * @param docPath the resource for the stream\n+     * @param in      the stream\n+     * @param buf     the buffer\n@@ -336,3 +392,0 @@\n-     * @param resource the resource for the stream\n-     * @param in the stream\n-     * @param buf the buffer\n@@ -342,1 +395,1 @@\n-    private static int readResource(DocPath resource, InputStream in, byte[] buf) throws ResourceIOException {\n+    private static int readResource(DocPath docPath, InputStream in, byte[] buf) throws ResourceIOException {\n@@ -346,1 +399,1 @@\n-            throw new ResourceIOException(resource, e);\n+            throw new ResourceIOException(docPath, e);\n@@ -352,1 +405,4 @@\n-     * If an IOException occurs, it is wrapped in a ResourceIOException.\n+     * If an {@code IOException} occurs, it is wrapped in a {@code ResourceIOException}.\n+     *\n+     * @param docPath the resource for the stream\n+     * @param in      the stream\n@@ -354,2 +410,0 @@\n-     * @param resource the resource for the stream\n-     * @param in the stream\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFile.java","additions":74,"deletions":20,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -278,0 +278,3 @@\n+    \/** The name of the template for the search javascript file. *\/\n+    public static final DocPath SEARCH_JS_TEMPLATE = DocPath.create(\"search.js.template\");\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPaths.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *      8184205 8214468 8222548 8223378 8234746 8241219 8254627\n+ *      8184205 8214468 8222548 8223378 8234746 8241219 8254627 8247994\n@@ -714,0 +714,4 @@\n+        \/\/ ensure all resource keys were resolved\n+        checkOutput(\"search.js\", false,\n+                \"##REPLACE:\");\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearch\/TestSearch.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8000612 8254627\n+ * @bug 8000612 8254627 8247994\n@@ -37,0 +37,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -203,0 +205,11 @@\n+            \/\/ special handling for strings in search.js.template\n+            FileObject fo = fm.getFileForInput(javadocLoc,\n+                    \"jdk.javadoc.internal.doclets.formats.html\",\n+                    \"resources\/search.js.template\");\n+            CharSequence search_js = fo.getCharContent(true);\n+            Pattern p = Pattern.compile(\"##REPLACE:(?<key>[A-Za-z0-9._]+)##\");\n+            Matcher m = p.matcher(search_js);\n+            while (m.find()) {\n+                results.add(m.group(\"key\"));\n+            }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckResourceKeys.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}