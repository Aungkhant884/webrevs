{"files":[{"patch":"@@ -90,1 +90,1 @@\n-                      (Atomic::cmpxchg(&_claimed_idx, current, current + stride) == current);\n+                      (Atomic::cmpxchg(&_claimed_idx, current, current + stride, memory_order_relaxed) == current);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-    size_t cur = Atomic::fetch_and_add(&_claimed, stride);\n+    size_t cur = Atomic::fetch_and_add(&_claimed, stride, memory_order_relaxed);\n@@ -523,1 +523,1 @@\n-    size_t cur = Atomic::fetch_and_add(&_claimed, stride);\n+    size_t cur = Atomic::fetch_and_add(&_claimed, stride, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -467,1 +467,1 @@\n-  uint worker_id = Atomic::add(&_iterate_discovered_list_id, 1U) - 1;\n+  uint worker_id = Atomic::add(&_iterate_discovered_list_id, 1U, memory_order_relaxed) - 1;\n@@ -474,1 +474,1 @@\n-    worker_id = Atomic::add(&_iterate_discovered_list_id, 1U) - 1;\n+    worker_id = Atomic::add(&_iterate_discovered_list_id, 1U, memory_order_relaxed) - 1;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-  jint index = Atomic::add(&_claimed_index, 1);\n+  jint index = Atomic::add(&_claimed_index, 1, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}