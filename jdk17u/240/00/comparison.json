{"files":[{"patch":"@@ -46,1 +46,1 @@\n-class NimbusIcon implements SynthIcon {\n+class NimbusIcon implements SynthIcon, UIResource {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/NimbusIcon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27355,1 +27355,1 @@\n-               <matte red=\"0\" green=\"0\" blue=\"0\" alpha=\"0\" uiDefaultParentName=\"text\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n+               <matte red=\"0\" green=\"0\" blue=\"0\" alpha=\"0\" uiDefaultParentName=\"text\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n@@ -27358,1 +27358,1 @@\n-               <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n+               <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n@@ -27382,1 +27382,1 @@\n-                  <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectedText\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n+                  <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectedText\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n@@ -27385,1 +27385,1 @@\n-                  <matte red=\"57\" green=\"105\" blue=\"138\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectionBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"false\"\/>\n+                  <matte red=\"57\" green=\"105\" blue=\"138\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectionBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n@@ -27624,1 +27624,3 @@\n-                  <textForeground\/>\n+                  <textForeground>\n+                    <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusSelectedText\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\" uiResource=\"true\"\/>\n+                  <\/textForeground>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import javax.swing.tree.DefaultTreeCellRenderer;\n@@ -210,2 +211,8 @@\n-        g.setColor(context.getStyle().getColor(context,\n-                                               ColorType.TEXT_FOREGROUND));\n+        if (label instanceof DefaultTreeCellRenderer &&\n+                label.getForeground() instanceof UIResource) {\n+            g.setColor(label.getForeground());\n+        } else {\n+            g.setColor(context.getStyle().getColor(context,\n+                    ColorType.TEXT_FOREGROUND));\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthLabelUI.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,161 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8266510 8271315\n+ * @summary  Verifies Nimbus JTree default tree cell renderer use selected text color\n+ * @run main\/manual NimbusJTreeSelTextColor\n+ *\/\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.awt.Color;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.GridBagConstraints;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.tree.DefaultTreeCellRenderer;\n+import javax.swing.UIManager;\n+\n+public class NimbusJTreeSelTextColor {\n+\n+    private static JFrame frame;\n+    private static JTree tree;\n+    private static DefaultTreeCellRenderer treeCellRenderer;\n+    private static volatile CountDownLatch countDownLatch;\n+    private static volatile boolean testResult;\n+\n+    private static final String INSTRUCTIONS = \"INSTRUCTIONS:\\n\\n\"\n+            + \"Verify selected text color is same as selected tree leaf icon color.\\n \"\n+            + \"If the color is same ie, white\\n\"\n+            + \"then press Pass otherwise press Fail.\";\n+\n+    public static void main(String args[]) throws Exception{\n+        countDownLatch = new CountDownLatch(1);\n+\n+        SwingUtilities.invokeAndWait(NimbusJTreeSelTextColor::createUI);\n+        countDownLatch.await(5, TimeUnit.MINUTES);\n+\n+        if (!testResult) {\n+            throw new RuntimeException(\"Selected text color not same as selected tree leaf icon color!\");\n+        }\n+    }\n+\n+    private static void createUI() {\n+        try {\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        JFrame mainFrame = new JFrame();\n+        GridBagLayout layout = new GridBagLayout();\n+        JPanel mainControlPanel = new JPanel(layout);\n+        JPanel resultButtonPanel = new JPanel(layout);\n+\n+        GridBagConstraints gbc = new GridBagConstraints();\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 0;\n+        gbc.insets = new Insets(5, 15, 5, 15);\n+        gbc.fill = GridBagConstraints.HORIZONTAL;\n+        mainControlPanel.add(createComponent(), gbc);\n+\n+        JTextArea instructionTextArea = new JTextArea();\n+        instructionTextArea.setText(INSTRUCTIONS);\n+        instructionTextArea.setEditable(false);\n+        instructionTextArea.setBackground(Color.white);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 1;\n+        gbc.fill = GridBagConstraints.HORIZONTAL;\n+        mainControlPanel.add(instructionTextArea, gbc);\n+\n+        JButton passButton = new JButton(\"Pass\");\n+        passButton.setActionCommand(\"Pass\");\n+        passButton.addActionListener((ActionEvent e) -> {\n+            testResult = true;\n+            mainFrame.dispose();\n+            countDownLatch.countDown();\n+\n+        });\n+\n+        JButton failButton = new JButton(\"Fail\");\n+        failButton.setActionCommand(\"Fail\");\n+        failButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                mainFrame.dispose();\n+                countDownLatch.countDown();\n+            }\n+        });\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 0;\n+\n+        resultButtonPanel.add(passButton, gbc);\n+        gbc.gridx = 1;\n+        gbc.gridy = 0;\n+        resultButtonPanel.add(failButton, gbc);\n+\n+        gbc.gridx = 0;\n+        gbc.gridy = 2;\n+        mainControlPanel.add(resultButtonPanel, gbc);\n+\n+        mainFrame.add(mainControlPanel);\n+        mainFrame.pack();\n+\n+        mainFrame.addWindowListener(new WindowAdapter() {\n+\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                mainFrame.dispose();\n+                countDownLatch.countDown();\n+            }\n+        });\n+        mainFrame.setLocationRelativeTo(null);\n+        mainFrame.setVisible(true);\n+    }\n+\n+    private static JComponent createComponent() {\n+        tree = new JTree();\n+\n+        treeCellRenderer =  new DefaultTreeCellRenderer();\n+        tree.setRootVisible(true);\n+        tree.setShowsRootHandles(true);\n+\n+        tree.setCellRenderer(treeCellRenderer);\n+        tree.setSelectionRow(1);\n+        return tree;\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/NimbusJTreeSelTextColor.java","additions":161,"deletions":0,"binary":false,"changes":161,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.nimbus.NimbusLookAndFeel;\n+import java.awt.Color;\n+\n+\/**\n+ * @test\n+ * @bug 8271315\n+ * @summary  Nimbus JTree renderer properties persist across L&F changes\n+ * @key headful\n+ * @run main NimbusPropertiesDoNotImplUIResource\n+ *\/\n+\n+public class NimbusPropertiesDoNotImplUIResource {\n+    private static final String[] defPropertyKeys = new String[] {\n+            \"Tree.leafIcon\", \"Tree.closedIcon\",\n+            \"Tree.openIcon\", \"Tree.selectionForeground\",\n+            \"Tree.textForeground\", \"Tree.selectionBackground\",\n+            \"Tree.textBackground\", \"Tree.selectionBorderColor\"};\n+\n+    private static String failedKeys;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.LookAndFeelInfo[] installedLookAndFeels;\n+        installedLookAndFeels = UIManager.getInstalledLookAndFeels();\n+\n+        for (UIManager.LookAndFeelInfo LF : installedLookAndFeels) {\n+            try {\n+                UIManager.setLookAndFeel(LF.getClassName());\n+                failedKeys = null;\n+                for (String propertyKey : defPropertyKeys) {\n+                    verifyProperty(propertyKey);\n+                }\n+                if (failedKeys != null) {\n+                    throw new RuntimeException(\"JTree renderer Properties \" +\n+                            failedKeys + \" are not instance of UIResource for \"\n+                            + LF.getClassName());\n+                }\n+            } catch (UnsupportedLookAndFeelException e) {\n+                System.out.println(\"Note: LookAndFeel \" + LF.getClassName()\n+                        + \" is not supported on this configuration\");\n+            }\n+        }\n+\n+        \/\/ Check that both uiResource option true and false work for\n+        \/\/ getDerivedColor method of NimbusLookAndFeel\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+        Color color1 = ((NimbusLookAndFeel)UIManager.getLookAndFeel())\n+                .getDerivedColor(\"text\", 0, 0, 0, 0, false);\n+        if (color1 instanceof UIResource) {\n+            throw new RuntimeException(\"color1 should not be instance of \" +\n+                    \"UIResource\");\n+        }\n+\n+        Color color2 = ((NimbusLookAndFeel)UIManager.getLookAndFeel())\n+                .getDerivedColor(\"text\", 0, 0, 0, 0, true);\n+        if (!(color2 instanceof UIResource)) {\n+            throw new RuntimeException(\"color2 should be instance of \" +\n+                    \"UIResource\");\n+        }\n+\n+    }\n+\n+    private static void verifyProperty(String propertyKey) {\n+        Object property = UIManager.get(propertyKey);\n+        if (property == null) {\n+            return;\n+        }\n+        if (!(property instanceof UIResource)) {\n+            if (failedKeys == null) {\n+                failedKeys = \":\" + propertyKey;\n+            } else {\n+                failedKeys += \",\" + propertyKey;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/NimbusPropertiesDoNotImplUIResource.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}