{"files":[{"patch":"@@ -280,0 +280,14 @@\n+    } else if (n->is_Region()) {\n+      Node* iff = n->in(1)->in(0);\n+      assert(n->req() == 3 && n->in(2)->in(0) == iff, \"not a diamond\");\n+      assert(iff->is_If(), \"no if for the diamond\");\n+      Node* bol = iff->in(1);\n+      assert(bol->is_Bool(), \"unexpected if shape\");\n+      Node* cmp = bol->in(1);\n+      assert(cmp->is_Cmp(), \"unexpected if shape\");\n+      if (cmp->in(1)->is_top() || cmp->in(2)->is_top()) {\n+        \/\/ This region should lose its Phis and be optimized out by igvn but there's a chance the if folds to top first\n+        \/\/ which then causes a reachable part of the graph to become dead.\n+        Compile* C = _stringopts->C;\n+        C->gvn_replace_by(n, iff->in(0));\n+      }\n@@ -1006,0 +1020,1 @@\n+        _control.push(ptr);\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7179138\n+ * @bug 7179138 8271341\n@@ -31,0 +31,2 @@\n+ * @run main\/othervm -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:RepeatCompilation=100 compiler.c2.Test7179138_1\n@@ -70,1 +72,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test7179138_1.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}