{"files":[{"patch":"@@ -48,1 +48,0 @@\n-\n@@ -55,2 +54,0 @@\n-  static inline bool should_process_no_suspend(JavaThread* thread);\n-\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"runtime\/stackWatermarkSet.hpp\"\n@@ -65,13 +66,0 @@\n-bool SafepointMechanism::should_process_no_suspend(JavaThread* thread) {\n-  if (global_poll() || thread->handshake_state()->has_a_non_suspend_operation()) {\n-    return true;\n-  } else {\n-    \/\/ We ignore suspend requests if any and just check before returning if we need\n-    \/\/ to fix the thread's oops and first few frames due to a possible safepoint.\n-    StackWatermarkSet::on_safepoint(thread);\n-    update_poll_values(thread);\n-    OrderAccess::cross_modify_fence();\n-    return false;\n-  }\n-}\n-\n@@ -84,1 +72,17 @@\n-  return should_process_no_suspend(thread);\n+  \/\/  We are armed but we should ignore suspend operations.\n+  if (global_poll() || \/\/ Safepoint\n+      thread->handshake_state()->has_a_non_suspend_operation() || \/\/ Non-suspend handshake\n+      !StackWatermarkSet::processing_started(thread)) { \/\/ StackWatermark processing is not started\n+    return true;\n+  }\n+\n+  \/\/ It has boiled down to two possibilities:\n+  \/\/ 1: We have nothing to process, this just a disarm poll.\n+  \/\/ 2: We have a suspend handshake, which cannot be processed.\n+  \/\/ We update the poll value in case of a disarm, to reduce false positives.\n+  update_poll_values(thread);\n+\n+  \/\/ We are now about to avoid processing and thus no cross modify fence will be executed.\n+  \/\/ In case a safepoint happened, while being blocked, we execute it here.\n+  OrderAccess::cross_modify_fence();\n+  return false;\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.inline.hpp","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -131,0 +131,9 @@\n+bool StackWatermarkSet::processing_started(JavaThread* jt) {\n+  for (StackWatermark* current = head(jt); current != NULL; current = current->next()) {\n+    if (!current->processing_started()) {\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/stackWatermarkSet.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -82,0 +82,3 @@\n+  \/\/ Returns true if all StackWatermarks have been started.\n+  static bool processing_started(JavaThread* jt);\n+\n","filename":"src\/hotspot\/share\/runtime\/stackWatermarkSet.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}