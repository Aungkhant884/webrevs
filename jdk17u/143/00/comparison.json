{"files":[{"patch":"@@ -72,3 +72,3 @@\n-        testUniqueInfoOpt(new String[] {\"--help\", \"--help\"}, \"possible options\");\n-        testUniqueInfoOpt(new String[] {\"-X\", \"-X\"}, \"extra options\");\n-        testUniqueInfoOpt(new String[] {\"--help-lint\", \"--help-lint\"}, \"supported keys\");\n+        testUniqueInfoOpt(new String[] {\"--help\"},       new String[] {\"--help\", \"--help\"});\n+        testUniqueInfoOpt(new String[] {\"-X\"},           new String[] {\"-X\", \"-X\"});\n+        testUniqueInfoOpt(new String[] {\"--help-lint\"},  new String[] {\"--help-lint\", \"--help-lint\"});\n@@ -76,3 +76,2 @@\n-        String specVersion = System.getProperty(\"java.specification.version\");\n-        testUniqueInfoOpt(new String[] {\"-version\", \"-version\"}, \"javac\", specVersion);\n-        testUniqueInfoOpt(new String[] {\"-fullversion\", \"-fullversion\"}, \"javac\", specVersion);\n+        testUniqueInfoOpt(new String[] {\"-version\"},     new String[] {\"-version\", \"-version\"});\n+        testUniqueInfoOpt(new String[] {\"-fullversion\"}, new String[] {\"-fullversion\", \"-fullversion\"});\n@@ -81,1 +80,1 @@\n-    void testUniqueInfoOpt(String[] opts, String... expect) {\n+    void testUniqueInfoOpt(String[] baseOpts, String[] testOpts) {\n@@ -83,3 +82,8 @@\n-        runMain(opts, files)\n-                .checkOK()\n-                .checkUniqueLog(expect);\n+\n+        TestResult base = runMain(baseOpts, files)\n+                                 .checkOK();\n+\n+        TestResult test = runMain(testOpts, files)\n+                                 .checkOK();\n+\n+        base.checkSameLog(test);\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/InfoOptsTest.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -272,2 +272,2 @@\n-        TestResult checkUniqueLog(String... uniqueExpects) {\n-            return checkUniqueLog(Log.DIRECT, uniqueExpects);\n+        TestResult checkSameLog(TestResult other) {\n+            return checkSameLog(Log.DIRECT, other);\n@@ -276,8 +276,5 @@\n-        TestResult checkUniqueLog(Log l, String... uniqueExpects) {\n-            String log = logs.get(l);\n-            for (String e : uniqueExpects) {\n-                if (!log.contains(e)) {\n-                    error(\"Expected string not found: \" + e);\n-                } else if (log.indexOf(e) != log.lastIndexOf(e)) {\n-                    error(\"Expected string appears more than once: \" + e);\n-                }\n+        TestResult checkSameLog(Log l, TestResult other) {\n+            String thisLog = logs.get(l);\n+            String otherLog = other.logs.get(l);\n+            if (!thisLog.equals(otherLog)) {\n+                error(\"Logs are not the same.\\nThis:\\n\" + thisLog + \"\\nOther:\\n\" + otherLog);\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/OptionModesTester.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"}]}