{"files":[{"patch":"@@ -31,2 +31,1 @@\n- * @compile TestLogTouchedMethods.java PrintTouchedMethods.java\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+LogTouchedMethods PrintTouchedMethods\n+ * @run driver PrintTouchedMethods\n@@ -48,1 +47,1 @@\n-          \"TestLogTouchedMethods\");\n+          TestLogTouchedMethods.class.getName());\n@@ -59,1 +58,1 @@\n-          \"TestLogTouchedMethods\");\n+          TestLogTouchedMethods.class.getName());\n@@ -86,1 +85,1 @@\n-          \"TestLogTouchedMethods\");\n+          TestLogTouchedMethods.class.getName());\n@@ -109,1 +108,1 @@\n-          \"TestLogTouchedMethods\");\n+          TestLogTouchedMethods.class.getName());\n@@ -125,12 +124,1 @@\n-\n-      \/\/ Test jcmd PrintTouchedMethods VM.print_touched_methods\n-      String pid = Long.toString(ProcessTools.getProcessId());\n-      pb = new ProcessBuilder();\n-      pb.command(new String[] {JDKToolFinder.getJDKTool(\"jcmd\"), pid, \"VM.print_touched_methods\"});\n-      output = new OutputAnalyzer(pb.start());\n-      try {\n-        output.shouldContain(\"PrintTouchedMethods.main:([Ljava\/lang\/String;)V\");\n-      } catch (RuntimeException e) {\n-        output.shouldContain(\"Unknown diagnostic command\");\n-      }\n-  }\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/PrintTouchedMethods.java","additions":6,"deletions":18,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8025692\n+ * @summary Test jcmd PrintTouchedMethods VM.print_touched_methods\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @library \/test\/lib\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+LogTouchedMethods PrintTouchedMethodsJcmd\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.JDKToolFinder;\n+\n+public class PrintTouchedMethodsJcmd {\n+\n+    public static void main(String args[]) throws Exception {\n+      var pid = Long.toString(ProcessHandle.current().pid());\n+      var pb = new ProcessBuilder();\n+      pb.command(new String[] {JDKToolFinder.getJDKTool(\"jcmd\"), pid, \"VM.print_touched_methods\"});\n+      var output = new OutputAnalyzer(pb.start());\n+      try {\n+        output.shouldContain(\"PrintTouchedMethodsJcmd.main:([Ljava\/lang\/String;)V\");\n+      } catch (RuntimeException e) {\n+        output.shouldContain(\"Unknown diagnostic command\");\n+      }\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/PrintTouchedMethodsJcmd.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}