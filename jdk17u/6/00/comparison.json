{"files":[{"patch":"@@ -3365,0 +3365,1 @@\n+      return false; \/\/ need to recalculate idom data\n@@ -3383,1 +3384,1 @@\n-      return true;\n+      return false; \/\/ need to recalculate idom data\n@@ -3496,0 +3497,1 @@\n+        return false; \/\/ need to recalculate idom data\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8268261\n+ * @summary Test idom data after unswitching loop following by full unroll.\n+ * @run main\/othervm -XX:CompileCommand=compileonly,TestIdomAfterLoopUnswitching::*\n+ *                   -Xcomp -XX:-TieredCompilation TestIdomAfterLoopUnswitching\n+ *\/\n+\n+public class TestIdomAfterLoopUnswitching {\n+\n+    public static void main(String[] k) {\n+        test1();\n+        test2();\n+    }\n+\n+    public static void test1() {\n+        float h = 0;\n+        for (int j = 0; j < 3; ++j) {\n+            float k = 9;\n+            float[] fla = new float[2];\n+            for (int n = 0; n < 5; ++n) {\n+                if (j >= 1) {\n+                    if (n <= 1) {\n+                        h += k;\n+                    }\n+                }\n+            }\n+            for (int l12 = 0; l12 < 9; ++l12) {\n+                for (int o = 0; o < 1; ++o) {\n+                    fla[0] += 1.0f;\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void test2() {\n+        float[] fla = new float[1000];\n+        for (int i = 0; i < 1000; i++) {\n+            for (float fl2 : fla) {\n+                fla[100] = 1.0f;\n+            }\n+        }\n+        for (int i = 0; i < 3; i++) {\n+            for (int j = 0; j < 14; j++) {\n+                fla[2] = fla[j];\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestIdomAfterLoopUnswitching.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}