{"files":[{"patch":"@@ -58,5 +58,4 @@\n-        if (state.head.content[state.index] === null) {\n-            fetchFileAtHead(state);\n-        }\n-        if (state.base.content[state.index] === null) {\n-            fetchFileAtBase(state);\n+        if (state.head.content[state.index] === null || state.base.content[state.index] === null) {\n+            const content = fetchFileContent(state);\n+            state.head.content[state.index] = content.head;\n+            state.base.content[state.index] = content.base;\n@@ -1366,0 +1365,32 @@\n+function reverse(hunks) {\n+    const reversed = new Array();\n+    for (let hunk of hunks) {\n+        var srcLines = hunk.dst.lines.map(l => '-' + l.substring(1));\n+        var dstLines = hunk.src.lines.map(l => '+' + l.substring(1));\n+        reversed.push(new Hunk(hunk.dst.start, hunk.dst.lines, hunk.src.start, hunk.src.lines));\n+    }\n+    return reversed;\n+}\n+\n+function apply(hunks, lines) {\n+    const newLines = new Array();\n+\n+    let last = 1;\n+    for (let i = 0; i < hunks.length; i++) {\n+        const hunk = hunks[i];\n+        for (let j = last; j < hunk.src.start; j++) {\n+            newLines.push(lines[j - 1]);\n+        }\n+        for (let line of hunk.dst.lines) {\n+            newLines.push(line.substring(1));\n+        }\n+        last = hunk.src.start + hunk.src.lines.length;\n+    }\n+\n+    for (let i = last; i <= lines.length; i++) {\n+        newLines.push(lines[i - 1]);\n+    }\n+\n+    return newLines;\n+}\n+\n@@ -1388,1 +1419,1 @@\n-async function fetchComparison(repo, prId, range, metadata) {\n+async function fetchComparison(repo, prId, range, metadataPromise) {\n@@ -1391,2 +1422,0 @@\n-    const api = \"https:\/\/api.github.com\/repos\/\" + metadata.base.repo.full_name + \"\/compare\/\" +\n-            metadata.base.sha + \"...\" + metadata.head.sha;\n@@ -1394,1 +1423,5 @@\n-            .then(r => r.ok ? r : fetch(api))\n+            .then(r => r.ok ?\n+                r :\n+                metadataPromise.then(m => fetch(\"https:\/\/api.github.com\/repos\/\" + m.base.repo.full_name + \"\/compare\/\" +\n+                                                m.base.sha + \"...\" + m.head.sha)))\n+\n@@ -1405,0 +1438,10 @@\n+function fetchFileContent(state) {\n+    const reverseHunks = reverse(hunks(state));\n+    const headContent = fetchFileAtHead(state);\n+    const baseContent = headContent.then(lines => apply(reverseHunks, lines));\n+    return {\n+        \"base\": baseContent,\n+        \"head\": headContent\n+    };\n+}\n+\n@@ -1416,17 +1459,1 @@\n-    state.head.content[index] = fetch(url).then(r => r.text()).then(text => text.split('\\n'));\n-}\n-\n-function fetchFileAtBase(state) {\n-    const index = state.index;\n-    const file = state.comparison.files[index];\n-    if (file.status === \"added\") {\n-        return;\n-    }\n-\n-    const raw_url = \"https:\/\/raw.githubusercontent.com\";\n-    const sha = state.metadata.base.sha;\n-    const full_name = state.metadata.base.repo.full_name;\n-    const filename = file.status === \"copied\" || file.status === \"renamed\" ?\n-        file.previous_filename : file.filename;\n-    const url = raw_url + \"\/\" + full_name + \"\/\" + sha + \"\/\" + filename;\n-    state.base.content[index] = fetch(url).then(r => r.text()).then(text => text.split('\\n'));\n+    return fetch(url).then(r => r.text()).then(text => text.split('\\n'));\n@@ -1443,2 +1470,3 @@\n-    const metadata = await fetchMetadata(repo, prId, range);\n-    const comparison = await fetchComparison(repo, prId, range, metadata);\n+    const metadata = fetchMetadata(repo, prId, range);\n+    const comparison = fetchComparison(repo, prId, range, metadata);\n+    const commits = fetchCommits(repo, prId, range);\n@@ -1446,3 +1474,3 @@\n-    state.metadata = metadata;\n-    state.comparison = comparison;\n-    state.commits = fetchCommits(repo, prId, range);\n+    state.metadata = await metadata;\n+    state.comparison = await comparison;\n+    state.commits = await commits;\n@@ -1455,11 +1483,0 @@\n-    const num_files_to_prefetch = Math.min(files.length, 25);\n-    const head_sha = state.metadata.head.sha;\n-    const head_full_name = state.metadata.head.repo.full_name;\n-    for (let i = 0; i < num_files_to_prefetch; i++) {\n-        if (files[i].status === \"deleted\") {\n-            continue;\n-        } else {\n-            const url = raw_url + \"\/\" + head_full_name + \"\/\" + head_sha + \"\/\" + files[i].filename;\n-            state.head.content[i] = fetch(url).then(r => r.text()).then(text => text.split('\\n'));\n-        }\n-    }\n@@ -1468,13 +1485,0 @@\n-    const base_sha = state.metadata.base.sha;\n-    const base_full_name = state.metadata.base.repo.full_name;\n-    for (let i = 0; i < num_files_to_prefetch; i++) {\n-        const file = files[i];\n-        if (file.status === \"added\") {\n-            continue;\n-        } else {\n-            const filename = file.status === \"copied\" || file.status === \"renamed\" ?\n-                file.previous_filename : file.filename;\n-            const url = raw_url + \"\/\" + base_full_name + \"\/\" + base_sha + \"\/\" + filename;\n-            state.base.content[i] = fetch(url).then(r => r.text()).then(text => text.split('\\n'));\n-        }\n-    }\n@@ -1502,0 +1506,9 @@\n+\n+    \/\/ Pre-fetch base and head content for up to 25 files\n+    for (let i = 0; i < Math.min(files.length, 25); i++) {\n+        state.index = i;\n+        const content = fetchFileContent(state);\n+        state.head.content[i] = content.head;\n+        state.base.content[i] = content.base;\n+    }\n+    state.index = -1;\n","filename":"webrev.js","additions":68,"deletions":55,"binary":false,"changes":123,"status":"modified"}]}