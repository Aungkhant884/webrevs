{"files":[{"patch":"@@ -39,4 +39,0 @@\n-    private static boolean fwkIsMainThread() {\n-        return Invoker.getInvoker().isEventThread();\n-    }\n-\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/MainThread.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -11,0 +11,4 @@\n+#if OS(UNIX)\n+#include <pthread.h>\n+#endif\n+\n@@ -13,1 +17,0 @@\n-static jmethodID fwkIsMainThread;\n@@ -16,0 +19,6 @@\n+#if OS(UNIX)\n+static pthread_t mainThread;\n+#elif OS(WINDOWS)\n+static ThreadIdentifier mainThread { 0 };\n+#endif\n+\n@@ -51,7 +60,0 @@\n-    fwkIsMainThread = env->GetStaticMethodID(\n-            jMainThreadCls,\n-            \"fwkIsMainThread\",\n-            \"()Z\");\n-\n-    ASSERT(fwkIsMainThread);\n-\n@@ -65,1 +67,4 @@\n-#if OS(WINDOWS)\n+#if OS(UNIX)\n+    mainThread = pthread_self();\n+#elif OS(WINDOWS)\n+    mainThread = Thread::currentID();\n@@ -70,1 +75,2 @@\n-bool isMainThreadIfInitialized()\n+#if OS(UNIX)\n+bool isMainThread()\n@@ -72,1 +78,1 @@\n-    return isMainThread();\n+    return pthread_equal(pthread_self(), mainThread);\n@@ -74,1 +80,1 @@\n-\n+#elif OS(WINDOWS)\n@@ -77,5 +83,1 @@\n-    AttachThreadAsNonDaemonToJavaEnv autoAttach;\n-    JNIEnv* env = autoAttach.env();\n-    jboolean isMainThread = env->CallStaticBooleanMethod(jMainThreadCls, fwkIsMainThread);\n-    WTF::CheckAndClearException(env);\n-    return isMainThread == JNI_TRUE;\n+    return mainThread == Thread::currentID();\n@@ -83,0 +85,1 @@\n+#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/MainThreadJava.cpp","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -274,1 +274,0 @@\n-#if !PLATFORM(JAVA)\n@@ -277,1 +276,0 @@\n-#endif\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/win\/ThreadingWin.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}