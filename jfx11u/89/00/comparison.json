{"files":[{"patch":"@@ -77,4 +77,1 @@\n-        size_t pos = m_availMimeTypes.find(mimeType);\n-        if (pos != WTF::notFound) {\n-            m_availMimeTypes.remove(pos);\n-        }\n+        m_availMimeTypes.remove(mimeType);\n@@ -89,2 +86,2 @@\n-        m_availMimeTypes.append(mimeURIList());\n-        m_availMimeTypes.append(mimeShortcutName());\n+        m_availMimeTypes.add(mimeURIList());\n+        m_availMimeTypes.add(mimeShortcutName());\n@@ -97,1 +94,1 @@\n-        m_availMimeTypes.append(mimeURIList());\n+        m_availMimeTypes.add(mimeURIList());\n@@ -105,1 +102,1 @@\n-        m_availMimeTypes.append(mimePlainText());\n+        m_availMimeTypes.add(mimePlainText());\n@@ -110,1 +107,1 @@\n-        m_availMimeTypes.append(mimeHTML());\n+        m_availMimeTypes.add(mimeHTML());\n@@ -134,2 +131,3 @@\n-        \/\/returns MIME Types available in clipboard.\n-        return m_availMimeTypes;\n+        Vector<String> types;\n+        types.appendRange(m_availMimeTypes.begin(), m_availMimeTypes.end());\n+        return types; \/\/returns MIME Types available in clipboard\n@@ -219,1 +217,1 @@\n-    Vector<String> m_availMimeTypes;\n+    ListHashSet<String> m_availMimeTypes;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/DataObjectJava.h","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -240,0 +240,1 @@\n+    data->setData(DataObjectJava::mimeHTML(), jGetPlainText());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/PasteboardJava.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javafx.application.Application;\n+import javafx.application.Platform;\n+import javafx.geometry.Insets;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.Scene;\n+import javafx.scene.web.WebEngine;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+import java.io.File;\n+\n+public class ClipBoardDataTest extends Application {\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+\n+        VBox instructions =  new VBox(\n+                new Label(\" This test is for manual copy and paste clipboard events for webview , please follow below steps\"),\n+                new Label(\" \"),\n+                new Label(\" STEPS:\"),\n+                new Label(\"  1. Select the blue color text\"),\n+                new Label(\"  2. Right click on selected text and do copy.\"),\n+                new Label(\"  3. Paste the text by ctrl + v or command +v\"),\n+                new Label(\" \"),\n+                new Label(\"  Expected behaviour: on paste, a number would be displayed as 2\"),\n+                new Label(\"  Without fix , on paste a number would be displayed as 4 or more\"));\n+\n+        Button passButton = new Button(\"Pass\");\n+        passButton.setOnAction(e -> {\n+            Platform.exit();\n+        });\n+\n+        Button failButton = new Button(\"Fail\");\n+        failButton.setOnAction(e -> {\n+            Platform.exit();\n+            throw new AssertionError(\"on paste the Data Nodes count is wrong.\");\n+        });\n+\n+        WebView webView = new WebView();\n+        WebEngine webEngine = webView.getEngine();\n+        webEngine.loadContent(\n+                \"<html>\\n\" +\n+                        \"<head> \\n\" +\n+                        \"   \\n\" +\n+                        \"<\/head>\\n\" +\n+                        \"<body>\\n\" +\n+                        \"<p id=\\\"data\\\" style=color:blue; >This is a test of the clipboard. select and manually copy me, and paste using ctrl+v:<\/p>\\n\" +\n+                        \"<div id=\\\"clipboardData\\\" contenteditable='true'><\/div>\\n\" +\n+                        \" <script>\\n\" +\n+                        \"        document.addEventListener('paste', e => {\\n\" +\n+                        \"            let messages = [];\\n\" +\n+                        \"            if (e.clipboardData.types) {\\n\" +\n+                        \"                let message_index = 0;\\n\" +\n+                        \"                e.clipboardData.types.forEach(type => {\\n\" +\n+                        \"                    messages.push( type + \\\": \\\" + e.clipboardData.getData(type));\\n\" +\n+                        \"                    const para = document.createElement(\\\"p\\\");\\n\" +\n+                        \"                    para.innerText = type + \\\": \\\" + e.clipboardData.getData(type);\\n\" +\n+                        \"                    document.getElementById(\\\"clipboardData\\\").innerText = ++message_index;\\n\" +\n+                        \"                });\\n\" +\n+                        \"            }\\n\" +\n+                        \"        });\\n\" +\n+                        \"<\/script>\\n\" +\n+                        \"<\/body>\\n\" +\n+                        \"<\/html>\");\n+\n+        HBox buttons = new HBox(20, passButton, failButton);\n+        buttons.setPadding(new Insets(10));\n+        VBox rootNode = new VBox(20, new HBox(instructions), webView, buttons);\n+        rootNode.setPadding(new Insets(10));\n+        Scene scene = new Scene(rootNode, 1000, 600);\n+        primaryStage.setScene(scene);\n+        primaryStage.show();\n+    }\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+}\n","filename":"tests\/manual\/web\/ClipBoardDataTest.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"}]}