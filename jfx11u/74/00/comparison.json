{"files":[{"patch":"@@ -114,3 +114,10 @@\n-        \/\/ Look for the library in the same directory as the jar file\n-        \/\/ containing this class.\n-        \/\/ If that fails, then try System.loadLibrary.\n+        \/\/ The search order for native library loading is:\n+        \/\/ - try to load the native library from the same folder as this jar\n+        \/\/   (only on non-modular builds)\n+        \/\/ - if the native library comes bundled as a resource it is extracted\n+        \/\/   and loaded\n+        \/\/ - the java.library.path is searched for the library in definition\n+        \/\/   order\n+        \/\/ - the library is loaded via System#loadLibrary\n+        \/\/ - on iOS native library is staticly linked and detected from the\n+        \/\/   existence of a JNI_OnLoad_libraryname funtion\n@@ -126,0 +133,5 @@\n+            \/\/ if the library is available in the jar, copy it to cache and load it from there\n+            if (loadLibraryFromResource(libraryName, dependencies, caller)) {\n+                return;\n+            }\n+\n@@ -156,4 +168,0 @@\n-                \/\/ if the library is available in the jar, copy it to cache and load it from there\n-                if (loadLibraryFromResource(libraryName, dependencies, caller)) {\n-                    return;\n-                }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/utils\/NativeLibLoader.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"}]}