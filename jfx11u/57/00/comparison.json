{"files":[{"patch":"@@ -223,0 +223,7 @@\n+\/\/ Called from twkInit to initialize the client. This will ensure that\n+\/\/ the page field is initialized before any operation that needs it\n+void FrameLoaderClientJava::init()\n+{\n+    (void)page();\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/FrameLoaderClientJava.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+    void init();\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/FrameLoaderClientJava.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -927,2 +927,5 @@\n-    static_cast<FrameLoaderClientJava&>(page->mainFrame().loader().client())\n-                                            .setFrame(&page->mainFrame());\n+\n+    FrameLoaderClientJava& client =\n+        static_cast<FrameLoaderClientJava&>(page->mainFrame().loader().client());\n+    client.init();\n+    client.setFrame(&page->mainFrame());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/WebPage.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -448,0 +448,19 @@\n+    private void verifyUserAgentString(String userAgentString) {\n+        final String fxVersion = System.getProperty(\"javafx.runtime.version\");\n+        final String numericStr = fxVersion.split(\"[^0-9]\")[0];\n+        final String fxVersionString = \"JavaFX\/\" + numericStr;\n+        assertTrue(\"UserAgentString does not contain \" + fxVersionString, userAgentString.contains(fxVersionString));\n+\n+        File webkitLicense = new File(\"src\/main\/legal\/webkit.md\");\n+        assertTrue(\"File does not exist: \" + webkitLicense, webkitLicense.exists());\n+\n+        try (final BufferedReader licenseText = new BufferedReader(new FileReader(webkitLicense))) {\n+            final String firstLine = licenseText.readLine().trim();\n+            final String webkitVersion = firstLine.substring(firstLine.lastIndexOf(\" \") + 2);\n+            assertTrue(\"webkitVersion should not be empty\", webkitVersion.length() > 0);\n+            assertTrue(\"UserAgentString does not contain: \" + webkitVersion, userAgentString.contains(webkitVersion));\n+        } catch (IOException ex){\n+            throw new AssertionError(ex);\n+        }\n+    }\n+\n@@ -456,16 +475,18 @@\n-            final String fxVersion = System.getProperty(\"javafx.runtime.version\");\n-            final String numericStr = fxVersion.split(\"[^0-9]\")[0];\n-            final String fxVersionString = \"JavaFX\/\" + numericStr;\n-            assertTrue(\"UserAgentString does not contain \" + fxVersionString, userAgentString.contains(fxVersionString));\n-\n-            File webkitLicense = new File(\"src\/main\/legal\/webkit.md\");\n-            assertTrue(\"File does not exist: \" + webkitLicense, webkitLicense.exists());\n-\n-            try (final BufferedReader licenseText = new BufferedReader(new FileReader(webkitLicense))) {\n-                final String firstLine = licenseText.readLine().trim();\n-                final String webkitVersion = firstLine.substring(firstLine.lastIndexOf(\" \") + 2);\n-                assertTrue(\"webkitVersion should not be empty\", webkitVersion.length() > 0);\n-                assertTrue(\"UserAgentString does not contain: \" + webkitVersion, userAgentString.contains(webkitVersion));\n-            } catch (IOException ex){\n-                throw new AssertionError(ex);\n-            }\n+            verifyUserAgentString(userAgentString);\n+        });\n+    }\n+\n+    \/**\n+     * @test\n+     * @bug 8275138\n+     * Check UserAgentString from JavaScript for javafx runtime version and webkit version\n+     *\/\n+    @Test public void testUserAgentStringJS() {\n+        final WebEngine webEngine = createWebEngine();\n+        submit(() -> {\n+            final JSObject window = (JSObject) webEngine.executeScript(\"window\");\n+            assertNotNull(window);\n+            webEngine.executeScript(\"var userAgent = navigator.userAgent\");\n+            String userAgentString = (String)window.getMember(\"userAgent\");\n+            assertNotNull(userAgentString);\n+            verifyUserAgentString(userAgentString);\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/MiscellaneousTest.java","additions":37,"deletions":16,"binary":false,"changes":53,"status":"modified"}]}