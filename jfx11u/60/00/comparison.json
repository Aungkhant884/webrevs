{"files":[{"patch":"@@ -1305,1 +1305,4 @@\n-                        if (pdata->cItems > 0) {\n+                        jlong bufferSize = me.size() - sizeof(UINT);\n+                        if ((pdata->cItems > 0) &&\n+                            (bufferSize == (jlong)pdata->cItems * itemSize))\n+                        {\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/win\/GlassClipboard.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4,0 +4,2 @@\n+--add-exports java.desktop\/sun.awt.datatransfer=ALL-UNNAMED\n+#\n","filename":"tests\/system\/src\/test\/addExports","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import com.sun.javafx.PlatformUtil;\n@@ -36,1 +37,1 @@\n-import java.awt.*;\n+import java.awt.Toolkit;\n@@ -39,0 +40,1 @@\n+import java.awt.datatransfer.Transferable;\n@@ -42,2 +44,5 @@\n-import static junit.framework.TestCase.fail;\n-import static org.junit.Assert.assertEquals;\n+import sun.awt.datatransfer.ClipboardTransferable;\n+import sun.awt.datatransfer.SunClipboard;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assume.assumeTrue;\n@@ -117,0 +122,19 @@\n+    \/*\n+     * @bug 8274929\n+     *\/\n+    @Test\n+    public void testCustomClipboard() throws Exception {\n+        \/\/ Test is only valid on Windows\n+        assumeTrue(PlatformUtil.isWindows());\n+\n+        \/\/ Put custom content on the system clipboard (via AWT)\n+        Toolkit.getDefaultToolkit().getSystemClipboard()\n+            .setContents(new ClipboardTransferable(new CustomClipboard()), null);\n+\n+        Util.runAndWait(() -> {\n+            \/\/ Read the system Clipboard\n+            boolean hasString = clipboard.hasString();\n+            assertFalse(hasString);\n+        });\n+    }\n+\n@@ -121,0 +145,82 @@\n+\n+    private static final class CustomClipboard extends SunClipboard {\n+\n+        private static final int CF_HDROP = 15;\n+\n+        \/\/ Custom Drag and drop data to put on the system clipboard (using AWT)\n+        private static final byte[] CF_HDROP_BYTES = new byte[] {\n+            \/\/ HEADER\n+            0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+            \/\/ D:\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+            0x44, 0x00, 0x3A, 0x00, 0x5C, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00, 0x61, 0x00,\n+            \/\/ terminate entry\n+            0x00, 0x00,\n+            \/\/ terminate content\n+            0x00, 0x00,\n+        };\n+\n+        public CustomClipboard() {\n+            super(\"CustomClipboard\");\n+        }\n+\n+        @Override\n+        public long getID() {\n+            return 0;\n+        }\n+\n+        @Override\n+        protected void clearNativeContext() {\n+            \/\/ no-op\n+        }\n+\n+        @Override\n+        protected void setContentsNative(final Transferable transferable) {\n+            \/\/ no-op\n+        }\n+\n+        @Override\n+        protected long[] getClipboardFormats() {\n+            return new long[] { CF_HDROP };\n+        }\n+\n+        @Override\n+        protected byte[] getClipboardData(final long id) {\n+            if (id == CF_HDROP) {\n+                return CF_HDROP_BYTES;\n+            } else {\n+                return new byte[0];\n+            }\n+        }\n+\n+        @Override\n+        protected void registerClipboardViewerChecked() {\n+            \/\/ no-op\n+        }\n+\n+        @Override\n+        protected void unregisterClipboardViewerChecked() {\n+            \/\/ no-op\n+        }\n+\n+    }\n+\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/input\/ClipboardTest.java","additions":109,"deletions":3,"binary":false,"changes":112,"status":"modified"}]}