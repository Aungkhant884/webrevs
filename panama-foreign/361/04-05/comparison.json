{"files":[{"patch":"@@ -50,0 +50,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -168,0 +169,12 @@\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testNullClaim() {\n+        MemorySegment.ofArray(new byte[5]).handoff((NativeScope)null);\n+    }\n+\n+    @Test(expectedExceptions = IllegalStateException.class)\n+    public void testNotAliveClaim() {\n+        MemorySegment segment = MemorySegment.ofArray(new byte[1]);\n+        segment.close();\n+        segment.handoff(NativeScope.boundedScope(10));\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestNativeScope.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -217,1 +217,2 @@\n-            () -> spliterator(mallocSegment.withAccessModes(READ|WRITE|HANDOFF), layout), READ|WRITE|HANDOFF\n+            () -> spliterator(mallocSegment.withAccessModes(READ|WRITE| SHARE), layout), READ|WRITE| SHARE,\n+            () -> spliterator(mallocSegment.withAccessModes(READ|WRITE| SHARE |HANDOFF), layout), READ|WRITE| SHARE |HANDOFF\n","filename":"test\/jdk\/java\/foreign\/TestSpliterator.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}