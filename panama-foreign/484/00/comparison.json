{"files":[{"patch":"@@ -103,2 +103,2 @@\n-    @Test(expectedExceptions = IllegalArgumentException.class)\n-    public void testBarVariableSymbolLookup() throws Throwable {\n+    @Test\n+    public void testBadVariableSymbolLookup() {\n@@ -106,1 +106,11 @@\n-        lookup.lookup(\"c\", MemoryLayouts.JAVA_INT.withBitAlignment(1 << 16)).get();\n+        try {\n+            MemoryLayout layout = MemoryLayouts.JAVA_INT.withBitAlignment(1 << 16);\n+            MemorySegment segment = lookup.lookup(\"c\", layout).get();\n+            \/\/ no exception, check that address is aligned\n+            if ((segment.address().toRawLongValue() % layout.byteAlignment()) != 0) {\n+                fail(\"Unaligned address\");\n+            }\n+        } catch (IllegalArgumentException ex) {\n+            \/\/ ok, means address was not aligned\n+        }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLibraryLookup.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"}]}