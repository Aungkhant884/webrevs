{"files":[{"patch":"@@ -578,1 +578,1 @@\n-            dependencies: [\"devkit\", \"gtest\"],\n+            dependencies: [\"devkit\", \"gtest\", \"libffi\"],\n@@ -582,1 +582,2 @@\n-                \"--enable-libffi-bundling\"\n+                \"--with-libffi=\" + input.get(\"libffi\", \"home_path\"),\n+                \"--enable-libffi-bundling\",\n@@ -732,0 +733,34 @@\n+    \/\/ Define artifact just for linux-x64-zero, which is the only one we test on\n+    [\"linux-x64\"].forEach(function (name) {\n+        var o = artifactData[name]\n+        var pf = o.platform\n+        var jdk_subdir = (o.jdk_subdir != null ? o.jdk_subdir : \"jdk-\" + data.version);\n+        var jdk_suffix = (o.jdk_suffix != null ? o.jdk_suffix : \"tar.gz\");\n+        var zeroName = name + \"-zero\";\n+        profiles[zeroName].artifacts = {\n+            jdk: {\n+                local: \"bundles\/\\\\(jdk.*bin.\" + jdk_suffix + \"\\\\)\",\n+                remote: [\n+                    \"bundles\/\" + pf + \"\/jdk-\" + data.version + \"_\" + pf + \"_bin-zero.\" + jdk_suffix,\n+                ],\n+                subdir: jdk_subdir,\n+                exploded: \"images\/jdk\",\n+            },\n+            test: {\n+                    local: \"bundles\/\\\\(jdk.*bin-tests.tar.gz\\\\)\",\n+                    remote: [\n+                        \"bundles\/\" + pf + \"\/jdk-\" + data.version + \"_\" + pf + \"_bin-zero-tests.tar.gz\",\n+                    ],\n+                    exploded: \"images\/test\"\n+            },\n+            jdk_symbols: {\n+                    local: \"bundles\/\\\\(jdk.*bin-symbols.tar.gz\\\\)\",\n+                    remote: [\n+                        \"bundles\/\" + pf + \"\/jdk-\" + data.version + \"_\" + pf + \"_bin-zero-symbols.tar.gz\",\n+                    ],\n+                    subdir: jdk_subdir,\n+                    exploded: \"images\/jdk\"\n+                },\n+            };\n+    });\n+\n@@ -1225,0 +1260,7 @@\n+\n+        libffi: {\n+            organization: common.organization,\n+            module: \"libffi-\" + input.build_platform,\n+            ext: \"tar.gz\",\n+            revision: \"3.4.2+1.0\"\n+        },\n","filename":"make\/conf\/jib-profiles.js","additions":44,"deletions":2,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -0,0 +1,108 @@\n+#!\/bin\/bash\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# This script generates a libffi bundle. On linux by building it from source\n+# using a devkit, which should match the devkit used to build the JDK.\n+#\n+# Set MAKE_ARGS to add parameters to make. Ex:\n+#\n+# $ MAKE_ARGS=-j32 bash createLibffiBundle.sh\n+#\n+# The script tries to behave well on multiple invocations, only performing steps\n+# not already done. To redo a step, manually delete the target files from that\n+# step.\n+\n+LIBFFI_VERSION=3.4.2\n+\n+BUNDLE_NAME=libffi-$LIBFFI_VERSION.tar.gz\n+\n+SCRIPT_FILE=\"$(basename $0)\"\n+SCRIPT_DIR=\"$(cd \"$(dirname $0)\" > \/dev\/null && pwd)\"\n+OUTPUT_DIR=\"${SCRIPT_DIR}\/..\/..\/build\/libffi\"\n+SRC_DIR=\"$OUTPUT_DIR\/src\"\n+DOWNLOAD_DIR=\"$OUTPUT_DIR\/download\"\n+INSTALL_DIR=\"$OUTPUT_DIR\/install\"\n+IMAGE_DIR=\"$OUTPUT_DIR\/image\"\n+\n+USAGE=\"$0 <devkit dir>\"\n+\n+if [ \"$1\" = \"\" ]; then\n+    echo $USAGE\n+    exit 1\n+fi\n+DEVKIT_DIR=\"$1\"\n+\n+# Download source distros\n+mkdir -p $DOWNLOAD_DIR\n+cd $DOWNLOAD_DIR\n+SOURCE_TAR=v$LIBFFI_VERSION.tar.gz\n+if [ ! -f $SOURCE_TAR ]; then\n+    wget https:\/\/github.com\/libffi\/libffi\/archive\/refs\/tags\/v$LIBFFI_VERSION.tar.gz\n+fi\n+\n+# Unpack src\n+mkdir -p $SRC_DIR\n+cd $SRC_DIR\n+LIBFFI_DIRNAME=libffi-$LIBFFI_VERSION\n+LIBFFI_DIR=$SRC_DIR\/$LIBFFI_DIRNAME\n+if [ ! -d $LIBFFI_DIRNAME ]; then\n+    echo \"Unpacking $SOURCE_TAR\"\n+    tar xf $DOWNLOAD_DIR\/$SOURCE_TAR\n+fi\n+\n+# Build\n+cd $LIBFFI_DIR\n+if [ ! -e $LIBFFI_DIR\/configure ]; then\n+  bash .\/autogen.sh\n+fi\n+bash .\/configure --prefix=$INSTALL_DIR CC=$DEVKIT_DIR\/bin\/gcc CXX=$DEVKIT_DIR\/bin\/g++\n+\n+# Run with nice to keep system usable during build.\n+nice make $MAKE_ARGS install\n+\n+mkdir -p $IMAGE_DIR\n+# Extract what we need into an image\n+if [ ! -e $IMAGE_DIR\/lib\/libffi.so ]; then\n+  echo \"Copying libffi.so* to image\"\n+  mkdir -p $IMAGE_DIR\/lib\n+  cp -a $INSTALL_DIR\/lib64\/libffi.so* $IMAGE_DIR\/lib\/\n+fi\n+if [ ! -e $IMAGE_DIR\/include\/ ]; then\n+  echo \"Copying include to image\"\n+  mkdir -p $IMAGE_DIR\/include\n+  cp -a $INSTALL_DIR\/include\/. $IMAGE_DIR\/include\/\n+fi\n+if [ ! -e $IMAGE_DIR\/$SCRIPT_FILE ]; then\n+  echo \"Copying this script to image\"\n+  cp -a $SCRIPT_DIR\/$SCRIPT_FILE $IMAGE_DIR\/\n+fi\n+\n+# Create bundle\n+if [ ! -e $OUTPUT_DIR\/$BUNDLE_NAME ]; then\n+  echo \"Creating $OUTPUT_DIR\/$BUNDLE_NAME\"\n+  cd $IMAGE_DIR\n+  tar zcf $OUTPUT_DIR\/$BUNDLE_NAME *\n+fi\n","filename":"make\/devkit\/createLibffiBundle.sh","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"}]}