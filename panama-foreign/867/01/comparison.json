{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import java.lang.foreign.MemoryLayout;\n@@ -32,1 +31,0 @@\n-import java.util.Objects;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/ArenaImpl.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,11 +167,3 @@\n-        SegmentAllocator allocator = new SegmentAllocator() {\n-            @Override\n-            public MemorySegment allocate(long bytesSize, long byteAlignment) {\n-                return null;\n-            }\n-\n-            @Override\n-            public MemorySegment allocate(MemoryLayout elementLayout, long count) {\n-                calls.incrementAndGet();\n-                return null;\n-            };\n+        SegmentAllocator allocator = (bytesSize, byteAlignment) -> {\n+            calls.incrementAndGet();\n+            return null;\n@@ -192,12 +184,3 @@\n-        SegmentAllocator allocator = new SegmentAllocator() {\n-            @Override\n-\n-            public MemorySegment allocate(long byteSize, long byteAlignment) {\n-                return Arena.ofAuto().allocate(byteSize, byteAlignment);\n-            }\n-\n-            @Override\n-            public MemorySegment allocate(long size) {\n-                calls.incrementAndGet();\n-                return allocate(size, 1);\n-            };\n+        SegmentAllocator allocator = (byteSize, byteAlignment) -> {\n+            calls.incrementAndGet();\n+            return Arena.ofAuto().allocate(byteSize, byteAlignment);\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":6,"deletions":23,"binary":false,"changes":29,"status":"modified"}]}