{"files":[{"patch":"@@ -89,2 +89,1 @@\n-            debian-repository: https:\/\/deb.debian.org\/debian-ports\n-            debian-keyring: \/usr\/share\/keyrings\/debian-ports-archive-keyring.gpg\n+            debian-repository: https:\/\/httpredir.debian.org\/debian\/\n","filename":".github\/workflows\/build-cross-compile.yml","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-Please see <https:\/\/openjdk.org\/contribute> for how to contribute.\n+Please see the [OpenJDK Developers’ Guide](https:\/\/openjdk.org\/guide\/).\n","filename":"CONTRIBUTING.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -327,1 +327,2 @@\n-<p>Note: The Windows 32-bit x86 port is deprecated and may be removed in a future release.<\/p>\n+<p>Note: The Windows 32-bit x86 port is deprecated and may be removed in\n+a future release.<\/p>\n@@ -404,1 +405,2 @@\n-<p>Note: The Windows 32-bit x86 port is deprecated and may be removed in a future release.<\/p>\n+<p>Note: The Windows 32-bit x86 port is deprecated and may be removed in\n+a future release.<\/p>\n@@ -2258,12 +2260,1 @@\n-href=\"http:\/\/openjdk.org\/contribute\/\">'How to contribute' page<\/a>.\n-There is also an official (but somewhat outdated and skimpy on details)\n-<a href=\"http:\/\/openjdk.org\/guide\/\">Developer's Guide<\/a>.<\/p>\n-<p>If this seems overwhelming to you, the Adoption Group is there to\n-help you! A good place to start is their <a\n-href=\"https:\/\/wiki.openjdk.org\/display\/Adoption\/New+Contributor\">'New\n-Contributor' page<\/a>, or start reading the comprehensive <a\n-href=\"https:\/\/adoptopenjdk.gitbooks.io\/adoptopenjdk-getting-started-kit\/en\/\">Getting\n-Started Kit<\/a>. The Adoption Group will also happily answer any\n-questions you have about contributing. Contact them by <a\n-href=\"http:\/\/mail.openjdk.org\/mailman\/listinfo\/adoption-discuss\">mail<\/a>\n-or <a href=\"http:\/\/openjdk.org\/irc\/\">IRC<\/a>.<\/p>\n+href=\"https:\/\/openjdk.org\/guide\/\">OpenJDK Developers’ Guide<\/a>.<\/p>\n","filename":"doc\/building.html","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2035,14 +2035,1 @@\n-The official place to start is the ['How to contribute' page](\n-http:\/\/openjdk.org\/contribute\/). There is also an official (but somewhat\n-outdated and skimpy on details) [Developer's Guide](\n-http:\/\/openjdk.org\/guide\/).\n-\n-If this seems overwhelming to you, the Adoption Group is there to help you! A\n-good place to start is their ['New Contributor' page](\n-https:\/\/wiki.openjdk.org\/display\/Adoption\/New+Contributor), or start\n-reading the comprehensive [Getting Started Kit](\n-https:\/\/adoptopenjdk.gitbooks.io\/adoptopenjdk-getting-started-kit\/en\/). The\n-Adoption Group will also happily answer any questions you have about\n-contributing. Contact them by [mail](\n-http:\/\/mail.openjdk.org\/mailman\/listinfo\/adoption-discuss) or [IRC](\n-http:\/\/openjdk.org\/irc\/).\n+The official place to start is the [OpenJDK Developers’ Guide](https:\/\/openjdk.org\/guide\/).\n","filename":"doc\/building.md","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -409,3 +409,3 @@\n-    if test ! -e \"$OUTPUTDIR\/spec.gmk\"; then\n-      # If we have a spec.gmk, we have run here before and we are OK. Otherwise, check for\n-      # other files\n+    if test ! -e \"$OUTPUTDIR\/spec.gmk\" && test ! -e \"$OUTPUTDIR\/configure-support\/generated-configure.sh\"; then\n+      # If we have a spec.gmk or configure-support\/generated-configure.sh,\n+      # we have run here before and we are OK. Otherwise, check for other files\n@@ -426,2 +426,3 @@\n-        AC_MSG_NOTICE([However, this directory is not empty. This is not allowed, since it could])\n-        AC_MSG_NOTICE([seriously mess up just about everything.])\n+        AC_MSG_NOTICE([However, this directory is not empty, additionally to some allowed files])\n+        AC_MSG_NOTICE([it contains $filtered_files.])\n+        AC_MSG_NOTICE([This is not allowed, since it could seriously mess up just about everything.])\n","filename":"make\/autoconf\/basic.m4","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-JTREG_MINIMUM_VERSION=7.2\n+JTREG_MINIMUM_VERSION=7.3\n","filename":"make\/autoconf\/lib-tests.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-JTREG_VERSION=7.2+1\n+JTREG_VERSION=7.3+1\n","filename":"make\/conf\/github-actions.conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1196,1 +1196,1 @@\n-            version: \"7.2\",\n+            version: \"7.3\",\n@@ -1198,1 +1198,1 @@\n-            file: \"bundles\/jtreg-7.2+1.zip\",\n+            file: \"bundles\/jtreg-7.3+1.zip\",\n@@ -1212,1 +1212,1 @@\n-            revision: \"3.0-14-jdk-asm+1.0\",\n+            revision: \"3.0-15-jdk-asm+1.0\",\n","filename":"make\/conf\/jib-profiles.js","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -135,0 +135,1 @@\n+    CXXFLAGS := $(CXXFLAGS_JDKLIB) $(LIBAWT_CFLAGS), \\\n@@ -616,1 +617,3 @@\n-      CFLAGS := $(CXXFLAGS_JDKLIB) \\\n+      CFLAGS := $(CFLAGS_JDKLIB) \\\n+          $(LIBJAWT_CFLAGS), \\\n+      CXXFLAGS := $(CXXFLAGS_JDKLIB) \\\n@@ -799,0 +802,2 @@\n+      CXXFLAGS := $(CXXFLAGS_JDKLIB) $(LIBSPLASHSCREEN_CFLAGS) \\\n+          $(GIFLIB_CFLAGS) $(LIBJPEG_CFLAGS) $(PNG_CFLAGS) $(LIBZ_CFLAGS), \\\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,2 +48,3 @@\n-      CFLAGS := $(CFLAGS_JDKLIB) \\\n-          -I$(TOPDIR)\/src\/java.security.jgss\/share\/native\/libj2gss, \\\n+      EXTRA_HEADER_DIRS := libj2gss, \\\n+      CFLAGS := $(CFLAGS_JDKLIB), \\\n+      CXXFLAGS := $(CXXFLAGS_JDKLIB), \\\n","filename":"make\/modules\/java.security.jgss\/Lib.gmk","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,3 @@\n+      CXXFLAGS := $(filter-out -Zc:wchar_t-, $(CXXFLAGS_JDKEXE)) -Zc:wchar_t \\\n+          -analyze- -Od -Gd -D_WINDOWS \\\n+          -D_UNICODE -DUNICODE -RTC1 -EHsc, \\\n@@ -68,0 +71,1 @@\n+      CXXFLAGS := $$(CXXFLAGS_JDKEXE) $(TOOLS_CFLAGS) -DACCESSBRIDGE_ARCH_$2 -EHsc, \\\n@@ -89,0 +93,1 @@\n+      CXXFLAGS := $$(CXXFLAGS_JDKEXE) $(TOOLS_CFLAGS) -DACCESSBRIDGE_ARCH_$2 -EHsc, \\\n","filename":"make\/modules\/jdk.accessibility\/Launcher.gmk","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+        CXXFLAGS := $(filter-out -MD, $(CXXFLAGS_JDKLIB)) -MT \\\n+            -DACCESSBRIDGE_ARCH_$2, \\\n@@ -73,0 +75,2 @@\n+        CXXFLAGS := $(CXXFLAGS_JDKLIB) \\\n+            -DACCESSBRIDGE_ARCH_$2, \\\n","filename":"make\/modules\/jdk.accessibility\/Lib.gmk","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+      CXXFLAGS := $(CXXFLAGS_JDKLIB), \\\n","filename":"make\/modules\/jdk.crypto.mscapi\/Lib.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -511,1 +511,1 @@\n-  Method* m = *interpreter_frame_method_addr();\n+  Method* m = safe_interpreter_frame_method();\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -424,1 +424,1 @@\n-  Method* m = *interpreter_frame_method_addr();\n+  Method* m = safe_interpreter_frame_method();\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -327,1 +327,1 @@\n-  Method* m = *interpreter_frame_method_addr();\n+  Method* m = safe_interpreter_frame_method();\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -500,1 +500,1 @@\n-      tty->print_cr(\"ContendedPaddingWidth \" INTX_FORMAT, ContendedPaddingWidth);\n+      tty->print_cr(\"ContendedPaddingWidth %d\", ContendedPaddingWidth);\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -481,1 +481,1 @@\n-  Method* m = *interpreter_frame_method_addr();\n+  Method* m = safe_interpreter_frame_method();\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1657,0 +1657,22 @@\n+\/\/ Rd = Rs1 & (~Rd2)\n+void MacroAssembler::andn(Register Rd, Register Rs1, Register Rs2) {\n+  if (UseZbb) {\n+    Assembler::andn(Rd, Rs1, Rs2);\n+    return;\n+  }\n+\n+  notr(Rd, Rs2);\n+  andr(Rd, Rs1, Rd);\n+}\n+\n+\/\/ Rd = Rs1 | (~Rd2)\n+void MacroAssembler::orn(Register Rd, Register Rs1, Register Rs2) {\n+  if (UseZbb) {\n+    Assembler::orn(Rd, Rs1, Rs2);\n+    return;\n+  }\n+\n+  notr(Rd, Rs2);\n+  orr(Rd, Rs1, Rd);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -766,0 +766,4 @@\n+  \/\/ logic with negate\n+  void andn(Register Rd, Register Rs1, Register Rs2);\n+  void orn(Register Rd, Register Rs1, Register Rs2);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3963,1 +3963,1 @@\n-    __ li(rtmp2, t);\n+    __ mv(rtmp2, t);\n@@ -3984,2 +3984,1 @@\n-    __ notr(rtmp2, b);\n-    __ andr(rtmp2, rtmp2, d);\n+    __ andn(rtmp2, d, b);\n@@ -4003,3 +4002,2 @@\n-    \/\/ rtmp2 = (c & (~d))\n-    __ notr(rtmp2, d);\n-    __ andr(rtmp2, rtmp2, c);\n+    \/\/ rtmp2 = c & (~d)\n+    __ andn(rtmp2, c, d);\n@@ -4035,2 +4033,1 @@\n-    __ notr(rtmp2, d);\n-    __ orr(rtmp1, b, rtmp2);\n+    __ orn(rtmp1, b, d);\n@@ -4159,1 +4156,1 @@\n-    __ li(rmask32, MASK_32);\n+    __ mv(rmask32, MASK_32);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -710,1 +710,1 @@\n-      tty->print_cr(\"ContendedPaddingWidth \" INTX_FORMAT, ContendedPaddingWidth);\n+      tty->print_cr(\"ContendedPaddingWidth %d\", ContendedPaddingWidth);\n","filename":"src\/hotspot\/cpu\/s390\/vm_version_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,0 +149,1 @@\n+  assert(pc() - _start_pc > 0, \"No instruction aligned\");\n","filename":"src\/hotspot\/cpu\/x86\/c2_intelJccErratum_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -499,1 +499,1 @@\n-  Method* m = *interpreter_frame_method_addr();\n+  Method* m = safe_interpreter_frame_method();\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-  IntelJccErratumAlignment(*masm, size);\n+  IntelJccErratumAlignment intel_alignment(*masm, size);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/zBarrierSetAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,2 +77,4 @@\n-  IntelJccErratumAlignment(_masm, 6);\n-  __ jcc(Assembler::above, *stub->entry());\n+  {\n+    IntelJccErratumAlignment intel_alignment(_masm, 6);\n+    __ jcc(Assembler::above, *stub->entry());\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/z_x86_64.ad","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1808,1 +1808,1 @@\n-  intx cache_line_size = prefetch_data_size();\n+  int cache_line_size = checked_cast<int>(prefetch_data_size());\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -35,2 +36,4 @@\n-  const char *libodmname = \"\/usr\/lib\/libodm.a(shr_64.o)\";\n-  _libhandle = dlopen(libodmname, RTLD_MEMBER | RTLD_NOW);\n+  const char* libodmname = \"\/usr\/lib\/libodm.a(shr_64.o)\";\n+  char ebuf[512];\n+  void* _libhandle = os::dll_load(libodmname, ebuf, sizeof(ebuf));\n+\n@@ -38,1 +41,1 @@\n-    trcVerbose(\"Couldn't open %s\", libodmname);\n+    trcVerbose(\"Cannot load %s (error %s)\", libodmname, ebuf);\n","filename":"src\/hotspot\/os\/aix\/libodm_aix.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -74,3 +75,3 @@\n-\n-  \/\/ Dynamically load the libperfstat porting library.\n-  g_libhandle = dlopen(\"\/usr\/lib\/libperfstat.a(shr_64.o)\", RTLD_MEMBER | RTLD_NOW);\n+  const char* libperfstat = \"\/usr\/lib\/libperfstat.a(shr_64.o)\";\n+  char ebuf[512];\n+  g_libhandle = os::dll_load(libperfstat, ebuf, sizeof(ebuf));\n@@ -78,1 +79,1 @@\n-    trcVerbose(\"Cannot load libperfstat.a (dlerror: %s)\", dlerror());\n+    trcVerbose(\"Cannot load %s (error: %s)\", libperfstat, ebuf);\n","filename":"src\/hotspot\/os\/aix\/libperfstat_aix.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1104,2 +1104,0 @@\n-\/\/ Loads .dll\/.so and in case of error it checks if .dll\/.so was built\n-\/\/ for the same architecture as Hotspot is running on.\n@@ -1125,2 +1123,11 @@\n-  \/\/ RTLD_LAZY is currently not implemented. The dl is loaded immediately with all its dependants.\n-  void * result= ::dlopen(filename, RTLD_LAZY);\n+  \/\/ RTLD_LAZY has currently the same behavior as RTLD_NOW\n+  \/\/ The dl is loaded immediately with all its dependants.\n+  int dflags = RTLD_LAZY;\n+  \/\/ check for filename ending with ')', it indicates we want to load\n+  \/\/ a MEMBER module that is a member of an archive.\n+  int flen = strlen(filename);\n+  if (flen > 0 && filename[flen - 1] == ')') {\n+    dflags |= RTLD_MEMBER;\n+  }\n+\n+  void * result= ::dlopen(filename, dflags);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  product(bool, DisableTHPStackMitigation, false, DIAGNOSTIC,           \\\n+  product(bool, THPStackMitigation, true, DIAGNOSTIC,                   \\\n@@ -95,1 +95,1 @@\n-          \"thread stacks. This switch disables that mitigation and \"    \\\n+          \"thread stacks. When disabled, the absence of this mitigation\"\\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -939,1 +939,1 @@\n-  if (!DisableTHPStackMitigation) {\n+  if (THPStackMitigation) {\n@@ -3105,1 +3105,1 @@\n-  if (!DisableTHPStackMitigation) {\n+  if (THPStackMitigation) {\n@@ -3767,1 +3767,1 @@\n-  \/\/ -XX:+DisableTHPStackMitigation.\n+  \/\/ -XX:-THPStackMitigation.\n@@ -3769,3 +3769,1 @@\n-    if (DisableTHPStackMitigation) {\n-      log_info(pagesize)(\"JVM will *not* prevent THPs in thread stacks. This may cause high RSS.\");\n-    } else {\n+    if (THPStackMitigation) {\n@@ -3773,0 +3771,2 @@\n+    } else {\n+      log_info(pagesize)(\"JVM will *not* prevent THPs in thread stacks. This may cause high RSS.\");\n@@ -3775,1 +3775,1 @@\n-    FLAG_SET_ERGO(DisableTHPStackMitigation, true); \/\/ Mitigation not needed\n+    FLAG_SET_ERGO(THPStackMitigation, false); \/\/ Mitigation not needed\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -721,0 +721,1 @@\n+    default:  \/\/ presume the unknown thread type is an internal VM one\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1713,0 +1713,1 @@\n+        close(fd);\n@@ -1737,0 +1738,1 @@\n+        close(fd);\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-  v[1] = seed >> 32;\n+  v[1] = (uint32_t)(seed >> 32);\n","filename":"src\/hotspot\/share\/classfile\/altHashing.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"classfile\/vmSymbols.hpp\"\n@@ -34,1 +35,1 @@\n-u2 BytecodeConstantPool::find_or_add(BytecodeCPEntry const& bcpe) {\n+u2 BytecodeConstantPool::find_or_add(BytecodeCPEntry const& bcpe, TRAPS) {\n@@ -36,1 +37,7 @@\n-  u2 index = _entries.length();\n+  \/\/ Check for overflow\n+  int new_size = _orig->length() + _entries.length();\n+  if (new_size > USHRT_MAX) {\n+    THROW_MSG_0(vmSymbols::java_lang_InternalError(), \"default methods constant pool overflowed\");\n+  }\n+\n+  u2 index = checked_cast<u2>(_entries.length());\n@@ -44,1 +51,1 @@\n-  return index + _orig->length();\n+  return checked_cast<u2>(index + _orig->length());\n@@ -52,0 +59,1 @@\n+  int new_size = _orig->length() + _entries.length();\n@@ -54,1 +62,1 @@\n-      _orig->length() + _entries.length(), CHECK_NULL);\n+      new_size, CHECK_NULL);\n@@ -117,9 +125,0 @@\n-void BytecodeAssembler::xload(u4 index, u1 onebyteop, u1 twobyteop) {\n-  if (index < 4) {\n-    _code->append(onebyteop + index);\n-  } else {\n-    _code->append(twobyteop);\n-    _code->append((u2)index);\n-  }\n-}\n-\n@@ -130,2 +129,2 @@\n-void BytecodeAssembler::_new(Symbol* sym) {\n-  u2 cpool_index = _cp->klass(sym);\n+void BytecodeAssembler::_new(Symbol* sym, TRAPS) {\n+  u2 cpool_index = _cp->klass(sym, CHECK);\n@@ -136,2 +135,2 @@\n-void BytecodeAssembler::load_string(Symbol* sym) {\n-  u2 cpool_index = _cp->string(sym);\n+void BytecodeAssembler::load_string(Symbol* sym, TRAPS) {\n+  u2 cpool_index = _cp->string(sym, CHECK);\n@@ -139,1 +138,1 @@\n-    ldc(cpool_index);\n+    ldc((u1)cpool_index);\n@@ -159,51 +158,2 @@\n-void BytecodeAssembler::iload(u4 index) {\n-  xload(index, Bytecodes::_iload_0, Bytecodes::_iload);\n-}\n-\n-void BytecodeAssembler::lload(u4 index) {\n-  xload(index, Bytecodes::_lload_0, Bytecodes::_lload);\n-}\n-\n-void BytecodeAssembler::fload(u4 index) {\n-  xload(index, Bytecodes::_fload_0, Bytecodes::_fload);\n-}\n-\n-void BytecodeAssembler::dload(u4 index) {\n-  xload(index, Bytecodes::_dload_0, Bytecodes::_dload);\n-}\n-\n-void BytecodeAssembler::aload(u4 index) {\n-  xload(index, Bytecodes::_aload_0, Bytecodes::_aload);\n-}\n-\n-void BytecodeAssembler::load(BasicType bt, u4 index) {\n-  switch (bt) {\n-    case T_BOOLEAN:\n-    case T_CHAR:\n-    case T_BYTE:\n-    case T_SHORT:\n-    case T_INT:     iload(index); break;\n-    case T_FLOAT:   fload(index); break;\n-    case T_DOUBLE:  dload(index); break;\n-    case T_LONG:    lload(index); break;\n-    default:\n-      if (is_reference_type(bt)) {\n-                    aload(index);\n-                    break;\n-      }\n-      ShouldNotReachHere();\n-  }\n-}\n-\n-void BytecodeAssembler::checkcast(Symbol* sym) {\n-  u2 cpool_index = _cp->klass(sym);\n-  _code->append(Bytecodes::_checkcast);\n-  append(cpool_index);\n-}\n-\n-void BytecodeAssembler::invokespecial(Method* method) {\n-  invokespecial(method->klass_name(), method->name(), method->signature());\n-}\n-\n-void BytecodeAssembler::invokespecial(Symbol* klss, Symbol* name, Symbol* sig) {\n-  u2 methodref_index = _cp->methodref(klss, name, sig);\n+void BytecodeAssembler::invokespecial(Symbol* klss, Symbol* name, Symbol* sig, TRAPS) {\n+  u2 methodref_index = _cp->methodref(klss, name, sig, CHECK);\n@@ -214,3 +164,4 @@\n-void BytecodeAssembler::invokevirtual(Method* method) {\n-  invokevirtual(method->klass_name(), method->name(), method->signature());\n-}\n+int BytecodeAssembler::assemble_method_error(BytecodeConstantPool* cp,\n+                                             BytecodeBuffer* buffer,\n+                                             Symbol* errorName,\n+                                             Symbol* message, TRAPS) {\n@@ -218,5 +169,2 @@\n-void BytecodeAssembler::invokevirtual(Symbol* klss, Symbol* name, Symbol* sig) {\n-  u2 methodref_index = _cp->methodref(klss, name, sig);\n-  _code->append(Bytecodes::_invokevirtual);\n-  append(methodref_index);\n-}\n+  Symbol* init = vmSymbols::object_initializer_name();\n+  Symbol* sig = vmSymbols::string_void_signature();\n@@ -224,3 +172,1 @@\n-void BytecodeAssembler::ireturn() {\n-  _code->append(Bytecodes::_ireturn);\n-}\n+  BytecodeAssembler assem(buffer, cp);\n@@ -228,3 +174,5 @@\n-void BytecodeAssembler::lreturn() {\n-  _code->append(Bytecodes::_lreturn);\n-}\n+  assem._new(errorName, CHECK_0);\n+  assem.dup();\n+  assem.load_string(message, CHECK_0);\n+  assem.invokespecial(errorName, init, sig, CHECK_0);\n+  assem.athrow();\n@@ -232,34 +180,1 @@\n-void BytecodeAssembler::freturn() {\n-  _code->append(Bytecodes::_freturn);\n-}\n-\n-void BytecodeAssembler::dreturn() {\n-  _code->append(Bytecodes::_dreturn);\n-}\n-\n-void BytecodeAssembler::areturn() {\n-  _code->append(Bytecodes::_areturn);\n-}\n-\n-void BytecodeAssembler::_return() {\n-  _code->append(Bytecodes::_return);\n-}\n-\n-void BytecodeAssembler::_return(BasicType bt) {\n-  switch (bt) {\n-    case T_BOOLEAN:\n-    case T_CHAR:\n-    case T_BYTE:\n-    case T_SHORT:\n-    case T_INT:     ireturn(); break;\n-    case T_FLOAT:   freturn(); break;\n-    case T_DOUBLE:  dreturn(); break;\n-    case T_LONG:    lreturn(); break;\n-    case T_VOID:    _return(); break;\n-    default:\n-      if (is_reference_type(bt)) {\n-                    areturn();\n-                    break;\n-      }\n-      ShouldNotReachHere();\n-  }\n+  return 3; \/\/ max stack size: [ exception, exception, string ]\n","filename":"src\/hotspot\/share\/classfile\/bytecodeAssembler.cpp","additions":33,"deletions":118,"binary":false,"changes":151,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-  u2 find_or_add(BytecodeCPEntry const& bcpe);\n+  u2 find_or_add(BytecodeCPEntry const& bcpe, TRAPS);\n@@ -147,2 +147,2 @@\n-  u2 utf8(Symbol* sym) {\n-    return find_or_add(BytecodeCPEntry::utf8(sym));\n+  u2 utf8(Symbol* sym, TRAPS) {\n+    return find_or_add(BytecodeCPEntry::utf8(sym), THREAD);\n@@ -151,2 +151,3 @@\n-  u2 klass(Symbol* class_name) {\n-    return find_or_add(BytecodeCPEntry::klass(utf8(class_name)));\n+  u2 klass(Symbol* class_name, TRAPS) {\n+    u2 utf8_entry = utf8(class_name, CHECK_0);\n+    return find_or_add(BytecodeCPEntry::klass(utf8_entry), THREAD);\n@@ -155,2 +156,3 @@\n-  u2 string(Symbol* str) {\n-    return find_or_add(BytecodeCPEntry::string(utf8(str)));\n+  u2 string(Symbol* str, TRAPS) {\n+    u2 utf8_entry = utf8(str, CHECK_0);\n+    return find_or_add(BytecodeCPEntry::string(utf8_entry), THREAD);\n@@ -159,2 +161,4 @@\n-  u2 name_and_type(Symbol* name, Symbol* sig) {\n-    return find_or_add(BytecodeCPEntry::name_and_type(utf8(name), utf8(sig)));\n+  u2 name_and_type(Symbol* name, Symbol* sig, TRAPS) {\n+    u2 utf8_name = utf8(name, CHECK_0);\n+    u2 utf8_sig  = utf8(sig, CHECK_0);\n+    return find_or_add(BytecodeCPEntry::name_and_type(utf8_name, utf8_sig), THREAD);\n@@ -163,3 +167,4 @@\n-  u2 methodref(Symbol* class_name, Symbol* name, Symbol* sig) {\n-    return find_or_add(BytecodeCPEntry::methodref(\n-        klass(class_name), name_and_type(name, sig)));\n+  u2 methodref(Symbol* class_name, Symbol* name, Symbol* sig, TRAPS) {\n+    u2 klass_entry = klass(class_name, CHECK_0);\n+    u2 type_entry = name_and_type(name, sig, CHECK_0);\n+    return find_or_add(BytecodeCPEntry::methodref(klass_entry, type_entry), THREAD);\n@@ -182,1 +187,7 @@\n-  void xload(u4 index, u1 quick, u1 twobyte);\n+  void athrow();\n+  void dup();\n+  void invokespecial(Symbol* cls, Symbol* name, Symbol* sig, TRAPS);\n+  void ldc(u1 index);\n+  void ldc_w(u2 index);\n+  void _new(Symbol* sym, TRAPS);\n+  void load_string(Symbol* sym, TRAPS);\n@@ -188,25 +199,4 @@\n-  void aload(u4 index);\n-  void areturn();\n-  void athrow();\n-  void checkcast(Symbol* sym);\n-  void dload(u4 index);\n-  void dreturn();\n-  void dup();\n-  void fload(u4 index);\n-  void freturn();\n-  void iload(u4 index);\n-  void invokespecial(Method* method);\n-  void invokespecial(Symbol* cls, Symbol* name, Symbol* sig);\n-  void invokevirtual(Method* method);\n-  void invokevirtual(Symbol* cls, Symbol* name, Symbol* sig);\n-  void ireturn();\n-  void ldc(u1 index);\n-  void ldc_w(u2 index);\n-  void lload(u4 index);\n-  void lreturn();\n-  void _new(Symbol* sym);\n-  void _return();\n-\n-  void load_string(Symbol* sym);\n-  void load(BasicType bt, u4 index);\n-  void _return(BasicType bt);\n+  static int assemble_method_error(BytecodeConstantPool* cp,\n+                                   BytecodeBuffer* buffer,\n+                                   Symbol* errorName,\n+                                   Symbol* message, TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/bytecodeAssembler.hpp","additions":29,"deletions":39,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -968,1 +968,1 @@\n-    _annotations_present |= nth_bit((int)id);\n+    _annotations_present |= (int)nth_bit((int)id);\n@@ -973,1 +973,1 @@\n-    _annotations_present &= ~nth_bit((int)id);\n+    _annotations_present &= (int)~nth_bit((int)id);\n@@ -1740,2 +1740,2 @@\n-  const unsigned int size =\n-    (*localvariable_table_length) * sizeof(Classfile_LVT_Element) \/ sizeof(u2);\n+  const unsigned int size = checked_cast<unsigned>(\n+    (*localvariable_table_length) * sizeof(Classfile_LVT_Element) \/ sizeof(u2));\n@@ -2352,1 +2352,1 @@\n-      calculated_attribute_length +=\n+      calculated_attribute_length += checked_cast<unsigned int>(\n@@ -2360,1 +2360,1 @@\n-              sizeof(u2) );  \/\/ catch_type_index\n+              sizeof(u2) )); \/\/ catch_type_index\n@@ -2367,2 +2367,2 @@\n-                                       sizeof(code_attribute_name_index) +\n-                                       sizeof(code_attribute_length);\n+                                       (unsigned)sizeof(code_attribute_name_index) +\n+                                       (unsigned)sizeof(code_attribute_length);\n@@ -2482,1 +2482,1 @@\n-      const u2 real_length = (method_parameters_length * 4u) + 1u;\n+      const u4 real_length = (method_parameters_length * 4u) + 1u;\n@@ -3205,1 +3205,1 @@\n-u2 ClassFileParser::parse_classfile_record_attribute(const ClassFileStream* const cfs,\n+u4 ClassFileParser::parse_classfile_record_attribute(const ClassFileStream* const cfs,\n@@ -3407,1 +3407,1 @@\n-  const int operand_count = (attribute_byte_length - sizeof(u2)) \/ sizeof(u2);\n+  const unsigned int operand_count = (attribute_byte_length - (unsigned)sizeof(u2)) \/ (unsigned)sizeof(u2);\n@@ -4815,1 +4815,1 @@\n-          int newlen = c - (char*) signature;\n+          int newlen = pointer_delta_as_int(c, (char*) signature);\n@@ -5025,1 +5025,1 @@\n-      length -= nextp - p;\n+      length -= pointer_delta_as_int(nextp, p);\n@@ -5244,1 +5244,1 @@\n-  ik->set_initial_method_idnum(ik->methods()->length());\n+  ik->set_initial_method_idnum(checked_cast<u2>(ik->methods()->length()));\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -333,1 +333,1 @@\n-  u2 parse_classfile_record_attribute(const ClassFileStream* const cfs,\n+  u4 parse_classfile_record_attribute(const ClassFileStream* const cfs,\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-  return SymbolTable::new_symbol(name, start - base, end - base);\n+  return SymbolTable::new_symbol(name, pointer_delta_as_int(start, base), pointer_delta_as_int(end, base));\n@@ -272,0 +272,2 @@\n+        \/\/ We don't verify the length of the classfile stream fits in an int, but this is the\n+        \/\/ bootloader so we have control of this.\n@@ -274,1 +276,1 @@\n-                                   st.st_size,\n+                                   checked_cast<int>(st.st_size),\n@@ -423,1 +425,1 @@\n-                               (int)size,\n+                               checked_cast<int>(size),\n@@ -524,1 +526,2 @@\n-    update_class_path_entry_list(current, path, false, false, false);\n+    update_class_path_entry_list(current, path, \/* check_for_duplicates *\/ true,\n+                                 \/* is_boot_append *\/ false, \/* from_class_path_attr *\/ false);\n@@ -669,1 +672,2 @@\n-      update_class_path_entry_list(current, path, false, true, false);\n+      update_class_path_entry_list(current, path, \/* check_for_duplicates *\/ false,\n+                                    \/* is_boot_append *\/ true, \/* from_class_path_attr *\/ false);\n@@ -804,1 +808,1 @@\n-void ClassLoader::add_to_app_classpath_entries(JavaThread* current,\n+bool ClassLoader::add_to_app_classpath_entries(JavaThread* current,\n@@ -814,1 +818,1 @@\n-        return;\n+        return false;\n@@ -833,0 +837,1 @@\n+  return true;\n@@ -855,1 +860,4 @@\n-      add_to_app_classpath_entries(current, new_entry, check_for_duplicates);\n+      if (!add_to_app_classpath_entries(current, new_entry, check_for_duplicates)) {\n+        \/\/ new_entry is not saved, free it now\n+        delete new_entry;\n+      }\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-  static void add_to_app_classpath_entries(JavaThread* current,\n+  static bool add_to_app_classpath_entries(JavaThread* current,\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-      dir_len = dir_tail - dir_name + 1;\n+      dir_len = pointer_delta_as_int(dir_tail, dir_name) + 1;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -368,2 +368,2 @@\n-jchar HashtableTextDump::unescape(const char* from, const char* end, int count) {\n-  jchar value = 0;\n+int HashtableTextDump::unescape(const char* from, const char* end, int count) {\n+  int value = 0;\n@@ -412,1 +412,1 @@\n-          jchar value = unescape(from, end, 2);\n+          int value = unescape(from, end, 2);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-  jchar unescape(const char* from, const char* end, int count);\n+  int unescape(const char* from, const char* end, int count);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -868,17 +868,0 @@\n-static int assemble_method_error(\n-    BytecodeConstantPool* cp, BytecodeBuffer* buffer, Symbol* errorName, Symbol* message) {\n-\n-  Symbol* init = vmSymbols::object_initializer_name();\n-  Symbol* sig = vmSymbols::string_void_signature();\n-\n-  BytecodeAssembler assem(buffer, cp);\n-\n-  assem._new(errorName);\n-  assem.dup();\n-  assem.load_string(message);\n-  assem.invokespecial(errorName, init, sig);\n-  assem.athrow();\n-\n-  return 3; \/\/ max stack size: [ exception, exception, string ]\n-}\n-\n@@ -904,2 +887,4 @@\n-  m->set_name_index(cp->utf8(name));\n-  m->set_signature_index(cp->utf8(sig));\n+  u2 name_index = cp->utf8(name, CHECK_NULL);\n+  m->set_name_index(name_index);\n+  u2 sig_index = cp->utf8(sig, CHECK_NULL);\n+  m->set_signature_index(sig_index);\n@@ -992,2 +977,2 @@\n-        int max_stack = assemble_method_error(&bpool, buffer,\n-           method->get_exception_name(), method->get_exception_message());\n+        int max_stack = BytecodeAssembler::assemble_method_error(&bpool, buffer,\n+           method->get_exception_name(), method->get_exception_message(), CHECK);\n@@ -1076,1 +1061,6 @@\n-  int new_size = klass->methods()->length() + new_methods->length();\n+  int new_methods_length = klass->methods()->length() + new_methods->length();\n+  if (new_methods_length > USHRT_MAX) {\n+      THROW_MSG(vmSymbols::java_lang_InternalError(),\n+                \"error methods for default method processing created too many methods\");\n+  }\n+  u2 new_size = static_cast<u2>(new_methods_length);\n@@ -1094,1 +1084,1 @@\n-  for (int i = 0; i < new_size; ++i) {\n+  for (u2 i = 0; i < new_size; ++i) {\n","filename":"src\/hotspot\/share\/classfile\/defaultMethods.cpp","additions":13,"deletions":23,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                                                    end_ptr - ptr,\n+                                                    pointer_delta_as_int(end_ptr, ptr),\n@@ -158,1 +158,1 @@\n-                                   end_ptr - ptr,\n+                                   pointer_delta_as_int(end_ptr, ptr),\n","filename":"src\/hotspot\/share\/classfile\/klassFactory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -498,1 +498,1 @@\n-      sum += sizeof(*probe) + (probe->num_loaders() * sizeof(ClassLoaderData*));\n+      sum += (int)(sizeof(*probe) + (probe->num_loaders() * sizeof(ClassLoaderData*)));\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-uintx hash_string(const jchar* s, int len, bool useAlt) {\n+unsigned int hash_string(const jchar* s, int len, bool useAlt) {\n@@ -244,2 +244,2 @@\n-size_t StringTable::item_added() {\n-  return Atomic::add(&_items_count, (size_t)1);\n+void StringTable::item_added() {\n+  Atomic::inc(&_items_count);\n@@ -249,1 +249,1 @@\n-  Atomic::add(&_items_count, (size_t)-1);\n+  Atomic::dec(&_items_count);\n@@ -805,1 +805,1 @@\n-    fatal(\"Too many strings to be archived: \" SIZE_FORMAT, _items_count);\n+    fatal(\"Too many strings to be archived: %zu\", _items_count);\n@@ -828,1 +828,1 @@\n-      log_error(cds)(\"Too many strings to be archived: \" SIZE_FORMAT, _items_count);\n+      log_error(cds)(\"Too many strings to be archived: %zu\", _items_count);\n@@ -891,1 +891,1 @@\n-  CompactHashtableWriter writer(_items_count, ArchiveBuilder::string_stats());\n+  CompactHashtableWriter writer((int)_items_count, ArchiveBuilder::string_stats());\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-  static size_t item_added();\n+  static void item_added();\n","filename":"src\/hotspot\/share\/classfile\/stringTable.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-static uintx hash_symbol(const char* s, int len, bool useAlt) {\n+static unsigned int hash_symbol(const char* s, int len, bool useAlt) {\n@@ -125,1 +125,1 @@\n-static uintx hash_shared_symbol(const char* s, int len) {\n+static unsigned int hash_shared_symbol(const char* s, int len) {\n@@ -240,1 +240,1 @@\n-  return (double)_items_count\/_current_size;\n+  return (double)_items_count\/(double)_current_size;\n@@ -660,0 +660,3 @@\n+  if (_items_count > (size_t)max_jint) {\n+    fatal(\"Too many symbols to be archived: %zu\", _items_count);\n+  }\n@@ -926,1 +929,1 @@\n-          ((float)_symbols_removed \/ _symbols_counted) * 100);\n+          ((double)_symbols_removed \/ (double)_symbols_counted) * 100);\n@@ -933,1 +936,1 @@\n-  tty->print_cr(\"  Average symbol length    %7.2f\", ((float)hi.total_length \/ hi.total_count));\n+  tty->print_cr(\"  Average symbol length    %7.2f\", ((double)hi.total_length \/ (double)hi.total_count));\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -600,1 +600,1 @@\n-      return intx(loader_a) - intx(loader_b);\n+      return primitive_compare(loader_a, loader_b);\n@@ -602,1 +602,1 @@\n-      return intx(a[0]) - intx(b[0]);\n+      return primitive_compare(a[0], b[0]);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -809,1 +809,1 @@\n-  return vmSymbols::as_SID( (info >> shift) & mask );\n+  return vmSymbols::as_SID( checked_cast<int>((info >> shift) & mask));\n@@ -816,1 +816,1 @@\n-  return vmSymbols::as_SID( (info >> shift) & mask );\n+  return vmSymbols::as_SID( checked_cast<int>((info >> shift) & mask));\n@@ -823,1 +823,1 @@\n-  return vmSymbols::as_SID( (info >> shift) & mask );\n+  return vmSymbols::as_SID( checked_cast<int>((info >> shift) & mask));\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2467,0 +2467,6 @@\n+\n+  if (collector_state()->in_concurrent_start_gc()) {\n+    log_debug(gc, verify)(\"Marking state\");\n+    _verifier->verify_marking_state();\n+  }\n+\n@@ -2655,0 +2661,5 @@\n+void G1CollectedHeap::retain_region(HeapRegion* hr) {\n+  MutexLocker x(G1RareEvent_lock, Mutex::_no_safepoint_check_flag);\n+  collection_set()->candidates()->add_retained_region_unsorted(hr);\n+}\n+\n@@ -2980,3 +2991,0 @@\n-  if (collector_state()->in_concurrent_start_gc()) {\n-    _cm->add_to_liveness(worker_id, obj, obj_size);\n-  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -687,0 +687,2 @@\n+  \/\/ Add the given region to the retained regions collection set candidates.\n+  void retain_region(HeapRegion* hr);\n@@ -1031,1 +1033,1 @@\n-  inline bool is_in_cset(const HeapRegion *hr) const;\n+  inline bool is_in_cset(const HeapRegion* hr) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-  if (collector_state()->in_mixed_phase()) {\n+  if (!candidates()->is_empty()) {\n@@ -329,4 +329,9 @@\n-    _policy->select_candidates_from_marking(&candidates()->marking_regions(),\n-                                            time_remaining_ms,\n-                                            &initial_old_regions,\n-                                            &_optional_old_regions);\n+    time_remaining_ms = _policy->select_candidates_from_marking(&candidates()->marking_regions(),\n+                                                                time_remaining_ms,\n+                                                                &initial_old_regions,\n+                                                                &_optional_old_regions);\n+\n+    _policy->select_candidates_from_retained(&candidates()->retained_regions(),\n+                                             time_remaining_ms,\n+                                             &initial_old_regions,\n+                                             &_optional_old_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -41,0 +41,9 @@\n+void G1CollectionCandidateList::append_unsorted(HeapRegion* r) {\n+  CandidateInfo c(r, r->calc_gc_efficiency());\n+  _candidates.append(c);\n+}\n+\n+void G1CollectionCandidateList::sort_by_efficiency() {\n+  _candidates.sort(compare);\n+}\n+\n@@ -145,0 +154,1 @@\n+  _retained_regions(),\n@@ -168,0 +178,1 @@\n+  _retained_regions.clear();\n@@ -191,0 +202,14 @@\n+void G1CollectionSetCandidates::sort_by_efficiency() {\n+  \/\/ From marking regions must always be sorted so no reason to actually sort\n+  \/\/ them.\n+  _marking_regions.verify();\n+  _retained_regions.sort_by_efficiency();\n+  _retained_regions.verify();\n+}\n+\n+void G1CollectionSetCandidates::add_retained_region_unsorted(HeapRegion* r) {\n+  assert(!contains(r), \"must not contain region %u\", r->hrm_index());\n+  _contains_map[r->hrm_index()] = CandidateOrigin::Retained;\n+  _retained_regions.append_unsorted(r);\n+}\n+\n@@ -192,1 +217,19 @@\n-  _marking_regions.remove(other);\n+  \/\/ During removal, we exploit the fact that elements in the marking_regions,\n+  \/\/ retained_regions and other list are sorted by gc_efficiency. Furthermore,\n+  \/\/ all regions in the passed other list are in one of the two other lists.\n+  \/\/\n+  \/\/ Split original list into elements for the marking list and elements from the\n+  \/\/ retained list.\n+  G1CollectionCandidateRegionList other_marking_regions;\n+  G1CollectionCandidateRegionList other_retained_regions;\n+\n+  for (HeapRegion* r : *other) {\n+    if (is_from_marking(r)) {\n+      other_marking_regions.append(r);\n+    } else {\n+      other_retained_regions.append(r);\n+    }\n+  }\n+\n+  _marking_regions.remove(&other_marking_regions);\n+  _retained_regions.remove(&other_retained_regions);\n@@ -207,1 +250,9 @@\n-  return _marking_regions.length() != 0;\n+  return marking_regions_length() != 0;\n+}\n+\n+uint G1CollectionSetCandidates::marking_regions_length() const {\n+  return _marking_regions.length();\n+}\n+\n+uint G1CollectionSetCandidates::retained_regions_length() const {\n+  return _retained_regions.length();\n@@ -221,1 +272,1 @@\n-    assert(_contains_map[hrm_index] == CandidateOrigin::Marking,\n+    assert(_contains_map[hrm_index] == CandidateOrigin::Marking || _contains_map[hrm_index] == CandidateOrigin::Retained,\n@@ -238,1 +289,0 @@\n-\n@@ -241,0 +291,6 @@\n+  uint from_marking_retained = 0;\n+  verify_helper(&_retained_regions, from_marking_retained, verify_map);\n+  assert(from_marking_retained == 0, \"must be\");\n+\n+  assert(length() >= marking_regions_length(), \"must be\");\n+\n@@ -265,0 +321,1 @@\n+    \"Cr\",  \/\/ Retained\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":61,"deletions":4,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -103,0 +103,5 @@\n+  \/\/ Add the given HeapRegion to this list at the end, (potentially) making the list unsorted.\n+  void append_unsorted(HeapRegion* r);\n+  \/\/ Restore sorting order by decreasing gc efficiency, using the existing efficiency\n+  \/\/ values.\n+  void sort_by_efficiency();\n@@ -132,1 +137,2 @@\n-\/\/ Iterator for G1CollectionSetCandidates.\n+\/\/ Iterator for G1CollectionSetCandidates. There are no guarantees on the order\n+\/\/ of the regions returned.\n@@ -135,1 +141,1 @@\n-  uint _marking_position;\n+  uint _position;\n@@ -138,1 +144,1 @@\n-  G1CollectionSetCandidatesIterator(G1CollectionSetCandidates* which, uint marking_position);\n+  G1CollectionSetCandidatesIterator(G1CollectionSetCandidates* which, uint position);\n@@ -149,1 +155,1 @@\n-\/\/ These candidate regions are tracked in a list of regions, sorted by decreasing\n+\/\/ These candidate regions are tracked in two list of regions, sorted by decreasing\n@@ -152,2 +158,0 @@\n-\/\/ Currently there is only one type of such regions:\n-\/\/\n@@ -159,0 +163,4 @@\n+\/\/ * retained_regions: set of regions selected for evacuation during evacuation\n+\/\/                     failure.\n+\/\/                     Any young collection will try to evacuate them.\n+\/\/\n@@ -165,0 +173,1 @@\n+    Retained,                  \/\/ This region has been added because it has been retained after evacuation.\n@@ -168,1 +177,2 @@\n-  G1CollectionCandidateList _marking_regions;\n+  G1CollectionCandidateList _marking_regions;  \/\/ Set of regions selected by concurrent marking.\n+  G1CollectionCandidateList _retained_regions; \/\/ Set of regions selected from evacuation failed regions.\n@@ -183,0 +193,1 @@\n+  G1CollectionCandidateList& retained_regions() { return _retained_regions; }\n@@ -197,0 +208,5 @@\n+  void sort_by_efficiency();\n+\n+  \/\/ Add the given region to the set of retained regions without regards to the\n+  \/\/ gc efficiency sorting. The retained regions must be re-sorted manually later.\n+  void add_retained_region_unsorted(HeapRegion* r);\n@@ -206,1 +222,0 @@\n-  bool has_more_marking_candidates() const;\n@@ -208,1 +223,3 @@\n-  uint marking_regions_length() const { return _marking_regions.length(); }\n+  bool has_more_marking_candidates() const;\n+  uint marking_regions_length() const;\n+  uint retained_regions_length() const;\n@@ -216,1 +233,1 @@\n-  uint length() const { return marking_regions_length(); }\n+  uint length() const { return marking_regions_length() + retained_regions_length(); }\n@@ -224,1 +241,1 @@\n-    return G1CollectionSetCandidatesIterator(this, marking_regions_length());\n+    return G1CollectionSetCandidatesIterator(this, length());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":28,"deletions":11,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-inline G1CollectionSetCandidatesIterator::G1CollectionSetCandidatesIterator(G1CollectionSetCandidates* which, uint marking_position) :\n-  _which(which), _marking_position(marking_position) {\n+inline G1CollectionSetCandidatesIterator::G1CollectionSetCandidatesIterator(G1CollectionSetCandidates* which, uint position) :\n+  _which(which), _position(position) {\n@@ -59,4 +59,2 @@\n-  assert(_marking_position < _which->_marking_regions.length(),\n-         \"must not be at end already\");\n-\n-  _marking_position++;\n+  assert(_position < _which->length(), \"must not be at end already\");\n+  _position++;\n@@ -67,1 +65,6 @@\n-  return _which->_marking_regions.at(_marking_position)._r;\n+  uint length = _which->marking_regions_length();\n+  if (_position < length) {\n+    return _which->_marking_regions.at(_position)._r;\n+  } else {\n+    return _which->_retained_regions.at(_position - length)._r;\n+  }\n@@ -72,1 +75,1 @@\n-  return _marking_position == rhs._marking_position;\n+  return _position == rhs._position;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.inline.hpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -34,3 +34,3 @@\n-\/\/ Determine collection set candidates: For all regions determine whether they\n-\/\/ should be a collection set candidates, calculate their efficiency, sort and\n-\/\/ return them as G1CollectionSetCandidates instance.\n+\/\/ Determine collection set candidates (from marking): For all regions determine\n+\/\/ whether they should be a collection set candidate, calculate their efficiency,\n+\/\/ sort and put them into the candidates.\n@@ -38,3 +38,2 @@\n-\/\/ put them into some work area unsorted. At the end the array is sorted and\n-\/\/ copied into the G1CollectionSetCandidates instance; the caller will be the new\n-\/\/ owner of this object.\n+\/\/ put them into some work area without sorting. At the end that array is sorted and\n+\/\/ moved to the destination.\n@@ -155,0 +154,1 @@\n+        assert(r->rem_set()->is_complete(), \"must be %u\", r->hrm_index());\n@@ -156,2 +156,3 @@\n-      } else if (r->is_old()) {\n-        \/\/ Keep remembered sets for humongous regions, otherwise clean them out.\n+      } else if (r->is_old() && !r->is_collection_set_candidate()) {\n+        \/\/ Keep remembered sets for humongous regions and collection set candidates,\n+        \/\/ otherwise clean them out.\n@@ -160,1 +161,1 @@\n-        assert(!r->is_old() || !r->rem_set()->is_tracked(),\n+        assert(r->is_collection_set_candidate() || !r->is_old() || !r->rem_set()->is_tracked(),\n@@ -257,0 +258,4 @@\n+         \/\/ A region might have been retained (after evacuation failure) and already put\n+         \/\/ into the candidates list during concurrent marking. These should keep being\n+         \/\/ considered as retained regions.\n+         !hr->is_collection_set_candidate() &&\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -50,3 +50,2 @@\n-  \/\/ Determine whether to add the given region to the collection set candidates or\n-  \/\/ not. Currently, we skip regions that we will never move during young gc, and\n-  \/\/ regions which liveness is over the occupancy threshold.\n+  \/\/ Determine whether to add the given region to the collection set candidates from\n+  \/\/ marking or not. Currently, we skip regions whose live bytes are over the threshold.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -328,0 +328,9 @@\n+bool G1CMRootMemRegions::contains(const MemRegion mr) const {\n+  for (uint i = 0; i < _num_root_regions; i++) {\n+    if (_root_regions[i].equals(mr)) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -997,0 +1006,4 @@\n+bool G1ConcurrentMark::is_root_region(HeapRegion* r) {\n+  return root_regions()->contains(MemRegion(r->top_at_mark_start(), r->top()));\n+}\n+\n@@ -1365,2 +1378,2 @@\n-        log_trace(gc)(\"Reclaimed empty old gen region %u (%s) bot \" PTR_FORMAT,\n-                      hr->hrm_index(), hr->get_short_type_str(), p2i(hr->bottom()));\n+        log_trace(gc, marking)(\"Reclaimed empty old gen region %u (%s) bot \" PTR_FORMAT,\n+                               hr->hrm_index(), hr->get_short_type_str(), p2i(hr->bottom()));\n@@ -1870,0 +1883,1 @@\n+      log_trace(gc, marking)(\"Claim region %u bottom \" PTR_FORMAT \" tams \" PTR_FORMAT, curr_region->hrm_index(), p2i(curr_region->bottom()), p2i(curr_region->top_at_mark_start()));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -267,0 +267,4 @@\n+  \/\/ Is the given memregion contained in the root regions; the MemRegion must\n+  \/\/ match exactly.\n+  bool contains(const MemRegion mr) const;\n+\n@@ -470,0 +474,2 @@\n+  \/\/ Set live bytes for concurrent marking.\n+  void set_live_bytes(uint region, size_t live_bytes) { _region_mark_stats[region]._live_words = live_bytes \/ HeapWordSize; }\n@@ -558,0 +564,1 @@\n+  bool is_root_region(HeapRegion* r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -62,0 +62,2 @@\n+\/\/ Regions might have been reclaimed while scrubbing them after having yielded for\n+\/\/ a pause.\n@@ -89,2 +91,3 @@\n-    \/\/ has been aborted for any reason.\n-    bool yield_if_necessary() {\n+    \/\/ has been aborted for any reason. Yielded is set if there has been an actual\n+    \/\/ yield for a pause.\n+    bool yield_if_necessary(bool& yielded) {\n@@ -93,1 +96,1 @@\n-        _cm->do_yield_check();\n+        yielded = _cm->do_yield_check();\n@@ -104,1 +107,1 @@\n-    \/\/  - been eagerly reclaimed by a young collection (only humongous)\n+    \/\/  - been reclaimed by a collection.\n@@ -110,3 +113,3 @@\n-    \/\/ G1RebuildRemSetChunkSize. The heap region is needed to ensure a humongous object\n-    \/\/ is not eagerly reclaimed during yielding.\n-    \/\/ Returns whether marking has been aborted.\n+    \/\/ G1RebuildRemSetChunkSize. The heap region is needed check whether the region has\n+    \/\/ been reclaimed during yielding.\n+    \/\/ Returns true if marking has been aborted or false if completed.\n@@ -123,1 +126,2 @@\n-        bool mark_aborted = yield_if_necessary();\n+        bool yielded;\n+        bool mark_aborted = yield_if_necessary(yielded);\n@@ -126,4 +130,4 @@\n-        } else if (!should_rebuild_or_scrub(hr)) {\n-          \/\/ We need to check should_rebuild_or_scrub() again (for humongous objects)\n-          \/\/ because the region might have been eagerly reclaimed during the yield.\n-          log_trace(gc, marking)(\"Rebuild aborted for eagerly reclaimed humongous region: %u\", hr->hrm_index());\n+        } else if (yielded && !should_rebuild_or_scrub(hr)) {\n+          \/\/ We need to check should_rebuild_or_scrub() again because the region might\n+          \/\/ have been reclaimed during the yield.\n+          log_trace(gc, marking)(\"Rebuild aborted for reclaimed region: %u\", hr->hrm_index());\n@@ -133,1 +137,1 @@\n-        \/\/ Step to next chunk of the humongous object\n+        \/\/ Step to next chunk of the large object.\n@@ -191,1 +195,2 @@\n-        bool mark_aborted = yield_if_necessary();\n+        bool yielded;\n+        bool mark_aborted = yield_if_necessary(yielded);\n@@ -194,0 +199,4 @@\n+        } else if (yielded && !should_rebuild_or_scrub(hr)) {\n+          \/\/ Region has been reclaimed while yielding. Exit continuing with the next region.\n+          log_trace(gc, marking)(\"Scan and scrub aborted for reclaimed region: %u\", hr->hrm_index());\n+          return false;\n@@ -206,1 +215,2 @@\n-        bool mark_aborted = yield_if_necessary();\n+        bool yielded = true;\n+        bool mark_aborted = yield_if_necessary(yielded);\n@@ -209,0 +219,3 @@\n+        } else if (yielded && !should_rebuild_or_scrub(hr)) {\n+          log_trace(gc, marking)(\"Scan aborted for reclaimed region: %u\", hr->hrm_index());\n+          return false;\n@@ -219,2 +232,2 @@\n-      log_trace(gc, marking)(\"Scrub and rebuild region: \" HR_FORMAT \" pb: \" PTR_FORMAT \" TARS: \" PTR_FORMAT,\n-                             HR_FORMAT_PARAMS(hr), p2i(pb), p2i(_cm->top_at_rebuild_start(hr->hrm_index())));\n+      log_trace(gc, marking)(\"Scrub and rebuild region: \" HR_FORMAT \" pb: \" PTR_FORMAT \" TARS: \" PTR_FORMAT \" TAMS: \" PTR_FORMAT,\n+                             HR_FORMAT_PARAMS(hr), p2i(pb), p2i(_cm->top_at_rebuild_start(hr->hrm_index())), p2i(hr->top_at_mark_start()));\n@@ -227,0 +240,5 @@\n+      \/\/ Yielding during scrubbing and scanning might have reclaimed the region, so need to\n+      \/\/ re-check after above.\n+      if (!should_rebuild_or_scrub(hr)) {\n+        return false;\n+      }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.cpp","additions":35,"deletions":17,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-  \/\/ Return a G1AbstractSubTask which does necessary preparation for evacuation failure regions\n+  \/\/ Return a G1AbstractSubTask which does necessary preparation for evacuation failed regions\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailureRegions.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/g1\/g1CollectedHeap.inline.hpp\"\n@@ -40,2 +41,1 @@\n-    G1CollectorState* state = g1h->collector_state();\n-    hr->note_evacuation_failure(state->in_concurrent_start_gc());\n+    hr->note_evacuation_failure();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailureRegions.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-  _gc_par_phases[ClearRetainedRegionBitmaps] = new WorkerDataArray<double>(\"ClearRetainedRegionsBitmap\", \"Clear Retained Region Bitmaps (ms):\", max_gc_threads);\n+  _gc_par_phases[ProcessEvacuationFailedRegions] = new WorkerDataArray<double>(\"ProcessEvacuationFailedRegions\", \"Process Evacuation Failed Regions (ms):\", max_gc_threads);\n@@ -129,0 +129,1 @@\n+  _gc_par_phases[MergePSS]->create_thread_work_items(\"Evac Fail Extra Cards\", MergePSSEvacFailExtra);\n@@ -130,1 +131,2 @@\n-  _gc_par_phases[RestoreRetainedRegions]->create_thread_work_items(\"Evacuation Failure Regions:\", RestoreRetainedRegionsNum);\n+  _gc_par_phases[RestoreRetainedRegions]->create_thread_work_items(\"Evacuation Failed Regions:\", RestoreRetainedRegionsFailedNum);\n+  _gc_par_phases[RestoreRetainedRegions]->create_thread_work_items(\"New Retained Regions:\", RestoreRetainedRegionsRetainedNum);\n@@ -407,1 +409,2 @@\n-  const double sum_ms = _cur_pre_evacuate_prepare_time_ms +\n+  const double sum_ms = pre_concurrent_start_ms +\n+                        _cur_pre_evacuate_prepare_time_ms +\n@@ -411,2 +414,1 @@\n-                        _recorded_prepare_heap_roots_time_ms +\n-                        pre_concurrent_start_ms;\n+                        _recorded_prepare_heap_roots_time_ms;\n@@ -416,0 +418,5 @@\n+  if (pre_concurrent_start_ms > 0.0) {\n+    debug_phase(_gc_par_phases[ResetMarkingState]);\n+    debug_phase(_gc_par_phases[NoteStartOfMark]);\n+  }\n+\n@@ -424,5 +431,0 @@\n-  if (pre_concurrent_start_ms > 0.0) {\n-    debug_phase(_gc_par_phases[ResetMarkingState]);\n-    debug_phase(_gc_par_phases[NoteStartOfMark]);\n-  }\n-\n@@ -507,1 +509,1 @@\n-    debug_phase(_gc_par_phases[ClearRetainedRegionBitmaps], 1);\n+    debug_phase(_gc_par_phases[ProcessEvacuationFailedRegions], 1);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    ClearRetainedRegionBitmaps,\n+    ProcessEvacuationFailedRegions,\n@@ -141,1 +141,2 @@\n-    MergePSSLABUndoWasteBytes\n+    MergePSSLABUndoWasteBytes,\n+    MergePSSEvacFailExtra\n@@ -145,1 +146,2 @@\n-    RestoreRetainedRegionsNum,\n+    RestoreRetainedRegionsFailedNum,\n+    RestoreRetainedRegionsRetainedNum\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -440,0 +440,72 @@\n+class G1VerifyRegionMarkingStateClosure : public HeapRegionClosure {\n+  class MarkedBytesClosure {\n+    size_t _marked_words;\n+\n+  public:\n+    MarkedBytesClosure() : _marked_words(0) { }\n+\n+    inline size_t apply(oop obj) {\n+      size_t result = obj->size();\n+      _marked_words += result;\n+      return result;\n+    }\n+\n+    size_t marked_bytes() const { return _marked_words * HeapWordSize; }\n+  };\n+\n+public:\n+  virtual bool do_heap_region(HeapRegion* r) {\n+    if (r->is_free()) {\n+      return false;\n+    }\n+\n+    G1ConcurrentMark* cm = G1CollectedHeap::heap()->concurrent_mark();\n+\n+    bool part_of_marking = r->is_old_or_humongous() && !r->is_collection_set_candidate();\n+\n+    if (part_of_marking) {\n+      guarantee(r->bottom() != r->top_at_mark_start(), \"region %u (%s) does not have TAMS set\",\n+                                                       r->hrm_index(), r->get_short_type_str());\n+      size_t marked_bytes = cm->live_bytes(r->hrm_index());\n+\n+      MarkedBytesClosure cl;\n+      r->apply_to_marked_objects(cm->mark_bitmap(), &cl);\n+\n+      guarantee(cl.marked_bytes() == marked_bytes,\n+                \"region %u (%s) live bytes actual %zu and cache %zu differ\",\n+                r->hrm_index(), r->get_short_type_str(), cl.marked_bytes(), marked_bytes);\n+    } else {\n+      guarantee(r->bottom() == r->top_at_mark_start(),\n+                \"region %u (%s) has TAMS set \" PTR_FORMAT \" \" PTR_FORMAT,\n+                r->hrm_index(), r->get_short_type_str(), p2i(r->bottom()), p2i(r->top_at_mark_start()));\n+      guarantee(cm->live_bytes(r->hrm_index()) == 0,\n+                \"region %u (%s) has %zu live bytes recorded\",\n+                r->hrm_index(), r->get_short_type_str(), cm->live_bytes(r->hrm_index()));\n+      guarantee(cm->mark_bitmap()->get_next_marked_addr(r->bottom(), r->end()) == r->end(),\n+                \"region %u (%s) has mark\",\n+                r->hrm_index(), r->get_short_type_str());\n+      guarantee(cm->is_root_region(r),\n+                \"region %u (%s) should be root region\",\n+                r->hrm_index(), r->get_short_type_str());\n+    }\n+    return false;\n+  }\n+};\n+\n+void G1HeapVerifier::verify_marking_state() {\n+  assert(G1CollectedHeap::heap()->collector_state()->in_concurrent_start_gc(), \"must be\");\n+\n+  \/\/ Verify TAMSes, bitmaps and liveness statistics.\n+  \/\/\n+  \/\/ - if part of marking: TAMS != bottom, liveness == 0, bitmap clear\n+  \/\/ - if evacuation failed + part of marking: TAMS != bottom, liveness != 0, bitmap has at least on object set (corresponding to liveness)\n+  \/\/ - if not part of marking: TAMS == bottom, liveness == 0, bitmap clear; must be in root region\n+\n+  \/\/ To compare liveness recorded in G1ConcurrentMark and actual we need to flush the\n+  \/\/ cache.\n+  G1CollectedHeap::heap()->concurrent_mark()->flush_all_task_caches();\n+\n+  G1VerifyRegionMarkingStateClosure cl;\n+  _g1h->heap_region_iterate(&cl);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp","additions":72,"deletions":0,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -73,0 +73,3 @@\n+  \/\/ Verify that marking state is set up correctly after a concurrent start pause.\n+  void verify_marking_state();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -91,1 +91,2 @@\n-    _evac_failure_regions(evac_failure_regions)\n+    _evac_failure_regions(evac_failure_regions),\n+    _evac_failure_enqueued_cards(0)\n@@ -150,0 +151,4 @@\n+size_t G1ParScanThreadState::evac_failure_enqueued_cards() const {\n+  return _evac_failure_enqueued_cards;\n+}\n+\n@@ -598,0 +603,1 @@\n+    size_t evac_fail_enqueued_cards = pss->evac_failure_enqueued_cards();\n@@ -602,0 +608,1 @@\n+    p->record_or_add_thread_work_item(G1GCPhaseTimes::MergePSS, worker_id, evac_fail_enqueued_cards, G1GCPhaseTimes::MergePSSEvacFailExtra);\n@@ -643,6 +650,3 @@\n-    \/\/ existing closure to scan evacuated objects because:\n-    \/\/ - for objects referring into the collection set we do not need to gather\n-    \/\/ cards at this time. The regions they are in will be unconditionally turned\n-    \/\/ to old regions without remembered sets.\n-    \/\/ - since we are iterating from a collection set region (i.e. never a Survivor\n-    \/\/ region), we always need to gather cards for this case.\n+    \/\/ existing closure to scan evacuated objects; since we are iterating from a\n+    \/\/ collection set region (i.e. never a Survivor region), we always need to\n+    \/\/ gather cards for this case.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -112,0 +112,10 @@\n+  \/\/ Number of additional cards into evacuation failed regions enqueued into\n+  \/\/ the local DCQS. This is an approximation, as cards that would be added later\n+  \/\/ outside of evacuation failure will not be subtracted again.\n+  size_t _evac_failure_enqueued_cards;\n+\n+  \/\/ Enqueue the card if not already in the set; this is a best-effort attempt on\n+  \/\/ detecting duplicates.\n+  template <class T> bool enqueue_if_new(T* p);\n+  \/\/ Enqueue the card of p into the (evacuation failed) region.\n+  template <class T> void enqueue_card_into_evac_fail_region(T* p, oop obj);\n@@ -155,0 +165,2 @@\n+  size_t evac_failure_enqueued_cards() const;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -99,0 +99,22 @@\n+template <class T> bool G1ParScanThreadState::enqueue_if_new(T* p) {\n+  size_t card_index = ct()->index_for(p);\n+  \/\/ If the card hasn't been added to the buffer, do it.\n+  if (_last_enqueued_card != card_index) {\n+    _rdc_local_qset.enqueue(ct()->byte_for_index(card_index));\n+    _last_enqueued_card = card_index;\n+    return true;\n+  } else {\n+    return false;\n+  }\n+}\n+\n+template <class T> void G1ParScanThreadState::enqueue_card_into_evac_fail_region(T* p, oop obj) {\n+  assert(!HeapRegion::is_in_same_region(p, obj), \"Should have filtered out cross-region references already.\");\n+  assert(!_g1h->heap_region_containing(p)->is_survivor(), \"Should have filtered out from-newly allocated survivor references already.\");\n+  assert(_g1h->heap_region_containing(obj)->in_collection_set(), \"Only for enqeueing reference into collection set region\");\n+\n+  if (enqueue_if_new(p)) {\n+    _evac_failure_enqueued_cards++;\n+  }\n+}\n+\n@@ -112,2 +134,3 @@\n-  \/\/ evacuation. Currently these regions are always relabelled as old without\n-  \/\/ remembered sets, so skip them.\n+  \/\/ evacuation. Proactively collect remembered sets (cards) for them as likely they\n+  \/\/ are sparsely populated (and have few references). We will decide later to keep\n+  \/\/ or drop the region.\n@@ -117,0 +140,1 @@\n+    enqueue_card_into_evac_fail_region(p, obj);\n@@ -140,6 +164,1 @@\n-  size_t card_index = ct()->index_for(p);\n-  \/\/ If the card hasn't been added to the buffer, do it.\n-  if (_last_enqueued_card != card_index) {\n-    _rdc_local_qset.enqueue(ct()->byte_for_index(card_index));\n-    _last_enqueued_card = card_index;\n-  }\n+  enqueue_if_new(p);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.inline.hpp","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -271,0 +271,5 @@\n+    double retained_time_ms = predict_retained_regions_evac_time();\n+    double total_time_ms = base_time_ms + retained_time_ms;\n+\n+    log_trace(gc, ergo, heap)(\"Predicted total base time: total %f base_time %f retained_time %f\",\n+                              total_time_ms, base_time_ms, retained_time_ms);\n@@ -273,1 +278,1 @@\n-      calculate_desired_eden_length_by_pause(base_time_ms,\n+      calculate_desired_eden_length_by_pause(total_time_ms,\n@@ -516,0 +521,23 @@\n+double G1Policy::predict_retained_regions_evac_time() const {\n+  uint num_regions = 0;\n+  double result = 0.0;\n+\n+  G1CollectionCandidateList& list = candidates()->retained_regions();\n+  uint min_regions_left = MIN2(min_retained_old_cset_length(),\n+                               list.length());\n+\n+  for (HeapRegion* r : list) {\n+    if (min_regions_left == 0) {\n+      \/\/ Minimum amount of regions considered. Exit.\n+      break;\n+    }\n+    min_regions_left--;\n+    result += predict_region_total_time_ms(r, collector_state()->in_young_only_phase());\n+    num_regions++;\n+  }\n+\n+  log_trace(gc, ergo, heap)(\"Selected %u of %u retained candidates taking %1.3fms additional time\",\n+                            num_regions, list.length(), result);\n+  return result;\n+}\n+\n@@ -626,0 +654,11 @@\n+bool G1Policy::should_retain_evac_failed_region(uint index) const {\n+  size_t live_bytes= _g1h->region_at(index)->live_bytes();\n+\n+  assert(live_bytes != 0,\n+         \"live bytes not set for %u used %zu garbage %zu cm-live %zu\",\n+         index, _g1h->region_at(index)->used(), _g1h->region_at(index)->garbage_bytes(), live_bytes);\n+\n+  size_t threshold = G1RetainRegionLiveThresholdPercent * HeapRegion::GrainBytes \/ 100;\n+  return live_bytes < threshold;\n+}\n+\n@@ -1374,0 +1413,6 @@\n+uint G1Policy::min_retained_old_cset_length() const {\n+  \/\/ Guarantee some progress with retained regions regardless of available time by\n+  \/\/ taking at least one region.\n+  return 1;\n+}\n+\n@@ -1491,0 +1536,66 @@\n+void G1Policy::select_candidates_from_retained(G1CollectionCandidateList* retained_list,\n+                                               double time_remaining_ms,\n+                                               G1CollectionCandidateRegionList* initial_old_regions,\n+                                               G1CollectionCandidateRegionList* optional_old_regions) {\n+\n+  uint const min_regions = min_retained_old_cset_length();\n+\n+  uint num_initial_regions_selected = 0;\n+  uint num_optional_regions_selected = 0;\n+  uint num_expensive_regions_selected = 0;\n+\n+  double predicted_initial_time_ms = 0.0;\n+  double predicted_optional_time_ms = 0.0;\n+\n+  \/\/ We want to make sure that on the one hand we process the retained regions asap,\n+  \/\/ but on the other hand do not take too many of them as optional regions.\n+  \/\/ So we split the time budget into budget we will unconditionally take into the\n+  \/\/ initial old regions, and budget for taking optional regions from the retained\n+  \/\/ list.\n+  double optional_time_remaining_ms = max_time_for_retaining();\n+  time_remaining_ms = MIN2(time_remaining_ms, optional_time_remaining_ms);\n+\n+  log_debug(gc, ergo, cset)(\"Start adding retained candidates to collection set. \"\n+                            \"Min %u regions, \"\n+                            \"time remaining %1.2fms, optional remaining %1.2fms\",\n+                            min_regions, time_remaining_ms, optional_time_remaining_ms);\n+\n+  for (HeapRegion* r : *retained_list) {\n+    double predicted_time_ms = predict_region_total_time_ms(r, collector_state()->in_young_only_phase());\n+    bool fits_in_remaining_time = predicted_time_ms <= time_remaining_ms;\n+\n+    if (fits_in_remaining_time || (num_expensive_regions_selected < min_regions)) {\n+      predicted_initial_time_ms += predicted_time_ms;\n+      if (!fits_in_remaining_time) {\n+        num_expensive_regions_selected++;\n+      }\n+      initial_old_regions->append(r);\n+      num_initial_regions_selected++;\n+    } else if (predicted_time_ms <= optional_time_remaining_ms) {\n+      predicted_optional_time_ms += predicted_time_ms;\n+      optional_old_regions->append(r);\n+      num_optional_regions_selected++;\n+    } else {\n+      \/\/ Fits neither initial nor optional time limit. Exit.\n+      break;\n+    }\n+    time_remaining_ms = MAX2(0.0, time_remaining_ms - predicted_time_ms);\n+    optional_time_remaining_ms = MAX2(0.0, optional_time_remaining_ms - predicted_time_ms);\n+  }\n+\n+  uint num_regions_selected = num_initial_regions_selected + num_optional_regions_selected;\n+  if (num_regions_selected == retained_list->length()) {\n+    log_debug(gc, ergo, cset)(\"Retained candidates exhausted.\");\n+  }\n+  if (num_expensive_regions_selected > 0) {\n+    log_debug(gc, ergo, cset)(\"Added %u retained candidates to collection set although the predicted time was too high.\",\n+                              num_expensive_regions_selected);\n+  }\n+\n+  log_debug(gc, ergo, cset)(\"Finish adding retained candidates to collection set. Initial: %u, optional: %u, \"\n+                            \"predicted initial time: %1.2fms, predicted optional time: %1.2fms, \"\n+                            \"time remaining: %1.2fms optional time remaining %1.2fms\",\n+                            num_initial_regions_selected, num_optional_regions_selected,\n+                            predicted_initial_time_ms, predicted_optional_time_ms, time_remaining_ms, optional_time_remaining_ms);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":112,"deletions":1,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -250,0 +250,1 @@\n+  double predict_retained_regions_evac_time() const;\n@@ -262,0 +263,2 @@\n+  \/\/ The minimum number of retained regions we will add to the CSet during a young GC.\n+  uint min_retained_old_cset_length() const;\n@@ -349,0 +352,5 @@\n+  void select_candidates_from_retained(G1CollectionCandidateList* retained_list,\n+                                       double time_remaining_ms,\n+                                       G1CollectionCandidateRegionList* initial_old_regions,\n+                                       G1CollectionCandidateRegionList* optional_old_regions);\n+\n@@ -404,0 +412,5 @@\n+  bool should_retain_evac_failed_region(HeapRegion* r) const {\n+    return should_retain_evac_failed_region(r->hrm_index());\n+  }\n+  bool should_retain_evac_failed_region(uint index) const;\n+\n@@ -430,0 +443,3 @@\n+  \/\/ Returns the total time that to at most reserve for handling retained regions.\n+  double max_time_for_retaining() const { return max_pause_time_ms() * optional_prediction_fraction(); }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1105,4 +1105,5 @@\n-      \/\/ old regions are only in the collection set after the concurrent cycle completed,\n-      \/\/ so their bitmaps must also be clear except when the pause occurs during the\n-      \/\/ Concurrent Cleanup for Next Mark phase. Only at that point the region's bitmap may\n-      \/\/ contain marks while being in the collection set at the same time.\n+      \/\/ old regions that are currently being marked through are only in the collection set\n+      \/\/ after the concurrent cycle completed, so their bitmaps must also be clear except when\n+      \/\/ the pause occurs during the Concurrent Cleanup for Next Mark phase.\n+      \/\/ Only at that point the region's bitmap may contain marks while being in the collection\n+      \/\/ set at the same time.\n@@ -1133,0 +1134,1 @@\n+      _g1h->concurrent_mark()->clear_statistics(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/g1CollectionSetCandidates.inline.hpp\"\n@@ -467,0 +468,7 @@\n+\n+  \/\/ Must be before collection set calculation, requires collection set to not\n+  \/\/ be calculated yet.\n+  if (collector_state()->in_concurrent_start_gc()) {\n+    concurrent_mark()->pre_concurrent_start(_gc_cause);\n+  }\n+\n@@ -511,4 +519,0 @@\n-  if (collector_state()->in_concurrent_start_gc()) {\n-    concurrent_mark()->pre_concurrent_start(_gc_cause);\n-  }\n-\n@@ -953,0 +957,9 @@\n+void G1YoungCollector::enqueue_candidates_as_root_regions() {\n+  assert(collector_state()->in_concurrent_start_gc(), \"must be\");\n+\n+  G1CollectionSetCandidates* candidates = collection_set()->candidates();\n+  for (HeapRegion* r : *candidates) {\n+    _g1h->concurrent_mark()->add_root_region(r);\n+  }\n+}\n+\n@@ -975,0 +988,7 @@\n+  \/\/ Regions in the collection set candidates are roots for the marking (they are\n+  \/\/ not marked through considering they are very likely to be reclaimed soon.\n+  \/\/ They need to be enqueued explicitly compared to survivor regions.\n+  if (collector_state()->in_concurrent_start_gc()) {\n+    enqueue_candidates_as_root_regions();\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -129,0 +129,2 @@\n+  \/\/ Enqueue collection set candidates as root regions.\n+  void enqueue_candidates_as_root_regions();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-      return false;\n@@ -49,1 +48,1 @@\n-    return true;\n+    return _evac_failure_regions_num == 0;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-class G1PostEvacuateCollectionSetCleanupTask2::ClearRetainedRegionBitmaps : public G1AbstractSubTask {\n+class G1PostEvacuateCollectionSetCleanupTask2::ProcessEvacuationFailedRegionsTask : public G1AbstractSubTask {\n@@ -341,1 +341,1 @@\n-  class ClearRetainedRegionBitmapsClosure : public HeapRegionClosure {\n+  class ProcessEvacuationFailedRegionsClosure : public HeapRegionClosure {\n@@ -345,3 +345,22 @@\n-      assert(r->bottom() == r->top_at_mark_start(),\n-             \"TAMS should have been reset for region %u\", r->hrm_index());\n-      G1CollectedHeap::heap()->clear_bitmap_for_region(r);\n+      G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+      G1ConcurrentMark* cm = g1h->concurrent_mark();\n+\n+      uint region = r->hrm_index();\n+      assert(r->top_at_mark_start() == r->bottom(), \"TAMS must not have been set for region %u\", region);\n+      assert(cm->live_bytes(region) == 0, \"Marking live bytes must not be set for region %u\", region);\n+\n+      \/\/ Concurrent mark does not mark through regions that we retain (they are root\n+      \/\/ regions wrt to marking), so we must clear their mark data (tams, bitmap)\n+      \/\/ set eagerly or during evacuation failure.\n+      bool clear_mark_data = !g1h->collector_state()->in_concurrent_start_gc() ||\n+                             g1h->policy()->should_retain_evac_failed_region(r);\n+\n+      if (clear_mark_data) {\n+        g1h->clear_bitmap_for_region(r);\n+      } else {\n+        \/\/ This evacuation failed region is going to be marked through. Update mark data.\n+        r->set_top_at_mark_start(r->top());\n+        cm->set_live_bytes(r->hrm_index(), r->live_bytes());\n+        assert(cm->mark_bitmap()->get_next_marked_addr(r->bottom(), r->top_at_mark_start()) != r->top_at_mark_start(),\n+               \"Marks must be on bitmap for region %u\", r->hrm_index());\n+      }\n@@ -353,2 +372,2 @@\n-  ClearRetainedRegionBitmaps(G1EvacFailureRegions* evac_failure_regions) :\n-    G1AbstractSubTask(G1GCPhaseTimes::ClearRetainedRegionBitmaps),\n+  ProcessEvacuationFailedRegionsTask(G1EvacFailureRegions* evac_failure_regions) :\n+    G1AbstractSubTask(G1GCPhaseTimes::ProcessEvacuationFailedRegions),\n@@ -357,2 +376,0 @@\n-    assert(!G1CollectedHeap::heap()->collector_state()->in_concurrent_start_gc(),\n-           \"Should not clear bitmaps of retained regions during concurrent start\");\n@@ -370,1 +387,1 @@\n-    ClearRetainedRegionBitmapsClosure cl;\n+    ProcessEvacuationFailedRegionsClosure cl;\n@@ -528,0 +545,1 @@\n+  uint             _num_retained_regions;\n@@ -557,1 +575,1 @@\n-                                      G1GCPhaseTimes::RestoreRetainedRegionsNum);\n+                                      G1GCPhaseTimes::RestoreRetainedRegionsFailedNum);\n@@ -559,0 +577,1 @@\n+    bool retain_region = _g1h->policy()->should_retain_evac_failed_region(r);\n@@ -560,1 +579,8 @@\n-    r->handle_evacuation_failure();\n+    r->handle_evacuation_failure(retain_region);\n+    assert(r->is_old(), \"must already be relabelled as old\");\n+\n+    if (retain_region) {\n+      _g1h->retain_region(r);\n+      _num_retained_regions++;\n+    }\n+    assert(retain_region == r->rem_set()->is_tracked(), \"When retaining a region, remembered set should be kept.\");\n@@ -587,1 +613,2 @@\n-      _evac_failure_regions(evac_failure_regions) { }\n+      _evac_failure_regions(evac_failure_regions),\n+      _num_retained_regions(0) { }\n@@ -620,0 +647,2 @@\n+\n+  bool num_retained_regions() const { return _num_retained_regions; }\n@@ -624,1 +653,1 @@\n-  G1EvacInfo* _evacuation_info;\n+  G1EvacInfo*       _evacuation_info;\n@@ -662,0 +691,10 @@\n+\n+    G1GCPhaseTimes* p = _g1h->phase_times();\n+    bool has_new_retained_regions =\n+      p->sum_thread_work_items(G1GCPhaseTimes::RestoreRetainedRegions, G1GCPhaseTimes::RestoreRetainedRegionsRetainedNum) != 0;\n+\n+    if (has_new_retained_regions) {\n+      G1CollectionSetCandidates* candidates = _g1h->collection_set()->candidates();\n+      candidates->sort_by_efficiency();\n+    }\n+\n@@ -667,1 +706,1 @@\n-    _g1h->phase_times()->record_serial_free_cset_time_ms((Ticks::now() - serial_time).seconds() * 1000.0);\n+    p->record_serial_free_cset_time_ms((Ticks::now() - serial_time).seconds() * 1000.0);\n@@ -687,0 +726,4 @@\n+    _g1h->phase_times()->record_or_add_thread_work_item(G1GCPhaseTimes::RestoreRetainedRegions,\n+                                                        worker_id,\n+                                                        cl.num_retained_regions(),\n+                                                        G1GCPhaseTimes::RestoreRetainedRegionsRetainedNum);\n@@ -729,4 +772,1 @@\n-    \/\/ Keep marks on bitmaps in retained regions during concurrent start - they will all be old.\n-    if (!G1CollectedHeap::heap()->collector_state()->in_concurrent_start_gc()) {\n-      add_parallel_task(new ClearRetainedRegionBitmaps(evac_failure_regions));\n-    }\n+    add_parallel_task(new ProcessEvacuationFailedRegionsTask(evac_failure_regions));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":59,"deletions":19,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-\/\/ - Clear Retained Region Bitmaps (on evacuation failure)\n+\/\/ - Clear Retained Region Data (on evacuation failure)\n@@ -69,1 +69,1 @@\n-  class ClearRetainedRegionBitmaps;\n+  class ProcessEvacuationFailedRegionsTask;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -254,0 +254,6 @@\n+  product(uintx, G1RetainRegionLiveThresholdPercent, 85, EXPERIMENTAL,      \\\n+          \"Threshold for evacuation failed regions to be considered for \"   \\\n+          \"inclusion in the collection set candidates.\"                     \\\n+          \"Regions with live bytes exceeding this will not be retained.\")   \\\n+          range(0, 100)                                                     \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+#include \"runtime\/atomic.hpp\"\n@@ -103,1 +104,1 @@\n-void HeapRegion::handle_evacuation_failure() {\n+void HeapRegion::handle_evacuation_failure(bool retain) {\n@@ -110,1 +111,1 @@\n-  _rem_set->clear_locked(true \/* only_cardset *\/);\n+  _rem_set->clear_locked(true \/* only_cardset *\/, retain \/* keep_tracked *\/);\n@@ -266,1 +267,1 @@\n- void HeapRegion::note_evacuation_failure(bool during_concurrent_start) {\n+ void HeapRegion::note_evacuation_failure() {\n@@ -272,11 +273,0 @@\n-\n-  if (during_concurrent_start) {\n-    \/\/ Self-forwarding marks all objects. Adjust TAMS so that these marks are\n-    \/\/ below it.\n-    set_top_at_mark_start(top());\n-  } else {\n-    \/\/ Outside of the mixed phase all regions that had an evacuation failure must\n-    \/\/ be young regions, and their TAMS is always bottom. Similarly, before the\n-    \/\/ start of the mixed phase, we scrubbed and reset TAMS to bottom.\n-    assert(top_at_mark_start() == bottom(), \"must be\");\n-  }\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -486,1 +486,1 @@\n-  void note_evacuation_failure(bool during_concurrent_start);\n+  void note_evacuation_failure();\n@@ -532,1 +532,1 @@\n-  void handle_evacuation_failure();\n+  void handle_evacuation_failure(bool retain);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -284,2 +284,2 @@\n-  assert(top_at_mark_start() == bottom(), \"CA region's TAMS must always be at bottom\");\n-  if (is_old_or_humongous()) {\n+  assert(top_at_mark_start() == bottom(), \"Region's TAMS must always be at bottom\");\n+  if (is_old_or_humongous() && !is_collection_set_candidate()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-void HeapRegionRemSet::clear_locked(bool only_cardset) {\n+void HeapRegionRemSet::clear_locked(bool only_cardset, bool keep_tracked) {\n@@ -82,1 +82,5 @@\n-  set_state_untracked();\n+  if (!keep_tracked) {\n+    set_state_untracked();\n+  } else {\n+    assert(is_tracked(), \"must be\");\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-  void clear_locked(bool only_cardset = false);\n+  void clear_locked(bool only_cardset = false, bool keep_tracked = false);\n@@ -159,1 +159,1 @@\n-\n+  \/\/ Clean out code roots not having an oop pointing into this region any more.\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  void notify_allocation(JavaThread* thread);\n+  void notify_allocation();\n@@ -63,1 +63,1 @@\n-  void notify_allocation_dtrace_sampler(JavaThread* thread);\n+  void notify_allocation_dtrace_sampler();\n@@ -73,1 +73,1 @@\n-      _thread(JavaThread::current()),\n+      _thread(JavaThread::cast(allocator._thread)), \/\/ Do not use Allocation in non-JavaThreads.\n@@ -80,0 +80,1 @@\n+    assert(Thread::current() == allocator._thread, \"do not pass MemAllocator across threads\");\n@@ -85,1 +86,1 @@\n-      notify_allocation(_thread);\n+      notify_allocation();\n@@ -159,1 +160,1 @@\n-  JavaThread::cast(_thread)->check_for_valid_safepoint_state();\n+  _thread->check_for_valid_safepoint_state();\n@@ -220,1 +221,1 @@\n-void MemAllocator::Allocation::notify_allocation_dtrace_sampler(JavaThread* thread) {\n+void MemAllocator::Allocation::notify_allocation_dtrace_sampler() {\n@@ -226,1 +227,1 @@\n-      SharedRuntime::dtrace_object_alloc(thread, obj(), word_size);\n+      SharedRuntime::dtrace_object_alloc(_thread, obj(), word_size);\n@@ -231,1 +232,1 @@\n-void MemAllocator::Allocation::notify_allocation(JavaThread* thread) {\n+void MemAllocator::Allocation::notify_allocation() {\n@@ -234,1 +235,1 @@\n-  notify_allocation_dtrace_sampler(thread);\n+  notify_allocation_dtrace_sampler();\n@@ -338,1 +339,1 @@\n-  debug_only(JavaThread::cast(_thread)->check_for_valid_safepoint_state());\n+  debug_only(allocation._thread->check_for_valid_safepoint_state());\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,3 @@\n-  { }\n+  {\n+    assert(_thread == Thread::current(), \"must be\");\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-  static bool _debug_perturbation;\n","filename":"src\/hotspot\/share\/gc\/shared\/workerPolicy.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -284,1 +284,10 @@\n-  ReservedSpace aux_bitmap(_bitmap_size, bitmap_page_size);\n+  size_t aux_bitmap_page_size = bitmap_page_size;\n+#ifdef LINUX\n+  \/\/ In THP \"advise\" mode, we refrain from advising the system to use large pages\n+  \/\/ since we know these commits will be short lived, and there is no reason to trash\n+  \/\/ the THP area with this bitmap.\n+  if (UseTransparentHugePages) {\n+    aux_bitmap_page_size = os::vm_page_size();\n+  }\n+#endif\n+  ReservedSpace aux_bitmap(_bitmap_size, aux_bitmap_page_size);\n@@ -286,1 +295,1 @@\n-                                          bitmap_size_orig, bitmap_page_size,\n+                                          bitmap_size_orig, aux_bitmap_page_size,\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,1 +142,1 @@\n-    _numa_id = XNUMA::memory_id(XAddress::good(start()));\n+    _numa_id = checked_cast<uint8_t>(XNUMA::memory_id(XAddress::good(start())));\n@@ -161,1 +161,1 @@\n-  _last_used = ceil(os::elapsedTime());\n+  _last_used = (uint64_t)ceil(os::elapsedTime());\n","filename":"src\/hotspot\/share\/gc\/x\/xPage.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-    _numa_id = ZNUMA::memory_id(untype(ZOffset::address(start())));\n+    _numa_id = checked_cast<uint8_t>(ZNUMA::memory_id(untype(ZOffset::address(start()))));\n@@ -210,1 +210,1 @@\n-  _last_used = ceil(os::elapsedTime());\n+  _last_used = (uint64_t)ceil(os::elapsedTime());\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -277,1 +277,1 @@\n-  long index() const   { return get_index_u2(Bytecodes::_checkcast); };\n+  u2 index() const   { return get_index_u2(Bytecodes::_checkcast); };\n@@ -287,1 +287,1 @@\n-  long index() const   { return get_index_u2(Bytecodes::_instanceof); };\n+  u2 index() const   { return get_index_u2(Bytecodes::_instanceof); };\n@@ -296,1 +296,1 @@\n-  long index() const   { return get_index_u2(Bytecodes::_new); };\n+  u2 index() const   { return get_index_u2(Bytecodes::_new); };\n@@ -305,1 +305,1 @@\n-  long index() const   { return get_index_u2(Bytecodes::_multianewarray); };\n+  u2 index() const   { return get_index_u2(Bytecodes::_multianewarray); };\n@@ -314,1 +314,1 @@\n-  long index() const   { return get_index_u2(Bytecodes::_anewarray); };\n+  u2 index() const   { return get_index_u2(Bytecodes::_anewarray); };\n","filename":"src\/hotspot\/share\/interpreter\/bytecode.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -719,1 +719,3 @@\n-  entry->fill_in(info.field_holder(), info.offset(), (u2)info.index(), (u1)state, (u1)get_code, (u1)put_code);\n+  entry->fill_in(info.field_holder(), info.offset(),\n+                 checked_cast<u2>(info.index()), checked_cast<u1>(state),\n+                 static_cast<u1>(get_code), static_cast<u1>(put_code));\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-    Bytes::put_native_u2(p, field_entry_index);\n+    Bytes::put_native_u2(p, checked_cast<u2>(field_entry_index));\n@@ -192,1 +192,1 @@\n-    Bytes::put_Java_u2(p, pool_index);\n+    Bytes::put_Java_u2(p, checked_cast<u2>(pool_index));\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -170,19 +170,21 @@\n-\/\/ annotation processing support\n-\n-enum {  \/\/ initial annotation layout\n-  atype_off = 0,      \/\/ utf8 such as 'Ljava\/lang\/annotation\/Retention;'\n-  count_off = 2,      \/\/ u2   such as 1 (one value)\n-  member_off = 4,     \/\/ utf8 such as 'value'\n-  tag_off = 6,        \/\/ u1   such as 'c' (type) or 'e' (enum)\n-  e_tag_val = 'e',\n-  e_type_off = 7,   \/\/ utf8 such as 'Ljava\/lang\/annotation\/RetentionPolicy;'\n-  e_con_off = 9,    \/\/ utf8 payload, such as 'SOURCE', 'CLASS', 'RUNTIME'\n-  e_size = 11,     \/\/ end of 'e' annotation\n-  c_tag_val = 'c',    \/\/ payload is type\n-  c_con_off = 7,    \/\/ utf8 payload, such as 'I'\n-  c_size = 9,       \/\/ end of 'c' annotation\n-  s_tag_val = 's',    \/\/ payload is String\n-  s_con_off = 7,    \/\/ utf8 payload, such as 'Ljava\/lang\/String;'\n-  s_size = 9,\n-  min_size = 6        \/\/ smallest possible size (zero members)\n-};\n+\/*\n+  Annotation layout.\n+\n+  enum {  \/\/ initial annotation layout\n+    atype_off = 0,      \/\/ utf8 such as 'Ljava\/lang\/annotation\/Retention;'\n+    count_off = 2,      \/\/ u2   such as 1 (one value)\n+    member_off = 4,     \/\/ utf8 such as 'value'\n+    tag_off = 6,        \/\/ u1   such as 'c' (type) or 'e' (enum)\n+    e_tag_val = 'e',\n+    e_type_off = 7,   \/\/ utf8 such as 'Ljava\/lang\/annotation\/RetentionPolicy;'\n+    e_con_off = 9,    \/\/ utf8 payload, such as 'SOURCE', 'CLASS', 'RUNTIME'\n+    e_size = 11,     \/\/ end of 'e' annotation\n+    c_tag_val = 'c',    \/\/ payload is type\n+    c_con_off = 7,    \/\/ utf8 payload, such as 'I'\n+    c_size = 9,       \/\/ end of 'c' annotation\n+    s_tag_val = 's',    \/\/ payload is String\n+    s_con_off = 7,    \/\/ utf8 payload, such as 'Ljava\/lang\/String;'\n+    s_size = 9,\n+    min_size = 6        \/\/ smallest possible size (zero members)\n+  };\n+*\/\n@@ -199,1 +201,1 @@\n-  int nof_members = JfrBigEndian::read<u2>(buffer + index - 2);\n+  int nof_members = JfrBigEndian::read<int, u2>(buffer + index - 2);\n@@ -243,1 +245,1 @@\n-        int nof_values = JfrBigEndian::read<u2>(buffer + index - 2);\n+        int nof_values = JfrBigEndian::read<int, u2>(buffer + index - 2);\n@@ -258,5 +260,5 @@\n-static const u2 number_of_elements_offset = (u2)2;\n-static const u2 element_name_offset = (u2)(number_of_elements_offset + 2);\n-static const u2 element_name_size = (u2)2;\n-static const u2 value_type_relative_offset = (u2)2;\n-static const u2 value_relative_offset = (u2)(value_type_relative_offset + 1);\n+static constexpr const int number_of_elements_offset = 2;\n+static constexpr const int element_name_offset = number_of_elements_offset + 2;\n+static constexpr const int element_name_size = 2;\n+static constexpr const int value_type_relative_offset = 2;\n+static constexpr const int value_relative_offset = value_type_relative_offset + 1;\n@@ -270,5 +272,6 @@\n-  const u2 _limit; \/\/ length of annotation\n-  mutable u2 _current; \/\/ element\n-  mutable u2 _next; \/\/ element\n-  u2 value_index() const {\n-    return JfrBigEndian::read<u2>(_buffer + _current + value_relative_offset);\n+  const int _limit; \/\/ length of annotation\n+  mutable int _current; \/\/ element\n+  mutable int _next; \/\/ element\n+\n+  int value_index() const {\n+    return JfrBigEndian::read<int, u2>(_buffer + _current + value_relative_offset);\n@@ -278,5 +281,5 @@\n-  AnnotationElementIterator(const InstanceKlass* ik, address buffer, u2 limit) : _ik(ik),\n-                                                                                 _buffer(buffer),\n-                                                                                 _limit(limit),\n-                                                                                 _current(element_name_offset),\n-                                                                                 _next(element_name_offset) {\n+  AnnotationElementIterator(const InstanceKlass* ik, address buffer, int limit) : _ik(ik),\n+                                                                                  _buffer(buffer),\n+                                                                                  _limit(limit),\n+                                                                                  _current(element_name_offset),\n+                                                                                  _next(element_name_offset) {\n@@ -302,2 +305,2 @@\n-  u2 number_of_elements() const {\n-    return JfrBigEndian::read<u2>(_buffer + number_of_elements_offset);\n+  int number_of_elements() const {\n+    return JfrBigEndian::read<int, u2>(_buffer + number_of_elements_offset);\n@@ -308,1 +311,1 @@\n-    return _ik->constants()->symbol_at(JfrBigEndian::read<u2>(_buffer + _current));\n+    return _ik->constants()->symbol_at(JfrBigEndian::read<int, u2>(_buffer + _current));\n@@ -312,1 +315,1 @@\n-    return JfrBigEndian::read<u1>(_buffer + _current + value_type_relative_offset);\n+    return JfrBigEndian::read<char, u1>(_buffer + _current + value_type_relative_offset);\n@@ -328,1 +331,1 @@\n-  u2 _limit; \/\/ length of annotations array\n+  int _limit; \/\/ length of annotations array\n@@ -330,2 +333,2 @@\n-  mutable u2 _current; \/\/ annotation\n-  mutable u2 _next; \/\/ annotation\n+  mutable int _current; \/\/ annotation\n+  mutable int _next; \/\/ annotation\n@@ -356,0 +359,1 @@\n+\n@@ -360,0 +364,1 @@\n+\n@@ -363,1 +368,1 @@\n-    return _ik->constants()->symbol_at(JfrBigEndian::read<u2>(_buffer + _current));\n+    return _ik->constants()->symbol_at(JfrBigEndian::read<int, u2>(_buffer + _current));\n@@ -479,1 +484,1 @@\n-  for (u2 index = 1; index < cp_len; ++index) {\n+  for (int index = 1; index < cp_len; ++index) {\n@@ -485,1 +490,1 @@\n-        return index;\n+        return static_cast<u2>(index);\n@@ -683,1 +688,1 @@\n-        u2 utf8_length = stream->get_u2_fast();\n+        int utf8_length = static_cast<int>(stream->get_u2_fast());\n@@ -728,2 +733,1 @@\n-      const u4 attrib_len = stream->get_u4_fast();\n-      stream->skip_u1_fast(attrib_len);\n+      stream->skip_u1_fast(static_cast<int>(stream->get_u4_fast()));\n@@ -757,1 +761,1 @@\n-  orig_method_len_offset += sizeof(u2);\n+  orig_method_len_offset += 2;\n@@ -766,2 +770,1 @@\n-      const u4 attrib_len = stream->get_u4_fast();\n-      stream->skip_u1_fast(attrib_len);\n+      stream->skip_u1_fast(static_cast<int>(stream->get_u4_fast()));\n@@ -856,1 +859,1 @@\n-enum StackMapFrameTypes {\n+enum StackMapFrameTypes : u1 {\n@@ -898,1 +901,2 @@\n-    writer.write<u2>((frame_type - SAME_LOCALS_1_STACK_ITEM_FRAME_BEGIN) + bci_adjustment_offset);\n+    const u2 value = frame_type - SAME_LOCALS_1_STACK_ITEM_FRAME_BEGIN;\n+    writer.write<u2>(value + bci_adjustment_offset);\n@@ -912,1 +916,1 @@\n-  u4 stack_map_attrib_len = writer.current_offset() - stack_map_attrib_len_offset;\n+  u4 stack_map_attrib_len = static_cast<u4>(writer.current_offset() - stack_map_attrib_len_offset);\n@@ -914,1 +918,1 @@\n-  stack_map_attrib_len -= sizeof(u4);\n+  stack_map_attrib_len -= 4;\n@@ -941,1 +945,1 @@\n-  u4 lnt_table_attributes_len = writer.current_offset() - lnt_attributes_length_offset;\n+  u4 lnt_table_attributes_len = static_cast<u4>(writer.current_offset() - lnt_attributes_length_offset);\n@@ -943,1 +947,1 @@\n-  lnt_table_attributes_len -= sizeof(u4);\n+  lnt_table_attributes_len -= 4;\n@@ -974,1 +978,1 @@\n-  u4 lvt_table_attributes_len = writer.current_offset() - lvt_attributes_length_offset;\n+  u4 lvt_table_attributes_len = static_cast<u4>(writer.current_offset() - lvt_attributes_length_offset);\n@@ -976,1 +980,1 @@\n-  lvt_table_attributes_len -= sizeof(u4);\n+  lvt_table_attributes_len -= 4;\n@@ -1004,1 +1008,1 @@\n-  u4 lvtt_table_attributes_len = writer.current_offset() - lvtt_attributes_length_offset;\n+  u4 lvtt_table_attributes_len = static_cast<u4>(writer.current_offset() - lvtt_attributes_length_offset);\n@@ -1006,1 +1010,1 @@\n-  lvtt_table_attributes_len -= sizeof(u4);\n+  lvtt_table_attributes_len -= 4;\n@@ -1064,2 +1068,2 @@\n-  const u2 max_stack = MAX2(clinit_method != nullptr ? clinit_method->verifier_max_stack() : 1, 1);\n-  const u2 max_locals = MAX2(clinit_method != nullptr ? clinit_method->max_locals() : 0, 0);\n+  const u2 max_stack = MAX2<u2>(clinit_method != nullptr ? clinit_method->verifier_max_stack() : 1, 1);\n+  const u2 max_locals = MAX2<u2>(clinit_method != nullptr ? clinit_method->max_locals() : 0, 0);\n@@ -1114,1 +1118,1 @@\n-  u4 code_attribute_len = writer.current_offset() - code_attribute_length_offset;\n+  u4 code_attribute_len = static_cast<u4>(writer.current_offset() - code_attribute_length_offset);\n@@ -1116,1 +1120,1 @@\n-  code_attribute_len -= sizeof(u4);\n+  code_attribute_len -= 4;\n@@ -1215,1 +1219,1 @@\n-  const int utf8_orig_idx = utf8_info_index(ik, utf8_sym, THREAD);\n+  const u2 utf8_orig_idx = utf8_info_index(ik, utf8_sym, THREAD);\n@@ -1408,0 +1412,3 @@\n+    if (clinit_method == nullptr) {\n+      ++number_of_new_methods;\n+    }\n@@ -1409,1 +1416,0 @@\n-  number_of_new_methods += clinit_method != nullptr ? 0 : register_klass ? 1 : 0;\n","filename":"src\/hotspot\/share\/jfr\/instrumentation\/jfrEventClassTransformer.cpp","additions":74,"deletions":68,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-  traceid _stack_trace_id;\n@@ -56,1 +55,2 @@\n-  int _index;\n+  traceid _stack_trace_id;\n+  traceid _stack_trace_hash;\n@@ -60,1 +60,1 @@\n-  unsigned int _stack_trace_hash;\n+  int _index;\n@@ -78,1 +78,0 @@\n-                   _stack_trace_id(0),\n@@ -80,1 +79,2 @@\n-                   _index(0),\n+                   _stack_trace_id(0),\n+                   _stack_trace_hash(0),\n@@ -84,1 +84,1 @@\n-                   _stack_trace_hash(0),\n+                   _index(0),\n@@ -173,1 +173,1 @@\n-  unsigned int stack_trace_hash() const {\n+  traceid stack_trace_hash() const {\n@@ -177,1 +177,1 @@\n-  void set_stack_trace_hash(unsigned int hash) {\n+  void set_stack_trace_hash(traceid hash) {\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/sampling\/objectSample.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-  const unsigned int stacktrace_hash = tl->cached_stack_trace_hash();\n+  const traceid stacktrace_hash = tl->cached_stack_trace_hash();\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/sampling\/objectSampler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-    while (flag->name() != nullptr) {                                \\\n+    while (flag->name() != nullptr) {                             \\\n@@ -419,1 +419,1 @@\n-  event.set_gcTimeRatio(conf.gc_time_ratio());\n+  event.set_gcTimeRatio(static_cast<unsigned int>(conf.gc_time_ratio()));\n@@ -436,2 +436,2 @@\n-  event.set_maxTenuringThreshold(conf.max_tenuring_threshold());\n-  event.set_initialTenuringThreshold(conf.initial_tenuring_threshold());\n+  event.set_maxTenuringThreshold(static_cast<u1>(conf.max_tenuring_threshold()));\n+  event.set_initialTenuringThreshold(static_cast<u1>(conf.initial_tenuring_threshold()));\n@@ -450,1 +450,1 @@\n-  event.set_heapAddressBits(conf.heap_address_size_in_bits());\n+  event.set_heapAddressBits(static_cast<u1>(conf.heap_address_size_in_bits()));\n@@ -460,1 +460,1 @@\n-  event.set_newRatio(conf.new_ratio());\n+  event.set_newRatio(static_cast<unsigned int>(conf.new_ratio()));\n@@ -663,1 +663,1 @@\n-  event.set_threadCount(CICompilerCount);\n+  event.set_threadCount(static_cast<s4>(CICompilerCount));\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  jlong total_available_time = wallclock_time * processor_count;\n+  const float total_available_time = static_cast<float>(wallclock_time * processor_count);\n@@ -100,2 +100,2 @@\n-  event.set_user(total_available_time > 0 ? (double)user_time \/ total_available_time : 0);\n-  event.set_system(total_available_time > 0 ? (double)system_time \/ total_available_time : 0);\n+  event.set_user(total_available_time > 0 ? static_cast<float>(user_time) \/ total_available_time : 0);\n+  event.set_system(total_available_time > 0 ? static_cast<float>(system_time) \/ total_available_time : 0);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrThreadCPULoadEvent.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-  return JfrBigEndian::read<Return>(data);\n+  return JfrBigEndian::read<Return, Return>(data);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrCheckpointManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -308,1 +308,1 @@\n-  int parent_thread_group_id = 0;\n+  traceid parent_thread_group_id = 0;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrThreadGroup.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-#include \"jni.h\"\n@@ -38,1 +37,1 @@\n-  static void store(jbyte bits, const T* ptr);\n+  static void store(uint8_t bits, const T* ptr);\n@@ -41,1 +40,1 @@\n-  static void cas(jbyte bits, const T* ptr);\n+  static void cas(uint8_t bits, const T* ptr);\n@@ -44,1 +43,1 @@\n-  static void meta_store(jbyte bits, const T* ptr);\n+  static void meta_store(uint8_t bits, const T* ptr);\n@@ -47,1 +46,1 @@\n-  static void mask_store(jbyte mask, const T* ptr);\n+  static void mask_store(uint8_t mask, const T* ptr);\n@@ -50,1 +49,1 @@\n-  static void meta_mask_store(jbyte mask, const T* ptr);\n+  static void meta_mask_store(uint8_t mask, const T* ptr);\n@@ -53,1 +52,1 @@\n-  static void clear(jbyte bits, const T* ptr);\n+  static void clear(uint8_t bits, const T* ptr);\n@@ -56,1 +55,1 @@\n-  static void clear_cas(jbyte bits, const T* ptr);\n+  static void clear_cas(uint8_t bits, const T* ptr);\n@@ -59,1 +58,1 @@\n-  static void meta_clear(jbyte bits, const T* ptr);\n+  static void meta_clear(uint8_t bits, const T* ptr);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdBits.hpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-inline jbyte* low_addr(jbyte* addr) {\n+inline uint8_t* low_addr(uint8_t* addr) {\n@@ -47,2 +47,2 @@\n-inline jbyte* low_addr(traceid* addr) {\n-  return low_addr((jbyte*)addr);\n+inline uint8_t* low_addr(traceid* addr) {\n+  return low_addr(reinterpret_cast<uint8_t*>(addr));\n@@ -51,1 +51,1 @@\n-inline jbyte* meta_addr(jbyte* addr) {\n+inline uint8_t* meta_addr(uint8_t* addr) {\n@@ -56,2 +56,2 @@\n-inline jbyte* meta_addr(traceid* addr) {\n-  return meta_addr((jbyte*)addr);\n+inline uint8_t* meta_addr(traceid* addr) {\n+  return meta_addr(reinterpret_cast<uint8_t*>(addr));\n@@ -61,1 +61,1 @@\n-inline jbyte* traceid_tag_byte(const T* ptr) {\n+inline uint8_t* traceid_tag_byte(const T* ptr) {\n@@ -67,1 +67,1 @@\n-inline jbyte* traceid_tag_byte<Method>(const Method* ptr) {\n+inline uint8_t* traceid_tag_byte<Method>(const Method* ptr) {\n@@ -73,1 +73,1 @@\n-inline jbyte* traceid_meta_byte(const T* ptr) {\n+inline uint8_t* traceid_meta_byte(const T* ptr) {\n@@ -79,1 +79,1 @@\n-inline jbyte* traceid_meta_byte<Method>(const Method* ptr) {\n+inline uint8_t* traceid_meta_byte<Method>(const Method* ptr) {\n@@ -84,1 +84,1 @@\n-inline jbyte traceid_and(jbyte bits, jbyte current) {\n+inline uint8_t traceid_and(uint8_t bits, uint8_t current) {\n@@ -88,1 +88,1 @@\n-inline jbyte traceid_or(jbyte bits, jbyte current) {\n+inline uint8_t traceid_or(uint8_t bits, uint8_t current) {\n@@ -92,1 +92,1 @@\n-inline jbyte traceid_xor(jbyte bits, jbyte current) {\n+inline uint8_t traceid_xor(uint8_t bits, uint8_t current) {\n@@ -96,2 +96,2 @@\n-template <jbyte op(jbyte, jbyte)>\n-inline void set_form(jbyte bits, jbyte* dest) {\n+template <uint8_t op(uint8_t, uint8_t)>\n+inline void set_form(uint8_t bits, uint8_t* dest) {\n@@ -103,2 +103,2 @@\n-template <jbyte op(jbyte, jbyte)>\n-inline void set_cas_form(jbyte bits, jbyte volatile* dest) {\n+template <uint8_t op(uint8_t, uint8_t)>\n+inline void set_cas_form(uint8_t bits, uint8_t volatile* dest) {\n@@ -107,2 +107,2 @@\n-    const jbyte current = *dest;\n-    const jbyte new_value = op(bits, current);\n+    const uint8_t current = *dest;\n+    const uint8_t new_value = op(bits, current);\n@@ -116,1 +116,1 @@\n-inline void JfrTraceIdBits::cas(jbyte bits, const T* ptr) {\n+inline void JfrTraceIdBits::cas(uint8_t bits, const T* ptr) {\n@@ -127,1 +127,1 @@\n-inline void set(jbyte bits, jbyte* dest) {\n+inline void set(uint8_t bits, uint8_t* dest) {\n@@ -133,1 +133,1 @@\n-inline void JfrTraceIdBits::store(jbyte bits, const T* ptr) {\n+inline void JfrTraceIdBits::store(uint8_t bits, const T* ptr) {\n@@ -147,1 +147,1 @@\n-inline void JfrTraceIdBits::meta_store(jbyte bits, const T* ptr) {\n+inline void JfrTraceIdBits::meta_store(uint8_t bits, const T* ptr) {\n@@ -152,1 +152,1 @@\n-inline void set_mask(jbyte mask, jbyte* dest) {\n+inline void set_mask(uint8_t mask, uint8_t* dest) {\n@@ -157,1 +157,1 @@\n-inline void JfrTraceIdBits::mask_store(jbyte mask, const T* ptr) {\n+inline void JfrTraceIdBits::mask_store(uint8_t mask, const T* ptr) {\n@@ -163,1 +163,1 @@\n-inline void JfrTraceIdBits::meta_mask_store(jbyte mask, const T* ptr) {\n+inline void JfrTraceIdBits::meta_mask_store(uint8_t mask, const T* ptr) {\n@@ -168,1 +168,1 @@\n-inline void clear_bits(jbyte bits, jbyte* dest) {\n+inline void clear_bits(uint8_t bits, uint8_t* dest) {\n@@ -173,1 +173,1 @@\n-inline void JfrTraceIdBits::clear(jbyte bits, const T* ptr) {\n+inline void JfrTraceIdBits::clear(uint8_t bits, const T* ptr) {\n@@ -178,1 +178,1 @@\n-inline void clear_bits_cas(jbyte bits, jbyte* dest) {\n+inline void clear_bits_cas(uint8_t bits, uint8_t* dest) {\n@@ -183,1 +183,1 @@\n-inline void JfrTraceIdBits::clear_cas(jbyte bits, const T* ptr) {\n+inline void JfrTraceIdBits::clear_cas(uint8_t bits, const T* ptr) {\n@@ -189,1 +189,1 @@\n-inline void JfrTraceIdBits::meta_clear(jbyte bits, const T* ptr) {\n+inline void JfrTraceIdBits::meta_clear(uint8_t bits, const T* ptr) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdBits.inline.hpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-  static traceid this_epoch_bit() {\n+  static uint8_t this_epoch_bit() {\n@@ -103,1 +103,1 @@\n-  static traceid previous_epoch_bit() {\n+  static uint8_t previous_epoch_bit() {\n@@ -107,1 +107,1 @@\n-  static traceid this_epoch_method_bit() {\n+  static uint8_t this_epoch_method_bit() {\n@@ -111,1 +111,1 @@\n-  static traceid previous_epoch_method_bit() {\n+  static uint8_t previous_epoch_method_bit() {\n@@ -115,1 +115,1 @@\n-  static traceid this_epoch_method_and_class_bits() {\n+  static uint8_t this_epoch_method_and_class_bits() {\n@@ -119,1 +119,1 @@\n-  static traceid previous_epoch_method_and_class_bits() {\n+  static uint8_t previous_epoch_method_and_class_bits() {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdEpoch.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -124,2 +124,1 @@\n-template <typename T>\n-static inline void store_traceid(T* element, traceid id, bool uncompressed) {\n+static inline void store_traceid(JfrEpochQueueKlassElement* element, traceid id) {\n@@ -129,1 +128,9 @@\n-  element->id = uncompressed ? id | UNCOMPRESSED : id;\n+  element->id = id | UNCOMPRESSED;\n+}\n+\n+static inline void store_traceid(JfrEpochQueueNarrowKlassElement* element, traceid id) {\n+  assert(id < uncompressed_threshold, \"invariant\");\n+#ifdef VM_LITTLE_ENDIAN\n+  id <<= METADATA_SHIFT;\n+#endif\n+  element->id = static_cast<u4>(id);\n@@ -135,1 +142,1 @@\n-  store_traceid(element, id, false);\n+  store_traceid(element, id);\n@@ -141,1 +148,1 @@\n-  store_traceid(element, id, true);\n+  store_traceid(element, id);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdKlassQueue.cpp","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,2 +73,0 @@\n-#define THIS_EPOCH_METHOD_FLAG_BIT                ((jbyte)THIS_EPOCH_BIT)\n-#define PREVIOUS_EPOCH_METHOD_FLAG_BIT            ((jbyte)PREVIOUS_EPOCH_BIT)\n@@ -105,1 +103,1 @@\n-#define METHOD_FLAG_USED_THIS_EPOCH(method)       (METHOD_FLAG_PREDICATE(method, (THIS_EPOCH_METHOD_FLAG_BIT)))\n+#define METHOD_FLAG_USED_THIS_EPOCH(method)       (METHOD_FLAG_PREDICATE(method, (THIS_EPOCH_BIT)))\n@@ -107,1 +105,1 @@\n-#define METHOD_FLAG_USED_PREVIOUS_EPOCH(method)   (METHOD_FLAG_PREDICATE(method, (PREVIOUS_EPOCH_METHOD_FLAG_BIT)))\n+#define METHOD_FLAG_USED_PREVIOUS_EPOCH(method)   (METHOD_FLAG_PREDICATE(method, (PREVIOUS_EPOCH_BIT)))\n@@ -113,1 +111,1 @@\n-#define SET_METHOD_FLAG_USED_THIS_EPOCH(method)   (METHOD_FLAG_TAG(method, THIS_EPOCH_METHOD_FLAG_BIT))\n+#define SET_METHOD_FLAG_USED_THIS_EPOCH(method)   (METHOD_FLAG_TAG(method, THIS_EPOCH_BIT))\n@@ -116,1 +114,1 @@\n-#define CLEAR_PREVIOUS_EPOCH_METHOD_FLAG(method)  (METHOD_FLAG_CLEAR(method, PREVIOUS_EPOCH_METHOD_FLAG_BIT))\n+#define CLEAR_PREVIOUS_EPOCH_METHOD_FLAG(method)  (METHOD_FLAG_CLEAR(method, PREVIOUS_EPOCH_BIT))\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdMacros.hpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-  const u4 checkpoint_size = current_offset() - event_size_offset;\n+  const u4 checkpoint_size = static_cast<u4>(current_offset() - event_size_offset);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrChunkWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-    *sample_size_ewma = exponentially_weighted_moving_average(expired->sample_size(), compute_ewma_alpha_coefficient(expired->params().window_lookback_count), *sample_size_ewma);\n+    *sample_size_ewma = exponentially_weighted_moving_average(static_cast<double>(expired->sample_size()), compute_ewma_alpha_coefficient(expired->params().window_lookback_count), *sample_size_ewma);\n@@ -253,1 +253,1 @@\n-      expired->population_size() == 0 ? 0 : (double)expired->sample_size() \/ (double)expired->population_size(),\n+      expired->population_size() == 0 ? 0 : static_cast<double>(expired->sample_size()) \/ static_cast<double>(expired->population_size()),\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrEventThrottler.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-JfrStackFrame::JfrStackFrame(const traceid& id, int bci, int type, const InstanceKlass* ik) :\n+JfrStackFrame::JfrStackFrame(const traceid& id, int bci, u1 type, const InstanceKlass* ik) :\n@@ -52,1 +52,1 @@\n-JfrStackFrame::JfrStackFrame(const traceid& id, int bci, int type, int lineno, const InstanceKlass* ik) :\n+JfrStackFrame::JfrStackFrame(const traceid& id, int bci, u1 type, int lineno, const InstanceKlass* ik) :\n@@ -259,1 +259,1 @@\n-    int type = vfs.is_interpreted_frame() ? JfrStackFrame::FRAME_INTERPRETER : JfrStackFrame::FRAME_JIT;\n+    u1 type = vfs.is_interpreted_frame() ? JfrStackFrame::FRAME_INTERPRETER : JfrStackFrame::FRAME_JIT;\n@@ -310,1 +310,1 @@\n-    int type = vfs.is_interpreted_frame() ? JfrStackFrame::FRAME_INTERPRETER : JfrStackFrame::FRAME_JIT;\n+    u1 type = vfs.is_interpreted_frame() ? JfrStackFrame::FRAME_INTERPRETER : JfrStackFrame::FRAME_JIT;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-  JfrStackFrame(const traceid& id, int bci, int type, const InstanceKlass* klass);\n-  JfrStackFrame(const traceid& id, int bci, int type, int lineno, const InstanceKlass* klass);\n+  JfrStackFrame(const traceid& id, int bci, u1 type, const InstanceKlass* klass);\n+  JfrStackFrame(const traceid& id, int bci, u1 type, int lineno, const InstanceKlass* klass);\n@@ -55,1 +55,1 @@\n-  enum {\n+  enum : u1 {\n@@ -75,1 +75,1 @@\n-  unsigned int _hash;\n+  traceid _hash;\n@@ -108,1 +108,1 @@\n-  unsigned int hash() const { return _hash; }\n+  traceid hash() const { return _hash; }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-  const unsigned int hash = stacktrace.hash();\n+  const traceid hash = stacktrace.hash();\n@@ -225,1 +225,1 @@\n-const JfrStackTrace* JfrStackTraceRepository::lookup_for_leak_profiler(unsigned int hash, traceid id) {\n+const JfrStackTrace* JfrStackTraceRepository::lookup_for_leak_profiler(traceid hash, traceid id) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTraceRepository.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-  static const JfrStackTrace* lookup_for_leak_profiler(unsigned int hash, traceid id);\n+  static const JfrStackTrace* lookup_for_leak_profiler(traceid hash, traceid id);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTraceRepository.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -225,1 +225,1 @@\n-  next->_sampling_interval = derive_sampling_interval(sample_size, expired);\n+  next->_sampling_interval = derive_sampling_interval(static_cast<double>(sample_size), expired);\n@@ -313,1 +313,1 @@\n-  return ceil(log(1.0 - u) \/ log(1.0 - p));\n+  return static_cast<size_t>(ceil(log(1.0 - u) \/ log(1.0 - p)));\n@@ -318,1 +318,1 @@\n-  const size_t population_size = project_population_size(expired);\n+  const double population_size = project_population_size(expired);\n@@ -328,1 +328,1 @@\n-inline size_t JfrAdaptiveSampler::project_population_size(const JfrSamplerWindow* expired) {\n+inline double JfrAdaptiveSampler::project_population_size(const JfrSamplerWindow* expired) {\n@@ -330,1 +330,1 @@\n-  _avg_population_size = exponentially_weighted_moving_average(expired->population_size(), _ewma_population_size_alpha, _avg_population_size);\n+  _avg_population_size = exponentially_weighted_moving_average(static_cast<double>(expired->population_size()), _ewma_population_size_alpha, _avg_population_size);\n@@ -365,1 +365,1 @@\n-    *sample_size_ewma = exponentially_weighted_moving_average(expired->sample_size(), compute_ewma_alpha_coefficient(expired->params().window_lookback_count), *sample_size_ewma);\n+    *sample_size_ewma = exponentially_weighted_moving_average(static_cast<double>(expired->sample_size()), compute_ewma_alpha_coefficient(expired->params().window_lookback_count), *sample_size_ewma);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrAdaptiveSampler.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-  size_t project_population_size(const JfrSamplerWindow* expired);\n+  double project_population_size(const JfrSamplerWindow* expired);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrAdaptiveSampler.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  unsigned int _previous_hash;\n+  traceid _previous_hash;\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrStackTraceMark.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+  _stack_trace_hash(0),\n@@ -71,1 +72,0 @@\n-  _stack_trace_hash(0),\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrThreadLocal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+  traceid _stack_trace_hash;\n@@ -65,1 +66,0 @@\n-  unsigned int _stack_trace_hash;\n@@ -190,1 +190,1 @@\n-  void set_cached_stack_trace_id(traceid id, unsigned int hash = 0) {\n+  void set_cached_stack_trace_id(traceid id, traceid hash = 0) {\n@@ -208,1 +208,1 @@\n-  unsigned int cached_stack_trace_hash() const {\n+  traceid cached_stack_trace_hash() const {\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrThreadLocal.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-  mutable jshort _flags;\n+  mutable uint16_t _flags;\n@@ -52,1 +52,1 @@\n-  bool is_set(jshort flag) const {\n+  bool is_set(uint16_t flag) const {\n@@ -56,1 +56,1 @@\n-  jshort flags() const {\n+  uint16_t flags() const {\n@@ -60,1 +60,1 @@\n-  void set_flags(jshort flags) const {\n+  void set_flags(uint16_t flags) const {\n@@ -64,1 +64,1 @@\n-  jbyte* flags_addr() const {\n+  uint8_t* flags_addr() const {\n@@ -66,1 +66,1 @@\n-    return (jbyte*)&_flags;\n+    return reinterpret_cast<uint8_t*>(&_flags);\n@@ -68,1 +68,1 @@\n-    return ((jbyte*)&_flags) + 1;\n+    return reinterpret_cast<uint8_t*>(&_flags) + 1;\n@@ -72,1 +72,1 @@\n-  jbyte* meta_addr() const {\n+  uint8_t* meta_addr() const {\n@@ -74,1 +74,1 @@\n-    return ((jbyte*)&_flags) + 1;\n+    return reinterpret_cast<uint8_t*>(&_flags) + 1;\n@@ -76,1 +76,1 @@\n-    return (jbyte*)&_flags;\n+    return reinterpret_cast<uint8_t*>(&_flags);\n@@ -84,1 +84,1 @@\n-  bool is_trace_flag_set(jshort flag) const {      \\\n+  bool is_trace_flag_set(uint16_t flag) const {    \\\n@@ -87,1 +87,1 @@\n-  jshort trace_flags() const {                     \\\n+  uint16_t trace_flags() const {                   \\\n@@ -90,1 +90,1 @@\n-  void set_trace_flags(jshort flags) const {       \\\n+  void set_trace_flags(uint16_t flags) const {     \\\n@@ -93,1 +93,1 @@\n-  jbyte* trace_flags_addr() const {                \\\n+  uint8_t* trace_flags_addr() const {              \\\n@@ -96,1 +96,1 @@\n-  jbyte* trace_meta_addr() const {                 \\\n+  uint8_t* trace_meta_addr() const {               \\\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrTraceIdExtension.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -47,2 +47,2 @@\n-  template <typename T>\n-  static T read_unaligned(const address location);\n+  template <typename R, typename T>\n+  static R read_unaligned(const address location);\n@@ -52,2 +52,2 @@\n-  template <typename T>\n-  static T read(const void* location);\n+  template <typename R, typename T>\n+  static R read(const void* location);\n@@ -85,2 +85,2 @@\n-template <typename T>\n-inline T JfrBigEndian::read_unaligned(const address location) {\n+template <typename R, typename T>\n+inline R JfrBigEndian::read_unaligned(const address location) {\n@@ -90,1 +90,1 @@\n-      return read_bytes<u1>(location);\n+      return static_cast<R>(read_bytes<u1>(location));\n@@ -92,1 +92,1 @@\n-      return read_bytes<u2>(location);\n+      return static_cast<R>(read_bytes<u2>(location));\n@@ -94,1 +94,1 @@\n-      return read_bytes<u4>(location);\n+      return static_cast<R>(read_bytes<u4>(location));\n@@ -96,1 +96,1 @@\n-      return read_bytes<u8>(location);\n+      return static_cast<R>(read_bytes<u8>(location));\n@@ -114,2 +114,2 @@\n-template<typename T>\n-inline T JfrBigEndian::read(const void* location) {\n+template<typename R, typename T>\n+inline R JfrBigEndian::read(const void* location) {\n@@ -119,1 +119,1 @@\n-    return *(T*)location;\n+    return static_cast<R>(*(u1*)location);\n@@ -124,2 +124,2 @@\n-      case sizeof(u1):\n-        return *(T*)location;\n+      case sizeof(u1) :\n+        return static_cast<R>(*(u1*)location);\n@@ -127,1 +127,1 @@\n-        return bigendian_16(*(T*)(location));\n+        return static_cast<R>(bigendian_16(*(u2*)location));\n@@ -129,1 +129,1 @@\n-        return bigendian_32(*(T*)(location));\n+        return static_cast<R>(bigendian_32(*(u4*)location));\n@@ -131,1 +131,1 @@\n-        return bigendian_64(*(T*)(location));\n+        return static_cast<R>(bigendian_64(*(u8*)location));\n@@ -134,1 +134,1 @@\n-  return read_unaligned<T>((const address)location);\n+  return read_unaligned<R, T>((const address)location);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrBigEndian.hpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-       Bytes::put_Java_u2(dest, value);\n+       Bytes::put_Java_u2(dest, static_cast<u2>(value));\n@@ -84,1 +84,1 @@\n-       Bytes::put_Java_u4(dest, value);\n+       Bytes::put_Java_u4(dest, static_cast<u4>(value));\n@@ -88,1 +88,1 @@\n-       Bytes::put_Java_u8(dest, value);\n+       Bytes::put_Java_u8(dest, static_cast<u8>(value));\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrEncoders.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+#include \"runtime\/arguments.hpp\"\n@@ -579,1 +580,1 @@\n-C2V_VMENTRY_NULL(jobject, lookupType, (JNIEnv* env, jobject, jstring jname, ARGUMENT_PAIR(accessing_klass), jboolean resolve))\n+C2V_VMENTRY_NULL(jobject, lookupType, (JNIEnv* env, jobject, jstring jname, ARGUMENT_PAIR(accessing_klass), jint accessing_klass_loader, jboolean resolve))\n@@ -588,0 +589,12 @@\n+#ifdef ASSERT\n+  const char* val = Arguments::PropertyList_get_value(Arguments::system_properties(), \"test.jvmci.lookupTypeException\");\n+  if (val != nullptr) {\n+    if (strstr(val, \"<trace>\") != nullptr) {\n+      tty->print_cr(\"CompilerToVM.lookupType: %s\", str);\n+    } else if (strstr(val, str) != nullptr) {\n+      THROW_MSG_0(vmSymbols::java_lang_Exception(),\n+                  err_msg(\"lookupTypeException: %s\", str));\n+    }\n+  }\n+#endif\n+\n@@ -596,2 +609,7 @@\n-    \/\/ Use the System class loader\n-    class_loader = Handle(THREAD, SystemDictionary::java_system_loader());\n+    switch (accessing_klass_loader) {\n+      case 0: break; \/\/ class_loader is already null, the boot loader\n+      case 1: class_loader = Handle(THREAD, SystemDictionary::java_platform_loader()); break;\n+      case 2: class_loader = Handle(THREAD, SystemDictionary::java_system_loader()); break;\n+      default:\n+        JVMCI_THROW_MSG_0(InternalError, err_msg(\"Illegal class loader value: %d\", accessing_klass_loader));\n+    }\n@@ -604,1 +622,1 @@\n-      JVMCI_THROW_MSG_NULL(ClassNotFoundException, str);\n+      JVMCI_THROW_MSG_NULL(NoClassDefFoundError, str);\n@@ -3111,1 +3129,1 @@\n-  {CC \"lookupType\",                                   CC \"(\" STRING HS_KLASS2 \"Z)\" HS_RESOLVED_TYPE,                                        FN_PTR(lookupType)},\n+  {CC \"lookupType\",                                   CC \"(\" STRING HS_KLASS2 \"IZ)\" HS_RESOLVED_TYPE,                                       FN_PTR(lookupType)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":23,"deletions":5,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-  do_intx_flag(ContendedPaddingWidth)                                      \\\n+  do_int_flag(ContendedPaddingWidth)                                       \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -436,2 +436,1 @@\n-  int encode(JavaThread* THREAD, jlong buffer, int buffer_size) {\n-    Klass* vmSupport = SystemDictionary::resolve_or_fail(vmSymbols::jdk_internal_vm_VMSupport(), true, THREAD);\n+  bool handle_pending_exception(JavaThread* THREAD, jlong buffer, int buffer_size) {\n@@ -454,0 +453,8 @@\n+      return true;\n+    }\n+    return false;\n+  }\n+\n+  int encode(JavaThread* THREAD, jlong buffer, int buffer_size) {\n+    Klass* vmSupport = SystemDictionary::resolve_or_fail(vmSymbols::jdk_internal_vm_VMSupport(), true, THREAD);\n+    if (handle_pending_exception(THREAD, buffer, buffer_size)) {\n@@ -465,0 +472,3 @@\n+    if (handle_pending_exception(THREAD, buffer, buffer_size)) {\n+      return 0;\n+    }\n@@ -867,1 +877,1 @@\n-DO_THROW(ClassNotFoundException)\n+DO_THROW(NoClassDefFoundError)\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -361,1 +361,1 @@\n-  DO_THROW(ClassNotFoundException)\n+  DO_THROW(NoClassDefFoundError)\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,2 +246,2 @@\n-  start_class(OutOfMemoryError, java_lang_OutOfMemoryError)                                                         \\\n-    jvmci_constructor(OutOfMemoryError, \"(Ljava\/lang\/String;)V\")                                                 \\\n+  start_class(OutOfMemoryError, java_lang_OutOfMemoryError)                                                   \\\n+    jvmci_constructor(OutOfMemoryError, \"(Ljava\/lang\/String;)V\")                                              \\\n@@ -249,2 +249,2 @@\n-  start_class(ClassNotFoundException, java_lang_ClassNotFoundException)                                       \\\n-    jvmci_constructor(ClassNotFoundException, \"(Ljava\/lang\/String;)V\")                                        \\\n+  start_class(NoClassDefFoundError, java_lang_NoClassDefFoundError)                                           \\\n+    jvmci_constructor(NoClassDefFoundError, \"(Ljava\/lang\/String;)V\")                                          \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmciJavaClasses.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -177,1 +177,0 @@\n-  current->set_vm_result(obj);\n@@ -185,1 +184,2 @@\n-        return;\n+        \/\/ Drop the allocation\n+        obj = nullptr;\n@@ -194,0 +194,1 @@\n+  current->set_vm_result(obj);\n@@ -1249,0 +1250,1 @@\n+#ifdef ASSERT\n@@ -1254,0 +1256,1 @@\n+#endif\n@@ -2064,0 +2067,1 @@\n+#ifdef ASSERT\n@@ -2070,0 +2074,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  nonstatic_field(JavaThread,                  _held_monitor_count,                           int64_t)                               \\\n+  nonstatic_field(JavaThread,                  _held_monitor_count,                           intx)                                  \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+  LOG_TAG(heapdump) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"memory\/arena.hpp\"\n@@ -46,3 +47,0 @@\n-\/\/--------------------------------------------------------------------------------------\n-\/\/ ChunkPool implementation\n-\n@@ -52,3 +50,0 @@\n-  Chunk*       _first;        \/\/ first cached Chunk; its first word points to next chunk\n-  const size_t _size;         \/\/ (inner payload) size of the chunks this pool serves\n-\n@@ -56,1 +51,1 @@\n-  static const int _num_pools = 4;\n+  static constexpr int _num_pools = 4;\n@@ -59,2 +54,2 @@\n- public:\n-  ChunkPool(size_t size) : _first(nullptr), _size(size) {}\n+  Chunk*       _first;\n+  const size_t _size;         \/\/ (inner payload) size of the chunks this pool serves\n@@ -62,2 +57,2 @@\n-  \/\/ Allocate a chunk from the pool; returns null if pool is empty.\n-  Chunk* allocate() {\n+  \/\/ Returns null if pool is empty.\n+  Chunk* take_from_pool() {\n@@ -71,3 +66,1 @@\n-\n-  \/\/ Return a chunk to the pool\n-  void free(Chunk* chunk) {\n+  void return_to_pool(Chunk* chunk) {\n@@ -80,1 +73,1 @@\n-  \/\/ Prune the pool\n+  \/\/ Clear this pool of all contained chunks\n@@ -95,7 +88,0 @@\n-  static void clean() {\n-    NativeHeapTrimmer::SuspendMark sm(\"chunk pool cleaner\");\n-    for (int i = 0; i < _num_pools; i++) {\n-      _pools[i].prune();\n-    }\n-  }\n-\n@@ -112,7 +98,2 @@\n-};\n-\n-ChunkPool ChunkPool::_pools[] = { Chunk::size, Chunk::medium_size, Chunk::init_size, Chunk::tiny_size };\n-\n-\/\/--------------------------------------------------------------------------------------\n-\/\/ ChunkPoolCleaner implementation\n-\/\/\n+public:\n+  ChunkPool(size_t size) : _first(nullptr), _size(size) {}\n@@ -120,2 +101,6 @@\n-class ChunkPoolCleaner : public PeriodicTask {\n-  static const int cleaning_interval = 5000; \/\/ cleaning interval in ms\n+  static void clean() {\n+    NativeHeapTrimmer::SuspendMark sm(\"chunk pool cleaner\");\n+    for (int i = 0; i < _num_pools; i++) {\n+      _pools[i].prune();\n+    }\n+  }\n@@ -123,5 +108,3 @@\n- public:\n-   ChunkPoolCleaner() : PeriodicTask(cleaning_interval) {}\n-   void task() {\n-     ChunkPool::clean();\n-   }\n+  \/\/ Returns an initialized and null-terminated Chunk of requested size\n+  static Chunk* allocate_chunk(size_t length, AllocFailType alloc_failmode);\n+  static void deallocate_chunk(Chunk* p);\n@@ -130,4 +113,1 @@\n-\/\/--------------------------------------------------------------------------------------\n-\/\/ Chunk implementation\n-\n-void* Chunk::operator new (size_t sizeofChunk, AllocFailType alloc_failmode, size_t length) throw() {\n+Chunk* ChunkPool::allocate_chunk(size_t length, AllocFailType alloc_failmode) {\n@@ -152,1 +132,0 @@\n-  assert(sizeofChunk == sizeof(Chunk), \"weird request size\");\n@@ -157,0 +136,1 @@\n+  Chunk* chunk = nullptr;\n@@ -158,1 +138,1 @@\n-    Chunk* c = pool->allocate();\n+    Chunk* c = pool->take_from_pool();\n@@ -161,1 +141,1 @@\n-      return c;\n+      chunk = c;\n@@ -164,5 +144,8 @@\n-  \/\/ Either the pool was empty, or this is a non-standard length. Allocate a new Chunk from C-heap.\n-  size_t bytes = ARENA_ALIGN(sizeofChunk) + length;\n-  void* p = os::malloc(bytes, mtChunk, CALLER_PC);\n-  if (p == nullptr && alloc_failmode == AllocFailStrategy::EXIT_OOM) {\n-    vm_exit_out_of_memory(bytes, OOM_MALLOC_ERROR, \"Chunk::new\");\n+  if (chunk == nullptr) {\n+    \/\/ Either the pool was empty, or this is a non-standard length. Allocate a new Chunk from C-heap.\n+    size_t bytes = ARENA_ALIGN(sizeof(Chunk)) + length;\n+    void* p = os::malloc(bytes, mtChunk, CALLER_PC);\n+    if (p == nullptr && alloc_failmode == AllocFailStrategy::EXIT_OOM) {\n+      vm_exit_out_of_memory(bytes, OOM_MALLOC_ERROR, \"Chunk::new\");\n+    }\n+    chunk = (Chunk*)p;\n@@ -170,0 +153,1 @@\n+  ::new(chunk) Chunk(length);\n@@ -171,2 +155,2 @@\n-  assert(is_aligned(p, ARENA_AMALLOC_ALIGNMENT), \"Chunk start address misaligned.\");\n-  return p;\n+  assert(is_aligned(chunk, ARENA_AMALLOC_ALIGNMENT), \"Chunk start address misaligned.\");\n+  return chunk;\n@@ -175,1 +159,1 @@\n-void Chunk::operator delete(void* p) {\n+void ChunkPool::deallocate_chunk(Chunk* c) {\n@@ -177,1 +161,0 @@\n-  Chunk* c = (Chunk*)p;\n@@ -180,1 +163,1 @@\n-    pool->free(c);\n+    pool->return_to_pool(c);\n@@ -187,3 +170,1 @@\n-Chunk::Chunk(size_t length) : _len(length) {\n-  _next = nullptr;         \/\/ Chain on the linked list\n-}\n+ChunkPool ChunkPool::_pools[] = { Chunk::size, Chunk::medium_size, Chunk::init_size, Chunk::tiny_size };\n@@ -191,10 +172,2 @@\n-void Chunk::chop() {\n-  Chunk *k = this;\n-  while( k ) {\n-    Chunk *tmp = k->next();\n-    \/\/ clear out this chunk (to detect allocation bugs)\n-    if (ZapResourceArea) memset(k->bottom(), badResourceValue, k->length());\n-    delete k;                   \/\/ Free chunk (was malloc'd)\n-    k = tmp;\n-  }\n-}\n+class ChunkPoolCleaner : public PeriodicTask {\n+  static const int cleaning_interval = 5000; \/\/ cleaning interval in ms\n@@ -202,4 +175,6 @@\n-void Chunk::next_chop() {\n-  _next->chop();\n-  _next = nullptr;\n-}\n+ public:\n+   ChunkPoolCleaner() : PeriodicTask(cleaning_interval) {}\n+   void task() {\n+     ChunkPool::clean();\n+   }\n+};\n@@ -207,1 +182,1 @@\n-void Chunk::start_chunk_pool_cleaner_task() {\n+void Arena::start_chunk_pool_cleaner_task() {\n@@ -217,1 +192,19 @@\n-\/\/------------------------------Arena------------------------------------------\n+Chunk::Chunk(size_t length) : _len(length) {\n+  _next = nullptr;         \/\/ Chain on the linked list\n+}\n+\n+void Chunk::chop(Chunk* k) {\n+  while (k != nullptr) {\n+    Chunk* tmp = k->next();\n+    \/\/ clear out this chunk (to detect allocation bugs)\n+    if (ZapResourceArea) memset(k->bottom(), badResourceValue, k->length());\n+    ChunkPool::deallocate_chunk(k);\n+    k = tmp;\n+  }\n+}\n+\n+void Chunk::next_chop(Chunk* k) {\n+  assert(k != nullptr && k->_next != nullptr, \"must be non-null\");\n+  Chunk::chop(k->_next);\n+  k->_next = nullptr;\n+}\n@@ -221,1 +214,2 @@\n-  _first = _chunk = new (AllocFailStrategy::EXIT_OOM, init_size) Chunk(init_size);\n+  _chunk = ChunkPool::allocate_chunk(init_size, AllocFailStrategy::EXIT_OOM);\n+  _first = _chunk;\n@@ -229,1 +223,2 @@\n-  _first = _chunk = new (AllocFailStrategy::EXIT_OOM, Chunk::init_size) Chunk(Chunk::init_size);\n+  _chunk = ChunkPool::allocate_chunk(Chunk::init_size, AllocFailStrategy::EXIT_OOM);\n+  _first = _chunk;\n@@ -247,1 +242,1 @@\n-    _first->chop();\n+    Chunk::chop(_first);\n@@ -265,1 +260,1 @@\n-  Chunk *k = _first;\n+  Chunk* k = _first;\n@@ -283,2 +278,2 @@\n-  Chunk *k = _chunk;            \/\/ Get filled-up chunk address\n-  _chunk = new (alloc_failmode, len) Chunk(len);\n+  Chunk* k = _chunk;            \/\/ Get filled-up chunk address\n+  _chunk = ChunkPool::allocate_chunk(len, alloc_failmode);\n@@ -290,2 +285,6 @@\n-  if (k) k->set_next(_chunk);   \/\/ Append new chunk to end of linked list\n-  else _first = _chunk;\n+\n+  if (k != nullptr) {\n+    k->set_next(_chunk);        \/\/ Append new chunk to end of linked list\n+  } else {\n+    _first = _chunk;\n+  }\n@@ -346,1 +345,1 @@\n-  for (Chunk *c = _first; c; c = c->next()) {\n+  for (Chunk* c = _first; c; c = c->next()) {\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":80,"deletions":81,"binary":false,"changes":161,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-\/\/------------------------------Chunk------------------------------------------\n+\n@@ -42,1 +42,1 @@\n-class Chunk: CHeapObj<mtChunk> {\n+class Chunk {\n@@ -47,3 +47,6 @@\n- public:\n-  void* operator new(size_t size, AllocFailType alloc_failmode, size_t length) throw();\n-  void  operator delete(void* p);\n+public:\n+  NONCOPYABLE(Chunk);\n+\n+  void operator delete(void*) = delete;\n+  void* operator new(size_t) = delete;\n+\n@@ -70,2 +73,2 @@\n-  void chop();                  \/\/ Chop this chunk\n-  void next_chop();             \/\/ Chop next chunk\n+  static void chop(Chunk* chunk);                  \/\/ Chop this chunk\n+  static void next_chop(Chunk* chunk);             \/\/ Chop next chunk\n@@ -82,3 +85,0 @@\n-\n-  \/\/ Start the chunk_pool cleaner task\n-  static void start_chunk_pool_cleaner_task();\n@@ -87,1 +87,0 @@\n-\/\/------------------------------Arena------------------------------------------\n@@ -97,3 +96,4 @@\n-  Chunk *_first;                \/\/ First chunk\n-  Chunk *_chunk;                \/\/ current chunk\n-  char *_hwm, *_max;            \/\/ High water mark and max in current chunk\n+  Chunk* _first;                \/\/ First chunk\n+  Chunk* _chunk;                \/\/ current chunk\n+  char* _hwm;                   \/\/ High water mark\n+  char* _max;                   \/\/ and max in current chunk\n@@ -116,0 +116,3 @@\n+  \/\/ Start the chunk_pool cleaner task\n+  static void start_chunk_pool_cleaner_task();\n+\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-      state._chunk->next_chop();\n+      Chunk::next_chop(state._chunk);\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-  if (name()) st->print(\" \" #name \" \");\n+  if (name()) st->print(#name \" \");\n","filename":"src\/hotspot\/share\/oops\/constMethodFlags.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  if (name()) st->print(\" ##name \");\n+  if (name()) st->print(#name \" \");\n@@ -39,1 +39,0 @@\n-  st->cr();\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-  if (name()) st->print(\" \" #name \" \");\n+  if (name()) st->print(#name \" \");\n","filename":"src\/hotspot\/share\/oops\/methodFlags.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  u1 _tos_state;                      \/\/ TOS state\n+  u1 _tos_state;                \/\/ TOS state\n@@ -104,3 +104,5 @@\n-  void set_flags(bool is_final, bool is_volatile) {\n-    u1 new_flags = (static_cast<u1>(is_final) << static_cast<u1>(is_final_shift)) | static_cast<u1>(is_volatile);\n-    _flags = new_flags;\n+  void set_flags(bool is_final_flag, bool is_volatile_flag) {\n+    int new_flags = (is_final_flag << is_final_shift) | static_cast<int>(is_volatile_flag);\n+    _flags = checked_cast<u1>(new_flags);\n+    assert(is_final() == is_final_flag, \"Must be\");\n+    assert(is_volatile() == is_volatile_flag, \"Must be\");\n@@ -119,1 +121,1 @@\n-  void fill_in(InstanceKlass* klass, intx offset, int index, int tos_state, u1 b1, u1 b2) {\n+  void fill_in(InstanceKlass* klass, int offset, u2 index, u1 tos_state, u1 b1, u1 b2) {\n","filename":"src\/hotspot\/share\/oops\/resolvedFieldEntry.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -456,2 +456,3 @@\n-\/\/ create Runtime Predicates above it. They all share the same uncommon trap. The Parse Predicate will follow the\n-\/\/ Runtime Predicates. Together they form a Regular Predicate Block. There are three kinds of Parse Predicates:\n+\/\/ create Regular Predicates (Runtime Predicates with possible Assertion Predicates) above it. Together they form a\n+\/\/ Predicate Block. The Parse Predicate and Regular Predicates share the same uncommon trap.\n+\/\/ There are three kinds of Parse Predicates:\n@@ -472,0 +473,2 @@\n+  Node* uncommon_trap() const;\n+\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -1994,0 +1995,7 @@\n+Node* ParsePredicateNode::uncommon_trap() const {\n+  ParsePredicateUncommonProj* uncommon_proj = proj_out(0)->as_IfFalse();\n+  Node* uct_region_or_call = uncommon_proj->unique_ctrl_out();\n+  assert(uct_region_or_call->is_Region() || uct_region_or_call->is_Call(), \"must be a region or call uct\");\n+  return uct_region_or_call;\n+}\n+\n@@ -2011,0 +2019,1 @@\n+\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n@@ -2813,0 +2814,7 @@\n+\n+#if INCLUDE_JVMTI\n+  if (too_many_traps(Deoptimization::Reason_intrinsic)) {\n+    return false;\n+  }\n+#endif \/\/INCLUDE_JVMTI\n+\n@@ -2823,0 +2831,18 @@\n+#if INCLUDE_JVMTI\n+    \/\/ Don't try to access new allocated obj in the intrinsic.\n+    \/\/ It causes perfomance issues even when jvmti event VmObjectAlloc is disabled.\n+    \/\/ Deoptimize and allocate in interpreter instead.\n+    Node* addr = makecon(TypeRawPtr::make((address) &JvmtiExport::_should_notify_object_alloc));\n+    Node* should_post_vm_object_alloc = make_load(this->control(), addr, TypeInt::INT, T_INT, MemNode::unordered);\n+    Node* chk = _gvn.transform(new CmpINode(should_post_vm_object_alloc, intcon(0)));\n+    Node* tst = _gvn.transform(new BoolNode(chk, BoolTest::eq));\n+    {\n+      BuildCutout unless(this, tst, PROB_MAX);\n+      uncommon_trap(Deoptimization::Reason_intrinsic,\n+                    Deoptimization::Action_make_not_entrant);\n+    }\n+    if (stopped()) {\n+      return true;\n+    }\n+#endif \/\/INCLUDE_JVMTI\n+\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -43,4 +44,4 @@\n- * The general idea of Loop Predication is to hoist a check inside a loop body by inserting a Hoisted Predicate with an\n- * uncommon trap on the entry path to the loop. The old check inside the loop can be eliminated. If the condition of the\n- * Hoisted Predicate fails at runtime, we'll execute the uncommon trap to avoid entering the loop which misses the check.\n- * Loop Predication can currently remove array range checks and loop invariant checks (such as null checks).\n+ * The general idea of Loop Predication is to hoist a check inside a loop body by inserting a Hoisted Check Predicate with\n+ * an uncommon trap on the entry path to the loop. The old check inside the loop can be eliminated. If the condition of\n+ * the Hoisted Check Predicate fails at runtime, we'll execute the uncommon trap to avoid entering the loop which misses\n+ * the check. Loop Predication can currently remove array range checks and loop invariant checks (such as null checks).\n@@ -48,167 +49,3 @@\n- * On top of these predicates added by Loop Predication, there are other kinds of predicates. The following list provides\n- * a complete description of all predicates used in the C2 compiler:\n- *\n- *\n- * There are different kinds of predicates throughout the code. We differentiate between the following predicates:\n- *\n- * - Regular Predicate: This term is used to refer to a Parse Predicate or a Runtime Predicate and can be used to\n- *                      distinguish from any Assertion Predicate.\n- * - Parse Predicate: Added during parsing to capture the current JVM state. This predicate represents a \"placeholder\"\n- *                    above which more Runtime Predicates can be created later after parsing.\n- *\n- *                    There are initially three Parse Predicates for each loop:\n- *                    - Loop Parse Predicate:             The Parse Predicate added for Loop Predicates.\n- *                    - Profiled Loop Parse Predicate:    The Parse Predicate added for Profiled Loop Predicates.\n- *                    - Loop Limit Check Parse Predicate: The Parse Predicate added for a Loop Limit Check Predicate.\n- * - Runtime Predicate: This term is used to refer to a Hoisted Predicate (either a Loop Predicate or a Profiled Loop\n- *                      Predicate) or a Loop Limit Check Predicate. These predicates will be checked at runtime while the\n- *                      Parse and Assertion Predicates are always removed before code generation (except for Initialized\n- *                      Assertion Predicates which are kept in debug builds while being removed in product builds).\n- *     - Hoisted Predicate: Either a Loop Predicate or a Profiled Loop Predicate that was created during Loop Predication\n- *                          to hoist a check out of a loop. Each Hoisted Predicate is accompanied by additional\n- *                          Assertion Predicates.\n- *         - Loop Predicate:     A predicate that can either hoist a loop-invariant check out of a loop or a range check\n- *                               of the form \"a[i*scale + offset]\", where scale and offset are loop-invariant, out of a\n- *                               counted loop. A check must be executed in each loop iteration to hoist it. Otherwise, no\n- *                               Loop Predicate can be created. This predicate is created during Loop Predication and is\n- *                               inserted above the Loop Parse Predicate.\n- *         - Profiled Loop:      This predicate is very similar to a Loop Predicate but the hoisted check does not need\n- *           Predicate           to be executed in each loop iteration. By using profiling information, only checks with\n- *                               a high execution frequency are chosen to be replaced by a Profiled Loop Predicate. This\n- *                               predicate is created during Loop Predication and is inserted above the Profiled Loop\n- *                               Parse Predicate.\n- *     - Loop Limit Check:   This predicate is created when transforming a loop to a counted loop to protect against\n- *       Predicate           the case when adding the stride to the induction variable would cause an overflow which\n- *                           will not satisfy the loop limit exit condition. This overflow is unexpected for further\n- *                           counted loop optimizations and could lead to wrong results. Therefore, when this predicate\n- *                           fails at runtime, we must trap and recompile the method without turning the loop into a\n- *                           a counted loop to avoid these overflow problems.\n- *                           The predicate does not replace an actual check inside the loop. This predicate can only\n- *                           be added once above the Loop Limit Check Parse Predicate for a loop.\n- * - Assertion Predicate: An always true predicate which will never fail (its range is already covered by an earlier\n- *                        Hoisted Predicate or the main-loop entry guard) but is required in order to fold away a dead\n- *                        sub loop inside which some data could be proven to be dead (by the type system) and replaced\n- *                        by top. Without such Assertion Predicates, we could find that type ranges in Cast and ConvX2Y\n- *                        data nodes become impossible and are replaced by top. This is an indicator that the sub loop\n- *                        is never executed and must be dead. But there is no way for C2 to prove that the sub loop is\n- *                        actually dead. Assertion Predicates come to the rescue to fold such seemingly dead sub loops\n- *                        away to avoid a broken graph. Assertion Predicates are left in the graph as a sanity checks in\n- *                        debug builds (they must never fail at runtime) while they are being removed in product builds.\n- *                        We use special Opaque4 nodes to block some optimizations and replace the Assertion Predicates\n- *                        later in product builds.\n- *\n- *                        There are two kinds of Assertion Predicates:\n- *                        - Template Assertion Predicate:    A template for an Assertion Predicate that uses OpaqueLoop*\n- *                                                           nodes as placeholders for the init and stride value of a loop.\n- *                                                           This predicate does not represent an actual check, yet, and\n- *                                                           just serves as a template to create an Initialized Assertion\n- *                                                           Predicate for a (sub) loop.\n- *                        - Initialized Assertion Predicate: An Assertion Predicate that represents an actual check for a\n- *                                                           (sub) loop that was initialized by cloning a Template\n- *                                                           Assertion Predicate. The check is always true and is covered\n- *                                                           by an earlier check (a Hoisted Predicate or the main-loop\n- *                                                           entry guard).\n- *\n- *                        Assertion Predicates are required when removing a range check from a loop. These are inserted\n- *                        either at Loop Predication or at Range Check Elimination:\n- *                        - Loop Predication:        A range check inside a loop is replaced by a Hoisted Predicate before\n- *                                                   the loop. We add two additional Template Assertion Predicates from\n- *                                                   which we can later create Initialized Assertion Predicates. One\n- *                                                   would have been enough if the number of array accesses inside a sub\n- *                                                   loop does not change. But when unrolling the sub loop, we are\n- *                                                   doubling the number of array accesses - we need to cover them all.\n- *                                                   To do that, we only need to create an Initialized Assertion Predicate\n- *                                                   for the first, initial value and for the last value:\n- *                                                   Let a[i] be an array access in the original, not-yet unrolled loop\n- *                                                   with stride 1. When unrolling this loop, we double the stride\n- *                                                   (i.e. stride 2) and have now two accesses a[i] and a[i+1]. We need\n- *                                                   checks for both. When further unrolling this loop, we only need to\n- *                                                   keep the checks on the first and last access (e.g. a[i] and a[i+3]\n- *                                                   on the next unrolling step as they cover the checks in the middle\n- *                                                   for a[i+1] and a[i+2]).\n- *                                                   Therefore, we just need to cover:\n- *                                                   - Initial value: a[init]\n- *                                                   - Last value: a[init + new stride - original stride]\n- *                                                   (We could still only use one Template Assertion Predicate to create\n- *                                                   both Initialized Assertion Predicates from - might be worth doing\n- *                                                   at some point).\n- *                                                   When later splitting a loop (pre\/main\/post, peeling, unrolling),\n- *                                                   we create two Initialized Assertion Predicates from the Template\n- *                                                   Assertion Predicates by replacing the OpaqueLoop* nodes by actual\n- *                                                   values. Initially (before unrolling), both Assertion Predicates are\n- *                                                   equal. The Initialized Assertion Predicates are always true because\n- *                                                   their range is covered by a corresponding Hoisted Predicate.\n- *                        - Range Check Elimination: A range check is removed from the main-loop by changing the pre\n- *                                                   and main-loop iterations. We add two additional Template Assertion\n- *                                                   Predicates (see explanation in section above) and one Initialized\n- *                                                   Assertion Predicate for the just removed range check. When later\n- *                                                   unrolling the main-loop, we create two Initialized Assertion\n- *                                                   Predicates from the Template Assertion Predicates by replacing the\n- *                                                   OpaqueLoop* nodes by actual values for the unrolled loop.\n- *                                                   The Initialized Assertion Predicates are always true: They are true\n- *                                                   when entering the main-loop (because we adjusted the pre-loop exit\n- *                                                   condition), when executing the last iteration of the main-loop\n- *                                                   (because we adjusted the main-loop exit condition), and during all\n- *                                                   other iterations of the main-loop in-between by implication.\n- *                                                   Note that Range Check Elimination could remove additional range\n- *                                                   checks which we were not possible to remove with Loop Predication\n- *                                                   before (for example, because no Parse Predicates were available\n- *                                                   before the loop to create Hoisted Predicates with).\n- *\n- *\n- * In order to group predicates and refer to them throughout the code, we introduce the following additional terms:\n- * - Regular Predicate Block: A Regular Predicate Block groups all Runtime Predicates in a Runtime Predicate Block\n- *                            together with their dedicated Parse Predicate from which they were created (all predicates\n- *                            share the same uncommon trap). The Runtime Predicate Block could be empty (i.e. no\n- *                            Runtime Predicates created) and the Parse Predicate could be missing (after removing Parse\n- *                            Predicates). There are three such Regular Predicate Blocks:\n- *                            - Loop Predicate Block\n- *                            - Profiled Loop Predicate Block\n- *                            - Loop Limit Check Predicate Block\n- * - Runtime Predicate Block: A block containing all Runtime Predicates that share the same uncommon trap (i.e. belonging\n- *                            to a single Parse Predicate which is not included in this block). This block could be empty\n- *                            if there were no Runtime Predicates created with the Parse Predicate below this block.\n- *                            For the time being: We also count Assertion Predicates to this block but that will be\n- *                            changed with the redesign of Assertion Predicates where we remove them from this block\n- *                            (JDK-8288981).\n- *\n- * Initially, before applying any loop-splitting optimizations, we find the following structure after Loop Predication\n- * (predicates inside square brackets [] do not need to exist if there are no checks to hoist):\n- *\n- *   [Loop Hoisted Predicate 1 + two Template Assertion Predicates]                 \\ Runtime       \\\n- *   [Loop Hoisted Predicate 2 + two Template Assertion Predicates]                 | Predicate     |\n- *   ...                                                                            | Block         | Loop Predicate Block\n- *   [Loop Hoisted Predicate n + two Template Assertion Predicates]                 \/               |\n- * Loop Parse Predicate                                                                             \/\n- *\n- *   [Profiled Loop Hoisted Predicate 1 + two Template Assertion Predicates]       \\ Runtime       \\\n- *   [Profiled Loop Hoisted Predicate 2 + two Template Assertion Predicates]       | Predicate     | Profiled Loop\n- *   ...                                                                           | Block         | Predicate Block\n- *   [Profiled Loop Hoisted Predicate m + two Template Assertion Predicates]       \/               |\n- * Profiled Loop Parse Predicate                                                                   \/\n- *                                                                                 \\ Runtime\n- *   [Loop Limit Check Predicate] (at most one)                                    \/ Predicate     \\ Loop Limit Check\n- * Loop Limit Check Parse Predicate                                                  Block         \/ Predicate Block\n- * Loop Head\n- *\n- * As an example, let's look at how the predicate structure looks for the main-loop after creating pre\/main\/post loops\n- * and applying Range Check Elimination (the order is insignificant):\n- *\n- * Main Loop entry (zero-trip) guard\n- *   [For Loop Predicate 1: Two Template + two Initialized Assertion Predicates]\n- *   [For Loop Predicate 2: Two Template + two Initialized Assertion Predicates]\n- *   ...\n- *   [For Loop Predicate n: Two Template + two Initialized Assertion Predicates]\n- *\n- *   [For Profiled Loop Predicate 1: Two Template + two Initialized Assertion Predicates]\n- *   [For Profiled Loop Predicate 2: Two Template + two Initialized Assertion Predicates]\n- *   ...\n- *   [For Profiled Loop Predicate m: Two Template + two Initialized Assertion Predicates]\n- *\n- *   (after unrolling, we have two Initialized Assertion Predicates for the Assertion Predicates of Range Check Elimination)\n- *   [For Range Check Elimination Check 1: Two Templates + one Initialized Assertion Predicate]\n- *   [For Range Check Elimination Check 2: Two Templates + one Initialized Assertion Predicate]\n- *   ...\n- *   [For Range Check Elimination Check k: Two Templates + one Initialized Assertion Predicate]\n- * Main Loop Head\n- *\/\n+ * On top of these predicates added by Loop Predication, there are other kinds of predicates. A detailed description\n+ * about all predicates can be found in predicates.hpp.\n+*\/\n@@ -267,2 +104,1 @@\n-                                                        const int opcode, const bool rewire_uncommon_proj_phi_inputs,\n-                                                        const bool if_cont_is_true_proj) {\n+                                                        const int opcode, const bool rewire_uncommon_proj_phi_inputs) {\n@@ -324,9 +160,2 @@\n-  IfProjNode* if_cont;\n-  IfProjNode* if_uct;\n-  if (if_cont_is_true_proj) {\n-    if_cont = new IfTrueNode(new_iff);\n-    if_uct  = new IfFalseNode(new_iff);\n-  } else {\n-    if_uct  = new IfTrueNode(new_iff);\n-    if_cont = new IfFalseNode(new_iff);\n-  }\n+  IfProjNode* if_cont = new IfTrueNode(new_iff);\n+  IfProjNode* if_uct  = new IfFalseNode(new_iff);\n@@ -584,2 +413,1 @@\n-  IfProjNode* if_proj = create_new_if_for_predicate(output_proj, nullptr, reason, iff->Opcode(),\n-                                               false, predicate->is_IfTrue());\n+  IfProjNode* if_proj = create_new_if_for_predicate(output_proj, nullptr, reason, iff->Opcode(), false);\n@@ -592,1 +420,2 @@\n-\/\/ Clone Parse Predicates to cloned loops when unswitching a loop.\n+\/\/ Clone the old Parse Predicates and Assertion Predicates before the unswitch If to the unswitched loops after the\n+\/\/ unswitch If.\n@@ -598,7 +427,5 @@\n-  ParsePredicates parse_predicates(entry);\n-  ParsePredicateSuccessProj* loop_predicate_proj = parse_predicates.loop_predicate_proj();\n-  if (loop_predicate_proj != nullptr) {\n-    \/\/ Clone Parse Predicate and Template Assertion Predicates of the Loop Predicate Block.\n-    iffast_pred = clone_parse_predicate_to_unswitched_loop(loop_predicate_proj, iffast_pred,\n-                                                           Deoptimization::Reason_predicate, false);\n-    check_cloned_parse_predicate_for_unswitching(iffast_pred, true);\n+  const Predicates predicates(entry);\n+  clone_loop_predication_predicates_to_unswitched_loop(loop, old_new, predicates.loop_predicate_block(),\n+                                                       Deoptimization::Reason_predicate, iffast_pred, ifslow_pred);\n+  clone_loop_predication_predicates_to_unswitched_loop(loop, old_new, predicates.profiled_loop_predicate_block(),\n+                                                       Deoptimization::Reason_profile_predicate, iffast_pred, ifslow_pred);\n@@ -606,6 +433,6 @@\n-    ifslow_pred = clone_parse_predicate_to_unswitched_loop(loop_predicate_proj, ifslow_pred,\n-                                                           Deoptimization::Reason_predicate, true);\n-    check_cloned_parse_predicate_for_unswitching(ifslow_pred, false);\n-\n-    clone_assertion_predicates_to_unswitched_loop(loop, old_new, Deoptimization::Reason_predicate, loop_predicate_proj,\n-                                                  iffast_pred, ifslow_pred);\n+  const PredicateBlock* loop_limit_check_predicate_block = predicates.loop_limit_check_predicate_block();\n+  if (loop_limit_check_predicate_block->has_parse_predicate() && !head->is_CountedLoop()) {\n+    \/\/ Don't clone the Loop Limit Check Parse Predicate if we already have a counted loop (a Loop Limit Check Predicate\n+    \/\/ is only created when converting a LoopNode to a CountedLoopNode).\n+    clone_parse_predicate_to_unswitched_loops(loop_limit_check_predicate_block, Deoptimization::Reason_loop_limit_check,\n+                                              iffast_pred, ifslow_pred);\n@@ -613,0 +440,1 @@\n+}\n@@ -614,13 +442,8 @@\n-  ParsePredicateSuccessProj* profiled_loop_predicate_proj = parse_predicates.profiled_loop_predicate_proj();\n-  if (profiled_loop_predicate_proj != nullptr) {\n-    \/\/ Clone Parse Predicate and Template Assertion Predicates of the Profiled Loop Predicate Block.\n-    iffast_pred = clone_parse_predicate_to_unswitched_loop(profiled_loop_predicate_proj, iffast_pred,\n-                                                           Deoptimization::Reason_profile_predicate, false);\n-    check_cloned_parse_predicate_for_unswitching(iffast_pred, true);\n-\n-    ifslow_pred = clone_parse_predicate_to_unswitched_loop(profiled_loop_predicate_proj, ifslow_pred,\n-                                                           Deoptimization::Reason_profile_predicate, true);\n-    check_cloned_parse_predicate_for_unswitching(ifslow_pred, false);\n-\n-    clone_assertion_predicates_to_unswitched_loop(loop, old_new, Deoptimization::Reason_profile_predicate,\n-                                                  profiled_loop_predicate_proj, iffast_pred, ifslow_pred);\n+\/\/ Clone the Parse Predicate and Template Assertion Predicates of a Loop Predication related Predicate Block.\n+void PhaseIdealLoop::clone_loop_predication_predicates_to_unswitched_loop(IdealLoopTree* loop, const Node_List& old_new,\n+                                                                          const PredicateBlock* predicate_block,\n+                                                                          Deoptimization::DeoptReason reason,\n+                                                                          IfProjNode*& iffast_pred,\n+                                                                          IfProjNode*& ifslow_pred) {\n+  if (predicate_block->is_non_empty()) {\n+    clone_parse_predicate_to_unswitched_loops(predicate_block, reason, iffast_pred, ifslow_pred);\n@@ -628,0 +451,2 @@\n+    clone_assertion_predicates_to_unswitched_loop(loop, old_new, reason, predicate_block->parse_predicate_success_proj(),\n+                                                  iffast_pred, ifslow_pred);\n@@ -629,0 +454,1 @@\n+}\n@@ -630,7 +456,6 @@\n-  ParsePredicateSuccessProj* loop_limit_check_predicate_proj = parse_predicates.loop_limit_check_predicate_proj();\n-  if (loop_limit_check_predicate_proj != nullptr && !head->is_CountedLoop()) {\n-    \/\/ Don't clone the Loop Limit Check Parse Predicate if we already have a counted loop (a Loop Limit Check Predicate\n-    \/\/ is only created when converting a LoopNode to a CountedLoopNode).\n-    iffast_pred = clone_parse_predicate_to_unswitched_loop(loop_limit_check_predicate_proj, iffast_pred,\n-                                                           Deoptimization::Reason_loop_limit_check, false);\n-    check_cloned_parse_predicate_for_unswitching(iffast_pred, true);\n+void PhaseIdealLoop::clone_parse_predicate_to_unswitched_loops(const PredicateBlock* predicate_block,\n+                                                               Deoptimization::DeoptReason reason,\n+                                                               IfProjNode*& iffast_pred, IfProjNode*& ifslow_pred) {\n+  ParsePredicateSuccessProj* parse_predicate_proj = predicate_block->parse_predicate_success_proj();\n+  iffast_pred = clone_parse_predicate_to_unswitched_loop(parse_predicate_proj, iffast_pred, reason, false);\n+  check_cloned_parse_predicate_for_unswitching(iffast_pred, true);\n@@ -638,4 +463,2 @@\n-    ifslow_pred = clone_parse_predicate_to_unswitched_loop(loop_limit_check_predicate_proj, ifslow_pred,\n-                                                           Deoptimization::Reason_loop_limit_check, true);\n-    check_cloned_parse_predicate_for_unswitching(ifslow_pred, false);\n-  }\n+  ifslow_pred = clone_parse_predicate_to_unswitched_loop(parse_predicate_proj, ifslow_pred, reason, true);\n+  check_cloned_parse_predicate_for_unswitching(ifslow_pred, false);\n@@ -864,3 +687,3 @@\n-    \/\/ If we create a Hoisted Range Check Predicate for this wrong pattern, it could succeed at runtime (i.e. true\n-    \/\/ for the value of \"scale*iv + offset\" in the first loop iteration and true for the value of \"scale*iv + offset\"\n-    \/\/ in the last loop iteration) while the check to be hoisted could fail in other loop iterations.\n+    \/\/ If we create a Range Check Predicate for this wrong pattern, it could succeed at runtime (i.e. true for the\n+    \/\/ value of \"scale*iv + offset\" in the first loop iteration and true for the value of \"scale*iv + offset\" in the\n+    \/\/ last loop iteration) while the check to be hoisted could fail in other loop iterations.\n@@ -874,1 +697,1 @@\n-    \/\/ Hoisted Range Check Predicate is always true:\n+    \/\/ Range Check Predicate is always true:\n@@ -1111,1 +934,1 @@\n-bool PhaseIdealLoop::loop_predication_should_follow_branches(IdealLoopTree* loop, IfProjNode* predicate_proj, float& loop_trip_cnt) {\n+bool PhaseIdealLoop::loop_predication_should_follow_branches(IdealLoopTree* loop, float& loop_trip_cnt) {\n@@ -1116,4 +939,0 @@\n-  if (predicate_proj == nullptr) {\n-    return false;\n-  }\n-\n@@ -1485,3 +1304,3 @@\n-\/\/ Each newly created Hoisted Predicate is accompanied by two Template Assertion Predicates. Later, we initialize them\n-\/\/ by making a copy of them when splitting a loop into sub loops. The Assertion Predicates ensure that dead sub loops\n-\/\/ are removed properly.\n+\/\/ Each newly created Hoisted Check Predicate is accompanied by two Template Assertion Predicates. Later, we initialize\n+\/\/ them by making a copy of them when splitting a loop into sub loops. The Assertion Predicates ensure that dead sub\n+\/\/ loops are removed properly.\n@@ -1532,1 +1351,2 @@\n-\/\/ Insert Hoisted Predicates for null checks and range checks and additional Template Assertion Predicates for range checks.\n+\/\/ Insert Hoisted Check Predicates for null checks and range checks and additional Template Assertion Predicates for\n+\/\/ range checks.\n@@ -1563,20 +1383,3 @@\n-  ParsePredicates parse_predicates(entry);\n-\n-  bool can_create_loop_predicates = true;\n-  \/\/ We cannot add Loop Predicates if:\n-  \/\/ - Already added Profiled Loop Predicates (Loop Predicates and Profiled Loop Predicates can be dependent\n-  \/\/   through a data node, and thus we should only add new Profiled Loop Predicates which are below Loop Predicates\n-  \/\/   in the graph).\n-  \/\/ - There are currently no Profiled Loop Predicates, but we have a data node with a control dependency on the Loop\n-  \/\/   Parse Predicate (could happen, for example, if we've removed an earlier created Profiled Loop Predicate with\n-  \/\/   dominated_by()). We should not create a Loop Predicate for a check that is dependent on this data node because\n-  \/\/   the Loop Predicate would end up above the data node with its dependency on the Loop Parse Predicate below. This\n-  \/\/   would become unschedulable. However, we can still hoist the check as Profiled Loop Predicate which would end up\n-  \/\/   below the Loop Parse Predicate.\n-  if (Predicates::has_profiled_loop_predicates(parse_predicates)\n-      || (parse_predicates.loop_predicate_proj() != nullptr && parse_predicates.loop_predicate_proj()->outcnt() != 1)) {\n-    can_create_loop_predicates = false;\n-  }\n-  ParsePredicateSuccessProj* loop_predicate_proj = parse_predicates.loop_predicate_proj();\n-  ParsePredicateSuccessProj* profiled_loop_predicate_proj = parse_predicates.profiled_loop_predicate_proj();\n-\n+  const Predicates predicates(entry);\n+  const PredicateBlock* loop_predicate_block = predicates.loop_predicate_block();\n+  const PredicateBlock* profiled_loop_predicate_block = predicates.profiled_loop_predicate_block();\n@@ -1584,1 +1387,2 @@\n-  bool follow_branches = loop_predication_should_follow_branches(loop, profiled_loop_predicate_proj, loop_trip_cnt);\n+  bool follow_branches = profiled_loop_predicate_block->has_parse_predicate() &&\n+                         loop_predication_should_follow_branches(loop, loop_trip_cnt);\n@@ -1587,1 +1391,1 @@\n-  if (loop_predicate_proj == nullptr && !follow_branches) {\n+  if (!loop_predicate_block->has_parse_predicate() && !follow_branches) {\n@@ -1590,1 +1394,1 @@\n-      tty->print(\"missing predicate:\");\n+      tty->print(\"Missing Parse Predicates:\");\n@@ -1628,1 +1432,1 @@\n-  if (can_create_loop_predicates) {\n+  if (can_create_loop_predicates(profiled_loop_predicate_block)) {\n@@ -1657,2 +1461,3 @@\n-      if (loop_predicate_proj != nullptr) {\n-        hoisted = loop_predication_impl_helper(loop, if_proj, loop_predicate_proj, cl, zero, invar,\n+      if (loop_predicate_block->has_parse_predicate()) {\n+        ParsePredicateSuccessProj* loop_parse_predicate_proj = loop_predicate_block->parse_predicate_success_proj();\n+        hoisted = loop_predication_impl_helper(loop, if_proj, loop_parse_predicate_proj, cl, zero, invar,\n@@ -1665,1 +1470,1 @@\n-    assert(profiled_loop_predicate_proj != nullptr, \"sanity check\");\n+    assert(profiled_loop_predicate_block->has_parse_predicate(), \"sanity check\");\n@@ -1668,2 +1473,1 @@\n-    \/\/ Some projections were skipped by regular predicates because of\n-    \/\/ an early loop exit. Try them with profile data.\n+    \/\/ Some projections were skipped due to an early loop exit. Try them with profile data.\n@@ -1675,2 +1479,4 @@\n-        hoisted = loop_predication_impl_helper(loop, if_proj->as_IfProj(), profiled_loop_predicate_proj, cl, zero, invar,\n-                                               Deoptimization::Reason_profile_predicate) | hoisted;\n+        ParsePredicateSuccessProj* profiled_loop_parse_predicate_proj =\n+            profiled_loop_predicate_block->parse_predicate_success_proj();\n+        hoisted = loop_predication_impl_helper(loop, if_proj->as_IfProj(), profiled_loop_parse_predicate_proj,\n+                                               cl, zero, invar, Deoptimization::Reason_profile_predicate) | hoisted;\n@@ -1691,1 +1497,4 @@\n-      hoisted = loop_predication_impl_helper(loop, if_proj, profiled_loop_predicate_proj, cl, zero, invar, Deoptimization::Reason_profile_predicate) | hoisted;\n+      ParsePredicateSuccessProj* profiled_loop_parse_predicate_proj =\n+          profiled_loop_predicate_block->parse_predicate_success_proj();\n+      hoisted = loop_predication_impl_helper(loop, if_proj, profiled_loop_parse_predicate_proj, cl, zero,\n+                                             invar, Deoptimization::Reason_profile_predicate) | hoisted;\n@@ -1709,0 +1518,21 @@\n+\/\/ We cannot add Loop Predicates if:\n+\/\/ (1) Already added Profiled Loop Predicates (Loop Predicates and Profiled Loop Predicates can be dependent\n+\/\/     through a data node, and thus we should only add new Profiled Loop Predicates which are below Loop Predicates\n+\/\/     in the graph).\n+\/\/ (2) There are currently no Profiled Loop Predicates, but we have a data node with a control dependency on the Loop\n+\/\/     Parse Predicate (could happen, for example, if we've removed an earlier created Profiled Loop Predicate with\n+\/\/     dominated_by()). We should not create a Loop Predicate for a check that is dependent on this data node because\n+\/\/     the Loop Predicate would end up above the data node with its dependency on the Loop Parse Predicate below. This\n+\/\/     would become unschedulable. However, we can still hoist the check as Profiled Loop Predicate which would end up\n+\/\/     below the Loop Parse Predicate.\n+bool PhaseIdealLoop::can_create_loop_predicates(const PredicateBlock* profiled_loop_predicate_block) const {\n+  bool has_profiled_loop_predicate_block = profiled_loop_predicate_block != nullptr;\n+  bool can_create_loop_predicates = true;\n+  if (has_profiled_loop_predicate_block\n+      && (profiled_loop_predicate_block->has_runtime_predicates() \/\/ (1)\n+          || profiled_loop_predicate_block->entry()->outcnt() != 1)) { \/\/ (2)\n+    can_create_loop_predicates = false;\n+  }\n+  return can_create_loop_predicates;\n+}\n+\n@@ -1729,143 +1559,0 @@\n-\n-\/\/ Skip over all predicates (all Regular Predicate Blocks) starting at the Parse Predicate projection 'node'. Return the\n-\/\/ first node that is not a predicate If node anymore (i.e. entry into the first predicate If on top) or 'node' if 'node'\n-\/\/ is not a Parse Predicate projection.\n-Node* Predicates::skip_all_predicates(Node* node) {\n-  ParsePredicates parse_predicates(node);\n-  if (parse_predicates.has_any()) {\n-    return skip_all_predicates(parse_predicates);\n-  } else {\n-    return node;\n-  }\n-}\n-\n-\/\/ Skip over all Runtime Predicates belonging to the given Parse Predicates. Return the first node that is not a predicate\n-\/\/ If node anymore (i.e. entry into the first predicate If on top).\n-Node* Predicates::skip_all_predicates(ParsePredicates& parse_predicates) {\n-  assert(parse_predicates.has_any(), \"must have at least one Parse Predicate\");\n-  return skip_predicates_in_block(parse_predicates.get_top_predicate_proj());\n-}\n-\n-\/\/ Skip over all predicates in a Regular Predicate Block starting at the Parse Predicate projection\n-\/\/ 'parse_predicate_success_proj'. Return the first node not belonging this block anymore (i.e. entry\n-\/\/ into this Regular Predicate Block).\n-Node* Predicates::skip_predicates_in_block(ParsePredicateSuccessProj* parse_predicate_success_proj) {\n-  IfProjNode* prev;\n-  IfProjNode* next = parse_predicate_success_proj;\n-  do {\n-    prev = next;\n-    next = next_predicate_proj_in_block(next);\n-  } while (next != nullptr);\n-  assert(prev->in(0)->is_If(), \"must be predicate If\");\n-  return prev->in(0)->in(0);\n-}\n-\n-\/\/ Find next Runtime Predicate projection in a Regular Predicate Block or return null if there is none.\n-IfProjNode* Predicates::next_predicate_proj_in_block(IfProjNode* proj) {\n-  IfNode* iff = proj->in(0)->as_If();\n-  ProjNode* uncommon_proj = iff->proj_out(1 - proj->_con);\n-  Node* rgn = uncommon_proj->unique_ctrl_out();\n-  assert(rgn->is_Region() || rgn->is_Call(), \"must be a region or call uct\");\n-  Node* next = iff->in(0);\n-  if (next != nullptr && next->is_Proj() && next->in(0)->is_If()) {\n-    uncommon_proj = next->in(0)->as_If()->proj_out(1 - next->as_Proj()->_con);\n-    if (uncommon_proj->unique_ctrl_out() == rgn) {\n-      \/\/ Same Runtime Predicate Block.\n-      return next->as_IfProj();\n-    }\n-  }\n-  return nullptr;\n-}\n-\n-\/\/ Is there at least one Profiled Loop Predicate?\n-bool Predicates::has_profiled_loop_predicates(ParsePredicates& parse_predicates) {\n-  ParsePredicateSuccessProj* profiled_loop_predicate = parse_predicates.profiled_loop_predicate_proj();\n-  if (profiled_loop_predicate == nullptr) {\n-    return false;\n-  }\n-  return Predicates::next_predicate_proj_in_block(profiled_loop_predicate) != nullptr;\n-}\n-\n-\/\/ Given a node 'starting_proj', check if it is a Parse Predicate success projection.\n-\/\/ If so, find all Parse Predicates above the loop.\n-ParsePredicates::ParsePredicates(Node* starting_proj) : _top_predicate_proj(nullptr), _starting_proj(nullptr) {\n-  if (starting_proj == nullptr || !starting_proj->is_IfTrue()) {\n-    return; \/\/ Not a predicate.\n-  }\n-  _starting_proj = starting_proj->as_IfTrue();\n-  find_parse_predicate_projections();\n-}\n-\n-void ParsePredicates::find_parse_predicate_projections() {\n-  Node* maybe_parse_predicate_proj = _starting_proj;\n-  for (int i = 0; i < 3; i++) { \/\/ At most 3 Parse Predicates for a loop\n-    if (!is_success_proj(maybe_parse_predicate_proj)) {\n-      break;\n-    }\n-    ParsePredicateSuccessProj* parse_predicate_proj = maybe_parse_predicate_proj->as_IfTrue();\n-    if (!assign_predicate_proj(parse_predicate_proj)) {\n-      \/\/ Found a Parse Predicate of another (already removed) loop.\n-      break;\n-    }\n-    _top_predicate_proj = parse_predicate_proj;\n-    maybe_parse_predicate_proj = Predicates::skip_predicates_in_block(parse_predicate_proj);\n-  }\n-}\n-\n-\/\/ Is 'node' a success (non-UCT) projection of a Parse Predicate?\n-bool ParsePredicates::is_success_proj(Node* node) {\n-  if (node == nullptr || !node->is_Proj()) {\n-    return false;\n-  }\n-  ParsePredicateNode* parse_predicate = get_parse_predicate_or_null(node);\n-  if (parse_predicate == nullptr) {\n-    return false;\n-  }\n-  return !is_uct_proj(node, parse_predicate->deopt_reason());\n-}\n-\n-\/\/ Is 'node' a UCT projection of a Parse Predicate of kind 'kind'?\n-bool ParsePredicates::is_uct_proj(Node* node, Deoptimization::DeoptReason deopt_reason) {\n-  return node->as_Proj()->is_uncommon_trap_proj(deopt_reason);\n-}\n-\n-\/\/ Check the parent of `parse_predicate_proj` is a ParsePredicateNode. If so return it. Otherwise, return null.\n-ParsePredicateNode* ParsePredicates::get_parse_predicate_or_null(Node* parse_predicate_proj) {\n-  return parse_predicate_proj->in(0)->isa_ParsePredicate();\n-}\n-\n-\/\/ Initialize the Parse Predicate projection field that matches the kind of the parent of `parse_predicate_proj`.\n-\/\/ Only initialize if Parse Predicate projection itself or any of the Parse Predicate projections coming further up\n-\/\/ in the graph are not already initialized (this would be a sign of repeated Parse Predicates which are not cleaned up,\n-\/\/ yet).\n-bool ParsePredicates::assign_predicate_proj(ParsePredicateSuccessProj* parse_predicate_proj) {\n-  ParsePredicateNode* parse_predicate = get_parse_predicate_or_null(parse_predicate_proj);\n-  assert(parse_predicate != nullptr, \"must exist\");\n-  Deoptimization::DeoptReason deopt_reason = parse_predicate->deopt_reason();\n-  switch (deopt_reason) {\n-    case Deoptimization::DeoptReason::Reason_predicate:\n-      if (_loop_predicate_proj != nullptr) {\n-        return false;\n-      }\n-      _loop_predicate_proj = parse_predicate_proj;\n-      break;\n-    case Deoptimization::DeoptReason::Reason_profile_predicate:\n-      if (_profiled_loop_predicate_proj != nullptr ||\n-          _loop_predicate_proj != nullptr) {\n-        return false;\n-      }\n-      _profiled_loop_predicate_proj = parse_predicate_proj;\n-      break;\n-    case Deoptimization::DeoptReason::Reason_loop_limit_check:\n-      if (_loop_limit_check_predicate_proj != nullptr ||\n-          _loop_predicate_proj != nullptr ||\n-          _profiled_loop_predicate_proj != nullptr) {\n-        return false;\n-      }\n-      _loop_limit_check_predicate_proj = parse_predicate_proj;\n-      break;\n-    default:\n-      fatal(\"invalid case\");\n-  }\n-  return true;\n-}\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":97,"deletions":410,"binary":false,"changes":507,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -781,2 +782,2 @@\n-    ParsePredicates parse_predicates(new_head->in(LoopNode::EntryControl));\n-    initialize_assertion_predicates_for_peeled_loop(parse_predicates.loop_predicate_proj(),\n+    const Predicates predicates(new_head->in(LoopNode::EntryControl));\n+    initialize_assertion_predicates_for_peeled_loop(predicates.loop_predicate_block(),\n@@ -786,1 +787,1 @@\n-    initialize_assertion_predicates_for_peeled_loop(parse_predicates.profiled_loop_predicate_proj(),\n+    initialize_assertion_predicates_for_peeled_loop(predicates.profiled_loop_predicate_block(),\n@@ -1310,3 +1311,4 @@\n-void PhaseIdealLoop::copy_assertion_predicates_to_main_loop_helper(Node* predicate, Node* init, Node* stride,\n-                                                                   IdealLoopTree* outer_loop, LoopNode* outer_main_head,\n-                                                                   const uint dd_main_head, const uint idx_before_pre_post,\n+void PhaseIdealLoop::copy_assertion_predicates_to_main_loop_helper(const PredicateBlock* predicate_block, Node* init,\n+                                                                   Node* stride, IdealLoopTree* outer_loop,\n+                                                                   LoopNode* outer_main_head, const uint dd_main_head,\n+                                                                   const uint idx_before_pre_post,\n@@ -1317,1 +1319,1 @@\n-  if (predicate != nullptr) {\n+  if (predicate_block->has_parse_predicate()) {\n@@ -1322,2 +1324,3 @@\n-    IfNode* iff = predicate->in(0)->as_If();\n-    ProjNode* uncommon_proj = iff->proj_out(1 - predicate->as_Proj()->_con);\n+    Node* predicate_proj = predicate_block->parse_predicate_success_proj();\n+    IfNode* iff = predicate_proj->in(0)->as_If();\n+    ProjNode* uncommon_proj = iff->proj_out(1 - predicate_proj->as_Proj()->_con);\n@@ -1326,2 +1329,1 @@\n-    assert(iff->in(1)->in(1)->Opcode() == Op_Opaque1, \"unexpected predicate shape\");\n-    predicate = iff->in(0);\n+    predicate_proj = iff->in(0);\n@@ -1335,3 +1337,3 @@\n-    while (predicate != nullptr && predicate->is_Proj() && predicate->in(0)->is_If()) {\n-      iff = predicate->in(0)->as_If();\n-      uncommon_proj = iff->proj_out(1 - predicate->as_Proj()->_con);\n+    while (predicate_proj != nullptr && predicate_proj->is_Proj() && predicate_proj->in(0)->is_If()) {\n+      iff = predicate_proj->in(0)->as_If();\n+      uncommon_proj = iff->proj_out(1 - predicate_proj->as_Proj()->_con);\n@@ -1345,1 +1347,1 @@\n-        prev_proj = clone_assertion_predicate_and_initialize(iff, opaque_init, nullptr, predicate, uncommon_proj,\n+        prev_proj = clone_assertion_predicate_and_initialize(iff, opaque_init, nullptr, predicate_proj, uncommon_proj,\n@@ -1349,1 +1351,1 @@\n-        prev_proj = clone_assertion_predicate_and_initialize(iff, init, stride, predicate, uncommon_proj,\n+        prev_proj = clone_assertion_predicate_and_initialize(iff, init, stride, predicate_proj, uncommon_proj,\n@@ -1355,2 +1357,2 @@\n-        for (DUIterator i = predicate->outs(); predicate->has_out(i); i++) {\n-          Node* loop_node = predicate->out(i);\n+        for (DUIterator i = predicate_proj->outs(); predicate_proj->has_out(i); i++) {\n+          Node* loop_node = predicate_proj->out(i);\n@@ -1378,1 +1380,1 @@\n-      predicate = predicate->in(0)->in(0);\n+      predicate_proj = predicate_proj->in(0)->in(0);\n@@ -1594,2 +1596,2 @@\n-    ParsePredicates parse_predicates(entry);\n-    copy_assertion_predicates_to_main_loop_helper(parse_predicates.loop_predicate_proj(), init, stride, outer_loop,\n+    const Predicates predicates(entry);\n+    copy_assertion_predicates_to_main_loop_helper(predicates.loop_predicate_block(), init, stride, outer_loop,\n@@ -1599,1 +1601,1 @@\n-    copy_assertion_predicates_to_main_loop_helper(parse_predicates.profiled_loop_predicate_proj(), init, stride,\n+    copy_assertion_predicates_to_main_loop_helper(predicates.profiled_loop_predicate_block(), init, stride,\n@@ -2068,1 +2070,2 @@\n-void PhaseIdealLoop::initialize_assertion_predicates_for_peeled_loop(IfProjNode* predicate_proj, LoopNode* outer_loop_head,\n+void PhaseIdealLoop::initialize_assertion_predicates_for_peeled_loop(const PredicateBlock* predicate_block,\n+                                                                     LoopNode* outer_loop_head,\n@@ -2073,1 +2076,1 @@\n-  if (predicate_proj == nullptr) {\n+  if (!predicate_block->has_runtime_predicates()) {\n@@ -2079,3 +2082,3 @@\n-  predicate_proj = Predicates::next_predicate_proj_in_block(predicate_proj);\n-  while (predicate_proj != nullptr) {\n-    IfNode* iff = predicate_proj->in(0)->as_If();\n+  Node* next_regular_predicate_proj = predicate_block->skip_parse_predicate();\n+  while (next_regular_predicate_proj->is_IfProj()) {\n+    IfNode* iff = next_regular_predicate_proj->in(0)->as_If();\n@@ -2084,2 +2087,2 @@\n-      ProjNode* uncommon_proj = iff->proj_out(1 - predicate_proj->as_Proj()->_con);\n-      input_proj = clone_assertion_predicate_and_initialize(iff, init, stride, predicate_proj, uncommon_proj, control,\n+      ProjNode* uncommon_proj = iff->proj_out(1 - next_regular_predicate_proj->as_Proj()->_con);\n+      input_proj = clone_assertion_predicate_and_initialize(iff, init, stride, next_regular_predicate_proj, uncommon_proj, control,\n@@ -2090,2 +2093,2 @@\n-      for (DUIterator i = predicate_proj->outs(); predicate_proj->has_out(i); i++) {\n-        Node* dependent = predicate_proj->out(i);\n+      for (DUIterator i = next_regular_predicate_proj->outs(); next_regular_predicate_proj->has_out(i); i++) {\n+        Node* dependent = next_regular_predicate_proj->out(i);\n@@ -2105,1 +2108,1 @@\n-    predicate_proj = Predicates::next_predicate_proj_in_block(predicate_proj);\n+    next_regular_predicate_proj = iff->in(0);\n@@ -2862,1 +2865,1 @@\n-  Node *ctrl = cl->skip_predicates();\n+  Node *ctrl = cl->skip_assertion_predicates_with_halt();\n@@ -3226,1 +3229,1 @@\n-  Node* ctrl = main_loop->skip_predicates();\n+  Node* ctrl = main_loop->skip_assertion_predicates_with_halt();\n@@ -3265,1 +3268,1 @@\n-  Node* main_iff = main_head->skip_predicates()->in(0);\n+  Node* main_iff = main_head->skip_assertion_predicates_with_halt()->in(0);\n@@ -3336,1 +3339,2 @@\n-    Node* in_ctrl = Predicates::skip_all_predicates(cl->skip_predicates());\n+    Predicates predicates(cl->skip_strip_mined()->in(LoopNode::EntryControl));\n+    Node* in_ctrl = predicates.entry();\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":40,"deletions":36,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -120,10 +121,3 @@\n-  LoopNode *head = loop->_head->as_Loop();\n-  Node* entry = head->skip_strip_mined()->in(LoopNode::EntryControl);\n-  if (ParsePredicates::is_success_proj(entry)) {\n-    assert(entry->is_IfProj(), \"sanity - must be ifProj since there is at least one predicate\");\n-    if (entry->outcnt() > 1) {\n-      \/\/ Bailout if there are predicates from which there are additional control dependencies (i.e. from loop\n-      \/\/ entry 'entry') to previously partially peeled statements since this case is not handled and can lead\n-      \/\/ to a wrong execution. Remove this bailout, once this is fixed.\n-      return;\n-    }\n+  LoopNode* head = loop->_head->as_Loop();\n+  if (has_control_dependencies_from_predicates(head)) {\n+    return;\n@@ -131,0 +125,1 @@\n+\n@@ -149,1 +144,1 @@\n-  ProjNode* proj_false = invar_iff->proj_out(0);\n+  verify_fast_loop(head, proj_true);\n@@ -151,16 +146,0 @@\n-#ifdef ASSERT\n-  assert(proj_true->is_IfTrue(), \"must be true projection\");\n-  entry = head->skip_strip_mined()->in(LoopNode::EntryControl);\n-  ParsePredicates parse_predicates(entry);\n-  if (!parse_predicates.has_any()) {\n-    \/\/ No Parse Predicate.\n-    Node* uniqc = proj_true->unique_ctrl_out();\n-    assert((uniqc == head && !head->is_strip_mined()) || (uniqc == head->in(LoopNode::EntryControl)\n-           && head->is_strip_mined()), \"must hold by construction if no predicates\");\n-  } else {\n-    \/\/ There is at least one Parse Predicate. When skipping all predicates\/Regular Predicate Blocks, we should end up\n-    \/\/ at 'proj_true'.\n-    assert(proj_true == Predicates::skip_all_predicates(parse_predicates),\n-           \"must hold by construction if at least one Parse Predicate\");\n-  }\n-#endif\n@@ -205,0 +184,1 @@\n+  ProjNode* proj_false = invar_iff->proj_out(0);\n@@ -226,0 +206,15 @@\n+bool PhaseIdealLoop::has_control_dependencies_from_predicates(LoopNode* head) const {\n+  Node* entry = head->skip_strip_mined()->in(LoopNode::EntryControl);\n+  Predicates predicates(entry);\n+  if (predicates.has_any()) {\n+    assert(entry->is_IfProj(), \"sanity - must be ifProj since there is at least one predicate\");\n+    if (entry->outcnt() > 1) {\n+      \/\/ Bailout if there are predicates from which there are additional control dependencies (i.e. from loop\n+      \/\/ entry 'entry') to previously partially peeled statements since this case is not handled and can lead\n+      \/\/ to a wrong execution. Remove this bailout, once this is fixed.\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -274,0 +269,18 @@\n+#ifdef ASSERT\n+void PhaseIdealLoop::verify_fast_loop(LoopNode* head, const ProjNode* proj_true) const {\n+  assert(proj_true->is_IfTrue(), \"must be true projection\");\n+  Node* entry = head->skip_strip_mined()->in(LoopNode::EntryControl);\n+  Predicates predicates(entry);\n+  if (!predicates.has_any()) {\n+    \/\/ No Parse Predicate.\n+    Node* uniqc = proj_true->unique_ctrl_out();\n+    assert((uniqc == head && !head->is_strip_mined()) || (uniqc == head->in(LoopNode::EntryControl)\n+                                                          && head->is_strip_mined()), \"must hold by construction if no predicates\");\n+  } else {\n+    \/\/ There is at least one Parse Predicate. When skipping all predicates\/predicate blocks, we should end up\n+    \/\/ at 'proj_true'.\n+    assert(proj_true == predicates.entry(), \"must hold by construction if at least one Parse Predicate\");\n+  }\n+}\n+#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/share\/opto\/loopUnswitch.cpp","additions":40,"deletions":27,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+#include \"opto\/predicates.hpp\"\n@@ -346,0 +347,1 @@\n+  assert(loop_limit_check_parse_proj->in(0)->is_ParsePredicate(), \"must be parse predicate\");\n@@ -1806,1 +1808,3 @@\n-    if (!ParsePredicates::is_loop_limit_check_predicate_proj(init_control)) {\n+    const Predicates predicates(init_control);\n+    const PredicateBlock* loop_limit_check_predicate_block = predicates.loop_limit_check_predicate_block();\n+    if (!loop_limit_check_predicate_block->has_parse_predicate()) {\n@@ -1810,1 +1814,1 @@\n-        tty->print(\"missing loop limit check:\");\n+        tty->print(\"Missing Loop Limit Check Parse Predicate:\");\n@@ -1818,4 +1822,2 @@\n-    ParsePredicateSuccessProj* loop_limit_check_parse_predicate_proj = init_control->as_IfTrue();\n-    ParsePredicateNode* parse_predicate = loop_limit_check_parse_predicate_proj->in(0)->as_ParsePredicate();\n-\n-    if (!is_dominator(get_ctrl(limit), parse_predicate->in(0))) {\n+    ParsePredicateNode* loop_limit_check_parse_predicate = loop_limit_check_predicate_block->parse_predicate();\n+    if (!is_dominator(get_ctrl(limit), loop_limit_check_parse_predicate->in(0))) {\n@@ -1836,1 +1838,1 @@\n-    insert_loop_limit_check_predicate(loop_limit_check_parse_predicate_proj, cmp_limit, bol);\n+    insert_loop_limit_check_predicate(init_control->as_IfTrue(), cmp_limit, bol);\n@@ -1849,1 +1851,3 @@\n-      if (!ParsePredicates::is_loop_limit_check_predicate_proj(init_control)) {\n+      const Predicates predicates(init_control);\n+      const PredicateBlock* loop_limit_check_predicate_block = predicates.loop_limit_check_predicate_block();\n+      if (!loop_limit_check_predicate_block->has_parse_predicate()) {\n@@ -1853,1 +1857,1 @@\n-          tty->print(\"missing loop limit check:\");\n+          tty->print(\"Missing Loop Limit Check Parse Predicate:\");\n@@ -1860,2 +1864,0 @@\n-      ParsePredicateSuccessProj* loop_limit_check_parse_predicate_proj = init_control->as_IfTrue();\n-      ParsePredicateNode* parse_predicate = init_control->in(0)->as_ParsePredicate();\n@@ -1863,2 +1865,4 @@\n-      if (!is_dominator(get_ctrl(limit), parse_predicate->in(0)) ||\n-          !is_dominator(get_ctrl(init_trip), parse_predicate->in(0))) {\n+      ParsePredicateNode* loop_limit_check_parse_predicate = loop_limit_check_predicate_block->parse_predicate();\n+      Node* parse_predicate_entry = loop_limit_check_parse_predicate->in(0);\n+      if (!is_dominator(get_ctrl(limit), parse_predicate_entry) ||\n+          !is_dominator(get_ctrl(init_trip), parse_predicate_entry)) {\n@@ -1879,1 +1883,1 @@\n-      insert_loop_limit_check_predicate(loop_limit_check_parse_predicate_proj, cmp_limit, bol);\n+      insert_loop_limit_check_predicate(init_control->as_IfTrue(), cmp_limit, bol);\n@@ -2573,29 +2577,1 @@\n-Node* CountedLoopNode::skip_predicates_from_entry(Node* ctrl) {\n-    while (ctrl != nullptr && ctrl->is_Proj() && ctrl->in(0) != nullptr && ctrl->in(0)->is_If() &&\n-           !is_zero_trip_guard_if(ctrl->in(0)->as_If()) &&\n-           (ctrl->in(0)->as_If()->proj_out_or_null(1-ctrl->as_Proj()->_con) == nullptr ||\n-             (ctrl->in(0)->as_If()->proj_out(1-ctrl->as_Proj()->_con)->outcnt() == 1 &&\n-              ctrl->in(0)->as_If()->proj_out(1-ctrl->as_Proj()->_con)->unique_out()->Opcode() == Op_Halt))) {\n-      ctrl = ctrl->in(0)->in(0);\n-    }\n-\n-    return ctrl;\n-  }\n-\n-bool CountedLoopNode::is_zero_trip_guard_if(const IfNode* iff) {\n-  if (iff->in(1) == nullptr || !iff->in(1)->is_Bool()) {\n-    return false;\n-  }\n-  if (iff->in(1)->in(1) == nullptr || iff->in(1)->in(1)->Opcode() != Op_CmpI) {\n-    return false;\n-  }\n-  if (iff->in(1)->in(1)->in(1) != nullptr && iff->in(1)->in(1)->in(1)->Opcode() == Op_OpaqueZeroTripGuard) {\n-    return true;\n-  }\n-  if (iff->in(1)->in(1)->in(2) != nullptr && iff->in(1)->in(1)->in(2)->Opcode() == Op_OpaqueZeroTripGuard) {\n-    return true;\n-  }\n-  return false;\n-}\n-\n-Node* CountedLoopNode::skip_predicates() {\n+Node* CountedLoopNode::skip_assertion_predicates_with_halt() {\n@@ -2607,1 +2583,2 @@\n-    return skip_predicates_from_entry(ctrl);\n+    AssertionPredicatesWithHalt assertion_predicates(ctrl);\n+    return assertion_predicates.entry();\n@@ -3981,2 +3958,2 @@\n-  ParsePredicates parse_predicates(entry);\n-  if (parse_predicates.loop_limit_check_predicate_proj() != nullptr) {\n+  const Predicates predicates(entry);\n+  if (predicates.loop_limit_check_predicate_block()->is_non_empty()) {\n@@ -3985,1 +3962,1 @@\n-  if (UseProfiledLoopPredicate && parse_predicates.profiled_loop_predicate_proj() != nullptr) {\n+  if (UseProfiledLoopPredicate && predicates.profiled_loop_predicate_block()->is_non_empty()) {\n@@ -3988,1 +3965,1 @@\n-  if (UseLoopPredicate && parse_predicates.loop_predicate_proj() != nullptr) {\n+  if (UseLoopPredicate && predicates.loop_predicate_block()->is_non_empty()) {\n@@ -4095,5 +4072,6 @@\n-    ParsePredicates parse_predicates(entry);\n-    ProjNode* predicate_proj = parse_predicates.loop_limit_check_predicate_proj();\n-    if (predicate_proj != nullptr) { \/\/ right pattern that can be used by loop predication\n-      assert(predicate_proj->in(0)->in(1)->in(1)->Opcode() == Op_Opaque1, \"must be\");\n-      useful_predicates.push(predicate_proj->in(0)->in(1)->in(1)); \/\/ good one\n+    const Predicates predicates(entry);\n+    const PredicateBlock* loop_limit_check_predicate_block = predicates.loop_limit_check_predicate_block();\n+    if (loop_limit_check_predicate_block->has_parse_predicate()) { \/\/ right pattern that can be used by loop predication\n+      IfProjNode* parse_predicate_proj = loop_limit_check_predicate_block->parse_predicate_success_proj();\n+      assert(parse_predicate_proj->in(0)->in(1)->in(1)->Opcode() == Op_Opaque1, \"must be\");\n+      useful_predicates.push(parse_predicate_proj->in(0)->in(1)->in(1)); \/\/ good one\n@@ -4102,4 +4080,5 @@\n-      predicate_proj = parse_predicates.profiled_loop_predicate_proj();\n-      if (predicate_proj != nullptr) { \/\/ right pattern that can be used by loop predication\n-        useful_predicates.push(predicate_proj->in(0)->in(1)->in(1)); \/\/ good one\n-        get_assertion_predicates(predicate_proj, useful_predicates, true);\n+      const PredicateBlock* profiled_loop_predicate_block = predicates.profiled_loop_predicate_block();\n+      if (profiled_loop_predicate_block->has_parse_predicate()) { \/\/ right pattern that can be used by loop predication\n+        IfProjNode* parse_predicate_proj = profiled_loop_predicate_block->parse_predicate_success_proj();\n+        useful_predicates.push(parse_predicate_proj->in(0)->in(1)->in(1)); \/\/ good one\n+        get_assertion_predicates(parse_predicate_proj, useful_predicates, true);\n@@ -4110,4 +4089,5 @@\n-      predicate_proj = parse_predicates.loop_predicate_proj();\n-      if (predicate_proj != nullptr) { \/\/ right pattern that can be used by loop predication\n-        useful_predicates.push(predicate_proj->in(0)->in(1)->in(1)); \/\/ good one\n-        get_assertion_predicates(predicate_proj, useful_predicates, true);\n+      const PredicateBlock* loop_predicate_block = predicates.loop_predicate_block();\n+      if (loop_predicate_block->has_parse_predicate()) { \/\/ right pattern that can be used by loop predication\n+        IfProjNode* parse_predicate_proj = loop_predicate_block->parse_predicate_success_proj();\n+        useful_predicates.push(parse_predicate_proj->in(0)->in(1)->in(1)); \/\/ good one\n+        get_assertion_predicates(parse_predicate_proj, useful_predicates, true);\n@@ -5686,1 +5666,1 @@\n-  Node* ctrl = skip_predicates();\n+  Node* ctrl = skip_assertion_predicates_with_halt();\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":42,"deletions":62,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-class ParsePredicates;\n+class PredicateBlock;\n@@ -325,5 +325,1 @@\n-  \/\/ If this is a main loop in a pre\/main\/post loop nest, walk over\n-  \/\/ the predicates that were inserted by\n-  \/\/ duplicate_predicates()\/add_range_check_predicate()\n-  static Node* skip_predicates_from_entry(Node* ctrl);\n-  Node* skip_predicates();\n+  Node* skip_assertion_predicates_with_halt();\n@@ -340,2 +336,0 @@\n-\n-  static bool is_zero_trip_guard_if(const IfNode* iff);\n@@ -938,5 +932,5 @@\n-  void copy_assertion_predicates_to_main_loop_helper(Node* predicate, Node* init, Node* stride, IdealLoopTree* outer_loop,\n-                                                     LoopNode* outer_main_head, uint dd_main_head,\n-                                                     uint idx_before_pre_post, uint idx_after_post_before_pre,\n-                                                     Node* zero_trip_guard_proj_main, Node* zero_trip_guard_proj_post,\n-                                                     const Node_List &old_new);\n+  void copy_assertion_predicates_to_main_loop_helper(const PredicateBlock* predicate_block, Node* init, Node* stride,\n+                                                     IdealLoopTree* outer_loop, LoopNode* outer_main_head,\n+                                                     uint dd_main_head, uint idx_before_pre_post,\n+                                                     uint idx_after_post_before_pre, Node* zero_trip_guard_proj_main,\n+                                                     Node* zero_trip_guard_proj_post, const Node_List &old_new);\n@@ -959,3 +953,3 @@\n-  void initialize_assertion_predicates_for_peeled_loop(IfProjNode* predicate_proj, LoopNode* outer_loop_head,\n-                                                       const int dd_outer_loop_head, Node* init, Node* stride,\n-                                                       IdealLoopTree* outer_loop, const uint idx_before_clone,\n+  void initialize_assertion_predicates_for_peeled_loop(const PredicateBlock* predicate_block, LoopNode* outer_loop_head,\n+                                                       int dd_outer_loop_head, Node* init, Node* stride,\n+                                                       IdealLoopTree* outer_loop, uint idx_before_clone,\n@@ -1339,2 +1333,1 @@\n-                                          int opcode, bool rewire_uncommon_proj_phi_inputs = false,\n-                                          bool if_cont_is_true_proj = true);\n+                                          int opcode, bool rewire_uncommon_proj_phi_inputs = false);\n@@ -1361,0 +1354,2 @@\n+\n+ private:\n@@ -1364,1 +1359,2 @@\n-  bool loop_predication_should_follow_branches(IdealLoopTree* loop, IfProjNode* predicate_proj, float& loop_trip_cnt);\n+  bool can_create_loop_predicates(const PredicateBlock* profiled_loop_predicate_block) const;\n+  bool loop_predication_should_follow_branches(IdealLoopTree* loop, float& loop_trip_cnt);\n@@ -1379,0 +1375,3 @@\n+  bool has_control_dependencies_from_predicates(LoopNode* head) const;\n+  void verify_fast_loop(LoopNode* head, const ProjNode* proj_true) const NOT_DEBUG_RETURN;\n+ public:\n@@ -1618,0 +1617,6 @@\n+  void clone_loop_predication_predicates_to_unswitched_loop(IdealLoopTree* loop, const Node_List& old_new,\n+                                                            const PredicateBlock* predicate_block,\n+                                                            Deoptimization::DeoptReason reason, IfProjNode*& iffast_pred,\n+                                                            IfProjNode*& ifslow_pred);\n+  void clone_parse_predicate_to_unswitched_loops(const PredicateBlock* predicate_block, Deoptimization::DeoptReason reason,\n+                                                 IfProjNode*& iffast_pred, IfProjNode*& ifslow_pred);\n@@ -1898,59 +1903,0 @@\n-\/\/ Utility class to work on predicates.\n-class Predicates {\n- public:\n-  static Node* skip_all_predicates(Node* node);\n-  static Node* skip_all_predicates(ParsePredicates& parse_predicates);\n-  static Node* skip_predicates_in_block(ParsePredicateSuccessProj* parse_predicate_success_proj);\n-  static IfProjNode* next_predicate_proj_in_block(IfProjNode* proj);\n-  static bool has_profiled_loop_predicates(ParsePredicates& parse_predicates);\n-};\n-\n-\/\/ Class representing the Parse Predicates that are added during parsing with ParsePredicateNodes.\n-class ParsePredicates {\n- private:\n-  ParsePredicateSuccessProj* _loop_predicate_proj = nullptr;\n-  ParsePredicateSuccessProj* _profiled_loop_predicate_proj = nullptr;\n-  ParsePredicateSuccessProj* _loop_limit_check_predicate_proj = nullptr;\n-  \/\/ The success projection of the Parse Predicate that comes first when starting from root.\n-  ParsePredicateSuccessProj* _top_predicate_proj;\n-  ParsePredicateSuccessProj* _starting_proj;\n-\n-  void find_parse_predicate_projections();\n-  static bool is_uct_proj(Node* node, Deoptimization::DeoptReason deopt_reason);\n-  static ParsePredicateNode* get_parse_predicate_or_null(Node* proj);\n-  bool assign_predicate_proj(ParsePredicateSuccessProj* parse_predicate_proj);\n- public:\n-  ParsePredicates(Node* starting_proj);\n-\n-  \/\/ Success projection of Loop Parse Predicate.\n-  ParsePredicateSuccessProj* loop_predicate_proj() {\n-    return _loop_predicate_proj;\n-  }\n-\n-  \/\/ Success proj of Profiled Loop Parse Predicate.\n-  ParsePredicateSuccessProj* profiled_loop_predicate_proj() {\n-    return _profiled_loop_predicate_proj;\n-  }\n-\n-  \/\/ Success proj of Loop Limit Check Parse Predicate.\n-  ParsePredicateSuccessProj* loop_limit_check_predicate_proj() {\n-    return _loop_limit_check_predicate_proj;\n-  }\n-\n-  \/\/ Return the success projection of the Parse Predicate that comes first when starting from root.\n-  ParsePredicateSuccessProj* get_top_predicate_proj() {\n-    return _top_predicate_proj;\n-  }\n-\n-  static bool is_success_proj(Node* node);\n-\n-  \/\/ Are there any Parse Predicates?\n-  bool has_any() const {\n-    return _top_predicate_proj != nullptr;\n-  }\n-\n-  static bool is_loop_limit_check_predicate_proj(Node* node) {\n-    ParsePredicateNode* parse_predicate = get_parse_predicate_or_null(node);\n-    return parse_predicate != nullptr && parse_predicate->deopt_reason() == Deoptimization::DeoptReason::Reason_loop_limit_check;\n-  }\n-};\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":24,"deletions":78,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/callnode.hpp\"\n+#include \"opto\/predicates.hpp\"\n+\n+\/\/ Walk over all Initialized Assertion Predicates and return the entry into the first Initialized Assertion Predicate\n+\/\/ (i.e. not belonging to an Initialized Assertion Predicate anymore)\n+Node* AssertionPredicatesWithHalt::find_entry(Node* start_proj) {\n+  Node* entry = start_proj;\n+  while (is_assertion_predicate_success_proj(entry)) {\n+    entry = entry->in(0)->in(0);\n+  }\n+  return entry;\n+}\n+\n+bool AssertionPredicatesWithHalt::is_assertion_predicate_success_proj(const Node* predicate_proj) {\n+  if (predicate_proj == nullptr || !predicate_proj->is_IfProj() || !predicate_proj->in(0)->is_If()) {\n+    return false;\n+  }\n+  return has_opaque4(predicate_proj) && has_halt(predicate_proj);\n+}\n+\n+\/\/ Check if the If node of `predicate_proj` has an Opaque4 node as input.\n+bool AssertionPredicatesWithHalt::has_opaque4(const Node* predicate_proj) {\n+  IfNode* iff = predicate_proj->in(0)->as_If();\n+  return iff->in(1)->Opcode() == Op_Opaque4;\n+}\n+\n+\/\/ Check if the other projection (UCT projection) of `success_proj` has a Halt node as output.\n+bool AssertionPredicatesWithHalt::has_halt(const Node* success_proj) {\n+  ProjNode* other_proj = success_proj->as_IfProj()->other_if_proj();\n+  return other_proj->outcnt() == 1 && other_proj->unique_out()->Opcode() == Op_Halt;\n+}\n+\n+\/\/ Returns the Parse Predicate node if the provided node is a Parse Predicate success proj. Otherwise, return null.\n+ParsePredicateNode* ParsePredicate::init_parse_predicate(Node* parse_predicate_proj,\n+                                                         Deoptimization::DeoptReason deopt_reason) {\n+  assert(parse_predicate_proj != nullptr, \"must not be null\");\n+  if (parse_predicate_proj->is_IfTrue() && parse_predicate_proj->in(0)->is_ParsePredicate()) {\n+    ParsePredicateNode* parse_predicate_node = parse_predicate_proj->in(0)->as_ParsePredicate();\n+    if (parse_predicate_node->deopt_reason() == deopt_reason) {\n+      return parse_predicate_node;\n+    }\n+  }\n+  return nullptr;\n+}\n+\n+Deoptimization::DeoptReason RuntimePredicate::uncommon_trap_reason(IfProjNode* if_proj) {\n+    CallStaticJavaNode* uct_call = if_proj->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+    if (uct_call == nullptr) {\n+      return Deoptimization::Reason_none;\n+    }\n+    return Deoptimization::trap_request_reason(uct_call->uncommon_trap_request());\n+}\n+\n+bool RuntimePredicate::is_success_proj(Node* node, Deoptimization::DeoptReason deopt_reason) {\n+  if (node->is_IfProj()) {\n+    return deopt_reason == uncommon_trap_reason(node->as_IfProj());\n+  } else {\n+    return false;\n+  }\n+}\n+\n+\/\/ Walk over all Regular Predicates of this block (if any) and return the first node not belonging to the block\n+\/\/ anymore (i.e. entry to the first Regular Predicate in this block if any or `regular_predicate_proj` otherwise).\n+Node* PredicateBlock::skip_regular_predicates(Node* regular_predicate_proj, Deoptimization::DeoptReason deopt_reason) {\n+  Node* entry = regular_predicate_proj;\n+  while (RuntimePredicate::is_success_proj(entry, deopt_reason)) {\n+    assert(entry->in(0)->as_If(), \"must be If node\");\n+    entry = entry->in(0)->in(0);\n+  }\n+  return entry;\n+}\n","filename":"src\/hotspot\/share\/opto\/predicates.cpp","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"},{"patch":"@@ -0,0 +1,358 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_OPTO_PREDICATES_HPP\n+#define SHARE_OPTO_PREDICATES_HPP\n+\n+#include \"opto\/cfgnode.hpp\"\n+\n+\/*\n+ * There are different kinds of predicates throughout the code. We differentiate between the following predicates:\n+ *\n+ * - Regular Predicate: This term is used to refer to a Runtime Predicate or an Assertion Predicate and can be used to\n+ *                      distinguish from any Parse Predicate which is not a real predicate but rather a placeholder.\n+ * - Parse Predicate: Added during parsing to capture the current JVM state. This predicate represents a \"placeholder\"\n+ *                    above which Regular Predicates can be created later after parsing.\n+ *\n+ *                    There are initially three Parse Predicates for each loop:\n+ *                    - Loop Parse Predicate:             The Parse Predicate added for Loop Predicates.\n+ *                    - Profiled Loop Parse Predicate:    The Parse Predicate added for Profiled Loop Predicates.\n+ *                    - Loop Limit Check Parse Predicate: The Parse Predicate added for a Loop Limit Check Predicate.\n+ * - Runtime Predicate: This term is used to refer to a Hoisted Check Predicate (either a Loop Predicate or a Profiled\n+ *                      Loop Predicate) or a Loop Limit Check Predicate. These predicates will be checked at runtime while\n+ *                      the Parse and Assertion Predicates are always removed before code generation (except for\n+ *                      Initialized Assertion Predicates which are kept in debug builds while being removed in product\n+ *                      builds).\n+ *     - Hoisted Check Predicate: Either a Loop Predicate or a Profiled Loop Predicate that is created during Loop\n+ *                                Predication to hoist a check out of a loop.\n+ *         - Loop Predicate:     This predicate is created to hoist a loop-invariant check or a range check of the\n+ *                               form \"a[i*scale + offset]\", where scale and offset are loop-invariant, out of a\n+ *                               counted loop. The hoisted check must be executed in each loop iteration. This predicate\n+ *                               is created during Loop Predication and is inserted above the Loop Parse Predicate. Each\n+ *                               predicate for a range check is accompanied by additional Assertion Predicates (see below).\n+ *         - Profiled Loop:      This predicate is very similar to a Loop Predicate but the check to be hoisted does not\n+ *           Predicate           need to be executed in each loop iteration. By using profiling information, only checks\n+ *                               with a high execution frequency are chosen to be replaced by a Profiled Loop Predicate.\n+ *                               This predicate is created during Loop Predication and is inserted above the Profiled\n+ *                               Loop Parse Predicate.\n+ *     - Loop Limit Check:   This predicate is created when transforming a loop to a counted loop to protect against\n+ *       Predicate           the case when adding the stride to the induction variable would cause an overflow which\n+ *                           will not satisfy the loop limit exit condition. This overflow is unexpected for further\n+ *                           counted loop optimizations and could lead to wrong results. Therefore, when this predicate\n+ *                           fails at runtime, we must trap and recompile the method without turning the loop into a\n+ *                           counted loop to avoid these overflow problems.\n+ *                           The predicate does not replace an actual check inside the loop. This predicate can only\n+ *                           be added once above the Loop Limit Check Parse Predicate for a loop.\n+ * - Assertion Predicate: An always true predicate which will never fail (its range is already covered by an earlier\n+ *                        Hoisted Check Predicate or the main-loop entry guard) but is required in order to fold away a\n+ *                        dead sub loop in which some data could be proven to be dead (by the type system) and replaced\n+ *                        by top. Without such Assertion Predicates, we could find that type ranges in Cast and ConvX2Y\n+ *                        data nodes become impossible and are replaced by top. This is an indicator that the sub loop\n+ *                        is never executed and must be dead. But there is no way for C2 to prove that the sub loop is\n+ *                        actually dead. Assertion Predicates come to the rescue to fold such seemingly dead sub loops\n+ *                        away to avoid a broken graph. Assertion Predicates are left in the graph as a sanity checks in\n+ *                        debug builds (they must never fail at runtime) while they are being removed in product builds.\n+ *                        We use special Opaque4 nodes to block some optimizations and replace the Assertion Predicates\n+ *                        later in product builds.\n+ *\n+ *                        There are two kinds of Assertion Predicates:\n+ *                        - Template Assertion Predicate:    A template for an Assertion Predicate that uses OpaqueLoop*\n+ *                                                           nodes as placeholders for the init and stride value of a loop.\n+ *                                                           This predicate does not represent an actual check, yet, and\n+ *                                                           just serves as a template to create an Initialized Assertion\n+ *                                                           Predicate for a (sub) loop.\n+ *                        - Initialized Assertion Predicate: An Assertion Predicate that represents an actual check for a\n+ *                                                           (sub) loop that was initialized by cloning a Template\n+ *                                                           Assertion Predicate. The check is always true and is covered\n+ *                                                           by an earlier check (a Hoisted Check Predicate or the\n+ *                                                           main-loop entry guard).\n+ *\n+ *                        Assertion Predicates are required when removing a range check from a loop. These are inserted\n+ *                        either at Loop Predication or at Range Check Elimination:\n+ *                        - Loop Predication:        A range check inside a loop is replaced by a Hoisted Check Predicate\n+ *                                                   before the loop. We add two additional Template Assertion Predicates\n+ *                                                   from which we can later create Initialized Assertion Predicates. One\n+ *                                                   would have been enough if the number of array accesses inside a sub\n+ *                                                   loop does not change. But when unrolling the sub loop, we are\n+ *                                                   doubling the number of array accesses - we need to cover them all.\n+ *                                                   To do that, we only need to create an Initialized Assertion Predicate\n+ *                                                   for the first, initial value and for the last value:\n+ *                                                   Let a[i] be an array access in the original, not-yet unrolled loop\n+ *                                                   with stride 1. When unrolling this loop, we double the stride\n+ *                                                   (i.e. stride 2) and have now two accesses a[i] and a[i+1]. We need\n+ *                                                   checks for both. When further unrolling this loop, we only need to\n+ *                                                   keep the checks on the first and last access (e.g. a[i] and a[i+3]\n+ *                                                   on the next unrolling step as they cover the checks in the middle\n+ *                                                   for a[i+1] and a[i+2]).\n+ *                                                   Therefore, we just need to cover:\n+ *                                                   - Initial value: a[init]\n+ *                                                   - Last value: a[init + new stride - original stride]\n+ *                                                   (We could still only use one Template Assertion Predicate to create\n+ *                                                   both Initialized Assertion Predicates from - might be worth doing\n+ *                                                   at some point).\n+ *                                                   When later splitting a loop (pre\/main\/post, peeling, unrolling),\n+ *                                                   we create two Initialized Assertion Predicates from the Template\n+ *                                                   Assertion Predicates by replacing the OpaqueLoop* nodes by actual\n+ *                                                   values. Initially (before unrolling), both Assertion Predicates are\n+ *                                                   equal. The Initialized Assertion Predicates are always true because\n+ *                                                   their range is covered by a corresponding Hoisted Check Predicate.\n+ *                        - Range Check Elimination: A range check is removed from the main-loop by changing the pre\n+ *                                                   and main-loop iterations. We add two additional Template Assertion\n+ *                                                   Predicates (see explanation in section above) and one Initialized\n+ *                                                   Assertion Predicate for the just removed range check. When later\n+ *                                                   unrolling the main-loop, we create two Initialized Assertion\n+ *                                                   Predicates from the Template Assertion Predicates by replacing the\n+ *                                                   OpaqueLoop* nodes by actual values for the unrolled loop.\n+ *                                                   The Initialized Assertion Predicates are always true: They are true\n+ *                                                   when entering the main-loop (because we adjusted the pre-loop exit\n+ *                                                   condition), when executing the last iteration of the main-loop\n+ *                                                   (because we adjusted the main-loop exit condition), and during all\n+ *                                                   other iterations of the main-loop in-between by implication.\n+ *                                                   Note that Range Check Elimination could remove additional range\n+ *                                                   checks which were not possible to remove with Loop Predication\n+ *                                                   before (for example, because no Parse Predicates were available\n+ *                                                   before the loop to create Hoisted Check Predicates with).\n+ *\n+ *\n+ * In order to group predicates and refer to them throughout the code, we introduce the following additional term:\n+ * - Predicate Block: A block containing all Runtime Predicates, including the Assertion Predicates for Range Check\n+ *                    Predicates, and the associated Parse Predicate which all share the same uncommon trap. This block\n+ *                    could be empty if there were no Runtime Predicates created and the Parse Predicate was already\n+ *                    removed.\n+ *                    There are three different Predicate Blocks:\n+ *                    - Loop Predicate Block: Groups the Loop Predicates (if any), including the Assertion Predicates,\n+ *                                            and the Loop Parse Predicate (if not removed, yet) together.\n+ *                    - Profiled Loop         Groups the Profiled Loop Predicates (if any), including the Assertion\n+ *                      Predicate Block:      Predicates, and the Profiled Loop Parse Predicate (if not removed, yet)\n+ *                                            together.\n+ *                    - Loop Limit Check      Groups the Loop Limit Check Predicate (if created) and the Loop Limit\n+ *                      Predicate Block:      Check Parse Predicate (if not removed, yet) together.\n+ *\n+ *\n+ * Initially, before applying any loop-splitting optimizations, we find the following structure after Loop Predication\n+ * (predicates inside square brackets [] do not need to exist if there are no checks to hoist):\n+ *\n+ *   [Loop Predicate 1 + two Template Assertion Predicates]            \\\n+ *   [Loop Predicate 2 + two Template Assertion Predicates]            |\n+ *   ...                                                               | Loop Predicate Block\n+ *   [Loop Predicate n + two Template Assertion Predicates]            |\n+ * Loop Parse Predicate                                                \/\n+ *\n+ *   [Profiled Loop Predicate 1 + two Template Assertion Predicates]   \\\n+ *   [Profiled Loop Predicate 2 + two Template Assertion Predicates]   | Profiled Loop\n+ *   ...                                                               | Predicate Block\n+ *   [Profiled Loop Predicate m + two Template Assertion Predicates]   |\n+ * Profiled Loop Parse Predicate                                       \/\n+ *\n+ *   [Loop Limit Check Predicate] (at most one)                        \\ Loop Limit Check\n+ * Loop Limit Check Parse Predicate                                    \/ Predicate Block\n+ * Loop Head\n+ *\n+ * As an example, let's look at how the predicate structure looks for the main-loop after creating pre\/main\/post loops\n+ * and applying Range Check Elimination (the order is insignificant):\n+ *\n+ * Main Loop entry (zero-trip) guard\n+ *   [For Loop Predicate 1: Two Template + two Initialized Assertion Predicates]\n+ *   [For Loop Predicate 2: Two Template + two Initialized Assertion Predicates]\n+ *   ...\n+ *   [For Loop Predicate n: Two Template + two Initialized Assertion Predicates]\n+ *\n+ *   [For Profiled Loop Predicate 1: Two Template + two Initialized Assertion Predicates]\n+ *   [For Profiled Loop Predicate 2: Two Template + two Initialized Assertion Predicates]\n+ *   ...\n+ *   [For Profiled Loop Predicate m: Two Template + two Initialized Assertion Predicates]\n+ *\n+ *   (after unrolling, we have two Initialized Assertion Predicates for the Assertion Predicates of Range Check Elimination)\n+ *   [For Range Check Elimination Check 1: Two Templates + one Initialized Assertion Predicate]\n+ *   [For Range Check Elimination Check 2: Two Templates + one Initialized Assertion Predicate]\n+ *   ...\n+ *   [For Range Check Elimination Check k: Two Templates + one Initialized Assertion Predicate]\n+ * Main Loop Head\n+ *\/\n+\n+\n+\/\/ Class to represent Assertion Predicates with a HaltNode instead of an UCT (i.e. either an Initialized Assertion\n+\/\/ Predicate or a Template Assertion Predicate created after the initial one at Loop Predication).\n+class AssertionPredicatesWithHalt : public StackObj {\n+  Node* _entry;\n+\n+  static Node* find_entry(Node* start_proj);\n+  static bool has_opaque4(const Node* predicate_proj);\n+  static bool has_halt(const Node* success_proj);\n+  static bool is_assertion_predicate_success_proj(const Node* predicate_proj);\n+\n+ public:\n+  AssertionPredicatesWithHalt(Node* assertion_predicate_proj) : _entry(find_entry(assertion_predicate_proj)) {}\n+\n+  \/\/ Returns the control input node into the first assertion predicate If. If there are no assertion predicates, it\n+  \/\/ returns the same node initially passed to the constructor.\n+  Node* entry() const {\n+    return _entry;\n+  }\n+};\n+\n+\/\/ Class to represent a Parse Predicate.\n+class ParsePredicate : public StackObj {\n+  ParsePredicateSuccessProj* _success_proj;\n+  ParsePredicateNode* _parse_predicate_node;\n+  Node* _entry;\n+\n+  IfTrueNode* init_success_proj(const Node* parse_predicate_proj) const {\n+    assert(parse_predicate_proj != nullptr, \"must not be null\");\n+    return parse_predicate_proj->isa_IfTrue();\n+  }\n+\n+  static ParsePredicateNode* init_parse_predicate(Node* parse_predicate_proj, Deoptimization::DeoptReason deopt_reason);\n+\n+ public:\n+  ParsePredicate(Node* parse_predicate_proj, Deoptimization::DeoptReason deopt_reason)\n+      : _success_proj(init_success_proj(parse_predicate_proj)),\n+        _parse_predicate_node(init_parse_predicate(parse_predicate_proj, deopt_reason)),\n+        _entry(_parse_predicate_node != nullptr ? _parse_predicate_node->in(0) : parse_predicate_proj) {}\n+\n+  \/\/ Returns the control input node into this Parse Predicate if it is valid. Otherwise, it returns the passed node\n+  \/\/ into the constructor of this class.\n+  Node* entry() const {\n+    return _entry;\n+  }\n+\n+  \/\/ This Parse Predicate is valid if the node passed to the constructor is a projection of a ParsePredicateNode and the\n+  \/\/ deopt_reason of the uncommon trap of the ParsePredicateNode matches the passed deopt_reason to the constructor.\n+  bool is_valid() const {\n+    return _parse_predicate_node != nullptr;\n+  }\n+\n+  ParsePredicateNode* node() const {\n+    assert(is_valid(), \"must be valid\");\n+    return _parse_predicate_node;\n+  }\n+\n+  ParsePredicateSuccessProj* success_proj() const {\n+    assert(is_valid(), \"must be valid\");\n+    return _success_proj;\n+  }\n+};\n+\n+\/\/ Utility class for queries on Runtime Predicates.\n+class RuntimePredicate : public StackObj {\n+  static Deoptimization::DeoptReason uncommon_trap_reason(IfProjNode* if_proj);\n+\n+ public:\n+  static bool is_success_proj(Node* node, Deoptimization::DeoptReason deopt_reason);\n+};\n+\n+\/\/ This class represents a Predicate Block (i.e. either a Loop Predicate Block, a Profiled Loop Predicate Block,\n+\/\/ or a Loop Limit Check Predicate Block). It contains zero or more Regular Predicates followed by a Parse Predicate\n+\/\/ which, however, does not need to exist (we could already have decided to remove Parse Predicates for this loop).\n+class PredicateBlock : public StackObj {\n+  ParsePredicate _parse_predicate; \/\/ Could be missing.\n+  Node* _entry;\n+\n+  static Node* skip_regular_predicates(Node* regular_predicate_proj, Deoptimization::DeoptReason deopt_reason);\n+\n+ public:\n+  PredicateBlock(Node* predicate_proj, Deoptimization::DeoptReason deopt_reason)\n+      : _parse_predicate(predicate_proj, deopt_reason),\n+        _entry(skip_regular_predicates(_parse_predicate.entry(), deopt_reason)) {}\n+\n+  \/\/ Returns the control input node into this Regular Predicate block. This is either:\n+  \/\/ - The control input to the first If node in the block representing a Runtime Predicate if there is at least one\n+  \/\/   Runtime Predicate.\n+  \/\/ - The control input node into the ParsePredicate node if there is only a Parse Predicate and no Runtime Predicate.\n+  \/\/ - The same node initially passed to the constructor if this Regular Predicate block is empty (i.e. no Parse\n+  \/\/   Predicate or Runtime Predicate).\n+  Node* entry() const {\n+    return _entry;\n+  }\n+\n+  bool is_non_empty() const {\n+    return has_parse_predicate() || has_runtime_predicates();\n+  }\n+\n+  bool has_parse_predicate() const {\n+    return _parse_predicate.is_valid();\n+  }\n+\n+  ParsePredicateNode* parse_predicate() const {\n+    return _parse_predicate.node();\n+  }\n+\n+  ParsePredicateSuccessProj* parse_predicate_success_proj() const {\n+    return _parse_predicate.success_proj();\n+  }\n+\n+  bool has_runtime_predicates() const {\n+    return _parse_predicate.entry() != _entry;\n+  }\n+\n+  \/\/ Returns either:\n+  \/\/ - The entry to the Parse Predicate if present.\n+  \/\/ - The last Runtime Predicate success projection if Parse Predicate is not present.\n+  \/\/ - The entry to this Regular Predicate Block if the block is empty.\n+  Node* skip_parse_predicate() const {\n+    return _parse_predicate.entry();\n+  }\n+};\n+\n+\/\/ This class takes a loop entry node and finds all the available predicates for the loop.\n+class Predicates : public StackObj {\n+  Node* _loop_entry;\n+  PredicateBlock _loop_limit_check_predicate_block;\n+  PredicateBlock _profiled_loop_predicate_block;\n+  PredicateBlock _loop_predicate_block;\n+  Node* _entry;\n+\n+ public:\n+  Predicates(Node* loop_entry)\n+      : _loop_entry(loop_entry),\n+        _loop_limit_check_predicate_block(loop_entry, Deoptimization::Reason_loop_limit_check),\n+        _profiled_loop_predicate_block(_loop_limit_check_predicate_block.entry(),\n+                                       Deoptimization::Reason_profile_predicate),\n+        _loop_predicate_block(_profiled_loop_predicate_block.entry(),\n+                              Deoptimization::Reason_predicate),\n+        _entry(_loop_predicate_block.entry()) {}\n+\n+  \/\/ Returns the control input the first predicate if there are any predicates. If there are no predicates, the same\n+  \/\/ node initially passed to the constructor is returned.\n+  Node* entry() const {\n+    return _entry;\n+  }\n+\n+  const PredicateBlock* loop_predicate_block() const {\n+    return &_loop_predicate_block;\n+  }\n+\n+  const PredicateBlock* profiled_loop_predicate_block() const {\n+    return &_profiled_loop_predicate_block;\n+  }\n+\n+  const PredicateBlock* loop_limit_check_predicate_block() const {\n+    return &_loop_limit_check_predicate_block;\n+  }\n+\n+  bool has_any() const {\n+    return _entry != _loop_entry;\n+  }\n+};\n+#endif \/\/ SHARE_OPTO_PREDICATES_HPP\n","filename":"src\/hotspot\/share\/opto\/predicates.hpp","additions":358,"deletions":0,"binary":false,"changes":358,"status":"added"},{"patch":"@@ -2084,0 +2084,12 @@\n+  if (p0->is_CMove()) {\n+    \/\/ Verify that CMove has a matching Bool pack\n+    BoolNode* bol = p0->in(1)->as_Bool();\n+    if (bol == nullptr || my_pack(bol) == nullptr) {\n+      return false;\n+    }\n+    \/\/ Verify that Bool has a matching Cmp pack\n+    CmpNode* cmp = bol->in(1)->as_Cmp();\n+    if (cmp == nullptr || my_pack(cmp) == nullptr) {\n+      return false;\n+    }\n+  }\n@@ -3784,1 +3796,1 @@\n-  Node* p_f = cl->skip_predicates()->in(0)->in(0);\n+  Node* p_f = cl->skip_assertion_predicates_with_halt()->in(0)->in(0);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -713,1 +713,2 @@\n-  assert(pointer_delta(end, start, sizeof(jbyte)) < INT_MAX,\n+  size_t code_size = pointer_delta(end, start, sizeof(jbyte));\n+  assert(code_size < INT_MAX,\n@@ -717,1 +718,1 @@\n-    pointer_delta(end, start, sizeof(jbyte)), 0, nullptr);\n+                      checked_cast<int>(code_size), 0, nullptr);\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-    intptr_t offset = raw_instance_offset(id);\n+    int offset = raw_instance_offset(id);\n@@ -209,1 +209,1 @@\n-intptr_t jfieldIDWorkaround::encode_klass_hash(Klass* k, intptr_t offset) {\n+intptr_t jfieldIDWorkaround::encode_klass_hash(Klass* k, int offset) {\n@@ -252,1 +252,1 @@\n-  intptr_t offset = raw_instance_offset(id);\n+  int offset = raw_instance_offset(id);\n@@ -416,1 +416,1 @@\n-    intptr_t offset = InstanceKlass::cast(k1)->field_offset( slot );\n+    int offset = InstanceKlass::cast(k1)->field_offset( slot );\n@@ -428,1 +428,1 @@\n-  intptr_t offset = InstanceKlass::cast(k1)->field_offset( slot );\n+  int offset = InstanceKlass::cast(k1)->field_offset( slot );\n@@ -1887,0 +1887,1 @@\n+\/\/ TODO: make this a template\n@@ -1904,1 +1905,0 @@\n-  if (SigType == JVM_SIGNATURE_BOOLEAN) { value = ((jboolean)value) & 1; } \\\n@@ -2097,1 +2097,0 @@\n-  if (SigType == JVM_SIGNATURE_BOOLEAN) { value = ((jboolean)value) & 1; } \\\n@@ -2879,1 +2878,1 @@\n-  if (ret == nullptr) {\n+  if (ret == nullptr && ref_handle.not_null()) {\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -611,1 +611,2 @@\n-  return handle == nullptr ? 0 : ObjectSynchronizer::FastHashCode (THREAD, JNIHandles::resolve_non_null(handle)) ;\n+  return handle == nullptr ? 0 :\n+         checked_cast<jint>(ObjectSynchronizer::FastHashCode (THREAD, JNIHandles::resolve_non_null(handle)));\n@@ -1595,1 +1596,1 @@\n-  intptr_t offset = ik->field_offset(slot);\n+  int offset = ik->field_offset(slot);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -619,1 +619,1 @@\n-    int offset = checked_cast<int>(jfieldIDWorkaround::from_instance_jfieldID(k, field));\n+    int offset = jfieldIDWorkaround::from_instance_jfieldID(k, field);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -727,0 +727,1 @@\n+    JvmtiExport::_should_notify_object_alloc = JvmtiExport::should_post_vm_object_alloc();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1069,0 +1069,3 @@\n+\/\/ This flag is read by C2 during VM internal objects allocation\n+int JvmtiExport::_should_notify_object_alloc = 0;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -399,0 +399,3 @@\n+  \/\/ Used by C2 to deoptimize allocation intrinsics and post vm_object_alloc\n+  static int _should_notify_object_alloc;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2323,1 +2323,4 @@\n-        jvf->cb()->as_nmethod()->oops_do(_blk);\n+        \/\/ Need to apply load barriers for unmounted vthreads.\n+        nmethod* nm = jvf->cb()->as_nmethod();\n+        nm->run_nmethod_entry_barrier();\n+        nm->oops_do(_blk);\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -696,1 +696,1 @@\n-    DEBUG_ONLY(int vmindex = java_lang_invoke_MemberName::vmindex(mname()));\n+    DEBUG_ONLY(intptr_t vmindex = java_lang_invoke_MemberName::vmindex(mname()));\n@@ -710,1 +710,1 @@\n-  DEBUG_ONLY(int old_vmindex);\n+  DEBUG_ONLY(intptr_t old_vmindex);\n@@ -910,1 +910,1 @@\n-      int vmindex  = java_lang_invoke_MemberName::vmindex(mname());\n+      intptr_t vmindex  = java_lang_invoke_MemberName::vmindex(mname());\n@@ -913,1 +913,1 @@\n-      if (!defc->find_field_from_offset(vmindex, is_static, &fd))\n+      if (!defc->find_field_from_offset(checked_cast<int>(vmindex), is_static, &fd))\n@@ -1164,1 +1164,1 @@\n-      int vmindex = java_lang_invoke_MemberName::vmindex(mname);\n+      intptr_t vmindex = java_lang_invoke_MemberName::vmindex(mname);\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-JavaFrameStream::JavaFrameStream(JavaThread* thread, int mode, Handle cont_scope, Handle cont)\n+JavaFrameStream::JavaFrameStream(JavaThread* thread, jlong mode, Handle cont_scope, Handle cont)\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-  JavaFrameStream(JavaThread* thread, int mode, Handle cont_scope, Handle cont);\n+  JavaFrameStream(JavaThread* thread, jlong mode, Handle cont_scope, Handle cont);\n@@ -150,1 +150,1 @@\n-  static inline bool get_caller_class(int mode) {\n+  static inline bool get_caller_class(jlong mode) {\n@@ -153,1 +153,1 @@\n-  static inline bool skip_hidden_frames(int mode) {\n+  static inline bool skip_hidden_frames(jlong mode) {\n@@ -156,1 +156,1 @@\n-  static inline bool live_frame_info(int mode) {\n+  static inline bool live_frame_info(jlong mode) {\n@@ -161,1 +161,1 @@\n-  static inline bool need_method_info(int mode) {\n+  static inline bool need_method_info(jlong mode) {\n@@ -164,1 +164,1 @@\n-  static inline bool use_frames_array(int mode) {\n+  static inline bool use_frames_array(jlong mode) {\n","filename":"src\/hotspot\/share\/prims\/stackwalk.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-static inline jlong field_offset_from_byte_offset(jlong byte_offset) {\n+static inline int field_offset_from_byte_offset(int byte_offset) {\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-  const char c_delim = j_delim & 0xff;\n+  const char c_delim = (char)(j_delim & 0xff);\n","filename":"src\/hotspot\/share\/prims\/wbtestmethods\/parserTests.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1385,1 +1385,1 @@\n-  int result = value;\n+  int result = checked_cast<int>(value);\n@@ -1390,1 +1390,1 @@\n-  uint result = value;\n+  uint result = checked_cast<uint>(value);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1180,1 +1180,1 @@\n-  char quote_c        = 0;\n+  int  quote_c        = 0;\n@@ -1192,1 +1192,1 @@\n-          token[pos++] = c;\n+          token[pos++] = checked_cast<char>(c);\n@@ -1212,1 +1212,1 @@\n-        token[pos++] = c;\n+        token[pos++] = checked_cast<char>(c);\n@@ -1568,1 +1568,1 @@\n-    MaxRAMPercentage = 100.0 \/ MaxRAMFraction;\n+    MaxRAMPercentage = 100.0 \/ (double)MaxRAMFraction;\n@@ -1572,1 +1572,1 @@\n-    MinRAMPercentage = 100.0 \/ MinRAMFraction;\n+    MinRAMPercentage = 100.0 \/ (double)MinRAMFraction;\n@@ -1576,1 +1576,1 @@\n-    InitialRAMPercentage = 100.0 \/ InitialRAMFraction;\n+    InitialRAMPercentage = 100.0 \/ (double)InitialRAMFraction;\n@@ -1582,2 +1582,2 @@\n-    julong reasonable_max = (julong)((phys_mem * MaxRAMPercentage) \/ 100);\n-    const julong reasonable_min = (julong)((phys_mem * MinRAMPercentage) \/ 100);\n+    julong reasonable_max = (julong)(((double)phys_mem * MaxRAMPercentage) \/ 100);\n+    const julong reasonable_min = (julong)(((double)phys_mem * MinRAMPercentage) \/ 100);\n@@ -1667,1 +1667,1 @@\n-      julong reasonable_initial = (julong)((phys_mem * InitialRAMPercentage) \/ 100);\n+      julong reasonable_initial = (julong)(((double)phys_mem * InitialRAMPercentage) \/ 100);\n@@ -1968,4 +1968,4 @@\n-bool Arguments::parse_uintx(const char* value,\n-                            uintx* uintx_arg,\n-                            uintx min_size) {\n-  uintx n;\n+bool Arguments::parse_uint(const char* value,\n+                           uint* uint_arg,\n+                           uint min_size) {\n+  uint n;\n@@ -1976,1 +1976,1 @@\n-    *uintx_arg = n;\n+    *uint_arg = n;\n@@ -2731,2 +2731,2 @@\n-      uintx max_tenuring_thresh = 0;\n-      if (!parse_uintx(tail, &max_tenuring_thresh, 0)) {\n+      uint max_tenuring_thresh = 0;\n+      if (!parse_uint(tail, &max_tenuring_thresh, 0)) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -381,4 +381,4 @@\n-  \/\/ parameter passed and returns the value in uintx_arg.  Returns\n-  \/\/ false otherwise, with uintx_arg undefined.\n-  static bool parse_uintx(const char* value, uintx* uintx_arg,\n-                          uintx min_size);\n+  \/\/ parameter passed and returns the value in uint_arg.  Returns\n+  \/\/ false otherwise, with uint_arg undefined.\n+  static bool parse_uint(const char* value, uint* uintx_arg,\n+                         uint min_size);\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -407,1 +407,1 @@\n-  int cont_size() { return _cont_stack_bottom - _cont_stack_top; }\n+  int cont_size() { return pointer_delta_as_int(_cont_stack_bottom, _cont_stack_top); }\n@@ -1067,1 +1067,1 @@\n-  const int fsize = stack_frame_bottom - stack_frame_top;\n+  const int fsize = pointer_delta_as_int(stack_frame_bottom, stack_frame_top);\n@@ -1126,1 +1126,1 @@\n-  const int fsize = stack_frame_bottom + argsize - stack_frame_top;\n+  const int fsize = pointer_delta_as_int(stack_frame_bottom + argsize, stack_frame_top);\n@@ -1630,1 +1630,1 @@\n-      int monitor_count = entry->parent_held_monitor_count();\n+      intx monitor_count = entry->parent_held_monitor_count();\n@@ -2071,1 +2071,1 @@\n-  int total_thawed = _stream.unextended_sp() - _top_unextended_sp_before_thaw;\n+  int total_thawed = pointer_delta_as_int(_stream.unextended_sp(), _top_unextended_sp_before_thaw);\n@@ -2157,1 +2157,1 @@\n-  const int fsize = heap_frame_bottom - heap_frame_top;\n+  const int fsize = pointer_delta_as_int(heap_frame_bottom, heap_frame_top);\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  int result = _caller_adjustment;\n+  intptr_t result = _caller_adjustment;\n@@ -255,1 +255,1 @@\n-  return result;\n+  return checked_cast<int>(result);\n@@ -1084,1 +1084,1 @@\n-      _high = _low + cache->length() - 1;\n+      _high = checked_cast<PrimitiveType>(_low + cache->length() - 1);\n@@ -1103,1 +1103,1 @@\n-      int offset = value - _low;\n+      int offset = checked_cast<int>(value - _low);\n@@ -1657,1 +1657,1 @@\n-  int frame_size = caller.sp() - fr.sp();\n+  int frame_size = pointer_delta_as_int(caller.sp(), fr.sp());\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-JVMFlag::Error ContendedPaddingWidthConstraintFunc(intx value, bool verbose) {\n+JVMFlag::Error ContendedPaddingWidthConstraintFunc(int value, bool verbose) {\n@@ -59,1 +59,1 @@\n-                        \"ContendedPaddingWidth (\" INTX_FORMAT \") must be \"\n+                        \"ContendedPaddingWidth (%d) must be \"\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  f(intx,   ContendedPaddingWidthConstraintFunc)      \\\n+  f(int,    ContendedPaddingWidthConstraintFunc)      \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -304,0 +305,8 @@\n+Method* frame::safe_interpreter_frame_method() const {\n+  Method** m_addr = interpreter_frame_method_addr();\n+  if (m_addr == nullptr) {\n+    return nullptr;\n+  }\n+  return (Method*) SafeFetchN((intptr_t*) m_addr, 0);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -239,0 +239,2 @@\n+  Method* safe_interpreter_frame_method() const;\n+\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -729,1 +729,1 @@\n-          \"at one time (minimum is 1024).\")                      \\\n+          \"at one time (minimum is 1024).\")                                 \\\n@@ -732,1 +732,1 @@\n-  product(intx, MonitorUsedDeflationThreshold, 90, DIAGNOSTIC,              \\\n+  product(int, MonitorUsedDeflationThreshold, 90, DIAGNOSTIC,               \\\n@@ -805,1 +805,1 @@\n-  product(intx, ContendedPaddingWidth, 128,                                 \\\n+  product(int, ContendedPaddingWidth, 128,                                  \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-  _chunk->next_chop();\n+  Chunk::next_chop(_chunk);\n","filename":"src\/hotspot\/share\/runtime\/handles.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -207,0 +207,1 @@\n+  double total_div = (double)total;\n@@ -208,2 +209,2 @@\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%) |- interpreted\", int_total,     100.0 * int_total    \/ total);\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%) |- compiled\",    comp_total,    100.0 * comp_total   \/ total);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%) |- interpreted\", int_total,     100.0 * (double)int_total    \/ total_div);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%) |- compiled\",    comp_total,    100.0 * (double)comp_total   \/ total_div);\n@@ -211,6 +212,6 @@\n-                                                                         special_total, 100.0 * special_total\/ total);\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- synchronized\",synch_total,   100.0 * synch_total  \/ total);\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- final\",       final_total,   100.0 * final_total  \/ total);\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- static\",      static_total,  100.0 * static_total \/ total);\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- native\",      native_total,  100.0 * native_total \/ total);\n-  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- accessor\",    access_total,  100.0 * access_total \/ total);\n+                                                                         special_total, 100.0 * (double)special_total\/ total_div);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- synchronized\",synch_total,   100.0 * (double)synch_total  \/ total_div);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- final\",       final_total,   100.0 * (double)final_total  \/ total_div);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- static\",      static_total,  100.0 * (double)static_total \/ total_div);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- native\",      native_total,  100.0 * (double)native_total \/ total_div);\n+  tty->print_cr(\"\\t\" UINT64_FORMAT_W(12) \" (%4.1f%%)    |- accessor\",    access_total,  100.0 * (double)access_total \/ total_div);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -80,5 +80,5 @@\n-  uint8_t _major;\n-  uint8_t _minor;\n-  uint8_t _security;\n-  uint8_t _patch;\n-  uint8_t _build;\n+  int _major;\n+  int _minor;\n+  int _security;\n+  int _patch;\n+  int _build;\n@@ -99,2 +99,2 @@\n-  JDK_Version(uint8_t major, uint8_t minor = 0, uint8_t security = 0,\n-              uint8_t patch = 0, uint8_t build = 0) :\n+  JDK_Version(int major, int minor = 0, int security = 0,\n+              int patch = 0, int build = 0) :\n@@ -108,1 +108,1 @@\n-  static JDK_Version jdk(uint8_t m) {\n+  static JDK_Version jdk(int m) {\n@@ -120,5 +120,5 @@\n-  uint8_t major_version() const          { return _major; }\n-  uint8_t minor_version() const          { return _minor; }\n-  uint8_t security_version() const       { return _security; }\n-  uint8_t patch_version() const          { return _patch; }\n-  uint8_t build_number() const           { return _build; }\n+  int major_version() const          { return _major; }\n+  int minor_version() const          { return _minor; }\n+  int security_version() const       { return _security; }\n+  int patch_version() const          { return _patch; }\n+  int build_number() const           { return _build; }\n","filename":"src\/hotspot\/share\/runtime\/java.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -878,4 +878,4 @@\n-  assert(this->held_monitor_count() == this->jni_monitor_count(),\n-         \"held monitor count should be equal to jni: \" INT64_FORMAT \" != \" INT64_FORMAT,\n-         (int64_t)this->held_monitor_count(), (int64_t)this->jni_monitor_count());\n-  if (CheckJNICalls && this->jni_monitor_count() > 0) {\n+  assert(held_monitor_count() == jni_monitor_count(),\n+         \"held monitor count should be equal to jni: \" INTX_FORMAT \" != \" INTX_FORMAT,\n+         held_monitor_count(), jni_monitor_count());\n+  if (CheckJNICalls && jni_monitor_count() > 0) {\n@@ -1943,1 +1943,1 @@\n-void JavaThread::inc_held_monitor_count(int i, bool jni) {\n+void JavaThread::inc_held_monitor_count(intx i, bool jni) {\n@@ -1945,1 +1945,1 @@\n-  assert(_held_monitor_count >= 0, \"Must always be greater than 0: \" INT64_FORMAT, (int64_t)_held_monitor_count);\n+  assert(_held_monitor_count >= 0, \"Must always be greater than 0: \" INTX_FORMAT, _held_monitor_count);\n@@ -1948,1 +1948,1 @@\n-    assert(_jni_monitor_count >= 0, \"Must always be greater than 0: \" INT64_FORMAT, (int64_t)_jni_monitor_count);\n+    assert(_jni_monitor_count >= 0, \"Must always be greater than 0: \" INTX_FORMAT, _jni_monitor_count);\n@@ -1954,1 +1954,1 @@\n-void JavaThread::dec_held_monitor_count(int i, bool jni) {\n+void JavaThread::dec_held_monitor_count(intx i, bool jni) {\n@@ -1957,1 +1957,1 @@\n-  assert(_held_monitor_count >= 0, \"Must always be greater than 0: \" INT64_FORMAT, (int64_t)_held_monitor_count);\n+  assert(_held_monitor_count >= 0, \"Must always be greater than 0: \" INTX_FORMAT, _held_monitor_count);\n@@ -1960,1 +1960,1 @@\n-    assert(_jni_monitor_count >= 0, \"Must always be greater than 0: \" INT64_FORMAT, (int64_t)_jni_monitor_count);\n+    assert(_jni_monitor_count >= 0, \"Must always be greater than 0: \" INTX_FORMAT, _jni_monitor_count);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -453,0 +453,1 @@\n+\n@@ -454,7 +455,2 @@\n-#ifdef _LP64\n-  int64_t _held_monitor_count;  \/\/ used by continuations for fast lock detection\n-  int64_t _jni_monitor_count;\n-#else\n-  int32_t _held_monitor_count;  \/\/ used by continuations for fast lock detection\n-  int32_t _jni_monitor_count;\n-#endif\n+  intx _held_monitor_count;  \/\/ used by continuations for fast lock detection\n+  intx _jni_monitor_count;\n@@ -602,2 +598,2 @@\n-  void inc_held_monitor_count(int i = 1, bool jni = false);\n-  void dec_held_monitor_count(int i = 1, bool jni = false);\n+  void inc_held_monitor_count(intx i = 1, bool jni = false);\n+  void dec_held_monitor_count(intx i = 1, bool jni = false);\n@@ -605,2 +601,2 @@\n-  int64_t held_monitor_count() { return (int64_t)_held_monitor_count; }\n-  int64_t jni_monitor_count()  { return (int64_t)_jni_monitor_count;  }\n+  intx held_monitor_count() { return _held_monitor_count; }\n+  intx jni_monitor_count()  { return _jni_monitor_count;  }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  static intptr_t raw_instance_offset(jfieldID id) {\n+  static int raw_instance_offset(jfieldID id) {\n@@ -92,1 +92,3 @@\n-    return result;\n+    \/\/ This gets back the InstanceKlass field offset that\n+    \/\/ the jfieldID is created with.\n+    return checked_cast<int>(result);\n@@ -94,1 +96,1 @@\n-  static intptr_t encode_klass_hash(Klass* k, intptr_t offset);\n+  static intptr_t encode_klass_hash(Klass* k, int offset);\n@@ -127,1 +129,1 @@\n-  static intptr_t from_instance_jfieldID(Klass* k, jfieldID id) {\n+  static int from_instance_jfieldID(Klass* k, jfieldID id) {\n","filename":"src\/hotspot\/share\/runtime\/jfieldIDWorkaround.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -295,2 +295,2 @@\n-  MUTEX_DEFN(JfrBuffer_lock                  , PaddedMutex  , nosafepoint);\n-  MUTEX_DEFN(JfrMsg_lock                     , PaddedMonitor, nosafepoint-3);\n+  MUTEX_DEFN(JfrBuffer_lock                  , PaddedMutex  , event);\n+  MUTEX_DEFN(JfrMsg_lock                     , PaddedMonitor, event);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-    ((in_bytes(ObjectMonitor::f ## _offset())) - markWord::monitor_value)\n+    ((in_bytes(ObjectMonitor::f ## _offset())) - checked_cast<int>(markWord::monitor_value))\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-  const int milliseconds_per_microsecond = 1000;\n+  const int milliseconds_per_second = 1000;\n@@ -141,1 +141,1 @@\n-    milliseconds_since_19700101 \/ milliseconds_per_microsecond;\n+    milliseconds_since_19700101 \/ milliseconds_per_second;\n@@ -143,1 +143,1 @@\n-    milliseconds_since_19700101 % milliseconds_per_microsecond;\n+    checked_cast<int>(milliseconds_since_19700101 % milliseconds_per_second);\n@@ -931,7 +931,52 @@\n-ATTRIBUTE_NO_ASAN static void print_hex_readable_pointer(outputStream* st, address p,\n-                                                         int unitsize) {\n-  switch (unitsize) {\n-    case 1: st->print(\"%02x\", *(u1*)p); break;\n-    case 2: st->print(\"%04x\", *(u2*)p); break;\n-    case 4: st->print(\"%08x\", *(u4*)p); break;\n-    case 8: st->print(\"%016\" FORMAT64_MODIFIER \"x\", *(u8*)p); break;\n+ATTRIBUTE_NO_ASAN static bool read_safely_from(intptr_t* p, intptr_t* result) {\n+  const intptr_t errval = 0x1717;\n+  intptr_t i = SafeFetchN(p, errval);\n+  if (i == errval) {\n+    i = SafeFetchN(p, ~errval);\n+    if (i == ~errval) {\n+      return false;\n+    }\n+  }\n+  (*result) = i;\n+  return true;\n+}\n+\n+static void print_hex_location(outputStream* st, address p, int unitsize) {\n+  address pa = align_down(p, sizeof(intptr_t));\n+#ifndef _LP64\n+  \/\/ Special handling for printing qwords on 32-bit platforms\n+  if (unitsize == 8) {\n+    intptr_t i1, i2;\n+    if (read_safely_from((intptr_t*)pa, &i1) &&\n+        read_safely_from((intptr_t*)pa + 1, &i2)) {\n+      const uint64_t value =\n+        LITTLE_ENDIAN_ONLY((((uint64_t)i2) << 32) | i1)\n+        BIG_ENDIAN_ONLY((((uint64_t)i1) << 32) | i2);\n+      st->print(\"%016\" FORMAT64_MODIFIER \"x\", value);\n+    } else {\n+      st->print_raw(\"????????????????\");\n+    }\n+    return;\n+  }\n+#endif \/\/ 32-bit, qwords\n+  intptr_t i = 0;\n+  if (read_safely_from((intptr_t*)pa, &i)) {\n+    const int offset = (int)(p - (address)pa);\n+    const int bitoffset =\n+      LITTLE_ENDIAN_ONLY(offset * BitsPerByte)\n+      BIG_ENDIAN_ONLY((int)(sizeof(intptr_t) - 1 - offset) * BitsPerByte);\n+    const int bitfieldsize = unitsize * BitsPerByte;\n+    intptr_t value = bitfield(i, bitoffset, bitfieldsize);\n+    switch (unitsize) {\n+      case 1: st->print(\"%02x\", (u1)value); break;\n+      case 2: st->print(\"%04x\", (u2)value); break;\n+      case 4: st->print(\"%08x\", (u4)value); break;\n+      case 8: st->print(\"%016\" FORMAT64_MODIFIER \"x\", (u8)value); break;\n+    }\n+  } else {\n+    switch (unitsize) {\n+      case 1: st->print_raw(\"??\"); break;\n+      case 2: st->print_raw(\"????\"); break;\n+      case 4: st->print_raw(\"????????\"); break;\n+      case 8: st->print_raw(\"????????????????\"); break;\n+    }\n@@ -958,5 +1003,1 @@\n-    if (is_readable_pointer(p)) {\n-      print_hex_readable_pointer(st, p, unitsize);\n-    } else {\n-      st->print(\"%*.*s\", 2*unitsize, 2*unitsize, \"????????????????\");\n-    }\n+    print_hex_location(st, p, unitsize);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":56,"deletions":15,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-      short_at_put(offset, new_delta);\n+      short_at_put(offset, checked_cast<short>(new_delta));\n@@ -400,2 +400,2 @@\n-      table.set_start_pc(index, table.start_pc(index) + delta);\n-      table.set_end_pc(index, table.end_pc(index) + delta);\n+      table.set_start_pc(index, checked_cast<u2>(table.start_pc(index) + delta));\n+      table.set_end_pc(index, checked_cast<u2>(table.end_pc(index) + delta));\n@@ -403,1 +403,1 @@\n-      table.set_end_pc(index, table.end_pc(index) + delta);\n+      table.set_end_pc(index, checked_cast<u2>(table.end_pc(index) + delta));\n@@ -406,1 +406,1 @@\n-      table.set_handler_pc(index, table.handler_pc(index) + delta);\n+      table.set_handler_pc(index, checked_cast<u2>(table.handler_pc(index) + delta));\n@@ -452,1 +452,1 @@\n-        table[i].start_bci = current_bci + delta;\n+        table[i].start_bci = checked_cast<u2>(current_bci + delta);\n@@ -456,1 +456,1 @@\n-          table[i].length = current_length + delta;\n+          table[i].length = checked_cast<u2>(current_length + delta);\n@@ -534,1 +534,1 @@\n-            same_frame_extended::create_at(frame_addr, new_offset_delta);\n+            same_frame_extended::create_at(frame_addr, checked_cast<u2>(new_offset_delta));\n@@ -552,1 +552,1 @@\n-          types->set_bci(types->bci() + delta);\n+          types->set_bci(checked_cast<u2>(types->bci() + delta));\n@@ -565,1 +565,1 @@\n-            types->set_bci(types->bci() + delta);\n+            types->set_bci(checked_cast<u2>(types->bci() + delta));\n@@ -635,0 +635,1 @@\n+\n@@ -710,1 +711,1 @@\n-      short_at_put(bci + 1, ilen + goto_length);\n+      short_at_put(bci + 1, checked_cast<short>(ilen + goto_length));\n@@ -715,1 +716,1 @@\n-      short_at_put(cbci + 1, add_bci);\n+      short_at_put(cbci + 1, checked_cast<short>(add_bci));\n","filename":"src\/hotspot\/share\/runtime\/relocator.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-                                             uint64_t iterations) {\n+                                             int iterations) {\n@@ -103,1 +103,1 @@\n-    event.set_iterations(iterations);\n+    event.set_iterations(checked_cast<u4>(iterations));\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -688,1 +688,1 @@\n-    int catch_pco = ret_pc - cm->code_begin();\n+    int catch_pco = pointer_delta_as_int(ret_pc, cm->code_begin());\n@@ -747,1 +747,1 @@\n-  int catch_pco = ret_pc - nm->code_begin();\n+  int catch_pco = pointer_delta_as_int(ret_pc, nm->code_begin());\n@@ -2312,1 +2312,1 @@\n-  return 100.0 * x \/ MAX2(y, (int64_t)1);\n+  return 100.0 * (double)x \/ (double)MAX2(y, (int64_t)1);\n@@ -2348,2 +2348,2 @@\n-    for (int i = 0; i <= n; i++) { sum += histo[i]; weighted_sum += i*histo[i]; }\n-    if (sum >= 1.0) { \/\/ prevent divide by zero or divide overflow\n+    for (int i = 0; i <= n; i++) { sum += (double)histo[i]; weighted_sum += (double)(i*histo[i]); }\n+    if (sum >= 1) { \/\/ prevent divide by zero or divide overflow\n@@ -2353,2 +2353,2 @@\n-        rest -= histo[i];\n-        tty->print_cr(\"%4d: \" UINT64_FORMAT_W(12) \" (%5.1f%%)\", i, histo[i], histo[i] \/ percent);\n+        rest -= (double)histo[i];\n+        tty->print_cr(\"%4d: \" UINT64_FORMAT_W(12) \" (%5.1f%%)\", i, histo[i], (double)histo[i] \/ percent);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-    return (tem == nullptr ? limit : tem + 1 - base);\n+    return (tem == nullptr ? limit : pointer_delta_as_int(tem + 1, base));\n@@ -349,1 +349,1 @@\n-      return (tem == nullptr ? limit : tem + 1 - base);\n+      return (tem == nullptr ? limit : pointer_delta_as_int(tem + 1, base));\n","filename":"src\/hotspot\/share\/runtime\/signature.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1172,2 +1172,2 @@\n-    float remainder = (100.0 - MonitorUsedDeflationThreshold) \/ 100.0;\n-    size_t new_ceiling = ceiling + (ceiling * remainder) + 1;\n+    double remainder = (100.0 - MonitorUsedDeflationThreshold) \/ 100.0;\n+    size_t new_ceiling = ceiling + (size_t)((double)ceiling * remainder) + 1;\n@@ -1186,1 +1186,1 @@\n-                               \", monitor_usage=\" SIZE_FORMAT \", threshold=\" INTX_FORMAT,\n+                               \", monitor_usage=\" SIZE_FORMAT \", threshold=%d\",\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -453,1 +453,1 @@\n-              os::thread_cpu_time(const_cast<Thread*>(this), true) \/ 1000000.0\n+              (double)os::thread_cpu_time(const_cast<Thread*>(this), true) \/ 1000000.0\n@@ -456,1 +456,1 @@\n-              _statistical_info.getElapsedTime() \/ 1000.0\n+              (double)_statistical_info.getElapsedTime() \/ 1000.0\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -324,0 +324,1 @@\n+  virtual bool is_AttachListener_thread() const      { return false; }\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -359,1 +359,1 @@\n-  const uint32_t x_high = x >> 32;\n+  const uint32_t x_high = checked_cast<uint32_t>(x >> 32);\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -683,1 +683,1 @@\n-  Chunk::start_chunk_pool_cleaner_task();\n+  Arena::start_chunk_pool_cleaner_task();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-  return counter \/ freq;\n+  return (double)counter \/ freq;\n","filename":"src\/hotspot\/share\/runtime\/timer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,2 +119,2 @@\n-            const int64_t wait_ms = MAX2(1.0, to_ms(next_trim_time - tnow));\n-            ml.wait(wait_ms);\n+            const double wait_ms = MAX2(1.0, to_ms(next_trim_time - tnow));\n+            ml.wait((int64_t)wait_ms);\n","filename":"src\/hotspot\/share\/runtime\/trimNativeHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  template(HeapDumpMerge)                         \\\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+#include \"services\/attachListener.hpp\"\n@@ -240,0 +241,1 @@\n+  nonstatic_field(InstanceKlass,               _nest_members,                                 Array<jushort>*)                       \\\n@@ -247,0 +249,1 @@\n+  nonstatic_field(InstanceKlass,               _nest_host_index,                              u2)                                    \\\n@@ -947,3 +950,0 @@\n-     static_field(JDK_Version,                 _current,                                      JDK_Version)                           \\\n-  nonstatic_field(JDK_Version,                 _major,                                        unsigned char)                         \\\n-                                                                                                                                     \\\n@@ -1263,0 +1263,1 @@\n+        declare_type(AttachListenerThread, JavaThread)                    \\\n@@ -1872,1 +1873,0 @@\n-  declare_toplevel_type(JDK_Version)                                      \\\n@@ -3036,1 +3036,1 @@\n-    int len = end - start + 1;\n+    int len = pointer_delta_as_int(end, start) + 1;\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-    uintx level = 0;\n+    uint level = 0;\n@@ -239,1 +239,1 @@\n-      if (!Arguments::parse_uintx(num_str, &level, 0)) {\n+      if (!Arguments::parse_uint(num_str, &level, 0)) {\n@@ -243,1 +243,1 @@\n-        out->print_cr(\"Compression level out of range (1-9): \" UINTX_FORMAT, level);\n+        out->print_cr(\"Compression level out of range (1-9): %u\", level);\n@@ -247,4 +247,1 @@\n-    \/\/ Parallel thread number for heap dump, initialize based on active processor count.\n-    \/\/ Note the real number of threads used is also determined by active workers and compression\n-    \/\/ backend thread number. See heapDumper.cpp.\n-    uint parallel_thread_num = MAX2<uint>(1, (uint)os::initial_active_processor_count() * 3 \/ 8);\n+\n@@ -255,1 +252,1 @@\n-    dumper.dump(path, out, (int)level, false, (uint)parallel_thread_num);\n+    dumper.dump(path, out, level, false, HeapDumper::default_num_of_dump_threads());\n@@ -293,2 +290,2 @@\n-    uintx num;\n-    if (!Arguments::parse_uintx(num_str, &num, 0)) {\n+    uint num;\n+    if (!Arguments::parse_uint(num_str, &num, 0)) {\n@@ -299,1 +296,1 @@\n-    parallel_thread_num = num == 0 ? parallel_thread_num : (uint)num;\n+    parallel_thread_num = num == 0 ? parallel_thread_num : num;\n@@ -378,1 +375,1 @@\n-static void attach_listener_thread_entry(JavaThread* thread, TRAPS) {\n+void AttachListenerThread::thread_entry(JavaThread* thread, TRAPS) {\n@@ -463,1 +460,1 @@\n-  JavaThread* thread = new JavaThread(&attach_listener_thread_entry);\n+  JavaThread* thread = new AttachListenerThread();\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"runtime\/javaThread.inline.hpp\"\n@@ -61,0 +62,9 @@\n+class AttachListenerThread : public JavaThread {\n+private:\n+  static void thread_entry(JavaThread* thread, TRAPS);\n+\n+public:\n+  AttachListenerThread() : JavaThread(&AttachListenerThread::thread_entry) {}\n+  bool is_AttachListener_thread() const { return true; }\n+};\n+\n","filename":"src\/hotspot\/share\/services\/attachListener.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -472,1 +472,4 @@\n-           \"BOOLEAN\", false, \"false\") {\n+           \"BOOLEAN\", false, \"false\"),\n+  _parallel(\"-parallel\", \"Number of parallel threads to use for heap dump. The VM \"\n+                          \"will try to use the specified number of threads, but might use fewer.\",\n+            \"INT\", false, \"1\") {\n@@ -477,0 +480,1 @@\n+  _dcmdparser.add_dcmd_option(&_parallel);\n@@ -481,0 +485,1 @@\n+  jlong parallel = HeapDumper::default_num_of_dump_threads();\n@@ -491,0 +496,12 @@\n+  if (_parallel.is_set()) {\n+    parallel = _parallel.value();\n+\n+    if (parallel < 0) {\n+      output()->print_cr(\"Invalid number of parallel dump threads.\");\n+      return;\n+    } else if (parallel == 0) {\n+      \/\/ 0 implies to disable parallel heap dump, in such case, we use serial dump instead\n+      parallel = 1;\n+    }\n+  }\n+\n@@ -495,1 +512,1 @@\n-  dumper.dump(_filename.value(), output(), (int) level, _overwrite.value());\n+  dumper.dump(_filename.value(), output(), (int) level, _overwrite.value(), (uint)parallel);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -323,0 +323,1 @@\n+  DCmdArgument<jlong> _parallel;\n@@ -324,1 +325,1 @@\n-  static int num_arguments() { return 4; }\n+  static int num_arguments() { return 5; }\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2023, Alibaba Group Holding Limited. All rights reserved.\n@@ -57,0 +58,1 @@\n+#include \"runtime\/timerTrace.hpp\"\n@@ -385,1 +387,1 @@\n-class AbstractDumpWriter : public StackObj {\n+class AbstractDumpWriter : public ResourceObj {\n@@ -389,1 +391,0 @@\n-    io_buffer_max_waste = 10*K,\n@@ -402,2 +403,0 @@\n-  virtual void flush(bool force = false) = 0;\n-\n@@ -423,1 +422,1 @@\n-  \/\/ total number of bytes written to the disk\n+  \/\/ Total number of bytes written to the disk\n@@ -425,0 +424,1 @@\n+  \/\/ Return non-null if error occurred\n@@ -445,12 +445,3 @@\n-  void finish_dump_segment(bool force_flush = false);\n-  \/\/ Refresh to get new buffer\n-  void refresh() {\n-    assert (_in_dump_segment ==false, \"Sanity check\");\n-    _buffer = nullptr;\n-    _size = io_buffer_max_size;\n-    _pos = 0;\n-    \/\/ Force flush to guarantee data from parallel dumper are written.\n-    flush(true);\n-  }\n-  \/\/ Called when finished to release the threads.\n-  virtual void deactivate() = 0;\n+  void finish_dump_segment();\n+  \/\/ Flush internal buffer to persistent storage\n+  virtual void flush() = 0;\n@@ -551,1 +542,1 @@\n-void AbstractDumpWriter::finish_dump_segment(bool force_flush) {\n+void AbstractDumpWriter::finish_dump_segment() {\n@@ -569,1 +560,1 @@\n-    flush(force_flush);\n+    flush();\n@@ -614,21 +605,29 @@\n- private:\n-  CompressionBackend _backend; \/\/ Does the actual writing.\n- protected:\n-  void flush(bool force = false) override;\n-\n- public:\n-  \/\/ Takes ownership of the writer and compressor.\n-  DumpWriter(AbstractWriter* writer, AbstractCompressor* compressor);\n-\n-  \/\/ total number of bytes written to the disk\n-  julong bytes_written() const override { return (julong) _backend.get_written(); }\n-\n-  char const* error() const override    { return _backend.error(); }\n-\n-  \/\/ Called by threads used for parallel writing.\n-  void writer_loop()                    { _backend.thread_loop(); }\n-  \/\/ Called when finish to release the threads.\n-  void deactivate() override            { flush(); _backend.deactivate(); }\n-  \/\/ Get the backend pointer, used by parallel dump writer.\n-  CompressionBackend* backend_ptr()     { return &_backend; }\n-\n+private:\n+  FileWriter* _writer;\n+  AbstractCompressor* _compressor;\n+  size_t _bytes_written;\n+  char* _error;\n+  \/\/ Compression support\n+  char* _out_buffer;\n+  size_t _out_size;\n+  size_t _out_pos;\n+  char* _tmp_buffer;\n+  size_t _tmp_size;\n+\n+private:\n+  void do_compress();\n+\n+public:\n+  DumpWriter(const char* path, bool overwrite, AbstractCompressor* compressor);\n+  ~DumpWriter();\n+  julong bytes_written() const override        { return (julong) _bytes_written; }\n+  void set_bytes_written(julong bytes_written) { _bytes_written = bytes_written; }\n+  char const* error() const override           { return _error; }\n+  void set_error(const char* error)            { _error = (char*)error; }\n+  bool has_error() const                       { return _error != nullptr; }\n+  const char* get_file_path() const            { return _writer->get_file_path(); }\n+  AbstractCompressor* compressor()             { return _compressor; }\n+  void set_compressor(AbstractCompressor* p)   { _compressor = p; }\n+  bool is_overwrite() const                    { return _writer->is_overwrite(); }\n+\n+  void flush() override;\n@@ -637,2 +636,1 @@\n-\/\/ Check for error after constructing the object and destroy it in case of an error.\n-DumpWriter::DumpWriter(AbstractWriter* writer, AbstractCompressor* compressor) :\n+DumpWriter::DumpWriter(const char* path, bool overwrite, AbstractCompressor* compressor) :\n@@ -640,32 +638,22 @@\n-  _backend(writer, compressor, io_buffer_max_size, io_buffer_max_waste) {\n-  flush();\n-}\n-\n-\/\/ flush any buffered bytes to the file\n-void DumpWriter::flush(bool force) {\n-  _backend.get_new_buffer(&_buffer, &_pos, &_size, force);\n-}\n-\n-\/\/ Buffer queue used for parallel dump.\n-struct ParWriterBufferQueueElem {\n-  char* _buffer;\n-  size_t _used;\n-  ParWriterBufferQueueElem* _next;\n-};\n-\n-class ParWriterBufferQueue : public CHeapObj<mtInternal> {\n- private:\n-  ParWriterBufferQueueElem* _head;\n-  ParWriterBufferQueueElem* _tail;\n-  uint _length;\n- public:\n-  ParWriterBufferQueue() : _head(nullptr), _tail(nullptr), _length(0) { }\n-\n-  void enqueue(ParWriterBufferQueueElem* entry) {\n-    if (_head == nullptr) {\n-      assert(is_empty() && _tail == nullptr, \"Sanity check\");\n-      _head = _tail = entry;\n-    } else {\n-      assert ((_tail->_next == nullptr && _tail->_buffer != nullptr), \"Buffer queue is polluted\");\n-      _tail->_next = entry;\n-      _tail = entry;\n+  _writer(new (std::nothrow) FileWriter(path, overwrite)),\n+  _compressor(compressor),\n+  _bytes_written(0),\n+  _error(nullptr),\n+  _out_buffer(nullptr),\n+  _out_size(0),\n+  _out_pos(0),\n+  _tmp_buffer(nullptr),\n+  _tmp_size(0) {\n+  _error = (char*)_writer->open_writer();\n+  if (_error == nullptr) {\n+    _buffer = (char*)os::malloc(io_buffer_max_size, mtInternal);\n+    if (compressor != nullptr) {\n+      _error = (char*)_compressor->init(io_buffer_max_size, &_out_size, &_tmp_size);\n+      if (_error == nullptr) {\n+        if (_out_size > 0) {\n+          _out_buffer = (char*)os::malloc(_out_size, mtInternal);\n+        }\n+        if (_tmp_size > 0) {\n+          _tmp_buffer = (char*)os::malloc(_tmp_size, mtInternal);\n+        }\n+      }\n@@ -673,2 +661,0 @@\n-    _length++;\n-    assert(_tail->_next == nullptr, \"Buffer queue is polluted\");\n@@ -676,0 +662,4 @@\n+  \/\/ initialize internal buffer\n+  _pos = 0;\n+  _size = io_buffer_max_size;\n+}\n@@ -677,11 +667,3 @@\n-  ParWriterBufferQueueElem* dequeue() {\n-    if (_head == nullptr)  return nullptr;\n-    ParWriterBufferQueueElem* entry = _head;\n-    assert (entry->_buffer != nullptr, \"polluted buffer in writer list\");\n-    _head = entry->_next;\n-    if (_head == nullptr) {\n-      _tail = nullptr;\n-    }\n-    entry->_next = nullptr;\n-    _length--;\n-    return entry;\n+DumpWriter::~DumpWriter(){\n+  if (_buffer != nullptr) {\n+    os::free(_buffer);\n@@ -689,3 +671,2 @@\n-\n-  bool is_empty() {\n-    return _length == 0;\n+  if (_out_buffer != nullptr) {\n+    os::free(_out_buffer);\n@@ -693,32 +674,2 @@\n-\n-  uint length() { return _length; }\n-};\n-\n-\/\/ Support parallel heap dump.\n-class ParDumpWriter : public AbstractDumpWriter {\n- private:\n-  \/\/ Lock used to guarantee the integrity of multiple buffers writing.\n-  static Monitor* _lock;\n-  \/\/ Pointer of backend from global DumpWriter.\n-  CompressionBackend* _backend_ptr;\n-  char const * _err;\n-  ParWriterBufferQueue* _buffer_queue;\n-  size_t _internal_buffer_used;\n-  char* _buffer_base;\n-  bool _split_data;\n-  static const uint BackendFlushThreshold = 2;\n- protected:\n-  void flush(bool force = false) override {\n-    assert(_pos != 0, \"must not be zero\");\n-    if (_pos != 0) {\n-      refresh_buffer();\n-    }\n-\n-    if (_split_data || _is_huge_sub_record) {\n-      return;\n-    }\n-\n-    if (should_flush_buf_list(force)) {\n-      assert(!_in_dump_segment && !_split_data && !_is_huge_sub_record, \"incomplete data send to backend!\\n\");\n-      flush_to_backend(force);\n-    }\n+  if (_tmp_buffer != nullptr) {\n+    os::free(_tmp_buffer);\n@@ -726,60 +677,2 @@\n-\n- public:\n-  \/\/ Check for error after constructing the object and destroy it in case of an error.\n-  ParDumpWriter(DumpWriter* dw) :\n-    AbstractDumpWriter(),\n-    _backend_ptr(dw->backend_ptr()),\n-    _buffer_queue((new (std::nothrow) ParWriterBufferQueue())),\n-    _buffer_base(nullptr),\n-    _split_data(false) {\n-    \/\/ prepare internal buffer\n-    allocate_internal_buffer();\n-  }\n-\n-  ~ParDumpWriter() {\n-     assert(_buffer_queue != nullptr, \"Sanity check\");\n-     assert((_internal_buffer_used == 0) && (_buffer_queue->is_empty()),\n-            \"All data must be send to backend\");\n-     if (_buffer_base != nullptr) {\n-       os::free(_buffer_base);\n-       _buffer_base = nullptr;\n-     }\n-     delete _buffer_queue;\n-     _buffer_queue = nullptr;\n-  }\n-\n-  \/\/ total number of bytes written to the disk\n-  julong bytes_written() const override { return (julong) _backend_ptr->get_written(); }\n-  char const* error() const override    { return _err == nullptr ? _backend_ptr->error() : _err; }\n-\n-  static void before_work() {\n-    assert(_lock == nullptr, \"ParDumpWriter lock must be initialized only once\");\n-    _lock = new (std::nothrow) PaddedMonitor(Mutex::safepoint, \"ParallelHProfWriter_lock\");\n-  }\n-\n-  static void after_work() {\n-    assert(_lock != nullptr, \"ParDumpWriter lock is not initialized\");\n-    delete _lock;\n-    _lock = nullptr;\n-  }\n-\n-  \/\/ write raw bytes\n-  void write_raw(const void* s, size_t len) override {\n-    assert(!_in_dump_segment || (_sub_record_left >= len), \"sub-record too large\");\n-    debug_only(_sub_record_left -= len);\n-    assert(!_split_data, \"Invalid split data\");\n-    _split_data = true;\n-    \/\/ flush buffer to make room.\n-    while (len > buffer_size() - position()) {\n-      assert(!_in_dump_segment || _is_huge_sub_record,\n-             \"Cannot overflow in non-huge sub-record.\");\n-      size_t to_write = buffer_size() - position();\n-      memcpy(buffer() + position(), s, to_write);\n-      s = (void*) ((char*) s + to_write);\n-      len -= to_write;\n-      set_position(position() + to_write);\n-      flush();\n-    }\n-    _split_data = false;\n-    memcpy(buffer() + position(), s, len);\n-    set_position(position() + len);\n+  if (_writer != NULL) {\n+    delete _writer;\n@@ -787,0 +680,2 @@\n+  _bytes_written = -1;\n+}\n@@ -788,11 +683,6 @@\n-  void deactivate() override { flush(true); _backend_ptr->deactivate(); }\n-\n- private:\n-  void allocate_internal_buffer() {\n-    assert(_buffer_queue != nullptr, \"Internal buffer queue is not ready when allocate internal buffer\");\n-    assert(_buffer == nullptr && _buffer_base == nullptr, \"current buffer must be null before allocate\");\n-    _buffer_base = _buffer = (char*)os::malloc(io_buffer_max_size, mtInternal);\n-    if (_buffer == nullptr) {\n-      set_error(\"Could not allocate buffer for writer\");\n-      return;\n-    }\n+\/\/ flush any buffered bytes to the file\n+void DumpWriter::flush() {\n+  if (_pos <= 0) {\n+    return;\n+  }\n+  if (has_error()) {\n@@ -800,2 +690,1 @@\n-    _internal_buffer_used = 0;\n-    _size = io_buffer_max_size;\n+    return;\n@@ -803,4 +692,9 @@\n-\n-  void set_error(char const* new_error) {\n-    if ((new_error != nullptr) && (_err == nullptr)) {\n-      _err = new_error;\n+  char* result = nullptr;\n+  if (_compressor == nullptr) {\n+    result = (char*)_writer->write_buf(_buffer, _pos);\n+    _bytes_written += _pos;\n+  } else {\n+    do_compress();\n+    if (!has_error()) {\n+      result = (char*)_writer->write_buf(_out_buffer, _out_pos);\n+      _bytes_written += _out_pos;\n@@ -809,0 +703,1 @@\n+  _pos = 0; \/\/ reset pos to make internal buffer available\n@@ -810,71 +705,2 @@\n-  \/\/ Add buffer to internal list\n-  void refresh_buffer() {\n-    size_t expected_total = _internal_buffer_used + _pos;\n-    if (expected_total < io_buffer_max_size - io_buffer_max_waste) {\n-      \/\/ reuse current buffer.\n-      _internal_buffer_used = expected_total;\n-      assert(_size - _pos == io_buffer_max_size - expected_total, \"illegal resize of buffer\");\n-      _size -= _pos;\n-      _buffer += _pos;\n-      _pos = 0;\n-\n-      return;\n-    }\n-    \/\/ It is not possible here that expected_total is larger than io_buffer_max_size because\n-    \/\/ of limitation in write_xxx().\n-    assert(expected_total <= io_buffer_max_size, \"buffer overflow\");\n-    assert(_buffer - _buffer_base <= io_buffer_max_size, \"internal buffer overflow\");\n-    ParWriterBufferQueueElem* entry =\n-        (ParWriterBufferQueueElem*)os::malloc(sizeof(ParWriterBufferQueueElem), mtInternal);\n-    if (entry == nullptr) {\n-      set_error(\"Heap dumper can allocate memory\");\n-      return;\n-    }\n-    entry->_buffer = _buffer_base;\n-    entry->_used = expected_total;\n-    entry->_next = nullptr;\n-    \/\/ add to internal buffer queue\n-    _buffer_queue->enqueue(entry);\n-    _buffer_base =_buffer = nullptr;\n-    allocate_internal_buffer();\n-  }\n-\n-  void reclaim_entry(ParWriterBufferQueueElem* entry) {\n-    assert(entry != nullptr && entry->_buffer != nullptr, \"Invalid entry to reclaim\");\n-    os::free(entry->_buffer);\n-    entry->_buffer = nullptr;\n-    os::free(entry);\n-  }\n-\n-  void flush_buffer(char* buffer, size_t used) {\n-    assert(_lock->owner() == Thread::current(), \"flush buffer must hold lock\");\n-    size_t max = io_buffer_max_size;\n-    \/\/ get_new_buffer\n-    _backend_ptr->flush_external_buffer(buffer, used, max);\n-  }\n-\n-  bool should_flush_buf_list(bool force) {\n-    return force || _buffer_queue->length() > BackendFlushThreshold;\n-  }\n-\n-  void flush_to_backend(bool force) {\n-    \/\/ Guarantee there is only one writer updating the backend buffers.\n-    MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-    while (!_buffer_queue->is_empty()) {\n-      ParWriterBufferQueueElem* entry = _buffer_queue->dequeue();\n-      flush_buffer(entry->_buffer, entry->_used);\n-      \/\/ Delete buffer and entry.\n-      reclaim_entry(entry);\n-      entry = nullptr;\n-    }\n-    assert(_pos == 0, \"available buffer must be empty before flush\");\n-    \/\/ Flush internal buffer.\n-    if (_internal_buffer_used > 0) {\n-      flush_buffer(_buffer_base, _internal_buffer_used);\n-      os::free(_buffer_base);\n-      _pos = 0;\n-      _internal_buffer_used = 0;\n-      _buffer_base = _buffer = nullptr;\n-      \/\/ Allocate internal buffer for future use.\n-      allocate_internal_buffer();\n-    }\n+  if (result != nullptr) {\n+    set_error(result);\n@@ -882,1 +708,1 @@\n-};\n+}\n@@ -884,1 +710,8 @@\n-Monitor* ParDumpWriter::_lock = nullptr;\n+void DumpWriter::do_compress() {\n+  const char* msg = _compressor->compress(_buffer, _pos, _out_buffer, _out_size,\n+                                          _tmp_buffer, _tmp_size, &_out_pos);\n+\n+  if (msg != nullptr) {\n+    set_error(msg);\n+  }\n+}\n@@ -1616,67 +1449,0 @@\n-\/\/ Large object heap dump support.\n-\/\/ To avoid memory consumption, when dumping large objects such as huge array and\n-\/\/ large objects whose size are larger than LARGE_OBJECT_DUMP_THRESHOLD, the scanned\n-\/\/ partial object\/array data will be sent to the backend directly instead of caching\n-\/\/ the whole object\/array in the internal buffer.\n-\/\/ The HeapDumpLargeObjectList is used to save the large object when dumper scans\n-\/\/ the heap. The large objects could be added (push) parallelly by multiple dumpers,\n-\/\/ But they will be removed (popped) serially only by the VM thread.\n-class HeapDumpLargeObjectList : public CHeapObj<mtInternal> {\n- private:\n-  class HeapDumpLargeObjectListElem : public CHeapObj<mtInternal> {\n-   public:\n-    HeapDumpLargeObjectListElem(oop obj) : _obj(obj), _next(nullptr) { }\n-    oop _obj;\n-    HeapDumpLargeObjectListElem* _next;\n-  };\n-\n-  volatile HeapDumpLargeObjectListElem* _head;\n-\n- public:\n-  HeapDumpLargeObjectList() : _head(nullptr) { }\n-\n-  void atomic_push(oop obj) {\n-    assert (obj != nullptr, \"sanity check\");\n-    HeapDumpLargeObjectListElem* entry = new HeapDumpLargeObjectListElem(obj);\n-    if (entry == nullptr) {\n-      warning(\"failed to allocate element for large object list\");\n-      return;\n-    }\n-    assert (entry->_obj != nullptr, \"sanity check\");\n-    while (true) {\n-      volatile HeapDumpLargeObjectListElem* old_head = Atomic::load_acquire(&_head);\n-      HeapDumpLargeObjectListElem* new_head = entry;\n-      if (Atomic::cmpxchg(&_head, old_head, new_head) == old_head) {\n-        \/\/ successfully push\n-        new_head->_next = (HeapDumpLargeObjectListElem*)old_head;\n-        return;\n-      }\n-    }\n-  }\n-\n-  oop pop() {\n-    if (_head == nullptr) {\n-      return nullptr;\n-    }\n-    HeapDumpLargeObjectListElem* entry = (HeapDumpLargeObjectListElem*)_head;\n-    _head = _head->_next;\n-    assert (entry != nullptr, \"illegal larger object list entry\");\n-    oop ret = entry->_obj;\n-    delete entry;\n-    assert (ret != nullptr, \"illegal oop pointer\");\n-    return ret;\n-  }\n-\n-  void drain(ObjectClosure* cl) {\n-    while (_head !=  nullptr) {\n-      cl->do_object(pop());\n-    }\n-  }\n-\n-  bool is_empty() {\n-    return _head == nullptr;\n-  }\n-\n-  static const size_t LargeObjectSizeThreshold = 1 << 20; \/\/ 1 MB\n-};\n-\n@@ -1689,2 +1455,0 @@\n-  HeapDumpLargeObjectList* _list;\n-\n@@ -1692,1 +1456,1 @@\n-  bool is_large(oop o);\n+\n@@ -1694,1 +1458,1 @@\n-  HeapObjectDumper(AbstractDumpWriter* writer, HeapDumpLargeObjectList* list = nullptr) {\n+  HeapObjectDumper(AbstractDumpWriter* writer) {\n@@ -1696,1 +1460,0 @@\n-    _list = list;\n@@ -1716,7 +1479,0 @@\n-  \/\/ If large object list exists and it is large object\/array,\n-  \/\/ add oop into the list and skip scan. VM thread will process it later.\n-  if (_list != nullptr && is_large(o)) {\n-    _list->atomic_push(o);\n-    return;\n-  }\n-\n@@ -1735,23 +1491,0 @@\n-bool HeapObjectDumper::is_large(oop o) {\n-  size_t size = 0;\n-  if (o->is_instance()) {\n-    \/\/ Use o->size() * 8 as the upper limit of instance size to avoid iterating static fields\n-    size = o->size() * 8;\n-  } else if (o->is_objArray()) {\n-    objArrayOop array = objArrayOop(o);\n-    BasicType type = ArrayKlass::cast(array->klass())->element_type();\n-    assert(type >= T_BOOLEAN && type <= T_OBJECT, \"invalid array element type\");\n-    int length = array->length();\n-    int type_size = sizeof(address);\n-    size = (size_t)length * type_size;\n-  } else if (o->is_typeArray()) {\n-    typeArrayOop array = typeArrayOop(o);\n-    BasicType type = ArrayKlass::cast(array->klass())->element_type();\n-    assert(type >= T_BOOLEAN && type <= T_OBJECT, \"invalid array element type\");\n-    int length = array->length();\n-    int type_size = type2aelembytes(type);\n-    size = (size_t)length * type_size;\n-  }\n-  return size > HeapDumpLargeObjectList::LargeObjectSizeThreshold;\n-}\n-\n@@ -1761,1 +1494,0 @@\n-   bool     _started;\n@@ -1763,1 +1495,1 @@\n-   uint   _dumper_number;\n+   const uint   _dumper_number;\n@@ -1768,1 +1500,0 @@\n-     _started(false),\n@@ -1775,17 +1506,1 @@\n-   void wait_for_start_signal() {\n-     MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-     while (_started == false) {\n-       ml.wait();\n-     }\n-     assert(_started == true,  \"dumper woke up with wrong state\");\n-   }\n-\n-   void start_dump() {\n-     assert (_started == false, \"start dump with wrong state\");\n-     MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-     _started = true;\n-     ml.notify_all();\n-   }\n-\n-   void dumper_complete() {\n-     assert (_started == true, \"dumper complete with wrong state\");\n+   void dumper_complete(DumpWriter* local_writer, DumpWriter* global_writer) {\n@@ -1794,0 +1509,4 @@\n+     \/\/ propagate local error to global if any\n+     if (local_writer->has_error()) {\n+       global_writer->set_error(local_writer->error());\n+     }\n@@ -1798,1 +1517,0 @@\n-     assert (_started == true, \"wrong state when wait for dumper complete\");\n@@ -1803,1 +1521,0 @@\n-     _started = false;\n@@ -1807,0 +1524,99 @@\n+\/\/ DumpMerger merges separate dump files into a complete one\n+class DumpMerger : public StackObj {\n+private:\n+  DumpWriter* _writer;\n+  const char* _path;\n+  bool _has_error;\n+  int _dump_seq;\n+\n+private:\n+  void merge_file(char* path);\n+  void merge_done();\n+\n+public:\n+  DumpMerger(const char* path, DumpWriter* writer, int dump_seq) :\n+    _writer(writer),\n+    _path(path),\n+    _has_error(_writer->has_error()),\n+    _dump_seq(dump_seq) {}\n+\n+  void do_merge();\n+};\n+\n+void DumpMerger::merge_done() {\n+  \/\/ Writes the HPROF_HEAP_DUMP_END record.\n+  if (!_has_error) {\n+    DumperSupport::end_of_dump(_writer);\n+    _writer->flush();\n+  }\n+  _dump_seq = 0; \/\/reset\n+}\n+\n+void DumpMerger::merge_file(char* path) {\n+  assert(!SafepointSynchronize::is_at_safepoint(), \"merging happens outside safepoint\");\n+  TraceTime timer(\"Merge segmented heap file\", TRACETIME_LOG(Info, heapdump));\n+\n+  fileStream segment_fs(path, \"rb\");\n+  if (!segment_fs.is_open()) {\n+    log_error(heapdump)(\"Can not open segmented heap file %s during merging\", path);\n+    _writer->set_error(\"Can not open segmented heap file during merging\");\n+    _has_error = true;\n+    return;\n+  }\n+\n+  jlong total = 0;\n+  size_t cnt = 0;\n+  char read_buf[4096];\n+  while ((cnt = segment_fs.read(read_buf, 1, 4096)) != 0) {\n+    _writer->write_raw(read_buf, cnt);\n+    total += cnt;\n+  }\n+\n+  _writer->flush();\n+  if (segment_fs.fileSize() != total) {\n+    log_error(heapdump)(\"Merged heap dump %s is incomplete, expect %ld but read \" JLONG_FORMAT \" bytes\",\n+                        path, segment_fs.fileSize(), total);\n+    _writer->set_error(\"Merged heap dump is incomplete\");\n+    _has_error = true;\n+  }\n+}\n+\n+void DumpMerger::do_merge() {\n+  assert(!SafepointSynchronize::is_at_safepoint(), \"merging happens outside safepoint\");\n+  TraceTime timer(\"Merge heap files complete\", TRACETIME_LOG(Info, heapdump));\n+\n+  \/\/ Since contents in segmented heap file were already zipped, we don't need to zip\n+  \/\/ them again during merging.\n+  AbstractCompressor* saved_compressor = _writer->compressor();\n+  _writer->set_compressor(nullptr);\n+\n+  \/\/ merge segmented heap file and remove it anyway\n+  char path[JVM_MAXPATHLEN];\n+  for (int i = 0; i < _dump_seq; i++) {\n+    memset(path, 0, JVM_MAXPATHLEN);\n+    os::snprintf(path, JVM_MAXPATHLEN, \"%s.p%d\", _path, i);\n+    if (!_has_error) {\n+      merge_file(path);\n+    }\n+    remove(path);\n+  }\n+\n+  \/\/ restore compressor for further use\n+  _writer->set_compressor(saved_compressor);\n+  merge_done();\n+}\n+\n+\/\/ The VM operation wraps DumpMerger so that it could be performed by VM thread\n+class VM_HeapDumpMerge : public VM_Operation {\n+private:\n+  DumpMerger* _merger;\n+public:\n+  VM_HeapDumpMerge(DumpMerger* merger) : _merger(merger) {}\n+  VMOp_Type type() const { return VMOp_HeapDumpMerge; }\n+  \/\/ heap dump merge could happen outside safepoint\n+  virtual bool evaluate_at_safepoint() const { return false; }\n+  void doit() {\n+    _merger->do_merge();\n+  }\n+};\n+\n@@ -1819,0 +1635,1 @@\n+  volatile int            _dump_seq;\n@@ -1821,1 +1638,0 @@\n-  uint                    _num_writer_threads;\n@@ -1824,6 +1640,0 @@\n-  HeapDumpLargeObjectList* _large_object_list;\n-\n-  \/\/ VMDumperType is for thread that dumps both heap and non-heap data.\n-  static const size_t VMDumperType = 0;\n-  static const size_t WriterType = 1;\n-  static const size_t DumperType = 2;\n@@ -1832,46 +1642,2 @@\n-\n-  size_t get_worker_type(uint worker_id) {\n-    assert(_num_writer_threads >= 1, \"Must be at least one writer\");\n-    \/\/ worker id of VMDumper that dump heap and non-heap data\n-    if (worker_id == VMDumperWorkerId) {\n-      return VMDumperType;\n-    }\n-\n-    \/\/ worker id of dumper starts from 1, which only dump heap datar\n-    if (worker_id < _num_dumper_threads) {\n-      return DumperType;\n-    }\n-\n-    \/\/ worker id of writer starts from _num_dumper_threads\n-    return WriterType;\n-  }\n-\n-  void prepare_parallel_dump(uint num_total) {\n-    assert (_dumper_controller == nullptr, \"dumper controller must be null\");\n-    assert (num_total > 0, \"active workers number must >= 1\");\n-    \/\/ Dumper threads number must not be larger than active workers number.\n-    if (num_total < _num_dumper_threads) {\n-      _num_dumper_threads = num_total - 1;\n-    }\n-    \/\/ Calculate dumper and writer threads number.\n-    _num_writer_threads = num_total - _num_dumper_threads;\n-    \/\/ If dumper threads number is 1, only the VMThread works as a dumper.\n-    \/\/ If dumper threads number is equal to active workers, need at lest one worker thread as writer.\n-    if (_num_dumper_threads > 0 && _num_writer_threads == 0) {\n-      _num_writer_threads = 1;\n-      _num_dumper_threads = num_total - _num_writer_threads;\n-    }\n-    \/\/ Prepare parallel writer.\n-    if (_num_dumper_threads > 1) {\n-      ParDumpWriter::before_work();\n-      \/\/ Number of dumper threads that only iterate heap.\n-      uint _heap_only_dumper_threads = _num_dumper_threads - 1 \/* VMDumper thread *\/;\n-      _dumper_controller = new (std::nothrow) DumperController(_heap_only_dumper_threads);\n-    }\n-  }\n-\n-  void finish_parallel_dump() {\n-    if (_num_dumper_threads > 1) {\n-      ParDumpWriter::after_work();\n-    }\n-  }\n+  \/\/ VM dumper dumps both heap and non-heap data, other dumpers dump heap-only data.\n+  static bool is_vm_dumper(uint worker_id) { return worker_id == VMDumperWorkerId; }\n@@ -1882,0 +1648,1 @@\n+\n@@ -1895,0 +1662,3 @@\n+  \/\/ create dump writer for every parallel dump thread\n+  DumpWriter* create_local_writer();\n+\n@@ -1912,3 +1682,0 @@\n-  \/\/ large objects\n-  void dump_large_objects(ObjectClosure* writer);\n-\n@@ -1927,0 +1694,1 @@\n+    _dump_seq = 0;\n@@ -1930,1 +1698,0 @@\n-    _large_object_list = new (std::nothrow) HeapDumpLargeObjectList();\n@@ -1957,1 +1724,0 @@\n-    delete _large_object_list;\n@@ -1959,0 +1725,3 @@\n+  int dump_seq()           { return _dump_seq; }\n+  bool is_parallel_dump()  { return _num_dumper_threads > 1; }\n+  bool can_parallel_dump(WorkerThreads* workers);\n@@ -2150,0 +1919,26 @@\n+bool VM_HeapDumper::can_parallel_dump(WorkerThreads* workers) {\n+  bool can_parallel = true;\n+  uint num_active_workers = workers != nullptr ? workers->active_workers() : 0;\n+  uint num_requested_dump_threads = _num_dumper_threads;\n+  \/\/ check if we can dump in parallel based on requested and active threads\n+  if (num_active_workers <= 1 || num_requested_dump_threads <= 1) {\n+    _num_dumper_threads = 1;\n+    can_parallel = false;\n+  } else {\n+    \/\/ check if we have extra path room to accommodate segmented heap files\n+    const char* base_path = writer()->get_file_path();\n+    assert(base_path != nullptr, \"sanity check\");\n+    if ((strlen(base_path) + 7\/*.p\\d\\d\\d\\d\\0*\/) >= JVM_MAXPATHLEN) {\n+      _num_dumper_threads = 1;\n+      can_parallel = false;\n+    } else {\n+      _num_dumper_threads = clamp(num_requested_dump_threads, 2U, num_active_workers);\n+    }\n+  }\n+\n+  log_info(heapdump)(\"Requested dump threads %u, active dump threads %u, \"\n+                     \"actual dump threads %u, parallelism %s\",\n+                     num_requested_dump_threads, num_active_workers,\n+                     _num_dumper_threads, can_parallel ? \"true\" : \"false\");\n+  return can_parallel;\n+}\n@@ -2196,6 +1991,2 @@\n-\n-  if (workers == nullptr) {\n-    \/\/ Use serial dump, set dumper threads and writer threads number to 1.\n-    _num_dumper_threads=1;\n-    _num_writer_threads=1;\n-    work(0);\n+  if (!can_parallel_dump(workers)) {\n+    work(VMDumperWorkerId);\n@@ -2203,10 +1994,6 @@\n-    prepare_parallel_dump(workers->active_workers());\n-    if (_num_dumper_threads > 1) {\n-      ParallelObjectIterator poi(_num_dumper_threads);\n-      _poi = &poi;\n-      workers->run_task(this);\n-      _poi = nullptr;\n-    } else {\n-      workers->run_task(this);\n-    }\n-    finish_parallel_dump();\n+    uint heap_only_dumper_threads = _num_dumper_threads - 1 \/* VMDumper thread *\/;\n+    _dumper_controller = new (std::nothrow) DumperController(heap_only_dumper_threads);\n+    ParallelObjectIterator poi(_num_dumper_threads);\n+    _poi = &poi;\n+    workers->run_task(this, _num_dumper_threads);\n+    _poi = nullptr;\n@@ -2220,0 +2007,16 @@\n+\/\/ prepare DumpWriter for every parallel dump thread\n+DumpWriter* VM_HeapDumper::create_local_writer() {\n+  char* path = NEW_RESOURCE_ARRAY(char, JVM_MAXPATHLEN);\n+  memset(path, 0, JVM_MAXPATHLEN);\n+\n+  \/\/ generate segmented heap file path\n+  const char* base_path = writer()->get_file_path();\n+  AbstractCompressor* compressor = writer()->compressor();\n+  int seq = Atomic::fetch_then_add(&_dump_seq, 1);\n+  os::snprintf(path, JVM_MAXPATHLEN, \"%s.p%d\", base_path, seq);\n+\n+  \/\/ create corresponding writer for that\n+  DumpWriter* local_writer = new DumpWriter(path, writer()->is_overwrite(), compressor);\n+  return local_writer;\n+}\n+\n@@ -2221,10 +2024,3 @@\n-  if (worker_id != 0) {\n-    if (get_worker_type(worker_id) == WriterType) {\n-      writer()->writer_loop();\n-      return;\n-    }\n-    if (_num_dumper_threads > 1 && get_worker_type(worker_id) == DumperType) {\n-      _dumper_controller->wait_for_start_signal();\n-    }\n-  } else {\n-    \/\/ The worker 0 on all non-heap data dumping and part of heap iteration.\n+  \/\/ VM Dumper works on all non-heap data dumping and part of heap iteration.\n+  if (is_vm_dumper(worker_id)) {\n+    TraceTime timer(\"Dump non-objects\", TRACETIME_LOG(Info, heapdump));\n@@ -2274,0 +2070,2 @@\n+\n+  \/\/ Heap iteration.\n@@ -2280,1 +2078,4 @@\n-  if (_num_dumper_threads <= 1) {\n+  if (!is_parallel_dump()) {\n+    assert(is_vm_dumper(worker_id), \"must be\");\n+    \/\/ == Serial dump\n+    TraceTime timer(\"Dump heap objects\", TRACETIME_LOG(Info, heapdump));\n@@ -2283,0 +2084,4 @@\n+    writer()->finish_dump_segment();\n+    \/\/ Writes the HPROF_HEAP_DUMP_END record because merge does not happen in serial dump\n+    DumperSupport::end_of_dump(writer());\n+    writer()->flush();\n@@ -2284,28 +2089,15 @@\n-    assert(get_worker_type(worker_id) == DumperType\n-          || get_worker_type(worker_id) == VMDumperType,\n-          \"must be dumper thread to do heap iteration\");\n-    if (get_worker_type(worker_id) == VMDumperType) {\n-      \/\/ Clear global writer's buffer.\n-      writer()->finish_dump_segment(true);\n-      \/\/ Notify dumpers to start heap iteration.\n-      _dumper_controller->start_dump();\n-    }\n-    \/\/ Heap iteration.\n-    {\n-       ParDumpWriter pw(writer());\n-       {\n-         HeapObjectDumper obj_dumper(&pw, _large_object_list);\n-         _poi->object_iterate(&obj_dumper, worker_id);\n-       }\n-\n-       if (get_worker_type(worker_id) == VMDumperType) {\n-         _dumper_controller->wait_all_dumpers_complete();\n-         \/\/ clear internal buffer;\n-         pw.finish_dump_segment(true);\n-         \/\/ refresh the global_writer's buffer and position;\n-         writer()->refresh();\n-       } else {\n-         pw.finish_dump_segment(true);\n-         _dumper_controller->dumper_complete();\n-         return;\n-       }\n+    \/\/ == Parallel dump\n+    ResourceMark rm;\n+    TraceTime timer(\"Dump heap objects in parallel\", TRACETIME_LOG(Info, heapdump));\n+    DumpWriter* local_writer = is_vm_dumper(worker_id) ? writer() : create_local_writer();\n+    if (!local_writer->has_error()) {\n+      HeapObjectDumper obj_dumper(local_writer);\n+      _poi->object_iterate(&obj_dumper, worker_id);\n+      local_writer->finish_dump_segment();\n+      local_writer->flush();\n+    }\n+    if (is_vm_dumper(worker_id)) {\n+      _dumper_controller->wait_all_dumpers_complete();\n+    } else {\n+      _dumper_controller->dumper_complete(local_writer, writer());\n+      return;\n@@ -2314,9 +2106,2 @@\n-\n-  assert(get_worker_type(worker_id) == VMDumperType, \"Heap dumper must be VMDumper\");\n-  \/\/ Use writer() rather than ParDumpWriter to avoid memory consumption.\n-  HeapObjectDumper obj_dumper(writer());\n-  dump_large_objects(&obj_dumper);\n-  \/\/ Writes the HPROF_HEAP_DUMP_END record.\n-  DumperSupport::end_of_dump(writer());\n-  \/\/ We are done with writing. Release the worker threads.\n-  writer()->deactivate();\n+  \/\/ At this point, all fragments of the heapdump have been written to separate files.\n+  \/\/ We need to merge them into a complete heapdump and write HPROF_HEAP_DUMP_END at that time.\n@@ -2383,5 +2168,0 @@\n-\/\/ dump the large objects.\n-void VM_HeapDumper::dump_large_objects(ObjectClosure* cl) {\n-  _large_object_list->drain(cl);\n-}\n-\n@@ -2411,1 +2191,1 @@\n-  DumpWriter writer(new (std::nothrow) FileWriter(path, overwrite), compressor);\n+  DumpWriter writer(path, overwrite, compressor);\n@@ -2422,1 +2202,1 @@\n-  \/\/ generate the dump\n+  \/\/ generate the segmented heap dump into separate files\n@@ -2424,6 +2204,1 @@\n-  if (Thread::current()->is_VM_thread()) {\n-    assert(SafepointSynchronize::is_at_safepoint(), \"Expected to be called at a safepoint\");\n-    dumper.doit();\n-  } else {\n-    VMThread::execute(&dumper);\n-  }\n+  VMThread::execute(&dumper);\n@@ -2434,0 +2209,25 @@\n+  \/\/ For serial dump, once VM_HeapDumper completes, the whole heap dump process\n+  \/\/ is done, no further phases needed. For parallel dump, the whole heap dump\n+  \/\/ process is done in two phases\n+  \/\/\n+  \/\/ Phase 1: Concurrent threads directly write heap data to multiple heap files.\n+  \/\/          This is done by VM_HeapDumper, which is performed within safepoint.\n+  \/\/\n+  \/\/ Phase 2: Merge multiple heap files into one complete heap dump file.\n+  \/\/          This is done by DumpMerger, which is performed outside safepoint\n+  if (dumper.is_parallel_dump()) {\n+    DumpMerger merger(path, &writer, dumper.dump_seq());\n+    Thread* current_thread = Thread::current();\n+    if (current_thread->is_AttachListener_thread()) {\n+      \/\/ perform heapdump file merge operation in the current thread prevents us\n+      \/\/ from occupying the VM Thread, which in turn affects the occurrence of\n+      \/\/ GC and other VM operations.\n+      merger.do_merge();\n+    } else {\n+      \/\/ otherwise, performs it by VM thread\n+      VM_HeapDumpMerge op(&merger);\n+      VMThread::execute(&op);\n+    }\n+    set_error(writer.error());\n+  }\n+\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":331,"deletions":531,"binary":false,"changes":862,"status":"modified"},{"patch":"@@ -32,12 +32,0 @@\n-\/\/ HeapDumper is used to dump the java heap to file in HPROF binary format:\n-\/\/\n-\/\/  { HeapDumper dumper(true \/* full GC before heap dump *\/);\n-\/\/    if (dumper.dump(\"\/export\/java.hprof\")) {\n-\/\/      ResourceMark rm;\n-\/\/      tty->print_cr(\"Dump failed: %s\", dumper.error_as_C_string());\n-\/\/    } else {\n-\/\/      \/\/ dump succeeded\n-\/\/    }\n-\/\/  }\n-\/\/\n-\n@@ -46,0 +34,1 @@\n+\/\/ HeapDumper is used to dump the java heap to file in HPROF binary format\n@@ -83,0 +72,5 @@\n+\n+  \/\/ Parallel thread number for heap dump, initialize based on active processor count.\n+  static uint default_num_of_dump_threads() {\n+    return MAX2<uint>(1, (uint)os::initial_active_processor_count() * 3 \/ 8);\n+  }\n","filename":"src\/hotspot\/share\/services\/heapDumper.hpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -137,360 +137,0 @@\n-\n-WorkList::WorkList() {\n-  _head._next = &_head;\n-  _head._prev = &_head;\n-}\n-\n-void WorkList::insert(WriteWork* before, WriteWork* work) {\n-  work->_prev = before;\n-  work->_next = before->_next;\n-  before->_next = work;\n-  work->_next->_prev = work;\n-}\n-\n-WriteWork* WorkList::remove(WriteWork* work) {\n-  if (work != nullptr) {\n-    assert(work->_next != work, \"Invalid next\");\n-    assert(work->_prev != work, \"Invalid prev\");\n-    work->_prev->_next = work->_next;;\n-    work->_next->_prev = work->_prev;\n-    work->_next = nullptr;\n-    work->_prev = nullptr;\n-  }\n-\n-  return work;\n-}\n-\n-void WorkList::add_by_id(WriteWork* work) {\n-  if (is_empty()) {\n-    add_first(work);\n-  } else {\n-    WriteWork* last_curr = &_head;\n-    WriteWork* curr = _head._next;\n-\n-    while (curr->_id < work->_id) {\n-      last_curr = curr;\n-      curr = curr->_next;\n-\n-      if (curr == &_head) {\n-        add_last(work);\n-        return;\n-      }\n-    }\n-\n-    insert(last_curr, work);\n-  }\n-}\n-\n-\n-\n-CompressionBackend::CompressionBackend(AbstractWriter* writer,\n-     AbstractCompressor* compressor, size_t block_size, size_t max_waste) :\n-  _active(false),\n-  _err(nullptr),\n-  _nr_of_threads(0),\n-  _works_created(0),\n-  _work_creation_failed(false),\n-  _id_to_write(0),\n-  _next_id(0),\n-  _in_size(block_size),\n-  _max_waste(max_waste),\n-  _out_size(0),\n-  _tmp_size(0),\n-  _written(0),\n-  _writer(writer),\n-  _compressor(compressor),\n-  _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"HProfCompressionBackend_lock\")) {\n-  if (_writer == nullptr) {\n-    set_error(\"Could not allocate writer\");\n-  } else if (_lock == nullptr) {\n-    set_error(\"Could not allocate lock\");\n-  } else {\n-    set_error(_writer->open_writer());\n-  }\n-\n-  if (_compressor != nullptr) {\n-    set_error(_compressor->init(_in_size, &_out_size, &_tmp_size));\n-  }\n-\n-  _current = allocate_work(_in_size, _out_size, _tmp_size);\n-\n-  if (_current == nullptr) {\n-    set_error(\"Could not allocate memory for buffer\");\n-  }\n-\n-  _active = (_err == nullptr);\n-}\n-\n-CompressionBackend::~CompressionBackend() {\n-  assert(!_active, \"Must not be active by now\");\n-  assert(_nr_of_threads == 0, \"Must have no active threads\");\n-  assert(_to_compress.is_empty() && _finished.is_empty(), \"Still work to do\");\n-\n-  free_work_list(&_unused);\n-  free_work(_current);\n-  assert(_works_created == 0, \"All work must have been freed\");\n-\n-  delete _compressor;\n-  delete _writer;\n-  delete _lock;\n-}\n-\n-void CompressionBackend::flush_buffer(MonitorLocker* ml) {\n-\n-  \/\/ Make sure we write the last partially filled buffer.\n-  if ((_current != nullptr) && (_current->_in_used > 0)) {\n-    _current->_id = _next_id++;\n-    _to_compress.add_last(_current);\n-    _current = nullptr;\n-    ml->notify_all();\n-  }\n-\n-  \/\/ Wait for the threads to drain the compression work list and do some work yourself.\n-  while (!_to_compress.is_empty()) {\n-    do_foreground_work();\n-  }\n-}\n-\n-void CompressionBackend::flush_buffer() {\n-  assert(_active, \"Must be active\");\n-\n-  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-  flush_buffer(&ml);\n-}\n-\n-void CompressionBackend::deactivate() {\n-  assert(_active, \"Must be active\");\n-\n-  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-  flush_buffer(&ml);\n-\n-  _active = false;\n-  ml.notify_all();\n-}\n-\n-void CompressionBackend::thread_loop() {\n-  {\n-    MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-    _nr_of_threads++;\n-  }\n-\n-  WriteWork* work;\n-  while ((work = get_work()) != nullptr) {\n-    do_compress(work);\n-    finish_work(work);\n-  }\n-\n-  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-  _nr_of_threads--;\n-  assert(_nr_of_threads >= 0, \"Too many threads finished\");\n-}\n-\n-void CompressionBackend::set_error(char const* new_error) {\n-  if ((new_error != nullptr) && (_err == nullptr)) {\n-    _err = new_error;\n-  }\n-}\n-\n-WriteWork* CompressionBackend::allocate_work(size_t in_size, size_t out_size,\n-                                             size_t tmp_size) {\n-  WriteWork* result = (WriteWork*) os::malloc(sizeof(WriteWork), mtInternal);\n-\n-  if (result == nullptr) {\n-    _work_creation_failed = true;\n-    return nullptr;\n-  }\n-\n-  _works_created++;\n-  result->_in = (char*) os::malloc(in_size, mtInternal);\n-  result->_in_max = in_size;\n-  result->_in_used = 0;\n-  result->_out = nullptr;\n-  result->_tmp = nullptr;\n-\n-  if (result->_in == nullptr) {\n-    goto fail;\n-  }\n-\n-  if (out_size > 0) {\n-    result->_out = (char*) os::malloc(out_size, mtInternal);\n-    result->_out_used = 0;\n-    result->_out_max = out_size;\n-\n-    if (result->_out == nullptr) {\n-      goto fail;\n-    }\n-  }\n-\n-  if (tmp_size > 0) {\n-    result->_tmp = (char*) os::malloc(tmp_size, mtInternal);\n-    result->_tmp_max = tmp_size;\n-\n-    if (result->_tmp == nullptr) {\n-      goto fail;\n-    }\n-  }\n-\n-  return result;\n-\n-fail:\n-  free_work(result);\n-  _work_creation_failed = true;\n-  return nullptr;\n-}\n-\n-void CompressionBackend::free_work(WriteWork* work) {\n-  if (work != nullptr) {\n-    os::free(work->_in);\n-    os::free(work->_out);\n-    os::free(work->_tmp);\n-    os::free(work);\n-    --_works_created;\n-  }\n-}\n-\n-void CompressionBackend::free_work_list(WorkList* list) {\n-  while (!list->is_empty()) {\n-    free_work(list->remove_first());\n-  }\n-}\n-\n-void CompressionBackend::do_foreground_work() {\n-  assert(!_to_compress.is_empty(), \"Must have work to do\");\n-  assert(_lock->owned_by_self(), \"Must have the lock\");\n-\n-  WriteWork* work = _to_compress.remove_first();\n-  MutexUnlocker mu(_lock, Mutex::_no_safepoint_check_flag);\n-  do_compress(work);\n-  finish_work(work);\n-}\n-\n-WriteWork* CompressionBackend::get_work() {\n-  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-\n-  while (_active && _to_compress.is_empty()) {\n-    ml.wait();\n-  }\n-\n-  return _to_compress.remove_first();\n-}\n-\n-void CompressionBackend::flush_external_buffer(char* buffer, size_t used, size_t max) {\n-  assert(buffer != nullptr && used != 0 && max != 0, \"Invalid data send to compression backend\");\n-  assert(_active == true, \"Backend must be active when flushing external buffer\");\n-  char* buf;\n-  size_t tmp_used = 0;\n-  size_t tmp_max = 0;\n-\n-  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-  \/\/ First try current buffer. Use it if empty.\n-  if (_current->_in_used == 0) {\n-    buf = _current->_in;\n-  } else {\n-    \/\/ If current buffer is not clean, flush it.\n-    MutexUnlocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-    get_new_buffer(&buf, &tmp_used, &tmp_max, true);\n-  }\n-  assert (_current->_in != nullptr && _current->_in_max >= max &&\n-          _current->_in_used == 0, \"Invalid buffer from compression backend\");\n-  \/\/ Copy data to backend buffer.\n-  memcpy(buf, buffer, used);\n-\n-  assert(_current->_in == buf, \"Must be current\");\n-  _current->_in_used += used;\n-}\n-\n-void CompressionBackend::get_new_buffer(char** buffer, size_t* used, size_t* max, bool force_reset) {\n-  if (_active) {\n-    MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-    if (*used > 0 || force_reset) {\n-      _current->_in_used += *used;\n-      \/\/ Check if we do not waste more than _max_waste. If yes, write the buffer.\n-      \/\/ Otherwise return the rest of the buffer as the new buffer.\n-      if (_current->_in_max - _current->_in_used <= _max_waste || force_reset) {\n-        _current->_id = _next_id++;\n-        _to_compress.add_last(_current);\n-        _current = nullptr;\n-        ml.notify_all();\n-      } else {\n-        *buffer = _current->_in + _current->_in_used;\n-        *used = 0;\n-        *max = _current->_in_max - _current->_in_used;\n-        return;\n-      }\n-    }\n-\n-    while ((_current == nullptr) && _unused.is_empty() && _active) {\n-      \/\/ Add more work objects if needed.\n-      if (!_work_creation_failed && (_works_created <= _nr_of_threads)) {\n-        WriteWork* work = allocate_work(_in_size, _out_size, _tmp_size);\n-\n-        if (work != nullptr) {\n-          _unused.add_first(work);\n-        }\n-      } else if (!_to_compress.is_empty() && (_nr_of_threads == 0)) {\n-        do_foreground_work();\n-      } else {\n-        ml.wait();\n-      }\n-    }\n-\n-    if (_current == nullptr) {\n-      _current = _unused.remove_first();\n-    }\n-\n-    if (_current != nullptr) {\n-      _current->_in_used = 0;\n-      _current->_out_used = 0;\n-      *buffer = _current->_in;\n-      *used = 0;\n-      *max = _current->_in_max;\n-\n-      return;\n-    }\n-  }\n-\n-  *buffer = nullptr;\n-  *used = 0;\n-  *max = 0;\n-\n-  return;\n-}\n-\n-void CompressionBackend::do_compress(WriteWork* work) {\n-  if (_compressor != nullptr) {\n-    char const* msg = _compressor->compress(work->_in, work->_in_used, work->_out,\n-                                            work->_out_max,\n-    work->_tmp, _tmp_size, &work->_out_used);\n-\n-    if (msg != nullptr) {\n-      MutexLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-      set_error(msg);\n-    }\n-  }\n-}\n-\n-void CompressionBackend::finish_work(WriteWork* work) {\n-  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-\n-  _finished.add_by_id(work);\n-\n-  \/\/ Write all finished works as far as we can.\n-  while (!_finished.is_empty() && (_finished.first()->_id == _id_to_write)) {\n-    WriteWork* to_write = _finished.remove_first();\n-    size_t size = _compressor == nullptr ? to_write->_in_used : to_write->_out_used;\n-    char* p = _compressor == nullptr ? to_write->_in : to_write->_out;\n-    char const* msg = nullptr;\n-\n-    if (_err == nullptr) {\n-      _written += size;\n-      MutexUnlocker mu(_lock, Mutex::_no_safepoint_check_flag);\n-      msg = _writer->write_buf(p, (ssize_t) size);\n-    }\n-\n-    set_error(msg);\n-    _unused.add_first(to_write);\n-    _id_to_write++;\n-  }\n-\n-  ml.notify_all();\n-}\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":0,"deletions":360,"binary":false,"changes":360,"status":"modified"},{"patch":"@@ -77,0 +77,4 @@\n+\n+  const char* get_file_path() { return _path; }\n+\n+  bool is_overwrite() const { return _overwrite; }\n@@ -100,141 +104,0 @@\n-\n-\/\/ The data needed to write a single buffer (and compress it optionally).\n-struct WriteWork {\n-  \/\/ The id of the work.\n-  int64_t _id;\n-\n-  \/\/ The input buffer where the raw data is\n-  char* _in;\n-  size_t _in_used;\n-  size_t _in_max;\n-\n-  \/\/ The output buffer where the compressed data is. Is null when compression is disabled.\n-  char* _out;\n-  size_t _out_used;\n-  size_t _out_max;\n-\n-  \/\/ The temporary space needed for compression. Is null when compression is disabled.\n-  char* _tmp;\n-  size_t _tmp_max;\n-\n-  \/\/ Used to link WriteWorks into lists.\n-  WriteWork* _next;\n-  WriteWork* _prev;\n-};\n-\n-\/\/ A list for works.\n-class WorkList {\n-private:\n-  WriteWork _head;\n-\n-  void insert(WriteWork* before, WriteWork* work);\n-  WriteWork* remove(WriteWork* work);\n-\n-public:\n-  WorkList();\n-\n-  \/\/ Return true if the list is empty.\n-  bool is_empty() { return _head._next == &_head; }\n-\n-  \/\/ Adds to the beginning of the list.\n-  void add_first(WriteWork* work) { insert(&_head, work); }\n-\n-  \/\/ Adds to the end of the list.\n-  void add_last(WriteWork* work) { insert(_head._prev, work); }\n-\n-  \/\/ Adds so the ids are ordered.\n-  void add_by_id(WriteWork* work);\n-\n-  \/\/ Returns the first element.\n-  WriteWork* first() { return is_empty() ? nullptr : _head._next; }\n-\n-  \/\/ Returns the last element.\n-  WriteWork* last() { return is_empty() ? nullptr : _head._prev; }\n-\n-  \/\/ Removes the first element. Returns null if empty.\n-  WriteWork* remove_first() { return remove(first()); }\n-\n-  \/\/ Removes the last element. Returns null if empty.\n-  WriteWork* remove_last() { return remove(first()); }\n-};\n-\n-\n-class Monitor;\n-\n-\/\/ This class is used by the DumpWriter class. It supplies the DumpWriter with\n-\/\/ chunks of memory to write the heap dump data into. When the DumpWriter needs a\n-\/\/ new memory chunk, it calls get_new_buffer(), which commits the old chunk used\n-\/\/ and returns a new chunk. The old chunk is then added to a queue to be compressed\n-\/\/ and then written in the background.\n-class CompressionBackend : StackObj {\n-  bool _active;\n-  char const * _err;\n-\n-  int _nr_of_threads;\n-  int _works_created;\n-  bool _work_creation_failed;\n-\n-  int64_t _id_to_write;\n-  int64_t _next_id;\n-\n-  size_t _in_size;\n-  size_t _max_waste;\n-  size_t _out_size;\n-  size_t _tmp_size;\n-\n-  size_t _written;\n-\n-  AbstractWriter* const _writer;\n-  AbstractCompressor* const _compressor;\n-\n-  Monitor* const _lock;\n-\n-  WriteWork* _current;\n-  WorkList _to_compress;\n-  WorkList _unused;\n-  WorkList _finished;\n-\n-  void set_error(char const* new_error);\n-\n-  WriteWork* allocate_work(size_t in_size, size_t out_size, size_t tmp_size);\n-  void free_work(WriteWork* work);\n-  void free_work_list(WorkList* list);\n-\n-  void do_foreground_work();\n-  WriteWork* get_work();\n-  void do_compress(WriteWork* work);\n-  void finish_work(WriteWork* work);\n-  void flush_buffer(MonitorLocker* ml);\n-\n-public:\n-  \/\/ compressor can be null if no compression is used.\n-  \/\/ Takes ownership of the writer and compressor.\n-  \/\/ block_size is the buffer size of a WriteWork.\n-  \/\/ max_waste is the maximum number of bytes to leave\n-  \/\/ empty in the buffer when it is written.\n-  CompressionBackend(AbstractWriter* writer, AbstractCompressor* compressor,\n-    size_t block_size, size_t max_waste);\n-\n-  ~CompressionBackend();\n-\n-  size_t get_written() const { return _written; }\n-\n-  char const* error() const { return _err; }\n-\n-  \/\/ Sets up an internal buffer, fills with external buffer, and sends to compressor.\n-  void flush_external_buffer(char* buffer, size_t used, size_t max);\n-\n-  \/\/ Commits the old buffer (using the value in *used) and sets up a new one.\n-  void get_new_buffer(char** buffer, size_t* used, size_t* max, bool force_reset = false);\n-\n-  \/\/ The entry point for a worker thread.\n-  void thread_loop();\n-\n-  \/\/ Shuts down the backend, releasing all threads.\n-  void deactivate();\n-\n-  \/\/ Flush all compressed data in buffer to file\n-  void flush_buffer();\n-};\n-\n-\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.hpp","additions":4,"deletions":141,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -1337,0 +1337,4 @@\n+template<typename K> int primitive_compare(const K& k0, const K& k1) {\n+  return ((k0 < k1) ? -1 : (k0 == k1) ? 0 : 1);\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1844,0 +1844,1 @@\n+          close(fd);\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -111,0 +112,1 @@\n+    @Override\n@@ -112,5 +114,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= \"des\".hashCode());\n+        return Arrays.hashCode(this.key) ^ \"des\".hashCode();\n@@ -119,0 +117,1 @@\n+    @Override\n@@ -123,1 +122,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -126,1 +125,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -130,1 +129,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESKey.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -110,0 +111,1 @@\n+    @Override\n@@ -111,5 +113,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= \"desede\".hashCode());\n+        return Arrays.hashCode(this.key) ^ \"desede\".hashCode();\n@@ -118,0 +116,1 @@\n+    @Override\n@@ -122,1 +121,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -125,1 +124,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -130,1 +129,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeKey.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,0 +290,1 @@\n+    @Override\n@@ -294,0 +295,1 @@\n+    @Override\n@@ -297,1 +299,1 @@\n-        if (!(obj instanceof javax.crypto.interfaces.DHPrivateKey)) {\n+        if (!(obj instanceof javax.crypto.interfaces.DHPrivateKey other)) {\n@@ -300,2 +302,0 @@\n-        javax.crypto.interfaces.DHPrivateKey other =\n-                (javax.crypto.interfaces.DHPrivateKey) obj;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPrivateKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,0 +282,1 @@\n+    @Override\n@@ -286,0 +287,1 @@\n+    @Override\n@@ -289,1 +291,1 @@\n-        if (!(obj instanceof javax.crypto.interfaces.DHPublicKey)) {\n+        if (!(obj instanceof javax.crypto.interfaces.DHPublicKey other)) {\n@@ -293,2 +295,0 @@\n-        javax.crypto.interfaces.DHPublicKey other =\n-            (javax.crypto.interfaces.DHPublicKey) obj;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPublicKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,0 +108,1 @@\n+    @Override\n@@ -109,5 +110,2 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode());\n+        return Arrays.hashCode(this.key)\n+                ^ getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode();\n@@ -116,0 +114,1 @@\n+    @Override\n@@ -120,1 +119,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -123,2 +122,0 @@\n-        SecretKey that = (SecretKey)obj;\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKey.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-                    if (this.getClass() != obj.getClass()) return false;\n+                    if (obj == null || this.getClass() != obj.getClass()) return false;\n@@ -250,0 +250,1 @@\n+    @Override\n@@ -252,6 +253,2 @@\n-            int retval = 0;\n-            for (int i = 1; i < this.key.length; i++) {\n-                retval += this.key[i] * i;\n-            }\n-            return (retval ^= getAlgorithm().toLowerCase\n-                    (Locale.ENGLISH).hashCode());\n+            return Arrays.hashCode(this.key)\n+                    ^ getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode();\n@@ -264,0 +261,1 @@\n+    @Override\n@@ -270,1 +268,1 @@\n-            if (!(obj instanceof SecretKey)) {\n+            if (!(obj instanceof SecretKey that)) {\n@@ -274,2 +272,0 @@\n-            SecretKey that = (SecretKey) obj;\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBKDF2KeyImpl.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -3349,1 +3349,1 @@\n-            exp_delta = twoToTheDoubleScaleDown;\n+            exp_delta = 0x1p-512;\n@@ -3354,1 +3354,1 @@\n-            exp_delta = twoToTheDoubleScaleUp;\n+            exp_delta = 0x1p512;\n@@ -3423,4 +3423,0 @@\n-    \/\/ Constants used in scalb\n-    static double twoToTheDoubleScaleUp = powerOfTwoD(512);\n-    static double twoToTheDoubleScaleDown = powerOfTwoD(-512);\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Math.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AddressLayout.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,3 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -21,3 +21,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -25,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/PaddingLayout.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.nio.ByteOrder;\n@@ -93,1 +92,1 @@\n-        return allocateFrom(str, sun.nio.cs.UTF_8.INSTANCE);\n+        return allocateFrom(str, StandardCharsets.UTF_8);\n@@ -114,1 +113,1 @@\n-     * @implSpec the default implementation for this method copies the contents of the provided Java string\n+     * @implSpec The default implementation for this method copies the contents of the provided Java string\n@@ -128,12 +127,3 @@\n-        MemorySegment segment;\n-        int length;\n-        if (StringSupport.bytesCompatible(str, charset)) {\n-            length = str.length();\n-            segment = allocateNoInit(length + termCharSize);\n-            StringSupport.copyToSegmentRaw(str, segment, 0);\n-        } else {\n-            byte[] bytes = str.getBytes(charset);\n-            length = bytes.length;\n-            segment = allocateNoInit(bytes.length + termCharSize);\n-            MemorySegment.copy(bytes, 0, segment, ValueLayout.JAVA_BYTE, 0, bytes.length);\n-        }\n+        byte[] bytes = str.getBytes(charset);\n+        MemorySegment segment = allocateNoInit(bytes.length + termCharSize);\n+        MemorySegment.copy(bytes, 0, segment, ValueLayout.JAVA_BYTE, 0, bytes.length);\n@@ -141,1 +131,1 @@\n-            segment.set(ValueLayout.JAVA_BYTE, length + i, (byte)0);\n+            segment.set(ValueLayout.JAVA_BYTE, bytes.length + i, (byte)0);\n@@ -147,2 +137,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given byte value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code byte} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -150,2 +148,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -155,3 +152,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -161,2 +158,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given char value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code char} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -164,2 +169,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -169,3 +173,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -175,2 +179,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given short value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code short} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -178,2 +190,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -183,3 +194,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -189,2 +200,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given int value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code int} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -192,2 +211,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -197,3 +215,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -203,2 +221,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given float value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code float} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -206,2 +232,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -211,3 +236,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -217,2 +242,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given long value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code long} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -220,2 +253,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -225,3 +257,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -231,2 +263,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given double value.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     * {@return a new memory segment initialized with the provided {@code double} {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -234,2 +274,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -239,3 +278,3 @@\n-        MemorySegment addr = allocateNoInit(layout);\n-        addr.set(layout, 0, value);\n-        return addr;\n+        MemorySegment seg = allocateNoInit(layout);\n+        seg.set(layout, 0, value);\n+        return seg;\n@@ -245,1 +284,3 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given address value.\n+     * {@return a new memory segment initialized with the address of the provided {@code value} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     * <p>\n@@ -247,1 +288,9 @@\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n+     *\n+     * @implSpec The default implementation is equivalent to:\n+     * {@snippet lang=java :\n+     *  Objects.requireNonNull(value);\n+     *  MemorySegment seg = allocate(Objects.requireNonNull(layout));\n+     *  seg.set(layout, 0, value);\n+     *  return seg;\n+     * }\n+     *\n@@ -249,2 +298,1 @@\n-     * @param value the value to be set on the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param value  the value to be set in the newly allocated memory segment.\n@@ -261,3 +309,10 @@\n-     * Allocates a memory segment with the given layout and initializes it with the bytes in the provided\n-     * source memory segment.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(elementLayout, elementCount)}.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code elementCount*elementLayout.byteSize()} initialized with the contents of the provided {@code source} segment\n+     * as specified by the provided {@code elementLayout} (i.e. byte ordering, alignment and size)}\n+     *\n+     * @implSpec the default implementation for this method is equivalent to the following code:\n+     * {@snippet lang = java:\n+     * MemorySegment dest = this.allocate(elementLayout, elementCount);\n+     * MemorySegment.copy(source, sourceElementLayout, sourceOffset, dest, elementLayout, 0, elementCount);\n+     * return dest;\n+     * }\n@@ -269,1 +324,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -295,1 +349,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given byte elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code byte} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -302,2 +359,1 @@\n-     * @param elements the byte elements to be copied to the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param elements      the byte elements to be copied to the newly allocated memory block.\n@@ -313,1 +369,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given short elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code short} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -320,2 +379,1 @@\n-     * @param elements the short elements to be copied to the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param elements      the short elements to be copied to the newly allocated memory block.\n@@ -331,1 +389,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given char elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code char} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -338,2 +399,1 @@\n-     * @param elements the char elements to be copied to the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param elements      the char elements to be copied to the newly allocated memory block.\n@@ -349,1 +409,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given int elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code int} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -356,2 +419,1 @@\n-     * @param elements the int elements to be copied to the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param elements      the int elements to be copied to the newly allocated memory block.\n@@ -367,1 +429,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given float elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code float} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -375,1 +440,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -385,1 +449,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given long elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code long} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -393,1 +460,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -403,1 +469,4 @@\n-     * Allocates a memory segment with the given layout and initializes it with the given double elements.\n+     * {@return a new memory segment with a {@linkplain MemorySegment#byteSize() byteSize()} of\n+     * {@code E*layout.byteSize()} initialized with the provided {@code E} {@code double} {@code elements} as\n+     * specified by the provided {@code layout} (i.e. byte ordering, alignment and size)}\n+     *\n@@ -410,2 +479,1 @@\n-     * @param elements the double elements to be copied to the newly allocated memory block.\n-     * @return a segment for the newly allocated memory block.\n+     * @param elements      the double elements to be copied to the newly allocated memory block.\n@@ -421,2 +489,5 @@\n-     * Allocates a memory segment with the given layout.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * {@return a new memory segment with the given layout}\n+     *\n+     * @implSpec The default implementation for this method calls\n+     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     *\n@@ -424,1 +495,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -432,2 +502,5 @@\n-     * Allocates a memory segment with the given element layout and size.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(MemoryLayout.sequenceLayout(count, elementLayout))}.\n+     * {@return a new memory segment with the given {@code elementLayout} and {@code count}}\n+     *\n+     * @implSpec The default implementation for this method calls\n+     * {@code this.allocate(MemoryLayout.sequenceLayout(count, elementLayout))}.\n+     *\n@@ -436,1 +509,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -449,2 +521,5 @@\n-     * Allocates a memory segment with the given size.\n-     * @implSpec the default implementation for this method calls {@code this.allocate(byteSize, 1)}.\n+     * {@return a new memory segment with the given {@code byteSize}}\n+     *\n+     * @implSpec The default implementation for this method calls\n+     * {@code this.allocate(byteSize, 1)}.\n+     *\n@@ -452,1 +527,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -460,1 +534,2 @@\n-     * Allocates a memory segment with the given size and alignment constraint.\n+     * {@return a new memory segment with the given {@code byteSize} and {@code byteAlignment}}\n+     *\n@@ -463,1 +538,0 @@\n-     * @return a segment for the newly allocated memory block.\n@@ -476,0 +550,1 @@\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":178,"deletions":103,"binary":false,"changes":281,"status":"modified"},{"patch":"@@ -2,23 +2,22 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n- *\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n- *\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n- *\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/StructLayout.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/UnionLayout.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,5 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -11,5 +11,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +17,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +21,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/snippet-files\/Snippets.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1110,1 +1110,0 @@\n-        String lastFragment = \"\";\n@@ -1113,1 +1112,1 @@\n-            lastFragment = fragment;\n+            initialLengthCoder = JLA.stringConcatMix(initialLengthCoder, fragment);\n@@ -1121,2 +1120,1 @@\n-            MethodHandle prepender = prepender(lastFragment.isEmpty() ? null : fragment, ttype);\n-            initialLengthCoder = JLA.stringConcatMix(initialLengthCoder, fragment);\n+            MethodHandle prepender = prepender(fragment.isEmpty() ? null : fragment, ttype);\n@@ -1129,0 +1127,2 @@\n+        String lastFragment = fragments.getLast();\n+        initialLengthCoder -= lastFragment.length();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -734,2 +734,2 @@\n-     * and the result will be returned based on the system\n-     * configured resolver. If a lookup of the name service\n+     * and the result will be returned based on the system-wide\n+     * resolver. If a lookup of the name service\n@@ -788,3 +788,9 @@\n-     * Gets the fully qualified domain name for this IP address.\n-     * Best effort method, meaning we may not be able to return\n-     * the FQDN depending on the underlying system configuration.\n+     * Gets the fully qualified domain name for this\n+     * {@linkplain InetAddress#getAddress() IP address} using the system-wide\n+     * {@linkplain InetAddressResolver resolver}.\n+     *\n+     * <p>The system-wide resolver will be used to do a reverse name lookup of the IP address.\n+     * The lookup can fail for many reasons that include the host not being registered with the name\n+     * service. If the resolver is unable to determine the fully qualified\n+     * domain name, this method returns the {@linkplain #getHostAddress() textual representation}\n+     * of the IP address.\n@@ -800,3 +806,5 @@\n-     * @return  the fully qualified domain name for this IP address,\n-     *    or if the operation is not allowed by the security check,\n-     *    the textual representation of the IP address.\n+     * @return  the fully qualified domain name for this IP address.\n+     *          If either the operation is not allowed by the security check\n+     *          or the system-wide resolver wasn't able to determine the\n+     *          fully qualified domain name for the IP address, the textual\n+     *          representation of the IP address is returned instead.\n@@ -817,1 +825,1 @@\n-     * Returns the hostname for this address.\n+     * Returns the fully qualified domain name for the given address.\n@@ -823,1 +831,1 @@\n-     * the hostname for this IP address, i.e., to connect to the host.\n+     * the hostname for the given IP address, i.e., to connect to the host.\n@@ -827,4 +835,0 @@\n-     * @return  the host name for this IP address, or if the operation\n-     *    is not allowed by the security check, the textual\n-     *    representation of the IP address.\n-     *\n@@ -833,0 +837,6 @@\n+     * @return  the fully qualified domain name for the given IP address.\n+     *          If either the operation is not allowed by the security check\n+     *          or the system-wide resolver wasn't able to determine the\n+     *          fully qualified domain name for the IP address, the textual\n+     *          representation of the IP address is returned instead.\n+     *\n@@ -1573,1 +1583,1 @@\n-     * based on the configured system {@linkplain InetAddressResolver resolver}.\n+     * based on the system-wide {@linkplain InetAddressResolver resolver}.\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":25,"deletions":15,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -767,0 +767,1 @@\n+    @Override\n@@ -943,5 +944,3 @@\n-     * Returns the hash code value for this context. The hash code\n-     * is computed by exclusive or-ing the hash code of all the protection\n-     * domains in the context together.\n-     *\n-     * @return a hash code value for this context.\n+     * {@return the hash code value for this context}\n+     * The hash code is computed by exclusive or-ing the hash code of all the\n+     * protection domains in the context together.\n@@ -949,1 +948,1 @@\n-\n+    @Override\n@@ -956,3 +955,3 @@\n-        for (int i =0; i < context.length; i++) {\n-            if (context[i] != null)\n-                hashCode ^= context[i].hashCode();\n+        for (ProtectionDomain protectionDomain : context) {\n+            if (protectionDomain != null)\n+                hashCode ^= protectionDomain.hashCode();\n","filename":"src\/java.base\/share\/classes\/java\/security\/AccessControlContext.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,0 +101,1 @@\n+    @Override\n@@ -106,3 +107,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -110,1 +109,1 @@\n-\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/AllPermission.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -220,1 +220,1 @@\n-     * Returns the hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -224,2 +224,0 @@\n-     *\n-     * @return a hash code value for this object.\n","filename":"src\/java.base\/share\/classes\/java\/security\/BasicPermission.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -101,1 +102,1 @@\n-     * Returns the hash code value for this code signer.\n+     * {@return the hash code value for this code signer}\n@@ -104,2 +105,0 @@\n-     *\n-     * @return a hash code value for this code signer.\n@@ -107,0 +106,1 @@\n+    @Override\n@@ -109,5 +109,1 @@\n-            if (timestamp == null) {\n-                myhash = signerCertPath.hashCode();\n-            } else {\n-                myhash = signerCertPath.hashCode() + timestamp.hashCode();\n-            }\n+            myhash = signerCertPath.hashCode() + Objects.hashCode(timestamp);\n@@ -129,0 +125,1 @@\n+    @Override\n@@ -130,5 +127,1 @@\n-        if ((!(obj instanceof CodeSigner that))) {\n-            return false;\n-        }\n-\n-        if (this == that) {\n+        if (this == obj) {\n@@ -137,11 +130,4 @@\n-        Timestamp thatTimestamp = that.getTimestamp();\n-        if (timestamp == null) {\n-            if (thatTimestamp != null) {\n-                return false;\n-            }\n-        } else {\n-            if ((!timestamp.equals(thatTimestamp))) {\n-                return false;\n-            }\n-        }\n-        return signerCertPath.equals(that.getSignerCertPath());\n+\n+        return obj instanceof CodeSigner other\n+                && Objects.equals(timestamp, other.getTimestamp())\n+                && signerCertPath.equals(other.getSignerCertPath());\n","filename":"src\/java.base\/share\/classes\/java\/security\/CodeSigner.java","additions":11,"deletions":25,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,3 +133,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -139,4 +137,1 @@\n-        if (location != null)\n-            return location.hashCode();\n-        else\n-            return 0;\n+        return Objects.hashCode(location);\n","filename":"src\/java.base\/share\/classes\/java\/security\/CodeSource.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -339,0 +339,1 @@\n+    @Override\n@@ -481,3 +482,1 @@\n-     * Returns a hashcode for this {@code Identity}.\n-     *\n-     * @return a hashcode for this {@code Identity}.\n+     * {@return the hashcode for this {@code Identity}}\n@@ -485,0 +484,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/Identity.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,4 +199,2 @@\n-        if (!(obj instanceof PKCS12Attribute)) {\n-            return false;\n-        }\n-        return Arrays.equals(encoded, ((PKCS12Attribute) obj).encoded);\n+        return obj instanceof PKCS12Attribute other\n+                && Arrays.equals(encoded, other.encoded);\n@@ -206,1 +204,1 @@\n-     * Returns the hashcode for this {@code PKCS12Attribute}.\n+     * {@return the hashcode for this {@code PKCS12Attribute}}\n@@ -208,2 +206,0 @@\n-     *\n-     * @return the hash code\n","filename":"src\/java.base\/share\/classes\/java\/security\/PKCS12Attribute.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-\n+    @Override\n@@ -164,1 +164,1 @@\n-\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/Permission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+    @Override\n@@ -63,3 +64,1 @@\n-     * Returns a hashcode for this {@code Principal}.\n-     *\n-     * @return a hashcode for this {@code Principal}.\n+     * {@return a hashcode for this {@code Principal}}\n@@ -67,0 +66,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/Principal.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,2 +243,1 @@\n-            String locationNoFrag = cs.getLocationNoFragString();\n-            return locationNoFrag != null ? locationNoFrag.hashCode() : 0;\n+            return Objects.hashCode(cs.getLocationNoFragString());\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureClassLoader.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.util.Objects;\n@@ -352,5 +353,1 @@\n-        if (this.name == null) {\n-            if (that.name != null) {\n-                return false;\n-            }\n-        } else if (!this.name.equals(that.name)) {\n+        if (!Objects.equals(this.name, that.name)) {\n@@ -361,8 +358,2 @@\n-        if (this.actions == null) {\n-            if (that.actions != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!this.actions.equals(that.actions)) {\n-                return false;\n-            }\n+        if (!Objects.equals(this.actions, that.actions)) {\n+            return false;\n@@ -407,3 +398,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -413,6 +402,1 @@\n-        int hash = type.hashCode();\n-        if (name != null)\n-            hash ^= name.hashCode();\n-        if (actions != null)\n-            hash ^= actions.hashCode();\n-        return hash;\n+        return Objects.hash(type, name, actions);\n","filename":"src\/java.base\/share\/classes\/java\/security\/UnresolvedPermission.java","additions":7,"deletions":23,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,1 @@\n+    @Override\n@@ -185,1 +186,1 @@\n-                && that.getType().equals(this.type)\n+                && this.type.equals(that.getType())\n@@ -190,3 +191,3 @@\n-     * Returns the hashcode for this certification path. The hash code of\n-     * a certification path is defined to be the result of the following\n-     * calculation:\n+     * {@return the hashcode value for this certification path}\n+     * The hash code of a certification path is defined to be the result of\n+     * the following calculation:\n@@ -201,2 +202,0 @@\n-     *\n-     * @return the hashcode value for this certification path\n@@ -204,0 +203,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertPath.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,0 +107,1 @@\n+    @Override\n@@ -125,4 +126,2 @@\n-     * Returns a hashcode value for this certificate from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this certificate from its\n+     * encoded form}\n@@ -130,0 +129,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/Certificate.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-     * Returns a hash code value for this parameters object.\n+     * {@return a hash code value for this parameters object}\n@@ -105,2 +105,0 @@\n-     *\n-     * @return a hash code value for this parameters object.\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/URICertStoreParameters.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,0 +130,1 @@\n+    @Override\n@@ -148,4 +149,2 @@\n-     * Returns a hashcode value for this CRL from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CRL from its\n+     * encoded form}\n@@ -153,0 +152,1 @@\n+    @Override\n@@ -157,4 +157,1 @@\n-            for (int i = 1; i < crlData.length; i++) {\n-                 retval += crlData[i] * i;\n-            }\n-            return retval;\n+            return Arrays.hashCode(crlData);\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CRL.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -86,0 +87,1 @@\n+    @Override\n@@ -95,5 +97,1 @@\n-            if (thisCRLEntry.length != otherCRLEntry.length)\n-                return false;\n-            for (int i = 0; i < thisCRLEntry.length; i++)\n-                 if (thisCRLEntry[i] != otherCRLEntry[i])\n-                     return false;\n+            return Arrays.equals(thisCRLEntry, otherCRLEntry);\n@@ -103,1 +101,0 @@\n-        return true;\n@@ -107,4 +104,2 @@\n-     * Returns a hashcode value for this CRL entry from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this CRL entry from its\n+     * encoded form}\n@@ -112,0 +107,1 @@\n+    @Override\n@@ -113,1 +109,0 @@\n-        int     retval = 0;\n@@ -115,4 +110,1 @@\n-            byte[] entryData = this.getEncoded();\n-            for (int i = 1; i < entryData.length; i++)\n-                 retval += entryData[i] * i;\n-\n+            return Arrays.hashCode(this.getEncoded());\n@@ -120,1 +112,1 @@\n-            return(retval);\n+            return 0;\n@@ -122,1 +114,0 @@\n-        return(retval);\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CRLEntry.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Objects;\n@@ -218,0 +219,1 @@\n+    @Override\n@@ -229,3 +231,1 @@\n-     * Returns a hash code value for this characteristic 2\n-     * finite field.\n-     * @return a hash code value.\n+     * {@return the hash code value for this characteristic 2 finite field}\n@@ -233,0 +233,1 @@\n+    @Override\n@@ -234,2 +235,0 @@\n-        int value = m << 5;\n-        value += (rp==null? 0:rp.hashCode());\n@@ -238,1 +237,1 @@\n-        return value;\n+        return m << 5 + Objects.hashCode(rp);\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECFieldF2m.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+    @Override\n@@ -90,2 +91,1 @@\n-     * Returns a hash code value for this prime finite field.\n-     * @return a hash code value.\n+     * {@return a hash code value for this prime finite field}\n@@ -93,0 +93,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECFieldFp.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,0 +96,1 @@\n+    @Override\n@@ -106,2 +107,1 @@\n-     * Returns a hash code value for this elliptic curve point.\n-     * @return a hash code value.\n+     * {@return the hash code value for this elliptic curve point}\n@@ -109,0 +109,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECPoint.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,5 +43,6 @@\n- * {@code iterator}, and {@code listIterator} operations run in constant\n- * time.  The {@code add} operation runs in <i>amortized constant time<\/i>,\n- * that is, adding n elements requires O(n) time.  All of the other operations\n- * run in linear time (roughly speaking).  The constant factor is low compared\n- * to that for the {@code LinkedList} implementation.\n+ * {@code getFirst}, {@code getLast}, {@code removeLast}, {@code iterator},\n+ * {@code listIterator}, and {@code reversed} operations run in constant time.\n+ * The {@code add}, and {@code addLast} operations runs in <i>amortized\n+ * constant time<\/i>, that is, adding n elements requires O(n) time.  All of\n+ * the other operations run in linear time (roughly speaking).  The constant\n+ * factor is low compared to that for the {@code LinkedList} implementation.\n","filename":"src\/java.base\/share\/classes\/java\/util\/ArrayList.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -540,1 +540,1 @@\n-     * @throws UnsupportedOperationException if the {@code removeAll} method\n+     * @throws UnsupportedOperationException if the {@code removeAll} operation\n@@ -558,2 +558,2 @@\n-     * predicate.  Errors or runtime exceptions thrown during iteration or by\n-     * the predicate are relayed to the caller.\n+     * predicate (optional operation).  Errors or runtime exceptions thrown during\n+     * iteration or by the predicate are relayed to the caller.\n@@ -572,4 +572,2 @@\n-     * @throws UnsupportedOperationException if elements cannot be removed\n-     *         from this collection.  Implementations may throw this exception if a\n-     *         matching element cannot be removed or if, in general, removal is not\n-     *         supported.\n+     * @throws UnsupportedOperationException if the {@code removeIf} operation\n+     *         is not supported by this collection\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collection.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -412,2 +412,2 @@\n-     * operator to that element.  Errors or runtime exceptions thrown by\n-     * the operator are relayed to the caller.\n+     * operator to that element (optional operation).  Errors or runtime\n+     * exceptions thrown by the operator are relayed to the caller.\n@@ -429,4 +429,2 @@\n-     * @throws UnsupportedOperationException if this list is unmodifiable.\n-     *         Implementations may throw this exception if an element\n-     *         cannot be replaced or if, in general, modification is not\n-     *         supported\n+     * @throws UnsupportedOperationException if the {@code replaceAll} operation\n+     *         is not supported by this list\n@@ -449,2 +447,2 @@\n-     * {@link Comparator}.  The sort is <i>stable<\/i>: this method must not\n-     * reorder equal elements.\n+     * {@link Comparator} (optional operation).  The sort is <i>stable<\/i>:\n+     * this method must not reorder equal elements.\n@@ -498,2 +496,2 @@\n-     * @throws UnsupportedOperationException if the list's list-iterator does\n-     *         not support the {@code set} operation\n+     * @throws UnsupportedOperationException if the {@code sort} operation\n+     *         is not supported by this list\n","filename":"src\/java.base\/share\/classes\/java\/util\/List.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -740,2 +740,2 @@\n-     * function throws an exception.  Exceptions thrown by the function are\n-     * relayed to the caller.\n+     * function throws an exception (optional operation). Exceptions thrown\n+     * by the function are relayed to the caller.\n@@ -756,2 +756,3 @@\n-     * @throws UnsupportedOperationException if the {@code set} operation\n-     *         is not supported by this map's entry set iterator.\n+     * @throws UnsupportedOperationException if the {@code replaceAll} operation\n+     *         is not supported by this map\n+     *         ({@linkplain Collection##optional-restrictions optional})\n@@ -799,1 +800,1 @@\n-     * {@code null}, else returns the current value.\n+     * {@code null}, else returns the current value (optional operation).\n@@ -824,1 +825,1 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n+     * @throws UnsupportedOperationException if the {@code putIfAbsent} operation\n@@ -848,1 +849,1 @@\n-     * mapped to the specified value.\n+     * mapped to the specified value (optional operation).\n@@ -892,1 +893,1 @@\n-     * mapped to the specified value.\n+     * mapped to the specified value (optional operation).\n@@ -918,2 +919,3 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n-     *         is not supported by this map ({@linkplain Collection##optional-restrictions optional})\n+     * @throws UnsupportedOperationException if the {@code replace} operation\n+     *         is not supported by this map\n+     *         ({@linkplain Collection##optional-restrictions optional})\n@@ -942,1 +944,1 @@\n-     * currently mapped to some value.\n+     * currently mapped to some value (optional operation).\n@@ -966,1 +968,1 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n+     * @throws UnsupportedOperationException if the {@code replace} operation\n@@ -989,1 +991,1 @@\n-     * function and enters it into this map unless {@code null}.\n+     * function and enters it into this map unless {@code null} (optional operation).\n@@ -1049,3 +1051,2 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n-     *         is not supported by this map\n-     *         ({@linkplain Collection##optional-restrictions optional})\n+     * @throws UnsupportedOperationException if the {@code computeIfAbsent} operation is not\n+     *         supported by this map ({@linkplain Collection##optional-restrictions optional})\n@@ -1077,1 +1078,2 @@\n-     * compute a new mapping given the key and its current mapped value.\n+     * compute a new mapping given the key and its current mapped value\n+     * (optional operation).\n@@ -1126,3 +1128,2 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n-     *         is not supported by this map\n-     *         ({@linkplain Collection##optional-restrictions optional})\n+     * @throws UnsupportedOperationException if the {@code computeIfPresent} operation is not\n+     *         supported by this map ({@linkplain Collection##optional-restrictions optional})\n@@ -1157,3 +1158,3 @@\n-     * mapped value (or {@code null} if there is no current mapping). For\n-     * example, to either create or append a {@code String} msg to a value\n-     * mapping:\n+     * mapped value, or {@code null} if there is no current mapping (optional\n+     * operation). For example, to either create or append a {@code String}\n+     * msg to a value mapping:\n@@ -1212,3 +1213,2 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n-     *         is not supported by this map\n-               ({@linkplain Collection##optional-restrictions optional})\n+     * @throws UnsupportedOperationException if the {@code compute} operation is not\n+     *         supported by this map ({@linkplain Collection##optional-restrictions optional})\n@@ -1248,3 +1248,3 @@\n-     * associated with null, associates it with the given non-null value.\n-     * Otherwise, replaces the associated value with the results of the given\n-     * remapping function, or removes if the result is {@code null}. This\n+     * associated with null, associates it with the given non-null value (optional\n+     * operation). Otherwise, replaces the associated value with the results of\n+     * the given remapping function, or removes if the result is {@code null}. This\n@@ -1307,3 +1307,2 @@\n-     * @throws UnsupportedOperationException if the {@code put} operation\n-     *         is not supported by this map\n-     *         ({@linkplain Collection##optional-restrictions optional})\n+     * @throws UnsupportedOperationException if the {@code merge} operation is not\n+     *         supported by this map ({@linkplain Collection##optional-restrictions optional})\n","filename":"src\/java.base\/share\/classes\/java\/util\/Map.java","additions":31,"deletions":32,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -240,1 +240,2 @@\n-     * the least key in this map, or {@code null} if the map is empty.\n+     * the least key in this map, or {@code null} if the map is empty\n+     * (optional operation).\n@@ -244,0 +245,3 @@\n+     *\n+     * @throws UnsupportedOperationException if the {@code pollFirstEntry}\n+     *         operation is not supported by this map\n@@ -249,1 +253,2 @@\n-     * the greatest key in this map, or {@code null} if the map is empty.\n+     * the greatest key in this map, or {@code null} if the map is empty\n+     * (optional operation).\n@@ -253,0 +258,3 @@\n+     *\n+     * @throws UnsupportedOperationException if the {@code pollLastEntry}\n+     *         operation is not supported by this map\n","filename":"src\/java.base\/share\/classes\/java\/util\/NavigableMap.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-     * or returns {@code null} if this set is empty.\n+     * or returns {@code null} if this set is empty (optional operation).\n@@ -152,0 +152,3 @@\n+     *\n+     * @throws UnsupportedOperationException if the {@code pollFirst}\n+     *         operation is not supported by this collection\n@@ -157,1 +160,1 @@\n-     * or returns {@code null} if this set is empty.\n+     * or returns {@code null} if this set is empty (optional operation).\n@@ -160,0 +163,3 @@\n+     *\n+     * @throws UnsupportedOperationException if the {@code pollLast}\n+     *         operation is not supported by this collection\n","filename":"src\/java.base\/share\/classes\/java\/util\/NavigableSet.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,1 @@\n+    @Override\n@@ -84,4 +85,1 @@\n-     *\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -89,0 +87,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoAllPermission.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.Objects;\n@@ -255,0 +256,1 @@\n+    @Override\n@@ -269,4 +271,2 @@\n-        return (equalObjects(this.exemptionMechanism,\n-                             that.exemptionMechanism) &&\n-                equalObjects(this.algParamSpec,\n-                             that.algParamSpec));\n+        return Objects.equals(this.exemptionMechanism, that.exemptionMechanism)\n+                && Objects.equals(this.algParamSpec, that.algParamSpec);\n@@ -276,3 +276,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -280,1 +278,1 @@\n-\n+    @Override\n@@ -282,10 +280,5 @@\n-        int retval = alg.hashCode();\n-        retval ^= maxKeySize;\n-        if (exemptionMechanism != null) {\n-            retval ^= exemptionMechanism.hashCode();\n-        }\n-        if (checkParam) retval ^= 100;\n-        if (algParamSpec != null) {\n-            retval ^= algParamSpec.hashCode();\n-        }\n-        return retval;\n+        return alg.hashCode()\n+                ^ maxKeySize\n+                ^ Objects.hashCode(exemptionMechanism)\n+                ^ (checkParam ? 100 : 0)\n+                ^ Objects.hashCode(algParamSpec);\n@@ -440,8 +433,0 @@\n-\n-    private boolean equalObjects(Object obj1, Object obj2) {\n-        if (obj1 == null) {\n-            return (obj2 == null);\n-        }\n-\n-        return obj1.equals(obj2);\n-    }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPermission.java","additions":12,"deletions":27,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Objects;\n@@ -619,0 +620,1 @@\n+        @Override\n@@ -620,11 +622,6 @@\n-            int retval = cryptoPermission.hashCode();\n-            if (alg != null) retval ^= alg.hashCode();\n-            if (exemptionMechanism != null) {\n-                retval ^= exemptionMechanism.hashCode();\n-            }\n-            retval ^= maxKeySize;\n-            if (checkParam) retval ^= 100;\n-            if (algParamSpec != null) {\n-                retval ^= algParamSpec.hashCode();\n-            }\n-            return retval;\n+            return cryptoPermission.hashCode()\n+                    ^ Objects.hashCode(alg)\n+                    ^ Objects.hashCode(exemptionMechanism)\n+                    ^ maxKeySize\n+                    ^ (checkParam ? 100 : 0)\n+                    ^ Objects.hashCode(algParamSpec);\n@@ -633,0 +630,1 @@\n+        @Override\n@@ -640,6 +638,2 @@\n-            if (this.cryptoPermission == null) {\n-                if (that.cryptoPermission != null) return false;\n-            } else {\n-                if (!this.cryptoPermission.equals(\n-                                                 that.cryptoPermission))\n-                    return false;\n+            if (!Objects.equals(this.cryptoPermission, that.cryptoPermission)) {\n+                return false;\n@@ -655,1 +649,1 @@\n-            if (!(this.maxKeySize == that.maxKeySize)) return false;\n+            if (this.maxKeySize != that.maxKeySize) return false;\n@@ -659,5 +653,1 @@\n-            if (this.algParamSpec == null) {\n-                return that.algParamSpec == null;\n-            } else {\n-                return this.algParamSpec.equals(that.algParamSpec);\n-            }\n+            return Objects.equals(this.algParamSpec, that.algParamSpec);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPolicyParser.java","additions":14,"deletions":24,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -134,0 +135,1 @@\n+    @Override\n@@ -143,1 +145,1 @@\n-                java.util.Arrays.equals(iv, other.iv));\n+                Arrays.equals(iv, other.iv));\n@@ -150,0 +152,1 @@\n+    @Override\n@@ -151,7 +154,1 @@\n-        int retval = 0;\n-        if (iv != null) {\n-            for (int i = 1; i < iv.length; i++) {\n-                retval += iv[i] * i;\n-            }\n-        }\n-        return retval + effectiveKeyBits;\n+        return Arrays.hashCode(iv) + effectiveKeyBits;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC2ParameterSpec.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -179,0 +180,1 @@\n+    @Override\n@@ -190,1 +192,1 @@\n-                java.util.Arrays.equals(iv, other.iv));\n+                Arrays.equals(iv, other.iv));\n@@ -197,0 +199,1 @@\n+    @Override\n@@ -198,8 +201,1 @@\n-        int retval = 0;\n-        if (iv != null) {\n-            for (int i = 1; i < iv.length; i++) {\n-                retval += iv[i] * i;\n-            }\n-        }\n-        retval += (version + rounds + wordSize);\n-        return retval;\n+        return Arrays.hashCode(iv) + version + rounds + wordSize;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC5ParameterSpec.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,0 +201,1 @@\n+    @Override\n@@ -202,4 +203,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n+        int retval = Arrays.hashCode(key);\n@@ -223,0 +221,1 @@\n+    @Override\n@@ -227,1 +226,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -230,1 +229,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -239,1 +238,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/SecretKeySpec.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,0 +263,1 @@\n+    @Override\n@@ -274,3 +275,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -278,0 +277,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/PrivateCredentialPermission.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -910,4 +910,0 @@\n-        if (o == null) {\n-            return false;\n-        }\n-\n@@ -1006,3 +1002,1 @@\n-     * Returns a hashcode for this {@code Subject}.\n-     *\n-     * @return a hashcode for this {@code Subject}.\n+     * {@return a hashcode for this {@code Subject}}\n@@ -1489,0 +1483,1 @@\n+        @Override\n@@ -1510,0 +1505,1 @@\n+        @Override\n@@ -1512,6 +1508,2 @@\n-            Iterator<E> i = iterator();\n-            while (i.hasNext()) {\n-                E obj = i.next();\n-                if (obj != null) {\n-                    h += obj.hashCode();\n-                }\n+            for (E obj : this) {\n+                h += Objects.hashCode(obj);\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/Subject.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -460,0 +460,1 @@\n+    @Override\n@@ -471,1 +472,1 @@\n-     * Return a hash code for this {@code X500Principal}.\n+     * {@return a hash code for this {@code X500Principal}}\n@@ -475,2 +476,0 @@\n-     *\n-     * @return a hash code for this {@code X500Principal}\n@@ -478,0 +477,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/x500\/X500Principal.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.util.Arrays;\n@@ -75,1 +76,1 @@\n-     * object. If the {@code other} object is an\n+     * object. If the {@code obj} object is an\n@@ -80,1 +81,1 @@\n-     * @param other the object to test for equality with this certificate.\n+     * @param obj the object to test for equality with this certificate.\n@@ -84,2 +85,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n@@ -87,1 +89,1 @@\n-        if (!(other instanceof Certificate))\n+        if (!(obj instanceof Certificate other))\n@@ -90,9 +92,1 @@\n-            byte[] thisCert = this.getEncoded();\n-            byte[] otherCert = ((Certificate)other).getEncoded();\n-\n-            if (thisCert.length != otherCert.length)\n-                return false;\n-            for (int i = 0; i < thisCert.length; i++)\n-                 if (thisCert[i] != otherCert[i])\n-                     return false;\n-            return true;\n+            return Arrays.equals(this.getEncoded(), other.getEncoded());\n@@ -105,4 +99,2 @@\n-     * Returns a hashcode value for this certificate from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this certificate from\n+     * its encoded form}\n@@ -110,0 +102,1 @@\n+    @Override\n@@ -111,1 +104,0 @@\n-        int     retval = 0;\n@@ -113,5 +105,1 @@\n-            byte[] certData = this.getEncoded();\n-            for (int i = 1; i < certData.length; i++) {\n-                 retval += certData[i] * i;\n-            }\n-            return (retval);\n+            return Arrays.hashCode(this.getEncoded());\n@@ -119,1 +107,1 @@\n-            return (retval);\n+            return 0;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/cert\/Certificate.java","additions":14,"deletions":26,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -9,1 +9,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/RISCV64Architecture.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9,1 +9,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9,1 +9,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9,1 +9,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/TypeClass.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import jdk.internal.misc.VM;\n+\n@@ -59,0 +61,1 @@\n+        maybeFailClinit();\n@@ -70,0 +73,16 @@\n+    \/**\n+     * Helper to test exception translation.\n+     *\/\n+    private static void maybeFailClinit() {\n+        String className = VM.getSavedProperty(\"test.jvmci.TranslatedException.clinit.throw\");\n+        if (className != null) {\n+            try {\n+                throw (Throwable) Class.forName(className).getDeclaredConstructor().newInstance();\n+            } catch (RuntimeException | Error e) {\n+                throw e;\n+            } catch (Throwable e) {\n+                throw new InternalError(e);\n+            }\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/TranslatedException.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -135,0 +135,1 @@\n+    @Override\n@@ -147,0 +148,1 @@\n+    @Override\n@@ -148,1 +150,1 @@\n-        return provName.hashCode() + argument.hashCode();\n+        return Objects.hash(provName, argument);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderConfig.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import java.util.Arrays;\n+\n@@ -137,2 +139,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n@@ -140,12 +143,3 @@\n-        if (!(other instanceof EncryptedPrivateKeyInfo))\n-            return false;\n-        byte[] thisEncrInfo = this.getEncoded();\n-        byte[] otherEncrInfo\n-                = ((EncryptedPrivateKeyInfo) other).getEncoded();\n-\n-        if (thisEncrInfo.length != otherEncrInfo.length)\n-            return false;\n-        for (int i = 0; i < thisEncrInfo.length; i++)\n-            if (thisEncrInfo[i] != otherEncrInfo[i])\n-                return false;\n-        return true;\n+        }\n+        return obj instanceof EncryptedPrivateKeyInfo other\n+                && Arrays.equals(this.getEncoded(), other.getEncoded());\n@@ -155,3 +149,1 @@\n-     * Returns a hashcode for this EncryptedPrivateKeyInfo.\n-     *\n-     * @return a hashcode for this EncryptedPrivateKeyInfo.\n+     * {@return a hashcode for this EncryptedPrivateKeyInfo}\n@@ -159,0 +151,1 @@\n+    @Override\n@@ -160,5 +153,1 @@\n-        int retval = 0;\n-\n-        for (int i = 0; i < this.encryptedData.length; i++)\n-            retval += this.encryptedData[i] * i;\n-        return retval;\n+        return Arrays.hashCode(encryptedData);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/EncryptedPrivateKeyInfo.java","additions":12,"deletions":23,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -262,0 +262,1 @@\n+    @Override\n@@ -291,0 +292,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS8Key.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.Arrays;\n@@ -327,1 +328,1 @@\n-     * object. If the <code>other<\/code> object is an\n+     * object. If the <code>obj<\/code> object is an\n@@ -332,1 +333,1 @@\n-     * @param other the object to test for equality with this object.\n+     * @param obj the object to test for equality with this object.\n@@ -336,2 +337,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n@@ -339,1 +341,1 @@\n-        if (!(other instanceof PKCS10))\n+        if (!(obj instanceof PKCS10 other))\n@@ -343,1 +345,1 @@\n-        byte[] otherEncoded = ((PKCS10)other).getEncoded();\n+        byte[] otherEncoded = other.getEncoded();\n@@ -347,1 +349,1 @@\n-        return java.util.Arrays.equals(encoded, otherEncoded);\n+        return Arrays.equals(encoded, otherEncoded);\n@@ -351,4 +353,2 @@\n-     * Returns a hashcode value for this certificate request from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this certificate request from its\n+     * encoded form}\n@@ -356,0 +356,1 @@\n+    @Override\n@@ -357,5 +358,1 @@\n-        int     retval = 0;\n-        if (encoded != null)\n-            for (int i = 1; i < encoded.length; i++)\n-             retval += encoded[i] * i;\n-        return(retval);\n+        return Arrays.hashCode(encoded);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10.java","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,0 +156,1 @@\n+    @Override\n@@ -169,1 +170,1 @@\n-        PKCS10Attribute thisAttr, otherAttr;\n+        PKCS10Attribute thisAttr;\n@@ -171,2 +172,1 @@\n-        for (int i=0; i < len; i++) {\n-            otherAttr = attrs[i];\n+        for (PKCS10Attribute otherAttr : attrs) {\n@@ -178,1 +178,1 @@\n-            if (! thisAttr.equals(otherAttr))\n+            if (!thisAttr.equals(otherAttr))\n@@ -185,3 +185,1 @@\n-     * Returns a hashcode value for this PKCS10Attributes.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this PKCS10Attributes}\n@@ -189,0 +187,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -2132,3 +2132,1 @@\n-         * Returns the hash code value for this object.\n-         *\n-         * @return a hash code value for this object.\n+         * {@return the hash code value for this object}\n@@ -2137,6 +2135,2 @@\n-            int hash = type.hashCode();\n-            if (name != null)\n-                hash ^= name.hashCode();\n-            if (actions != null)\n-                hash ^= actions.hashCode();\n-            return hash;\n+            return type.hashCode() ^ Objects.hashCode(name)\n+                    ^ Objects.hashCode(actions);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyFile.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1061,3 +1061,1 @@\n-         * Return a hashcode for this PrincipalEntry.\n-         *\n-         * @return a hashcode for this PrincipalEntry\n+         * {@return a hashcode for this PrincipalEntry}\n@@ -1122,4 +1120,1 @@\n-            int retval = permission.hashCode();\n-            if (name != null) retval ^= name.hashCode();\n-            if (action != null) retval ^= action.hashCode();\n-            return retval;\n+            return Objects.hash(permission, name, action);\n@@ -1133,26 +1128,5 @@\n-            if (! (obj instanceof PermissionEntry that))\n-                return false;\n-\n-            if (this.permission == null) {\n-                if (that.permission != null) return false;\n-            } else {\n-                if (!this.permission.equals(that.permission)) return false;\n-            }\n-\n-            if (this.name == null) {\n-                if (that.name != null) return false;\n-            } else {\n-                if (!this.name.equals(that.name)) return false;\n-            }\n-\n-            if (this.action == null) {\n-                if (that.action != null) return false;\n-            } else {\n-                if (!this.action.equals(that.action)) return false;\n-            }\n-\n-            if (this.signedBy == null) {\n-                return that.signedBy == null;\n-            } else {\n-                return this.signedBy.equals(that.signedBy);\n-            }\n+            return obj instanceof PermissionEntry that\n+                    && Objects.equals(this.permission, that.permission)\n+                    && Objects.equals(this.name, that.name)\n+                    && Objects.equals(this.action, that.action)\n+                    && Objects.equals(this.signedBy, that.signedBy);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyParser.java","additions":8,"deletions":34,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,3 +175,1 @@\n-     * Returns a hashcode value for this CertId.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CertId}\n@@ -182,6 +180,2 @@\n-            for (int i = 0; i < issuerNameHash.length; i++) {\n-                myhash += issuerNameHash[i] * i;\n-            }\n-            for (int i = 0; i < issuerKeyHash.length; i++) {\n-                myhash += issuerKeyHash[i] * i;\n-            }\n+            myhash += Arrays.hashCode(issuerNameHash);\n+            myhash += Arrays.hashCode(issuerKeyHash);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CertId.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -229,4 +229,0 @@\n-        if (obj == null) {\n-            return false;\n-        }\n-\n@@ -237,5 +233,2 @@\n-        if (obj instanceof ResponderId respObj) {\n-            return Arrays.equals(encodedRid, respObj.getEncoded());\n-        }\n-\n-        return false;\n+        return obj instanceof ResponderId respObj\n+                && Arrays.equals(encodedRid, respObj.getEncoded());\n@@ -245,3 +238,1 @@\n-     * Returns the hash code value for this {@code ResponderId}\n-     *\n-     * @return the hash code value for this {@code ResponderId}\n+     * {@return the hash code value for this {@code ResponderId}}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ResponderId.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -988,1 +988,1 @@\n-     * Returns the hashcode for this session\n+     * {@return the hashcode for this session}\n@@ -1005,6 +1005,3 @@\n-        if (obj instanceof SSLSessionImpl sess) {\n-            return (sessionId != null) && (sessionId.equals(\n-                        sess.getSessionId()));\n-        }\n-\n-        return false;\n+        return obj instanceof SSLSessionImpl other\n+                && sessionId != null\n+                && sessionId.equals(other.getSessionId());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -108,68 +108,0 @@\n-    \/**\n-     * Get the current cache lifetime setting\n-     *\n-     * @return the current cache lifetime value\n-     *\/\n-    int getCacheLifetime() {\n-        return cacheLifetime;\n-    }\n-\n-    \/**\n-     * Get the current maximum cache size.\n-     *\n-     * @return the current maximum cache size\n-     *\/\n-    int getCacheCapacity() {\n-        return cacheCapacity;\n-    }\n-\n-    \/**\n-     * Get the default OCSP responder URI, if previously set.\n-     *\n-     * @return the current default OCSP responder URI, or {@code null} if\n-     *      it has not been set.\n-     *\/\n-    URI getDefaultResponder() {\n-        return defaultResponder;\n-    }\n-\n-    \/**\n-     * Get the URI override setting\n-     *\n-     * @return {@code true} if URI override has been set, {@code false}\n-     * otherwise.\n-     *\/\n-    boolean getURIOverride() {\n-        return respOverride;\n-    }\n-\n-    \/**\n-     * Get the ignore extensions setting.\n-     *\n-     * @return {@code true} if the {@code StatusResponseManager} will not\n-     * pass OCSP Extensions in the TLS {@code status_request[_v2]}\n-     * extensions, {@code false} if extensions will be passed (the default).\n-     *\/\n-    boolean getIgnoreExtensions() {\n-        return ignoreExtensions;\n-    }\n-\n-    \/**\n-     * Clear the status response cache\n-     *\/\n-    void clear() {\n-        if (SSLLogger.isOn && SSLLogger.isOn(\"respmgr\")) {\n-            SSLLogger.fine(\"Clearing response cache\");\n-        }\n-        responseCache.clear();\n-    }\n-\n-    \/**\n-     * Returns the number of currently valid objects in the response cache.\n-     *\n-     * @return the number of valid objects in the response cache.\n-     *\/\n-    int size() {\n-        return responseCache.size();\n-    }\n-\n@@ -214,11 +146,0 @@\n-    \/**\n-     * Shutdown the thread pool\n-     *\/\n-    void shutdown() {\n-        if (SSLLogger.isOn && SSLLogger.isOn(\"respmgr\")) {\n-            SSLLogger.fine(\"Shutting down \" + threadMgr.getActiveCount() +\n-                    \" active threads\");\n-        }\n-        threadMgr.shutdown();\n-    }\n-\n@@ -450,14 +371,0 @@\n-        \/**\n-         * Create a StatusInfo object from certificate data.\n-         *\n-         * @param subjectCert the certificate to be checked for revocation\n-         * @param issuerCert the issuer of the {@code subjectCert}\n-         *\n-         * @throws IOException if CertId creation from the certificate fails\n-         *\/\n-        StatusInfo(X509Certificate subjectCert, X509Certificate issuerCert)\n-                throws IOException {\n-            this(subjectCert, new CertId(issuerCert,\n-                    new SerialNumber(subjectCert.getSerialNumber())));\n-        }\n-\n@@ -478,15 +385,0 @@\n-        \/**\n-         * Copy constructor (used primarily for rescheduling).\n-         * This will do a member-wise copy except for the\n-         * responseData and extensions fields, which should not persist\n-         * in a rescheduled fetch.\n-         *\n-         * @param orig the original {@code StatusInfo}\n-         *\/\n-        StatusInfo(StatusInfo orig) {\n-            this.cert = orig.cert;\n-            this.cid = orig.cid;\n-            this.responder = orig.responder;\n-            this.responseData = null;\n-        }\n-\n@@ -690,32 +582,0 @@\n-        \/**\n-         * Determine the delay to use when scheduling the task that will\n-         * update the OCSP response.  This is the shorter time between the\n-         * cache lifetime and the nextUpdate.  If no nextUpdate is present\n-         * in the response, then only the cache lifetime is used.\n-         * If cache timeouts are disabled (a zero value) and there's no\n-         * nextUpdate, then the entry is not cached and no rescheduling\n-         * will take place.\n-         *\n-         * @param nextUpdate a {@code Date} object corresponding to the\n-         *      next update time from a SingleResponse.\n-         *\n-         * @return the number of seconds of delay before the next fetch\n-         *      should be executed.  A zero value means that the fetch\n-         *      should happen immediately, while a value less than zero\n-         *      indicates no rescheduling should be done.\n-         *\/\n-        private long getNextTaskDelay(Date nextUpdate) {\n-            long delaySec;\n-            int lifetime = getCacheLifetime();\n-\n-            if (nextUpdate != null) {\n-                long nuDiffSec = (nextUpdate.getTime() -\n-                        System.currentTimeMillis()) \/ 1000;\n-                delaySec = lifetime > 0 ? Long.min(nuDiffSec, lifetime) :\n-                        nuDiffSec;\n-            } else {\n-                delaySec = lifetime > 0 ? lifetime : -1;\n-            }\n-\n-            return delaySec;\n-        }\n@@ -887,1 +747,1 @@\n-                    if (respDER == null || respDER.length <= 0) {\n+                    if (respDER == null || respDER.length == 0) {\n@@ -912,1 +772,0 @@\n-            params = null;\n@@ -937,1 +796,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/StatusResponseManager.java","additions":1,"deletions":143,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -5318,1 +5318,2 @@\n-    public boolean equals(Object other) {\n+    @Override\n+    public boolean equals(Object obj) {\n@@ -5320,3 +5321,3 @@\n-            other instanceof Pair &&\n-            Objects.equals(fst, ((Pair)other).fst) &&\n-            Objects.equals(snd, ((Pair)other).snd);\n+            obj instanceof Pair<?, ?> other &&\n+            Objects.equals(fst, other.fst) &&\n+            Objects.equals(snd, other.snd);\n@@ -5325,0 +5326,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -71,1 +72,1 @@\n-     * a value for every bit of the BitArray. i.e. {@code 8*a.length <= length}.\n+     * a value for every bit of the BitArray, i.e. {@code 8*a.length >= length}.\n@@ -82,1 +83,1 @@\n-     * the BitArray, i.e. {@code 8*(a.length - ofs) <= length}.\n+     * the BitArray, i.e. {@code 8*(a.length - ofs) >= length}.\n@@ -180,0 +181,1 @@\n+    @Override\n@@ -182,1 +184,0 @@\n-        if (!(obj instanceof BitArray ba)) return false;\n@@ -184,6 +185,3 @@\n-        if (ba.length != length) return false;\n-\n-        for (int i = 0; i < repn.length; i += 1) {\n-            if (repn[i] != ba.repn[i]) return false;\n-        }\n-        return true;\n+        return obj instanceof BitArray other\n+                && length == other.length\n+                && Arrays.equals(repn, other.repn);\n@@ -205,3 +203,1 @@\n-     * Returns a hash code value for this bit array.\n-     *\n-     * @return  a hash code value for this bit array.\n+     * {@return a hash code value for this bit array}\n@@ -209,0 +205,1 @@\n+    @Override\n@@ -210,6 +207,1 @@\n-        int hashCode = 0;\n-\n-        for (int i = 0; i < repn.length; i++)\n-            hashCode = 31*hashCode + repn[i];\n-\n-        return hashCode ^ length;\n+        return Arrays.hashCode(repn) ^ length;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/BitArray.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1264,3 +1264,1 @@\n-     * Returns a hashcode for this DerValue.\n-     *\n-     * @return a hashcode for this DerValue.\n+     * {@return a hashcode for this DerValue}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -599,0 +599,1 @@\n+    @Override\n@@ -611,3 +612,1 @@\n-     * Returns a hashcode for this AVA.\n-     *\n-     * @return a hashcode for this AVA.\n+     * {@return a hashcode for this AVA}\n@@ -615,0 +614,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -342,3 +342,1 @@\n-     * Returns a hashcode for this AlgorithmId.\n-     *\n-     * @return a hashcode for this AlgorithmId.\n+     * {@return a hashcode for this AlgorithmId}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,0 +221,1 @@\n+    @Override\n@@ -245,3 +246,1 @@\n-     * Returns a hashcode value for this CRLExtensions.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CRLExtensions}\n@@ -249,0 +248,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -250,0 +250,1 @@\n+    @Override\n@@ -275,3 +276,1 @@\n-     * Returns a hashcode value for this CertificateExtensions.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CertificateExtensions}\n@@ -279,0 +278,1 @@\n+    @Override\n@@ -280,1 +280,1 @@\n-        return map.hashCode() + getUnparseableExtensions().hashCode();\n+        return Objects.hash(map, getUnparseableExtensions());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,5 +95,4 @@\n-    public boolean equals(Object other) {\n-        if (other instanceof CertificatePolicyId)\n-            return id.equals(((CertificatePolicyId) other).getIdentifier());\n-        else\n-            return false;\n+    @Override\n+    public boolean equals(Object obj) {\n+        return obj instanceof CertificatePolicyId other\n+                && id.equals(other.getIdentifier());\n@@ -103,3 +102,1 @@\n-     * Returns a hash code value for this object.\n-     *\n-     * @return a hash code value\n+     * {@return a hash code value for this object}\n@@ -107,0 +104,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicyId.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,1 @@\n+    @Override\n@@ -185,3 +186,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -189,0 +188,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DNSName.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -328,0 +328,1 @@\n+    @Override\n@@ -342,0 +343,1 @@\n+    @Override\n@@ -345,17 +347,4 @@\n-            hash = 1;\n-            if (fullName != null) {\n-                hash += fullName.hashCode();\n-            }\n-            if (relativeName != null) {\n-                hash += relativeName.hashCode();\n-            }\n-            if (crlIssuer != null) {\n-                hash += crlIssuer.hashCode();\n-            }\n-            if (reasonFlags != null) {\n-                for (int i = 0; i < reasonFlags.length; i++) {\n-                    if (reasonFlags[i]) {\n-                        hash += i;\n-                    }\n-                }\n-            }\n+            hash = 1 + Objects.hashCode(fullName)\n+                    + Objects.hashCode(relativeName)\n+                    + Objects.hash(crlIssuer)\n+                    + Arrays.hashCode(reasonFlags);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPoint.java","additions":7,"deletions":18,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -195,0 +195,1 @@\n+    @Override\n@@ -208,3 +209,1 @@\n-     * Returns the hash code for this distribution point name.\n-     *\n-     * @return the hash code.\n+     * {@return the hash code for this distribution point name}\n@@ -212,0 +211,1 @@\n+    @Override\n@@ -218,1 +218,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPointName.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,17 +173,8 @@\n-    public boolean equals(Object other) {\n-        if (!(other instanceof EDIPartyName))\n-            return false;\n-        String otherAssigner = ((EDIPartyName)other).assigner;\n-        if (this.assigner == null) {\n-            if (otherAssigner != null)\n-                return false;\n-        } else {\n-            if (!(this.assigner.equals(otherAssigner)))\n-                return false;\n-        }\n-        String otherParty = ((EDIPartyName)other).party;\n-        if (this.party == null) {\n-            return otherParty == null;\n-        } else {\n-            return this.party.equals(otherParty);\n-        }\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+\n+        return obj instanceof EDIPartyName other\n+                && Objects.equals(this.assigner, other.assigner)\n+                && Objects.equals(this.party, other.party);\n@@ -193,3 +184,1 @@\n-     * Returns the hash code value for this EDIPartyName.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code value for this EDIPartyName}\n@@ -197,0 +186,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/EDIPartyName.java","additions":11,"deletions":21,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,3 +245,1 @@\n-     * Returns a hashcode value for this Extension.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this Extension}\n@@ -249,0 +247,1 @@\n+    @Override\n@@ -250,7 +249,1 @@\n-        int h = 0;\n-        if (extensionValue != null) {\n-            byte[] val = extensionValue;\n-            int len = val.length;\n-            while (len > 0)\n-                h += len * val[--len];\n-        }\n+        int h = Arrays.hashCode(extensionValue);\n@@ -258,1 +251,1 @@\n-        h = h * hashMagic + (critical?1231:1237);\n+        h = h * hashMagic + Boolean.hashCode(critical);\n@@ -274,0 +267,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-     * @param other GeneralName to compare to this\n+     * @param obj GeneralName to compare to this\n@@ -207,2 +207,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other) {\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n@@ -211,1 +212,1 @@\n-        if (!(other instanceof GeneralName))\n+        if (!(obj instanceof GeneralName other))\n@@ -213,1 +214,0 @@\n-        GeneralNameInterface otherGNI = ((GeneralName)other).name;\n@@ -215,1 +215,2 @@\n-            return name.constrains(otherGNI) == GeneralNameInterface.NAME_MATCH;\n+            return name.constrains(other.name)\n+                    == GeneralNameInterface.NAME_MATCH;\n@@ -222,3 +223,1 @@\n-     * Returns the hash code for this GeneralName.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this GeneralName}\n@@ -226,0 +225,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralName.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,1 +152,1 @@\n-     * @param other GeneralSubtree to compare to this\n+     * @param obj GeneralSubtree to compare to this\n@@ -155,14 +155,9 @@\n-    public boolean equals(Object other) {\n-        if (!(other instanceof GeneralSubtree otherGS))\n-            return false;\n-        if (this.name == null) {\n-            if (otherGS.name != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!((this.name).equals(otherGS.name)))\n-                return false;\n-        }\n-        if (this.minimum != otherGS.minimum)\n-            return false;\n-        return this.maximum == otherGS.maximum;\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+\n+        return obj instanceof GeneralSubtree other\n+                && Objects.equals(this.name, other.name)\n+                && this.minimum == other.minimum\n+                && this.maximum == other.maximum;\n@@ -172,3 +167,1 @@\n-     * Returns the hash code for this GeneralSubtree.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this GeneralSubtree}\n@@ -176,0 +169,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtree.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -313,0 +313,1 @@\n+    @Override\n@@ -337,4 +338,2 @@\n-            for (int i=maskLen; i < address.length; i++)\n-                if (address[i] != other[i])\n-                    return false;\n-            return true;\n+            return Arrays.equals(address, maskLen, address.length, other,\n+                    maskLen, address.length);\n@@ -349,3 +348,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -353,0 +350,1 @@\n+    @Override\n@@ -354,6 +352,1 @@\n-        int retval = 0;\n-\n-        for (int i=0; i<address.length; i++)\n-            retval += address[i] * i;\n-\n-        return retval;\n+        return Arrays.hashCode(address);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IPAddressName.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -136,0 +137,1 @@\n+    @Override\n@@ -137,4 +139,1 @@\n-        int retval = 0;\n-        for (int i = 0; i < octetString.length; i++)\n-            retval += octetString[i] * i;\n-        return retval;\n+        return Arrays.hashCode(octetString);\n@@ -146,2 +145,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n@@ -149,4 +149,2 @@\n-        if (!(other instanceof KeyIdentifier))\n-            return false;\n-        byte[] otherString = ((KeyIdentifier)other).octetString;\n-        return java.util.Arrays.equals(octetString, otherString);\n+        return obj instanceof KeyIdentifier other\n+                && Arrays.equals(octetString, other.octetString);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyIdentifier.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,0 +114,1 @@\n+    @Override\n@@ -118,4 +119,2 @@\n-        if (!(obj instanceof OIDName other))\n-            return false;\n-\n-        return oid.equals(other.oid);\n+        return obj instanceof OIDName other\n+                && oid.equals(other.oid);\n@@ -125,3 +124,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -129,0 +126,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDName.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,0 +174,1 @@\n+    @Override\n@@ -206,3 +207,1 @@\n-     * Returns the hash code for this OtherName.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this OtherName}\n@@ -210,0 +209,1 @@\n+    @Override\n@@ -212,4 +212,1 @@\n-            myhash = 37 + oid.hashCode();\n-            for (int i = 0; i < nameValue.length; i++) {\n-                myhash = 37 * myhash + nameValue[i];\n-            }\n+            myhash = oid.hashCode() + Arrays.hashCode(nameValue);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OtherName.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-     * @param other object to be compared with this\n+     * @param obj object to be compared with this\n@@ -128,8 +128,5 @@\n-    public boolean equals(Object other) {\n-        if (!(other instanceof PolicyInformation piOther))\n-            return false;\n-\n-        if (!policyIdentifier.equals(piOther.getPolicyIdentifier()))\n-            return false;\n-\n-        return policyQualifiers.equals(piOther.getPolicyQualifiers());\n+    @Override\n+    public boolean equals(Object obj) {\n+        return obj instanceof PolicyInformation other\n+                && policyIdentifier.equals(other.getPolicyIdentifier())\n+                && policyQualifiers.equals(other.getPolicyQualifiers());\n@@ -139,3 +136,1 @@\n-     * Returns the hash code for this PolicyInformation.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this PolicyInformation}\n@@ -143,0 +138,1 @@\n+    @Override\n@@ -144,3 +140,1 @@\n-        int myhash = 37 + policyIdentifier.hashCode();\n-        myhash = 37 * myhash + policyQualifiers.hashCode();\n-        return myhash;\n+        return Objects.hash(policyIdentifier, policyQualifiers);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyInformation.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,0 +136,1 @@\n+    @Override\n@@ -149,3 +150,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -153,0 +152,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/RFC822Name.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -218,0 +218,1 @@\n+    @Override\n@@ -278,3 +279,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -282,0 +281,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/URIName.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -398,0 +398,1 @@\n+    @Override\n@@ -407,0 +408,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X500Name.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1299,0 +1299,1 @@\n+        @Override\n@@ -1313,3 +1314,1 @@\n-         * Returns a hash code value for this X509IssuerSerial.\n-         *\n-         * @return the hash code value\n+         * {@return a hash code value for this X509IssuerSerial}\n@@ -1317,0 +1316,1 @@\n+        @Override\n@@ -1320,3 +1320,1 @@\n-                h = 17;\n-                h = 37*h + issuer.hashCode();\n-                h = 37*h + serial.hashCode();\n+                h = Objects.hash(issuer, serial);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,1 +182,1 @@\n-     * @param other the object being compared with this one\n+     * @param obj the object being compared with this one\n@@ -185,17 +185,3 @@\n-    public boolean equals(Object other) {\n-        if (other instanceof X509CertInfo) {\n-            return equals((X509CertInfo) other);\n-        } else {\n-            return false;\n-        }\n-    }\n-\n-    \/**\n-     * Compares two certificates, returning false if any data\n-     * differs between the two.\n-     *\n-     * @param other the object being compared with this one\n-     * @return true iff the certificates are equivalent\n-     *\/\n-    public boolean equals(X509CertInfo other) {\n-        if (this == other) {\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n@@ -203,9 +189,0 @@\n-        } else if (rawCertInfo == null || other.rawCertInfo == null) {\n-            return false;\n-        } else if (rawCertInfo.length != other.rawCertInfo.length) {\n-            return false;\n-        }\n-        for (int i = 0; i < rawCertInfo.length; i++) {\n-            if (rawCertInfo[i] != other.rawCertInfo[i]) {\n-                return false;\n-            }\n@@ -213,1 +190,4 @@\n-        return true;\n+        return obj instanceof X509CertInfo other\n+                && rawCertInfo != null\n+                && other.rawCertInfo != null\n+                && Arrays.equals(rawCertInfo, other.rawCertInfo);\n@@ -220,0 +200,1 @@\n+    @Override\n@@ -221,6 +202,1 @@\n-        int     retval = 0;\n-\n-        for (int i = 1; i < rawCertInfo.length; i++) {\n-            retval += rawCertInfo[i] * i;\n-        }\n-        return retval;\n+        return Arrays.hashCode(rawCertInfo);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":11,"deletions":35,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Objects;\n@@ -401,0 +402,1 @@\n+    @Override\n@@ -422,0 +424,1 @@\n+    @Override\n@@ -423,6 +426,1 @@\n-        byte[] b1 = getEncodedInternal();\n-        int r = b1.length;\n-        for (int i = 0; i < b1.length; i++) {\n-            r += (b1[i] & 0xff) * 37;\n-        }\n-        return r;\n+        return Arrays.hashCode(getEncodedInternal());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-File-Date: 2023-05-11\n+File-Date: 2023-08-02\n@@ -47647,0 +47647,9 @@\n+Subtag: blasl\n+Description: Black American Sign Language dialect\n+Added: 2023-07-31\n+Prefix: ase\n+Prefix: sgn-ase\n+Comments: Black American Sign Language (BASL) or Black Sign Variation\n+  (BSV) is a dialect of American Sign Language (ASL)\n+%%\n+Type: variant\n","filename":"src\/java.base\/share\/data\/lsrdata\/language-subtag-registry.txt","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -286,1 +286,4 @@\n-     * ignoring white space.  Therefore, a documentation comment\n+     * ignoring white space, annotations, end-of-line-comments ({@code\n+     * \"\/\/\"} comments), and intermediate traditional comments\n+     * (<code>\"\/* ... *&#47;\"<\/code> comments) that are not doc comments.\n+     * Therefore, a documentation comment\n@@ -289,4 +292,11 @@\n-     * the comment as it appears in source code.  The leading \"{@code \/**}\"\n-     * and trailing \"<code>*&#47;<\/code>\" are removed.  For lines\n-     * of the comment starting after the initial \"{@code \/**}\",\n-     * leading white space characters are discarded as are any\n+     * the comment as it appears in source code:\n+     * <ul>\n+     * <li>The leading \"{@code \/**}\" is removed, as are any\n+     * immediately following space characters on that line. If all the\n+     * characters of the line are removed, it makes no contribution to\n+     * the returned comment.\n+     * <li>For subsequent lines\n+     * of the doc comment starting after the initial \"{@code \/**}\",\n+     * if the lines start with <em>zero<\/em> or more whitespace characters followed by\n+     * <em>one<\/em> or more \"{@code *}\" characters,\n+     * those leading whitespace characters are discarded as are any\n@@ -294,1 +304,10 @@\n-     * space or starting the line.  The processed lines are then\n+     * space or starting the line.\n+     * Otherwise, if a line does not have a prefix of the described\n+     * form, the entire line is retained.\n+     * <li> The trailing \"<code>*&#47;<\/code>\" is removed. The line\n+     * with the trailing\" <code>*&#47;<\/code>\" also undergoes leading\n+     * space and \"{@code *}\" character removal as described above. If all the characters\n+     * of the line are removed, it makes no contribution to the\n+     * returned comment.\n+     * <\/ul>\n+     * The processed lines are then\n@@ -302,0 +321,1 @@\n+     * @jls 3.7 Comments\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":26,"deletions":6,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -188,0 +188,6 @@\n+\n+                        \/\/ Notify native side to handle check box style menuitem\n+                        if (parentRole == AccessibleRole.POPUP_MENU && newValue != null\n+                                && ((AccessibleState)newValue) == AccessibleState.FOCUSED) {\n+                            menuItemSelected(ptr);\n+                        }\n@@ -195,0 +201,6 @@\n+\n+                        \/\/ Notify native side to handle radio button style menuitem\n+                        if (parentRole == AccessibleRole.POPUP_MENU && newValue != null\n+                            && ((AccessibleState)newValue) == AccessibleState.FOCUSED) {\n+                            menuItemSelected(ptr);\n+                        }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -440,1 +440,1 @@\n-                    Dimension delta = table.getParent().getSize();\n+                    Dimension delta = SwingUtilities.getUnwrappedParent(table).getSize();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTableUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,0 +234,1 @@\n+\n@@ -249,0 +250,1 @@\n+            Writer writer = this.writer;\n@@ -298,0 +300,1 @@\n+\n@@ -299,0 +302,1 @@\n+        Writer writer = this.writer;\n@@ -312,0 +316,1 @@\n+        Writer writer = this.writer;\n@@ -326,1 +331,0 @@\n-            writer = null;\n@@ -328,0 +332,1 @@\n+            this.writer = null;\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/StreamHandler.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -178,6 +178,3 @@\n-        if (!(obj instanceof DelegationPermission that)) {\n-            return false;\n-        }\n-\n-        return this.subordinate.equals(that.subordinate) &&\n-                this.service.equals(that.service);\n+        return obj instanceof DelegationPermission that\n+                && this.subordinate.equals(that.subordinate)\n+                && this.service.equals(that.service);\n@@ -187,3 +184,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -193,1 +188,1 @@\n-        return 17 * subordinate.hashCode() + 31 * service.hashCode();\n+        return Objects.hash(subordinate, service);\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/DelegationPermission.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,3 +177,1 @@\n-     * Returns a hash code for this {@code EncryptionKey}.\n-     *\n-     * @return a hash code for this {@code EncryptionKey}.\n+     * {@return a hash code for this {@code EncryptionKey}}\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/EncryptionKey.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,3 +149,1 @@\n-     * Returns a hash code for this {@code KerberosCredMessage}.\n-     *\n-     * @return a hash code for this {@code KerberosCredMessage}.\n+     * {@return a hash code for this {@code KerberosCredMessage}}\n@@ -158,1 +156,1 @@\n-            return Objects.hash(sender, recipient, Arrays.hashCode(message));\n+            return Arrays.deepHashCode(new Object[]{sender, recipient, message});\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosCredMessage.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -281,3 +282,1 @@\n-     * Returns a hash code for this {@code KerberosKey}.\n-     *\n-     * @return a hash code for this {@code KerberosKey}.\n+     * {@return a hash code for this {@code KerberosKey}}\n@@ -286,0 +285,1 @@\n+    @Override\n@@ -311,0 +311,1 @@\n+    @Override\n@@ -331,5 +332,1 @@\n-        if (principal == null) {\n-            return otherKey.getPrincipal() == null;\n-        } else {\n-            return principal.equals(otherKey.getPrincipal());\n-        }\n+        return Objects.equals(principal, otherKey.getPrincipal());\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosKey.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,2 +230,2 @@\n-     * Returns a hash code for this {@code KerberosPrincipal}. The hash code\n-     * is defined to be the result of the following calculation:\n+     * {@return a hash code for this {@code KerberosPrincipal}}\n+     * The hash code is defined to be the result of the following calculation:\n@@ -235,2 +235,0 @@\n-     *\n-     * @return a hash code for this {@code KerberosPrincipal}.\n@@ -238,0 +236,1 @@\n+    @Override\n@@ -250,1 +249,1 @@\n-     * @param other the object to compare to\n+     * @param obj the object to compare to\n@@ -254,1 +253,2 @@\n-    public boolean equals(Object other) {\n+    @Override\n+    public boolean equals(Object obj) {\n@@ -256,1 +256,1 @@\n-        if (other == this)\n+        if (obj == this)\n@@ -259,6 +259,2 @@\n-        if (! (other instanceof KerberosPrincipal)) {\n-            return false;\n-        }\n-        String myFullName = getName();\n-        String otherFullName = ((KerberosPrincipal) other).getName();\n-        return myFullName.equals(otherFullName);\n+        return obj instanceof KerberosPrincipal other\n+                && getName().equals(other.getName());\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosPrincipal.java","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -719,3 +719,1 @@\n-     * Returns a hash code for this {@code KerberosTicket}.\n-     *\n-     * @return a hash code for this {@code KerberosTicket}.\n+     * {@return a hash code for this {@code KerberosTicket}}\n@@ -724,0 +722,1 @@\n+    @Override\n@@ -771,0 +770,1 @@\n+    @Override\n@@ -795,33 +795,4 @@\n-        \/\/ authTime may be null\n-        if (authTime == null) {\n-            if (otherTicket.getAuthTime() != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!authTime.equals(otherTicket.getAuthTime())) {\n-                return false;\n-            }\n-        }\n-\n-        \/\/ startTime may be null\n-        if (startTime == null) {\n-            if (otherTicket.getStartTime() != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!startTime.equals(otherTicket.getStartTime())) {\n-                return false;\n-            }\n-        }\n-\n-        if (renewTill == null) {\n-            if (otherTicket.getRenewTill() != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!renewTill.equals(otherTicket.getRenewTill())) {\n-                return false;\n-            }\n-        }\n-\n-        return Objects.equals(proxy, otherTicket.proxy);\n+        return Objects.equals(authTime, otherTicket.getAuthTime())\n+                && Objects.equals(startTime, otherTicket.getStartTime())\n+                && Objects.equals(renewTill, otherTicket.getRenewTill())\n+                && Objects.equals(proxy, otherTicket.proxy);\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosTicket.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,3 +331,1 @@\n-     * Returns a hash code for this {@code KeyTab}.\n-     *\n-     * @return a hash code for this {@code KeyTab}.\n+     * {@return a hash code for this {@code KeyTab}}\n@@ -335,0 +333,1 @@\n+    @Override\n@@ -348,0 +347,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KeyTab.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -243,3 +243,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/ServicePermission.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,1 @@\n+    @Override\n@@ -196,3 +197,1 @@\n-     * Returns a hashcode value for this ChannelBinding object.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this ChannelBinding object}\n@@ -200,0 +199,1 @@\n+    @Override\n@@ -206,1 +206,1 @@\n-            return new String(appData).hashCode();\n+            return Arrays.hashCode(appData);\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/ChannelBinding.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -361,0 +361,1 @@\n+    @Override\n@@ -364,3 +365,1 @@\n-     * Returns a hashcode value for this GSSCredential.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSCredential}\n@@ -368,0 +367,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/GSSCredential.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,0 +201,1 @@\n+    @Override\n@@ -204,3 +205,1 @@\n-     * Returns a hashcode value for this GSSName.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSName}\n@@ -208,0 +207,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/GSSName.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,0 +153,1 @@\n+    @Override\n@@ -157,1 +158,1 @@\n-            return (true);\n+            return true;\n@@ -208,3 +209,1 @@\n-     * Returns a hashcode value for this Oid.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this Oid}\n@@ -212,0 +211,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/Oid.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -479,0 +479,1 @@\n+    @Override\n@@ -515,3 +516,1 @@\n-     * Returns a hashcode value for this GSSCredential.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSCredential}\n@@ -519,0 +518,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSCredentialImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -335,3 +335,1 @@\n-     * Returns a hashcode value for this GSSName.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSName}\n@@ -339,0 +337,1 @@\n+    @Override\n@@ -353,0 +352,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSNameImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import java.util.Objects;\n+\n@@ -451,0 +453,1 @@\n+        @Override\n@@ -460,9 +463,2 @@\n-            if (this.p.getName().equals(that.p.getName())) {\n-                if (this.oid != null && that.oid != null) {\n-                    return this.oid.equals(that.oid);\n-                } else {\n-                    return (this.oid == null && that.oid == null);\n-                }\n-            }\n-\n-            return false;\n+            return this.p.getName().equals(that.p.getName())\n+                    && Objects.equals(this.oid, that.oid);\n@@ -471,0 +467,1 @@\n+        @Override\n@@ -472,8 +469,1 @@\n-            int result = 17;\n-\n-            result = 37 * result + p.getName().hashCode();\n-            if (oid != null) {\n-                result = 37 * result + oid.hashCode();\n-            }\n-\n-            return result;\n+            return Objects.hash(p.getName(), oid);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/ProviderList.java","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,0 +243,1 @@\n+    @Override\n@@ -258,3 +259,1 @@\n-     * Returns a hashcode value for this GSSNameSpi.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSNameSpi}\n@@ -262,0 +261,1 @@\n+    @Override\n@@ -263,1 +263,1 @@\n-        return 37 * 17 + krb5PrincipalName.getName().hashCode();\n+        return krb5PrincipalName.getName().hashCode();\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/krb5\/Krb5NameElement.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,1 @@\n+    @Override\n@@ -69,3 +70,1 @@\n-     * Returns a hashcode value for this GSSNameSpi.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSNameSpi}\n@@ -73,0 +72,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/spi\/GSSNameSpi.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import java.util.Objects;\n+\n@@ -136,6 +138,1 @@\n-        int result = 17;\n-        result = 37 * result + returnCode;\n-        if (error != null) {\n-            result = 37 * result + error.hashCode();\n-        }\n-        return result;\n+        return Objects.hash(returnCode, error);\n@@ -149,10 +146,3 @@\n-        if (!(obj instanceof KrbException)) {\n-            return false;\n-        }\n-\n-        KrbException other = (KrbException)obj;\n-        if (returnCode != other.returnCode) {\n-            return false;\n-        }\n-        return (error == null)?(other.error == null):\n-            (error.equals(other.error));\n+        return obj instanceof KrbException other\n+                && returnCode == other.returnCode\n+                && Objects.equals(error, other.error);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/KrbException.java","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -212,6 +212,3 @@\n-        if (o instanceof PrincipalName) {\n-            PrincipalName other = (PrincipalName)o;\n-            return nameRealm.equals(other.nameRealm) &&\n-                    Arrays.equals(nameStrings, other.nameStrings);\n-        }\n-        return false;\n+        return o instanceof PrincipalName other\n+                && nameRealm.equals(other.nameRealm)\n+                && Arrays.equals(nameStrings, other.nameStrings);\n@@ -516,0 +513,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/PrincipalName.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,0 +75,1 @@\n+    @Override\n@@ -80,6 +81,2 @@\n-        if (!(obj instanceof Realm)) {\n-            return false;\n-        }\n-\n-        Realm that = (Realm)obj;\n-        return this.realm.equals(that.realm);\n+        return obj instanceof Realm that\n+                && this.realm.equals(that.realm);\n@@ -88,0 +85,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Realm.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,1 @@\n+    @Override\n@@ -82,9 +83,3 @@\n-        if (hashCode == 0) {\n-            int result = 17;\n-            result = 37*result + addrType;\n-            if (address != null) {\n-                for (int i=0; i < address.length; i++)  {\n-                    result = 37*result + address[i];\n-                }\n-            }\n-            hashCode = result;\n+        int h = hashCode;\n+        if (h == 0) {\n+            hashCode = h = (37 * addrType + Arrays.hashCode(address));\n@@ -92,2 +87,1 @@\n-        return hashCode;\n-\n+        return h;\n@@ -96,0 +90,1 @@\n+    @Override\n@@ -101,1 +96,1 @@\n-        if (!(obj instanceof HostAddress)) {\n+        if (!(obj instanceof HostAddress h)) {\n@@ -105,13 +100,2 @@\n-        HostAddress h = (HostAddress)obj;\n-        if (addrType != h.addrType ||\n-            (address != null && h.address == null) ||\n-            (address == null && h.address != null))\n-            return false;\n-        if (address != null && h.address != null) {\n-            if (address.length != h.address.length)\n-                return false;\n-            for (int i = 0; i < address.length; i++)\n-                if (address[i] != h.address[i])\n-                    return false;\n-        }\n-        return true;\n+        return addrType == h.addrType\n+                && Arrays.equals(address, h.address);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/HostAddress.java","additions":10,"deletions":26,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,0 +133,1 @@\n+    @Override\n@@ -134,8 +135,3 @@\n-        if (hashCode == 0) {\n-            int result = 17;\n-            if (addresses != null) {\n-                for (int i=0; i < addresses.length; i++)  {\n-                    result = 37*result + addresses[i].hashCode();\n-                }\n-            }\n-            hashCode = result;\n+        int h = hashCode;\n+        if (h == 0) {\n+            hashCode = h = Arrays.hashCode(addresses);\n@@ -143,2 +139,1 @@\n-        return hashCode;\n-\n+        return h;\n@@ -147,1 +142,1 @@\n-\n+    @Override\n@@ -153,1 +148,1 @@\n-        if (!(obj instanceof HostAddresses)) {\n+        if (!(obj instanceof HostAddresses addrs)) {\n@@ -157,12 +152,1 @@\n-        HostAddresses addrs = (HostAddresses)obj;\n-        if ((addresses == null && addrs.addresses != null) ||\n-            (addresses != null && addrs.addresses == null))\n-            return false;\n-        if (addresses != null && addrs.addresses != null) {\n-            if (addresses.length != addrs.addresses.length)\n-                return false;\n-            for (int i = 0; i < addresses.length; i++)\n-                if (!addresses[i].equals(addrs.addresses[i]))\n-                    return false;\n-        }\n-        return true;\n+        return Arrays.equals(addresses, addrs.addresses);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/HostAddresses.java","additions":9,"deletions":25,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+import java.util.Objects;\n+\n@@ -491,1 +493,1 @@\n-        if (!(obj instanceof KRBError)) {\n+        if (!(obj instanceof KRBError other)) {\n@@ -495,1 +497,0 @@\n-        KRBError other = (KRBError)obj;\n@@ -498,4 +499,0 @@\n-                isEqual(cTime, other.cTime) &&\n-                isEqual(cuSec, other.cuSec) &&\n-                isEqual(sTime, other.sTime) &&\n-                isEqual(suSec, other.suSec) &&\n@@ -503,10 +500,10 @@\n-                isEqual(crealm, other.crealm) &&\n-                isEqual(cname, other.cname) &&\n-                isEqual(sname, other.sname) &&\n-                isEqual(eText, other.eText) &&\n-                java.util.Arrays.equals(eData, other.eData) &&\n-                isEqual(eCksum, other.eCksum);\n-    }\n-\n-    private static boolean isEqual(Object a, Object b) {\n-        return (a == null)?(b == null):(a.equals(b));\n+                Objects.equals(cTime, other.cTime) &&\n+                Objects.equals(cuSec, other.cuSec) &&\n+                Objects.equals(sTime, other.sTime) &&\n+                Objects.equals(suSec, other.suSec) &&\n+                Objects.equals(crealm, other.crealm) &&\n+                Objects.equals(cname, other.cname) &&\n+                Objects.equals(sname, other.sname) &&\n+                Objects.equals(eText, other.eText) &&\n+                Arrays.equals(eData, other.eData) &&\n+                Objects.equals(eCksum, other.eCksum);\n@@ -519,0 +516,1 @@\n+        result = 37 * result + errorCode;\n@@ -523,1 +521,0 @@\n-        result = 37 * result + errorCode;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/KRBError.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-            throw new AssertionError();\n+            return S.errPos();\n@@ -156,1 +156,1 @@\n-            throw new AssertionError();\n+            S.errPos(pos);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/VirtualParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.HashMap;\n@@ -29,0 +30,1 @@\n+import java.util.Map;\n@@ -70,0 +72,182 @@\n+    \/**Call {@link #of(String, String)} to calculate the distance.\n+     *\n+     * <h2>Usage Examples<\/h2>\n+     *\n+     * Pick top three vocabulary words whose normalized distance from\n+     * the misspelled word is no greater than one-third.\n+     *\n+     * {@snippet :\n+     *     record Pair(String word, int distance) { }\n+     *\n+     *     var suggestions = vocabulary.stream()\n+     *             .map(v -> new Pair(v, DamerauLevenshteinDistance.of(v, misspelledWord)))\n+     *             .filter(p -> Double.compare(1.0 \/ 3, ((double) p.distance()) \/ p.word().length()) >= 0)\n+     *             .sorted(Comparator.comparingDouble(Pair::distance))\n+     *             .limit(3)\n+     *             .toList();\n+     * }\n+     *\/\n+    public static final class DamerauLevenshteinDistance {\n+\n+        \/*\n+         * This is a Java implementation of the algorithm from \"An Extension of\n+         * the String-to-String Correction Problem\" by R. Lowrance and\n+         * R. A. Wagner (https:\/\/dl.acm.org\/doi\/10.1145\/321879.321880).\n+         * That algorithm is O(|a|*|b|) in both space and time.\n+         *\n+         * This implementation encapsulates arrays and (most of) strings behind\n+         * methods to accommodate for algorithm indexing schemes which are -1,\n+         * 0, and 1 based and to offset memory and performance overhead if any\n+         * strings in the pair contain non-ASCII symbols.\n+         *\/\n+\n+        private final int INF;\n+        private final int[][] h;\n+        private final String a;\n+        private final String b;\n+\n+        private static final int Wi = 1; \/\/ insert\n+        private static final int Wd = 1; \/\/ delete\n+        private static final int Wc = 1; \/\/ change\n+        private static final int Ws = 1; \/\/ interchange\n+\n+        static {\n+            assert 2L * Ws >= Wi + Wd; \/\/ algorithm requirement\n+        }\n+\n+        private int[] smallDA;\n+        private Map<Character, Integer> bigDA;\n+\n+        \/** {@return the edit distance between two strings}\n+         * The distance returned from this method has the following properties:\n+         * <ol>\n+         *     <li> {@code a.equals(b) && of(a, b) == 0) || (!a.equals(b) && of(a, b) > 0)}\n+         *     <li> {@code of(a, b) == of(b, a)}\n+         *     <li> {@code of(a, b) + of(b, c) >= of(a, c)}\n+         * <\/ol>\n+         *\n+         * @implSpec\n+         * This method is safe to be called by multiple threads.\n+         * @throws NullPointerException if any of the two strings are null\n+         * @throws ArithmeticException if any step of the calculation\n+         *                             overflows an int\n+         *\/\n+        public static int of(String a, String b) {\n+            return new DamerauLevenshteinDistance(a, b).calculate();\n+        }\n+\n+        private int calculate() {\n+            for (int i = 0; i <= a.length(); i++) {\n+                h(i, 0, i * Wd);\n+                h(i, -1, INF);\n+            }\n+            for (int j = 0; j <= b.length(); j++) {\n+                h(0, j, j * Wi);\n+                h(-1, j, INF);\n+            }\n+            \/\/ algorithm's line #8 that initializes DA is not needed here\n+            \/\/ because this class encapsulates DA and initializes it\n+            \/\/ separately\n+            for (int i = 1; i <= a.length(); i++) {\n+                int db = 0;\n+                for (int j = 1; j <= b.length(); j++) {\n+                    int i1 = da(characterAt(b, j));\n+                    int j1 = db;\n+                    boolean eq = characterAt(a, i) == characterAt(b, j);\n+                    int d = eq ? 0 : Wc;\n+                    if (eq) {\n+                        db = j;\n+                    }\n+                    int m = min(h(i - 1, j - 1) + d,\n+                            h(i, j - 1) + Wi,\n+                            h(i - 1, j) + Wd,\n+                            h(i1 - 1, j1 - 1) + (i - i1 - 1) * Wd + Ws + (j - j1 - 1) * Wi);\n+                    h(i, j, m);\n+                }\n+                da(characterAt(a, i), i);\n+            }\n+            return h(a.length(), b.length());\n+        }\n+\n+        private int characterAt(String s, int i) {\n+            return s.charAt(i - 1);\n+        }\n+\n+        private void h(int i, int j, int value) {\n+            h[i + 1][j + 1] = value;\n+        }\n+\n+        private int h(int i, int j) {\n+            return h[i + 1][j + 1];\n+        }\n+\n+        \/*\n+         * This implementation works with UTF-16 strings, but favours strings\n+         * that comprise ASCII characters. Measuring distance between a pair\n+         * of ASCII strings is likely to be a typical use case for this\n+         * implementation.\n+         *\n+         * If a character for which the value is to be stored does not fit into\n+         * the ASCII range, this implementation switches to a different storage\n+         * dynamically. Since neither string lengths nor character values\n+         * change, any state accumulated so far, including any loops and local\n+         * variables, remains valid.\n+         *\n+         * Note, that if the provided character were a surrogate and this\n+         * implementation dealt with code points, which it does not, dynamic\n+         * switching of the storage would not be enough. The complete\n+         * representation would need to be changed. That would entail\n+         * discarding any accumulated state and repeating the computation.\n+         *\/\n+\n+        private int da(int i) {\n+            if (smallDA != null && i < '\\u0080') {\n+                return smallDA[i];\n+            }\n+            \/\/ if a character cannot be found, it means that the character\n+            \/\/ hasn't been updated, which means that the associated value\n+            \/\/ is the default value, which is 0\n+            if (bigDA != null) {\n+                Integer v = bigDA.get((char) i);\n+                return v == null ? 0 : v;\n+            } else {\n+                return 0;\n+            }\n+        }\n+\n+        private void da(int i, int value) {\n+            if (bigDA == null && i < '\\u0080') {\n+                if (smallDA == null) {\n+                    smallDA = new int[127];\n+                }\n+                smallDA[i] = value;\n+            } else {\n+                if (bigDA == null) {\n+                    bigDA = new HashMap<>();\n+                    if (smallDA != null) { \/\/ rebuild DA accumulated so far\n+                        for (int j = 0; j < smallDA.length; j++) {\n+                            int v = smallDA[j];\n+                            if (v != 0)\n+                                bigDA.put((char) j, v);\n+                        }\n+                        smallDA = null; \/\/ no longer needed\n+                    }\n+                }\n+                bigDA.put((char) i, value);\n+            }\n+            assert smallDA == null ^ bigDA == null; \/\/ at most one in use\n+        }\n+\n+        private static int min(int a, int b, int c, int d) {\n+            return Math.min(a, Math.min(b, Math.min(c, d)));\n+        }\n+\n+        private DamerauLevenshteinDistance(String a, String b) {\n+            this.a = a;\n+            this.b = b;\n+            this.h = new int[this.a.length() + 2][this.b.length() + 2];\n+            INF = this.a.length() * Wd + this.b.length() * Wi + 1;\n+            if (INF < 0)\n+                throw new ArithmeticException(\"Overflow\");\n+        }\n+    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/StringUtils.java","additions":185,"deletions":1,"binary":false,"changes":186,"status":"modified"},{"patch":"@@ -185,0 +185,1 @@\n+    @Override\n@@ -215,0 +216,1 @@\n+    @Override\n@@ -220,9 +222,1 @@\n-        byte[] b1 = getEncodedInternal();\n-        if (b1 == null) {\n-            return 0;\n-        }\n-        int r = b1.length;\n-        for (int i = 0; i < b1.length; i++) {\n-            r += (b1[i] & 0xff) * 37;\n-        }\n-        return r;\n+        return Arrays.hashCode(getEncodedInternal());\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -642,0 +642,1 @@\n+                        JNU_CHECK_EXCEPTION(env);\n@@ -662,0 +663,1 @@\n+                            JNU_CHECK_EXCEPTION(env);\n@@ -684,0 +686,1 @@\n+                                    JNU_CHECK_EXCEPTION(env);\n@@ -705,0 +708,1 @@\n+                                        JNU_CHECK_EXCEPTION(env);\n@@ -712,0 +716,1 @@\n+                                        JNU_CHECK_EXCEPTION(env);\n","filename":"src\/jdk.crypto.mscapi\/windows\/native\/libsunmscapi\/security.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    nestMembers          = type.getAddressField(\"_nest_members\");\n@@ -86,0 +87,1 @@\n+    nestHostIndex        = new CIntField(type.getCIntegerField(\"_nest_host_index\"), 0);\n@@ -145,0 +147,1 @@\n+  private static AddressField  nestMembers;\n@@ -151,0 +154,1 @@\n+  private static CIntField nestHostIndex;\n@@ -377,0 +381,1 @@\n+  public short     getNestHostIndex()       { return                (short) nestHostIndex.getValue(this); }\n@@ -903,0 +908,5 @@\n+  public U2Array getNestMembers() {\n+    Address addr = getAddress().getAddressAt(nestMembers.getOffset());\n+    return VMObjectFactory.newObject(U2Array.class, addr);\n+  }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/InstanceKlass.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2023, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package sun.jvm.hotspot.runtime;\n+\n+import java.io.*;\n+\n+import sun.jvm.hotspot.debugger.Address;\n+\n+public class AttachListenerThread extends JavaThread {\n+\n+  public AttachListenerThread (Address addr) {\n+    super(addr);\n+  }\n+\n+  public boolean isJavaThread() { return false; }\n+\n+  public boolean isAttachListenerThread() { return true; }\n+\n+}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/AttachListenerThread.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,0 +88,1 @@\n+  public boolean   isAttachListenerThread()      { return false; }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Thread.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -160,0 +160,1 @@\n+        virtualConstructor.addMapping(\"AttachListenerThread\", AttachListenerThread.class);\n@@ -167,2 +168,3 @@\n-      JvmtiAgentThread, NotificationThread, MonitorDeflationThread and ServiceThread.\n-      The latter four are subclasses of the former. Most operations\n+      JvmtiAgentThread, NotificationThread, MonitorDeflationThread,\n+      StringDedupThread, AttachListenerThread and ServiceThread.\n+      The latter seven subclasses of the former. Most operations\n@@ -174,1 +176,1 @@\n-      false for the four subclasses. FIXME: should reconsider the\n+      false for the seven subclasses. FIXME: should reconsider the\n@@ -198,1 +200,2 @@\n-            \" (expected type JavaThread, CompilerThread, MonitorDeflationThread, ServiceThread or JvmtiAgentThread)\", e);\n+            \" (expected type JavaThread, CompilerThread, MonitorDeflationThread, AttachListenerThread,\" +\n+            \" StringDedupThread, NotificationThread, ServiceThread or JvmtiAgentThread)\", e);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Threads.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+    protected short  _nestHostIndex;\n+    protected short  _nestMembersIndex;\n@@ -146,0 +148,8 @@\n+        Short nestHostIndex = utf8ToIndex.get(\"NestHost\");\n+        _nestHostIndex = (nestHostIndex != null)? nestHostIndex.shortValue() : 0;\n+        if (DEBUG) debugMessage(\"NestHost index = \" + _nestHostIndex);\n+\n+        Short nestMembersIndex = utf8ToIndex.get(\"NestMembers\");\n+        _nestMembersIndex = (nestMembersIndex != null)? nestMembersIndex.shortValue() : 0;\n+        if (DEBUG) debugMessage(\"NestMembers index = \" + _nestMembersIndex);\n+\n@@ -783,0 +793,11 @@\n+        short nestHost = klass.getNestHostIndex();\n+        if (nestHost != 0) {\n+            classAttributeCount++;\n+        }\n+\n+        U2Array nestMembers = klass.getNestMembers();\n+        final int numNestMembers = nestMembers.length();\n+        if (numNestMembers != 0) {\n+            classAttributeCount++;\n+        }\n+\n@@ -838,0 +859,17 @@\n+        if (nestHost != 0) {\n+            writeIndex(_nestHostIndex);\n+            final int nestHostAttrLen = 2;\n+            dos.writeInt(nestHostAttrLen);\n+            dos.writeShort(nestHost);\n+        }\n+\n+        if (numNestMembers != 0) {\n+           writeIndex(_nestMembersIndex);\n+           final int nestMembersAttrLen = 2 + numNestMembers * 2;\n+           dos.writeInt(nestMembersAttrLen);\n+           dos.writeShort(numNestMembers);\n+           for (int index = 0; index < numNestMembers; index++) {\n+               dos.writeShort(nestMembers.at(index));\n+           }\n+        }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/jcore\/ClassWriter.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -41,253 +41,0 @@\n-\n-4th Party Dependency\n-=============\n-org.fusesource.jansi version 2.4.0\n-org.apache.sshd 2.9.2\n-org.apache.felix.gogo.runtime 1.1.6\n-org.apache.felix.gogo.jline 1.1.8\n-=============\n-Apache License\n-                          Version 2.0, January 2004\n-                       http:\/\/www.apache.org\/licenses\/\n-\n-  TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-  1. Definitions.\n-\n-     \"License\" shall mean the terms and conditions for use, reproduction,\n-     and distribution as defined by Sections 1 through 9 of this document.\n-\n-     \"Licensor\" shall mean the copyright owner or entity authorized by\n-     the copyright owner that is granting the License.\n-\n-     \"Legal Entity\" shall mean the union of the acting entity and all\n-     other entities that control, are controlled by, or are under common\n-     control with that entity. For the purposes of this definition,\n-     \"control\" means (i) the power, direct or indirect, to cause the\n-     direction or management of such entity, whether by contract or\n-     otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-     outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-     \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-     exercising permissions granted by this License.\n-\n-     \"Source\" form shall mean the preferred form for making modifications,\n-     including but not limited to software source code, documentation\n-     source, and configuration files.\n-\n-     \"Object\" form shall mean any form resulting from mechanical\n-     transformation or translation of a Source form, including but\n-     not limited to compiled object code, generated documentation,\n-     and conversions to other media types.\n-\n-     \"Work\" shall mean the work of authorship, whether in Source or\n-     Object form, made available under the License, as indicated by a\n-     copyright notice that is included in or attached to the work\n-     (an example is provided in the Appendix below).\n-\n-     \"Derivative Works\" shall mean any work, whether in Source or Object\n-     form, that is based on (or derived from) the Work and for which the\n-     editorial revisions, annotations, elaborations, or other modifications\n-     represent, as a whole, an original work of authorship. For the purposes\n-     of this License, Derivative Works shall not include works that remain\n-     separable from, or merely link (or bind by name) to the interfaces of,\n-     the Work and Derivative Works thereof.\n-\n-     \"Contribution\" shall mean any work of authorship, including\n-     the original version of the Work and any modifications or additions\n-     to that Work or Derivative Works thereof, that is intentionally\n-     submitted to Licensor for inclusion in the Work by the copyright owner\n-     or by an individual or Legal Entity authorized to submit on behalf of\n-     the copyright owner. For the purposes of this definition, \"submitted\"\n-     means any form of electronic, verbal, or written communication sent\n-     to the Licensor or its representatives, including but not limited to\n-     communication on electronic mailing lists, source code control systems,\n-     and issue tracking systems that are managed by, or on behalf of, the\n-     Licensor for the purpose of discussing and improving the Work, but\n-     excluding communication that is conspicuously marked or otherwise\n-     designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-     \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-     on behalf of whom a Contribution has been received by Licensor and\n-     subsequently incorporated within the Work.\n-\n-  2. Grant of Copyright License. Subject to the terms and conditions of\n-     this License, each Contributor hereby grants to You a perpetual,\n-     worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-     copyright license to reproduce, prepare Derivative Works of,\n-     publicly display, publicly perform, sublicense, and distribute the\n-     Work and such Derivative Works in Source or Object form.\n-\n-  3. Grant of Patent License. Subject to the terms and conditions of\n-     this License, each Contributor hereby grants to You a perpetual,\n-     worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-     (except as stated in this section) patent license to make, have made,\n-     use, offer to sell, sell, import, and otherwise transfer the Work,\n-     where such license applies only to those patent claims licensable\n-     by such Contributor that are necessarily infringed by their\n-     Contribution(s) alone or by combination of their Contribution(s)\n-     with the Work to which such Contribution(s) was submitted. If You\n-     institute patent litigation against any entity (including a\n-     cross-claim or counterclaim in a lawsuit) alleging that the Work\n-     or a Contribution incorporated within the Work constitutes direct\n-     or contributory patent infringement, then any patent licenses\n-     granted to You under this License for that Work shall terminate\n-     as of the date such litigation is filed.\n-\n-  4. Redistribution. You may reproduce and distribute copies of the\n-     Work or Derivative Works thereof in any medium, with or without\n-     modifications, and in Source or Object form, provided that You\n-     meet the following conditions:\n-\n-     (a) You must give any other recipients of the Work or\n-         Derivative Works a copy of this License; and\n-\n-     (b) You must cause any modified files to carry prominent notices\n-         stating that You changed the files; and\n-\n-     (c) You must retain, in the Source form of any Derivative Works\n-         that You distribute, all copyright, patent, trademark, and\n-         attribution notices from the Source form of the Work,\n-         excluding those notices that do not pertain to any part of\n-         the Derivative Works; and\n-\n-     (d) If the Work includes a \"NOTICE\" text file as part of its\n-         distribution, then any Derivative Works that You distribute must\n-         include a readable copy of the attribution notices contained\n-         within such NOTICE file, excluding those notices that do not\n-         pertain to any part of the Derivative Works, in at least one\n-         of the following places: within a NOTICE text file distributed\n-         as part of the Derivative Works; within the Source form or\n-         documentation, if provided along with the Derivative Works; or,\n-         within a display generated by the Derivative Works, if and\n-         wherever such third-party notices normally appear. The contents\n-         of the NOTICE file are for informational purposes only and\n-         do not modify the License. You may add Your own attribution\n-         notices within Derivative Works that You distribute, alongside\n-         or as an addendum to the NOTICE text from the Work, provided\n-         that such additional attribution notices cannot be construed\n-         as modifying the License.\n-\n-     You may add Your own copyright statement to Your modifications and\n-     may provide additional or different license terms and conditions\n-     for use, reproduction, or distribution of Your modifications, or\n-     for any such Derivative Works as a whole, provided Your use,\n-     reproduction, and distribution of the Work otherwise complies with\n-     the conditions stated in this License.\n-\n-  5. Submission of Contributions. Unless You explicitly state otherwise,\n-     any Contribution intentionally submitted for inclusion in the Work\n-     by You to the Licensor shall be under the terms and conditions of\n-     this License, without any additional terms or conditions.\n-     Notwithstanding the above, nothing herein shall supersede or modify\n-     the terms of any separate license agreement you may have executed\n-     with Licensor regarding such Contributions.\n-\n-  6. Trademarks. This License does not grant permission to use the trade\n-     names, trademarks, service marks, or product names of the Licensor,\n-     except as required for reasonable and customary use in describing the\n-     origin of the Work and reproducing the content of the NOTICE file.\n-\n-  7. Disclaimer of Warranty. Unless required by applicable law or\n-     agreed to in writing, Licensor provides the Work (and each\n-     Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-     implied, including, without limitation, any warranties or conditions\n-     of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-     PARTICULAR PURPOSE. You are solely responsible for determining the\n-     appropriateness of using or redistributing the Work and assume any\n-     risks associated with Your exercise of permissions under this License.\n-\n-  8. Limitation of Liability. In no event and under no legal theory,\n-     whether in tort (including negligence), contract, or otherwise,\n-     unless required by applicable law (such as deliberate and grossly\n-     negligent acts) or agreed to in writing, shall any Contributor be\n-     liable to You for damages, including any direct, indirect, special,\n-     incidental, or consequential damages of any character arising as a\n-     result of this License or out of the use or inability to use the\n-     Work (including but not limited to damages for loss of goodwill,\n-     work stoppage, computer failure or malfunction, or any and all\n-     other commercial damages or losses), even if such Contributor\n-     has been advised of the possibility of such damages.\n-\n-  9. Accepting Warranty or Additional Liability. While redistributing\n-     the Work or Derivative Works thereof, You may choose to offer,\n-     and charge a fee for, acceptance of support, warranty, indemnity,\n-     or other liability obligations and\/or rights consistent with this\n-     License. However, in accepting such obligations, You may act only\n-     on Your own behalf and on Your sole responsibility, not on behalf\n-     of any other Contributor, and only if You agree to indemnify,\n-     defend, and hold each Contributor harmless for any liability\n-     incurred by, or claims asserted against, such Contributor by reason\n-     of your accepting any such warranty or additional liability.\n-\n-  END OF TERMS AND CONDITIONS\n-\n-  APPENDIX: How to apply the Apache License to your work.\n-\n-     To apply the Apache License to your work, attach the following\n-     boilerplate notice, with the fields enclosed by brackets \"[]\"\n-     replaced with your own identifying information. (Don't include\n-     the brackets!)  The text should be enclosed in the appropriate\n-     comment syntax for the file format. We also recommend that a\n-     file or class name and description of purpose be included on the\n-     same \"printed page\" as the copyright notice for easier\n-     identification within third-party archives.\n-\n-  Copyright [yyyy] [name of copyright owner]\n-\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n-\n-=============\n-juniversalchardet\n-\n-The library is subject to the Mozilla Public License Version 1.1.\n-\n-Alternatively, the library may be used under the terms of either the GNU General Public License Version 2 or later, or the GNU Lesser General Public License 2.1 or later.\n-\n-================\n-\n-slf4j\n-\n-SLF4J source code and binaries are distributed under the MIT license.\n-\n-\n-Copyright (c) 2004-2023 QOS.ch\n-All rights reserved.\n-\n-Permission is hereby granted, free of charge, to any person obtaining\n-a copy of this software and associated documentation files (the\n-\"Software\"), to deal in the Software without restriction, including\n-without limitation the rights to use, copy, modify, merge, publish,\n-distribute, sublicense, and\/or sell copies of the Software, and to\n-permit persons to whom the Software is furnished to do so, subject to\n-the following conditions:\n-\n-The above copyright notice and this permission notice shall be\n-included in all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n-MERCHANTABILITY,   FITNESS   FOR   A  PARTICULAR   PURPOSE   AND\n-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-These terms are identical to those of the MIT License, also called the X License\n-or the X11 License, which is a simple, permissive non-copyleft free software license.\n-It is deemed compatible with virtually all types of licenses, commercial or otherwise.\n-In particular, the Free Software Foundation has declared it compatible with GNU GPL.\n-It is also known to be approved by the Apache Software Foundation as compatible with\n-Apache Software License.\n-\n","filename":"src\/jdk.internal.le\/share\/legal\/jline.md","additions":0,"deletions":253,"binary":false,"changes":253,"status":"modified"},{"patch":"@@ -243,3 +243,1 @@\n-     * @param accessingClass the context of resolution. A value of {@code null} implies that the\n-     *            class should be resolved with the {@linkplain ClassLoader#getSystemClassLoader()\n-     *            system class loader}.\n+     * @param accessingClass the class loader of this class is used for resolution. Must not be null.\n@@ -249,1 +247,1 @@\n-     * @throws ClassNotFoundException if {@code resolve == true} and the resolution failed\n+     * @throws NoClassDefFoundError if {@code resolve == true} and the resolution failed\n@@ -251,2 +249,2 @@\n-    HotSpotResolvedJavaType lookupType(String name, HotSpotResolvedObjectTypeImpl accessingClass, boolean resolve) throws ClassNotFoundException {\n-        return lookupType(name, accessingClass, accessingClass != null ? accessingClass.getKlassPointer() : 0L, resolve);\n+    HotSpotResolvedJavaType lookupType(String name, HotSpotResolvedObjectTypeImpl accessingClass, boolean resolve) throws NoClassDefFoundError {\n+        return lookupType(name, accessingClass, accessingClass.getKlassPointer(), -1, resolve);\n@@ -255,1 +253,22 @@\n-    private native HotSpotResolvedJavaType lookupType(String name, HotSpotResolvedObjectTypeImpl accessingClass, long klassPointer, boolean resolve) throws ClassNotFoundException;\n+    \/**\n+     * Converts a name to a type.\n+     *\n+     * @param classLoader the class loader to use for resolution. Must not be {@code null},\n+     *           {@link ClassLoader#getPlatformClassLoader} or {@link ClassLoader#getSystemClassLoader}\n+     * @param name a well formed Java type in {@linkplain JavaType#getName() internal} format\n+     * @return the type for {@code name}\n+     * @throws NoClassDefFoundError if resolution failed\n+     *\/\n+    HotSpotResolvedJavaType lookupType(ClassLoader classLoader, String name) throws NoClassDefFoundError {\n+        int accessingClassLoader;\n+        if (classLoader == null) {\n+            accessingClassLoader = 0;\n+        } else if (classLoader == ClassLoader.getPlatformClassLoader()) {\n+            accessingClassLoader = 1;\n+        } else if (classLoader == ClassLoader.getSystemClassLoader()) {\n+            accessingClassLoader = 2;\n+        } else {\n+            throw new IllegalArgumentException(\"Unsupported class loader for lookup: \" + classLoader);\n+        }\n+        return lookupType(name, null, 0L, accessingClassLoader, true);\n+    }\n@@ -257,0 +276,13 @@\n+    \/**\n+     * @param accessingClassLoader ignored if {@code accessingKlassPointer != 0L}. Otherwise, the supported values are:\n+     *            0 - boot class loader\n+     *            1 - {@linkplain ClassLoader#getPlatformClassLoader() platform class loader}\n+     *            2 - {@linkplain ClassLoader#getSystemClassLoader() system class loader}\n+     *\/\n+    private native HotSpotResolvedJavaType lookupType(String name, HotSpotResolvedObjectTypeImpl accessingClass, long accessingKlassPointer, int accessingClassLoader, boolean resolve) throws NoClassDefFoundError;\n+\n+    \/**\n+     * Converts {@code javaClass} to a HotSpotResolvedJavaType.\n+     *\n+     * Must not be called if {@link Services#IS_IN_NATIVE_IMAGE} is {@code true}.\n+     *\/\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":39,"deletions":7,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -630,5 +630,1 @@\n-            try {\n-                return compilerToVm.lookupType(javaClass.getName().replace('.', '\/'), null, true);\n-            } catch (ClassNotFoundException e) {\n-                throw new JVMCIError(e);\n-            }\n+            return compilerToVm.lookupType(javaClass.getClassLoader(), javaClass.getName().replace('.', '\/'));\n@@ -872,2 +868,1 @@\n-        try {\n-            final HotSpotResolvedJavaType klass = compilerToVm.lookupType(name, hsAccessingType, resolve);\n+        final HotSpotResolvedJavaType klass = compilerToVm.lookupType(name, hsAccessingType, resolve);\n@@ -875,7 +870,3 @@\n-            if (klass == null) {\n-                assert resolve == false : name;\n-                return UnresolvedJavaType.create(name);\n-            }\n-            return klass;\n-        } catch (ClassNotFoundException e) {\n-            throw (NoClassDefFoundError) new NoClassDefFoundError().initCause(e);\n+        if (klass == null) {\n+            assert resolve == false : name;\n+            return UnresolvedJavaType.create(name);\n@@ -883,0 +874,1 @@\n+        return klass;\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotJVMCIRuntime.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -80,2 +80,2 @@\n-        private static ResolvedJavaType resolveType(String className) {\n-            return (ResolvedJavaType) runtime().lookupTypeInternal(className, null, true);\n+        private static ResolvedJavaType resolveType(String className, HotSpotResolvedObjectType accessingType) {\n+            return (ResolvedJavaType) runtime().lookupTypeInternal(className, accessingType, true);\n@@ -86,3 +86,4 @@\n-                ResolvedJavaType methodHandleType = resolveType(\"Ljava\/lang\/invoke\/MethodHandle;\");\n-                ResolvedJavaType memberNameType = resolveType(\"Ljava\/lang\/invoke\/MemberName;\");\n-                lambdaFormType = resolveType(\"Ljava\/lang\/invoke\/LambdaForm;\");\n+                HotSpotResolvedObjectType accessingType = runtime().getJavaLangObject();\n+                ResolvedJavaType methodHandleType = resolveType(\"Ljava\/lang\/invoke\/MethodHandle;\", accessingType);\n+                ResolvedJavaType memberNameType = resolveType(\"Ljava\/lang\/invoke\/MemberName;\", accessingType);\n+                lambdaFormType = resolveType(\"Ljava\/lang\/invoke\/LambdaForm;\", accessingType);\n@@ -92,1 +93,1 @@\n-                ResolvedJavaType methodType = resolveType(\"Ljava\/lang\/invoke\/ResolvedMethodName;\");\n+                ResolvedJavaType methodType = resolveType(\"Ljava\/lang\/invoke\/ResolvedMethodName;\", accessingType);\n@@ -94,1 +95,1 @@\n-                vmtargetField = (HotSpotResolvedJavaField) findFieldInClass(methodType, \"vmtarget\", resolveType(Character.toString(HotSpotJVMCIRuntime.getHostWordKind().getTypeChar())));\n+                vmtargetField = (HotSpotResolvedJavaField) findFieldInClass(methodType, \"vmtarget\", resolveType(Character.toString(HotSpotJVMCIRuntime.getHostWordKind().getTypeChar()), accessingType));\n@@ -96,1 +97,1 @@\n-                ResolvedJavaType callSiteType = resolveType(\"Ljava\/lang\/invoke\/CallSite;\");\n+                ResolvedJavaType callSiteType = resolveType(\"Ljava\/lang\/invoke\/CallSite;\", accessingType);\n@@ -98,2 +99,2 @@\n-                ResolvedJavaType constantCallSiteType = resolveType(\"Ljava\/lang\/invoke\/ConstantCallSite;\");\n-                ResolvedJavaType booleanType = resolveType(\"Z\");\n+                ResolvedJavaType constantCallSiteType = resolveType(\"Ljava\/lang\/invoke\/ConstantCallSite;\", accessingType);\n+                ResolvedJavaType booleanType = resolveType(\"Z\", accessingType);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotMethodHandleAccessProvider.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -191,10 +191,2 @@\n-            try {\n-                String name = theClass.getName().replace('.', '\/');\n-                HotSpotResolvedObjectTypeImpl type = (HotSpotResolvedObjectTypeImpl) runtime().compilerToVm.lookupType(name, null, true);\n-                if (type == null) {\n-                    throw new InternalError(name);\n-                }\n-                return type;\n-            } catch (ClassNotFoundException e) {\n-                throw new InternalError(e);\n-            }\n+            String name = theClass.getName().replace('.', '\/');\n+            return (HotSpotResolvedObjectTypeImpl) runtime().compilerToVm.lookupType(theClass.getClassLoader(), name);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/SharedLibraryJVMCIReflection.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.io.FileNotFoundException;\n@@ -29,0 +30,1 @@\n+import java.net.URL;\n@@ -34,1 +36,0 @@\n-import java.util.Arrays;\n@@ -64,0 +65,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.ResourceIOException;\n@@ -110,6 +112,0 @@\n-    \/**\n-     * Base path for resources for this doclet.\n-     *\/\n-    private static final DocPath DOCLET_RESOURCES = DocPath\n-            .create(\"\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\");\n-\n@@ -235,2 +231,2 @@\n-        performCopy(options.helpFile(), DocPath.empty);\n-        performCopy(options.stylesheetFile(), DocPath.empty);\n+        copyFile(options.helpFile(), DocPath.empty);\n+        copyFile(options.stylesheetFile(), DocPaths.RESOURCE_FILES);\n@@ -238,1 +234,1 @@\n-            performCopy(stylesheet, DocPath.empty);\n+            copyFile(stylesheet, DocPaths.RESOURCE_FILES);\n@@ -241,1 +237,1 @@\n-            performCopy(script, DocPaths.SCRIPT_DIR);\n+            copyFile(script, DocPaths.SCRIPT_FILES);\n@@ -307,1 +303,0 @@\n-        DocFile f;\n@@ -309,2 +304,1 @@\n-            f = DocFile.createFileForOutput(configuration, DocPaths.STYLESHEET);\n-            f.copyResource(DocPaths.RESOURCES.resolve(DocPaths.STYLESHEET), true, true);\n+            copyResource(DocPaths.STYLESHEET, DocPaths.RESOURCE_FILES.resolve(DocPaths.STYLESHEET), true);\n@@ -312,12 +306,3 @@\n-        f = DocFile.createFileForOutput(configuration, DocPaths.JAVASCRIPT);\n-        f.copyResource(DocPaths.RESOURCES.resolve(DocPaths.JAVASCRIPT), true, true);\n-        f = DocFile.createFileForOutput(configuration, DocPaths.CLIPBOARD_SVG);\n-        f.copyResource(DocPaths.RESOURCES.resolve(DocPaths.CLIPBOARD_SVG), true, true);\n-        f = DocFile.createFileForOutput(configuration, DocPaths.LINK_SVG);\n-        f.copyResource(DocPaths.RESOURCES.resolve(DocPaths.LINK_SVG), true, true);\n-        if (options.createIndex()) {\n-            f = DocFile.createFileForOutput(configuration, DocPaths.SEARCH_JS);\n-            f.copyResource(DOCLET_RESOURCES.resolve(DocPaths.SEARCH_JS_TEMPLATE), configuration.docResources);\n-\n-            f = DocFile.createFileForOutput(configuration, DocPaths.SEARCH_PAGE_JS);\n-            f.copyResource(DOCLET_RESOURCES.resolve(DocPaths.SEARCH_PAGE_JS), configuration.docResources);\n+        copyResource(DocPaths.SCRIPT_JS, DocPaths.SCRIPT_FILES.resolve(DocPaths.SCRIPT_JS), true);\n+        copyResource(DocPaths.CLIPBOARD_SVG, DocPaths.RESOURCE_FILES.resolve(DocPaths.CLIPBOARD_SVG), true);\n+        copyResource(DocPaths.LINK_SVG, DocPaths.RESOURCE_FILES.resolve(DocPaths.LINK_SVG), true);\n@@ -325,7 +310,12 @@\n-            f = DocFile.createFileForOutput(configuration, DocPaths.RESOURCES.resolve(DocPaths.GLASS_IMG));\n-            f.copyResource(DOCLET_RESOURCES.resolve(DocPaths.GLASS_IMG), true, false);\n-\n-            f = DocFile.createFileForOutput(configuration, DocPaths.RESOURCES.resolve(DocPaths.X_IMG));\n-            f.copyResource(DOCLET_RESOURCES.resolve(DocPaths.X_IMG), true, false);\n-            copyJqueryFiles();\n-        }\n+        if (options.createIndex()) {\n+            copyResource(DocPaths.SEARCH_JS_TEMPLATE, DocPaths.SCRIPT_FILES.resolve(DocPaths.SEARCH_JS), true);\n+            copyResource(DocPaths.SEARCH_PAGE_JS, DocPaths.SCRIPT_FILES.resolve(DocPaths.SEARCH_PAGE_JS), true);\n+            copyResource(DocPaths.GLASS_IMG, DocPaths.RESOURCE_FILES.resolve(DocPaths.GLASS_IMG), false);\n+            copyResource(DocPaths.X_IMG, DocPaths.RESOURCE_FILES.resolve(DocPaths.X_IMG), false);\n+            \/\/ No newline replacement for JQuery files\n+            copyResource(DocPaths.JQUERY_DIR.resolve(DocPaths.JQUERY_JS),\n+                    DocPaths.SCRIPT_FILES.resolve(DocPaths.JQUERY_JS), false);\n+            copyResource(DocPaths.JQUERY_DIR.resolve(DocPaths.JQUERY_UI_JS),\n+                    DocPaths.SCRIPT_FILES.resolve(DocPaths.JQUERY_UI_JS), false);\n+            copyResource(DocPaths.JQUERY_DIR.resolve(DocPaths.JQUERY_UI_CSS),\n+                    DocPaths.RESOURCE_FILES.resolve(DocPaths.JQUERY_UI_CSS), false);        }\n@@ -343,14 +333,0 @@\n-\n-    }\n-\n-    private void copyJqueryFiles() throws DocletException {\n-        List<String> files = Arrays.asList(\n-                DocPaths.JQUERY_JS.getPath(),\n-                DocPaths.JQUERY_UI_JS.getPath(),\n-                DocPaths.JQUERY_UI_CSS.getPath());\n-        DocFile f;\n-        for (String file : files) {\n-            DocPath filePath = DocPaths.SCRIPT_DIR.resolve(file);\n-            f = DocFile.createFileForOutput(configuration, filePath);\n-            f.copyResource(DOCLET_RESOURCES.resolve(filePath), true, false);\n-        }\n@@ -447,1 +423,18 @@\n-    private void performCopy(String filename, DocPath targetPath) throws DocFileIOException {\n+    private void copyResource(DocPath sourcePath, DocPath targetPath, boolean replaceNewLine)\n+            throws DocletException {\n+        DocPath resourcePath = DocPaths.RESOURCES.resolve(sourcePath);\n+        \/\/ Resolve resources against doclets.formats.html package\n+        URL resourceURL = HtmlConfiguration.class.getResource(resourcePath.getPath());\n+        if (resourceURL == null) {\n+            throw new ResourceIOException(sourcePath, new FileNotFoundException(resourcePath.getPath()));\n+        }\n+        DocFile f = DocFile.createFileForOutput(configuration, targetPath);\n+\n+        if (sourcePath.getPath().toLowerCase(Locale.ROOT).endsWith(\".template\")) {\n+            f.copyResource(resourcePath, resourceURL, configuration.docResources);\n+        } else {\n+            f.copyResource(resourcePath, resourceURL, replaceNewLine);\n+        }\n+    }\n+\n+    private void copyFile(String filename, DocPath targetPath) throws DocFileIOException {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":41,"deletions":48,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -469,1 +469,0 @@\n-        additionalStylesheets.addAll(localStylesheets);\n@@ -477,1 +476,1 @@\n-                .setStylesheets(configuration.getMainStylesheet(), additionalStylesheets)\n+                .setStylesheets(configuration.getMainStylesheet(), additionalStylesheets, localStylesheets)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-                .setStylesheets(configuration.getMainStylesheet(), List.of()) \/\/ avoid reference to default stylesheet\n+                .setStylesheets(configuration.getMainStylesheet(), List.of(), List.of())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,2 @@\n-                                        .put(HtmlAttr.SRC, pathToRoot.resolve(DocPaths.CLIPBOARD_SVG).getPath())\n+                                        .put(HtmlAttr.SRC, pathToRoot.resolve(DocPaths.RESOURCE_FILES)\n+                                                                     .resolve(DocPaths.CLIPBOARD_SVG).getPath())\n@@ -117,1 +118,2 @@\n-                        .add(HtmlTree.SCRIPT(pathToRoot.resolve(DocPaths.SEARCH_PAGE_JS).getPath())));\n+                        .add(HtmlTree.SCRIPT(pathToRoot.resolve(DocPaths.SCRIPT_FILES)\n+                                                       .resolve(DocPaths.SEARCH_PAGE_JS).getPath())));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SearchWriter.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.List;\n@@ -235,1 +236,1 @@\n-                .setStylesheets(configuration.getMainStylesheet(), configuration.getAdditionalStylesheets());\n+                .setStylesheets(configuration.getMainStylesheet(), configuration.getAdditionalStylesheets(), List.of());\n@@ -242,30 +243,0 @@\n-    \/**\n-     * Returns a link to the stylesheet file.\n-     *\n-     * @param head the content to which the stylesheet links will be added\n-     *\/\n-    public void addStyleSheetProperties(Content head) {\n-        String filename = options.stylesheetFile();\n-        DocPath stylesheet;\n-        if (filename.length() > 0) {\n-            DocFile file = DocFile.createFileForInput(configuration, filename);\n-            stylesheet = DocPath.create(file.getName());\n-        } else {\n-            stylesheet = DocPaths.STYLESHEET;\n-        }\n-        DocPath p = relativePath.resolve(stylesheet);\n-        var link = HtmlTree.LINK(\"stylesheet\", \"text\/css\", p.getPath(), \"Style\");\n-        head.add(link);\n-        addStylesheets(head);\n-    }\n-\n-    protected void addStylesheets(Content head) {\n-        options.additionalStylesheets().forEach(css -> {\n-            DocFile file = DocFile.createFileForInput(configuration, css);\n-            DocPath cssPath = DocPath.create(file.getName());\n-            var slink = HtmlTree.LINK(\"stylesheet\", \"text\/css\", relativePath.resolve(cssPath).getPath(),\n-                                      \"Style\");\n-            head.add(slink);\n-        });\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":3,"deletions":32,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,1 @@\n+    private List<DocPath> localStylesheets = List.of();\n@@ -160,0 +161,1 @@\n+     * @param local a list of module- or package-local stylesheets to be included\n@@ -162,1 +164,1 @@\n-    public Head setStylesheets(DocPath main, List<DocPath> additional) {\n+    public Head setStylesheets(DocPath main, List<DocPath> additional, List<DocPath> local) {\n@@ -165,0 +167,1 @@\n+        this.localStylesheets = local;\n@@ -322,1 +325,1 @@\n-        addStylesheet(head, mainStylesheet);\n+        addStylesheet(head, DocPaths.RESOURCE_FILES.resolve(mainStylesheet));\n@@ -325,0 +328,5 @@\n+            addStylesheet(head, DocPaths.RESOURCE_FILES.resolve(path));\n+        }\n+\n+        for (DocPath path : localStylesheets) {\n+            \/\/ Local stylesheets are contained in doc-files, so omit resource-files prefix\n@@ -329,1 +337,1 @@\n-            addStylesheet(head, DocPaths.SCRIPT_DIR.resolve(DocPaths.JQUERY_UI_CSS));\n+            addStylesheet(head, DocPaths.RESOURCE_FILES.resolve(DocPaths.JQUERY_UI_CSS));\n@@ -340,1 +348,1 @@\n-            head.add(HtmlTree.SCRIPT(pathToRoot.resolve(DocPaths.JAVASCRIPT).getPath()));\n+            addScriptElement(head, DocPaths.SCRIPT_FILES.resolve(DocPaths.SCRIPT_JS));\n@@ -350,2 +358,2 @@\n-            addScriptElement(head, DocPaths.JQUERY_JS);\n-            addScriptElement(head, DocPaths.JQUERY_UI_JS);\n+            addScriptElement(head, DocPaths.SCRIPT_FILES.resolve(DocPaths.JQUERY_JS));\n+            addScriptElement(head, DocPaths.SCRIPT_FILES.resolve(DocPaths.JQUERY_UI_JS));\n@@ -354,1 +362,1 @@\n-            addScriptElement(head, path);\n+            addScriptElement(head, DocPaths.SCRIPT_FILES.resolve(path));\n@@ -362,1 +370,1 @@\n-        DocPath scriptFile = pathToRoot.resolve(DocPaths.SCRIPT_DIR).resolve(filePath);\n+        DocPath scriptFile = pathToRoot.resolve(filePath);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Head.java","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/copy.svg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/copy.svg","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/external-link.svg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/external-link.svg","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery\/jquery-3.6.1.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-3.6.1.js","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery\/jquery-3.6.1.min.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-3.6.1.min.js","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery\/jquery-ui.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.css","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery\/jquery-ui.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.js","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery\/jquery-ui.min.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.min.css","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery\/jquery-ui.min.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.min.js","status":"renamed"},{"patch":"","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/link.svg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/link.svg","status":"renamed"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_55_fbf9ee_1x400.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_65_dadada_1x400.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_75_dadada_1x400.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_75_e6e6e6_1x400.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_95_fef1ec_1x400.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_highlight-soft_75_cccccc_1x100.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_222222_256x240.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_2e83ff_256x240.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_454545_256x240.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_888888_256x240.png","binary":true,"status":"deleted"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_cd0a0a_256x240.png","binary":true,"status":"deleted"},{"patch":"@@ -40,1 +40,1 @@\n-    createElem(doc, tag, 'search.js');\n+    createElem(doc, tag, 'script-files\/search.js');\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/script.js","status":"renamed"},{"patch":"@@ -47,0 +47,3 @@\n+const UNICODE_LETTER = 0;\n+const UNICODE_DIGIT = 1;\n+const UNICODE_OTHER = 2;\n@@ -130,1 +133,1 @@\n-        var tokens = w.split(\/(?=[A-Z,.()<>?[\\\/])\/);\n+        var tokens = w.split(\/(?=[\\p{Lu},.()<>?[\\\/])\/u);\n@@ -134,1 +137,1 @@\n-            pattern += \"(\" + $.ui.autocomplete.escapeRegex(s).replace(\/[,?]\/g, \"$&\\\\s*?\") + \")\";\n+            pattern += \"(\" + escapeUnicodeRegex(s).replace(\/[,?]\/g, \"$&\\\\s*?\") + \")\";\n@@ -136,1 +139,1 @@\n-            var isWordToken =  \/\\w$\/.test(s);\n+            var isWordToken =  \/[\\p{L}\\p{Nd}_]$\/u.test(s);\n@@ -146,1 +149,1 @@\n-                        pattern += \"([a-z0-9$<>?[\\\\]]*?)\";\n+                        pattern += \"([\\\\p{L}\\\\p{Nd}\\\\p{Sc}<>?[\\\\]]*?)\";\n@@ -156,1 +159,1 @@\n-    var re = new RegExp(pattern, \"gi\");\n+    var re = new RegExp(pattern, \"gui\");\n@@ -160,0 +163,4 @@\n+\/\/ Unicode regular expressions do not allow certain characters to be escaped\n+function escapeUnicodeRegex(pattern) {\n+    return pattern.replace(\/[\\[\\]{}()*+?.\\\\^$|\\s]\/g, '\\\\$&');\n+}\n@@ -179,1 +186,1 @@\n-        var isUpper = isUpperCase(input[start]);\n+        var charType = getCharType(input[start]);\n@@ -186,6 +193,2 @@\n-        if (start !== 0 && !\/[\\W_]\/.test(prevChar) && !\/[\\W_]\/.test(input[start])) {\n-            if (isUpper && (isLowerCase(prevChar) || isLowerCase(nextChar))) {\n-                score -= 0.1;\n-            } else if (isMatcherUpper && start === prevEnd) {\n-                score -= isUpper ? 0.1 : 1.0;\n-            } else {\n+        if (start !== 0) {\n+            if (charType === UNICODE_DIGIT && getCharType(prevChar) === UNICODE_DIGIT) {\n@@ -193,0 +196,9 @@\n+            } else if (charType === UNICODE_LETTER && getCharType(prevChar) === UNICODE_LETTER) {\n+                var isUpper = isUpperCase(input[start]);\n+                if (isUpper && (isLowerCase(prevChar) || isLowerCase(nextChar))) {\n+                    score -= 0.1;\n+                } else if (isMatcherUpper && start === prevEnd) {\n+                    score -= isUpper ? 0.1 : 1.0;\n+                } else {\n+                    return NO_MATCH;\n+                }\n@@ -217,0 +229,3 @@\n+function isLetter(s) {\n+    return \/\\p{L}\/u.test(s);\n+}\n@@ -218,1 +233,1 @@\n-    return s !== s.toLowerCase();\n+    return \/\\p{Lu}\/u.test(s);\n@@ -221,1 +236,13 @@\n-    return s !== s.toUpperCase();\n+    return \/\\p{Ll}\/u.test(s);\n+}\n+function isDigit(s) {\n+    return \/\\p{Nd}\/u.test(s);\n+}\n+function getCharType(s) {\n+    if (isLetter(s)) {\n+        return UNICODE_LETTER;\n+    } else if (isDigit(s)) {\n+        return UNICODE_DIGIT;\n+    } else {\n+        return UNICODE_OTHER;\n+    }\n@@ -225,1 +252,1 @@\n-         + (str.match(\/([A-Z]+)\/g) || []).length \/ 10\n+         + (str.match(\/(\\p{Lu}+)\/gu) || []).length \/ 10\n@@ -416,1 +443,1 @@\n-                + \"'><img src='\" + pathtoroot + \"link.svg' alt='\" + messages.linkIcon +\"' tabindex='0'\"\n+                + \"'><img src='\" + pathtoroot + \"resource-files\/link.svg' alt='\" + messages.linkIcon +\"' tabindex='0'\"\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search.js.template","additions":43,"deletions":16,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-@import url('resources\/fonts\/dejavu.css');\n+@import url('fonts\/dejavu.css');\n@@ -760,1 +760,1 @@\n-    background-image:url('resources\/glass.png');\n+    background-image:url('glass.png');\n@@ -776,1 +776,1 @@\n-    background-image:url('resources\/x.png');\n+    background-image:url('x.png');\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/stylesheet.css","status":"renamed"},{"patch":"@@ -225,1 +225,2 @@\n-                                .put(HtmlAttr.SRC, pathToRoot.resolve(DocPaths.CLIPBOARD_SVG).getPath())\n+                                .put(HtmlAttr.SRC, pathToRoot.resolve(DocPaths.RESOURCE_FILES)\n+                                                             .resolve(DocPaths.CLIPBOARD_SVG).getPath())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.net.URL;\n@@ -179,2 +180,2 @@\n-     * @param resource the path of the resource, relative to the package of this class\n-     * @param overwrite whether or not to overwrite the file if it already exists\n+     * @param resource the path of the resource\n+     * @param url the URL of the resource\n@@ -188,1 +189,1 @@\n-    public void copyResource(DocPath resource, boolean overwrite, boolean replaceNewLine)\n+    public void copyResource(DocPath resource, URL url, boolean replaceNewLine)\n@@ -190,4 +191,1 @@\n-        if (exists() && !overwrite)\n-            return;\n-\n-        copyResource(resource, replaceNewLine, null);\n+        copyResource(resource, url, replaceNewLine, null);\n@@ -199,1 +197,2 @@\n-     * @param resource the path of the resource, relative to the package of this class\n+     * @param resource the path of the resource\n+     * @param url the URL of the resource\n@@ -205,2 +204,2 @@\n-    public void copyResource(DocPath resource, Resources resources) throws DocFileIOException, ResourceIOException {\n-        copyResource(resource, true, resources);\n+    public void copyResource(DocPath resource, URL url, Resources resources) throws DocFileIOException, ResourceIOException {\n+        copyResource(resource, url, true, resources);\n@@ -209,1 +208,1 @@\n-    private void copyResource(DocPath resource, boolean replaceNewLine, Resources resources)\n+    private void copyResource(DocPath resource, URL url, boolean replaceNewLine, Resources resources)\n@@ -212,3 +211,1 @@\n-            InputStream in = BaseConfiguration.class.getResourceAsStream(resource.getPath());\n-            if (in == null)\n-                return;\n+            InputStream in = url.openStream();\n@@ -216,1 +213,1 @@\n-            try {\n+            try (in) {\n@@ -240,2 +237,0 @@\n-            } finally {\n-                in.close();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFile.java","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    public static final DocPath JAVASCRIPT = DocPath.create(\"script.js\");\n+    public static final DocPath SCRIPT_JS = DocPath.create(\"script.js\");\n@@ -103,0 +103,3 @@\n+    \/** The name of the default jQuery directory. *\/\n+    public static final DocPath JQUERY_DIR = DocPath.create(\"jquery\");\n+\n@@ -148,0 +151,3 @@\n+    \/** The name of the directory for the resource files. *\/\n+    public static final DocPath RESOURCE_FILES = DocPath.create(\"resource-files\");\n+\n@@ -149,1 +155,1 @@\n-    public static final DocPath SCRIPT_DIR = DocPath.create(\"script-dir\");\n+    public static final DocPath SCRIPT_FILES = DocPath.create(\"script-files\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPaths.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -542,1 +542,1 @@\n-            case null, default -> throw newIllegalArgumentException(name, \"short\");\n+            case null, default -> throw newIllegalArgumentException(name, \"int\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-      return c * NANOS_PER_MILLISEC;\n+      return c * (jlong)NANOS_PER_MILLISEC;\n@@ -131,2 +131,2 @@\n-    double population_mean = population_sum \/ (double)population_size;\n-    double sample_mean = sample_sum \/ (double)sample_size;\n+    double population_mean = (double)population_sum \/ (double)population_size;\n+    double sample_mean = (double)sample_sum \/ (double)sample_size;\n@@ -138,1 +138,1 @@\n-      population_variance = population[i] * population_diff * population_diff;\n+      population_variance = (double)population[i] * population_diff * population_diff;\n@@ -141,1 +141,1 @@\n-      sample_variance = sample[i] * sample_diff * sample_diff;\n+      sample_variance = (double)sample[i] * sample_diff * sample_diff;\n@@ -143,2 +143,2 @@\n-    population_variance = population_variance \/ (population_size - 1);\n-    sample_variance = sample_variance \/ (sample_size - 1);\n+    population_variance = population_variance \/ (double)(population_size - 1);\n+    sample_variance = sample_variance \/ (double)(sample_size - 1);\n@@ -230,1 +230,1 @@\n-  EXPECT_NEAR(target_sample_size, sample_size, expected_sample_points * error_factor) << output;\n+  EXPECT_NEAR((double)target_sample_size, (double)sample_size, (double)expected_sample_points * error_factor) << output;\n","filename":"test\/hotspot\/gtest\/jfr\/test_adaptiveSampler.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-  int intmean = mean*100;\n+  int intmean = (int)(mean*100);\n@@ -150,1 +150,1 @@\n-  int intvariance = variance*100;\n+  int intvariance = (int)(variance*100);\n@@ -172,3 +172,3 @@\n-\/\/  tty->print_cr(\"expected: %s\", expected);\n-\/\/  tty->print_cr(\"result: %s\", buf);\n-  ASSERT_NE(strstr(buf, expected), (char*)NULL);\n+  \/\/ tty->print_cr(\"expected: %s\", expected);\n+  \/\/ tty->print_cr(\"result: %s\", buf);\n+  EXPECT_THAT(buf, testing::HasSubstr(expected));\n@@ -180,4 +180,4 @@\n-    \"00 01 02 03 04 05 06 07\",\n-    \"0100 0302 0504 0706\",\n-    \"03020100 07060504\",\n-    \"0706050403020100\"\n+    \"00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f\",\n+    \"0100 0302 0504 0706 0908 0b0a 0d0c 0f0e\",\n+    \"03020100 07060504 0b0a0908 0f0e0d0c\",\n+    \"0706050403020100 0f0e0d0c0b0a0908\"\n@@ -185,4 +185,4 @@\n-    \"00 01 02 03 04 05 06 07\",\n-    \"0001 0203 0405 0607\",\n-    \"00010203 04050607\",\n-    \"0001020304050607\"\n+    \"00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f\",\n+    \"0001 0203 0405 0607 0809 0a0b 0c0d 0e0f\",\n+    \"00010203 04050607 08090a0b 0c0d0e0f\",\n+    \"0001020304050607 08090a0b0c0d0e0f\"\n@@ -193,4 +193,4 @@\n-    \"?? ?? ?? ?? ?? ?? ?? ??\",\n-    \"???? ???? ???? ????\",\n-    \"???????? ????????\",\n-    \"????????????????\"\n+    \"?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ??\",\n+    \"???? ???? ???? ???? ???? ???? ???? ????\",\n+    \"???????? ???????? ???????? ????????\",\n+    \"???????????????? ????????????????\"\n@@ -226,1 +226,1 @@\n-  for (int c = 0; c < 100; c++) {\n+  for (u1 c = 0; c < 100; c++) {\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-  int v = 0xcc;\n-  int v2 = 0x11;\n+  u_char v = 0xcc;\n+  u_char v2 = 0x11;\n","filename":"test\/hotspot\/gtest\/runtime\/test_stubRoutines.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach022\/TestDescription.java 8307462 generic-all\n@@ -42,2 +41,0 @@\n-serviceability\/jvmti\/VMObjectAlloc\/VMObjectAllocTest.java 8307462 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-serviceability\/jvmti\/vthread\/FollowReferences\/VThreadStackRefTest.java#default 8309663 linux-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -108,1 +108,0 @@\n-applications\/ctw\/modules\/jdk_crypto_ec.java 8312194 generic-all\n@@ -154,1 +153,0 @@\n-vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/TestDescription.java 8307462 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,1 @@\n-requiredVersion=7.2+1\n+requiredVersion=7.3+1\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @summary run CTW for all classes from jdk.crypto.ec module\n- *\n- * @library \/test\/lib \/ \/testlibrary\/ctw\/src\n- * @modules java.base\/jdk.internal.access\n- *          java.base\/jdk.internal.jimage\n- *          java.base\/jdk.internal.misc\n- *          java.base\/jdk.internal.reflect\n- * @modules jdk.crypto.ec\n- *\n- * @build jdk.test.whitebox.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- * @run driver\/timeout=7200 sun.hotspot.tools.ctw.CtwRunner modules:jdk.crypto.ec\n- *\/\n","filename":"test\/hotspot\/jtreg\/applications\/ctw\/modules\/jdk_crypto_ec.java","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -45,2 +45,2 @@\n-        \/\/ StringUTF16.charAt intrinsic, LoadIndexed (C)\n-        char c = Helper.charAt(ARR, 0);\n+        \/\/ StringUTF16.getChar intrinsic, LoadIndexed (C)\n+        char c = Helper.getChar(ARR, 0);\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestLoadIndexedMismatch.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+ *          Requires a debug VM as it uses test.jvmci.compileMethodExceptionIsFatal\n+ *          which is only read in a debug VM.\n@@ -28,0 +30,1 @@\n+ * @requires vm.debug\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestUncaughtErrorInCompileMethod.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @library \/test\/lib\n@@ -56,0 +57,2 @@\n+import jdk.test.lib.Platform;\n+\n@@ -160,0 +163,5 @@\n+        if (!Platform.isDebugBuild()) {\n+            \/\/ The test.jvmci.forceEnomemOnLibjvmciInit property is only\n+            \/\/ read in a debug VM.\n+            return;\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestHotSpotJVMCIRuntime.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -80,0 +80,5 @@\n+    @jdk.internal.vm.annotation.ForceInline\n+    public static char getChar(byte[] value, int index) {\n+        return StringUTF16.getChar(value, index);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8313345\n+ * @summary Test SuperWord with a CMove that does not have a matching bool pack.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:-TieredCompilation -XX:CompileCommand=compileonly,*TestCMoveWithoutBoolPack*::fill -Xbatch\n+ *                   compiler.vectorization.TestCMoveWithoutBoolPack\n+ * @run main\/othervm -XX:-TieredCompilation -XX:CompileCommand=compileonly,*TestCMoveWithoutBoolPack*::fill -Xbatch\n+ *                   -XX:+UseCMoveUnconditionally\n+ *                   compiler.vectorization.TestCMoveWithoutBoolPack\n+ *\/\n+\n+package compiler.vectorization;\n+\n+public class TestCMoveWithoutBoolPack {\n+\n+    public static void main(String[] args) {\n+        A a = new A();\n+        B b = new B();\n+        double[] c = new double[1000];\n+        for (int i = 0; i < 1000; i++) {\n+            a.fill(c);\n+            b.fill(c);\n+        }\n+    }\n+\n+    public static class A {\n+        void fill(double[] array) {\n+            for (int i = 0; i < array.length; ++i) {\n+                array[i] = this.transform(array[i]);\n+            }\n+        }\n+\n+        public double transform(double value) {\n+            return value * value;\n+        }\n+    }\n+\n+    public static class B extends A {\n+        public double transform(double value) {\n+            return value;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestCMoveWithoutBoolPack.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -176,0 +176,1 @@\n+        new LogMessageWithLevel(\"Evac Fail Extra Cards\", Level.DEBUG),\n@@ -267,1 +268,3 @@\n-        new LogMessageWithLevel(\"Evacuation Failure Regions\", Level.DEBUG),\n+        new LogMessageWithLevel(\"Process Evacuation Failed Regions\", Level.DEBUG),\n+        new LogMessageWithLevel(\"Evacuation Failed Regions\", Level.DEBUG),\n+        new LogMessageWithLevel(\"New Retained Regions\", Level.DEBUG),\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,101 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package gc.z;\n-\n-\/*\n- * @test TestHighUsage\n- * @requires vm.gc.ZGenerational\n- * @summary Test ZGC \"High Usage\" rule\n- * @library \/test\/lib\n- * @ignore 8308843\n- * @run main\/othervm gc.z.TestHighUsage\n- *\/\n-\n-import java.util.LinkedList;\n-import jdk.test.lib.process.ProcessTools;\n-\n-public class TestHighUsage {\n-    static class Test {\n-        private static final int K = 1024;\n-        private static final int M = K * K;\n-        private static final long maxCapacity = Runtime.getRuntime().maxMemory();\n-        private static final long slowAllocationThreshold = 16 * M;\n-        private static final long highUsageThreshold = maxCapacity \/ 20; \/\/ 5%\n-        private static volatile LinkedList<byte[]> keepAlive;\n-        private static volatile Object dummy;\n-\n-        public static void main(String[] args) throws Exception {\n-            System.out.println(\"Max capacity: \" + (maxCapacity \/ M) + \"M\");\n-            System.out.println(\"High usage threshold: \" + (highUsageThreshold \/ M) + \"M\");\n-            System.out.println(\"Allocating live-set\");\n-\n-            \/\/ Allocate live-set\n-            keepAlive = new LinkedList<>();\n-            while (Runtime.getRuntime().freeMemory() > slowAllocationThreshold) {\n-                while (Runtime.getRuntime().freeMemory() > slowAllocationThreshold) {\n-                    keepAlive.add(new byte[128 * K]);\n-                }\n-\n-                \/\/ Compact live-set and let allocation rate settle down\n-                System.gc();\n-                Thread.sleep(2000);\n-            }\n-\n-            System.out.println(\"Allocating garbage slowly\");\n-\n-            \/\/ Allocate garbage slowly, so that the sampled allocation rate on average\n-            \/\/ becomes zero MB\/s for the last 1 second windows. Once we reach the high\n-            \/\/ usage threshold we idle to allow for a \"High Usage\" GC cycle to happen.\n-            \/\/ We need to allocate slowly to avoid an \"Allocation Rate\" GC cycle.\n-            for (int i = 0; i < 300; i++) {\n-                if (Runtime.getRuntime().freeMemory() > highUsageThreshold) {\n-                    \/\/ Allocate\n-                    dummy = new byte[128 * K];\n-                    System.out.println(\"Free: \" + (Runtime.getRuntime().freeMemory() \/ M) + \"M (Allocating)\");\n-                } else {\n-                    \/\/ Idle\n-                    System.out.println(\"Free: \" + (Runtime.getRuntime().freeMemory() \/ M) + \"M (Idling)\");\n-                }\n-\n-                Thread.sleep(250);\n-            }\n-\n-            System.out.println(\"Done\");\n-        }\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-        ProcessTools.executeTestJvm(\"-XX:+UseZGC\",\n-                                    \"-XX:+ZGenerational\",\n-                                    \"-XX:-ZProactive\",\n-                                    \"-Xms128M\",\n-                                    \"-Xmx128M\",\n-                                    \"-XX:ParallelGCThreads=1\",\n-                                    \"-XX:ConcGCThreads=1\",\n-                                    \"-Xlog:gc,gc+start\",\n-                                    Test.class.getName())\n-                    .shouldNotContain(\"Allocation Stall\")\n-                    .shouldHaveExitValue(0);\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestHighUsage.java","additions":0,"deletions":101,"binary":false,"changes":101,"status":"deleted"},{"patch":"@@ -31,1 +31,1 @@\n- * @run driver gc.z.TestSmallHeap 8M 16M 32M 64M 128M 256M 512M 1024M\n+ * @run driver gc.z.TestSmallHeap 16M 32M 64M 128M 256M 512M 1024M\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestSmallHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,3 @@\n+\n+    \/\/ Test for previous bug in misc flags printing\n+    output.shouldNotContain(\"##name\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/PrintClasses.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,0 +58,2 @@\n+    String[] classlist = { \"CpAttr1\", \"CpAttr2\", \"CpAttr3\", \"CpAttr4\", \"CpAttr5\"};\n+    String jar4 = TestCommon.getTestJar(\"cpattr4.jar\");\n@@ -60,1 +62,0 @@\n-      String jar4 = TestCommon.getTestJar(\"cpattr4.jar\");\n@@ -68,5 +69,1 @@\n-      TestCommon.testDump(cp, TestCommon.list(\"CpAttr1\",\n-                                                          \"CpAttr2\",\n-                                                          \"CpAttr3\",\n-                                                          \"CpAttr4\",\n-                                                          \"CpAttr5\"));\n+      TestCommon.testDump(cp, classlist);\n@@ -89,0 +86,10 @@\n+\n+    \/\/ test duplicate jars in the \"Class-path\" attribute in the jar manifest\n+    buildCpAttr(\"cpattr_dup\", \"cpattr_dup.mf\", \"CpAttr1\", \"CpAttr1\");\n+    String cp = TestCommon.getTestJar(\"cpattr_dup.jar\") + File.pathSeparator + jar4;\n+    TestCommon.testDump(cp, classlist);\n+\n+    TestCommon.run(\n+        \"-cp\", cp,\n+        \"CpAttr1\")\n+      .assertNormalExit();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassPathAttr.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary duplicate class paths test\n+ * @requires vm.cds\n+ * @library \/test\/lib\n+ * @compile test-classes\/Hello.java\n+ * @run driver DuplicateClassPaths\n+ *\/\n+\n+import java.io.File;\n+\n+public class DuplicateClassPaths {\n+    public static void main(String[] args) throws Exception {\n+        String appJar = JarBuilder.getOrCreateHelloJar();\n+        String jars = appJar + File.pathSeparator + appJar;\n+        TestCommon.test(jars, TestCommon.list(\"Hello\"), \"Hello\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DuplicateClassPaths.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+Manifest-Version: 1.0\n+Class-Path: cpattr2.jar cpattr2.jar\n+Created-By: 1.9.0-internal (Oracle Corporation)\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/cpattr_dup.mf","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -126,0 +126,9 @@\n+    \/\/ Verify passing a null value returns null and doesn't throw.\n+    private static void testNullValue() {\n+        System.out.println(\"running testNullValue\");\n+        registerObject(null);\n+        if (getObject() != null) {\n+            throw new RuntimeException(\"expected null\");\n+        }\n+    }\n+\n@@ -130,0 +139,1 @@\n+        testNullValue();\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/ReturnJNIWeak\/ReturnJNIWeak.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-                finalargs.add(\"-XX:+DisableTHPStackMitigation\");\n+                finalargs.add(\"-XX:-THPStackMitigation\");\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/THPsInThreadStackPreventionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,2 +147,1 @@\n-        return Platform.jvmLibDir().resolve((Platform.isWindows() ? \"\" : \"lib\")\n-                + \"jsig.\" + Platform.sharedLibraryExt());\n+        return Platform.jvmLibDir().resolve(Platform.buildSharedLibraryName(\"jsig\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/SigTestDriver.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * Copyright (c) 2023, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.JDKToolLauncher;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.apps.LingeredApp;\n+import jdk.test.lib.dcmd.PidJcmdExecutor;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import jdk.test.lib.hprof.HprofParser;\n+\n+\/**\n+ * @test\n+ * @bug 8306441\n+ * @summary Verify the integrity of generated heap dump and capability of parallel dump\n+ * @library \/test\/lib\n+ * @run main HeapDumpParallelTest\n+ *\/\n+\n+public class HeapDumpParallelTest {\n+\n+    private static void checkAndVerify(OutputAnalyzer dcmdOut, LingeredApp app, File heapDumpFile, boolean expectSerial) throws IOException {\n+        dcmdOut.shouldHaveExitValue(0);\n+        dcmdOut.shouldContain(\"Heap dump file created\");\n+        OutputAnalyzer appOut = new OutputAnalyzer(app.getProcessStdout());\n+        appOut.shouldContain(\"[heapdump]\");\n+        String opts = Arrays.asList(Utils.getTestJavaOpts()).toString();\n+        if (opts.contains(\"-XX:+UseSerialGC\") || opts.contains(\"-XX:+UseEpsilonGC\")) {\n+            System.out.println(\"UseSerialGC detected.\");\n+            expectSerial = true;\n+        }\n+        if (!expectSerial && Runtime.getRuntime().availableProcessors() > 1) {\n+            appOut.shouldContain(\"Dump heap objects in parallel\");\n+            appOut.shouldContain(\"Merge heap files complete\");\n+        } else {\n+            appOut.shouldNotContain(\"Dump heap objects in parallel\");\n+            appOut.shouldNotContain(\"Merge heap files complete\");\n+        }\n+        verifyHeapDump(heapDumpFile);\n+        if (heapDumpFile.exists()) {\n+            heapDumpFile.delete();\n+        }\n+    }\n+\n+    private static LingeredApp launchApp() throws IOException {\n+        LingeredApp theApp = new LingeredApp();\n+        LingeredApp.startApp(theApp, \"-Xlog:heapdump\", \"-Xmx512m\",\n+                             \"-XX:-UseDynamicNumberOfGCThreads\",\n+                             \"-XX:ParallelGCThreads=2\");\n+        return theApp;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        String heapDumpFileName = \"parallelHeapDump.bin\";\n+\n+        File heapDumpFile = new File(heapDumpFileName);\n+        if (heapDumpFile.exists()) {\n+            heapDumpFile.delete();\n+        }\n+\n+        LingeredApp theApp = launchApp();\n+        try {\n+            \/\/ Expect error message\n+            OutputAnalyzer out = attachJcmdHeapDump(heapDumpFile, theApp.getPid(), \"-parallel=\" + -1);\n+            out.shouldContain(\"Invalid number of parallel dump threads.\");\n+\n+            \/\/ Expect serial dump because 0 implies to disable parallel dump\n+            test(heapDumpFile, \"-parallel=\" + 0, true);\n+\n+            \/\/ Expect serial dump\n+            test(heapDumpFile,  \"-parallel=\" + 1, true);\n+\n+            \/\/ Expect parallel dump\n+            test(heapDumpFile, \"-parallel=\" + Integer.MAX_VALUE, false);\n+\n+            \/\/ Expect parallel dump\n+            test(heapDumpFile, \"-gz=9 -overwrite -parallel=\" + Runtime.getRuntime().availableProcessors(), false);\n+        } finally {\n+            theApp.stopApp();\n+        }\n+    }\n+\n+    private static void test(File heapDumpFile, String arg, boolean expectSerial) throws Exception {\n+        LingeredApp theApp = launchApp();\n+        try {\n+            OutputAnalyzer dcmdOut = attachJcmdHeapDump(heapDumpFile, theApp.getPid(), arg);\n+            theApp.stopApp();\n+            checkAndVerify(dcmdOut, theApp, heapDumpFile, expectSerial);\n+        } finally {\n+            theApp.stopApp();\n+        }\n+    }\n+\n+    private static OutputAnalyzer attachJcmdHeapDump(File heapDumpFile, long lingeredAppPid, String arg) throws Exception {\n+        \/\/ e.g. jcmd <pid> GC.heap_dump -parallel=cpucount <file_path>\n+        System.out.println(\"Testing pid \" + lingeredAppPid);\n+        PidJcmdExecutor executor = new PidJcmdExecutor(\"\" + lingeredAppPid);\n+        return executor.execute(\"GC.heap_dump \" + arg + \" \" + heapDumpFile.getAbsolutePath());\n+    }\n+\n+    private static void verifyHeapDump(File dump) {\n+        Asserts.assertTrue(dump.exists() && dump.isFile(), \"Could not create dump file \" + dump.getAbsolutePath());\n+        try {\n+            File out = HprofParser.parse(dump);\n+\n+            Asserts.assertTrue(out != null && out.exists() && out.isFile(), \"Could not find hprof parser output file\");\n+            List<String> lines = Files.readAllLines(out.toPath());\n+            Asserts.assertTrue(lines.size() > 0, \"hprof parser output file is empty\");\n+            for (String line : lines) {\n+                Asserts.assertFalse(line.matches(\".*WARNING(?!.*Failed to resolve object.*constantPoolOop.*).*\"));\n+            }\n+\n+            out.delete();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            Asserts.fail(\"Could not parse dump file \" + dump.getAbsolutePath());\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/HeapDumpParallelTest.java","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,8 +42,1 @@\n-        String libname;\n-        if (Platform.isWindows()) {\n-            libname = name + \".dll\";\n-        } else if (Platform.isOSX()) {\n-            libname = \"lib\" + name + \".dylib\";\n-        } else {\n-            libname = \"lib\" + name + \".so\";\n-        }\n+        String libname = Platform.buildSharedLibraryName(name);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/jvmti\/AttachFailed\/AttachFailedTestBase.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        Path libpath = Paths.get(jdkPath, jdkLibPath(), sharedObjectName(\"instrument\"));\n+        Path libpath = Paths.get(jdkPath, jdkLibPath(), Platform.buildSharedLibraryName(\"instrument\"));\n@@ -160,13 +160,0 @@\n-    \/**\n-     * Build name of shared object according to platform rules\n-     *\/\n-    public static String sharedObjectName(String name) {\n-        if (Platform.isWindows()) {\n-            return name + \".dll\";\n-        }\n-        if (Platform.isOSX()) {\n-            return \"lib\" + name + \".dylib\";\n-        }\n-        return \"lib\" + name + \".so\";\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/jvmti\/LoadAgentDcmdTest.java","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,19 +47,3 @@\n-\n-        String osDependentBaseString = null;\n-        if (Platform.isAix()) {\n-            osDependentBaseString = \"lib%s.so\";\n-        } else if (Platform.isLinux()) {\n-            osDependentBaseString = \"lib%s.so\";\n-        } else if (Platform.isOSX()) {\n-            osDependentBaseString = \"lib%s.dylib\";\n-        } else if (Platform.isWindows()) {\n-            osDependentBaseString = \"%s.dll\";\n-        }\n-\n-        if (osDependentBaseString == null) {\n-            Assert.fail(\"Unsupported OS\");\n-        }\n-\n-        output.shouldContain(String.format(osDependentBaseString, \"jvm\"));\n-        output.shouldContain(String.format(osDependentBaseString, \"java\"));\n-        output.shouldContain(String.format(osDependentBaseString, \"management\"));\n+        output.shouldContain(Platform.buildSharedLibraryName(\"jvm\"));\n+        output.shouldContain(Platform.buildSharedLibraryName(\"java\"));\n+        output.shouldContain(Platform.buildSharedLibraryName(\"management\"));\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/DynLibsTest.java","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -27,14 +27,2 @@\n- * @summary Test verifies set\/get TLS data and verifies it's consistency.\n- * Test set TLS with thread name which it belongs to and verify this information when getting test.\n- *  -- cbThreadStart\n- *  -- by AgentThread\n- *\n- * Test doesn't verify that TLS is not NULL because for some threads TLS is not initialized initially.\n- * TODO:\n- *  -- verify that TLS is not NULL (not possible to do with jvmti, ThreadStart might be called too late)\n- *  -- add more events where TLS is set *first time*, it is needed to test lazily jvmtThreadState init\n- *  -- set\/get TLS from other JavaThreads (not from agent and current thread)\n- *  -- set\/get for suspened (blocked?) threads\n- *  -- split test to \"sanity\" and \"stress\" version\n- *  -- update properties to run jvmti stress tests non-concurrently?\n- *\n+ * @summary Test verifies that JVMTI raw monitor wait\/notify works for\n+ * suspended virtual thread.\n@@ -67,2 +55,0 @@\n-\n-        Thread.sleep(1000);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/WaitNotifySuspendedVThreadTest.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+\/\/ Accessed using 'monitor' monitor.\n+bool is_breakpoint_reached = JNI_FALSE;\n@@ -45,2 +47,0 @@\n-\n-\n@@ -63,1 +63,0 @@\n-\n@@ -68,0 +67,8 @@\n+\n+  \/\/ Wait until virtual thread reach breakpoint and lock 'montior' monitor\n+  bool is_breakpoint_reached_local = JNI_FALSE;\n+  while (!is_breakpoint_reached_local) {\n+    RawMonitorLocker rml(jvmti_env, jni, monitor);\n+    is_breakpoint_reached_local = is_breakpoint_reached;\n+  }\n+\n@@ -74,0 +81,2 @@\n+  RawMonitorLocker completed(jvmti_env, jni, monitor_completed);\n+\n@@ -81,2 +90,0 @@\n-  RawMonitorLocker completed(jvmti_env, jni, monitor_completed);\n-\n@@ -107,0 +114,1 @@\n+\n@@ -114,0 +122,1 @@\n+    is_breakpoint_reached = JNI_TRUE;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/libWaitNotifySuspendedVThread.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-                        .resolve(libname(args[0]))\n+                        .resolve(Platform.buildSharedLibraryName(args[0]))\n@@ -42,1 +42,1 @@\n-            Path dst = dstDir.resolve(libname(args[i])).toAbsolutePath();\n+            Path dst = dstDir.resolve(Platform.buildSharedLibraryName(args[i])).toAbsolutePath();\n@@ -51,7 +51,0 @@\n-\n-    private static String libname(String name) {\n-        return String.format(\"%s%s.%s\",\n-                Platform.isWindows() ? \"\" : \"lib\",\n-                name,\n-                Platform.sharedLibraryExt());\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NativeLibraryCopier.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+ *      -Xlog:gc*:gc.log::filecount=0\n@@ -41,1 +42,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/gc\/containers\/Combination05\/TestDescription.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-requiredVersion=7.2+1\n+requiredVersion=7.3+1\n","filename":"test\/jaxp\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+\n+sun\/tools\/jhsdb\/JShellHeapDumpTest.java            8276539 generic-all\n+sun\/tools\/jhsdb\/HeapDumpTestWithActiveProcess.java 8276539 generic-all\n","filename":"test\/jdk\/ProblemList-zgc.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -737,0 +737,1 @@\n+sun\/tools\/jhsdb\/HeapDumpTestWithActiveProcess.java              8313798 generic-aarch64\n@@ -772,0 +773,3 @@\n+javax\/swing\/JFileChooser\/FileSystemView\/SystemIconTest.java 8313902 windows-all\n+sanity\/client\/SwingSet\/src\/FileChooserDemoTest.java 8313903 windows-all\n+\n","filename":"test\/jdk\/ProblemList.txt","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-requiredVersion=7.2+1\n+requiredVersion=7.3+1\n","filename":"test\/jdk\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,3 +82,2 @@\n-        String prefix = Platform.isWindows() ? \"\" : \"lib\";\n-        String libname1 = prefix + JVMTI_AGENT1_LIB + \".\" + Platform.sharedLibraryExt();\n-        String libname2 = prefix + JVMTI_AGENT2_LIB + \".\" + Platform.sharedLibraryExt();\n+        String libname1 = Platform.buildSharedLibraryName(JVMTI_AGENT1_LIB);\n+        String libname2 = Platform.buildSharedLibraryName(JVMTI_AGENT2_LIB);\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/warnings\/DynamicLoadWarningTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-                    System.err.println(\"DragSourseListener.dragDropEnd(): \" +\n+                    System.err.println(\"DragSourceListener.dragDropEnd(): \" +\n@@ -143,0 +143,1 @@\n+\n@@ -144,1 +145,1 @@\n-                System.err.println(\"DragSourseListener.dragDropEnd() \" +\n+                System.err.println(\"DragSourceListener.dragDropEnd() \" +\n@@ -149,0 +150,2 @@\n+            robot.delay(1000);\n+\n@@ -153,0 +156,1 @@\n+\n@@ -154,1 +158,1 @@\n-                System.err.println(\"DragSourseListener.dragDropEnd() \" +\n+                System.err.println(\"DragSourceListener.dragDropEnd() \" +\n@@ -174,1 +178,1 @@\n-        return n < 0 ? -1 : n == 0 ? 0 : 1;\n+        return Integer.compare(n, 0);\n","filename":"test\/jdk\/java\/awt\/dnd\/NextDropActionTest\/NextDropActionTest.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/CompositeLookupTest.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestAddressDereference.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestDowncallBase.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestFallbackLookup.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestFree.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestIllegalLink.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestLayouts.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestMemoryAccessInstance.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestMemoryDereference.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestMismatch.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestNULLAddress.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestNulls.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestSegmentOffset.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestSegmentOverlap.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/TestValueLayouts.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,5 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.  Oracle designates this\n- *  particular file as subject to the \"Classpath\" exception as provided\n- *  by Oracle in the LICENSE file that accompanied this code.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -11,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -17,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -25,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n@@ -26,0 +23,1 @@\n+\n","filename":"test\/jdk\/java\/foreign\/callarranger\/platform\/PlatformLayouts.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/org\/openjdk\/foreigntest\/unnamed\/libLinkerInvokerUnnamed.cpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/panama_module\/org\/openjdk\/foreigntest\/libLinkerInvokerModule.cpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/libLibraryLookup.c","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/libLookupTest.c","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/libNativeAccess.c","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/libSafeAccess.c","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/loaderLookup\/TestLoaderLookupJNI.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/loaderLookup\/libLoaderLookupInvoker.cpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/TestReentrantUpcalls.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libAsyncStackWalk.cpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libReentrantUpcalls.c","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,7 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -23,0 +19,3 @@\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/stackwalk\/libStackWalk.c","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- *  Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n- *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n@@ -5,3 +5,3 @@\n- *  This code is free software; you can redistribute it and\/or modify it\n- *  under the terms of the GNU General Public License version 2 only, as\n- *  published by the Free Software Foundation.\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n@@ -9,5 +9,5 @@\n- *  This code is distributed in the hope that it will be useful, but WITHOUT\n- *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- *  version 2 for more details (a copy is included in the LICENSE file that\n- *  accompanied this code).\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n@@ -15,3 +15,3 @@\n- *  You should have received a copy of the GNU General Public License version\n- *  2 along with this work; if not, write to the Free Software Foundation,\n- *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -19,3 +19,3 @@\n- *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- *  or visit www.oracle.com if you need additional information or have any\n- *  questions.\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n","filename":"test\/jdk\/java\/foreign\/virtual\/TestVirtualCalls.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8313809\n+ * @summary String template fails with java.lang.StringIndexOutOfBoundsException if last fragment is UTF16\n+.\n+ * @enablePreview true\n+ *\/\n+\n+import static java.util.FormatProcessor.FMT;\n+\n+public class T8313809 {\n+    public static void main(final String[] args) throws Exception {\n+        double sum = 12.34;\n+        final String message = FMT.\"The sum is : %f\\{sum} €\"; \/\/ this fails\n+        if (!message.equals(\"The sum is : 12.340000 €\")) {\n+            throw new RuntimeException(\"Incorrect result\");\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/lang\/template\/T8313809.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -27,1 +27,1 @@\n- *      8258795 8267038 8287180 8302512 8304761 8306031 8308021\n+ *      8258795 8267038 8287180 8302512 8304761 8306031 8308021 8313702\n@@ -29,1 +29,1 @@\n- *          (LSR Revision: 2023-05-11) with Locale and Locale.LanguageRange\n+ *          (LSR Revision: 2023-08-02) with Locale and Locale.LanguageRange\n","filename":"test\/jdk\/java\/util\/Locale\/LanguageSubtagRegistryTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8166900\n+ * @key headful\n+ * @summary  Verifies selection of correct row on VK_PAGE_DOWN\n+ * @run main JLayerTableTest\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.JLayer;\n+import javax.swing.JScrollPane;\n+import javax.swing.plaf.LayerUI;\n+import javax.swing.table.DefaultTableModel;\n+import javax.swing.SwingUtilities;\n+\n+public class JLayerTableTest {\n+    static JFrame frame;\n+    static JTable table;\n+    static volatile Point tableLoc;\n+    static volatile Rectangle cellRect;\n+\n+    static void createUI() {\n+        frame = new JFrame(\"JLayer Table Test\");\n+        DefaultTableModel model = new DefaultTableModel() {\n+            @Override public int getRowCount() {return 100;}\n+            @Override public int getColumnCount() {return 3;}\n+            @Override public Object getValueAt(int row, int column) {\n+                return \"(\" + row + \",\" + column + \")\";\n+            }\n+        };\n+        table = new JTable(model);\n+        LayerUI<JComponent> layerUI = new LayerUI<>();\n+        JLayer<JComponent> layer = new JLayer<>(table, layerUI);\n+        JScrollPane scrollPane = new JScrollPane(layer);\n+        frame.getContentPane().add(scrollPane);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createUI();\n+            });\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                tableLoc = table.getLocationOnScreen();\n+                cellRect = table.getCellRect(0, 1, true);\n+            });\n+            robot.mouseMove(tableLoc.x + cellRect.x + cellRect.width \/ 2,\n+                    tableLoc.y + cellRect.y + cellRect.height \/ 2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            robot.keyPress(KeyEvent.VK_PAGE_DOWN);\n+            robot.keyRelease(KeyEvent.VK_PAGE_DOWN);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            if (table.getSelectedRow() == (table.getRowCount() - 1)) {\n+                System.out.println(\"selected row \" + table.getSelectedRow());\n+                System.out.println(\"visible row count \" + table.getRowCount());\n+                throw new RuntimeException(\n+                                    \"Cursor is not moved to correct location\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/JLayerTableTest.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -131,1 +131,1 @@\n-            \"ClearRetainedRegionsBitmap\",\n+            \"ProcessEvacuationFailedRegions\",\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/collection\/TestG1ParallelPhases.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,15 +73,0 @@\n-        String libTemplate = null;\n-        if (Platform.isWindows()) {\n-            libTemplate = \"%s.dll\";\n-        } else if (Platform.isOSX()) {\n-            libTemplate = \"lib%s.dylib\";\n-        } else if (Platform.isLinux()) {\n-            libTemplate = \"lib%s.so\";\n-        } else if (Platform.isAix()) {\n-            libTemplate = \"lib%s.so\";\n-        }\n-\n-        if (libTemplate == null) {\n-            throw new Exception(\"Unsupported OS\");\n-        }\n-\n@@ -91,1 +76,1 @@\n-            libs.add(String.format(libTemplate, name));\n+            libs.add(Platform.buildSharedLibraryName(name));\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestNativeLibrariesEvent.java","additions":2,"deletions":17,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -57,1 +57,2 @@\n-            List<String> expectedLibs = getExpectedLibs();\n+            String expectedLib = Platform.buildSharedLibraryName(\"instrument\");\n+            boolean expectedLibFound = false;\n@@ -62,4 +63,2 @@\n-                for (String expectedLib : new ArrayList<>(expectedLibs)) {\n-                    if (lib.contains(expectedLib)) {\n-                        expectedLibs.remove(expectedLib);\n-                    }\n+                if (lib.contains(expectedLib)) {\n+                    expectedLibFound = true;\n@@ -68,1 +67,1 @@\n-            assertTrue(expectedLibs.isEmpty(), \"Missing libraries:\" + expectedLibs.stream().collect(Collectors.joining(\", \")));\n+            assertTrue(expectedLibFound, \"Missing library \" + expectedLib);\n@@ -71,25 +70,0 @@\n-\n-    private static List<String> getExpectedLibs() throws Throwable {\n-        String libTemplate = null;\n-        if (Platform.isWindows()) {\n-            libTemplate = \"%s.dll\";\n-        } else if (Platform.isOSX()) {\n-            libTemplate = \"lib%s.dylib\";\n-        } else if (Platform.isLinux()) {\n-            libTemplate = \"lib%s.so\";\n-        } else if (Platform.isAix()) {\n-            libTemplate = \"lib%s.so\";\n-        }\n-\n-        if (libTemplate == null) {\n-            throw new Exception(\"Unsupported OS\");\n-        }\n-\n-        List<String> libs = new ArrayList<String>();\n-        String[] names = { \"instrument\" };\n-        for (String name : names) {\n-            libs.add(String.format(libTemplate, name));\n-        }\n-        return libs;\n-    }\n-\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestNativeLibraryLoadEvent.java","additions":5,"deletions":31,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+        int hashCode = TestCertificate.ROOT_CA.certificate().getPublicKey().hashCode();\n@@ -48,2 +49,2 @@\n-                TestCertificate.ROOT_CA.certificate().getPublicKey().hashCode() +\n-                \", \" + TestCertificate.ROOT_CA.certId);\n+                Integer.toUnsignedLong(hashCode) + \", \" +\n+                TestCertificate.ROOT_CA.certId);\n","filename":"test\/jdk\/jdk\/security\/logging\/TestX509ValidationLog.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -116,1 +118,5 @@\n-        main(new Basic(), args);\n+        try {\n+            main(new Basic(), args);\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/Basic.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -77,1 +79,5 @@\n-        main(new CertChainRemoval());\n+        try {\n+            main(new CertChainRemoval());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/CertChainRemoval.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -122,1 +124,5 @@\n-        main(new ClientAuth());\n+        try {\n+            main(new ClientAuth());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/ClientAuth.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -65,1 +67,5 @@\n-        main(new SecretKeysBasic());\n+        try {\n+            main(new SecretKeysBasic());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/SecretKeysBasic.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+import jtreg.SkippedException;\n@@ -68,2 +69,0 @@\n-    private boolean enableSM = false;\n-\n@@ -71,1 +70,0 @@\n-\n@@ -73,1 +71,0 @@\n-\n@@ -76,1 +73,0 @@\n-\n@@ -78,1 +74,0 @@\n-\n@@ -80,4 +75,0 @@\n-\n-    private static final String DEFAULT_POLICY =\n-            BASE + SEP + \"..\" + SEP + \"policy\";\n-\n@@ -86,0 +77,20 @@\n+    private static final String DEFAULT_POLICY = BASE + SEP + \"..\" + SEP + \"policy\";\n+    private static final String PKCS11_REL_PATH = \"sun\/security\/pkcs11\";\n+    private static final char[] HEX_DIGITS = \"0123456789abcdef\".toCharArray();\n+    private static final SecureRandom srdm = new SecureRandom();\n+\n+    static double nss_version = -1;\n+    static ECCState nss_ecc_status = ECCState.Basic;\n+\n+    \/\/ The NSS library we need to search for in getNSSLibDir()\n+    \/\/ Default is \"libsoftokn3.so\", listed as \"softokn3\"\n+    \/\/ The other is \"libnss3.so\", listed as \"nss3\".\n+    static String nss_library = \"softokn3\";\n+\n+    \/\/ NSS versions of each library.  It is simpler to keep nss_version\n+    \/\/ for quick checking for generic testing than many if-else statements.\n+    static double softoken3_version = -1;\n+    static double nss3_version = -1;\n+    static Provider pkcs11 = newPKCS11Provider();\n+    private static String PKCS11_BASE;\n+    private static Map<String, String[]> osMap;\n@@ -100,9 +111,7 @@\n-    \/\/ NSS version info\n-    public static enum ECCState { None, Basic, Extended };\n-    static double nss_version = -1;\n-    static ECCState nss_ecc_status = ECCState.Basic;\n-\n-    \/\/ The NSS library we need to search for in getNSSLibDir()\n-    \/\/ Default is \"libsoftokn3.so\", listed as \"softokn3\"\n-    \/\/ The other is \"libnss3.so\", listed as \"nss3\".\n-    static String nss_library = \"softokn3\";\n+    static {\n+        try {\n+            PKCS11_BASE = getBase();\n+        } catch (Exception e) {\n+            \/\/ ignore\n+        }\n+    }\n@@ -110,5 +119,1 @@\n-    \/\/ NSS versions of each library.  It is simplier to keep nss_version\n-    \/\/ for quick checking for generic testing than many if-else statements.\n-    static double softoken3_version = -1;\n-    static double nss3_version = -1;\n-    static Provider pkcs11 = newPKCS11Provider();\n+    private boolean enableSM = false;\n@@ -117,1 +122,1 @@\n-        ServiceLoader sl = ServiceLoader.load(java.security.Provider.class);\n+        ServiceLoader<Provider> sl = ServiceLoader.load(java.security.Provider.class);\n@@ -135,2 +140,2 @@\n-                Class clazz = Class.forName(\"sun.security.pkcs11.SunPKCS11\");\n-                p = (Provider) clazz.newInstance();\n+                Class<?> clazz = Class.forName(\"sun.security.pkcs11.SunPKCS11\");\n+                p = (Provider) clazz.getDeclaredConstructor().newInstance();\n@@ -157,32 +162,0 @@\n-    public abstract void main(Provider p) throws Exception;\n-\n-    protected boolean skipTest(Provider p) {\n-        return false;\n-    }\n-\n-    private void premain(Provider p) throws Exception {\n-        if (skipTest(p)) {\n-            return;\n-        }\n-\n-        \/\/ set a security manager and policy before a test case runs,\n-        \/\/ and disable them after the test case finished\n-        try {\n-            if (enableSM) {\n-                System.setSecurityManager(new SecurityManager());\n-            }\n-            long start = System.currentTimeMillis();\n-            System.out.printf(\n-                    \"Running test with provider %s (security manager %s) ...%n\",\n-                        p.getName(), enableSM ? \"enabled\" : \"disabled\");\n-            main(p);\n-            long stop = System.currentTimeMillis();\n-            System.out.println(\"Completed test with provider \" + p.getName() +\n-                \" (\" + (stop - start) + \" ms).\");\n-        } finally {\n-            if (enableSM) {\n-                System.setSecurityManager(null);\n-            }\n-        }\n-    }\n-\n@@ -213,3 +186,33 @@\n-            testDefault(test);\n-            testNSS(test);\n-            testDeimos(test);\n+            boolean skippedDefault = false;\n+            boolean skippedNSS = false;\n+            boolean skippedDeimos = false;\n+\n+            \/\/ Use separate try-catch for each test to allow all test run\n+            try {\n+                testDefault(test);\n+            } catch (SkippedException se) {\n+                System.out.println(\"testDefault: Skipped\");\n+                skippedDefault = true;\n+                se.printStackTrace(System.out);\n+            }\n+\n+            try {\n+                testNSS(test);\n+            } catch (SkippedException se) {\n+                System.out.println(\"testNSS: Skipped\");\n+                skippedNSS = true;\n+                se.printStackTrace(System.out);\n+            }\n+\n+            try {\n+                testDeimos(test);\n+            } catch (SkippedException se) {\n+                System.out.println(\"testDeimos: Skipped\");\n+                skippedDeimos = true;\n+                se.printStackTrace(System.out);\n+            }\n+\n+            if (skippedDefault && skippedNSS && skippedDeimos) {\n+                throw new SkippedException(\"All tests are skipped, check logs\");\n+            }\n+\n@@ -225,1 +228,1 @@\n-                for (int i = 0; i<oldProviders.length; i++) {\n+                for (int i = 0; i < oldProviders.length; i++) {\n@@ -233,1 +236,1 @@\n-                for (Provider p: newProviders) {\n+                for (Provider p : newProviders) {\n@@ -236,1 +239,1 @@\n-                for (Provider p: oldProviders) {\n+                for (Provider p : oldProviders) {\n@@ -244,2 +247,3 @@\n-        if (new File(\"\/opt\/SUNWconn\/lib\/libpkcs11.so\").isFile() == false ||\n-            \"true\".equals(System.getProperty(\"NO_DEIMOS\"))) {\n+        System.out.println(\"===> testDeimos: Starting test run\");\n+        if (\"true\".equals(System.getProperty(\"NO_DEIMOS\"))) {\n+            System.out.println(\"Skip Deimos software as test configured with NO_DEIMOS\");\n@@ -248,0 +252,6 @@\n+\n+        if (!new File(\"\/opt\/SUNWconn\/lib\/libpkcs11.so\").isFile()) {\n+            throw new SkippedException(\"testDeimos: \\\"\/opt\/SUNWconn\/lib\/libpkcs11.so\\\" \" +\n+                    \"file required for Deimos not found\");\n+        }\n+\n@@ -252,0 +262,1 @@\n+        System.out.println(\"testDeimos: Completed\");\n@@ -254,0 +265,1 @@\n+    \/\/ Run test for default configured PKCS11 providers (if any)\n@@ -255,1 +267,2 @@\n-        \/\/ run test for default configured PKCS11 providers (if any)\n+        System.out.println(\"===> testDefault: Starting test run\");\n+        boolean foundPKCS11 = false;\n@@ -258,0 +271,1 @@\n+            System.out.println(\"Skip default provider as test configured with NO_DEFAULT\");\n@@ -262,2 +276,1 @@\n-        for (int i = 0; i < providers.length; i++) {\n-            Provider p = providers[i];\n+        for (Provider p : providers) {\n@@ -265,0 +278,1 @@\n+                foundPKCS11 = true;\n@@ -268,1 +282,0 @@\n-    }\n@@ -270,6 +283,3 @@\n-    private static String PKCS11_BASE;\n-    static {\n-        try {\n-            PKCS11_BASE = getBase();\n-        } catch (Exception e) {\n-            \/\/ ignore\n+        if (!foundPKCS11) {\n+            throw new SkippedException(\"testDefault: Skip default test as SunPKCS11 \" +\n+                    \"provider is not configured\");\n@@ -277,1 +287,0 @@\n-    }\n@@ -279,1 +288,2 @@\n-    private final static String PKCS11_REL_PATH = \"sun\/security\/pkcs11\";\n+        System.out.println(\"testDefault: Completed\");\n+    }\n@@ -293,1 +303,1 @@\n-                throw new Exception(\"Test root directory not found\");\n+                throw new RuntimeException(\"Test root directory not found\");\n@@ -325,1 +335,1 @@\n-                    + \", please initialize NSS librarys location firstly, skipping test\");\n+                    + \", please initialize NSS library location, skipping test\");\n@@ -342,1 +352,1 @@\n-            System.out.println(\"Warning: can't find NSS librarys on this machine, skipping test\");\n+            System.out.println(\"Warning: can't find NSS library on this machine, skipping test\");\n@@ -355,1 +365,1 @@\n-        String osid = osName + \"-\" + props.getProperty(\"os.arch\") + \"-\"\n+        return osName + \"-\" + props.getProperty(\"os.arch\") + \"-\"\n@@ -357,1 +367,0 @@\n-        return osid;\n@@ -370,1 +379,1 @@\n-    protected static void safeReload(String lib) throws Exception {\n+    protected static void safeReload(String lib) {\n@@ -380,1 +389,1 @@\n-    static boolean loadNSPR(String libdir) throws Exception {\n+    static boolean loadNSPR(String libdir) {\n@@ -382,3 +391,1 @@\n-        String dir = libdir.endsWith(File.separator)\n-                     ? libdir\n-                     : libdir + File.separator;\n+        String dir = libdir.endsWith(File.separator) ? libdir : libdir + File.separator;\n@@ -395,1 +402,1 @@\n-        return p.getName().toUpperCase().equals(\"SUNPKCS11-NSS\");\n+        return p.getName().equalsIgnoreCase(\"SUNPKCS11-NSS\");\n@@ -491,1 +498,1 @@\n-        String version = String.valueOf(s.charAt(afterheader));\n+        StringBuilder version = new StringBuilder(String.valueOf(s.charAt(afterheader)));\n@@ -493,3 +500,3 @@\n-                c == '.' || (c >= '0' && c <= '9');\n-                c = s.charAt(++afterheader)) {\n-            version += c;\n+             c == '.' || (c >= '0' && c <= '9');\n+             c = s.charAt(++afterheader)) {\n+            version.append(c);\n@@ -499,1 +506,1 @@\n-        String[] dot = version.split(\"\\\\.\");\n+        String[] dot = version.toString().split(\"\\\\.\");\n@@ -501,1 +508,1 @@\n-            version = dot[0]+\".\"+dot[1];\n+            version = new StringBuilder(dot[0] + \".\" + dot[1]);\n@@ -503,1 +510,1 @@\n-                version += dot[j];\n+                version.append(dot[j]);\n@@ -509,1 +516,1 @@\n-            nss_version = Double.parseDouble(version);\n+            nss_version = Double.parseDouble(version.toString());\n@@ -519,1 +526,1 @@\n-        System.out.print(\"lib\" + library + \" version = \"+version+\".  \");\n+        System.out.print(\"library: \" + library + \", version: \" + version + \".  \");\n@@ -548,0 +555,1 @@\n+        System.out.println(\"===> testNSS: Starting test run\");\n@@ -550,2 +558,1 @@\n-            \/\/ issue loading libraries\n-            return;\n+            throw new SkippedException(\"testNSS: Problem loading NSS libraries\");\n@@ -553,0 +560,1 @@\n+\n@@ -555,0 +563,1 @@\n+        System.out.println(\"testNSS: Completed\");\n@@ -563,1 +572,1 @@\n-        if (loadNSPR(libdir) == false) {\n+        if (!loadNSPR(libdir)) {\n@@ -601,1 +610,1 @@\n-            \"\\\"AlgorithmParameters.EC SupportedCurves property\\\" not found\");\n+                    \"\\\"AlgorithmParameters.EC SupportedCurves property\\\" not found\");\n@@ -606,1 +615,1 @@\n-        for (;;) {\n+        for (; ; ) {\n@@ -623,1 +632,1 @@\n-                end = index -1;\n+                end = index - 1;\n@@ -628,1 +637,1 @@\n-                .ifPresent(spec -> results.add(spec));\n+                    .ifPresent(spec -> results.add(spec));\n@@ -639,1 +648,1 @@\n-            Provider p) throws Exception {\n+                                                                 Provider p) throws Exception {\n@@ -641,1 +650,1 @@\n-        System.out.print(\"\\t \"+ curve + \": \");\n+        System.out.print(\"\\t \" + curve + \": \");\n@@ -663,1 +672,1 @@\n-            AlgorithmParameters.getInstance(\"EC\", p);\n+                AlgorithmParameters.getInstance(\"EC\", p);\n@@ -670,13 +679,0 @@\n-    \/\/ Check support for a curve with a provided Vector of EC support\n-    boolean checkSupport(List<ECParameterSpec> supportedEC,\n-            ECParameterSpec curve) {\n-        for (ECParameterSpec ec: supportedEC) {\n-            if (ec.equals(curve)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    private static Map<String,String[]> osMap;\n-\n@@ -690,1 +686,1 @@\n-        osMap.put(\"Linux-i386-32\", new String[] {\n+        osMap.put(\"Linux-i386-32\", new String[]{\n@@ -693,2 +689,2 @@\n-                \"\/usr\/lib\/\" });\n-        osMap.put(\"Linux-amd64-64\", new String[] {\n+                \"\/usr\/lib\/\"});\n+        osMap.put(\"Linux-amd64-64\", new String[]{\n@@ -697,8 +693,8 @@\n-                \"\/usr\/lib64\/\" });\n-        osMap.put(\"Linux-ppc64-64\", new String[] { \"\/usr\/lib64\/\" });\n-        osMap.put(\"Linux-ppc64le-64\", new String[] { \"\/usr\/lib64\/\" });\n-        osMap.put(\"Linux-s390x-64\", new String[] { \"\/usr\/lib64\/\" });\n-        osMap.put(\"Windows-x86-32\", new String[] {});\n-        osMap.put(\"Windows-amd64-64\", new String[] {});\n-        osMap.put(\"MacOSX-x86_64-64\", new String[] {});\n-        osMap.put(\"Linux-arm-32\", new String[] {\n+                \"\/usr\/lib64\/\"});\n+        osMap.put(\"Linux-ppc64-64\", new String[]{\"\/usr\/lib64\/\"});\n+        osMap.put(\"Linux-ppc64le-64\", new String[]{\"\/usr\/lib64\/\"});\n+        osMap.put(\"Linux-s390x-64\", new String[]{\"\/usr\/lib64\/\"});\n+        osMap.put(\"Windows-x86-32\", new String[]{});\n+        osMap.put(\"Windows-amd64-64\", new String[]{});\n+        osMap.put(\"MacOSX-x86_64-64\", new String[]{});\n+        osMap.put(\"Linux-arm-32\", new String[]{\n@@ -706,1 +702,1 @@\n-                \"\/usr\/lib\/arm-linux-gnueabihf\/nss\/\" });\n+                \"\/usr\/lib\/arm-linux-gnueabihf\/nss\/\"});\n@@ -747,1 +743,1 @@\n-        return nssLibPaths.toArray(new String[nssLibPaths.size()]);\n+        return nssLibPaths.toArray(new String[0]);\n@@ -750,2 +746,0 @@\n-    private final static char[] hexDigits = \"0123456789abcdef\".toCharArray();\n-\n@@ -762,2 +756,2 @@\n-            sb.append(hexDigits[k >>> 4]);\n-            sb.append(hexDigits[k & 0xf]);\n+            sb.append(HEX_DIGITS[k >>> 4]);\n+            sb.append(HEX_DIGITS[k & 0xf]);\n@@ -809,9 +803,0 @@\n-    <T> T[] concat(T[] a, T[] b) {\n-        if ((b == null) || (b.length == 0)) {\n-            return a;\n-        }\n-        T[] r = Arrays.copyOf(a, a.length + b.length);\n-        System.arraycopy(b, 0, r, a.length, b.length);\n-        return r;\n-    }\n-\n@@ -822,1 +807,1 @@\n-            Provider p) {\n+                                               Provider p) {\n@@ -835,2 +820,0 @@\n-    private static final SecureRandom srdm = new SecureRandom();\n-\n@@ -864,0 +847,1 @@\n+\n@@ -868,0 +852,1 @@\n+\n@@ -872,0 +857,1 @@\n+\n@@ -876,0 +862,1 @@\n+\n@@ -880,0 +867,1 @@\n+\n@@ -889,1 +877,1 @@\n-        for (int i=0; i<data.length; i++) {\n+        for (int i = 0; i < data.length; i++) {\n@@ -897,2 +885,2 @@\n-        case \"Windows-x86-32\":\n-            return fetchNssLib(WINDOWS_X86.class);\n+            case \"Windows-x86-32\":\n+                return fetchNssLib(WINDOWS_X86.class);\n@@ -900,2 +888,2 @@\n-        case \"Windows-amd64-64\":\n-            return fetchNssLib(WINDOWS_X64.class);\n+            case \"Windows-amd64-64\":\n+                return fetchNssLib(WINDOWS_X64.class);\n@@ -903,2 +891,2 @@\n-        case \"MacOSX-x86_64-64\":\n-            return fetchNssLib(MACOSX_X64.class);\n+            case \"MacOSX-x86_64-64\":\n+                return fetchNssLib(MACOSX_X64.class);\n@@ -906,2 +894,2 @@\n-        case \"Linux-amd64-64\":\n-            return fetchNssLib(LINUX_X64.class);\n+            case \"Linux-amd64-64\":\n+                return fetchNssLib(LINUX_X64.class);\n@@ -909,2 +897,2 @@\n-        default:\n-            return null;\n+            default:\n+                return null;\n@@ -934,0 +922,52 @@\n+    public abstract void main(Provider p) throws Exception;\n+\n+    protected boolean skipTest(Provider p) {\n+        return false;\n+    }\n+\n+    private void premain(Provider p) throws Exception {\n+        if (skipTest(p)) {\n+            return;\n+        }\n+\n+        \/\/ set a security manager and policy before a test case runs,\n+        \/\/ and disable them after the test case finished\n+        try {\n+            if (enableSM) {\n+                System.setSecurityManager(new SecurityManager());\n+            }\n+            long start = System.currentTimeMillis();\n+            System.out.printf(\n+                    \"Running test with provider %s (security manager %s) ...%n\",\n+                    p.getName(), enableSM ? \"enabled\" : \"disabled\");\n+            main(p);\n+            long stop = System.currentTimeMillis();\n+            System.out.println(\"Completed test with provider \" + p.getName() +\n+                    \" (\" + (stop - start) + \" ms).\");\n+        } finally {\n+            if (enableSM) {\n+                System.setSecurityManager(null);\n+            }\n+        }\n+    }\n+\n+    \/\/ Check support for a curve with a provided Vector of EC support\n+    boolean checkSupport(List<ECParameterSpec> supportedEC,\n+                         ECParameterSpec curve) {\n+        for (ECParameterSpec ec : supportedEC) {\n+            if (ec.equals(curve)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    <T> T[] concat(T[] a, T[] b) {\n+        if ((b == null) || (b.length == 0)) {\n+            return a;\n+        }\n+        T[] r = Arrays.copyOf(a, a.length + b.length);\n+        System.arraycopy(b, 0, r, a.length, b.length);\n+        return r;\n+    }\n+\n@@ -959,0 +999,3 @@\n+    \/\/ NSS version info\n+    public static enum ECCState {None, Basic, Extended}\n+\n@@ -964,1 +1007,2 @@\n-    private static class WINDOWS_X64 { }\n+    private static class WINDOWS_X64 {\n+    }\n@@ -971,1 +1015,2 @@\n-    private static class WINDOWS_X86 { }\n+    private static class WINDOWS_X86 {\n+    }\n@@ -978,1 +1023,2 @@\n-    private static class MACOSX_X64 { }\n+    private static class MACOSX_X64 {\n+    }\n@@ -985,1 +1031,2 @@\n-    private static class LINUX_X64 { }\n+    private static class LINUX_X64 {\n+    }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":213,"deletions":166,"binary":false,"changes":379,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -47,1 +49,5 @@\n-        main(new ConfigQuotedString());\n+        try {\n+            main(new ConfigQuotedString());\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/ConfigQuotedString.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import jtreg.SkippedException;\n+import org.testng.SkipException;\n@@ -58,1 +60,5 @@\n-        main(new Login(), args);\n+        try {\n+            main(new Login(), args);\n+        } catch (SkippedException se) {\n+            throw new SkipException(\"One or more tests are skipped\");\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/Login.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,0 +114,1 @@\n+        ${TESTSRC}${FS}..${FS}..${FS}..${FS}..${FS}..${FS}lib${FS}jtreg${FS}*.java \\\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.sh","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import jtreg.SkippedException;\n+\n@@ -46,3 +48,0 @@\n-        if (LIBPATH == null) {\n-            return false;\n-        }\n@@ -50,2 +49,2 @@\n-        if (loadNSPR(LIBPATH) == false) {\n-            return false;\n+        if ((LIBPATH == null) || (!loadNSPR(LIBPATH))) {\n+            throw new SkippedException(\"Failed to load NSS libraries\");\n@@ -53,0 +52,1 @@\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/SecmodTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/security\/pkcs11\/SecureRandom\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.lang.reflect.Field;\n@@ -52,0 +53,2 @@\n+    private static Field responseCacheField;\n+\n@@ -72,0 +75,4 @@\n+        responseCacheField =\n+                StatusResponseManager.class.getDeclaredField(\"responseCache\");\n+        responseCacheField.setAccessible(true);\n+\n@@ -121,1 +128,1 @@\n-                } else if (srm.size() != 1) {\n+                } else if (responseCacheSize(srm) != 1) {\n@@ -123,1 +130,1 @@\n-                            \"expected 1, got \" + srm.size();\n+                            \"expected 1, got \" + responseCacheSize(srm);\n@@ -152,1 +159,1 @@\n-                if (srm.size() != 2) {\n+                if (responseCacheSize(srm) != 2) {\n@@ -154,1 +161,1 @@\n-                            + srm.size();\n+                            + responseCacheSize(srm);\n@@ -157,2 +164,2 @@\n-                    srm.clear();\n-                    if (srm.size() != 0) {\n+                    clearResponseCache(srm);\n+                    if (responseCacheSize(srm) != 0) {\n@@ -160,1 +167,1 @@\n-                                \" got \" + srm.size();\n+                                \" got \" + responseCacheSize(srm);\n@@ -200,1 +207,1 @@\n-                } else if (srm.size() != 2) {\n+                } else if (responseCacheSize(srm) != 2) {\n@@ -202,1 +209,1 @@\n-                            \"expected 2, got \" + srm.size();\n+                            \"expected 2, got \" + responseCacheSize(srm);\n@@ -233,1 +240,1 @@\n-                if (srm.size() != 2) {\n+                if (responseCacheSize(srm) != 2) {\n@@ -235,1 +242,1 @@\n-                            + srm.size();\n+                            + responseCacheSize(srm);\n@@ -240,1 +247,1 @@\n-                    if (srm.size() != 0) {\n+                    if (responseCacheSize(srm) != 0) {\n@@ -242,1 +249,1 @@\n-                                \" got \" + srm.size();\n+                                \" got \" + responseCacheSize(srm);\n@@ -429,0 +436,10 @@\n+    private static int responseCacheSize(\n+            StatusResponseManager srm) throws IllegalAccessException {\n+        return ((sun.security.util.Cache)responseCacheField.get(srm)).size();\n+    }\n+\n+    private static void clearResponseCache(\n+            StatusResponseManager srm) throws IllegalAccessException {\n+        ((sun.security.util.Cache)responseCacheField.get(srm)).clear();\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/Stapling\/java.base\/sun\/security\/ssl\/StatusResponseManagerTests.java","additions":30,"deletions":13,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,8 @@\n-            ProcessBuilder pb = new ProcessBuilder(JDKToolFinder.getTestJDKTool(\"jshell\"));\n+            JDKToolLauncher launcher = JDKToolLauncher.createUsingTestJDK(\"jshell\");\n+            if (doSleep) {\n+                launcher.addVMArgs(Utils.getTestJavaOpts());\n+            } else {\n+                \/\/ Don't allow use of SerialGC. See JDK-8313655.\n+                launcher.addVMArgs(Utils.getFilteredTestJavaOpts(\"-XX:\\\\+UseSerialGC\"));\n+            }\n+            ProcessBuilder pb = new ProcessBuilder(launcher.getCommand());\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/JShellHeapDumpTest.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,3 @@\n-            ProcessBuilder pb = new ProcessBuilder(JDKToolFinder.getTestJDKTool(\"jshell\"));\n+            JDKToolLauncher launcher = JDKToolLauncher.createUsingTestJDK(\"jshell\");\n+            launcher.addVMArgs(Utils.getTestJavaOpts());\n+            ProcessBuilder pb = new ProcessBuilder(launcher.getCommand());\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/JStackStressTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-requiredVersion=7.2+1\n+requiredVersion=7.3+1\n","filename":"test\/langtools\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        checkOutput(\"stylesheet.css\", true,\n+        checkOutput(\"resource-files\/stylesheet.css\", true,\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/AccessH1\/AccessH1.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-                                     .resolve(\"resources\/script-dir\");\n+                                     .resolve(\"resources\/jquery\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkLibraryVersions\/CheckLibraryVersions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- *          jdk.javadoc\/jdk.javadoc.internal.doclets.toolkit.resources:open\n+ *          jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.resources:open\n@@ -195,1 +195,1 @@\n-        String stylesheet = \"\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/stylesheet.css\";\n+        String stylesheet = \"\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css\";\n@@ -214,1 +214,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkStylesheetClasses\/CheckStylesheetClasses.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        checkOutput(\"stylesheet.css\", true,\n+        checkOutput(\"resource-files\/stylesheet.css\", true,\n@@ -67,1 +67,1 @@\n-        checkOutput(\"stylesheet.css\", false,\n+        checkOutput(\"resource-files\/stylesheet.css\", false,\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDocEncoding\/TestDocEncoding.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        checkOutput(\"script.js\", false,\n+        checkOutput(\"script-files\/script.js\", false,\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testJavascript\/TestJavascript.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,1 +119,1 @@\n-        checkOutput(\"custom-stylesheet.css\", true, \"Custom javadoc style sheet\");\n+        checkOutput(\"resource-files\/custom-stylesheet.css\", true, \"Custom javadoc style sheet\");\n@@ -121,1 +121,1 @@\n-            <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/custom-stylesheet.css\" title=\"Style\">\"\"\");\n+            <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/resource-files\/custom-stylesheet.css\" title=\"Style\">\"\"\");\n@@ -132,1 +132,1 @@\n-        checkOutput(\"custom-stylesheet.css\", true, \"Custom javadoc style sheet\");\n+        checkOutput(\"resource-files\/custom-stylesheet.css\", true, \"Custom javadoc style sheet\");\n@@ -134,1 +134,1 @@\n-            <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/custom-stylesheet.css\" title=\"Style\">\"\"\");\n+            <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/resource-files\/custom-stylesheet.css\" title=\"Style\">\"\"\");\n@@ -147,3 +147,3 @@\n-        checkOutput(\"additional-stylesheet-1.css\", true, \"Additional javadoc style sheet 1\");\n-        checkOutput(\"additional-stylesheet-2.css\", true, \"Additional javadoc style sheet 2\");\n-        checkOutput(\"additional-stylesheet-3.css\", true, \"Additional javadoc style sheet 3\");\n+        checkOutput(\"resource-files\/additional-stylesheet-1.css\", true, \"Additional javadoc style sheet 1\");\n+        checkOutput(\"resource-files\/additional-stylesheet-2.css\", true, \"Additional javadoc style sheet 2\");\n+        checkOutput(\"resource-files\/additional-stylesheet-3.css\", true, \"Additional javadoc style sheet 3\");\n@@ -152,3 +152,3 @@\n-                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/additional-stylesheet-1.css\" title=\"Style\">\n-                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/additional-stylesheet-2.css\" title=\"Style\">\n-                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/additional-stylesheet-3.css\" title=\"Style\">\"\"\");\n+                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/resource-files\/additional-stylesheet-1.css\" title=\"Style\">\n+                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/resource-files\/additional-stylesheet-2.css\" title=\"Style\">\n+                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/resource-files\/additional-stylesheet-3.css\" title=\"Style\">\"\"\");\n@@ -192,2 +192,2 @@\n-        checkOutput(\"script-dir\/additional-script-1.js\", true, \"Additional script file 1\");\n-        checkOutput(\"script-dir\/additional-script-2.js\", true, \"Additional script file 2\");\n+        checkOutput(\"script-files\/additional-script-1.js\", true, \"Additional script file 1\");\n+        checkOutput(\"script-files\/additional-script-2.js\", true, \"Additional script file 2\");\n@@ -196,2 +196,2 @@\n-                    <script type=\"text\/javascript\" src=\"..\/script-dir\/additional-script-1.js\"><\/script>\n-                    <script type=\"text\/javascript\" src=\"..\/script-dir\/additional-script-2.js\"><\/script>\n+                    <script type=\"text\/javascript\" src=\"..\/script-files\/additional-script-1.js\"><\/script>\n+                    <script type=\"text\/javascript\" src=\"..\/script-files\/additional-script-2.js\"><\/script>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOptions\/TestOptions.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-                \"search-page.js\",\n+                \"script-files\/search-page.js\",\n@@ -182,1 +182,1 @@\n-                \"search-page.js\",\n+                \"script-files\/search-page.js\",\n@@ -421,1 +421,1 @@\n-                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"resource-files\/jquery-ui.min.css\" title=\"Style\">\n@@ -424,1 +424,1 @@\n-                    <script type=\"text\/javascript\" src=\"script-dir\/jquery-3.6.1.min.js\"><\/script>\n+                    <script type=\"text\/javascript\" src=\"script-files\/jquery-3.6.1.min.js\"><\/script>\n@@ -427,1 +427,1 @@\n-                    <script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\"\"\",\n+                    <script type=\"text\/javascript\" src=\"script-files\/jquery-ui.min.js\"><\/script>\"\"\",\n@@ -693,6 +693,6 @@\n-                \"search.js\",\n-                \"script-dir\/jquery-3.6.1.min.js\",\n-                \"script-dir\/jquery-ui.min.js\",\n-                \"script-dir\/jquery-ui.min.css\",\n-                \"resources\/x.png\",\n-                \"resources\/glass.png\");\n+                \"script-files\/search.js\",\n+                \"script-files\/jquery-3.6.1.min.js\",\n+                \"script-files\/jquery-ui.min.js\",\n+                \"resource-files\/jquery-ui.min.css\",\n+                \"resource-files\/x.png\",\n+                \"resource-files\/glass.png\");\n@@ -703,1 +703,1 @@\n-        checkOutput(\"search.js\", false,\n+        checkOutput(\"script-files\/search.js\", false,\n@@ -706,1 +706,1 @@\n-        checkOutput(\"search.js\", true,\n+        checkOutput(\"script-files\/search.js\", true,\n@@ -711,1 +711,1 @@\n-        checkOutput(\"search-page.js\", true,\n+        checkOutput(\"script-files\/search-page.js\", true,\n@@ -715,1 +715,1 @@\n-        checkCssClasses(\"search.js\", \"stylesheet.css\");\n+        checkCssClasses(\"script-files\/search.js\", \"resource-files\/stylesheet.css\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearch\/TestSearch.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8178982 8220497 8210683 8241982 8297216\n+ * @bug 8178982 8220497 8210683 8241982 8297216 8303056\n@@ -338,0 +338,40 @@\n+        \/\/ search for numeric strings\n+        checkSearch(inv, \"1\", List.of(\"listpkg.MyList.abc123xyz()\"));\n+        checkSearch(inv, \"12\", List.of(\"listpkg.MyList.abc123xyz()\"));\n+        checkSearch(inv, \"12 x\", List.of(\"listpkg.MyList.abc123xyz()\"));\n+        checkSearch(inv, \"123 x\", List.of(\"listpkg.MyList.abc123xyz()\"));\n+        checkSearch(inv, \"1 x\", List.of(\"listpkg.MyList.abc123xyz()\"));\n+        checkSearch(inv, \"2 x\", List.of());\n+        checkSearch(inv, \"3\", List.of(\"listpkg.MyList.M_3X\"));\n+        checkSearch(inv, \"3x\", List.of(\"listpkg.MyList.M_3X\"));\n+        checkSearch(inv, \"_3\", List.of(\"listpkg.MyList.M_3X\"));\n+        checkSearch(inv, \"3 x\", List.of(\"listpkg.MyList.M_3X\"));\n+\n+        \/\/ Unicode camel-case tests\n+        checkSearch(inv, \"νέα λίστα\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"δημ νέα λίσ\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"δ ν λ\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"ν λ\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"δημιουργήστεΝέαΛίστα\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"δηΝέΛίσ\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"δΝΛ\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"ΝΛ\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"δημ λίστα\", List.of(\"listpkg.ListProvider.δημιουργήστεΝέαΛίστα()\"));\n+        checkSearch(inv, \"сделать новый список\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"сде нов спи\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"с н с\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"н с\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"сделатьНовыйСписок\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"сдеНовСпис\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"сНС\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"сН\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+        checkSearch(inv, \"сдеН Спи\", List.of(\"listpkg.ListProvider.сделатьНовыйСписок()\"));\n+\n+        \/\/ Negative Unicode camel-case tests\n+        checkSearch(inv, \"Νέα ίστα\", List.of());\n+        checkSearch(inv, \"α λίστα\", List.of());\n+        checkSearch(inv, \"ηΝΛ\", List.of());\n+        checkSearch(inv, \"овый\", List.of());\n+        checkSearch(inv, \"д н с\", List.of());\n+        checkSearch(inv, \"пи\", List.of());\n+        checkSearch(inv, \"НОВЫЙС ПИСОК\", List.of());\n@@ -367,1 +407,1 @@\n-        checking(\"Checking resut for query \\\"\" + query + \"\\\"\");\n+        checking(\"Checking result for query \\\"\" + query + \"\\\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/TestSearchScript.java","additions":43,"deletions":3,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @param <E> type parameter\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/listpkg\/List.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+    \/**\n+     * Constructor.\n+     *\/\n@@ -32,0 +35,3 @@\n+    \/**\n+     * English camel-case name\n+     *\/\n@@ -35,0 +41,15 @@\n+\n+    \/**\n+     * Greek camel-case name\n+     *\/\n+    public List δημιουργήστεΝέαΛίστα() {\n+        return null;\n+    }\n+\n+    \/**\n+     * Russion camel-case name\n+     *\/\n+    public List сделатьНовыйСписок() {\n+        return null;\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/listpkg\/ListProvider.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,14 @@\n-public class MyList implements List {\n+\/**\n+ * A class.\n+ *\/\n+public abstract class MyList implements List {\n+\n+    \/**\n+     * Field name containing a digit.\n+     *\/\n+    public static final int M_3X = 2;\n+\n+    \/**\n+     * Method name containing digits.\n+     *\/\n+    public void abc123xyz() {}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/listpkg\/MyList.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-        var svgString = \"..\/\".repeat(nComponents) + \"copy.svg\";\n+        var svgString = \"..\/\".repeat(nComponents) + \"resource-files\/copy.svg\";\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        checkOutput(\"stylesheet.css\", true,\n+        checkOutput(\"resource-files\/stylesheet.css\", true,\n@@ -144,1 +144,1 @@\n-                \"@import url('resources\/fonts\/dejavu.css');\",\n+                \"@import url('fonts\/dejavu.css');\",\n@@ -178,1 +178,1 @@\n-                        background-image:url('resources\/x.png');\n+                        background-image:url('x.png');\n@@ -200,1 +200,1 @@\n-                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\"\"\",\n+                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/resource-files\/stylesheet.css\" title=\"Style\">\"\"\",\n@@ -214,1 +214,1 @@\n-                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\"\"\");\n+                    <link rel=\"stylesheet\" type=\"text\/css\" href=\"resource-files\/stylesheet.css\" title=\"Style\">\"\"\");\n@@ -216,1 +216,1 @@\n-        checkOutput(\"stylesheet.css\", false,\n+        checkOutput(\"resource-files\/stylesheet.css\", false,\n@@ -278,1 +278,1 @@\n-        String stylesheet = readFile(\"stylesheet.css\");\n+        String stylesheet = readFile(\"resource-files\/stylesheet.css\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testStylesheet\/TestStylesheet.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/* * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+\/* * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,2 @@\n+        Path resourceDir = outDir.resolve(\"resource-files\");\n+        Files.createDirectories(resourceDir);\n@@ -62,2 +64,1 @@\n-        Files.createDirectory(outDir);\n-        Path stylesheet = outDir.resolve(\"stylesheet.css\");\n+        Path stylesheet = resourceDir.resolve(\"stylesheet.css\");\n@@ -74,1 +75,1 @@\n-        checkOutput(\"stylesheet.css\", true, \"Javadoc style sheet\");\n+        checkOutput(\"resource-files\/stylesheet.css\", true, \"Javadoc style sheet\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testStylesheetOverwrite\/TestStylesheetOverwrite.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-        checkOutput(\"search.js\", sv.compareTo(SourceVersion.RELEASE_16) < 0,\n+        checkOutput(\"script-files\/search.js\", sv.compareTo(SourceVersion.RELEASE_16) < 0,\n@@ -148,1 +148,1 @@\n-        checkOutput(\"search.js\", sv.compareTo(SourceVersion.RELEASE_16) >= 0,\n+        checkOutput(\"script-files\/search.js\", sv.compareTo(SourceVersion.RELEASE_16) >= 0,\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTerminology\/TestTerminology.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -199,1 +199,0 @@\n-            \"copy.svg\",\n@@ -204,4 +203,0 @@\n-            \"link.svg\",\n-            \"script-dir\/jquery-3.6.1.min.js\",\n-            \"script-dir\/jquery-ui.min.js\",\n-            \"script-dir\/jquery-ui.min.css\",\n@@ -209,1 +204,0 @@\n-            \"search-page.js\",\n@@ -218,5 +212,11 @@\n-            \"resources\/glass.png\",\n-            \"resources\/x.png\",\n-            \"script.js\",\n-            \"search.js\",\n-            \"stylesheet.css\",\n+            \"resource-files\/copy.svg\",\n+            \"resource-files\/glass.png\",\n+            \"resource-files\/jquery-ui.min.css\",\n+            \"resource-files\/link.svg\",\n+            \"resource-files\/stylesheet.css\",\n+            \"resource-files\/x.png\",\n+            \"script-files\/jquery-3.6.1.min.js\",\n+            \"script-files\/jquery-ui.min.js\",\n+            \"script-files\/script.js\",\n+            \"script-files\/search.js\",\n+            \"script-files\/search-page.js\",\n@@ -228,3 +228,2 @@\n-            .filter(s ->    !s.startsWith(\"script-dir\")\n-                         && !s.startsWith(\"resources\")\n-                         && !s.endsWith(\"-search-index.js\")\n+            .filter(s ->\n+                            !s.endsWith(\"-search-index.js\")\n@@ -232,1 +231,6 @@\n-                         && !s.equals(\"search.js\")\n+                         && !s.equals(\"resource-files\/glass.png\")\n+                         && !s.equals(\"resource-files\/jquery-ui.min.css\")\n+                         && !s.equals(\"resource-files\/x.png\")\n+                         && !s.startsWith(\"script-files\/jquery-\")\n+                         && !s.equals(\"script-files\/search.js\")\n+                         && !s.equals(\"script-files\/search-page.js\")\n@@ -234,1 +238,0 @@\n-                         && !s.equals(\"search-page.js\")\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/api\/basic\/APITest.java","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -29,3 +31,2 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.ConstantPool.InvalidIndex;\n-import com.sun.tools.classfile.ConstantPool.UnexpectedEntry;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -329,2 +330,2 @@\n-         * @param Whether or not the annotation is visible at runtime.\n-         * @return Whether or not this template matches the visibility.\n+         * @param visibility Whether the annotation is visible at runtime.\n+         * @return Whether this template matches the visibility.\n@@ -343,3 +344,2 @@\n-        public void matchAnnotation(ConstantPool cpool,\n-                                    Annotation anno) {\n-            if (checkMatch(cpool, anno)) {\n+        public void matchAnnotation(Annotation anno) {\n+            if (checkMatch(anno)) {\n@@ -354,1 +354,0 @@\n-         * @param ConstantPool The constant pool to use.\n@@ -358,7 +357,2 @@\n-        protected boolean checkMatch(ConstantPool cpool,\n-                                     Annotation anno) {\n-            try {\n-                return cpool.getUTF8Info(anno.type_index).value.equals(\"L\" + expectedName + \";\");\n-            } catch (InvalidIndex | UnexpectedEntry e) {\n-                return false;\n-            }\n+        protected boolean checkMatch(Annotation anno) {\n+            return anno.classSymbol().descriptorString().equals(\"L\" + expectedName + \";\");\n@@ -535,1 +529,1 @@\n-        protected final TypeAnnotation.Position.TypePathEntry[] typePath;\n+        protected final List<TypeAnnotation.TypePathComponent> typePath;\n@@ -564,1 +558,1 @@\n-                                      TypeAnnotation.Position.TypePathEntry... typePath) {\n+                                      List<TypeAnnotation.TypePathComponent> typePath) {\n@@ -592,1 +586,1 @@\n-            for(int i = 0; i < typePath.length; i++) {\n+            for(int i = 0; i < typePath.size(); i++) {\n@@ -596,1 +590,1 @@\n-                sb.append(typePath[i]);\n+                sb.append(typePath.get(i));\n@@ -603,2 +597,1 @@\n-        public void matchAnnotation(ConstantPool cpool,\n-                                    Annotation anno) {}\n+        public void matchAnnotation(Annotation anno) {}\n@@ -613,8 +606,27 @@\n-            boolean matches = checkMatch(anno.constant_pool, anno.annotation);\n-\n-            matches = matches && anno.position.type == targetType;\n-            matches = matches && anno.position.bound_index == bound_index;\n-            matches = matches && anno.position.parameter_index == parameter_index;\n-            matches = matches && anno.position.type_index == type_index;\n-            matches = matches && anno.position.exception_index == exception_index;\n-            matches = matches && anno.position.location.size() == typePath.length;\n+            boolean matches = checkMatch((Annotation) anno);\n+            int boundIdx = Integer.MIN_VALUE, paraIdx = Integer.MIN_VALUE, tIdx = Integer.MIN_VALUE, exIdx = Integer.MIN_VALUE;\n+            switch (anno.targetInfo()) {\n+                case TypeAnnotation.TypeParameterBoundTarget binfo -> {\n+                    boundIdx = binfo.boundIndex();\n+                    paraIdx = binfo.typeParameterIndex();\n+                }\n+                case TypeAnnotation.FormalParameterTarget fpinfo -> {\n+                    paraIdx = fpinfo.formalParameterIndex();\n+                }\n+                case TypeAnnotation.TypeParameterTarget pinfo -> {\n+                    paraIdx = pinfo.typeParameterIndex();\n+                }\n+                case TypeAnnotation.TypeArgumentTarget ainfo -> {\n+                    tIdx = ainfo.typeArgumentIndex();\n+                }\n+                case TypeAnnotation.CatchTarget cinfo -> {\n+                    exIdx = cinfo.exceptionTableIndex();\n+                }\n+                default -> {}\n+            }\n+            matches = matches && anno.targetInfo().targetType() == targetType;\n+            matches = matches && boundIdx == bound_index;\n+            matches = matches && paraIdx == parameter_index;\n+            matches = matches && tIdx == type_index;\n+            matches = matches && exIdx == exception_index;\n+            matches = matches && anno.targetPath().size() == typePath.size();\n@@ -624,3 +636,3 @@\n-                for(TypeAnnotation.Position.TypePathEntry entry :\n-                         anno.position.location) {\n-                    matches = matches && typePath[i++].equals(entry);\n+                for(TypeAnnotation.TypePathComponent entry :\n+                        anno.targetPath()) {\n+                    matches = matches && typePath.get(i++).equals(entry);\n@@ -650,2 +662,2 @@\n-            protected TypeAnnotation.Position.TypePathEntry[] typePath =\n-                new TypeAnnotation.Position.TypePathEntry[0];\n+            protected List<TypeAnnotation.TypePathComponent> typePath =\n+                new ArrayList<TypeAnnotation.TypePathComponent>();\n@@ -699,1 +711,1 @@\n-             * @param bound_index The parameter_index value.\n+             * @param parameter_index The parameter_index value.\n@@ -731,1 +743,1 @@\n-            public Builder setTypePath(TypeAnnotation.Position.TypePathEntry[] typePath) {\n+            public Builder setTypePath(List<TypeAnnotation.TypePathComponent> typePath) {\n@@ -771,1 +783,1 @@\n-                                            TypeAnnotation.Position.TypePathEntry... typePath) {\n+                                            List<TypeAnnotation.TypePathComponent> typePath) {\n@@ -795,1 +807,1 @@\n-            for(int i = 0; i < typePath.length; i++) {\n+            for(int i = 0; i < typePath.size(); i++) {\n@@ -799,1 +811,1 @@\n-                sb.append(typePath[i]);\n+                sb.append(typePath.get(i));\n@@ -897,1 +909,1 @@\n-                                           TypeAnnotation.Position.TypePathEntry... typePath) {\n+                                           List<TypeAnnotation.TypePathComponent> typePath) {\n@@ -916,1 +928,1 @@\n-            for(int i = 0; i < typePath.length; i++) {\n+            for(int i = 0; i < typePath.size(); i++) {\n@@ -920,1 +932,1 @@\n-                sb.append(typePath[i]);\n+                sb.append(typePath.get(i));\n@@ -984,5 +996,4 @@\n-    private void matchClassAnnotation(ClassFile classfile,\n-                                      ExpectedAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Attribute attr : classfile.attributes) {\n-            attr.accept(annoMatcher(classfile.constant_pool), expected);\n+    private void matchClassAnnotation(ClassModel classfile,\n+                                      ExpectedAnnotation expected) {\n+        for(Attribute<?> attr : classfile.attributes()) {\n+            annoMatcher(attr, expected);\n@@ -992,7 +1003,6 @@\n-    private void matchMethodAnnotation(ClassFile classfile,\n-                                       ExpectedMethodAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Method meth : classfile.methods) {\n-            if (expected.matchMethodName(meth.getName(classfile.constant_pool))) {\n-                for(Attribute attr : meth.attributes) {\n-                    attr.accept(annoMatcher(classfile.constant_pool), expected);\n+    private void matchMethodAnnotation(ClassModel classfile,\n+                                       ExpectedMethodAnnotation expected) {\n+        for(MethodModel meth : classfile.methods()) {\n+            if (expected.matchMethodName(meth.methodName().stringValue())) {\n+                for(Attribute<?> attr : meth.attributes()) {\n+                    annoMatcher(attr, expected);\n@@ -1004,7 +1014,6 @@\n-    private void matchParameterAnnotation(ClassFile classfile,\n-                                          ExpectedParameterAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Method meth : classfile.methods) {\n-            if (expected.matchMethodName(meth.getName(classfile.constant_pool))) {\n-                for(Attribute attr : meth.attributes) {\n-                    attr.accept(paramMatcher(classfile.constant_pool), expected);\n+    private void matchParameterAnnotation(ClassModel classfile,\n+                                          ExpectedParameterAnnotation expected) {\n+        for(MethodModel meth : classfile.methods()) {\n+            if (expected.matchMethodName(meth.methodName().stringValue())) {\n+                for(Attribute<?> attr : meth.attributes()) {\n+                    paramMatcher(attr, expected);\n@@ -1016,7 +1025,6 @@\n-    private void matchFieldAnnotation(ClassFile classfile,\n-                                      ExpectedFieldAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Field field : classfile.fields) {\n-            if (expected.matchFieldName(field.getName(classfile.constant_pool))) {\n-                for(Attribute attr : field.attributes) {\n-                    attr.accept(annoMatcher(classfile.constant_pool), expected);\n+    private void matchFieldAnnotation(ClassModel classfile,\n+                                      ExpectedFieldAnnotation expected) {\n+        for(FieldModel field : classfile.fields()) {\n+            if (expected.matchFieldName(field.fieldName().stringValue())) {\n+                for(Attribute<?> attr : field.attributes()) {\n+                    annoMatcher(attr, expected);\n@@ -1028,5 +1036,4 @@\n-    private void matchClassTypeAnnotation(ClassFile classfile,\n-                                          ExpectedTypeAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Attribute attr : classfile.attributes) {\n-            attr.accept(typeAnnoMatcher, expected);\n+    private void matchClassTypeAnnotation(ClassModel classfile,\n+                                          ExpectedTypeAnnotation expected) {\n+        for(Attribute<?> attr : classfile.attributes()) {\n+            typeAnnoMatcher(attr, expected);\n@@ -1036,7 +1043,6 @@\n-    private void matchMethodTypeAnnotation(ClassFile classfile,\n-                                           ExpectedMethodTypeAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Method meth : classfile.methods) {\n-            if (expected.matchMethodName(meth.getName(classfile.constant_pool))) {\n-                for(Attribute attr : meth.attributes) {\n-                    attr.accept(typeAnnoMatcher, expected);\n+    private void matchMethodTypeAnnotation(ClassModel classfile,\n+                                           ExpectedMethodTypeAnnotation expected) {\n+        for(MethodModel meth : classfile.methods()) {\n+            if (expected.matchMethodName(meth.methodName().stringValue())) {\n+                for(Attribute<?> attr : meth.attributes()) {\n+                    typeAnnoMatcher(attr, expected);\n@@ -1048,7 +1054,6 @@\n-    private void matchFieldTypeAnnotation(ClassFile classfile,\n-                                          ExpectedFieldTypeAnnotation expected)\n-        throws ConstantPoolException {\n-        for(Field field : classfile.fields) {\n-            if (expected.matchFieldName(field.getName(classfile.constant_pool))) {\n-                for(Attribute attr : field.attributes) {\n-                    attr.accept(typeAnnoMatcher, expected);\n+    private void matchFieldTypeAnnotation(ClassModel classfile,\n+                                          ExpectedFieldTypeAnnotation expected) {\n+        for(FieldModel field : classfile.fields()) {\n+            if (expected.matchFieldName(field.fieldName().stringValue())) {\n+                for(Attribute<?> attr : field.attributes()) {\n+                    typeAnnoMatcher(attr, expected);\n@@ -1060,3 +1065,2 @@\n-    private void matchClassAnnotations(ClassFile classfile,\n-                                       ExpectedAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchClassAnnotations(ClassModel classfile,\n+                                       ExpectedAnnotation[] expected) {\n@@ -1068,3 +1072,2 @@\n-    private void matchMethodAnnotations(ClassFile classfile,\n-                                        ExpectedMethodAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchMethodAnnotations(ClassModel classfile,\n+                                        ExpectedMethodAnnotation[] expected) {\n@@ -1076,3 +1079,2 @@\n-    private void matchParameterAnnotations(ClassFile classfile,\n-                                           ExpectedParameterAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchParameterAnnotations(ClassModel classfile,\n+                                           ExpectedParameterAnnotation[] expected) {\n@@ -1084,3 +1086,2 @@\n-    private void matchFieldAnnotations(ClassFile classfile,\n-                                       ExpectedFieldAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchFieldAnnotations(ClassModel classfile,\n+                                       ExpectedFieldAnnotation[] expected) {\n@@ -1092,3 +1093,2 @@\n-    private void matchClassTypeAnnotations(ClassFile classfile,\n-                                           ExpectedTypeAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchClassTypeAnnotations(ClassModel classfile,\n+                                           ExpectedTypeAnnotation[] expected) {\n@@ -1100,3 +1100,2 @@\n-    private void matchMethodTypeAnnotations(ClassFile classfile,\n-                                            ExpectedMethodTypeAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchMethodTypeAnnotations(ClassModel classfile,\n+                                            ExpectedMethodTypeAnnotation[] expected) {\n@@ -1108,3 +1107,2 @@\n-    private void matchFieldTypeAnnotations(ClassFile classfile,\n-                                           ExpectedFieldTypeAnnotation[] expected)\n-        throws ConstantPoolException {\n+    private void matchFieldTypeAnnotations(ClassModel classfile,\n+                                           ExpectedFieldTypeAnnotation[] expected) {\n@@ -1117,1 +1115,1 @@\n-     * Run a template on a single {@code ClassFile}.\n+     * Run a template on a single {@code ClassModel}.\n@@ -1119,1 +1117,1 @@\n-     * @param classfile The {@code ClassFile} on which to run tests.\n+     * @param classfile The {@code ClassModel} on which to run tests.\n@@ -1122,4 +1120,3 @@\n-    public void run(ClassFile classfile,\n-                    Expected... expected)\n-            throws ConstantPoolException {\n-        run(new ClassFile[] { classfile }, expected);\n+    public void run(ClassModel classfile,\n+                    Expected... expected) {\n+        run(new ClassModel[] { classfile }, expected);\n@@ -1129,1 +1126,1 @@\n-     * Run a template on multiple {@code ClassFile}s.\n+     * Run a template on multiple {@code ClassModel}s.\n@@ -1131,1 +1128,1 @@\n-     * @param classfile The {@code ClassFile}s on which to run tests.\n+     * @param classfiles The {@code ClassModel}s on which to run tests.\n@@ -1134,4 +1131,3 @@\n-    public void run(ClassFile[] classfiles,\n-                    Expected... expected)\n-            throws ConstantPoolException {\n-        for(ClassFile classfile : classfiles) {\n+    public void run(ClassModel[] classfiles,\n+                    Expected... expected) {\n+        for(ClassModel classfile : classfiles) {\n@@ -1139,1 +1135,1 @@\n-                if (one.matchClassName(classfile.getName())) {\n+                if (one.matchClassName(classfile.thisClass().name().stringValue())) {\n@@ -1168,1 +1164,1 @@\n-     * Get a {@code ClassFile} from its file name.\n+     * Get a {@code ClassModel} from its file name.\n@@ -1172,1 +1168,1 @@\n-     * @return The {@code ClassFile}\n+     * @return The {@code ClassModel}\n@@ -1174,1 +1170,1 @@\n-    public static ClassFile getClassFile(String name,\n+    public static ClassModel getClassFile(String name,\n@@ -1176,1 +1172,1 @@\n-        throws IOException, ConstantPoolException {\n+        throws IOException {\n@@ -1178,0 +1174,1 @@\n+        assert url != null;\n@@ -1179,1 +1176,1 @@\n-            return ClassFile.read(in);\n+            return Classfile.of().parse(in.readAllBytes());\n@@ -1183,206 +1180,5 @@\n-    private static class AbstractAttributeVisitor<T> implements Attribute.Visitor<Void, T> {\n-\n-        @Override\n-        public Void visitDefault(DefaultAttribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitAnnotationDefault(AnnotationDefault_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitBootstrapMethods(BootstrapMethods_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitCharacterRangeTable(CharacterRangeTable_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitCode(Code_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitCompilationID(CompilationID_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitConstantValue(ConstantValue_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitDeprecated(Deprecated_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitEnclosingMethod(EnclosingMethod_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitExceptions(Exceptions_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitInnerClasses(InnerClasses_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitLineNumberTable(LineNumberTable_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitLocalVariableTable(LocalVariableTable_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitLocalVariableTypeTable(LocalVariableTypeTable_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-          public Void visitNestHost(NestHost_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitMethodParameters(MethodParameters_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitModule(Module_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitModuleHashes(ModuleHashes_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitModuleMainClass(ModuleMainClass_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitModulePackages(ModulePackages_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitModuleResolution(ModuleResolution_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitModuleTarget(ModuleTarget_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitNestMembers(NestMembers_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitSignature(Signature_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitSourceDebugExtension(SourceDebugExtension_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitSourceFile(SourceFile_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitSourceID(SourceID_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitStackMap(StackMap_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitStackMapTable(StackMapTable_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitSynthetic(Synthetic_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitPermittedSubclasses(PermittedSubclasses_attribute attr, T p) {\n-            return null;\n-        }\n-\n-        @Override\n-        public Void visitRecord(Record_attribute attr, T p) {\n-            return null;\n-        }\n-    }\n-\n-    private static final Attribute.Visitor<Void, ExpectedTypeAnnotation> typeAnnoMatcher\n-            = new AbstractAttributeVisitor<ExpectedTypeAnnotation>() {\n-\n-                @Override\n-                public Void visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute attr,\n-                        ExpectedTypeAnnotation expected) {\n-                    if (expected.matchVisibility(true)) {\n-                        for (TypeAnnotation anno : attr.annotations) {\n-                            expected.matchAnnotation(anno);\n-                        }\n-                    }\n-\n-                    return null;\n+    public void typeAnnoMatcher(Attribute<?> attr, ExpectedTypeAnnotation expected) {\n+        switch (attr) {\n+            case RuntimeVisibleTypeAnnotationsAttribute vattr -> {\n+                if (expected.matchVisibility(true)) {\n+                    for (TypeAnnotation anno : vattr.annotations()) expected.matchAnnotation(anno);\n@@ -1390,11 +1186,4 @@\n-\n-                @Override\n-                public Void visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute attr,\n-                        ExpectedTypeAnnotation expected) {\n-                    if (expected.matchVisibility(false)) {\n-                        for (TypeAnnotation anno : attr.annotations) {\n-                            expected.matchAnnotation(anno);\n-                        }\n-                    }\n-\n-                    return null;\n+            }\n+            case RuntimeInvisibleTypeAnnotationsAttribute ivattr -> {\n+                if (expected.matchVisibility(false)) {\n+                    ivattr.annotations().forEach(expected::matchAnnotation);\n@@ -1402,4 +1191,4 @@\n-            };\n-\n-    private static Attribute.Visitor<Void, ExpectedAnnotation> annoMatcher(ConstantPool cpool) {\n-        return new AbstractAttributeVisitor<ExpectedAnnotation>() {\n+            }\n+            default -> {}\n+        }\n+    };\n@@ -1407,3 +1196,3 @@\n-            @Override\n-            public Void visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute attr,\n-                                                       ExpectedAnnotation expected) {\n+    public void annoMatcher(Attribute<?> attr, ExpectedAnnotation expected) {\n+        switch (attr) {\n+            case RuntimeVisibleTypeAnnotationsAttribute rvattr -> {\n@@ -1411,2 +1200,2 @@\n-                    for(Annotation anno : attr.annotations) {\n-                        expected.matchAnnotation(cpool, anno);\n+                    for(Annotation anno : rvattr.annotations()) {\n+                        expected.matchAnnotation(anno);\n@@ -1415,2 +1204,0 @@\n-\n-                return null;\n@@ -1418,4 +1205,1 @@\n-\n-            @Override\n-            public Void visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute attr,\n-                                                         ExpectedAnnotation expected) {\n+            case RuntimeInvisibleAnnotationsAttribute rivattr -> {\n@@ -1423,2 +1207,2 @@\n-                    for(Annotation anno : attr.annotations) {\n-                        expected.matchAnnotation(cpool, anno);\n+                    for(Annotation anno : rivattr.annotations()) {\n+                        expected.matchAnnotation(anno);\n@@ -1427,2 +1211,0 @@\n-\n-                return null;\n@@ -1430,1 +1212,2 @@\n-        };\n+            default -> {}\n+        }\n@@ -1433,6 +1216,3 @@\n-    private static Attribute.Visitor<Void, ExpectedParameterAnnotation> paramMatcher(ConstantPool cpool) {\n-        return new AbstractAttributeVisitor<ExpectedParameterAnnotation>() {\n-\n-            @Override\n-            public Void visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute attr,\n-                                                                ExpectedParameterAnnotation expected) {\n+    private void paramMatcher(Attribute<?> attr, ExpectedParameterAnnotation expected) {\n+        switch (attr) {\n+            case RuntimeVisibleParameterAnnotationsAttribute vattr -> {\n@@ -1440,1 +1220,1 @@\n-                    if (expected.index < attr.parameter_annotations.length) {\n+                    if (expected.index < vattr.parameterAnnotations().size()) {\n@@ -1442,2 +1222,2 @@\n-                                attr.parameter_annotations[expected.index]) {\n-                            expected.matchAnnotation(cpool, anno);\n+                                vattr.parameterAnnotations().get(expected.index)) {\n+                            expected.matchAnnotation(anno);\n@@ -1447,2 +1227,0 @@\n-\n-                return null;\n@@ -1450,4 +1228,1 @@\n-\n-            @Override\n-            public Void visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute attr,\n-                                                                  ExpectedParameterAnnotation expected) {\n+            case RuntimeInvisibleParameterAnnotationsAttribute ivattr -> {\n@@ -1455,1 +1230,1 @@\n-                    if (expected.index < attr.parameter_annotations.length) {\n+                    if (expected.index < ivattr.parameterAnnotations().size()) {\n@@ -1457,2 +1232,2 @@\n-                                attr.parameter_annotations[expected.index]) {\n-                            expected.matchAnnotation(cpool, anno);\n+                                ivattr.parameterAnnotations().get(expected.index)) {\n+                            expected.matchAnnotation(anno);\n@@ -1462,2 +1237,0 @@\n-\n-                return null;\n@@ -1465,1 +1238,2 @@\n-        };\n+            default -> {}\n+        }\n","filename":"test\/langtools\/lib\/annotations\/annotations\/classfile\/ClassfileInspector.java","additions":159,"deletions":385,"binary":false,"changes":544,"status":"modified"},{"patch":"@@ -29,1 +29,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -33,0 +37,3 @@\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.CodeAttribute;\n+import jdk.internal.classfile.constantpool.ConstantPool;\n@@ -36,9 +43,0 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.Code_attribute.InvalidIndex;\n-import com.sun.tools.classfile.ConstantPool;\n-import com.sun.tools.classfile.ConstantPoolException;\n-import com.sun.tools.classfile.Descriptor.InvalidDescriptor;\n-import com.sun.tools.classfile.Method;\n-\n@@ -47,1 +45,1 @@\n-            throws IOException, ConstantPoolException, InvalidDescriptor, InvalidIndex {\n+            throws IOException {\n@@ -58,3 +56,3 @@\n-            throws IOException, ConstantPoolException, InvalidDescriptor, InvalidIndex {\n-        ClassFile classFile = ClassFile.read(file);\n-        ConstantPool constantPool = classFile.constant_pool;\n+            throws IOException {\n+        ClassModel classFile = Classfile.of().parse(file.toPath());\n+        ConstantPool constantPool = classFile.constantPool();\n@@ -63,5 +61,5 @@\n-        for (Method method : classFile.methods) {\n-            if (method.getName(constantPool).equals(\"arrMethod\")) {\n-                Code_attribute code = (Code_attribute) method.attributes\n-                        .get(Attribute.Code);\n-                if (code.max_locals > 4)\n+        for (MethodModel method : classFile.methods()) {\n+            if (method.methodName().equalsString(\"arrMethod\")) {\n+                CodeAttribute code = method.findAttribute(Attributes.CODE).orElse(null);\n+                assert code != null;\n+                if (code.maxLocals() > 4)\n@@ -72,1 +70,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/8009170\/RedundantByteCodeInArrayTest.java","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -24,3 +24,0 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.ConstantPool.*;\n-\n@@ -31,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/WellKnownTypes.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -34,5 +38,2 @@\n-import com.sun.tools.classfile.AccessFlags;\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.InnerClasses_attribute;\n-import com.sun.tools.classfile.InnerClasses_attribute.Info;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -53,5 +54,5 @@\n-        ClassFile classFile = ClassFile.read(path);\n-        InnerClasses_attribute innerClasses =\n-                (InnerClasses_attribute) classFile.attributes.get(Attribute.InnerClasses);\n-        for (Info classInfo : innerClasses.classes) {\n-            Assert.check(!classInfo.inner_class_access_flags.is(AccessFlags.ACC_STRICT),\n+        ClassModel classFile = Classfile.of().parse(path.toPath());\n+        InnerClassesAttribute innerClasses = classFile.findAttribute(Attributes.INNER_CLASSES).orElse(null);\n+        assert innerClasses != null;\n+        for (InnerClassInfo classInfo : innerClasses.classes()) {\n+            Assert.check(classInfo.flagsMask() != Classfile.ACC_STRICT,\n","filename":"test\/langtools\/tools\/javac\/T7165659\/InnerClassAttrMustNotHaveStrictFPFlagTest.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -38,5 +42,2 @@\n-import com.sun.tools.classfile.ClassFile;\n-\n-import static com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8;\n-import static com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info;\n-import static com.sun.tools.classfile.ConstantPool.CPInfo;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.constantpool.*;\n@@ -58,7 +59,7 @@\n-        ClassFile classFile = ClassFile.read(\n-                new BufferedInputStream(Files.newInputStream(path)));\n-        for (CPInfo cpInfo : classFile.constant_pool.entries()) {\n-            if (cpInfo.getTag() == CONSTANT_Utf8) {\n-                CONSTANT_Utf8_info utf8Info = (CONSTANT_Utf8_info)cpInfo;\n-                Assert.check(utf8Info.value.length() > 0,\n-                        \"UTF8 with length 0 found at class \" + classFile.getName());\n+        ClassModel classFile = Classfile.of().parse(\n+                new BufferedInputStream(Files.newInputStream(path)).readAllBytes());\n+        for (int i = 1; i < classFile.constantPool().entryCount(); ++i) {\n+            PoolEntry pe = classFile.constantPool().entryByIndex(i);\n+            if (pe instanceof Utf8Entry utf8Info) {\n+                Assert.check(utf8Info.stringValue().length() > 0,\n+                        \"UTF8 with length 0 found at class \" + classFile.thisClass().name());\n","filename":"test\/langtools\/tools\/javac\/T8011181\/EmptyUTF8ForInnerClassNameTest.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -38,4 +42,2 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.Method;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.CodeAttribute;\n@@ -55,3 +57,3 @@\n-        ClassFile classFile = ClassFile.read(cfile);\n-        for (Method method : classFile.methods) {\n-            Code_attribute code = (Code_attribute)method.attributes.get(Attribute.Code);\n+        ClassModel classFile = Classfile.of().parse(cfile.toPath());\n+        for (MethodModel method : classFile.methods()) {\n+            CodeAttribute code = method.findAttribute(Attributes.CODE).orElse(null);\n@@ -59,1 +61,1 @@\n-                if (code.attributes.get(Attribute.LocalVariableTable) != null) {\n+                if (code.findAttribute(Attributes.LOCAL_VARIABLE_TABLE).orElse(null) != null) {\n","filename":"test\/langtools\/tools\/javac\/T8028504\/DontGenerateLVTForGNoneOpTest.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -40,1 +44,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -67,5 +72,6 @@\n-        ClassFile classFile = ClassFile.read(cfile);\n-        for (Method method: classFile.methods) {\n-            if (method.getName(classFile.constant_pool).equals(\"foo\")) {\n-                Code_attribute codeAttr = (Code_attribute)method.attributes.get(\"Code\");\n-                Assert.check(codeAttr.max_locals == 0, \"max locals found \" + codeAttr.max_locals);\n+        ClassModel classFile = Classfile.of().parse(cfile.toPath());\n+        for (MethodModel method: classFile.methods()) {\n+            if (method.methodName().stringValue().equals(\"foo\")) {\n+                CodeAttribute codeAttr = method.findAttribute(Attributes.CODE).orElse(null);\n+                assert codeAttr != null;\n+                Assert.check(codeAttr.maxLocals() == 0, \"max locals found \" + codeAttr.maxLocals());\n","filename":"test\/langtools\/tools\/javac\/T8210435\/NoLocalsMustBeReservedForDCEedVarsTest.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -39,1 +44,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.ClassModel;\n@@ -119,1 +124,1 @@\n-            new ClassFile[] { getClassFile(Inner_class, Inner.class),\n+            new ClassModel[] { getClassFile(Inner_class, Inner.class),\n","filename":"test\/langtools\/tools\/javac\/annotations\/SyntheticParameters.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -40,18 +45,3 @@\n-import com.sun.tools.classfile.Annotation;\n-import com.sun.tools.classfile.Annotation.Annotation_element_value;\n-import com.sun.tools.classfile.Annotation.Array_element_value;\n-import com.sun.tools.classfile.Annotation.Class_element_value;\n-import com.sun.tools.classfile.Annotation.Enum_element_value;\n-import com.sun.tools.classfile.Annotation.Primitive_element_value;\n-import com.sun.tools.classfile.Annotation.element_value;\n-import com.sun.tools.classfile.Annotation.element_value.Visitor;\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.ConstantPool.CONSTANT_Integer_info;\n-import com.sun.tools.classfile.ConstantPool.InvalidIndex;\n-import com.sun.tools.classfile.ConstantPoolException;\n-import com.sun.tools.classfile.Method;\n-import com.sun.tools.classfile.RuntimeVisibleTypeAnnotations_attribute;\n-import com.sun.tools.classfile.TypeAnnotation;\n-import com.sun.tools.classfile.TypeAnnotation.Position;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.CodeAttribute;\n+import jdk.internal.classfile.attribute.RuntimeVisibleTypeAnnotationsAttribute;\n@@ -63,2 +53,1 @@\n-import java.util.Arrays;\n-import java.util.Set;\n+import java.util.*;\n@@ -116,4 +105,4 @@\n-        ClassFile cf = ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest$1.class\"));\n-        RuntimeVisibleTypeAnnotations_attribute rvta =\n-                (RuntimeVisibleTypeAnnotations_attribute)\n-                        cf.attributes.get(Attribute.RuntimeVisibleTypeAnnotations);\n+        ClassModel cm = Classfile.of().parse(Paths.get(ToolBox.testClasses, \"AnonymousClassTest$1.class\"));\n+        RuntimeVisibleTypeAnnotationsAttribute rvta =\n+                cm.findAttribute(Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS).orElse(null);\n+        assert rvta != null;\n@@ -124,2 +113,2 @@\n-                Arrays.stream(rvta.annotations)\n-                        .map(a -> annotationDebugString(cf, a))\n+                rvta.annotations().stream()\n+                        .map(a -> annotationDebugString(cm, null, a))\n@@ -130,2 +119,2 @@\n-        ClassFile cf = ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n-        Method method = findMethod(cf, \"f\");\n+        ClassModel cm = Classfile.of().parse(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n+        MethodModel method = findMethod(cm, \"f\");\n@@ -133,0 +122,1 @@\n+        CodeAttribute cAttr = method.findAttribute(Attributes.CODE).orElse(null);\n@@ -135,1 +125,1 @@\n-                annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()));\n+                annotations.stream().map(a -> annotationDebugString(cm, cAttr, a)).collect(toSet()));\n@@ -139,3 +129,3 @@\n-        ClassFile cf =\n-                ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest$Inner.class\"));\n-        Method method = findMethod(cf, \"g\");\n+        ClassModel cm =\n+                Classfile.of().parse(Paths.get(ToolBox.testClasses, \"AnonymousClassTest$Inner.class\"));\n+        MethodModel method = findMethod(cm, \"g\");\n@@ -143,0 +133,1 @@\n+        CodeAttribute cAttr = method.findAttribute(Attributes.CODE).orElse(null);\n@@ -148,1 +139,1 @@\n-                annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()));\n+                annotations.stream().map(a -> annotationDebugString(cm, cAttr, a)).collect(toSet()));\n@@ -153,3 +144,3 @@\n-            ClassFile cf =\n-                    ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n-            Method method = findMethod(cf, \"g\");\n+            ClassModel cm =\n+                    Classfile.of().parse(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n+            MethodModel method = findMethod(cm, \"g\");\n@@ -157,0 +148,1 @@\n+            CodeAttribute cAttr = method.findAttribute(Attributes.CODE).orElse(null);\n@@ -160,1 +152,1 @@\n-                    annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()));\n+                    annotations.stream().map(a -> annotationDebugString(cm, cAttr, a)).collect(toSet()));\n@@ -164,5 +156,5 @@\n-            ClassFile cf =\n-                    ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest$2.class\"));\n-            RuntimeVisibleTypeAnnotations_attribute rvta =\n-                    (RuntimeVisibleTypeAnnotations_attribute)\n-                            cf.attributes.get(Attribute.RuntimeVisibleTypeAnnotations);\n+            ClassModel cm =\n+                    Classfile.of().parse(Paths.get(ToolBox.testClasses, \"AnonymousClassTest$2.class\"));\n+            RuntimeVisibleTypeAnnotationsAttribute rvta =\n+                    cm.findAttribute(Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS).orElse(null);\n+            assert rvta != null;\n@@ -173,2 +165,2 @@\n-                    Arrays.stream(rvta.annotations)\n-                            .map(a -> annotationDebugString(cf, a))\n+                    rvta.annotations().stream()\n+                            .map(a -> annotationDebugString(cm, null, a))\n@@ -180,2 +172,2 @@\n-        ClassFile cf = ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n-        Method method = findMethod(cf, \"<init>\");\n+        ClassModel cm = Classfile.of().parse(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n+        MethodModel method = findMethod(cm, \"<init>\");\n@@ -183,0 +175,1 @@\n+        CodeAttribute cAttr1 = method.findAttribute(Attributes.CODE).orElse(null);\n@@ -185,1 +178,1 @@\n-                annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()) );\n+                annotations.stream().map(a -> annotationDebugString(cm, cAttr1, a)).collect(toSet()) );\n@@ -187,1 +180,1 @@\n-        method = findMethod(cf, \"<clinit>\");\n+        method = findMethod(cm, \"<clinit>\");\n@@ -189,0 +182,1 @@\n+        CodeAttribute cAttr2 = method.findAttribute(Attributes.CODE).orElse(null);\n@@ -190,2 +184,2 @@\n-                Set.of(\"@LAnonymousClassTest$TA;(6) NEW, offset=0, location=[INNER_TYPE]\"),\n-                annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()) );\n+                Set.of(\"@LAnonymousClassTest$TA;(6) NEW, offset=16, location=[INNER_TYPE]\"),\n+                annotations.stream().map(a -> annotationDebugString(cm, cAttr2, a)).collect(toSet()) );\n@@ -196,2 +190,2 @@\n-    private static Set<TypeAnnotation> getRuntimeVisibleTypeAnnotations(Method method) {\n-        if (method.attributes.get(Attribute.RuntimeVisibleTypeAnnotations) != null) {\n+    private static Set<TypeAnnotation> getRuntimeVisibleTypeAnnotations(MethodModel method) {\n+        if (method.findAttribute(Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS).orElse(null) != null) {\n@@ -201,5 +195,6 @@\n-        Code_attribute code = (Code_attribute) method.attributes.get(Attribute.Code);\n-        RuntimeVisibleTypeAnnotations_attribute rvta =\n-                (RuntimeVisibleTypeAnnotations_attribute)\n-                        code.attributes.get(Attribute.RuntimeVisibleTypeAnnotations);\n-        return Set.of(rvta.annotations);\n+        CodeAttribute code = method.findAttribute(Attributes.CODE).orElse(null);\n+        assert code != null;\n+        RuntimeVisibleTypeAnnotationsAttribute rvta =\n+                code.findAttribute(Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS).orElse(null);\n+        assert rvta != null;\n+        return new HashSet<>(rvta.annotations());\n@@ -208,2 +203,2 @@\n-    private static Method findMethod(ClassFile cf, String name) {\n-        return Arrays.stream(cf.methods)\n+    private static MethodModel findMethod(ClassModel cm, String name) {\n+        return cm.methods().stream()\n@@ -211,7 +206,1 @@\n-                        m -> {\n-                            try {\n-                                return m.getName(cf.constant_pool).contentEquals(name);\n-                            } catch (ConstantPoolException e) {\n-                                throw new AssertionError(e);\n-                            }\n-                        })\n+                        m -> m.methodName().stringValue().contentEquals(name))\n@@ -228,2 +217,3 @@\n-    private static String annotationDebugString(ClassFile cf, TypeAnnotation annotation) {\n-        Position pos = annotation.position;\n+    private static String annotationDebugString(ClassModel cm, CodeAttribute cAttr, TypeAnnotation annotation) {\n+        TypeAnnotation.TargetInfo info = annotation.targetInfo();\n+        int offset = info instanceof TypeAnnotation.OffsetTarget offsetInfo? cAttr.labelToBci(offsetInfo.target()): -1;\n@@ -232,1 +222,1 @@\n-            name = cf.constant_pool.getUTF8Info(annotation.annotation.type_index).value;\n+            name = annotation.classSymbol().descriptorString();\n@@ -236,0 +226,5 @@\n+        List<String> location = new ArrayList<>();\n+        for (TypeAnnotation.TypePathComponent path: annotation.targetPath()) {\n+            if (path.typePathKind() == TypeAnnotation.TypePathComponent.Kind.INNER_TYPE)location.add(path.typePathKind().name());\n+            else location.add(path.typePathKind() + \"(\" + path.typeArgumentIndex() + \")\");\n+        }\n@@ -239,4 +234,4 @@\n-                annotationValueoDebugString(cf, annotation.annotation),\n-                pos.type,\n-                pos.offset,\n-                pos.location);\n+                annotationValueDebugString(cm, annotation),\n+                info.targetType(),\n+                offset,\n+                location);\n@@ -245,2 +240,2 @@\n-    private static String annotationValueoDebugString(ClassFile cf, Annotation annotation) {\n-        if (annotation.element_value_pairs.length != 1) {\n+    private static String annotationValueDebugString(ClassModel cm, Annotation annotation) {\n+        if (annotation.elements().size() != 1) {\n@@ -250,1 +245,1 @@\n-            return elementValueDebugString(cf, annotation.element_value_pairs[0].value);\n+            return elementValueDebugString(annotation.elements().get(0).value());\n@@ -256,38 +251,5 @@\n-    private static String elementValueDebugString(ClassFile cf, element_value value) {\n-        class Viz implements Visitor<String, Void> {\n-            @Override\n-            public String visitPrimitive(Primitive_element_value ev, Void aVoid) {\n-                try {\n-                    switch (ev.tag) {\n-                        case 'I':\n-                            return Integer.toString(\n-                                    ((CONSTANT_Integer_info)\n-                                                    cf.constant_pool.get(ev.const_value_index))\n-                                            .value);\n-                        default:\n-                            throw new UnsupportedOperationException(String.format(\"%c\", ev.tag));\n-                    }\n-                } catch (InvalidIndex e) {\n-                    throw new AssertionError(e);\n-                }\n-            }\n-\n-            @Override\n-            public String visitEnum(Enum_element_value ev, Void aVoid) {\n-                throw new UnsupportedOperationException();\n-            }\n-\n-            @Override\n-            public String visitClass(Class_element_value ev, Void aVoid) {\n-                throw new UnsupportedOperationException();\n-            }\n-\n-            @Override\n-            public String visitAnnotation(Annotation_element_value ev, Void aVoid) {\n-                throw new UnsupportedOperationException();\n-            }\n-\n-            @Override\n-            public String visitArray(Array_element_value ev, Void aVoid) {\n-                throw new UnsupportedOperationException();\n-            }\n+    private static String elementValueDebugString(AnnotationValue value) {\n+        if (value.tag() == 'I') {\n+            return Integer.toString(((AnnotationValue.OfInteger) value).intValue());\n+        } else {\n+            throw new UnsupportedOperationException(String.format(\"%c\", value.tag()));\n@@ -295,1 +257,0 @@\n-        return value.accept(new Viz(), null);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/AnonymousClassTest.java","additions":77,"deletions":116,"binary":false,"changes":193,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import java.lang.annotation.*;\n@@ -29,1 +28,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -62,1 +62,1 @@\n-    ClassFile getClassFile(String name) throws IOException, ConstantPoolException {\n+    ClassModel getClassFile(String name) throws IOException {\n@@ -64,5 +64,3 @@\n-        InputStream in = url.openStream();\n-        try {\n-            return ClassFile.read(in);\n-        } finally {\n-            in.close();\n+        assert url != null;\n+        try (InputStream in = url.openStream()) {\n+            return Classfile.of().parse(in.readAllBytes());\n@@ -72,6 +70,3 @@\n-    ClassFile getClassFile(URL url) throws IOException, ConstantPoolException {\n-        InputStream in = url.openStream();\n-        try {\n-            return ClassFile.read(in);\n-        } finally {\n-            in.close();\n+    ClassModel getClassFile(URL url) throws IOException {\n+        try (InputStream in = url.openStream()) {\n+            return Classfile.of().parse(in.readAllBytes());\n@@ -82,6 +77,2 @@\n-    void test(ClassFile cf) {\n-        test(\"CLASS\",cf, null, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(\"CLASS\",cf, null, null, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-        \/\/RuntimeAnnotations since one annotation can result in two attributes.\n-        test(\"CLASS\",cf, null, null, Attribute.RuntimeVisibleAnnotations, true);\n-        test(\"CLASS\",cf, null, null, Attribute.RuntimeInvisibleAnnotations, false);\n+    void test(ClassModel cm) {\n+        test(cm, false); \/\/For ClassModel, not look for annotations in code attr\n@@ -89,13 +80,3 @@\n-\n-    void test(ClassFile cf, Field f, Boolean local) {\n-        if (!local) {\n-            test(\"FIELD\",cf, f, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n-            test(\"FIELD\",cf, f, null, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-            test(\"FIELD\",cf, f, null, Attribute.RuntimeVisibleAnnotations, true);\n-            test(\"FIELD\",cf, f, null, Attribute.RuntimeInvisibleAnnotations, false);\n-        } else {\n-            test(\"CODE\",cf, f, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n-            test(\"CODE\",cf, f, null, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-            test(\"CODE\",cf, f, null, Attribute.RuntimeVisibleAnnotations, true);\n-            test(\"CODE\",cf, f, null, Attribute.RuntimeInvisibleAnnotations, false);\n-        }\n+    \/\/ default to not looking in code attribute\n+    void test(FieldModel fm) {\n+        test(fm, false);\n@@ -104,2 +85,2 @@\n-    void test(ClassFile cf, Field f) {\n-        test(cf, f, false);\n+    void test(MethodModel mm ) {\n+        test(mm, false);\n@@ -109,12 +90,5 @@\n-    void test(ClassFile cf, Method m, Boolean local) {\n-        if (!local) {\n-            test(\"METHOD\",cf, null, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-            test(\"METHOD\",cf, null, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-            test(\"METHOD\",cf, null, m, Attribute.RuntimeVisibleAnnotations, true);\n-            test(\"METHOD\",cf, null, m, Attribute.RuntimeInvisibleAnnotations, false);\n-        } else  {\n-            test(\"MCODE\",cf, null, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-            test(\"MCODE\",cf, null, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-            test(\"MCODE\",cf, null, m, Attribute.RuntimeVisibleAnnotations, true);\n-            test(\"MCODE\",cf, null, m, Attribute.RuntimeInvisibleAnnotations, false);\n-        }\n+    void test(AttributedElement m, Boolean local) {\n+        test(m, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS, local);\n+        test(m, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS, local);\n+        test(m, Attributes.RUNTIME_VISIBLE_ANNOTATIONS, local);\n+        test(m, Attributes.RUNTIME_INVISIBLE_ANNOTATIONS, local);\n@@ -123,6 +97,1 @@\n-    \/\/ default to not looking in code attribute\n-    void test(ClassFile cf, Method m ) {\n-        test(cf, m, false);\n-    }\n-\n-    \/\/ Test the result of Attributes.getIndex according to expectations\n+    \/\/ Test the result of MethodModel.findAttribute according to expectations\n@@ -130,51 +99,12 @@\n-    void test(String ttype, ClassFile cf, Field f, Method m, String annName, boolean visible) {\n-        String testtype = ttype;\n-        String name = null;\n-        int index = -1;\n-        Attribute attr = null;\n-        Code_attribute cAttr = null;\n-        boolean isTAattr = annName.contains(\"TypeAnnotations\");\n-        try {\n-            switch(testtype) {\n-                case \"FIELD\":\n-                    name = f.getName(cf.constant_pool);\n-                    index = f.attributes.getIndex(cf.constant_pool, annName);\n-                    if(index!= -1)\n-                        attr = f.attributes.get(index);\n-                    break;\n-                case \"CODE\":\n-                    name = f.getName(cf.constant_pool);\n-                    \/\/fetch index of and code attribute and annotations from code attribute.\n-                    index = cf.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-                    if(index!= -1) {\n-                        attr = cf.attributes.get(index);\n-                        assert attr instanceof Code_attribute;\n-                        cAttr = (Code_attribute)attr;\n-                        index = cAttr.attributes.getIndex(cf.constant_pool, annName);\n-                        if(index!= -1)\n-                            attr = cAttr.attributes.get(index);\n-                    }\n-                    break;\n-                case \"METHOD\":\n-                    name = m.getName(cf.constant_pool);\n-                    index = m.attributes.getIndex(cf.constant_pool, annName);\n-                    if(index!= -1)\n-                        attr = m.attributes.get(index);\n-                    break;\n-                case \"MCODE\":\n-                    name = m.getName(cf.constant_pool);\n-                    \/\/fetch index of and code attribute and annotations from code attribute.\n-                    index = m.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-                    if(index!= -1) {\n-                        attr = m.attributes.get(index);\n-                        assert attr instanceof Code_attribute;\n-                        cAttr = (Code_attribute)attr;\n-                        index = cAttr.attributes.getIndex(cf.constant_pool, annName);\n-                        if(index!= -1)\n-                            attr = cAttr.attributes.get(index);\n-                    }\n-                    break;\n-                default:\n-                    name = cf.getName();\n-                    index = cf.attributes.getIndex(cf.constant_pool, annName);\n-                    if(index!= -1) attr = cf.attributes.get(index);\n+    <T extends Attribute<T>>void test(AttributedElement m, AttributeMapper<T> annName, Boolean local) {\n+        String name;\n+        Attribute<T> attr;\n+        boolean isTAattr = annName.name().contains(\"Type\");\n+        switch(m) {\n+            case FieldModel fm -> {\n+                name = fm.fieldName().stringValue();\n+                attr = extractAnnotation(m, annName, local);\n+            }\n+            case MethodModel mm -> {\n+                name = mm.methodName().stringValue();\n+                attr = extractAnnotation(m, annName, local);\n@@ -182,1 +112,6 @@\n-        } catch(ConstantPoolException cpe) { cpe.printStackTrace(); }\n+            default -> {\n+                ClassModel cm = (ClassModel) m;\n+                name = cm.thisClass().asInternalName();\n+                attr = extractAnnotation(cm, annName, local);\n+            }\n+        }\n@@ -184,1 +119,1 @@\n-        if (index != -1) {\n+        if (attr != null) {\n@@ -186,7 +121,12 @@\n-                RuntimeTypeAnnotations_attribute tAttr =\n-                        (RuntimeTypeAnnotations_attribute)attr;\n-                println(testtype + \": \" + name + \", \" + annName + \": \" +\n-                        tAttr.annotations.length );\n-                if (tAttr.annotations.length > 0) {\n-                    for (int i = 0; i < tAttr.annotations.length; i++) {\n-                        println(\"  types:\" + tAttr.annotations[i].position.type);\n+\/\/                List <TypeAnnotation> tAnnots = new ArrayList<TypeAnnotation>();\n+                switch (attr) {\n+                    case RuntimeVisibleTypeAnnotationsAttribute vtAttr -> {\n+                        List <TypeAnnotation> tAnnots = vtAttr.annotations();\n+                        tvisibles += tAnnots.size();\n+                        allt += tAnnots.size();\n+                    }\n+                    case RuntimeInvisibleTypeAnnotationsAttribute invtAttr -> {\n+                        System.err.println(invtAttr.annotations());\n+                        List <TypeAnnotation> tAnnots = invtAttr.annotations();\n+                        tinvisibles += tAnnots.size();\n+                        allt += tAnnots.size();\n@@ -194,2 +134,1 @@\n-                } else {\n-                    println(\"\");\n+                    default -> throw new AssertionError();\n@@ -197,5 +136,7 @@\n-                allt += tAttr.annotations.length;\n-                if (visible)\n-                    tvisibles += tAttr.annotations.length;\n-                else\n-                    tinvisibles += tAttr.annotations.length;\n+                \/\/ This snippet is simply for printlin. which are duplicated in two cases. Therefore, I want to drop it.\n+\/\/                if (!tAnnots.isEmpty()) {\n+\/\/\/\/                    for (TypeAnnotation tAnnot : tAnnots)\n+\/\/\/\/                        println(\"  types:\" + tAnnot.targetInfo().targetType());\n+\/\/\/\/                    println(\"Local: \" + local + \", \" + name + \", \" + annName + \": \" + tAnnots.size());\n+\/\/                    allt += tAnnots.size();\n+\/\/                }\n@@ -203,9 +144,16 @@\n-                RuntimeAnnotations_attribute tAttr =\n-                        (RuntimeAnnotations_attribute)attr;\n-                println(testtype + \": \" + name + \", \" + annName + \": \" +\n-                        tAttr.annotations.length );\n-                all += tAttr.annotations.length;\n-                if (visible)\n-                    visibles += tAttr.annotations.length;\n-                else\n-                    invisibles += tAttr.annotations.length;\n+                List <Annotation> annots;\n+                switch (attr) {\n+                    case RuntimeVisibleAnnotationsAttribute tAttr -> {\n+                        annots = tAttr.annotations();\n+                        visibles += annots.size();\n+                    }\n+                    case RuntimeInvisibleAnnotationsAttribute tAttr -> {\n+                        annots = tAttr.annotations();\n+                        invisibles += annots.size();\n+                    }\n+                    default -> throw new AssertionError();\n+                }\n+                if (!annots.isEmpty()) {\n+                    println(\"Local: \" + local + \", \" + name + \", \" + annName + \": \" + annots.size());\n+                    all += annots.size();\n+                }\n@@ -215,0 +163,13 @@\n+    <T extends Attribute<T>> Attribute<T> extractAnnotation(AttributedElement m, AttributeMapper<T> annName, Boolean local) {\n+        CodeAttribute cAttr;\n+        Attribute<T> attr = null;\n+        if (local) {\n+            cAttr = m.findAttribute(Attributes.CODE).orElse(null);\n+            if (cAttr != null) {\n+                attr = cAttr.findAttribute(annName).orElse(null);\n+            }\n+        } else {\n+            attr = m.findAttribute(annName).orElse(null);\n+        }\n+        return attr;\n+    }\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/ClassfileTestHelper.java","additions":90,"deletions":129,"binary":false,"changes":219,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -31,1 +36,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -145,1 +150,1 @@\n-        ClassFile cf = ClassFile.read(classFile);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n@@ -148,1 +153,1 @@\n-        test(cf);\n+        test(cm);\n@@ -150,2 +155,2 @@\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -153,2 +158,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/CombinationsTargetTest1.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -31,1 +36,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -164,1 +169,1 @@\n-        ClassFile cf = ClassFile.read(classFile);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n@@ -167,1 +172,1 @@\n-        test(cf);\n+        test(cm);\n@@ -169,1 +174,1 @@\n-        for (Field f : cf.fields) {\n+        for (FieldModel fm : cm.fields()) {\n@@ -171,1 +176,1 @@\n-                test(cf, f, true);\n+                test(fm, true);\n@@ -173,1 +178,1 @@\n-                test(cf,f);\n+                test(fm);\n@@ -175,1 +180,1 @@\n-        for (Method m: cf.methods) {\n+        for (MethodModel mm: cm.methods()) {\n@@ -177,1 +182,1 @@\n-                test(cf, m, true);\n+                test(mm, true);\n@@ -179,1 +184,1 @@\n-                test(cf, m);\n+                test(mm);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/CombinationsTargetTest2.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -29,0 +29,6 @@\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -33,1 +39,3 @@\n-import java.io.File;\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -540,0 +548,135 @@\n+\n+    \/************ Helper annotations counting methods ******************\/\n+    void test(ClassFile cf) {\n+        test(\"CLASS\",cf, null, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n+        test(\"CLASS\",cf, null, null, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+        \/\/RuntimeAnnotations since one annotation can result in two attributes.\n+        test(\"CLASS\",cf, null, null, Attribute.RuntimeVisibleAnnotations, true);\n+        test(\"CLASS\",cf, null, null, Attribute.RuntimeInvisibleAnnotations, false);\n+    }\n+\n+    void test(ClassFile cf, Field f, Boolean local) {\n+        if (!local) {\n+            test(\"FIELD\",cf, f, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n+            test(\"FIELD\",cf, f, null, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+            test(\"FIELD\",cf, f, null, Attribute.RuntimeVisibleAnnotations, true);\n+            test(\"FIELD\",cf, f, null, Attribute.RuntimeInvisibleAnnotations, false);\n+        } else {\n+            test(\"CODE\",cf, f, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n+            test(\"CODE\",cf, f, null, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+            test(\"CODE\",cf, f, null, Attribute.RuntimeVisibleAnnotations, true);\n+            test(\"CODE\",cf, f, null, Attribute.RuntimeInvisibleAnnotations, false);\n+        }\n+    }\n+\n+    void test(ClassFile cf, Field f) {\n+        test(cf, f, false);\n+    }\n+\n+    \/\/ 'local' determines whether to look for annotations in code attribute or not.\n+    void test(ClassFile cf, Method m, Boolean local) {\n+        if (!local) {\n+            test(\"METHOD\",cf, null, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n+            test(\"METHOD\",cf, null, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+            test(\"METHOD\",cf, null, m, Attribute.RuntimeVisibleAnnotations, true);\n+            test(\"METHOD\",cf, null, m, Attribute.RuntimeInvisibleAnnotations, false);\n+        } else  {\n+            test(\"MCODE\",cf, null, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n+            test(\"MCODE\",cf, null, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+            test(\"MCODE\",cf, null, m, Attribute.RuntimeVisibleAnnotations, true);\n+            test(\"MCODE\",cf, null, m, Attribute.RuntimeInvisibleAnnotations, false);\n+        }\n+    }\n+\n+    \/\/ default to not looking in code attribute\n+    void test(ClassFile cf, Method m ) {\n+        test(cf, m, false);\n+    }\n+\n+    \/\/ Test the result of Attributes.getIndex according to expectations\n+    \/\/ encoded in the class\/field\/method name; increment annotations counts.\n+    void test(String ttype, ClassFile cf, Field f, Method m, String annName, boolean visible) {\n+        String testtype = ttype;\n+        String name = null;\n+        int index = -1;\n+        Attribute attr = null;\n+        Code_attribute cAttr = null;\n+        boolean isTAattr = annName.contains(\"TypeAnnotations\");\n+        try {\n+            switch(testtype) {\n+                case \"FIELD\":\n+                    name = f.getName(cf.constant_pool);\n+                    index = f.attributes.getIndex(cf.constant_pool, annName);\n+                    if(index!= -1)\n+                        attr = f.attributes.get(index);\n+                    break;\n+                case \"CODE\":\n+                    name = f.getName(cf.constant_pool);\n+                    \/\/fetch index of and code attribute and annotations from code attribute.\n+                    index = cf.attributes.getIndex(cf.constant_pool, Attribute.Code);\n+                    if(index!= -1) {\n+                        attr = cf.attributes.get(index);\n+                        assert attr instanceof Code_attribute;\n+                        cAttr = (Code_attribute)attr;\n+                        index = cAttr.attributes.getIndex(cf.constant_pool, annName);\n+                        if(index!= -1)\n+                            attr = cAttr.attributes.get(index);\n+                    }\n+                    break;\n+                case \"METHOD\":\n+                    name = m.getName(cf.constant_pool);\n+                    index = m.attributes.getIndex(cf.constant_pool, annName);\n+                    if(index!= -1)\n+                        attr = m.attributes.get(index);\n+                    break;\n+                case \"MCODE\":\n+                    name = m.getName(cf.constant_pool);\n+                    \/\/fetch index of and code attribute and annotations from code attribute.\n+                    index = m.attributes.getIndex(cf.constant_pool, Attribute.Code);\n+                    if(index!= -1) {\n+                        attr = m.attributes.get(index);\n+                        assert attr instanceof Code_attribute;\n+                        cAttr = (Code_attribute)attr;\n+                        index = cAttr.attributes.getIndex(cf.constant_pool, annName);\n+                        if(index!= -1)\n+                            attr = cAttr.attributes.get(index);\n+                    }\n+                    break;\n+                default:\n+                    name = cf.getName();\n+                    index = cf.attributes.getIndex(cf.constant_pool, annName);\n+                    if(index!= -1) attr = cf.attributes.get(index);\n+            }\n+        } catch(ConstantPoolException cpe) { cpe.printStackTrace(); }\n+\n+        if (index != -1) {\n+            if(isTAattr) { \/\/count RuntimeTypeAnnotations\n+                RuntimeTypeAnnotations_attribute tAttr =\n+                        (RuntimeTypeAnnotations_attribute)attr;\n+                System.out.println(testtype + \": \" + name + \", \" + annName + \": \" +\n+                        tAttr.annotations.length );\n+                if (tAttr.annotations.length > 0) {\n+                    for (int i = 0; i < tAttr.annotations.length; i++) {\n+                        System.out.println(\"  types:\" + tAttr.annotations[i].position.type);\n+                    }\n+                } else {\n+                    System.out.println(\"\");\n+                }\n+                allt += tAttr.annotations.length;\n+                if (visible)\n+                    tvisibles += tAttr.annotations.length;\n+                else\n+                    tinvisibles += tAttr.annotations.length;\n+            } else {\n+                RuntimeAnnotations_attribute tAttr =\n+                        (RuntimeAnnotations_attribute)attr;\n+                System.out.println(testtype + \": \" + name + \", \" + annName + \": \" +\n+                        tAttr.annotations.length );\n+                all += tAttr.annotations.length;\n+                if (visible)\n+                    visibles += tAttr.annotations.length;\n+                else\n+                    invisibles += tAttr.annotations.length;\n+            }\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/CombinationsTargetTest3.java","additions":144,"deletions":1,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -35,1 +35,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -46,5 +51,4 @@\n-\n-        ClassFile cf = getClassFile(\"DeadCode$Test.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"DeadCode$Test.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -52,2 +56,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m, true);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm, true);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/DeadCode.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import jdk.internal.classfile.*;\n@@ -27,2 +28,0 @@\n-import com.sun.tools.classfile.*;\n-\n@@ -33,1 +32,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -47,4 +51,4 @@\n-        ClassFile cf = getClassFile(\"InstanceInitializer$Test.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"InstanceInitializer$Test.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -52,2 +56,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m, true);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm, true);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/InstanceInitializer.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import jdk.internal.classfile.*;\n@@ -29,1 +30,0 @@\n-import com.sun.tools.classfile.*;\n@@ -34,1 +34,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -46,4 +51,4 @@\n-        ClassFile cf = getClassFile(\"NewTypeArguments$Test.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"NewTypeArguments$Test.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -51,2 +56,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m, true);\n+        for (MethodModel m: cm.methods()) {\n+            test(m, true);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/NewTypeArguments.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -36,1 +37,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -38,1 +44,1 @@\n-public class NoTargetAnnotations {\n+public class NoTargetAnnotations extends ClassfileTestHelper {\n@@ -45,4 +51,4 @@\n-        ClassFile cf = getClassFile(\"NoTargetAnnotations$Test.class\");\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n-            testDeclaration(cf, f);\n+        ClassModel cm = getClassFile(\"NoTargetAnnotations$Test.class\");\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n+            testDeclaration(fm);\n@@ -50,3 +56,3 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n-            testDeclaration(cf, m);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n+            testDeclaration(mm);\n@@ -62,1 +68,1 @@\n-    ClassFile getClassFile(String name) throws IOException, ConstantPoolException {\n+    ClassModel getClassFile(String name) throws IOException {\n@@ -64,5 +70,3 @@\n-        InputStream in = url.openStream();\n-        try {\n-            return ClassFile.read(in);\n-        } finally {\n-            in.close();\n+        assert url != null;\n+        try (InputStream in = url.openStream()) {\n+            return Classfile.of().parse(in.readAllBytes());\n@@ -72,15 +76,0 @@\n-    \/************ Helper annotations counting methods ******************\/\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    void test(ClassFile cf, Field m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    void testDeclaration(ClassFile cf, Method m) {\n-        testDecl(cf, m, Attribute.RuntimeVisibleAnnotations, true);\n-        testDecl(cf, m, Attribute.RuntimeInvisibleAnnotations, false);\n-    }\n@@ -88,47 +77,3 @@\n-    void testDeclaration(ClassFile cf, Field m) {\n-        testDecl(cf, m, Attribute.RuntimeVisibleAnnotations, true);\n-        testDecl(cf, m, Attribute.RuntimeInvisibleAnnotations, false);\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Field m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void testDecl(ClassFile cf, Method m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeAnnotations_attribute;\n-            RuntimeAnnotations_attribute tAttr = (RuntimeAnnotations_attribute)attr;\n-            this.declAnnotations += tAttr.annotations.length;\n-        }\n+    void testDeclaration(AttributedElement m) {\n+        testDecl(m, Attributes.RUNTIME_VISIBLE_ANNOTATIONS);\n+        testDecl(m, Attributes.RUNTIME_INVISIBLE_ANNOTATIONS);\n@@ -137,1 +82,1 @@\n-    \/\/ test the result of Attributes.getIndex according to expectations\n+    \/\/ test the result of AttributedElement.findAttribute according to expectations\n@@ -139,7 +84,12 @@\n-    void testDecl(ClassFile cf, Field m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeAnnotations_attribute;\n-            RuntimeAnnotations_attribute tAttr = (RuntimeAnnotations_attribute)attr;\n-            this.declAnnotations += tAttr.annotations.length;\n+    <T extends Attribute<T>> void testDecl(AttributedElement m, AttributeMapper<T> name) {\n+        Attribute<T> attr = m.findAttribute(name).orElse(null);\n+        if (attr != null) {\n+            switch (attr) {\n+                case RuntimeVisibleAnnotationsAttribute tAttr -> {\n+                    this.declAnnotations += tAttr.annotations().size();\n+                }\n+                case RuntimeInvisibleAnnotationsAttribute tAttr -> {\n+                    this.declAnnotations += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/NoTargetAnnotations.java","additions":36,"deletions":86,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -35,1 +35,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -48,2 +53,2 @@\n-        ClassFile cf = getClassFile(\"Scopes.class\");\n-        test(cf);\n+        ClassModel cm = getClassFile(\"Scopes.class\");\n+        test(cm);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/Scopes.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -33,1 +33,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -47,4 +52,4 @@\n-        ClassFile cf = getClassFile(\"StaticInitializer$Test.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"StaticInitializer$Test.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -52,2 +57,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m, true);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm, true);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/StaticInitializer.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -33,0 +38,2 @@\n+import jdk.internal.classfile.ClassModel;\n+import jdk.internal.classfile.TypeAnnotation;\n@@ -37,1 +44,0 @@\n-import com.sun.tools.classfile.*;\n@@ -75,2 +81,2 @@\n-            new ClassFile[] { getClassFile(Inner_class, Inner.class),\n-                              getClassFile(Foo_class, Foo.class) },\n+            new ClassModel[] { getClassFile(Inner_class, Inner.class),\n+                               getClassFile(Foo_class, Foo.class) },\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/SyntheticParameters.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -35,1 +40,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -46,4 +51,4 @@\n-        ClassFile cf = getClassFile(\"T8008762$Test$1$InnerAnon.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f, false);\n+        ClassModel cm = getClassFile(\"T8008762$Test$1$InnerAnon.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm, false);\n@@ -51,2 +56,2 @@\n-        for (Method m : cf.methods) {\n-            test(cf, m, false);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm, false);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/T8008762.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -34,1 +39,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -43,3 +48,3 @@\n-        ClassFile cf = getClassFile(\"T8008769$Test.class\");\n-        for (Method m : cf.methods) {\n-            test(cf, m, true);\n+        ClassModel cm = getClassFile(\"T8008769$Test.class\");\n+        for (MethodModel mm : cm.methods()) {\n+            test(mm, true);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/T8008769.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -34,1 +39,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -50,3 +55,3 @@\n-        ClassFile cf = getClassFile(\"T8010015$Test$1innerClass.class\");\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"T8010015$Test$1innerClass.class\");\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/T8010015.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -36,1 +36,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -38,1 +43,2 @@\n-import java.lang.annotation.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -40,3 +46,1 @@\n-import java.util.List;\n-import java.util.LinkedList;\n-import com.sun.tools.classfile.*;\n+import java.util.*;\n@@ -65,5 +69,5 @@\n-    String[] AnnoAttributes = {\n-        Attribute.RuntimeVisibleTypeAnnotations,\n-        Attribute.RuntimeInvisibleTypeAnnotations,\n-        Attribute.RuntimeVisibleAnnotations,\n-        Attribute.RuntimeInvisibleAnnotations\n+    AttributeMapper<?> [] AnnoAttributes = new AttributeMapper<?>[]{\n+            Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS,\n+            Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS,\n+            Attributes.RUNTIME_VISIBLE_ANNOTATIONS,\n+            Attributes.RUNTIME_INVISIBLE_ANNOTATIONS\n@@ -149,1 +153,1 @@\n-    void test(String ttype, ClassFile cf, Method m, Field f, boolean visible) {\n+    <T extends Attribute<T>> void test(AttributedElement m) {\n@@ -163,1 +167,1 @@\n-        Attribute attr = null,\n+        Attribute<T> attr = null,\n@@ -165,1 +169,1 @@\n-        Code_attribute CAttr = null;\n+        CodeAttribute CAttr = null;\n@@ -167,48 +171,14 @@\n-        for (String AnnoType : AnnoAttributes) {\n-            try {\n-                switch (ttype) {\n-                    case \"METHOD\":\n-                        index = m.attributes.getIndex(cf.constant_pool,\n-                                                      AnnoType);\n-                        memberName = m.getName(cf.constant_pool);\n-                        if (index != -1)\n-                            attr = m.attributes.get(index);\n-                        \/\/fetch index annotations from code attribute.\n-                        index2 = m.attributes.getIndex(cf.constant_pool,\n-                                                       Attribute.Code);\n-                        if (index2 != -1) {\n-                            cattr = m.attributes.get(index2);\n-                            assert cattr instanceof Code_attribute;\n-                            CAttr = (Code_attribute)cattr;\n-                            index2 = CAttr.attributes.getIndex(cf.constant_pool,\n-                                                               AnnoType);\n-                            if (index2 != -1)\n-                                cattr = CAttr.attributes.get(index2);\n-                        }\n-                        break;\n-                    case \"FIELD\":\n-                        index = f.attributes.getIndex(cf.constant_pool,\n-                                                      AnnoType);\n-                        memberName = f.getName(cf.constant_pool);\n-                        if (index != -1)\n-                            attr = f.attributes.get(index);\n-                        \/\/fetch index annotations from code attribute.\n-                        index2 = cf.attributes.getIndex(cf.constant_pool,\n-                                                        Attribute.Code);\n-                        if (index2!= -1) {\n-                            cattr = cf.attributes.get(index2);\n-                            assert cattr instanceof Code_attribute;\n-                            CAttr = (Code_attribute)cattr;\n-                            index2 = CAttr.attributes.getIndex(cf.constant_pool,\n-                                                               AnnoType);\n-                            if (index2!= -1)\n-                                cattr = CAttr.attributes.get(index2);\n-                        }\n-                        break;\n-\n-                    default:\n-                        memberName = cf.getName();\n-                        index = cf.attributes.getIndex(cf.constant_pool,\n-                                                       AnnoType);\n-                        if (index!= -1) attr = cf.attributes.get(index);\n-                        break;\n+        for (AttributeMapper<?> Anno : AnnoAttributes) {\n+            AttributeMapper<T> AnnoType = (AttributeMapper<T>) Anno;\n+            if (Objects.requireNonNull(m) instanceof ClassModel) {\n+                ClassModel cm = (ClassModel) m;\n+                memberName = cm.thisClass().name().stringValue();\n+                attr = m.findAttribute(AnnoType).orElse(null);\n+            } else {\n+                memberName = m instanceof MethodModel ?\n+                        ((MethodModel) m).methodName().stringValue() : ((FieldModel) m).fieldName().stringValue();\n+                attr = m.findAttribute(AnnoType).orElse(null);\n+                \/\/fetch index annotations from code attribute.\n+                CAttr = m.findAttribute(Attributes.CODE).orElse(null);\n+                if (CAttr != null) {\n+                    cattr = CAttr.findAttribute(AnnoType).orElse(null);\n@@ -217,33 +187,15 @@\n-            catch (ConstantPoolException cpe) { cpe.printStackTrace(); }\n-            try {\n-                testClassName=cf.getName();\n-                testcase = ttype + \": \" + testClassName + \": \" +\n-                           memberName + \", \";\n-            }\n-            catch (ConstantPoolException cpe) { cpe.printStackTrace(); }\n-            if (index != -1) {\n-                switch (AnnoType) {\n-                    case Attribute.RuntimeVisibleTypeAnnotations:\n-                        \/\/count RuntimeVisibleTypeAnnotations\n-                        RuntimeVisibleTypeAnnotations_attribute RVTAa =\n-                                (RuntimeVisibleTypeAnnotations_attribute)attr;\n-                        vtaActual += RVTAa.annotations.length;\n-                        break;\n-                    case Attribute.RuntimeVisibleAnnotations:\n-                        \/\/count RuntimeVisibleAnnotations\n-                        RuntimeVisibleAnnotations_attribute RVAa =\n-                                (RuntimeVisibleAnnotations_attribute)attr;\n-                        vaActual += RVAa.annotations.length;\n-                        break;\n-                    case Attribute.RuntimeInvisibleTypeAnnotations:\n-                        \/\/count RuntimeInvisibleTypeAnnotations\n-                        RuntimeInvisibleTypeAnnotations_attribute RITAa =\n-                                (RuntimeInvisibleTypeAnnotations_attribute)attr;\n-                        itaActual += RITAa.annotations.length;\n-                        break;\n-                    case Attribute.RuntimeInvisibleAnnotations:\n-                        \/\/count RuntimeInvisibleAnnotations\n-                        RuntimeInvisibleAnnotations_attribute RIAa =\n-                                (RuntimeInvisibleAnnotations_attribute)attr;\n-                        iaActual += RIAa.annotations.length;\n-                        break;\n+            ;\n+\/\/        testClassName=cm.getName();\n+\/\/        testcase = ttype + \": \" + testClassName + \": \" +\n+\/\/                memberName + \", \";\n+            if (attr != null) {\n+                switch (attr) {\n+                    case RuntimeVisibleTypeAnnotationsAttribute RVTAa -> \/\/count RuntimeVisibleTypeAnnotations\n+                            vtaActual += RVTAa.annotations().size();\n+                    case RuntimeVisibleAnnotationsAttribute RVAa -> \/\/count RuntimeVisibleAnnotations\n+                            vaActual += RVAa.annotations().size();\n+                    case RuntimeInvisibleTypeAnnotationsAttribute RITAa -> \/\/count RuntimeInvisibleTypeAnnotations\n+                            itaActual += RITAa.annotations().size();\n+                    case RuntimeInvisibleAnnotationsAttribute RIAa -> \/\/count RuntimeInvisibleAnnotations\n+                            iaActual += RIAa.annotations().size();\n+                    default -> throw new AssertionError();\n@@ -253,26 +205,11 @@\n-            if (index2 != -1) {\n-                switch (AnnoType) {\n-                    case Attribute.RuntimeVisibleTypeAnnotations:\n-                        \/\/count RuntimeVisibleTypeAnnotations\n-                        RuntimeVisibleTypeAnnotations_attribute RVTAa =\n-                                (RuntimeVisibleTypeAnnotations_attribute)cattr;\n-                        vtaActual += RVTAa.annotations.length;\n-                        break;\n-                    case Attribute.RuntimeVisibleAnnotations:\n-                        \/\/count RuntimeVisibleAnnotations\n-                        RuntimeVisibleAnnotations_attribute RVAa =\n-                                (RuntimeVisibleAnnotations_attribute)cattr;\n-                        vaActual += RVAa.annotations.length;\n-                        break;\n-                    case Attribute.RuntimeInvisibleTypeAnnotations:\n-                        \/\/count RuntimeInvisibleTypeAnnotations\n-                        RuntimeInvisibleTypeAnnotations_attribute RITAa =\n-                                (RuntimeInvisibleTypeAnnotations_attribute)cattr;\n-                        itaActual += RITAa.annotations.length;\n-                        break;\n-                    case Attribute.RuntimeInvisibleAnnotations:\n-                        \/\/count RuntimeInvisibleAnnotations\n-                        RuntimeInvisibleAnnotations_attribute RIAa =\n-                                (RuntimeInvisibleAnnotations_attribute)cattr;\n-                        iaActual += RIAa.annotations.length;\n-                        break;\n+            if (cattr != null) {\n+                switch (cattr) {\n+                    case RuntimeVisibleTypeAnnotationsAttribute RVTAa -> \/\/count RuntimeVisibleTypeAnnotations\n+                            vtaActual += RVTAa.annotations().size();\n+                    case RuntimeVisibleAnnotationsAttribute RVAa -> \/\/count RuntimeVisibleAnnotations\n+                            vaActual += RVAa.annotations().size();\n+                    case RuntimeInvisibleTypeAnnotationsAttribute RITAa -> \/\/count RuntimeInvisibleTypeAnnotations\n+                            itaActual += RITAa.annotations().size();\n+                    case RuntimeInvisibleAnnotationsAttribute RIAa -> \/\/count RuntimeInvisibleAnnotations\n+                            iaActual += RIAa.annotations().size();\n+                    default -> throw new AssertionError();\n@@ -346,2 +283,2 @@\n-    public void run() {\n-        ClassFile cf   = null;\n+    public <T extends Attribute<T>>void run() {\n+        ClassModel cm  = null;\n@@ -387,1 +324,1 @@\n-                    cf = ClassFile.read(new File(testloc+clazz));\n+                    cm = Classfile.of().parse(new File(testloc+clazz).toPath());\n@@ -391,2 +328,3 @@\n-                for (Method m: cf.methods) {\n-                    test(\"METHOD\", cf, m, null, true);\n+                assert cm != null;\n+                for (MethodModel m: cm.methods()) {\n+                    test(m);\n@@ -394,2 +332,2 @@\n-                for (Field f: cf.fields) {\n-                    test(\"FIELD\", cf, null, f, true);\n+                for (FieldModel f: cm.fields()) {\n+                    test(f);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/TestAnonInnerClasses.java","additions":65,"deletions":127,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -30,0 +35,2 @@\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -33,1 +40,0 @@\n-import com.sun.tools.classfile.*;\n@@ -36,0 +42,1 @@\n+import java.util.Objects;\n@@ -76,2 +83,1 @@\n-    void test(String clazz, String ttype, ClassFile cf, Method m, Field f,\n-              String name, boolean codeattr) {\n+    <T extends Attribute<T>> void test(String clazz, AttributedElement m, AttributeMapper<T> name, Boolean codeattr) {\n@@ -80,24 +86,15 @@\n-        int index = 0;\n-        String memberName = null;\n-        Attribute attr = null;\n-        Code_attribute cAttr = null;\n-        String testcase = \"undefined\";\n-        try {\n-        switch(ttype) {\n-            case \"METHOD\":\n-                index = m.attributes.getIndex(cf.constant_pool, name);\n-                memberName = m.getName(cf.constant_pool);\n-                if(index != -1)\n-                    attr = m.attributes.get(index);\n-                break;\n-            case \"MCODE\":\n-                memberName = m.getName(cf.constant_pool);\n-                \/\/fetch index of and code attribute and annotations from code attribute.\n-                index = m.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-                if(index!= -1) {\n-                    attr = m.attributes.get(index);\n-                    assert attr instanceof Code_attribute;\n-                    cAttr = (Code_attribute)attr;\n-                    index = cAttr.attributes.getIndex(cf.constant_pool, name);\n-                    if(index!= -1)\n-                        attr = cAttr.attributes.get(index);\n+        String memberName;\n+        Attribute<T> attr = null;\n+        CodeAttribute cAttr;\n+        String testcase;\n+        switch (m) {\n+            case MethodModel mm -> {\n+                memberName = mm.methodName().stringValue();\n+                if(codeattr) {\n+                    \/\/fetch index of and code attribute and annotations from code attribute.\n+                    cAttr = mm.findAttribute(Attributes.CODE).orElse(null);\n+                    if(cAttr != null) {\n+                        attr = cAttr.findAttribute(name).orElse(null);\n+                    }\n+                } else {\n+                    attr = mm.findAttribute(name).orElse(null);\n@@ -105,18 +102,10 @@\n-                break;\n-            case \"FIELD\":\n-                index = f.attributes.getIndex(cf.constant_pool, name);\n-                memberName = f.getName(cf.constant_pool);\n-                if(index != -1)\n-                    attr = f.attributes.get(index);\n-                break;\n-            case \"CODE\":\n-                memberName = f.getName(cf.constant_pool);\n-                \/\/fetch index of and code attribute and annotations from code attribute.\n-                index = cf.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-                if(index!= -1) {\n-                    attr = cf.attributes.get(index);\n-                    assert attr instanceof Code_attribute;\n-                    cAttr = (Code_attribute)attr;\n-                    index = cAttr.attributes.getIndex(cf.constant_pool, name);\n-                    if(index!= -1)\n-                        attr = cAttr.attributes.get(index);\n+            }\n+            case FieldModel fm -> {\n+                memberName = fm.fieldName().stringValue();\n+                if(codeattr) {\n+                    cAttr = fm.findAttribute(Attributes.CODE).orElse(null);\n+                    if(cAttr != null) {\n+                        attr = cAttr.findAttribute(name).orElse(null);\n+                    }\n+                } else {\n+                    attr = fm.findAttribute(name).orElse(null);\n@@ -124,3 +113,2 @@\n-                break;\n-            default:\n-                break;\n+            }\n+            default -> throw new AssertionError();\n@@ -128,3 +116,2 @@\n-        } catch(ConstantPoolException cpe) { cpe.printStackTrace(); }\n-        testcase = clazz+\" \"+ttype + \": \" + memberName + \", \" + name;\n-        if(index != -1) {\n+        testcase = clazz+\" , Local: \"+ codeattr + \": \" + memberName + \", \" + name;\n+        if(attr != null) {\n@@ -132,4 +119,9 @@\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr =\n-                    (RuntimeTypeAnnotations_attribute)attr;\n-                actual += tAttr.annotations.length;\n+            switch (attr) {\n+                case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                    actual += tAttr.annotations().size();\n+                }\n+                case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                    actual += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n@@ -137,0 +129,1 @@\n+        assert memberName != null;\n@@ -207,2 +200,2 @@\n-        ClassFile cf = null;\n-        InputStream in = null;\n+        ClassModel cm = null;\n+        InputStream in;\n@@ -213,2 +206,2 @@\n-                in = getClass().getResource(testclazz).openStream();\n-                cf = ClassFile.read(in);\n+                in = Objects.requireNonNull(getClass().getResource(testclazz)).openStream();\n+                cm = Classfile.of().parse(in.readAllBytes());\n@@ -218,0 +211,1 @@\n+            assert cm != null;\n@@ -219,4 +213,4 @@\n-                for (Field f: cf.fields)\n-                    test(clazz, \"FIELD\", cf, null, f, Attribute.RuntimeVisibleTypeAnnotations, false);\n-                for (Method m: cf.methods)\n-                    test(clazz, \"METHOD\", cf, m, null, Attribute.RuntimeVisibleTypeAnnotations, false);\n+                for (FieldModel fm: cm.fields())\n+                    test(clazz, fm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS, false);\n+                for (MethodModel mm: cm.methods())\n+                    test(clazz, mm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS, false);\n@@ -224,4 +218,4 @@\n-                for (Field f: cf.fields)\n-                    test(clazz, \"CODE\", cf, null, f, Attribute.RuntimeVisibleTypeAnnotations, true);\n-                for (Method m: cf.methods)\n-                    test(clazz, \"MCODE\", cf, m, null, Attribute.RuntimeVisibleTypeAnnotations, true);\n+                for (FieldModel fm: cm.fields())\n+                    test(clazz, fm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS, true);\n+                for (MethodModel mm: cm.methods())\n+                    test(clazz, mm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS, true);\n@@ -353,1 +347,1 @@\n-        Object o = new Integer(1);\n+        Object o = 1;\n@@ -361,1 +355,1 @@\n-        Object o = new Integer(1);\n+        Object o = 1;\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/TestNewCastArray.java","additions":64,"deletions":70,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -34,6 +39,3 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.Method;\n-import com.sun.tools.classfile.RuntimeVisibleTypeAnnotations_attribute;\n-import com.sun.tools.classfile.TypeAnnotation;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.CodeAttribute;\n+import jdk.internal.classfile.attribute.RuntimeVisibleTypeAnnotationsAttribute;\n@@ -43,0 +45,1 @@\n+import java.util.List;\n@@ -51,1 +54,1 @@\n-        ClassFile cf = getClassFile(\"TypeAnnotationPropagationTest$Test.class\");\n+        ClassModel cm = getClassFile(\"TypeAnnotationPropagationTest$Test.class\");\n@@ -53,4 +56,4 @@\n-        Method f = null;\n-        for (Method m : cf.methods) {\n-            if (m.getName(cf.constant_pool).contains(\"f\")) {\n-                f = m;\n+        MethodModel f = null;\n+        for (MethodModel mm : cm.methods()) {\n+            if (mm.methodName().stringValue().contains(\"f\")) {\n+                f = mm;\n@@ -61,5 +64,4 @@\n-        int idx = f.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-        Code_attribute cattr = (Code_attribute) f.attributes.get(idx);\n-        idx = cattr.attributes.getIndex(cf.constant_pool, Attribute.RuntimeVisibleTypeAnnotations);\n-        RuntimeVisibleTypeAnnotations_attribute attr =\n-                (RuntimeVisibleTypeAnnotations_attribute) cattr.attributes.get(idx);\n+        assert f != null;\n+        CodeAttribute cattr = f.findAttribute(Attributes.CODE).orElse(null);\n+        assert cattr != null;\n+        RuntimeVisibleTypeAnnotationsAttribute attr = cattr.findAttribute(Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS).orElse(null);\n@@ -67,4 +69,15 @@\n-        TypeAnnotation anno = attr.annotations[0];\n-        assertEquals(anno.position.lvarOffset, new int[] {3}, \"start_pc\");\n-        assertEquals(anno.position.lvarLength, new int[] {8}, \"length\");\n-        assertEquals(anno.position.lvarIndex, new int[] {1}, \"index\");\n+        assert attr != null;\n+        List<TypeAnnotation.LocalVarTargetInfo> annosPosition = ((TypeAnnotation.LocalVarTarget) attr.annotations().get(0).targetInfo()).table();\n+        int[] lvarOffset = annosPosition.stream()\n+                .map(e -> cattr.labelToBci(e.startLabel()))\n+                .mapToInt(t -> t).toArray();\n+        int[] lvarLength = annosPosition.stream()\n+                .map(e -> cattr.labelToBci(e.endLabel()) - cattr.labelToBci(e.startLabel()))\n+                .mapToInt(t -> t).toArray();\n+        int[] lvarIndex = annosPosition.stream()\n+                .map(TypeAnnotation.LocalVarTargetInfo::index)\n+                .mapToInt(t -> t).toArray();\n+\n+        assertEquals(lvarOffset, new int[] {3}, \"start_pc\");\n+        assertEquals(lvarLength, new int[] {8}, \"length\");\n+        assertEquals(lvarIndex, new int[] {1}, \"index\");\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/TypeAnnotationPropagationTest.java","additions":34,"deletions":21,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -36,1 +36,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -47,5 +51,4 @@\n-\n-        ClassFile cf = getClassFile(\"TypeCasts$Test.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"TypeCasts$Test.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -53,2 +56,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m, true);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm, true);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/TypeCasts.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n@@ -35,1 +35,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -46,4 +50,4 @@\n-        ClassFile cf = getClassFile(\"Wildcards$Test.class\");\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = getClassFile(\"Wildcards$Test.class\");\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -51,2 +55,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m,false);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm,false);\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/Wildcards.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -37,0 +42,2 @@\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -42,0 +49,1 @@\n+import java.util.List;\n@@ -48,1 +56,0 @@\n-import com.sun.tools.classfile.*;\n@@ -71,1 +78,1 @@\n-            ClassFile classFile = readClassFile(fileManager.getClasses().get(className));\n+            ClassModel classFile = readClassFile(fileManager.getClasses().get(className));\n@@ -73,2 +80,2 @@\n-            for (Method method : classFile.methods) {\n-                String methodName = method.getName(classFile.constant_pool);\n+            for (MethodModel method : classFile.methods()) {\n+                String methodName = method.methodName().stringValue();\n@@ -76,3 +83,2 @@\n-                AnnotationDefault_attribute attr =\n-                        (AnnotationDefault_attribute) method.attributes\n-                                .get(Attribute.AnnotationDefault);\n+                AnnotationDefaultAttribute attr =\n+                        method.findAttribute(Attributes.ANNOTATION_DEFAULT).orElse(null);\n@@ -86,2 +92,2 @@\n-                checkEquals(countNumberOfAttributes(method.attributes.attrs),\n-                        1l,\n+                checkEquals(countNumberOfAttributes(method.attributes()),\n+                        1L,\n@@ -89,2 +95,1 @@\n-                checkEquals(classFile.constant_pool\n-                        .getUTF8Value(attr.attribute_name_index),\n+                checkEquals(attr.attributeName(),\n@@ -94,1 +99,1 @@\n-                checkEquals((char) attr.default_value.tag, expectedValue.tag(),\n+                checkEquals(attr.defaultValue().tag(), expectedValue.tag(),\n@@ -96,2 +101,2 @@\n-                verifier.testElementValue(attr.default_value.tag,\n-                        this, classFile, attr.default_value,\n+                verifier.testElementValue((int)attr.defaultValue().tag(),\n+                        this, classFile, attr.defaultValue(),\n@@ -99,1 +104,1 @@\n-                verifier.testLength(attr.default_value.tag, this, attr);\n+                verifier.testLength((int)attr.defaultValue().tag(), this, attr);\n@@ -127,3 +132,3 @@\n-    private long countNumberOfAttributes(Attribute[] attrs) {\n-        return Stream.of(attrs)\n-                .filter(x -> x instanceof AnnotationDefault_attribute)\n+    private long countNumberOfAttributes(List<Attribute<?>> attrs) {\n+        return attrs.stream()\n+                .filter(x -> x instanceof AnnotationDefaultAttribute)\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/AnnotationDefault\/AnnotationDefaultTest.java","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -24,4 +24,4 @@\n-import com.sun.tools.classfile.Annotation;\n-import com.sun.tools.classfile.AnnotationDefault_attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPool;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.constantpool.ConstantPoolBuilder;\n+import jdk.internal.classfile.impl.*;\n@@ -54,1 +54,1 @@\n-    public void testLength(int tag, TestResult testResult, AnnotationDefault_attribute attr) {\n+    public void testLength(int tag, TestResult testResult, AnnotationDefaultAttribute attr) {\n@@ -58,3 +58,2 @@\n-    public void testElementValue(int tag, TestResult testResult, ClassFile classFile,\n-                                 Annotation.element_value element_value, String[] values)\n-            throws ConstantPool.UnexpectedEntry, ConstantPool.InvalidIndex {\n+    public void testElementValue(int tag, TestResult testResult, ClassModel classFile,\n+                                 AnnotationValue element_value, String[] values) {\n@@ -73,2 +72,4 @@\n-        public void testLength(TestResult testCase, AnnotationDefault_attribute attr) {\n-            testCase.checkEquals(attr.attribute_length, 1 + attr.default_value.length(),\n+        public void testLength(TestResult testCase, AnnotationDefaultAttribute attr) {\n+            BufWriter buf = new BufWriterImpl(ConstantPoolBuilder.of(), (ClassfileImpl) Classfile.of());\n+            attr.defaultValue().writeTo(buf);\n+            testCase.checkEquals(((BoundAttribute<?>)attr).payloadLen(), buf.size(),\n@@ -88,4 +89,3 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values)\n-                throws ConstantPool.InvalidIndex, ConstantPool.UnexpectedEntry;\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values);\n@@ -99,9 +99,20 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values) throws ConstantPool.InvalidIndex {\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Integer_info info =\n-                    (ConstantPool.CONSTANT_Integer_info)\n-                            classFile.constant_pool.get(ev.const_value_index);\n-            testCase.checkEquals(info.value, Integer.parseInt(values[0]), \"const_value_index\");\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            switch (element_value) {\n+                case AnnotationValue.OfByte ev -> {\n+                    testCase.checkEquals((int)ev.byteValue(), Integer.parseInt(values[0]), \"const_value_index\");\n+                }\n+                case AnnotationValue.OfCharacter ev -> {\n+                    testCase.checkEquals((int)ev.charValue(), Integer.parseInt(values[0]), \"const_value_index\");\n+                }\n+                case AnnotationValue.OfShort ev -> {\n+                    testCase.checkEquals((int)ev.shortValue(), Integer.parseInt(values[0]), \"const_value_index\");\n+                }\n+                case AnnotationValue.OfBoolean ev -> {\n+                    testCase.checkEquals(ev.booleanValue()? 1: 0, Integer.parseInt(values[0]), \"const_value_index\");\n+                }\n+                default -> {\n+                    testCase.checkEquals(((AnnotationValue.OfInteger) element_value).intValue(), Integer.parseInt(values[0]), \"const_value_index\");\n+                }\n+            }\n@@ -115,9 +126,6 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values) throws ConstantPool.InvalidIndex {\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Long_info info =\n-                    (ConstantPool.CONSTANT_Long_info)\n-                            classFile.constant_pool.get(ev.const_value_index);\n-            testCase.checkEquals(info.value, Long.parseLong(values[0]), \"const_value_index\");\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfLong ev =\n+                    (AnnotationValue.OfLong) element_value;\n+            testCase.checkEquals(ev.longValue(), Long.parseLong(values[0]), \"const_value_index\");\n@@ -131,9 +139,6 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values) throws ConstantPool.InvalidIndex {\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Float_info info =\n-                    (ConstantPool.CONSTANT_Float_info)\n-                            classFile.constant_pool.get(ev.const_value_index);\n-            testCase.checkEquals(info.value, Float.parseFloat(values[0]), \"const_value_index\");\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfFloat ev =\n+                    (AnnotationValue.OfFloat) element_value;\n+            testCase.checkEquals(ev.floatValue(), Float.parseFloat(values[0]), \"const_value_index\");\n@@ -147,9 +152,6 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values) throws ConstantPool.InvalidIndex {\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Double_info info =\n-                    (ConstantPool.CONSTANT_Double_info)\n-                            classFile.constant_pool.get(ev.const_value_index);\n-            testCase.checkEquals(info.value, Double.parseDouble(values[0]), \"const_value_index\");\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfDouble ev =\n+                    (AnnotationValue.OfDouble) element_value;\n+            testCase.checkEquals(ev.doubleValue(), Double.parseDouble(values[0]), \"const_value_index\");\n@@ -163,9 +165,6 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values) throws ConstantPool.InvalidIndex {\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Utf8_info info =\n-                    (ConstantPool.CONSTANT_Utf8_info)\n-                            classFile.constant_pool.get(ev.const_value_index);\n-            testCase.checkEquals(info.value, values[0], \"const_value_index\");\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfString ev =\n+                    (AnnotationValue.OfString) element_value;\n+            testCase.checkEquals(ev.stringValue(), values[0], \"const_value_index\");\n@@ -185,6 +184,5 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values)\n-                throws ConstantPool.InvalidIndex, ConstantPool.UnexpectedEntry {\n-            Annotation.Enum_element_value ev = (Annotation.Enum_element_value) element_value;\n-            testCase.checkEquals(classFile.constant_pool.getUTF8Info(ev.type_name_index).value,\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfEnum ev = (AnnotationValue.OfEnum) element_value;\n+            testCase.checkEquals(ev.classSymbol().descriptorString(),\n@@ -192,1 +190,1 @@\n-            testCase.checkEquals(classFile.constant_pool.getUTF8Info(ev.const_name_index).value,\n+            testCase.checkEquals(ev.constantName().stringValue(),\n@@ -201,5 +199,4 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values)\n-                throws ConstantPool.InvalidIndex, ConstantPool.UnexpectedEntry {\n-            Annotation.Class_element_value ev = (Annotation.Class_element_value) element_value;\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfClass ev = (AnnotationValue.OfClass) element_value;\n@@ -207,1 +204,1 @@\n-                    classFile.constant_pool.getUTF8Info(ev.class_info_index).value,\n+                    ev.classSymbol().descriptorString(),\n@@ -214,1 +211,1 @@\n-        public void testLength(TestResult testCase, AnnotationDefault_attribute attr) {\n+        public void testLength(TestResult testCase, AnnotationDefaultAttribute attr) {\n@@ -228,6 +225,5 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values)\n-                throws ConstantPool.InvalidIndex, ConstantPool.UnexpectedEntry {\n-            Annotation ev = ((Annotation.Annotation_element_value) element_value)\n-                    .annotation_value;\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            Annotation ev = ((AnnotationValue.OfAnnotation) element_value)\n+                    .annotation();\n@@ -235,1 +231,1 @@\n-                    classFile.constant_pool.getUTF8Info(ev.type_index).value,\n+                    ev.classSymbol().descriptorString(),\n@@ -238,2 +234,2 @@\n-            for (int i = 0; i < ev.num_element_value_pairs; ++i) {\n-                Annotation.element_value_pair pair = ev.element_value_pairs[i];\n+            for (int i = 0; i < ev.elements().size(); ++i) {\n+                AnnotationElement pair = ev.elements().get(i);\n@@ -241,1 +237,1 @@\n-                        classFile.constant_pool.getUTF8Info(pair.element_name_index).value,\n+                        pair.name().stringValue(),\n@@ -244,1 +240,1 @@\n-                TestElementValue testElementValue = verifiers.get(pair.value.tag);\n+                TestElementValue testElementValue = verifiers.get((int)pair.value().tag());\n@@ -248,1 +244,1 @@\n-                        pair.value,\n+                        pair.value(),\n@@ -255,10 +251,1 @@\n-        @Override\n-        public void testLength(TestResult testCase, AnnotationDefault_attribute attr) {\n-            Annotation.Array_element_value ev =\n-                    (Annotation.Array_element_value) attr.default_value;\n-            int sizeOfTag = ev.values[0].tag == 'e' ? 0 : 1;\n-            \/\/ tag (1 byte) + array header (2 byte) + length of entries\n-            testCase.checkEquals(attr.attribute_length, 1 + 2 +\n-                    (sizeOfTag + ev.length() \/ ev.num_values) * ev.num_values, \"attribute_length\");\n-        }\n-\n+        \/\/ testLength method is the same as in TestElementValue class\n@@ -268,6 +255,5 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value,\n-                String[] values)\n-                throws ConstantPool.InvalidIndex, ConstantPool.UnexpectedEntry {\n-            Annotation.Array_element_value ev =\n-                    (Annotation.Array_element_value) element_value;\n+                ClassModel classFile,\n+                AnnotationValue element_value,\n+                String[] values) {\n+            AnnotationValue.OfArray ev =\n+                    (AnnotationValue.OfArray) element_value;\n@@ -275,2 +261,2 @@\n-            for (int i = 0; i < ev.num_values; ++i) {\n-                TestElementValue testElementValue = verifiers.get(ev.values[i].tag);\n+            for (int i = 0; i < ev.values().size(); ++i) {\n+                TestElementValue testElementValue = verifiers.get((int)ev.values().get(i).tag());\n@@ -281,1 +267,1 @@\n-                        ev.values[i],\n+                        ev.values().get(i),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/AnnotationDefault\/AnnotationDefaultVerifier.java","additions":90,"deletions":104,"binary":false,"changes":194,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+            java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -36,3 +41,3 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.EnclosingMethod_attribute;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.EnclosingMethodAttribute;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -143,1 +148,1 @@\n-                ClassFile classFile = readClassFile(clazz);\n+                ClassModel classFile = readClassFile(clazz);\n@@ -145,2 +150,2 @@\n-                        0l, \"number of the EnclosingMethod attribute in the class is zero : \"\n-                                + classFile.getName());\n+                        0L, \"number of the EnclosingMethod attribute in the class is zero : \"\n+                                + classFile.thisClass().name());\n@@ -160,1 +165,1 @@\n-                ClassFile classFile = readClassFile(clazz);\n+                ClassModel classFile = readClassFile(clazz);\n@@ -165,2 +170,1 @@\n-                EnclosingMethod_attribute attr = (EnclosingMethod_attribute)\n-                        classFile.getAttribute(Attribute.EnclosingMethod);\n+                EnclosingMethodAttribute attr = classFile.findAttribute(Attributes.ENCLOSING_METHOD).orElse(null);\n@@ -172,1 +176,1 @@\n-                checkEquals(classFile.constant_pool.getUTF8Value(attr.attribute_name_index),\n+                checkEquals(attr.attributeName(),\n@@ -175,1 +179,1 @@\n-                checkEquals(attr.attribute_length, 4,\n+                checkEquals(((BoundAttribute<?>)attr).payloadLen(), 4,\n@@ -178,1 +182,1 @@\n-                checkEquals(classFile.constant_pool.getClassInfo(attr.class_index).getName(),\n+                checkEquals(attr.enclosingClass().name().stringValue(),\n@@ -186,1 +190,1 @@\n-                    checkEquals(attr.method_index, 0, String.format(\n+                    checkEquals(attr.enclosingMethod().isPresent()? attr.enclosingMethod().get().index(): 0, 0, String.format(\n@@ -189,1 +193,1 @@\n-                    String methodName = classFile.constant_pool.getNameAndTypeInfo(attr.method_index).getName();\n+                    String methodName = attr.enclosingMethodName().get().stringValue() + attr.enclosingMethodType().get().stringValue();\n@@ -202,3 +206,3 @@\n-    private long countEnclosingMethodAttributes(ClassFile classFile) {\n-        return Stream.of(classFile.attributes.attrs)\n-                .filter(x -> x instanceof EnclosingMethod_attribute)\n+    private long countEnclosingMethodAttributes(ClassModel classFile) {\n+        return classFile.attributes().stream()\n+                .filter(x -> x instanceof EnclosingMethodAttribute)\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/EnclosingMethod\/EnclosingMethodTest.java","additions":22,"deletions":18,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/LineNumberTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,1 +24,3 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -35,2 +37,0 @@\n-import static com.sun.tools.classfile.Attribute.Code;\n-import static com.sun.tools.classfile.Attribute.LineNumberTable;\n@@ -70,1 +70,1 @@\n-                    ClassFile classFile;\n+                    ClassModel classFile;\n@@ -72,1 +72,1 @@\n-                        classFile = ClassFile.read(input);\n+                        classFile = Classfile.of().parse(input.readAllBytes());\n@@ -74,2 +74,2 @@\n-                    for (Method m : classFile.methods) {\n-                        Code_attribute code_attribute = (Code_attribute) m.attributes.get(Code);\n+                    for (MethodModel m : classFile.methods()) {\n+                        CodeAttribute code_attribute = m.findAttribute(Attributes.CODE).orElse(null);\n@@ -77,0 +77,1 @@\n+                        assert code_attribute != null;\n@@ -78,1 +79,1 @@\n-                                countAttributes(LineNumberTable, code_attribute.attributes.attrs, classFile.constant_pool),\n+                                countAttributes(Attributes.LINE_NUMBER_TABLE, code_attribute),\n@@ -82,3 +83,3 @@\n-                        LineNumberTable_attribute tableAttribute =\n-                                (LineNumberTable_attribute) code_attribute.attributes.get(LineNumberTable);\n-                        checkAttribute(testCase, tableAttribute, code_attribute.code_length);\n+                        LineNumberTableAttribute tableAttribute = code_attribute.findAttribute(Attributes.LINE_NUMBER_TABLE).orElse(null);\n+                        assert tableAttribute != null;\n+                        checkAttribute(testCase, tableAttribute, code_attribute.codeLength());\n@@ -86,2 +87,2 @@\n-                                Stream.of(tableAttribute.line_number_table)\n-                                        .map(e -> e.line_number)\n+                                tableAttribute.lineNumbers().stream()\n+                                        .map(LineNumberInfo::lineNumber)\n@@ -90,1 +91,1 @@\n-                        TestCase.MethodData expected = testCase.findData(m.getName(classFile.constant_pool));\n+                        TestCase.MethodData expected = testCase.findData(m.methodName().stringValue());\n@@ -137,1 +138,1 @@\n-    private int countAttributes(String name, Attribute[] attrs, ConstantPool constant_pool) throws ConstantPoolException {\n+    private <T extends Attribute<T>> int countAttributes(AttributeMapper<T> attr, AttributedElement attributedElement) {\n@@ -139,2 +140,2 @@\n-        for (Attribute attribute : attrs) {\n-            if (name.equals(attribute.getName(constant_pool))) {\n+        for (Attribute<?> attribute : attributedElement.attributes()) {\n+            if (attribute.attributeName().equals(attr.name())) {\n@@ -147,3 +148,4 @@\n-    private void checkAttribute(TestCase testCase, LineNumberTable_attribute tableAttribute, int code_length) {\n-        assertEquals(tableAttribute.line_number_table_length, tableAttribute.line_number_table.length,\n-                \"Incorrect line number table length.\");\n+    private void checkAttribute(TestCase testCase, LineNumberTableAttribute tableAttribute, int code_length) {\n+        \/\/ This test is unnecessary\n+\/\/        assertEquals(tableAttribute.line_number_table_length, tableAttribute.line_number_table.length,\n+\/\/                \"Incorrect line number table length.\");\n@@ -151,1 +153,1 @@\n-        assertEquals(tableAttribute.attribute_length, 2 + 4 * tableAttribute.line_number_table_length,\n+        assertEquals(((BoundAttribute<?>)tableAttribute).payloadLen(), 2 + 4 * tableAttribute.lineNumbers().size(),\n@@ -155,2 +157,2 @@\n-                Stream.of(tableAttribute.line_number_table)\n-                        .filter(e -> e.start_pc >= code_length)\n+                tableAttribute.lineNumbers().stream()\n+                        .filter(e -> e.startPc() >= code_length)\n@@ -165,3 +167,3 @@\n-    private void testNonEmptyLine(String[] source, LineNumberTable_attribute attribute) {\n-        for (LineNumberTable_attribute.Entry e : attribute.line_number_table) {\n-            String line = source[e.line_number - 1].trim();\n+    private void testNonEmptyLine(String[] source, LineNumberTableAttribute attribute) {\n+        for (LineNumberInfo e : attribute.lineNumbers()) {\n+            String line = source[e.lineNumber() - 1].trim();\n@@ -169,1 +171,1 @@\n-                    format(\"Expect that line #%d is not empty.%n\", e.line_number));\n+                    format(\"Expect that line #%d is not empty.%n\", e.lineNumber()));\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/LineNumberTestBase.java","additions":29,"deletions":27,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/MultipleRecordPatterns.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/RuleSwitchBreaks.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/StringSwitchBreaks.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -5,1 +5,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -17,1 +22,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -20,2 +26,2 @@\n-    public static void main(String[] args) throws IOException, ConstantPoolException {\n-        ClassFile someTestIn = ClassFile.read(T8050993.class.getResourceAsStream(\"T8050993.class\"));\n+    public static void main(String[] args) throws IOException {\n+        ClassModel someTestIn = Classfile.of().parse(T8050993.class.getResourceAsStream(\"T8050993.class\").readAllBytes());\n@@ -23,9 +29,11 @@\n-        for (Method m : someTestIn.methods) {\n-            if (\"method\".equals(m.getName(someTestIn.constant_pool))) {\n-                Code_attribute code_attribute = (Code_attribute) m.attributes.get(Attribute.Code);\n-                for (Attribute at : code_attribute.attributes) {\n-                    if (Attribute.LineNumberTable.equals(at.getName(someTestIn.constant_pool))) {\n-                        LineNumberTable_attribute att = (LineNumberTable_attribute) at;\n-                        Set<Integer> actualLinesNumbers = Arrays.stream(att.line_number_table)\n-                                                                .map(e -> e.line_number)\n-                                                                .collect(Collectors.toSet());\n+        for (MethodModel m : someTestIn.methods()) {\n+            if (m.methodName().equalsString(\"method\")) {\n+                CodeAttribute code_attribute = m.findAttribute(Attributes.CODE).orElse(null);\n+                assert code_attribute != null;\n+                for (Attribute<?> at : code_attribute.attributes()) {\n+                    if (Attributes.LINE_NUMBER_TABLE.equals(at)) {\n+                        assert at instanceof LineNumberTableAttribute;\n+                        LineNumberTableAttribute att = (LineNumberTableAttribute) at;\n+                        Set<Integer> actualLinesNumbers = Arrays.stream(att.lineNumbers().toArray(new LineNumberInfo[0]))\n+                                .map(LineNumberInfo::lineNumber)\n+                                .collect(Collectors.toSet());\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/T8050993.java","additions":21,"deletions":13,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -39,2 +44,2 @@\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.LocalVariableTable_attribute;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -77,5 +82,5 @@\n-    protected List<VariableTable> getVariableTables(Code_attribute codeAttribute) {\n-        return Stream.of(codeAttribute.attributes.attrs)\n-                .filter(at -> at instanceof LocalVariableTable_attribute)\n-                .map(at -> (LocalVariableTable_attribute) at)\n-                .map((t) -> new LocalVariableTable(t)).collect(toList());\n+    protected List<VariableTable> getVariableTables(CodeAttribute codeAttribute) {\n+        return codeAttribute.attributes().stream()\n+                .filter(at -> at instanceof LocalVariableTableAttribute)\n+                .map(at -> (LocalVariableTableAttribute) at)\n+                .map(LocalVariableTable::new).collect(toList());\n@@ -188,1 +193,1 @@\n-        final LocalVariableTable_attribute att;\n+        final LocalVariableTableAttribute att;\n@@ -190,1 +195,1 @@\n-        public LocalVariableTable(LocalVariableTable_attribute att) {\n+        public LocalVariableTable(LocalVariableTableAttribute att) {\n@@ -196,1 +201,1 @@\n-            return att.local_variable_table_length;\n+            return att.localVariables().size();\n@@ -201,1 +206,1 @@\n-            return Stream.of(att.local_variable_table).map(LocalVariableTableEntry::new).collect(toList());\n+            return att.localVariables().stream().map(LocalVariableTableEntry::new).collect(toList());\n@@ -206,1 +211,1 @@\n-            return att.attribute_length;\n+            return ((BoundAttribute<?>) att).payloadLen();\n@@ -211,1 +216,1 @@\n-            final LocalVariableTable_attribute.Entry entry;\n+            final LocalVariableInfo entry;\n@@ -213,1 +218,1 @@\n-            private LocalVariableTableEntry(LocalVariableTable_attribute.Entry entry) {\n+            private LocalVariableTableEntry(LocalVariableInfo entry) {\n@@ -219,1 +224,1 @@\n-                return entry.index;\n+                return entry.slot();\n@@ -224,1 +229,1 @@\n-                return entry.start_pc;\n+                return entry.startPc();\n@@ -229,1 +234,1 @@\n-                return entry.length;\n+                return entry.length();\n@@ -234,1 +239,1 @@\n-                return getString(entry.name_index);\n+                return entry.name().stringValue();\n@@ -239,1 +244,1 @@\n-                return getString(entry.descriptor_index);\n+                return entry.type().stringValue();\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LocalVariableTable\/LocalVariableTableTest.java","additions":25,"deletions":20,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -24,1 +24,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -53,1 +54,1 @@\n-    private final ClassFile classFile;\n+    private final ClassModel classFile;\n@@ -62,2 +63,2 @@\n-            this.classFile = ClassFile.read(getClassFile(clazz));\n-        } catch (IOException | ConstantPoolException e) {\n+            this.classFile = Classfile.of().parse(getClassFile(clazz).toPath());\n+        } catch (IOException e) {\n@@ -68,1 +69,1 @@\n-    protected abstract List<VariableTable> getVariableTables(Code_attribute codeAttribute);\n+    protected abstract List<VariableTable> getVariableTables(CodeAttribute codeAttribute);\n@@ -77,1 +78,1 @@\n-                .collect(toList());\n+                .toList();\n@@ -102,2 +103,2 @@\n-        for (Method m : classFile.methods) {\n-            String mName = getString(m.name_index);\n+        for (MethodModel m : classFile.methods()) {\n+            String mName = m.methodName().stringValue();\n@@ -106,2 +107,2 @@\n-                Code_attribute code_attribute = (Code_attribute) m.attributes.get(Attribute.Code);\n-\n+                CodeAttribute code_attribute = m.findAttribute(Attributes.CODE).orElse(null);\n+                assert code_attribute != null;\n@@ -118,1 +119,1 @@\n-                checkDoubleAndLongIndexes(entries, sig2scope, code_attribute.max_locals);\n+                checkDoubleAndLongIndexes(entries, sig2scope, code_attribute.maxLocals());\n@@ -134,1 +135,1 @@\n-    private void generalEntriesCheck(List<VariableTable.Entry> entries, Code_attribute code_attribute) {\n+    private void generalEntriesCheck(List<VariableTable.Entry> entries, CodeAttribute code_attribute) {\n@@ -136,2 +137,2 @@\n-            assertTrue(e.index() >= 0 && e.index() < code_attribute.max_locals,\n-                    \"Index \" + e.index() + \" out of variable array. Size of array is \" + code_attribute.max_locals);\n+            assertTrue(e.index() >= 0 && e.index() < code_attribute.maxLocals(),\n+                    \"Index \" + e.index() + \" out of variable array. Size of array is \" + code_attribute.maxLocals());\n@@ -140,1 +141,1 @@\n-            assertTrue(e.startPC() + e.length() <= code_attribute.code_length,\n+            assertTrue(e.startPC() + e.length() <= code_attribute.codeLength(),\n@@ -144,1 +145,1 @@\n-                            , e, code_attribute.code_length));\n+                            , e, code_attribute.codeLength()));\n@@ -208,8 +209,9 @@\n-    protected String getString(int i) {\n-        try {\n-            return classFile.constant_pool.getUTF8Info(i).value;\n-        } catch (ConstantPool.InvalidIndex | ConstantPool.UnexpectedEntry ex) {\n-            ex.printStackTrace();\n-            throw new AssertionFailedException(\"Issue while reading constant pool\");\n-        }\n-    }\n+    \/\/ Don't need the getString method now\n+\/\/    protected String getString(int i) {\n+\/\/        try {\n+\/\/            return classFile.constant_pool.getUTF8Info(i).value;\n+\/\/        } catch (ConstantPool.InvalidIndex | ConstantPool.UnexpectedEntry ex) {\n+\/\/            ex.printStackTrace();\n+\/\/            throw new AssertionFailedException(\"Issue while reading constant pool\");\n+\/\/        }\n+\/\/    }\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LocalVariableTable\/LocalVariableTestBase.java","additions":26,"deletions":24,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -38,2 +43,2 @@\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.LocalVariableTypeTable_attribute;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -61,4 +66,4 @@\n-    protected List<VariableTable> getVariableTables(Code_attribute codeAttribute) {\n-        return Stream.of(codeAttribute.attributes.attrs)\n-                .filter(at -> at instanceof LocalVariableTypeTable_attribute)\n-                .map(at -> (LocalVariableTypeTable_attribute) at)\n+    protected List<VariableTable> getVariableTables(CodeAttribute codeAttribute) {\n+        return codeAttribute.attributes().stream()\n+                .filter(at -> at instanceof LocalVariableTypeTableAttribute)\n+                .map(at -> (LocalVariableTypeTableAttribute) at)\n@@ -138,1 +143,1 @@\n-        final LocalVariableTypeTable_attribute att;\n+        final LocalVariableTypeTableAttribute att;\n@@ -141,1 +146,1 @@\n-        public LocalVariableTypeTable(LocalVariableTypeTable_attribute att) {\n+        public LocalVariableTypeTable(LocalVariableTypeTableAttribute att) {\n@@ -147,1 +152,1 @@\n-            return att.local_variable_table_length;\n+            return att.localVariableTypes().size();\n@@ -152,1 +157,1 @@\n-            return Stream.of(att.local_variable_table).map(LocalVariableTypeTableEntry::new).collect(toList());\n+            return att.localVariableTypes().stream().map(LocalVariableTypeTableEntry::new).collect(toList());\n@@ -157,1 +162,1 @@\n-            return att.attribute_length;\n+            return ((BoundAttribute<?>)att).payloadLen();\n@@ -162,1 +167,1 @@\n-            final LocalVariableTypeTable_attribute.Entry entry;\n+            final LocalVariableTypeInfo entry;\n@@ -164,1 +169,1 @@\n-            private LocalVariableTypeTableEntry(LocalVariableTypeTable_attribute.Entry entry) {\n+            private LocalVariableTypeTableEntry(LocalVariableTypeInfo entry) {\n@@ -170,1 +175,1 @@\n-                return entry.index;\n+                return entry.slot();\n@@ -175,1 +180,1 @@\n-                return entry.start_pc;\n+                return entry.startPc();\n@@ -180,1 +185,1 @@\n-                return entry.length;\n+                return entry.length();\n@@ -185,1 +190,1 @@\n-                return getString(entry.name_index);\n+                return entry.name().stringValue();\n@@ -190,1 +195,1 @@\n-                return getString(entry.signature_index);\n+                return entry.signature().stringValue();\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LocalVariableTable\/LocalVariableTypeTableTest.java","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -37,3 +42,3 @@\n-import com.sun.tools.classfile.AccessFlags;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPoolException;\n+import jdk.internal.classfile.AccessFlags;\n+import jdk.internal.classfile.Classfile;\n+import java.lang.reflect.AccessFlag;\n@@ -49,1 +54,1 @@\n-    public static void main(String[] args) throws IOException, ConstantPoolException {\n+    public static void main(String[] args) throws IOException {\n@@ -59,3 +64,3 @@\n-        AccessFlags accessFlags = ClassFile.read(outdir.resolve(\"module-info.class\"))\n-                .access_flags;\n-        if (!accessFlags.is(AccessFlags.ACC_MODULE)) {\n+        AccessFlags accessFlags = Classfile.of().parse(outdir.resolve(\"module-info.class\"))\n+                .flags();\n+        if (!accessFlags.has(AccessFlag.MODULE)) {\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Module\/ModuleFlagTest.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Module\/ModuleTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,4 +24,3 @@\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPool;\n-import com.sun.tools.classfile.ConstantPoolException;\n-import com.sun.tools.classfile.Module_attribute;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.constantpool.*;\n@@ -73,4 +72,4 @@\n-        ClassFile classFile = ClassFile.read(modulePath.resolve(\"module-info.class\"));\n-        Module_attribute moduleAttribute = (Module_attribute) classFile.getAttribute(\"Module\");\n-        ConstantPool constantPool = classFile.constant_pool;\n-        testModuleName(moduleDescriptor, moduleAttribute, constantPool);\n+        ClassModel classFile = Classfile.of().parse(modulePath.resolve(\"module-info.class\"));\n+        ModuleAttribute moduleAttribute = classFile.findAttribute(Attributes.MODULE).orElse(null);\n+        assert moduleAttribute != null;\n+        testModuleName(moduleDescriptor, moduleAttribute);\n@@ -78,5 +77,5 @@\n-        testRequires(moduleDescriptor, moduleAttribute, constantPool);\n-        testExports(moduleDescriptor, moduleAttribute, constantPool);\n-        testOpens(moduleDescriptor, moduleAttribute, constantPool);\n-        testProvides(moduleDescriptor, moduleAttribute, constantPool);\n-        testUses(moduleDescriptor, moduleAttribute, constantPool);\n+        testRequires(moduleDescriptor, moduleAttribute);\n+        testExports(moduleDescriptor, moduleAttribute);\n+        testOpens(moduleDescriptor, moduleAttribute);\n+        testProvides(moduleDescriptor, moduleAttribute);\n+        testUses(moduleDescriptor, moduleAttribute);\n@@ -85,2 +84,2 @@\n-    private void testModuleName(ModuleDescriptor moduleDescriptor, Module_attribute module, ConstantPool constantPool) throws ConstantPoolException {\n-        tr.checkEquals(constantPool.getModuleInfo(module.module_name).getName(), moduleDescriptor.name, \"Unexpected module name\");\n+    private void testModuleName(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        tr.checkEquals(module.moduleName().name().stringValue(), moduleDescriptor.name, \"Unexpected module name\");\n@@ -89,2 +88,2 @@\n-    private void testModuleFlags(ModuleDescriptor moduleDescriptor, Module_attribute module) {\n-        tr.checkEquals(module.module_flags, moduleDescriptor.flags, \"Unexpected module flags\");\n+    private void testModuleFlags(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        tr.checkEquals(module.moduleFlagsMask(), moduleDescriptor.flags, \"Unexpected module flags\");\n@@ -93,2 +92,2 @@\n-    private void testRequires(ModuleDescriptor moduleDescriptor, Module_attribute module, ConstantPool constantPool) throws ConstantPoolException {\n-        tr.checkEquals(module.requires_count, moduleDescriptor.requires.size(), \"Wrong amount of requires.\");\n+    private void testRequires(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        tr.checkEquals(module.requires().size(), moduleDescriptor.requires.size(), \"Wrong amount of requires.\");\n@@ -97,1 +96,1 @@\n-        for (Module_attribute.RequiresEntry require : module.requires) {\n+        for (ModuleRequireInfo require : module.requires()) {\n@@ -99,2 +98,2 @@\n-                    require.getRequires(constantPool),\n-                    require.requires_flags));\n+                    require.requires().name().stringValue(),\n+                    require.requiresFlagsMask()));\n@@ -105,4 +104,4 @@\n-    private void testExports(ModuleDescriptor moduleDescriptor, Module_attribute module, ConstantPool constantPool) throws ConstantPoolException {\n-        tr.checkEquals(module.exports_count, moduleDescriptor.exports.size(), \"Wrong amount of exports.\");\n-        for (Module_attribute.ExportsEntry export : module.exports) {\n-            String pkg = constantPool.getPackageInfo(export.exports_index).getName();\n+    private void testExports(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        tr.checkEquals(module.exports().size(), moduleDescriptor.exports.size(), \"Wrong amount of exports.\");\n+        for (ModuleExportInfo export : module.exports()) {\n+            String pkg = export.exportedPackage().name().stringValue();\n@@ -111,1 +110,1 @@\n-                tr.checkEquals(expectedExport.mask, export.exports_flags, \"Wrong export flags\");\n+                tr.checkEquals(expectedExport.mask, export.exportsFlagsMask(), \"Wrong export flags\");\n@@ -113,1 +112,1 @@\n-                tr.checkEquals(export.exports_to_count, expectedTo.size(), \"Wrong amount of exports to\");\n+                tr.checkEquals(export.exportsTo().size(), expectedTo.size(), \"Wrong amount of exports to\");\n@@ -115,2 +114,2 @@\n-                for (int toIdx : export.exports_to_index) {\n-                    actualTo.add(constantPool.getModuleInfo(toIdx).getName());\n+                for (ModuleEntry toIdx : export.exportsTo()) {\n+                    actualTo.add(toIdx.name().stringValue());\n@@ -123,4 +122,4 @@\n-    private void testOpens(ModuleDescriptor moduleDescriptor, Module_attribute module, ConstantPool constantPool) throws ConstantPoolException {\n-        tr.checkEquals(module.opens_count, moduleDescriptor.opens.size(), \"Wrong amount of opens.\");\n-        for (Module_attribute.OpensEntry open : module.opens) {\n-            String pkg = constantPool.getPackageInfo(open.opens_index).getName();\n+    private void testOpens(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        tr.checkEquals(module.opens().size(), moduleDescriptor.opens.size(), \"Wrong amount of opens.\");\n+        for (ModuleOpenInfo open : module.opens()) {\n+            String pkg = open.openedPackage().name().stringValue();\n@@ -129,1 +128,1 @@\n-                tr.checkEquals(expectedOpen.mask, open.opens_flags, \"Wrong open flags\");\n+                tr.checkEquals(expectedOpen.mask, open.opensFlagsMask(), \"Wrong open flags\");\n@@ -131,1 +130,1 @@\n-                tr.checkEquals(open.opens_to_count, expectedTo.size(), \"Wrong amount of opens to\");\n+                tr.checkEquals(open.opensTo().size(), expectedTo.size(), \"Wrong amount of opens to\");\n@@ -133,2 +132,2 @@\n-                for (int toIdx : open.opens_to_index) {\n-                    actualTo.add(constantPool.getModuleInfo(toIdx).getName());\n+                for (ModuleEntry toIdx : open.opensTo()) {\n+                    actualTo.add(toIdx.name().stringValue());\n@@ -141,2 +140,2 @@\n-    private void testUses(ModuleDescriptor moduleDescriptor, Module_attribute module, ConstantPool constantPool) throws ConstantPoolException {\n-        tr.checkEquals(module.uses_count, moduleDescriptor.uses.size(), \"Wrong amount of uses.\");\n+    private void testUses(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        tr.checkEquals(module.uses().size(), moduleDescriptor.uses.size(), \"Wrong amount of uses.\");\n@@ -144,2 +143,3 @@\n-        for (int usesIdx : module.uses_index) {\n-            String uses = constantPool.getClassInfo(usesIdx).getBaseName();\n+        for (ClassEntry usesIdx : module.uses()) {\n+            if (!usesIdx.asSymbol().isClassOrInterface()) continue; \/\/get basename\n+            String uses = usesIdx.asInternalName();\n@@ -151,3 +151,3 @@\n-    private void testProvides(ModuleDescriptor moduleDescriptor, Module_attribute module, ConstantPool constantPool) throws ConstantPoolException {\n-        int moduleProvidesCount = Arrays.asList(module.provides).stream()\n-                .mapToInt(e -> e.with_index.length)\n+    private void testProvides(ModuleDescriptor moduleDescriptor, ModuleAttribute module) {\n+        int moduleProvidesCount = module.provides().stream()\n+                .mapToInt(e -> e.providesWith().size())\n@@ -160,2 +160,3 @@\n-        for (Module_attribute.ProvidesEntry provide : module.provides) {\n-            String provides = constantPool.getClassInfo(provide.provides_index).getBaseName();\n+        for (ModuleProvideInfo provide : module.provides()) {\n+            if (!provide.provides().asSymbol().isClassOrInterface()) continue;\n+            String provides = provide.provides().asInternalName();\n@@ -163,2 +164,3 @@\n-            for (int i = 0; i < provide.with_count; i++) {\n-                String with = constantPool.getClassInfo(provide.with_index[i]).getBaseName();\n+            for (ClassEntry withEntry: provide.providesWith()) {\n+                if (!withEntry.asSymbol().isClassOrInterface()) continue;\n+                String with = withEntry.asInternalName();\n@@ -194,1 +196,1 @@\n-        OPEN(\"open\", Module_attribute.ACC_OPEN);\n+        OPEN(\"open\", Classfile.ACC_OPEN);\n@@ -211,3 +213,3 @@\n-        TRANSITIVE(\"transitive\", Module_attribute.ACC_TRANSITIVE),\n-        STATIC(\"static\", Module_attribute.ACC_STATIC_PHASE),\n-        MANDATED(\"\", Module_attribute.ACC_MANDATED);\n+        TRANSITIVE(\"transitive\", Classfile.ACC_TRANSITIVE),\n+        STATIC(\"static\", Classfile.ACC_STATIC_PHASE),\n+        MANDATED(\"\", Classfile.ACC_MANDATED);\n@@ -230,1 +232,1 @@\n-        SYNTHETIC(\"\", Module_attribute.ACC_SYNTHETIC);\n+        SYNTHETIC(\"\", Classfile.ACC_SYNTHETIC);\n@@ -247,1 +249,1 @@\n-        SYNTHETIC(\"\", Module_attribute.ACC_SYNTHETIC);\n+        SYNTHETIC(\"\", Classfile.ACC_SYNTHETIC);\n@@ -329,1 +331,1 @@\n-        StringBuilder content = new StringBuilder(\"\");\n+        StringBuilder content = new StringBuilder();\n@@ -373,1 +375,1 @@\n-                    .collect(Collectors.toList());\n+                    .toList();\n@@ -399,1 +401,1 @@\n-                    .collect(Collectors.toList());\n+                    .toList();\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Module\/ModuleTestBase.java","additions":60,"deletions":58,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/ConstructorTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,3 +24,3 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.Field;\n-import com.sun.tools.classfile.Method;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.SignatureAttribute;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -30,0 +30,1 @@\n+import java.lang.constant.ClassDesc;\n@@ -37,0 +38,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -52,3 +54,0 @@\n-\n-    private final static String ACC_BRIDGE = \"ACC_BRIDGE\";\n-\n@@ -81,1 +80,1 @@\n-        return Stream.of(clazz.getAnnotationsByType(ExpectedSignature.class))\n+        return Arrays.stream(clazz.getAnnotationsByType(ExpectedSignature.class))\n@@ -100,1 +99,1 @@\n-        return Stream.of(executables)\n+        return Arrays.stream(executables)\n@@ -118,1 +117,1 @@\n-        return Stream.of(clazz.getDeclaredFields())\n+        return Arrays.stream(clazz.getDeclaredFields())\n@@ -133,1 +132,1 @@\n-                    ClassFile classFile = readClassFile(file);\n+                    ClassModel classFile = readClassFile(file);\n@@ -138,2 +137,1 @@\n-                            classFile,\n-                            () -> (Signature_attribute) classFile.getAttribute(Attribute.Signature),\n+                            () -> classFile.findAttribute(Attributes.SIGNATURE).orElse(null),\n@@ -166,3 +164,2 @@\n-    private void testMethods(Map<String, ExpectedSignature> expectedSignatures, ClassFile classFile)\n-            throws ConstantPoolException, Descriptor.InvalidDescriptor {\n-        String className = classFile.getName();\n+    private void testMethods(Map<String, ExpectedSignature> expectedSignatures, ClassModel classFile) {\n+        String className = classFile.thisClass().name().stringValue();\n@@ -170,2 +167,2 @@\n-        for (Method method : classFile.methods) {\n-            String methodName = getMethodName(classFile, method);\n+        for (MethodModel method : classFile.methods()) {\n+            String methodName = getMethodName(method);\n@@ -173,1 +170,1 @@\n-            if (method.access_flags.getMethodFlags().contains(ACC_BRIDGE)) {\n+            if (method.flags().has(AccessFlag.BRIDGE)) {\n@@ -179,2 +176,1 @@\n-                    classFile,\n-                    () -> (Signature_attribute) method.attributes.get(Attribute.Signature),\n+                    () -> method.findAttribute(Attributes.SIGNATURE).orElse(null),\n@@ -188,5 +184,13 @@\n-    private String getMethodName(ClassFile classFile, Method method)\n-            throws ConstantPoolException, Descriptor.InvalidDescriptor {\n-        return String.format(\"%s%s\",\n-                method.getName(classFile.constant_pool),\n-                method.descriptor.getParameterTypes(classFile.constant_pool));\n+    private String getMethodName(MethodModel method) {\n+        StringBuilder methodName = new StringBuilder(method.methodName().stringValue() + \"(\");\n+        List<ClassDesc> paras = method.methodTypeSymbol().parameterList();\n+        for (int i = 0; i < method.methodTypeSymbol().parameterCount(); ++i) {\n+            if (i != 0) {\n+                methodName.append(\", \");\n+            }\n+            ClassDesc para = paras.get(i);\n+            String prefix = para.componentType() == null? para.packageName(): para.componentType().packageName();\n+            methodName.append(prefix).append(Objects.equals(prefix, \"\") ? \"\":\".\").append(para.displayName());\n+        }\n+        methodName.append(\")\");\n+        return methodName.toString();\n@@ -195,3 +199,2 @@\n-    private void testFields(Map<String, ExpectedSignature> expectedSignatures, ClassFile classFile)\n-            throws ConstantPoolException {\n-        String className = classFile.getName();\n+    private void testFields(Map<String, ExpectedSignature> expectedSignatures, ClassModel classFile) {\n+        String className = classFile.thisClass().name().stringValue();\n@@ -199,2 +202,2 @@\n-        for (Field field : classFile.fields) {\n-            String fieldName = field.getName(classFile.constant_pool);\n+        for (FieldModel field : classFile.fields()) {\n+            String fieldName = field.fieldName().stringValue();\n@@ -204,2 +207,1 @@\n-                    classFile,\n-                    () -> (Signature_attribute) field.attributes.get(Attribute.Signature),\n+                    () -> field.findAttribute(Attributes.SIGNATURE).orElse(null),\n@@ -215,4 +217,2 @@\n-            ClassFile classFile,\n-            Supplier<Signature_attribute> sup,\n-            ExpectedSignature expectedSignature)\n-            throws ConstantPoolException {\n+            Supplier<SignatureAttribute> sup,\n+            ExpectedSignature expectedSignature) {\n@@ -220,1 +220,1 @@\n-        Signature_attribute attribute = sup.get();\n+        SignatureAttribute attribute = sup.get();\n@@ -222,1 +222,1 @@\n-            checkEquals(classFile.constant_pool.getUTF8Value(attribute.attribute_name_index),\n+            checkEquals(attribute.attributeName(),\n@@ -224,2 +224,2 @@\n-            checkEquals(attribute.attribute_length, 2, \"Attribute's length : \" + memberName);\n-            checkEquals(attribute.getSignature(classFile.constant_pool),\n+            checkEquals(((BoundAttribute<?>)attribute).payloadLen(), 2, \"Attribute's length : \" + memberName);\n+            checkEquals(attribute.signature().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/Driver.java","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/EnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/ExceptionTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/FieldTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/InnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/MethodParameterTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/MethodTypeBoundTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/ReturnTypeTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/AnonymousClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/InnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/LocalClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/MixTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/ModuleInfoTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -37,3 +42,2 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPoolException;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -49,1 +53,1 @@\n-    public void test() throws IOException, ConstantPoolException {\n+    public void test() throws IOException {\n@@ -51,1 +55,1 @@\n-                ClassFile.read(getClassFile(NoSourceFileAttribute.class)).getAttribute(Attribute.SourceFile),\n+                Classfile.of().parse(getClassFile(NoSourceFileAttribute.class).toPath()).findAttribute(Attributes.SOURCE_FILE).orElse(null),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/NoSourceFileAttribute.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -24,3 +24,3 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.SourceFile_attribute;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.SourceFileAttribute;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -53,1 +53,1 @@\n-        assertAttributePresent(ClassFile.read(getClassFile(classToTest)), fileName);\n+        assertAttributePresent(Classfile.of().parse(getClassFile(classToTest).toPath()), fileName);\n@@ -63,1 +63,1 @@\n-        assertAttributePresent(ClassFile.read(getClassFile(classToTest + \".class\")), fileName);\n+        assertAttributePresent(Classfile.of().parse(getClassFile(classToTest + \".class\").toPath()), fileName);\n@@ -73,1 +73,1 @@\n-        assertAttributePresent(ClassFile.read(classToTest), fileName);\n+        assertAttributePresent(Classfile.of().parse(classToTest), fileName);\n@@ -88,1 +88,1 @@\n-            ClassFile classFile;\n+            ClassModel classFile;\n@@ -90,1 +90,1 @@\n-                classFile = ClassFile.read(input);\n+                classFile = Classfile.of().parse(input.readAllBytes());\n@@ -96,1 +96,1 @@\n-    private void assertAttributePresent(ClassFile classFile, String fileName) throws Exception {\n+    private void assertAttributePresent(ClassModel classFile, String fileName) throws Exception {\n@@ -100,4 +100,4 @@\n-        List<SourceFile_attribute> sourceFileAttributes = new ArrayList<>();\n-        for (Attribute a : classFile.attributes.attrs) {\n-            if (Attribute.SourceFile.equals(a.getName(classFile.constant_pool))) {\n-                sourceFileAttributes.add((SourceFile_attribute) a);\n+        List<SourceFileAttribute> sourceFileAttributes = new ArrayList<>();\n+        for (Attribute<?> a : classFile.attributes()) {\n+            if (a instanceof SourceFileAttribute) {\n+                sourceFileAttributes.add((SourceFileAttribute) a);\n@@ -109,1 +109,1 @@\n-        SourceFile_attribute attribute = sourceFileAttributes.get(0);\n+        SourceFileAttribute attribute = sourceFileAttributes.get(0);\n@@ -111,3 +111,2 @@\n-        assertEquals(classFile.constant_pool.getUTF8Info(attribute.attribute_name_index).value,\n-                Attribute.SourceFile, \"Incorrect attribute name\");\n-        assertEquals(classFile.constant_pool.getUTF8Info(attribute.sourcefile_index).value, fileName,\n+        assertEquals(attribute.attributeName(), Attributes.SOURCE_FILE.name(), \"Incorrect attribute name\");\n+        assertEquals(attribute.sourceFile().stringValue(), fileName,\n@@ -115,1 +114,1 @@\n-        assertEquals(attribute.attribute_length, 2, \"Incorrect attribute length\");\n+        assertEquals(((BoundAttribute<?>)attribute).payloadLen(), 2, \"Incorrect attribute length\");\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/SourceFileTestBase.java","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/SyntheticClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/TopLevelClassesOneFileTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/AccessToPrivateInnerClassConstructorsTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/AccessToPrivateInnerClassMembersTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/AccessToPrivateSiblingsTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/AssertFieldTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/BridgeMethodForGenericMethodTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/BridgeMethodsForLambdaTargetRelease14Test.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/BridgeMethodsForLambdaTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/EnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/PackageInfoTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.lang.constant.ClassDesc;\n@@ -34,0 +35,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -35,1 +37,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.SyntheticAttribute;\n@@ -51,3 +54,0 @@\n-\n-    private static final String ACC_SYNTHETIC = \"ACC_SYNTHETIC\";\n-\n@@ -55,1 +55,1 @@\n-    private final Map<String, ClassFile> classes;\n+    private final Map<String, ClassModel> classes;\n@@ -59,1 +59,1 @@\n-            throws TestFailedException, ConstantPoolException, IOException, ClassNotFoundException {\n+            throws TestFailedException, IOException, ClassNotFoundException {\n@@ -67,1 +67,1 @@\n-    public SyntheticTestDriver(String testCaseName) throws IOException, ConstantPoolException, ClassNotFoundException {\n+    public SyntheticTestDriver(String testCaseName) throws IOException, ClassNotFoundException {\n@@ -78,1 +78,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -94,5 +94,13 @@\n-    private String getMethodName(ClassFile classFile, Method method)\n-            throws ConstantPoolException, Descriptor.InvalidDescriptor {\n-        String methodName = method.getName(classFile.constant_pool);\n-        String parameters = method.descriptor.getParameterTypes(classFile.constant_pool);\n-        return methodName + parameters;\n+    private String getMethodName(MethodModel method) {\n+        StringBuilder methodName = new StringBuilder(method.methodName().stringValue() + \"(\");\n+        List<ClassDesc> paras = method.methodTypeSymbol().parameterList();\n+        for (int i = 0; i < method.methodTypeSymbol().parameterCount(); ++i) {\n+            if (i != 0) {\n+                methodName.append(\", \");\n+            }\n+            ClassDesc para = paras.get(i);\n+            String prefix = para.componentType() == null? para.packageName(): para.componentType().packageName();\n+            methodName.append(prefix).append(Objects.equals(prefix, \"\") ? \"\":\".\").append(para.displayName());\n+        }\n+        methodName.append(\")\");\n+        return methodName.toString();\n@@ -107,1 +115,1 @@\n-            for (Map.Entry<String, ClassFile> entry : classes.entrySet()) {\n+            for (Map.Entry<String, ClassModel> entry : classes.entrySet()) {\n@@ -109,1 +117,1 @@\n-                ClassFile classFile = entry.getValue();\n+                ClassModel classFile = entry.getValue();\n@@ -113,2 +121,2 @@\n-                        () -> (Synthetic_attribute) classFile.getAttribute(Attribute.Synthetic),\n-                        classFile.access_flags::getClassFlags,\n+                        () -> classFile.findAttribute(Attributes.SYNTHETIC).orElse(null),\n+                        classFile.flags()::flags,\n@@ -126,2 +134,2 @@\n-                for (Method method : classFile.methods) {\n-                    String methodName = getMethodName(classFile, method);\n+                for (MethodModel method : classFile.methods()) {\n+                    String methodName = getMethodName(method);\n@@ -131,2 +139,2 @@\n-                            () -> (Synthetic_attribute) method.attributes.get(Attribute.Synthetic),\n-                            method.access_flags::getMethodFlags,\n+                            () -> method.findAttribute(Attributes.SYNTHETIC).orElse(null),\n+                            method.flags()::flags,\n@@ -152,2 +160,2 @@\n-                for (Field field : classFile.fields) {\n-                    String fieldName = field.getName(classFile.constant_pool);\n+                for (FieldModel field : classFile.fields()) {\n+                    String fieldName = field.fieldName().stringValue();\n@@ -157,2 +165,2 @@\n-                            () -> (Synthetic_attribute) field.attributes.get(Attribute.Synthetic),\n-                            field.access_flags::getFieldFlags,\n+                            () -> field.findAttribute(Attributes.SYNTHETIC).orElse(null),\n+                            field.flags()::flags,\n@@ -184,3 +192,3 @@\n-    private boolean testAttribute(ClassFile classFile,\n-                               Supplier<Synthetic_attribute> getSyntheticAttribute,\n-                               Supplier<Set<String>> getAccessFlags,\n+    private boolean testAttribute(ClassModel classFile,\n+                               Supplier<SyntheticAttribute> getSyntheticAttribute,\n+                               Supplier<Set<AccessFlag>> getAccessFlags,\n@@ -188,1 +196,1 @@\n-                               String info) throws ConstantPoolException {\n+                               String info) {\n@@ -190,3 +198,3 @@\n-        String className = classFile.getName();\n-        Synthetic_attribute attr = getSyntheticAttribute.get();\n-        Set<String> flags = getAccessFlags.get();\n+        String className = classFile.thisClass().name().stringValue();\n+        SyntheticAttribute attr = getSyntheticAttribute.get();\n+        Set<AccessFlag> flags = getAccessFlags.get();\n@@ -196,1 +204,1 @@\n-            checkFalse(flags.contains(ACC_SYNTHETIC),\n+            checkFalse(flags.contains(AccessFlag.SYNTHETIC),\n@@ -202,1 +210,1 @@\n-                    && checkTrue(flags.contains(ACC_SYNTHETIC), \"Member must have synthetic flag : \"\n+                    && checkTrue(flags.contains(AccessFlag.SYNTHETIC), \"Member must have synthetic flag : \"\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/SyntheticTestDriver.java","additions":42,"deletions":34,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Synthetic\/ThisFieldTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,3 +24,1 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ConstantPoolException;\n-import com.sun.tools.classfile.Descriptor;\n+import jdk.internal.classfile.Attribute;\n@@ -108,1 +106,1 @@\n-            throws IOException, ConstantPoolException, Descriptor.InvalidDescriptor;\n+            throws IOException;\n@@ -179,1 +177,1 @@\n-                    .collect(Collectors.toList()));\n+                    .toList());\n@@ -206,3 +204,3 @@\n-    protected long countNumberOfAttributes(Attribute[] attrs,\n-                                               Class<? extends Attribute> clazz) {\n-        return Stream.of(attrs)\n+    protected long countNumberOfAttributes(List<Attribute<?>> attrs,\n+                                           Class<? extends Attribute<?>> clazz) {\n+        return attrs.stream()\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/AnnotationsTestBase.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -73,1 +78,1 @@\n-                TestCase.TestMethodInfo method = clazz.addMethodInfo(\"add(java.lang.Integer)\", \"public\");\n+                TestCase.TestMethodInfo method = clazz.addMethodInfo(\"add(Integer)\", \"public\");\n@@ -76,1 +81,1 @@\n-                TestCase.TestMethodInfo synMethod = clazz.addMethodInfo(\"add(java.lang.Object)\", true, \"public\");\n+                TestCase.TestMethodInfo synMethod = clazz.addMethodInfo(\"add(Object)\", true, \"public\");\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsForGenericMethodTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsForInnerAnnotationTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsForInnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsForInnerEnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsForInnerInterfaceTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsForTopLevelClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,1 +24,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -37,1 +38,1 @@\n-            throws IOException, ConstantPoolException, Descriptor.InvalidDescriptor {\n+            throws IOException {\n@@ -42,1 +43,1 @@\n-            ClassFile classFile = readClassFile(entry.getValue());\n+            ClassModel classFile = readClassFile(entry.getValue());\n@@ -44,1 +45,1 @@\n-            testAttributes(clazz, classFile, () -> classFile.attributes);\n+            testAttributes(clazz, classFile, classFile);\n@@ -52,2 +53,1 @@\n-    private void testMethods(TestCase.TestClassInfo clazz, ClassFile classFile)\n-            throws ConstantPoolException, Descriptor.InvalidDescriptor {\n+    private void testMethods(TestCase.TestClassInfo clazz, ClassModel classFile) {\n@@ -56,3 +56,4 @@\n-        for (Method method : classFile.methods) {\n-            String methodName = method.getName(classFile.constant_pool) +\n-                    method.descriptor.getParameterTypes(classFile.constant_pool);\n+        for (MethodModel method : classFile.methods()) {\n+            String methodName = method.methodName().stringValue() +\n+                    method.methodTypeSymbol().displayDescriptor();\n+            methodName = methodName.substring(0, methodName.indexOf(\")\") + 1);\n@@ -70,1 +71,1 @@\n-            testAttributes(testMethod, classFile, () -> method.attributes);\n+            testAttributes(testMethod, classFile, method);\n@@ -75,2 +76,1 @@\n-    private void testFields(TestCase.TestClassInfo clazz, ClassFile classFile)\n-            throws ConstantPoolException {\n+    private void testFields(TestCase.TestClassInfo clazz, ClassModel classFile) {\n@@ -78,2 +78,2 @@\n-        for (Field field : classFile.fields) {\n-            String fieldName = field.getName(classFile.constant_pool);\n+        for (FieldModel field : classFile.fields()) {\n+            String fieldName = field.fieldName().stringValue();\n@@ -87,1 +87,1 @@\n-            testAttributes(testField, classFile, () -> field.attributes);\n+            testAttributes(testField, classFile, field);\n@@ -94,3 +94,2 @@\n-            ClassFile classFile,\n-            Supplier<Attributes> attributes)\n-            throws ConstantPoolException {\n+            ClassModel classFile,\n+            AttributedElement attributedElement) {\n@@ -98,1 +97,0 @@\n-                classFile,\n@@ -100,2 +98,2 @@\n-                attributes.get(),\n-                Attribute.RuntimeInvisibleAnnotations);\n+                attributedElement,\n+                Attributes.RUNTIME_INVISIBLE_ANNOTATIONS);\n@@ -103,1 +101,0 @@\n-                classFile,\n@@ -105,2 +102,2 @@\n-                attributes.get(),\n-                Attribute.RuntimeVisibleAnnotations);\n+                attributedElement,\n+                Attributes.RUNTIME_VISIBLE_ANNOTATIONS);\n@@ -129,2 +126,1 @@\n-    private Map<String, Annotation> collectAnnotations(\n-            ClassFile classFile,\n+    private <T extends Attribute<T>> Map<String, Annotation> collectAnnotations(\n@@ -132,2 +128,2 @@\n-            Attributes attributes,\n-            String attribute) throws ConstantPoolException {\n+            AttributedElement attributedElement,\n+            AttributeMapper<T> attribute) {\n@@ -135,1 +131,1 @@\n-        RuntimeAnnotations_attribute attr = (RuntimeAnnotations_attribute) attributes.get(attribute);\n+        Object attr = attributedElement.findAttribute(attribute).orElse(null);\n@@ -137,1 +133,1 @@\n-        RetentionPolicy policy = getRetentionPolicy(attribute);\n+        RetentionPolicy policy = getRetentionPolicy(attribute.name());\n@@ -139,1 +135,1 @@\n-            if (!checkNotNull(attr, String.format(\"%s should be not null value\", attribute))) {\n+            if (!checkNotNull(attr, String.format(\"%s should be not null value\", attribute.name()))) {\n@@ -143,3 +139,9 @@\n-            for (Annotation ann : attr.annotations) {\n-                String name = classFile.constant_pool.getUTF8Value(ann.type_index);\n-                actualAnnotations.put(name.substring(1, name.length() - 1), ann);\n+            List<Annotation> annotationList;\n+            switch (attr) {\n+                case RuntimeVisibleAnnotationsAttribute annots -> {\n+                    annotationList = annots.annotations();\n+                }\n+                case RuntimeInvisibleAnnotationsAttribute annots -> {\n+                    annotationList = annots.annotations();\n+                }\n+                default -> throw new AssertionError();\n@@ -147,6 +149,10 @@\n-            checkEquals(countNumberOfAttributes(attributes.attrs,\n-                    getRetentionPolicy(attribute) == RetentionPolicy.RUNTIME\n-                            ? RuntimeVisibleAnnotations_attribute.class\n-                            : RuntimeInvisibleAnnotations_attribute.class),\n-                    1l,\n-                    String.format(\"Number of %s\", attribute));\n+            for (Annotation ann : annotationList) {\n+                String name = ann.classSymbol().displayName();\n+                actualAnnotations.put(name, ann);\n+            }\n+            checkEquals(countNumberOfAttributes(attributedElement.attributes(),\n+                    getRetentionPolicy(attribute.name()) == RetentionPolicy.RUNTIME\n+                            ? RuntimeVisibleAnnotationsAttribute.class\n+                            : RuntimeInvisibleAnnotationsAttribute.class),\n+                    1L,\n+                    String.format(\"Number of %s\", attribute.name()));\n@@ -154,1 +160,1 @@\n-            checkNull(attr, String.format(\"%s should be null\", attribute));\n+            checkNull(attr, String.format(\"%s should be null\", attribute.name()));\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeAnnotationsTestBase.java","additions":47,"deletions":41,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -71,1 +76,1 @@\n-            TestCase.TestParameterInfo parameter = clazz.addMethodInfo(\"add(java.lang.Integer)\", \"public\").addParameter(\"Integer\", \"i\");\n+            TestCase.TestParameterInfo parameter = clazz.addMethodInfo(\"add(Integer)\", \"public\").addParameter(\"Integer\", \"i\");\n@@ -73,1 +78,1 @@\n-            TestCase.TestParameterInfo synParameter = clazz.addMethodInfo(\"add(java.lang.Object)\", true, \"public\").addParameter(\"Object\", \"i\");\n+            TestCase.TestParameterInfo synParameter = clazz.addMethodInfo(\"add(Object)\", true, \"public\").addParameter(\"Object\", \"i\");\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeParameterAnnotationsForGenericMethodTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -38,0 +43,6 @@\n+import jdk.internal.classfile.Attributes;\n+import jdk.internal.classfile.ClassModel;\n+import jdk.internal.classfile.MethodModel;\n+import jdk.internal.classfile.attribute.RuntimeInvisibleParameterAnnotationsAttribute;\n+import jdk.internal.classfile.attribute.RuntimeVisibleParameterAnnotationsAttribute;\n+\n@@ -41,1 +52,0 @@\n-import com.sun.tools.classfile.*;\n@@ -58,3 +68,3 @@\n-            \"   interface I { void method(int a, double b, String c); }\\n\" +\n-            \"   %SOURCE%\\n\" +\n-            \"}\";\n+                    \"   interface I { void method(int a, double b, String c); }\\n\" +\n+                    \"   %SOURCE%\\n\" +\n+                    \"}\";\n@@ -80,1 +90,1 @@\n-                    ClassFile classFile = readClassFile(compile(source).getClasses().get(CLASS_NAME));\n+                    ClassModel classFile = readClassFile(compile(source).getClasses().get(CLASS_NAME));\n@@ -82,2 +92,2 @@\n-                    for (Method method : classFile.methods) {\n-                        if (method.getName(classFile.constant_pool).startsWith(\"lambda$\")) {\n+                    for (MethodModel method : classFile.methods()) {\n+                        if (method.methodName().stringValue().startsWith(\"lambda$\")) {\n@@ -85,1 +95,1 @@\n-                            testAttributes(testMethodInfo, classFile, method);\n+                            testAttributes(testMethodInfo, method);\n@@ -100,7 +110,5 @@\n-            ClassFile classFile,\n-            Method method) throws ConstantPoolException {\n-        Attributes attributes = method.attributes;\n-        RuntimeParameterAnnotations_attribute attr = (RuntimeParameterAnnotations_attribute) attributes.get(Attribute.RuntimeInvisibleParameterAnnotations);\n-        checkNull(attr, String.format(\"%s should be null\", Attribute.RuntimeInvisibleParameterAnnotations));\n-        attr = (RuntimeParameterAnnotations_attribute) attributes.get(Attribute.RuntimeVisibleParameterAnnotations);\n-        checkNull(attr, String.format(\"%s should be null\", Attribute.RuntimeVisibleParameterAnnotations));\n+            MethodModel method) {\n+        RuntimeInvisibleParameterAnnotationsAttribute invAttr = method.findAttribute(Attributes.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS).orElse(null);\n+        checkNull(invAttr, String.format(\"%s should be null\", Attributes.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS));\n+        RuntimeVisibleParameterAnnotationsAttribute vAttr = method.findAttribute(Attributes.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS).orElse(null);\n+        checkNull(vAttr, String.format(\"%s should be null\", Attributes.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS));\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeParameterAnnotationsForLambdaTest.java","additions":24,"deletions":16,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -88,1 +93,1 @@\n-        String methodDescriptor = methodName + \"(int, double, java.lang.String)\";\n+        String methodDescriptor = methodName + \"(int,double,String)\";\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeParameterAnnotationsTest.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,1 +24,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -35,1 +36,1 @@\n-            throws IOException, ConstantPoolException, Descriptor.InvalidDescriptor {\n+            throws IOException {\n@@ -37,1 +38,1 @@\n-            ClassFile classFile = readClassFile(classes.get(entry.getKey()));\n+            ClassModel classFile = readClassFile(classes.get(entry.getKey()));\n@@ -39,1 +40,1 @@\n-            String className = classFile.getName();\n+            String className = classFile.thisClass().name().stringValue();\n@@ -41,3 +42,4 @@\n-            for (Method method : classFile.methods) {\n-                String methodName = method.getName(classFile.constant_pool) +\n-                        method.descriptor.getParameterTypes(classFile.constant_pool);\n+            for (MethodModel method : classFile.methods()) {\n+                String methodName = method.methodName().stringValue() +\n+                        method.methodTypeSymbol().displayDescriptor();\n+                methodName = methodName.substring(0, methodName.indexOf(\")\") + 1);\n@@ -62,2 +64,2 @@\n-            ClassFile classFile,\n-            Method method) throws ConstantPoolException {\n+            ClassModel classFile,\n+            MethodModel method) {\n@@ -68,1 +70,1 @@\n-                Attribute.RuntimeInvisibleParameterAnnotations);\n+                Attributes.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS);\n@@ -73,1 +75,1 @@\n-                Attribute.RuntimeVisibleParameterAnnotations);\n+                Attributes.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS);\n@@ -106,2 +108,2 @@\n-    private List<Map<String, Annotation>> collectAnnotations(\n-            ClassFile classFile,\n+    private <T extends Attribute<T>> List<Map<String, Annotation>> collectAnnotations(\n+            ClassModel classFile,\n@@ -109,5 +111,2 @@\n-            Method method,\n-            String attribute) throws ConstantPoolException {\n-\n-        Attributes attributes = method.attributes;\n-        RuntimeParameterAnnotations_attribute attr = (RuntimeParameterAnnotations_attribute) attributes.get(attribute);\n+            MethodModel method,\n+            AttributeMapper<T> attribute) {\n@@ -115,0 +114,1 @@\n+        Object attr = method.findAttribute(attribute).orElse(null);\n@@ -116,1 +116,1 @@\n-        RetentionPolicy policy = getRetentionPolicy(attribute);\n+        RetentionPolicy policy = getRetentionPolicy(attribute.name());\n@@ -118,1 +118,1 @@\n-            if (!checkNotNull(attr, \"Attribute \" + attribute + \" must not be null\")) {\n+            if (!checkNotNull(attr, \"Attribute \" + attribute.name() + \" must not be null\")) {\n@@ -122,1 +122,11 @@\n-            for (Annotation[] anns : attr.parameter_annotations) {\n+            List<List<Annotation>> annotationList;\n+            switch (attr) {\n+                case RuntimeVisibleParameterAnnotationsAttribute pAnnots -> {\n+                    annotationList = pAnnots.parameterAnnotations();\n+                }\n+                case RuntimeInvisibleParameterAnnotationsAttribute pAnnots -> {\n+                    annotationList = pAnnots.parameterAnnotations();\n+                }\n+                default -> throw new AssertionError();\n+            }\n+            for (List<Annotation> anns: annotationList) {\n@@ -124,3 +134,3 @@\n-                for (Annotation ann : anns) {\n-                    String name = classFile.constant_pool.getUTF8Value(ann.type_index);\n-                    annotations.put(name.substring(1, name.length() - 1), ann);\n+                for (Annotation ann: anns) {\n+                    String name = ann.classSymbol().displayName();\n+                    annotations.put(name, ann);\n@@ -130,6 +140,6 @@\n-            checkEquals(countNumberOfAttributes(attributes.attrs,\n-                    getRetentionPolicy(attribute) == RetentionPolicy.RUNTIME\n-                            ? RuntimeVisibleParameterAnnotations_attribute.class\n-                            : RuntimeInvisibleParameterAnnotations_attribute.class),\n-                    1l,\n-                    String.format(\"Number of %s\", attribute));\n+            checkEquals(countNumberOfAttributes(method.attributes(),\n+                    getRetentionPolicy(attribute.name()) == RetentionPolicy.RUNTIME\n+                            ? RuntimeVisibleParameterAnnotationsAttribute.class\n+                            : RuntimeInvisibleParameterAnnotationsAttribute.class),\n+                    1L,\n+                    String.format(\"Number of %s\", attribute.name()));\n@@ -137,1 +147,1 @@\n-            checkNull(attr, String.format(\"%s should be null\", attribute));\n+            checkNull(attr, String.format(\"%s should be null\", attribute.name()));\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/RuntimeParameterAnnotationsTestBase.java","additions":41,"deletions":31,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -24,4 +24,2 @@\n-import com.sun.tools.classfile.Annotation;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPool;\n-import com.sun.tools.classfile.ConstantPoolException;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.AnnotationValue;\n@@ -50,3 +48,2 @@\n-    public void testAnnotation(TestResult testResult, ClassFile classFile, Annotation annotation)\n-            throws ConstantPoolException {\n-        testResult.checkEquals(classFile.constant_pool.getUTF8Value(annotation.type_index),\n+    public void testAnnotation(TestResult testResult, ClassModel classFile, Annotation annotation) {\n+        testResult.checkEquals(annotation.classSymbol().descriptorString(),\n@@ -54,1 +51,1 @@\n-        testResult.checkEquals(annotation.num_element_value_pairs,\n+        testResult.checkEquals(annotation.elements().size(),\n@@ -56,1 +53,1 @@\n-        if (!testResult.checkEquals(annotation.num_element_value_pairs, elementValues.size(),\n+        if (!testResult.checkEquals(annotation.elements().size(), elementValues.size(),\n@@ -60,3 +57,3 @@\n-        for (int i = 0; i < annotation.num_element_value_pairs; ++i) {\n-            Annotation.element_value_pair pair = annotation.element_value_pairs[i];\n-            testResult.checkEquals(classFile.constant_pool.getUTF8Value(pair.element_name_index),\n+        for (int i = 0; i < annotation.elements().size(); ++i) {\n+            AnnotationElement pair = annotation.elements().get(i);\n+            testResult.checkEquals(pair.name().stringValue(),\n@@ -64,1 +61,1 @@\n-            elementValues.get(i).elementValue.testElementValue(testResult, classFile, pair.value);\n+            elementValues.get(i).elementValue.testElementValue(testResult, classFile, pair.value());\n@@ -104,3 +101,2 @@\n-                                              ClassFile classFile,\n-                                              Annotation.element_value element_value)\n-                throws ConstantPoolException;\n+                                              ClassModel classFile,\n+                                              AnnotationValue element_value);\n@@ -119,9 +115,13 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Integer_info info =\n-                    (ConstantPool.CONSTANT_Integer_info) classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, value, \"const_value_index : \" + value);\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            switch (element_value.tag()) {\n+                case 'B':\n+                    testResult.checkEquals((int)((AnnotationValue.OfByte) element_value).byteValue(), value, \"const_value_index : \" + value);\n+                    break;\n+                case 'S':\n+                    testResult.checkEquals((int)((AnnotationValue.OfShort) element_value).shortValue(), value, \"const_value_index : \" + value);\n+                    break;\n+                default:\n+                    testResult.checkEquals(((AnnotationValue.OfInteger) element_value).intValue(), value, \"const_value_index : \" + value);\n+            }\n@@ -146,9 +146,5 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Integer_info info =\n-                    (ConstantPool.CONSTANT_Integer_info) classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, value ? 1 : 0, \"const_value_index : \" + value);\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfBoolean ev = (AnnotationValue.OfBoolean) element_value;\n+            testResult.checkEquals(ev.booleanValue(), value, \"const_value_index : \" + value);\n@@ -173,10 +169,6 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Integer_info info =\n-                    (ConstantPool.CONSTANT_Integer_info)\n-                            classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, (int) value, \"const_value_index : \" + value);\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfCharacter ev =\n+                    (AnnotationValue.OfCharacter) element_value;\n+            testResult.checkEquals(ev.charValue(), value, \"const_value_index : \" + value);\n@@ -201,9 +193,6 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPool.InvalidIndex {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Long_info info =\n-                    (ConstantPool.CONSTANT_Long_info) classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, value, \"const_value_index\");\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfLong ev =\n+                    (AnnotationValue.OfLong) element_value;\n+            testResult.checkEquals(ev.longValue(), value, \"const_value_index\");\n@@ -228,9 +217,6 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPool.InvalidIndex {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Float_info info =\n-                    (ConstantPool.CONSTANT_Float_info) classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, value, \"const_value_index\");\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfFloat ev =\n+                    (AnnotationValue.OfFloat) element_value;\n+            testResult.checkEquals(ev.floatValue(), value, \"const_value_index\");\n@@ -255,9 +241,6 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Double_info info = (ConstantPool.CONSTANT_Double_info)\n-                    classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, value, \"const_value_index\");\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfDouble ev =\n+                    (AnnotationValue.OfDouble) element_value;\n+            testResult.checkEquals(ev.doubleValue(), value, \"const_value_index\");\n@@ -282,9 +265,6 @@\n-                                     ClassFile classFile,\n-                                     Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Primitive_element_value ev =\n-                    (Annotation.Primitive_element_value) element_value;\n-            ConstantPool.CONSTANT_Utf8_info info =\n-                    (ConstantPool.CONSTANT_Utf8_info) classFile.constant_pool.get(ev.const_value_index);\n-            testResult.checkEquals(info.value, value, \"const_value_index\");\n+                                     ClassModel classFile,\n+                                     AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfString ev =\n+                    (AnnotationValue.OfString) element_value;\n+            testResult.checkEquals(ev.stringValue(), value, \"const_value_index\");\n@@ -312,6 +292,5 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Enum_element_value ev = (Annotation.Enum_element_value) element_value;\n-            testResult.checkEquals(classFile.constant_pool.getUTF8Info(ev.type_name_index).value,\n+                ClassModel classFile,\n+                AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfEnum ev = (AnnotationValue.OfEnum) element_value;\n+            testResult.checkEquals(ev.classSymbol().descriptorString(),\n@@ -319,1 +298,1 @@\n-            testResult.checkEquals(classFile.constant_pool.getUTF8Info(ev.const_name_index).value,\n+            testResult.checkEquals(ev.constantName().stringValue(),\n@@ -354,5 +333,4 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Class_element_value ev = (Annotation.Class_element_value) element_value;\n+                ClassModel classFile,\n+                AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfClass ev = (AnnotationValue.OfClass) element_value;\n@@ -362,2 +340,1 @@\n-            testResult.checkEquals(\n-                    classFile.constant_pool.getUTF8Info(ev.class_info_index).value,\n+            testResult.checkEquals(ev.classSymbol().descriptorString(),\n@@ -384,5 +361,4 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation.Array_element_value ev = (Annotation.Array_element_value) element_value;\n+                ClassModel classFile,\n+                AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            AnnotationValue.OfArray ev = (AnnotationValue.OfArray) element_value;\n@@ -391,1 +367,1 @@\n-                values.get(i).testElementValue(testResult, classFile, ev.values[i]);\n+                values.get(i).testElementValue(testResult, classFile, ev.values().get(i));\n@@ -416,5 +392,4 @@\n-                ClassFile classFile,\n-                Annotation.element_value element_value)\n-                throws ConstantPoolException {\n-            testTag(testResult, element_value.tag);\n-            Annotation ev = ((Annotation.Annotation_element_value) element_value).annotation_value;\n+                ClassModel classFile,\n+                AnnotationValue element_value) {\n+            testTag(testResult, element_value.tag());\n+            Annotation ev = ((AnnotationValue.OfAnnotation) element_value).annotation();\n@@ -422,1 +397,1 @@\n-                    classFile.constant_pool.getUTF8Info(ev.type_index).value,\n+                    ev.classSymbol().descriptorString(),\n@@ -425,2 +400,2 @@\n-            for (int i = 0; i < ev.num_element_value_pairs; ++i) {\n-                Annotation.element_value_pair pair = ev.element_value_pairs[i];\n+            for (int i = 0; i < ev.elements().size(); ++i) {\n+                AnnotationElement pair = ev.elements().get(i);\n@@ -428,1 +403,1 @@\n-                expectedPair.elementValue.testElementValue(testResult, classFile, pair.value);\n+                expectedPair.elementValue.testElementValue(testResult, classFile, pair.value());\n@@ -430,1 +405,1 @@\n-                        classFile.constant_pool.getUTF8Info(pair.element_name_index).value,\n+                        pair.name().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/annotations\/TestAnnotationInfo.java","additions":85,"deletions":110,"binary":false,"changes":195,"status":"modified"},{"patch":"@@ -32,1 +32,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -37,3 +42,3 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Deprecated_attribute;\n+import jdk.internal.classfile.Attributes;\n+import jdk.internal.classfile.ClassModel;\n+import jdk.internal.classfile.attribute.DeprecatedAttribute;\n@@ -81,1 +86,1 @@\n-            ClassFile cf = readClassFile(compile(\n+            ClassModel cm = readClassFile(compile(\n@@ -85,2 +90,1 @@\n-            Deprecated_attribute attr =\n-                    (Deprecated_attribute) cf.getAttribute(Attribute.Deprecated);\n+            DeprecatedAttribute attr = cm.findAttribute(Attributes.DEPRECATED).orElse(null);\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/deprecated\/DeprecatedPackageTest.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -33,1 +33,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -38,8 +43,3 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPoolException;\n-import com.sun.tools.classfile.Deprecated_attribute;\n-import com.sun.tools.classfile.Field;\n-import com.sun.tools.classfile.InnerClasses_attribute;\n-import com.sun.tools.classfile.InnerClasses_attribute.Info;\n-import com.sun.tools.classfile.Method;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -247,3 +247,2 @@\n-            ClassFile cf = readClassFile(classes.get(outerClassName));\n-            Deprecated_attribute attr = (Deprecated_attribute)\n-                    cf.getAttribute(Attribute.Deprecated);\n+            ClassModel cf = readClassFile(classes.get(outerClassName));\n+            DeprecatedAttribute attr = cf.findAttribute(Attributes.DEPRECATED).orElse(null);\n@@ -259,7 +258,6 @@\n-    private void testInnerClasses(ClassFile cf, Map<String, ? extends JavaFileObject> classes)\n-            throws ConstantPoolException, IOException {\n-        InnerClasses_attribute innerAttr = (InnerClasses_attribute)\n-                cf.getAttribute(Attribute.InnerClasses);\n-        for (Info innerClass : innerAttr.classes) {\n-            String innerClassName = cf.constant_pool.\n-                    getClassInfo(innerClass.inner_class_info_index).getName();\n+    private void testInnerClasses(ClassModel cf, Map<String, ? extends JavaFileObject> classes)\n+            throws IOException {\n+        InnerClassesAttribute innerAttr = cf.findAttribute(Attributes.INNER_CLASSES).orElse(null);\n+        assert innerAttr != null;\n+        for (InnerClassInfo innerClass : innerAttr.classes()) {\n+            String innerClassName = innerClass.innerClass().name().stringValue();\n@@ -267,4 +265,4 @@\n-            ClassFile innerCf = readClassFile(classes.get(innerClassName));\n-            Deprecated_attribute attr = (Deprecated_attribute)\n-                    innerCf.getAttribute(Attribute.Deprecated);\n-            String innerClassSimpleName = innerClass.getInnerName(cf.constant_pool);\n+            ClassModel innerCf = readClassFile(classes.get(innerClassName));\n+            DeprecatedAttribute attr = innerCf.findAttribute(Attributes.DEPRECATED).orElse(null);\n+            assert innerClass.innerName().isPresent();\n+            String innerClassSimpleName = innerClass.innerName().get().stringValue();\n@@ -279,4 +277,3 @@\n-    private void testMethods(ClassFile cf)\n-            throws ConstantPoolException {\n-        for (Method m : cf.methods) {\n-            String methodName = cf.constant_pool.getUTF8Value(m.name_index);\n+    private void testMethods(ClassModel cf) {\n+        for (MethodModel m : cf.methods()) {\n+            String methodName = m.methodName().stringValue();\n@@ -284,2 +281,1 @@\n-            Deprecated_attribute attr = (Deprecated_attribute)\n-                    m.attributes.get(Attribute.Deprecated);\n+            DeprecatedAttribute attr = m.findAttribute(Attributes.DEPRECATED).orElse(null);\n@@ -290,3 +286,3 @@\n-    private void testFields(ClassFile cf) throws ConstantPoolException {\n-        for (Field f : cf.fields) {\n-            String fieldName = cf.constant_pool.getUTF8Value(f.name_index);\n+    private void testFields(ClassModel cm) {\n+        for (FieldModel f : cm.fields()) {\n+            String fieldName = f.fieldName().stringValue();\n@@ -294,3 +290,2 @@\n-            Deprecated_attribute attr = (Deprecated_attribute)\n-                    f.attributes.get(Attribute.Deprecated);\n-            testAttribute(fieldName, attr, cf);\n+            DeprecatedAttribute attr = f.findAttribute(Attributes.DEPRECATED).orElse(null);\n+            testAttribute(fieldName, attr, cm);\n@@ -300,2 +295,1 @@\n-    private void testAttribute(String name, Deprecated_attribute attr, ClassFile cf)\n-            throws ConstantPoolException {\n+    private void testAttribute(String name, DeprecatedAttribute attr, ClassModel cf) {\n@@ -309,2 +303,1 @@\n-    private void testDeprecatedAttribute(String name, Deprecated_attribute attr, ClassFile cf)\n-            throws ConstantPoolException {\n+    private void testDeprecatedAttribute(String name, DeprecatedAttribute attr, ClassModel cm) {\n@@ -312,1 +305,1 @@\n-            checkEquals(0, attr.attribute_length,\n+            checkEquals(0, ((BoundAttribute<?>)attr).payloadLen(),\n@@ -314,2 +307,1 @@\n-            checkEquals(\"Deprecated\",\n-                    cf.constant_pool.getUTF8Value(attr.attribute_name_index),\n+            checkEquals(\"Deprecated\", attr.attributeName(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/deprecated\/DeprecatedTest.java","additions":34,"deletions":42,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerAnnotationsInInnerAnnotationTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerAnnotationsInInnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerAnnotationsInInnerEnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerAnnotationsInInnerInterfaceTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -43,2 +48,3 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.InnerClasses_attribute.Info;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.constantpool.*;\n@@ -58,7 +64,6 @@\n-            ClassFile classFile = readClassFile(file);\n-            String className = classFile.getName();\n-            for (ConstantPool.CPInfo info : classFile.constant_pool.entries()) {\n-                if (info instanceof ConstantPool.CONSTANT_Class_info) {\n-                    ConstantPool.CONSTANT_Class_info classInfo =\n-                            (ConstantPool.CONSTANT_Class_info) info;\n-                    String cpClassName = classInfo.getBaseName();\n+            ClassModel classFile = readClassFile(file);\n+            String className = classFile.thisClass().name().stringValue();\n+            for (int i = 1; i < classFile.constantPool().entryCount(); ++i) {\n+                if (classFile.constantPool().entryByIndex(i) instanceof ClassEntry classInfo\n+                        && classInfo.asSymbol().isClassOrInterface()) {\n+                    String cpClassName = classInfo.asInternalName();\n@@ -99,3 +104,2 @@\n-                ClassFile cf = readClassFile(currentClassName);\n-                InnerClasses_attribute attr = (InnerClasses_attribute)\n-                        cf.getAttribute(Attribute.InnerClasses);\n+                ClassModel cf = readClassFile(currentClassName);\n+                InnerClassesAttribute attr = cf.findAttribute(Attributes.INNER_CLASSES).orElse(null);\n@@ -110,1 +114,1 @@\n-                checkEquals(attr.number_of_classes,\n+                checkEquals(attr.classes().size(),\n@@ -113,1 +117,2 @@\n-                for (Info info : attr.classes) {\n+                for (InnerClassInfo info : attr.classes()) {\n+                    if (!info.innerClass().asSymbol().isClassOrInterface()) continue;\n@@ -115,1 +120,1 @@\n-                            .getInnerClassInfo(cf.constant_pool).getBaseName();\n+                            .innerClass().asInternalName();\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesHierarchyTest.java","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesInAnonymousClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesInInnerAnnotationTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesInInnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesInInnerEnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesInInnerInterfaceTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesInLocalClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -36,0 +41,3 @@\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.constantpool.ClassEntry;\n@@ -38,0 +46,1 @@\n+import java.util.Arrays;\n@@ -39,0 +48,1 @@\n+import java.util.Objects;\n@@ -41,1 +51,0 @@\n-import java.util.stream.Stream;\n@@ -43,4 +52,0 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.InnerClasses_attribute;\n-import com.sun.tools.classfile.InnerClasses_attribute.Info;\n@@ -61,1 +66,1 @@\n-        return Stream.of(getClassDir().listFiles(filter))\n+        return Arrays.stream(Objects.requireNonNull(getClassDir().listFiles(filter)))\n@@ -70,3 +75,2 @@\n-            ClassFile classFile = readClassFile(InnerClassesIndexTest.class);\n-            InnerClasses_attribute attr = (InnerClasses_attribute)\n-                    classFile.getAttribute(Attribute.InnerClasses);\n+            ClassModel classFile = readClassFile(InnerClassesIndexTest.class);\n+            InnerClassesAttribute attr = classFile.findAttribute(Attributes.INNER_CLASSES).orElse(null);\n@@ -75,3 +79,3 @@\n-            for (Info info : attr.classes) {\n-                String innerName = classFile.constant_pool.\n-                        getClassInfo(info.inner_class_info_index).getBaseName();\n+            assert attr != null;\n+            for (InnerClassInfo info : attr.classes()) {\n+                String innerName = info.innerClass().asInternalName();\n@@ -84,1 +88,2 @@\n-                checkEquals(info.outer_class_info_index, 0,\n+                ClassEntry out = info.outerClass().orElse(null);\n+                checkEquals(out == null? 0: out.index(), 0,\n@@ -87,1 +92,1 @@\n-                    checkEquals(info.inner_name_index, 0,\n+                    checkEquals(Objects.requireNonNull(info.innerName().orElse(null)).index(), 0,\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesIndexTest.java","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,4 +24,4 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.InnerClasses_attribute;\n-import com.sun.tools.classfile.InnerClasses_attribute.Info;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.constantpool.*;\n+import jdk.internal.classfile.impl.BoundAttribute;\n@@ -30,8 +30,1 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;\n@@ -39,0 +32,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -202,1 +196,1 @@\n-            ClassFile cf = readClassFile(compile(getCompileOptions(), test.getSource())\n+            ClassModel cm = readClassFile(compile(getCompileOptions(), test.getSource())\n@@ -204,2 +198,1 @@\n-            InnerClasses_attribute innerClasses = (InnerClasses_attribute)\n-                    cf.getAttribute(Attribute.InnerClasses);\n+            InnerClassesAttribute innerClasses = cm.findAttribute(Attributes.INNER_CLASSES).orElse(null);\n@@ -207,2 +200,2 @@\n-            for (Attribute a : cf.attributes.attrs) {\n-                if (a instanceof InnerClasses_attribute) {\n+            for (Attribute<?> a : cm.attributes()) {\n+                if (a instanceof InnerClassesAttribute) {\n@@ -216,2 +209,1 @@\n-            checkEquals(cf.constant_pool.\n-                    getUTF8Info(innerClasses.attribute_name_index).value, \"InnerClasses\",\n+            checkEquals(innerClasses.attributeName(), \"InnerClasses\",\n@@ -221,1 +213,1 @@\n-            checkEquals(innerClasses.attribute_length,\n+            checkEquals(((BoundAttribute<?>)innerClasses).payloadLen(),\n@@ -223,1 +215,1 @@\n-            checkEquals(innerClasses.number_of_classes,\n+            checkEquals(innerClasses.classes().size(),\n@@ -226,5 +218,6 @@\n-            for (Info e : innerClasses.classes) {\n-                String baseName = cf.constant_pool.getClassInfo(\n-                        e.inner_class_info_index).getBaseName();\n-                if (cf.major_version >= 51 && e.inner_name_index == 0) {\n-                    checkEquals(e.outer_class_info_index, 0,\n+            for (InnerClassInfo e : innerClasses.classes()) {\n+                String baseName = e.innerClass().asInternalName();\n+                if (cm.majorVersion() >= 51 && e.innerClass().index() == 0) {\n+                    ClassEntry out = e.outerClass().orElse(null);\n+                    \/\/ The outer_class_info_index of sun.tools.classfile will return 0 if it is not a member of a class or interface.\n+                    checkEquals(out == null? 0: out.index(), 0,\n@@ -240,2 +233,6 @@\n-                checkEquals(e.inner_class_access_flags.getInnerClassFlags(),\n-                        class2Flags.get(className),\n+                \/\/Convert the Set<string> to Set<AccessFlag>\n+                Set<AccessFlag> accFlags = class2Flags.get(className).stream()\n+                        .map(str -> AccessFlag.valueOf(str.substring(str.indexOf(\"_\") + 1)))\n+                        .collect(Collectors.toSet());\n+                checkEquals(e.flags(),\n+                        accFlags,\n@@ -244,0 +241,5 @@\n+                    checkEquals(\n+                            e.innerClass().asInternalName(),\n+                            classToTest + \"$\" + className,\n+                            \"inner_class_info_index of \" + className);\n+                    if (e.outerClass().orElse(null) != null && e.outerClass().get().index() > 0) {\n@@ -245,6 +247,1 @@\n-                                cf.constant_pool.getClassInfo(e.inner_class_info_index).getBaseName(),\n-                                classToTest + \"$\" + className,\n-                                \"inner_class_info_index of \" + className);\n-                    if (e.outer_class_info_index > 0) {\n-                        checkEquals(\n-                                cf.constant_pool.getClassInfo(e.outer_class_info_index).getName(),\n+                                e.outerClass().get().name().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesTestBase.java","additions":31,"deletions":34,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerEnumInInnerAnnotationTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerEnumInInnerEnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerEnumInInnerInterfaceTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerEnumsInInnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerInterfacesInInnerAnnotationTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerInterfacesInInnerClassTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerInterfacesInInnerEnumTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerInterfacesInInnerInterfaceTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,1 +31,6 @@\n- *          jdk.jdeps\/com.sun.tools.classfile\n+ *          java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -36,3 +41,2 @@\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPoolException;\n+import jdk.internal.classfile.Attributes;\n+import jdk.internal.classfile.ClassModel;\n@@ -44,1 +48,1 @@\n-    public static void main(String[] args) throws IOException, ConstantPoolException {\n+    public static void main(String[] args) throws IOException {\n@@ -48,3 +52,3 @@\n-    public void test() throws IOException, ConstantPoolException {\n-        ClassFile classFile = readClassFile(\"NoInnerClassesTest\");\n-        assertNull(classFile.getAttribute(Attribute.InnerClasses), \"Found inner class attribute\");\n+    public void test() throws IOException {\n+        ClassModel classModel = readClassFile(\"NoInnerClassesTest\");\n+        assertNull(classModel.findAttribute(Attributes.INNER_CLASSES).orElse(null), \"Found inner class attribute\");\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/NoInnerClassesTest.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -36,2 +36,1 @@\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPoolException;\n+import jdk.internal.classfile.*;\n@@ -130,1 +129,0 @@\n-     * @throws ConstantPoolException if constant pool error occurs\n@@ -132,2 +130,2 @@\n-    public ClassFile readClassFile(InputStream is) throws IOException, ConstantPoolException {\n-        return ClassFile.read(is);\n+    public ClassModel readClassFile(InputStream is) throws IOException {\n+        return Classfile.of().parse(is.readAllBytes());\n@@ -142,1 +140,0 @@\n-     * @throws ConstantPoolException if constant pool error occurs\n@@ -144,1 +141,1 @@\n-    public ClassFile readClassFile(JavaFileObject fileObject) throws IOException, ConstantPoolException {\n+    public ClassModel readClassFile(JavaFileObject fileObject) throws IOException {\n@@ -156,1 +153,0 @@\n-     * @throws ConstantPoolException if constant pool error occurs\n@@ -158,1 +154,1 @@\n-    public ClassFile readClassFile(Class<?> clazz) throws IOException, ConstantPoolException {\n+    public ClassModel readClassFile(Class<?> clazz) throws IOException {\n@@ -168,1 +164,0 @@\n-     * @throws ConstantPoolException if constant pool error occurs\n@@ -170,1 +165,1 @@\n-    public ClassFile readClassFile(String className) throws IOException, ConstantPoolException {\n+    public ClassModel readClassFile(String className) throws IOException {\n@@ -180,1 +175,0 @@\n-     * @throws ConstantPoolException if constant pool error occurs\n@@ -182,1 +176,1 @@\n-    public ClassFile readClassFile(File file) throws IOException, ConstantPoolException {\n+    public ClassModel readClassFile(File file) throws IOException {\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/lib\/TestBase.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n@@ -36,0 +35,1 @@\n+import java.nio.file.Files;\n@@ -37,2 +37,0 @@\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ClassWriter;\n@@ -65,4 +63,3 @@\n-        ClassFile cf = ClassFile.read(new File(\"d1\",\"Empty.class\"));\n-        cf.interfaces[0] = cf.constant_pool.size() + 10;\n-        ClassWriter cw = new ClassWriter();\n-        cw.write(cf, new File(\"d2\",\"Empty.class\"));\n+        var cf = Files.readAllBytes(new File(\"d1\",\"Empty.class\").toPath());\n+        cf[9]--;\n+        Files.write(new File(\"d2\",\"Empty.class\").toPath(), cf);\n","filename":"test\/langtools\/tools\/javac\/classreader\/BadClass.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -33,2 +37,1 @@\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.Method;\n+import jdk.internal.classfile.*;\n@@ -41,1 +44,1 @@\n-        ClassFile classFile = ClassFile.read(Paths.get(System.getProperty(\"test.classes\"),\n+        ClassModel classModel = Classfile.of().parse(Paths.get(System.getProperty(\"test.classes\"),\n@@ -43,2 +46,2 @@\n-        for (Method method: classFile.methods) {\n-            if (method.getName(classFile.constant_pool).equals(\"<clinit>\")) {\n+        for (MethodModel method: classModel.methods()) {\n+            if (method.methodName().equalsString(\"<clinit>\")) {\n","filename":"test\/langtools\/tools\/javac\/constDebug\/ConstDebugTest.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -35,2 +39,1 @@\n-import com.sun.tools.classfile.*;\n-import static com.sun.tools.classfile.AccessFlags.ACC_STRICT;\n+import jdk.internal.classfile.*;\n@@ -44,2 +47,1 @@\n-        ClassFile cf = getClassFile(\"LambdaTestStrictFPFlag$Test.class\");\n-        ConstantPool cp = cf.constant_pool;\n+        ClassModel cm = getClassFile(\"LambdaTestStrictFPFlag$Test.class\");\n@@ -47,3 +49,3 @@\n-        for (Method meth: cf.methods) {\n-            if (meth.getName(cp).startsWith(\"lambda$\")) {\n-                if ((meth.access_flags.flags & ACC_STRICT) == 0) {\n+        for (MethodModel meth: cm.methods()) {\n+            if (meth.methodName().stringValue().startsWith(\"lambda$\")) {\n+                if ((meth.flags().flagsMask() & Classfile.ACC_STRICT) == 0){\n@@ -60,1 +62,1 @@\n-    ClassFile getClassFile(String name) throws IOException, ConstantPoolException {\n+    ClassModel getClassFile(String name) throws IOException {\n@@ -62,5 +64,3 @@\n-        InputStream in = url.openStream();\n-        try {\n-            return ClassFile.read(in);\n-        } finally {\n-            in.close();\n+        assert url != null;\n+        try (InputStream in = url.openStream()) {\n+            return Classfile.of().parse(in.readAllBytes());\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaTestStrictFPFlag.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -31,7 +35,2 @@\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ConstantPoolException;\n-import com.sun.tools.classfile.Method;\n-import com.sun.tools.classfile.Attribute;\n-import com.sun.tools.classfile.Code_attribute;\n-import com.sun.tools.classfile.LineNumberTable_attribute;\n-import com.sun.tools.classfile.LineNumberTable_attribute.Entry;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -41,0 +40,1 @@\n+import java.util.List;\n@@ -45,2 +45,2 @@\n-        Entry[] lines = findEntries();\n-        if (lines == null || lines.length != 5)\n+        List<LineNumberInfo> lines = findEntries();\n+        if (lines == null || lines.size() != 5)\n@@ -49,3 +49,3 @@\n-        int current = lines[0].line_number;\n-        for (Entry e : lines) {\n-            if (e.line_number != current)\n+        int current = lines.get(0).lineNumber();\n+        for (LineNumberInfo e : lines) {\n+            if (e.lineNumber() != current)\n@@ -55,1 +55,1 @@\n-   }\n+    }\n@@ -57,8 +57,9 @@\n-    static Entry[] findEntries() throws IOException, ConstantPoolException {\n-        ClassFile self = ClassFile.read(ConditionalLineNumberTest.class.getResourceAsStream(\"ConditionalLineNumberTest.class\"));\n-        for (Method m : self.methods) {\n-            if (\"method\".equals(m.getName(self.constant_pool))) {\n-                Code_attribute code_attribute = (Code_attribute)m.attributes.get(Attribute.Code);\n-                for (Attribute at : code_attribute.attributes) {\n-                    if (Attribute.LineNumberTable.equals(at.getName(self.constant_pool))) {\n-                        return ((LineNumberTable_attribute)at).line_number_table;\n+    static List<LineNumberInfo> findEntries() throws IOException {\n+        ClassModel self = Classfile.of().parse(ConditionalLineNumberTest.class.getResourceAsStream(\"ConditionalLineNumberTest.class\").readAllBytes());\n+        for (MethodModel m : self.methods()) {\n+            if (m.methodName().equalsString(\"method\")) {\n+                CodeAttribute code_attribute = m.findAttribute(Attributes.CODE).orElse(null);\n+                assert code_attribute != null;\n+                for (Attribute<?> at : code_attribute.attributes()) {\n+                    if (at instanceof LineNumberTableAttribute) {\n+                        return ((LineNumberTableAttribute)at).lineNumbers();\n","filename":"test\/langtools\/tools\/javac\/linenumbers\/ConditionalLineNumberTest.java","additions":23,"deletions":22,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671 8310326 8312093\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671 8310326 8312093 8312204\n@@ -2451,0 +2451,38 @@\n+    @Test \/\/JDK-8312204\n+    void testDanglingElse() throws IOException {\n+        String code = \"\"\"\n+                      void main() {\n+                          else ;\n+                      }\n+                      \"\"\";\n+        DiagnosticCollector<JavaFileObject> coll =\n+                new DiagnosticCollector<>();\n+        JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(null, fm, coll,\n+                List.of(\"--enable-preview\", \"--source\", SOURCE_VERSION),\n+                null, Arrays.asList(new MyFileObject(code)));\n+        CompilationUnitTree cut = ct.parse().iterator().next();\n+\n+        String result = cut.toString().replaceAll(\"\\\\R\", \"\\n\");\n+        System.out.println(\"RESULT\\n\" + result);\n+        assertEquals(\"incorrect AST\",\n+                     result,\n+                     \"\"\"\n+                     \\n\\\n+                     \/*synthetic*\/ final class Test {\n+                         \\n\\\n+                         void main() {\n+                             (ERROR);\n+                         }\n+                     }\"\"\");\n+\n+        List<String> codes = new LinkedList<>();\n+\n+        for (Diagnostic<? extends JavaFileObject> d : coll.getDiagnostics()) {\n+            codes.add(d.getLineNumber() + \":\" + d.getColumnNumber() + \":\" + d.getCode());\n+        }\n+\n+        assertEquals(\"testDanglingElse: \" + codes,\n+                     List.of(\"2:5:compiler.err.else.without.if\"),\n+                     codes);\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":39,"deletions":1,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -0,0 +1,191 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8307184\n+ * @summary Test basic operation of Elements.getDocComments\n+ * @library \/tools\/lib \/tools\/javac\/lib\n+ * @build   toolbox.ToolBox JavacTestingAbstractProcessor TestGetDocComments\n+ * @compile -processor TestGetDocComments -proc:only TestGetDocComments.java\n+ *\/\n+\n+import java.io.Writer;\n+import java.util.*;\n+import java.util.function.*;\n+import javax.annotation.processing.*;\n+import javax.lang.model.element.*;\n+import javax.lang.model.util.*;\n+import toolbox.ToolBox;\n+\n+\/**\n+ * Test basic workings of Elements.getDocComments\n+ *\/\n+public class TestGetDocComments extends JavacTestingAbstractProcessor {\n+    public boolean process(Set<? extends TypeElement> annotations,\n+                           RoundEnvironment roundEnv) {\n+        if (!roundEnv.processingOver()) {\n+            boolean elementSeen = false;\n+\n+            for (TypeElement typeRoot : ElementFilter.typesIn(roundEnv.getRootElements()) ) {\n+                for (Element element : typeRoot.getEnclosedElements()) {\n+                    ExpectedComment expectedComment = element.getAnnotation(ExpectedComment.class);\n+                    if (expectedComment != null ) {\n+                        elementSeen = true;\n+                        String expectedCommentStr = expectedComment.value();\n+                        String actualComment = elements.getDocComment(element);\n+\n+                        if (!expectedCommentStr.equals(actualComment)) {\n+                            messager.printError(\"Unexpected doc comment found\", element);\n+                            (new ToolBox()).checkEqual(expectedCommentStr.lines().toList(),\n+                                                       actualComment.lines().toList());\n+                        }\n+                    }\n+                }\n+\n+                if (!elementSeen) {\n+                    throw new RuntimeException(\"No elements seen.\");\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n+    @interface ExpectedComment {\n+        String value();\n+    }\n+\n+    \/\/ Basic processing of interior lines\n+    \/**\n+     *Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n+     *eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n+     *enim ad minim veniam, quis nostrud exercitation ullamco laboris\n+     *nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n+     *in reprehenderit in voluptate velit esse cillum dolore eu\n+     *fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n+     *proident, sunt in culpa qui officia deserunt mollit anim id est\n+     *laborum.\n+     *\/\n+    @ExpectedComment(\"\"\"\n+     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n+     eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n+     enim ad minim veniam, quis nostrud exercitation ullamco laboris\n+     nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n+     in reprehenderit in voluptate velit esse cillum dolore eu\n+     fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\n+     proident, sunt in culpa qui officia deserunt mollit anim id est\n+     laborum.\n+      \"\"\")\n+    \/\/ End-of-line-style comment\n+    @SuppressWarnings(\"\") \/\/ A second preceding annotation\n+    \/* Traditional comment *\/\n+    private void foo() {return ;}\n+\n+\n+    \/\/ Check removal of various *'s and space characters;\n+    \/\/ use Unicode escape to test tab removal\n+    \/**\n+*Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n+**eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n+***enim ad minim veniam, quis nostrud exercitation ullamco laboris\n+*****nisi ut aliquip ex ea commodo consequat.\n+ \\u0009*Duis aute irure dolor in reprehenderit in voluptate velit esse\n+ **cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n+  ***cupidatat non proident, sunt in culpa qui officia deserunt mollit\n+                                            *anim id est laborum.\n+     *\/\n+    @ExpectedComment(\"\"\"\n+       Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n+       eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n+       enim ad minim veniam, quis nostrud exercitation ullamco laboris\n+       nisi ut aliquip ex ea commodo consequat.\n+       Duis aute irure dolor in reprehenderit in voluptate velit esse\n+       cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n+       cupidatat non proident, sunt in culpa qui officia deserunt mollit\n+       anim id est laborum.\n+       \"\"\")\n+    @SuppressWarnings(\"\") \/\/ A second preceding annotation\n+    \/\/ End-of-line-style comment\n+    \/*\n+     * Traditional comment over multiple lines.\n+     *\/\n+    private void bar() {return ;}\n+\n+    \/\/ Spaces _after_ the space-asterisk prefix are _not_ deleted.\n+    \/**\n+     * Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n+     * eiusmod tempor incididunt ut labore et dolore magna aliqua.\n+     *\/\n+    @ExpectedComment( \/\/ Cannot used a text block here since leading spaces are removed\n+     \" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\\n\" +\n+     \" eiusmod tempor incididunt ut labore et dolore magna aliqua.\\n\")\n+    private void baz() {return ;}\n+\n+    \/\/ Space after ** is removed, but not space before \"*\/\"\n+    \/**   Totality *\/\n+    @ExpectedComment(\"Totality \") \/\/ No newline\n+    private void quux() {return ;}\n+\n+    \/\/ Space after \"**\" is removed, but not trailing space later on the line\n+    \/** Totality\\u0020\n+     *\/\n+    @ExpectedComment(\"Totality \\n\")\n+    private void corge() {return ;}\n+\n+    \/**\n+     * Totality *\/\n+    @ExpectedComment(\" Totality \") \/\/ No newline\n+    private void grault() {return ;}\n+\n+    \/\/ Trailing space characters on first line\n+    \/** \\u0009\\u0020\n+     * Totality\n+     *\/\n+    @ExpectedComment(\" Totality\\n\")\n+    private void wombat() {return ;}\n+\n+    \/**\n+     *\/\n+    @ExpectedComment(\"\") \/\/ No newline\n+    private void empty() {return ;}\n+\n+    \/**\n+     * tail *\/\n+    @ExpectedComment(\" tail \") \/\/ No newline\n+    private void tail() {return ;}\n+\n+    \/**\n+   ****\/\n+    @ExpectedComment(\"\") \/\/ No newline\n+    private void tail2() {return ;}\n+\n+    \/\/ Testing of line terminators, javac implementation normalizes them:\n+    \/\/ * newline: \\u000A\n+    \/\/ * carriage return: \\u000D\n+    \/\/ * * carriage return + newline: \\u000D\\u000A\n+    \/**\n+     * Lorem\\u000A\\u000D\\u000D\\u000Aipsum\n+     *\/\n+    @ExpectedComment(\" Lorem\\n\\n\\nipsum\\n\")\n+    private void wombat2() {return ;}\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComments.java","additions":191,"deletions":0,"binary":false,"changes":191,"status":"added"},{"patch":"@@ -28,1 +28,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -34,2 +38,2 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.ConstantPool.CONSTANT_Methodref_info;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.constantpool.*;\n@@ -45,7 +49,7 @@\n-        InputStream in = NoObjectToString.class.getResourceAsStream(\"NoObjectToString$Test.class\");\n-        try {\n-            ClassFile cf = ClassFile.read(in);\n-            for (ConstantPool.CPInfo cpinfo: cf.constant_pool.entries()) {\n-                if (cpinfo.getTag() == ConstantPool.CONSTANT_Methodref) {\n-                    CONSTANT_Methodref_info ref = (CONSTANT_Methodref_info) cpinfo;\n-                    String methodDesc = ref.getClassInfo().getName() + \".\" + ref.getNameAndTypeInfo().getName() + \":\" + ref.getNameAndTypeInfo().getType();\n+        try (InputStream in = NoObjectToString.class.getResourceAsStream(\"NoObjectToString$Test.class\")) {\n+            assert in != null;\n+            ClassModel cm = Classfile.of().parse(in.readAllBytes());\n+            for (int i = 1; i < cm.constantPool().entryCount(); ++i) {\n+                PoolEntry pe = cm.constantPool().entryByIndex(i);\n+                if (pe instanceof MethodRefEntry ref) {\n+                    String methodDesc = ref.owner().name() + \".\" + ref.nameAndType().name() + \":\" + ref.nameAndType().type();\n@@ -58,4 +62,0 @@\n-        } catch (ConstantPoolException ignore) {\n-            throw new AssertionError(ignore);\n-        } finally {\n-            in.close();\n","filename":"test\/langtools\/tools\/javac\/resolve\/NoObjectToString.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -38,2 +43,0 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info;\n@@ -42,0 +45,2 @@\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.PermittedSubclassesAttribute;\n@@ -75,1 +80,1 @@\n-            void check(ClassFile classFile) throws Exception {\n+            void check(ClassModel classFile) throws Exception {\n@@ -77,3 +82,3 @@\n-                for (Attribute attr: classFile.attributes) {\n-                    if (attr.getName(classFile.constant_pool).equals(\"PermittedSubclasses\")) {\n-                        PermittedSubclasses_attribute permittedSubclasses = (PermittedSubclasses_attribute)attr;\n+                for (Attribute<?> attr: classFile.attributes()) {\n+                    if (attr.attributeName().equals(\"PermittedSubclasses\")) {\n+                        PermittedSubclassesAttribute permittedSubclasses = (PermittedSubclassesAttribute)attr;\n@@ -81,2 +86,2 @@\n-                        if (permittedSubclasses.subtypes == null || permittedSubclasses.subtypes.length == 0) {\n-                            throw new AssertionError(classFile.getName() + \" should be sealed\");\n+                        if (permittedSubclasses.permittedSubclasses().isEmpty()) {\n+                            throw new AssertionError(classFile.thisClass().name() + \" should be sealed\");\n@@ -87,1 +92,1 @@\n-                    throw new AssertionError(classFile.getName() + \" should be sealed\");\n+                    throw new AssertionError(classFile.thisClass().name() + \" should be sealed\");\n@@ -92,3 +97,3 @@\n-            void check(ClassFile classFile) throws Exception {\n-                if ((classFile.access_flags.flags & Flags.FINAL) == 0) {\n-                    throw new AssertionError(classFile.getName() + \" should be final\");\n+            void check(ClassModel classFile) throws Exception {\n+                if ((classFile.flags().flagsMask() & Flags.FINAL) == 0) {\n+                    throw new AssertionError(classFile.thisClass().name() + \" should be final\");\n@@ -99,4 +104,4 @@\n-            void check(ClassFile classFile) throws Exception {\n-                for (Attribute attr: classFile.attributes) {\n-                    if (attr.getName(classFile.constant_pool).equals(\"PermittedSubclasses\")) {\n-                        throw new AssertionError(classFile.getName() + \" should not be sealed\");\n+            void check(ClassModel classFile) throws Exception {\n+                for (Attribute<?> attr: classFile.attributes()) {\n+                    if (attr.attributeName().equals(\"PermittedSubclasses\")) {\n+                        throw new AssertionError(classFile.thisClass().name() + \" should not be sealed\");\n@@ -105,2 +110,2 @@\n-                if ((classFile.access_flags.flags & Flags.FINAL) != 0) {\n-                    throw new AssertionError(classFile.getName() + \" should not be final\");\n+                if ((classFile.flags().flagsMask() & Flags.FINAL) != 0) {\n+                    throw new AssertionError(classFile.thisClass().name() + \" should not be final\");\n@@ -111,1 +116,1 @@\n-        abstract void check(ClassFile classFile) throws Exception;\n+        abstract void check(ClassModel classFile) throws Exception;\n@@ -114,1 +119,1 @@\n-    void checkClassFile(final ClassFile classFile, CheckFor... checkFor) throws Exception {\n+    void checkClassFile(final ClassModel classFile, CheckFor... checkFor) throws Exception {\n","filename":"test\/langtools\/tools\/javac\/sealed\/CheckSubtypesOfSealedTest.java","additions":26,"deletions":21,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8029800 8043186\n+ * @bug 8029800 8043186 8313693\n@@ -32,0 +32,1 @@\n+import java.util.List;\n@@ -35,0 +36,1 @@\n+import com.sun.tools.javac.util.StringUtils.DamerauLevenshteinDistance;\n@@ -56,0 +58,51 @@\n+\n+        \/\/verify Damerau-Levenshtein\n+\n+        assertEquals(3, DamerauLevenshteinDistance.of(\"kitten\", \"sitting\"));\n+        \/\/ note that the restricted Damerau-Levenshtein distance would be 3, not 2:\n+        assertEquals(2, DamerauLevenshteinDistance.of(\"ca\", \"abc\"));\n+        \/\/verify strings comprising only non-LATIN1 characters\n+        assertEquals(1, DamerauLevenshteinDistance.of(\"\\u0438\\u044e\\u043d\\u044c\",\n+                \"\\u0438\\u044e\\u043b\\u044c\"));\n+        \/\/verify strings comprising mixed characters: non-LATIN1 and ASCII\n+        \/\/ it's important to start with ASCII characters, so that we\n+        \/\/ test switching a storage (see current implementation)\n+        assertEquals(2, DamerauLevenshteinDistance.of(\"c\\u043ede\", \"cod\\u0435\"));\n+\n+        \/\/verify metric properties\n+        for (String a : List.of(\"\", \"a\", \"b\", \"abc\")) {\n+            for (String b : List.of(\"\", \"a\", \"b\", \"abc\")) {\n+                assertNonNegativity(a, b);\n+                assertSymmetry(a, b);\n+            }\n+        }\n+\n+        for (String a : List.of(\"\", \"a\", \"b\", \"c\")) {\n+            for (String b : List.of(\"ab\", \"ac\", \"bc\")) {\n+                for (String c : List.of(\"abc\", \"bca\", \"cab\")) {\n+                    assertTriangleInequality(a, b, c);\n+                    assertTriangleInequality(b, c, a);\n+                    assertTriangleInequality(c, a, b);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void assertNonNegativity(String a, String b) {\n+        if (a.equals(b)) {\n+            assertEquals(0, DamerauLevenshteinDistance.of(a, b));\n+        } else {\n+            assertTrue(DamerauLevenshteinDistance.of(a, b) > 0);\n+        }\n+    }\n+\n+    private void assertSymmetry(String a, String b) {\n+        assertEquals(DamerauLevenshteinDistance.of(a, b),\n+                DamerauLevenshteinDistance.of(b, a));\n+    }\n+\n+    private void assertTriangleInequality(String a, String b, String c) {\n+        int ab = DamerauLevenshteinDistance.of(a, b);\n+        int bc = DamerauLevenshteinDistance.of(b, c);\n+        int ac = DamerauLevenshteinDistance.of(a, c);\n+        assertTrue(ab + bc >= ac);\n@@ -69,0 +122,6 @@\n+\n+    void assertTrue(boolean cond) {\n+        if (!cond) {\n+            throw new IllegalStateException();\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/util\/StringUtilsTest.java","additions":61,"deletions":2,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-requiredVersion=7.2+1\n+requiredVersion=7.3+1\n","filename":"test\/lib-test\/TEST.ROOT","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -365,0 +365,21 @@\n+    \/**\n+     * Returns the usual file prefix of a shared library, e.g. \"lib\" on linux, empty on windows.\n+     * @return file name prefix\n+     *\/\n+    public static String sharedLibraryPrefix() {\n+        if (isWindows()) {\n+            return \"\";\n+        } else {\n+            return \"lib\";\n+        }\n+    }\n+\n+    \/**\n+     * Returns the usual full shared lib name of a name without prefix and extension, e.g. for jsig\n+     * \"libjsig.so\" on linux, \"jsig.dll\" on windows.\n+     * @return the full shared lib name\n+     *\/\n+    public static String buildSharedLibraryName(String name) {\n+        return sharedLibraryPrefix() + name + \".\" + sharedLibraryExt();\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    qsort(ints, length, sizeof(jint), &comparator);\n+    qsort(ints, (size_t) length, sizeof(jint), &comparator);\n@@ -87,1 +87,1 @@\n-    qsort(carr, length, sizeof(jint), java_cmp);\n+    qsort(carr, (size_t) length, sizeof(jint), java_cmp);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libQSortJNI.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}