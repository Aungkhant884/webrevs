{"files":[{"patch":"@@ -822,1 +822,1 @@\n-        public final static String ATTR_NAME = \"abi\/kind\";\n+        public static final String ATTR_NAME = \"abi\/kind\";\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    private final static JavaLangInvokeAccess JLI = SharedSecrets.getJavaLangInvokeAccess();\n+    private static final JavaLangInvokeAccess JLI = SharedSecrets.getJavaLangInvokeAccess();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryHandles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,3 +60,3 @@\n-    final static int READ_ONLY = 1;\n-    final static int SMALL = READ_ONLY << 1;\n-    final static long NONCE = new Random().nextLong();\n+    static final int READ_ONLY = 1;\n+    static final int SMALL = READ_ONLY << 1;\n+    static final long NONCE = new Random().nextLong();\n@@ -64,1 +64,1 @@\n-    final static JavaNioAccess nioAccess = SharedSecrets.getJavaNioAccess();\n+    static final JavaNioAccess nioAccess = SharedSecrets.getJavaNioAccess();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private final static NativeLibraries nativeLibraries =\n+    private static final NativeLibraries nativeLibraries =\n@@ -54,1 +54,1 @@\n-    private final static Map<NativeLibrary, WeakReference<ResourceScope>> loadedLibraries = new ConcurrentHashMap<>();\n+    private static final Map<NativeLibrary, WeakReference<ResourceScope>> loadedLibraries = new ConcurrentHashMap<>();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-            final static ResourceCleanup CLOSED_LIST = new ResourceCleanup() {\n+            static final ResourceCleanup CLOSED_LIST = new ResourceCleanup() {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    private final static long MAX_MALLOC_ALIGN = Unsafe.ADDRESS_SIZE == 4 ? 8 : 16;\n+    private static final long MAX_MALLOC_ALIGN = Unsafe.ADDRESS_SIZE == 4 ? 8 : 16;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-        public final static String VARARGS_ATTRIBUTE_NAME = \"abi\/windows\/varargs\";\n+        public static final String VARARGS_ATTRIBUTE_NAME = \"abi\/windows\/varargs\";\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,4 +49,4 @@\n-    private final static int ALIVE = 0;\n-    private final static int CLOSING = -1;\n-    private final static int CLOSED = -2;\n-    private final static int MAX_FORKS = Integer.MAX_VALUE;\n+    private static final int ALIVE = 0;\n+    private static final int CLOSING = -1;\n+    private static final int CLOSED = -2;\n+    private static final int MAX_FORKS = Integer.MAX_VALUE;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/SharedScope.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    public final static SegmentAllocator THROWING_ALLOCATOR = (size, align) -> { throw new IllegalStateException(\"Cannot get here\"); };\n+    public static final SegmentAllocator THROWING_ALLOCATOR = (size, align) -> { throw new IllegalStateException(\"Cannot get here\"); };\n@@ -418,1 +418,1 @@\n-        final static LibraryLookup LOOKUP = LibraryLookup.ofDefault();\n+        static final LibraryLookup LOOKUP = LibraryLookup.ofDefault();\n@@ -420,1 +420,1 @@\n-        final static MethodHandle MH_MALLOC = getSystemLinker().downcallHandle(LOOKUP.lookup(\"malloc\").get(),\n+        static final MethodHandle MH_MALLOC = getSystemLinker().downcallHandle(LOOKUP.lookup(\"malloc\").get(),\n@@ -424,1 +424,1 @@\n-        final static MethodHandle MH_FREE = getSystemLinker().downcallHandle(LOOKUP.lookup(\"free\").get(),\n+        static final MethodHandle MH_FREE = getSystemLinker().downcallHandle(LOOKUP.lookup(\"free\").get(),\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}