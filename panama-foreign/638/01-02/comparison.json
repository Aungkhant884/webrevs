{"files":[{"patch":"@@ -60,0 +60,1 @@\n+import java.util.function.BiPredicate;\n@@ -208,2 +209,2 @@\n-    private Class<?> popType() {\n-        return typeStack.pop();\n+    private Class<?> popType(Class<?> expected) {\n+        return popType(expected, ASSERT_EQUALS);\n@@ -212,1 +213,1 @@\n-    private Class<?> popType(Class<?> expected) {\n+    private Class<?> popType(Class<?> expected, BiPredicate<Class<?>, Class<?>> typePredicate) {\n@@ -214,1 +215,1 @@\n-        if ((found = popType()) != expected) {\n+        if (!typePredicate.test(expected, found = typeStack.pop())) {\n@@ -222,0 +223,3 @@\n+    private static final BiPredicate<Class<?>, Class<?>> ASSERT_EQUALS = Class::equals;\n+    private static final BiPredicate<Class<?>, Class<?>> ASSERT_ASSIGNABLE = Class::isAssignableFrom;\n+\n@@ -559,2 +563,1 @@\n-        Class<?> stackType = popType();\n-        assert Addressable.class.isAssignableFrom(stackType);\n+        popType(Addressable.class, ASSERT_ASSIGNABLE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"}]}