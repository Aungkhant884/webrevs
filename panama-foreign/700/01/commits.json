[{"commit":{"message":"Previous version created performance drop for `LoopOverNonConstantHeap` benchamrk, this fixes this and keeps same results for tests with vectors."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MixedAccessBenchmarks.java"}],"sha":"aadb898872838e1ce63d25d6be2aa731dde87edc"},{"commit":{"message":"Prevent maxAlign virtual calls for polluted accesses\n\nIn case of polluted accesses (when different kinds of segments are accessed\nfrom same code), `maxAlign()` can get virtual call which would prevent\neffective inlining and loop optimizations.\n\nThis patch moves `maxAlign` to `AbstractMemorySegmentImpl` field, and makes method\nfinal. The value of align is passed as constructor argument.\n\nAfter\n```\nBenchmark                                  (size)  Mode  Cnt       Score     Error  Units\nMixedAccessBenchmarks.directCopy          1048576  avgt   10   16410.733 ±  79.901  ns\/op\nMixedAccessBenchmarks.pollutedAccessCopy  1048576  avgt   10  168497.502 ± 632.578  ns\/op\n```\n\nBefore\n```\nBenchmark                                  (size)  Mode  Cnt        Score        Error  Units\nMixedAccessBenchmarks.directCopy          1048576  avgt   10    18336.054 ±     63.133  ns\/op\nMixedAccessBenchmarks.pollutedAccessCopy  1048576  avgt   10  2069032.456 ± 167512.633  ns\/op\n```"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MixedAccessBenchmarks.java"}],"sha":"8f276c42287143d0684654bd849d553af3be5b4f"}]