{"files":[{"patch":"@@ -315,1 +315,1 @@\n-        return Utils.bitsToBytesOrThrow(bitOffset(elements), Utils.bitsToBytesThrowOffset);\n+        return Utils.bitsToBytesOrThrow(bitOffset(elements), Utils.BITS_TO_BYTES_THROW_OFFSET);\n@@ -351,1 +351,1 @@\n-        mh = MethodHandles.filterReturnValue(mh, Utils.MH_bitsToBytesOrThrowForOffset);\n+        mh = MethodHandles.filterReturnValue(mh, Utils.MH_BITS_TO_BYTES_OR_THROW_FOR_OFFSET);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-            Utils.bitsToBytesOrThrow(offset, Utils.bitsToBytesThrowOffset);\n+            Utils.bitsToBytesOrThrow(offset, Utils.BITS_TO_BYTES_THROW_OFFSET);\n@@ -191,1 +191,1 @@\n-        offsetHandle = MethodHandles.filterReturnValue(offsetHandle, Utils.MH_bitsToBytesOrThrowForOffset); \/\/ byte offset\n+        offsetHandle = MethodHandles.filterReturnValue(offsetHandle, Utils.MH_BITS_TO_BYTES_OR_THROW_FOR_OFFSET); \/\/ byte offset\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,2 +51,3 @@\n-    private static final MethodHandle LONG_TO_ADDRESS_SAFE, LONG_TO_ADDRESS_UNSAFE;\n-    public static final MethodHandle MH_bitsToBytesOrThrowForOffset;\n+    private static final MethodHandle LONG_TO_ADDRESS_SAFE;\n+    private static final MethodHandle LONG_TO_ADDRESS_UNSAFE;\n+    public static final MethodHandle MH_BITS_TO_BYTES_OR_THROW_FOR_OFFSET;\n@@ -54,1 +55,1 @@\n-    public static final Supplier<RuntimeException> bitsToBytesThrowOffset\n+    public static final Supplier<RuntimeException> BITS_TO_BYTES_THROW_OFFSET\n@@ -70,1 +71,1 @@\n-            MH_bitsToBytesOrThrowForOffset = MethodHandles.insertArguments(\n+            MH_BITS_TO_BYTES_OR_THROW_FOR_OFFSET = MethodHandles.insertArguments(\n@@ -74,1 +75,1 @@\n-                    bitsToBytesThrowOffset);\n+                    BITS_TO_BYTES_THROW_OFFSET);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    private static final Unsafe U = Unsafe.getUnsafe();\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n@@ -134,1 +134,1 @@\n-        long ptr = U.allocateMemory(LAYOUT.byteSize());\n+        long ptr = UNSAFE.allocateMemory(LAYOUT.byteSize());\n@@ -136,1 +136,1 @@\n-        ms.session().addCloseAction(() -> U.freeMemory(ptr));\n+        ms.session().addCloseAction(() -> UNSAFE.freeMemory(ptr));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64VaList.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -91,4 +91,0 @@\n-    public boolean isPadding() {\n-        return false;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,5 +76,0 @@\n-    @Override\n-    public boolean isPadding() {\n-        return true;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/PaddingLayoutImpl.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}