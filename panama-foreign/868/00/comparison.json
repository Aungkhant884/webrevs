{"files":[{"patch":"@@ -115,1 +115,1 @@\n-     * into a new memory segment obtained by calling {@code this.allocate(B + N, 1)}, where:\n+     * into a new memory segment obtained by calling {@code this.allocate(B + N)}, where:\n@@ -129,1 +129,1 @@\n-        MemorySegment segment = allocateNoInit(bytes.length + termCharSize, 1);\n+        MemorySegment segment = allocateNoInit(bytes.length + termCharSize);\n@@ -139,2 +139,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -147,1 +146,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -154,2 +153,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -162,1 +160,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -169,2 +167,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -177,1 +174,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -184,2 +181,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -192,1 +188,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -199,2 +195,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -207,1 +202,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -214,2 +209,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -222,1 +216,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -229,2 +223,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -237,1 +230,1 @@\n-        MemorySegment addr = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment addr = allocateNoInit(layout);\n@@ -245,2 +238,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout)}.\n@@ -254,1 +246,1 @@\n-        MemorySegment segment = allocateNoInit(layout.byteSize(), layout.byteAlignment());\n+        MemorySegment segment = allocateNoInit(layout);\n@@ -261,2 +253,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -273,2 +264,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -285,2 +275,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -297,2 +286,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -309,2 +297,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -321,2 +308,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -333,2 +319,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(elements.length * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout, array.length)}.\n@@ -343,0 +328,1 @@\n+    @ForceInline\n@@ -345,2 +331,1 @@\n-        Objects.requireNonNull(elementLayout);\n-        MemorySegment segment = allocateNoInit(elementLayout.byteSize() * size, elementLayout.byteAlignment());\n+        MemorySegment segment = allocateNoInit(Objects.requireNonNull(elementLayout), size);\n@@ -355,2 +340,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(layout.byteSize(), layout.byteAlignment())}.\n@@ -367,2 +351,1 @@\n-     * @implSpec the default implementation for this method calls\n-     * {@code this.allocate(count * elementLayout.byteSize(), elementLayout.byteAlignment())}.\n+     * @implSpec the default implementation for this method calls {@code this.allocate(MemoryLayout.sequenceLayout(count, elementLayout))}.\n@@ -447,1 +430,15 @@\n-    private MemorySegment allocateNoInit(long byteSize, long byteAlignment) {\n+    private MemorySegment allocateNoInit(long byteSize) {\n+        return this instanceof ArenaImpl arenaImpl ?\n+                arenaImpl.allocateNoInit(byteSize, 1) :\n+                allocate(byteSize);\n+    }\n+\n+    @ForceInline\n+    private MemorySegment allocateNoInit(MemoryLayout layout) {\n+        return this instanceof ArenaImpl arenaImpl ?\n+                arenaImpl.allocateNoInit(layout.byteSize(), layout.byteAlignment()) :\n+                allocate(layout);\n+    }\n+\n+    @ForceInline\n+    private MemorySegment allocateNoInit(MemoryLayout layout, long size) {\n@@ -449,2 +446,2 @@\n-                arenaImpl.allocateNoInit(byteSize, byteAlignment) :\n-                allocate(byteSize, byteAlignment);\n+                arenaImpl.allocateNoInit(layout.byteSize() * size, layout.byteAlignment()) :\n+                allocate(layout, size);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":46,"deletions":49,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -167,3 +167,11 @@\n-        SegmentAllocator allocator = (bytesSize, byteAlignment) -> {\n-            calls.incrementAndGet();\n-            return null;\n+        SegmentAllocator allocator = new SegmentAllocator() {\n+            @Override\n+            public MemorySegment allocate(long bytesSize, long byteAlignment) {\n+                return null;\n+            }\n+\n+            @Override\n+            public MemorySegment allocate(MemoryLayout elementLayout, long count) {\n+                calls.incrementAndGet();\n+                return null;\n+            };\n@@ -184,3 +192,12 @@\n-        SegmentAllocator allocator = (byteSize, byteAlignment) -> {\n-            calls.incrementAndGet();\n-            return Arena.ofAuto().allocate(byteSize, byteAlignment);\n+        SegmentAllocator allocator = new SegmentAllocator() {\n+            @Override\n+\n+            public MemorySegment allocate(long byteSize, long byteAlignment) {\n+                return Arena.ofAuto().allocate(byteSize, byteAlignment);\n+            }\n+\n+            @Override\n+            public MemorySegment allocate(long size) {\n+                calls.incrementAndGet();\n+                return allocate(size, 1);\n+            };\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":23,"deletions":6,"binary":false,"changes":29,"status":"modified"}]}