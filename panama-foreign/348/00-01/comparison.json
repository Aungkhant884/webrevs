{"files":[{"patch":"@@ -111,1 +111,1 @@\n-     * @param path the library path.\n+     * @param path the library absolute path.\n@@ -113,0 +113,2 @@\n+     * @throws IllegalArgumentException if the specified path does not correspond to an absolute path,\n+     * e.g. if {@code !path.isAbsolute()}.\n@@ -116,1 +118,4 @@\n-        String absolutePath = path.toAbsolutePath().toString();\n+        if (!path.isAbsolute()) {\n+            throw new IllegalArgumentException(\"Not an absolute path: \" + path.toString());\n+        }\n+        String absolutePath = path.toString();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/LibraryLookup.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    @Test(expectedExceptions = IllegalArgumentException.class)\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"Library not found.*\")\n@@ -51,2 +51,2 @@\n-    @Test(expectedExceptions = IllegalArgumentException.class)\n-    public void testInvalidLookupPath() {\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"Not an absolute path.*\")\n+    public void testNoAbsoluteLookupPath() {\n@@ -56,0 +56,5 @@\n+    @Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"Library not found.*\")\n+    public void testInvalidLookupPath() {\n+        LibraryLookup.ofPath(Path.of(\"NonExistent\").toAbsolutePath());\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLibraryLookup.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}