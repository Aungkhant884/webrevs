{"files":[{"patch":"@@ -680,0 +680,1 @@\n+        \/\/ one level\n@@ -682,0 +683,4 @@\n+        \/\/ two levels\n+        assertEquals(segment.asSlice(0).asReadOnly().scope(), segment.scope());\n+        assertEquals(segment.asReadOnly().asSlice(0).scope(), segment.scope());\n+        \/\/ check fresh every time\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -120,0 +120,1 @@\n+        \/\/ one level\n@@ -122,0 +123,4 @@\n+        \/\/ two levels\n+        assertEquals(segment.asSlice(0).asReadOnly().scope(), segment.scope());\n+        assertEquals(segment.asReadOnly().asSlice(0).scope(), segment.scope());\n+        \/\/ check fresh every time\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -82,7 +82,1 @@\n-    final MemorySegment mismatchSegmentLarge2;\n-\n-    {\n-        mismatchSegmentLarge2 = arena.allocate(SIZE_WITH_TAIL, 1);\n-    }\n-\n-    ;\n+    final MemorySegment mismatchSegmentLarge2 = arena.allocate(SIZE_WITH_TAIL, 1);\n@@ -93,14 +87,2 @@\n-    final MemorySegment mismatchSegmentSmall1;\n-\n-    {\n-        mismatchSegmentSmall1 = arena.allocate(7, 1);\n-    }\n-\n-    ;\n-    final MemorySegment mismatchSegmentSmall2;\n-\n-    {\n-        mismatchSegmentSmall2 = arena.allocate(7, 1);\n-    }\n-\n-    ;\n+    final MemorySegment mismatchSegmentSmall1 = arena.allocate(7, 1);\n+    final MemorySegment mismatchSegmentSmall2 = arena.allocate(7, 1);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/BulkOps.java","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"}]}