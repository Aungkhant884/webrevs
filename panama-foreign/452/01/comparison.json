{"files":[{"patch":"@@ -276,0 +276,6 @@\n+        } catch (UncheckedIOException uioe) {\n+            err.println(uioe.getMessage());\n+            if (JextractTool.DEBUG) {\n+                uioe.printStackTrace(err);\n+            }\n+            return OUTPUT_ERROR;\n@@ -281,1 +287,1 @@\n-            return OUTPUT_ERROR;\n+            return RUNTIME_ERROR;\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/incubator\/jextract\/JextractTool.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.  Oracle designates this\n+ *  particular file as subject to the \"Classpath\" exception as provided\n+ *  by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+package jdk.internal.jextract.impl;\n+\n+public class CompilationFailedException extends RuntimeException {\n+    private static final long serialVersionUID = 1L;\n+\n+    public CompilationFailedException(String msg) {\n+        super(msg);\n+    }\n+\n+    public CompilationFailedException(String msg, Throwable cause) {\n+        super(msg, cause);\n+    }\n+}\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/CompilationFailedException.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -53,1 +53,1 @@\n-            throw new RuntimeException(\"In memory compilation failed: \" + writer.toString());\n+            throw new CompilationFailedException(\"In memory compilation failed: \" + writer.toString());\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/InMemoryJavaCompiler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}