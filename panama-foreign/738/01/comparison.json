{"files":[{"patch":"@@ -3,1 +3,3 @@\n-For build instructions please see the [online documentation](https:\/\/openjdk.java.net\/groups\/build\/doc\/building.html), or either of these files:\n+For build instructions please see the\n+[online documentation](https:\/\/openjdk.org\/groups\/build\/doc\/building.html),\n+or either of these files:\n@@ -8,1 +10,2 @@\n-See <https:\/\/openjdk.java.net\/> for more information about the OpenJDK Community and the JDK.\n+See <https:\/\/openjdk.org\/> for more information about\n+the OpenJDK Community and the JDK.\n@@ -12,1 +15,1 @@\n-===================\n+\n","filename":"README.md","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-<code>git clone https:\/\/git.openjdk.java.net\/jdk\/<\/code><\/p><\/li>\n+<code>git clone https:\/\/git.openjdk.org\/jdk\/<\/code><\/p><\/li>\n@@ -139,1 +139,1 @@\n-<p>If you just want to use the JDK and not build it yourself, this document is not for you. See for instance <a href=\"http:\/\/openjdk.java.net\/install\">OpenJDK installation<\/a> for some methods of installing a prebuilt JDK.<\/p>\n+<p>If you just want to use the JDK and not build it yourself, this document is not for you. See for instance <a href=\"http:\/\/openjdk.org\/install\">OpenJDK installation<\/a> for some methods of installing a prebuilt JDK.<\/p>\n@@ -141,1 +141,1 @@\n-<p>Make sure you are getting the correct version. As of JDK 10, the source is no longer split into separate repositories so you only need to clone one single repository. At the <a href=\"https:\/\/git.openjdk.java.net\/\">OpenJDK Git site<\/a> you can see a list of all available repositories. If you want to build an older version, e.g. JDK 11, it is recommended that you get the <code>jdk11u<\/code> repo, which contains incremental updates, instead of the <code>jdk11<\/code> repo, which was frozen at JDK 11 GA.<\/p>\n+<p>Make sure you are getting the correct version. As of JDK 10, the source is no longer split into separate repositories so you only need to clone one single repository. At the <a href=\"https:\/\/git.openjdk.org\/\">OpenJDK Git site<\/a> you can see a list of all available repositories. If you want to build an older version, e.g. JDK 11, it is recommended that you get the <code>jdk11u<\/code> repo, which contains incremental updates, instead of the <code>jdk11<\/code> repo, which was frozen at JDK 11 GA.<\/p>\n@@ -155,1 +155,1 @@\n-<li><p>The Cygwin <code>git<\/code> client has no line ending issues and understands Cygwin paths (which are used throughout the JDK build system). However, it does not currently work well with the Skara CLI tooling. Please see the <a href=\"https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Skara#Skara-Git\">Skara wiki on Git clients<\/a> for up-to-date information about the Skara git client support.<\/p><\/li>\n+<li><p>The Cygwin <code>git<\/code> client has no line ending issues and understands Cygwin paths (which are used throughout the JDK build system). However, it does not currently work well with the Skara CLI tooling. Please see the <a href=\"https:\/\/wiki.openjdk.org\/display\/SKARA\/Skara#Skara-Git\">Skara wiki on Git clients<\/a> for up-to-date information about the Skara git client support.<\/p><\/li>\n@@ -201,1 +201,1 @@\n-<p>The Build Group has a wiki page with <a href=\"https:\/\/wiki.openjdk.java.net\/display\/Build\/Supported+Build+Platforms\">Supported Build Platforms<\/a>. From time to time, this is updated by contributors to list successes or failures of building on different platforms.<\/p>\n+<p>The Build Group has a wiki page with <a href=\"https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms\">Supported Build Platforms<\/a>. From time to time, this is updated by contributors to list successes or failures of building on different platforms.<\/p>\n@@ -240,1 +240,1 @@\n-<p>Please consult the AIX section of the <a href=\"https:\/\/wiki.openjdk.java.net\/display\/Build\/Supported+Build+Platforms\">Supported Build Platforms<\/a> OpenJDK Build Wiki page for details about which versions of AIX are supported.<\/p>\n+<p>Please consult the AIX section of the <a href=\"https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms\">Supported Build Platforms<\/a> OpenJDK Build Wiki page for details about which versions of AIX are supported.<\/p>\n@@ -311,1 +311,1 @@\n-<p>Please consult the AIX section of the <a href=\"https:\/\/wiki.openjdk.java.net\/display\/Build\/Supported+Build+Platforms\">Supported Build Platforms<\/a> OpenJDK Build Wiki page for details about which versions of XLC are supported.<\/p>\n+<p>Please consult the AIX section of the <a href=\"https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms\">Supported Build Platforms<\/a> OpenJDK Build Wiki page for details about which versions of XLC are supported.<\/p>\n@@ -515,2 +515,2 @@\n-<p>Most of the JDK tests are using the <a href=\"http:\/\/openjdk.java.net\/jtreg\">JTReg<\/a> test framework. Make sure that your configuration knows where to find your installation of JTReg. If this is not picked up automatically, use the <code>--with-jtreg=&lt;path to jtreg home&gt;<\/code> option to point to the JTReg framework. Note that this option should point to the JTReg home, i.e. the top directory, containing <code>lib\/jtreg.jar<\/code> etc.<\/p>\n-<p>The <a href=\"https:\/\/wiki.openjdk.java.net\/display\/Adoption\">Adoption Group<\/a> provides recent builds of jtreg <a href=\"https:\/\/ci.adoptopenjdk.net\/view\/Dependencies\/job\/dependency_pipeline\/lastSuccessfulBuild\/artifact\/jtreg\/\">here<\/a>. Download the latest <code>.tar.gz<\/code> file, unpack it, and point <code>--with-jtreg<\/code> to the <code>jtreg<\/code> directory that you just unpacked.<\/p>\n+<p>Most of the JDK tests are using the <a href=\"http:\/\/openjdk.org\/jtreg\">JTReg<\/a> test framework. Make sure that your configuration knows where to find your installation of JTReg. If this is not picked up automatically, use the <code>--with-jtreg=&lt;path to jtreg home&gt;<\/code> option to point to the JTReg framework. Note that this option should point to the JTReg home, i.e. the top directory, containing <code>lib\/jtreg.jar<\/code> etc.<\/p>\n+<p>The <a href=\"https:\/\/wiki.openjdk.org\/display\/Adoption\">Adoption Group<\/a> provides recent builds of jtreg <a href=\"https:\/\/ci.adoptopenjdk.net\/view\/Dependencies\/job\/dependency_pipeline\/lastSuccessfulBuild\/artifact\/jtreg\/\">here<\/a>. Download the latest <code>.tar.gz<\/code> file, unpack it, and point <code>--with-jtreg<\/code> to the <code>jtreg<\/code> directory that you just unpacked.<\/p>\n@@ -899,1 +899,1 @@\n-<p>If none of the suggestions in this document helps you, or if you find what you believe is a bug in the build system, please contact the Build Group by sending a mail to <a href=\"mailto:build-dev@openjdk.java.net\">build-dev@openjdk.java.net<\/a>. Please include the relevant parts of the configure and\/or build log.<\/p>\n+<p>If none of the suggestions in this document helps you, or if you find what you believe is a bug in the build system, please contact the Build Group by sending a mail to <a href=\"mailto:build-dev@openjdk.org\">build-dev@openjdk.org<\/a>. Please include the relevant parts of the configure and\/or build log.<\/p>\n@@ -1040,1 +1040,1 @@\n-<p>Please check that you adhere to the <a href=\"http:\/\/openjdk.java.net\/groups\/build\/doc\/code-conventions.html\">Code Conventions for the Build System<\/a> before submitting patches.<\/p>\n+<p>Please check that you adhere to the <a href=\"http:\/\/openjdk.org\/groups\/build\/doc\/code-conventions.html\">Code Conventions for the Build System<\/a> before submitting patches.<\/p>\n@@ -1044,2 +1044,2 @@\n-<p>The official place to start is the <a href=\"http:\/\/openjdk.java.net\/contribute\/\">'How to contribute' page<\/a>. There is also an official (but somewhat outdated and skimpy on details) <a href=\"http:\/\/openjdk.java.net\/guide\/\">Developer's Guide<\/a>.<\/p>\n-<p>If this seems overwhelming to you, the Adoption Group is there to help you! A good place to start is their <a href=\"https:\/\/wiki.openjdk.java.net\/display\/Adoption\/New+Contributor\">'New Contributor' page<\/a>, or start reading the comprehensive <a href=\"https:\/\/adoptopenjdk.gitbooks.io\/adoptopenjdk-getting-started-kit\/en\/\">Getting Started Kit<\/a>. The Adoption Group will also happily answer any questions you have about contributing. Contact them by <a href=\"http:\/\/mail.openjdk.java.net\/mailman\/listinfo\/adoption-discuss\">mail<\/a> or <a href=\"http:\/\/openjdk.java.net\/irc\/\">IRC<\/a>.<\/p>\n+<p>The official place to start is the <a href=\"http:\/\/openjdk.org\/contribute\/\">'How to contribute' page<\/a>. There is also an official (but somewhat outdated and skimpy on details) <a href=\"http:\/\/openjdk.org\/guide\/\">Developer's Guide<\/a>.<\/p>\n+<p>If this seems overwhelming to you, the Adoption Group is there to help you! A good place to start is their <a href=\"https:\/\/wiki.openjdk.org\/display\/Adoption\/New+Contributor\">'New Contributor' page<\/a>, or start reading the comprehensive <a href=\"https:\/\/adoptopenjdk.gitbooks.io\/adoptopenjdk-getting-started-kit\/en\/\">Getting Started Kit<\/a>. The Adoption Group will also happily answer any questions you have about contributing. Contact them by <a href=\"http:\/\/mail.openjdk.org\/mailman\/listinfo\/adoption-discuss\">mail<\/a> or <a href=\"http:\/\/openjdk.org\/irc\/\">IRC<\/a>.<\/p>\n","filename":"doc\/building.html","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-    `git clone https:\/\/git.openjdk.java.net\/jdk\/`\n+    `git clone https:\/\/git.openjdk.org\/jdk\/`\n@@ -43,1 +43,1 @@\n-http:\/\/openjdk.java.net\/install) for some methods of installing a prebuilt\n+http:\/\/openjdk.org\/install) for some methods of installing a prebuilt\n@@ -50,1 +50,1 @@\n-repository. At the [OpenJDK Git site](https:\/\/git.openjdk.java.net\/) you\n+repository. At the [OpenJDK Git site](https:\/\/git.openjdk.org\/) you\n@@ -99,1 +99,1 @@\n-          https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Skara#Skara-Git) for\n+          https:\/\/wiki.openjdk.org\/display\/SKARA\/Skara#Skara-Git) for\n@@ -176,1 +176,1 @@\n-https:\/\/wiki.openjdk.java.net\/display\/Build\/Supported+Build+Platforms). From\n+https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms). From\n@@ -306,1 +306,1 @@\n-https:\/\/wiki.openjdk.java.net\/display\/Build\/Supported+Build+Platforms) OpenJDK\n+https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms) OpenJDK\n@@ -400,1 +400,1 @@\n-https:\/\/wiki.openjdk.java.net\/display\/Build\/Supported+Build+Platforms) OpenJDK\n+https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms) OpenJDK\n@@ -851,1 +851,1 @@\n-Most of the JDK tests are using the [JTReg](http:\/\/openjdk.java.net\/jtreg)\n+Most of the JDK tests are using the [JTReg](http:\/\/openjdk.org\/jtreg)\n@@ -858,1 +858,1 @@\n-The [Adoption Group](https:\/\/wiki.openjdk.java.net\/display\/Adoption) provides\n+The [Adoption Group](https:\/\/wiki.openjdk.org\/display\/Adoption) provides\n@@ -1551,1 +1551,1 @@\n-a mail to [build-dev@openjdk.java.net](mailto:build-dev@openjdk.java.net).\n+a mail to [build-dev@openjdk.org](mailto:build-dev@openjdk.org).\n@@ -1961,1 +1961,1 @@\n-http:\/\/openjdk.java.net\/groups\/build\/doc\/code-conventions.html) before\n+http:\/\/openjdk.org\/groups\/build\/doc\/code-conventions.html) before\n@@ -1974,1 +1974,1 @@\n-http:\/\/openjdk.java.net\/contribute\/). There is also an official (but somewhat\n+http:\/\/openjdk.org\/contribute\/). There is also an official (but somewhat\n@@ -1976,1 +1976,1 @@\n-http:\/\/openjdk.java.net\/guide\/).\n+http:\/\/openjdk.org\/guide\/).\n@@ -1980,1 +1980,1 @@\n-https:\/\/wiki.openjdk.java.net\/display\/Adoption\/New+Contributor), or start\n+https:\/\/wiki.openjdk.org\/display\/Adoption\/New+Contributor), or start\n@@ -1985,2 +1985,2 @@\n-http:\/\/mail.openjdk.java.net\/mailman\/listinfo\/adoption-discuss) or [IRC](\n-http:\/\/openjdk.java.net\/irc\/).\n+http:\/\/mail.openjdk.org\/mailman\/listinfo\/adoption-discuss) or [IRC](\n+http:\/\/openjdk.org\/irc\/).\n","filename":"doc\/building.md","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-<p>Proposed changes should be discussed on the <a href=\"mailto:hotspot-dev@openjdk.java.net\">HotSpot Developers<\/a> mailing list. Changes are likely to be cautious and incremental, since HotSpot coders have been using these guidelines for years.<\/p>\n-<p>Substantive changes are approved by <a href=\"https:\/\/www.rfc-editor.org\/rfc\/rfc7282.html\">rough consensus<\/a> of the <a href=\"https:\/\/openjdk.java.net\/census#hotspot\">HotSpot Group<\/a> Members. The Group Lead determines whether consensus has been reached.<\/p>\n+<p>Proposed changes should be discussed on the <a href=\"mailto:hotspot-dev@openjdk.org\">HotSpot Developers<\/a> mailing list. Changes are likely to be cautious and incremental, since HotSpot coders have been using these guidelines for years.<\/p>\n+<p>Substantive changes are approved by <a href=\"https:\/\/www.rfc-editor.org\/rfc\/rfc7282.html\">rough consensus<\/a> of the <a href=\"https:\/\/openjdk.org\/census#hotspot\">HotSpot Group<\/a> Members. The Group Lead determines whether consensus has been reached.<\/p>\n@@ -241,1 +241,1 @@\n-<li><p><code>assert<\/code>. An issue that is quickly encountered is the <code>assert<\/code> macro name collision (<a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8007770\">JDK-8007770<\/a>). Some mechanism for addressing this would be needed before much of the Standard Library could be used. (Not all Standard Library implementations use assert in header files, but some do.)<\/p><\/li>\n+<li><p><code>assert<\/code>. An issue that is quickly encountered is the <code>assert<\/code> macro name collision (<a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8007770\">JDK-8007770<\/a>). Some mechanism for addressing this would be needed before much of the Standard Library could be used. (Not all Standard Library implementations use assert in header files, but some do.)<\/p><\/li>\n@@ -275,1 +275,1 @@\n-<p>As was discussed in the review for <a href=\"https:\/\/mail.openjdk.java.net\/pipermail\/hotspot-dev\/2019-September\/039487.html\">JDK-8230877<\/a>, <code>thread_local<\/code> allows dynamic initialization and destruction semantics. However, that support requires a run-time penalty for references to non-function-local <code>thread_local<\/code> variables defined in a different translation unit, even if they don't need dynamic initialization. Dynamic initialization and destruction of non-local <code>thread_local<\/code> variables also has the same ordering problems as for ordinary non-local variables. So we avoid use of <code>thread_local<\/code> in general, limiting its use to only those cases where dynamic initialization or destruction are essential. See <a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8282469\">JDK-8282469<\/a> for further discussion.<\/p>\n+<p>As was discussed in the review for <a href=\"https:\/\/mail.openjdk.org\/pipermail\/hotspot-dev\/2019-September\/039487.html\">JDK-8230877<\/a>, <code>thread_local<\/code> allows dynamic initialization and destruction semantics. However, that support requires a run-time penalty for references to non-function-local <code>thread_local<\/code> variables defined in a different translation unit, even if they don't need dynamic initialization. Dynamic initialization and destruction of non-local <code>thread_local<\/code> variables also has the same ordering problems as for ordinary non-local variables. So we avoid use of <code>thread_local<\/code> in general, limiting its use to only those cases where dynamic initialization or destruction are essential. See <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8282469\">JDK-8282469<\/a> for further discussion.<\/p>\n","filename":"doc\/hotspot-style.html","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-[HotSpot Developers](mailto:hotspot-dev@openjdk.java.net) mailing\n+[HotSpot Developers](mailto:hotspot-dev@openjdk.org) mailing\n@@ -64,1 +64,1 @@\n-the [HotSpot Group](https:\/\/openjdk.java.net\/census#hotspot) Members.\n+the [HotSpot Group](https:\/\/openjdk.org\/census#hotspot) Members.\n@@ -553,1 +553,1 @@\n-collision ([JDK-8007770](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8007770)).\n+collision ([JDK-8007770](https:\/\/bugs.openjdk.org\/browse\/JDK-8007770)).\n@@ -664,1 +664,1 @@\n-[JDK-8230877](https:\/\/mail.openjdk.java.net\/pipermail\/hotspot-dev\/2019-September\/039487.html),\n+[JDK-8230877](https:\/\/mail.openjdk.org\/pipermail\/hotspot-dev\/2019-September\/039487.html),\n@@ -674,1 +674,1 @@\n-[JDK-8282469](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8282469)\n+[JDK-8282469](https:\/\/bugs.openjdk.org\/browse\/JDK-8282469)\n","filename":"doc\/hotspot-style.md","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-\t$(ECHO) '* If you still need assistance please contact build-dev@openjdk.java.net.'\n+\t$(ECHO) '* If you still need assistance please contact build-dev@openjdk.org.'\n","filename":"make\/Doctor.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1188,3 +1188,1 @@\n-    ifneq ($(and $(HG), $(wildcard $(TOPDIR)\/.hg)), )\n-      DIFF_COMMAND := $(HG) -R $(TOPDIR) diff -r $(TEST_OPTS_JCOV_DIFF_CHANGESET) > $(JCOV_SOURCE_DIFF)\n-    else ifneq ($(and $(GIT), $(wildcard $(TOPDIR)\/.git)), )\n+    ifneq ($(and $(GIT), $(wildcard $(TOPDIR)\/.git)), )\n@@ -1193,2 +1191,2 @@\n-      $(info Error: Must be either hg or git source tree for diff coverage.)\n-      $(error Neither hg nor git source tree.)\n+      $(info Error: Must be a git source tree for diff coverage.)\n+      $(error No git source tree.)\n","filename":"make\/RunTests.gmk","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -172,1 +172,0 @@\n-HG := hg\n","filename":"make\/RunTestsPrebuiltSpec.gmk","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,5 +45,1 @@\n-ifneq ($(and $(HG), $(wildcard $(TOPDIR)\/.hg)), )\n-  USE_SCM := true\n-  SCM_DIR := .hg\n-  ID_COMMAND := $(PRINTF) \"hg:%s\" \"$$($(HG) id -i)\"\n-else ifneq ($(and $(GIT), $(wildcard $(TOPDIR)\/.git)), )\n+ifneq ($(and $(GIT), $(wildcard $(TOPDIR)\/.git)), )\n@@ -88,1 +84,1 @@\n-  # Setup rules for all repos. This makes sure all the \"hg id\" calls are made\n+  # Setup rules for all repos. This makes sure all the \"git log\" calls are made\n","filename":"make\/SourceRevision.gmk","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-      AC_MSG_ERROR([Bad file permissions on src files. This is usually caused by cloning the repositories with a non cygwin hg in a directory not created in cygwin.])\n+      AC_MSG_ERROR([Bad file permissions on src files. This is usually caused by cloning the repositories with non cygwin tools in a directory not created in cygwin.])\n","filename":"make\/autoconf\/basic.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,0 @@\n-  UTIL_LOOKUP_PROGS(HG, hg)\n","filename":"make\/autoconf\/basic_tools.m4","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+export CODESIGN=\"@CODESIGN@\"\n","filename":"make\/autoconf\/compare.sh.in","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-AC_INIT(OpenJDK, openjdk, build-dev@openjdk.java.net,,http:\/\/openjdk.java.net)\n+AC_INIT(OpenJDK, openjdk, build-dev@openjdk.org,,https:\/\/openjdk.org)\n","filename":"make\/autoconf\/configure.ac","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -772,1 +772,0 @@\n-HG:=@HG@\n","filename":"make\/autoconf\/spec.gmk.in","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -406,0 +406,1 @@\n+    $1_MODFILELIST_FIXED := $$($1_MODFILELIST).fixed\n@@ -472,0 +473,6 @@\n+    # Convert the paths in the MODFILELIST file to Windows-style paths\n+    # on Windows. This is needed because javac operates on Windows-style paths\n+    # when running on Windows. On other platforms this just copies the MODFILELIST file.\n+    $$($1_MODFILELIST_FIXED): $$($1_MODFILELIST)\n+\t\t$$(call FixPathFile, $$($1_MODFILELIST), $$($1_MODFILELIST_FIXED))\n+\n@@ -475,1 +482,1 @@\n-        $$($1_MODFILELIST)\n+        $$($1_MODFILELIST_FIXED)\n@@ -480,1 +487,1 @@\n-\t\t        -XDmodifiedInputs=$$($1_MODFILELIST) \\\n+\t\t        -XDmodifiedInputs=$$($1_MODFILELIST_FIXED) \\\n","filename":"make\/common\/JavaCompilation.gmk","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-# Locate all hg repositories included in the forest, as absolute paths\n+# Locate all sourcecode repositories included in the forest, as absolute paths\n@@ -133,1 +133,0 @@\n-        $(addprefix $(TOPDIR)\/, .hg *\/.hg *\/*\/.hg *\/*\/*\/.hg *\/*\/*\/*\/.hg) \\\n@@ -137,1 +136,1 @@\n-# Locate all hg repositories included in the forest, as relative paths\n+# Locate all sourcecode repositories included in the forest, as relative paths\n@@ -446,0 +445,7 @@\n+#\n+# FixPathFile is the file version of FixPath. It instead takes a file with paths in $1\n+# and outputs the 'fixed' paths into the file in $2. If the file in $2 already exists\n+# it is overwritten.\n+# On non-Windows platforms this instead does a copy, so that $2 can still be used\n+# as a depenendency of a make rule, instead of having to conditionally depend on\n+# $1 instead, based on the target platform.\n@@ -449,0 +455,2 @@\n+  FixPathFile = \\\n+    $(shell $(FIXPATH_BASE) convert $1 $2)\n@@ -452,0 +460,2 @@\n+  FixPathFile = \\\n+      $(shell $(CP) $1 $2)\n","filename":"make\/common\/MakeBase.gmk","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-VENDOR_URL=https:\/\/openjdk.java.net\/\n+VENDOR_URL=https:\/\/openjdk.org\/\n","filename":"make\/conf\/branding.conf","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-LINUX_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk18\/43f95e8614114aeaa8e8a5fcf20a682d\/36\/GPL\/openjdk-18_linux-x64_bin.tar.gz\n-LINUX_X64_BOOT_JDK_SHA256=0f60aef7b8504983d6e374fe94d09a7bedcf05ec559e812d801a33bd4ebd23d0\n+LINUX_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk19\/877d6127e982470ba2a7faa31cc93d04\/36\/GPL\/openjdk-19_linux-x64_bin.tar.gz\n+LINUX_X64_BOOT_JDK_SHA256=f47aba585cfc9ecff1ed8e023524e8309f4315ed8b80100b40c7dcc232c12f96\n@@ -36,2 +36,2 @@\n-MACOS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk18\/43f95e8614114aeaa8e8a5fcf20a682d\/36\/GPL\/openjdk-18_macos-x64_bin.tar.gz\n-MACOS_X64_BOOT_JDK_SHA256=527b61b4265caf45cdcbacfcf8fbcd0b4b280bede1eff32a5b252d855ff0534b\n+MACOS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk19\/877d6127e982470ba2a7faa31cc93d04\/36\/GPL\/openjdk-19_macos-x64_bin.tar.gz\n+MACOS_X64_BOOT_JDK_SHA256=bfd33f5b2590fd552ae2d9231340c6b4704a872f927dce1c52860b78c49a5a11\n@@ -40,2 +40,2 @@\n-WINDOWS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk18\/43f95e8614114aeaa8e8a5fcf20a682d\/36\/GPL\/openjdk-18_windows-x64_bin.zip\n-WINDOWS_X64_BOOT_JDK_SHA256=a5b91d4c12752d44aa75df70ae3e2311287b3e60c288b07dade106376c688277\n+WINDOWS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk19\/877d6127e982470ba2a7faa31cc93d04\/36\/GPL\/openjdk-19_windows-x64_bin.zip\n+WINDOWS_X64_BOOT_JDK_SHA256=8fabcee7c4e8d3b53486777ecd27bb906d67d7c1efd1bf22a8290cf659afa487\n","filename":"make\/conf\/github-actions.conf","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -391,1 +391,1 @@\n-    common.boot_jdk_version = \"18\";\n+    common.boot_jdk_version = \"19\";\n@@ -556,1 +556,1 @@\n-    [ \"linux-x64\", \"macosx-x64\", \"windows-x64\", \"linux-aarch64\"]\n+    [ \"linux-x64\", \"macosx-aarch64\", \"macosx-x64\", \"windows-x64\", \"linux-aarch64\"]\n@@ -1150,1 +1150,1 @@\n-            revision: \"3.0-12-jdk-asm+1.0\",\n+            revision: \"3.0-13-jdk-asm+1.0\",\n","filename":"make\/conf\/jib-profiles.js","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"18 19 20\"\n+DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"19 20\"\n","filename":"make\/conf\/version-numbers.conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,3 @@\n-            Set<String> modified = new HashSet<>(Files.readAllLines(Paths.get(modifiedInputs)));\n+            Set<Path> modified = Files.readAllLines(Paths.get(modifiedInputs)).stream()\n+                                                                              .map(Paths::get)\n+                                                                              .collect(Collectors.toSet());\n@@ -258,1 +260,1 @@\n-            JavaCompiler compiler, Iterable<JavaFileObject> fileObjects, Set<String> modified,\n+            JavaCompiler compiler, Iterable<JavaFileObject> fileObjects, Set<Path> modified,\n@@ -275,0 +277,1 @@\n+                                        .map(Path::toString)\n@@ -278,1 +281,1 @@\n-            if (modified.contains(jfo.getName())) {\n+            if (modified.contains(Path.of(jfo.getName()))) {\n@@ -292,1 +295,1 @@\n-                if (!modified.contains(jfo.getName())) {\n+                if (!modified.contains(Path.of(jfo.getName()))) {\n@@ -323,0 +326,1 @@\n+                                                  .map(Path::toString)\n@@ -882,1 +886,1 @@\n-        private final Set<String> modified;\n+        private final Set<Path> modified;\n@@ -888,1 +892,1 @@\n-                                         Set<String> modified,\n+                                         Set<Path> modified,\n","filename":"make\/jdk\/src\/classes\/build\/tools\/depend\/Depend.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        \"<BR><b><a href=\\\"http:\/\/openjdk.java.net\/jeps\/11\\\">Incubating Feature.<\/a>\"\n+        \"<BR><b><a href=\\\"https:\/\/openjdk.org\/jeps\/11\\\">Incubating Feature.<\/a>\"\n","filename":"make\/jdk\/src\/classes\/build\/tools\/taglet\/Incubating.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,4 +46,7 @@\n-    DISABLED_WARNINGS_gcc := format-nonliteral unused-function, \\\n-    DISABLED_WARNINGS_clang := parentheses-equality constant-logical-operand \\\n-        format-nonliteral undef, \\\n-    DISABLED_WARNINGS_microsoft := 4244 4047 4133 4996, \\\n+    DISABLED_WARNINGS_gcc_net_util_md.c := format-nonliteral, \\\n+    DISABLED_WARNINGS_gcc_NetworkInterface.c := unused-function, \\\n+    DISABLED_WARNINGS_clang_net_util_md.c := format-nonliteral, \\\n+    DISABLED_WARNINGS_microsoft_InetAddress.c := 4244, \\\n+    DISABLED_WARNINGS_microsoft_NetworkInterface.c := 4133, \\\n+    DISABLED_WARNINGS_microsoft_NetworkInterface_winXP.c := 4133, \\\n+    DISABLED_WARNINGS_microsoft_ResolverConfigurationImpl.c := 4996, \\\n@@ -73,2 +76,0 @@\n-    DISABLED_WARNINGS_gcc := undef, \\\n-    DISABLED_WARNINGS_clang := undef, \\\n@@ -104,2 +105,1 @@\n-        DISABLED_WARNINGS_clang := deprecated-declarations \\\n-            missing-method-return-type, \\\n+        DISABLED_WARNINGS_clang_KeystoreImpl.m := deprecated-declarations, \\\n@@ -133,1 +133,0 @@\n-        DISABLED_WARNINGS_gcc := undef, \\\n","filename":"make\/modules\/java.base\/Lib.gmk","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    DISABLED_WARNINGS_gcc := sign-compare misleading-indentation array-bounds, \\\n+    DISABLED_WARNINGS_gcc := sign-compare, \\\n@@ -53,2 +53,6 @@\n-    DISABLED_WARNINGS_clang := sign-compare misleading-indentation, \\\n-    DISABLED_WARNINGS_microsoft := 4146 4244 4018, \\\n+    DISABLED_WARNINGS_clang := sign-compare, \\\n+    DISABLED_WARNINGS_microsoft := 4146, \\\n+    DISABLED_WARNINGS_microsoft_e_exp.c := 4244, \\\n+    DISABLED_WARNINGS_microsoft_s_ceil.c := 4018, \\\n+    DISABLED_WARNINGS_microsoft_s_expm1.c := 4244, \\\n+    DISABLED_WARNINGS_microsoft_s_floor.c := 4018, \\\n@@ -97,1 +101,1 @@\n-    DISABLED_WARNINGS_gcc := unused-result unused-function, \\\n+    DISABLED_WARNINGS_gcc_ProcessImpl_md.c := unused-result, \\\n@@ -138,2 +142,2 @@\n-    DISABLED_WARNINGS_gcc := unused-function implicit-fallthrough, \\\n-    DISABLED_WARNINGS_clang := format-nonliteral, \\\n+    DISABLED_WARNINGS_gcc_zip_util.c := unused-function, \\\n+    DISABLED_WARNINGS_clang_gzwrite.c := format-nonliteral, \\\n@@ -209,2 +213,2 @@\n-    DISABLED_WARNINGS_gcc := unused-function implicit-fallthrough, \\\n-    DISABLED_WARNINGS_clang := sometimes-uninitialized format-nonliteral, \\\n+    DISABLED_WARNINGS_gcc := unused-function, \\\n+    DISABLED_WARNINGS_clang := format-nonliteral, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+    STRIP=\"$STRIP -no_code_signature_warning\"\n@@ -677,1 +678,2 @@\n-    if [ \"$STRIP_ALL\" = \"true\" ] || [[ \"$STRIP_BEFORE_COMPARE\" = *\"$BIN_FILE\"* ]]; then\n+    if [ \"$STRIP_ALL\" = \"true\" ] || [[ \"$STRIP_BEFORE_COMPARE\" = *\"$BIN_FILE\"* ]] \\\n+           || [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n@@ -683,2 +685,9 @@\n-        $STRIP $THIS_STRIPPED_FILE\n-        $STRIP $OTHER_STRIPPED_FILE\n+        if [ \"$STRIP_ALL\" = \"true\" ] || [[ \"$STRIP_BEFORE_COMPARE\" = *\"$BIN_FILE\"* ]]; then\n+            $STRIP $THIS_STRIPPED_FILE\n+            $STRIP $OTHER_STRIPPED_FILE\n+        fi\n+        # On macosx, always remove any signature before comparing\n+        if [ \"$OPENJDK_TARGET_OS\" = \"macosx\" ]; then\n+            $CODESIGN --remove-signature $THIS_STRIPPED_FILE\n+            $CODESIGN --remove-signature $OTHER_STRIPPED_FILE\n+        fi\n","filename":"make\/scripts\/compare.sh","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -355,0 +355,15 @@\n+# Treat $1 as name of a file containing paths. Convert those paths to Windows style,\n+# and output them to the file specified by $2.\n+# If the output file already exists, it is overwritten.\n+function convert_file() {\n+  infile=\"$1\"\n+  outfile=\"$2\"\n+  if [[ -e $outfile ]] ; then\n+    rm $outfile\n+  fi\n+  while read line; do\n+    convert_path \"$line\"\n+    echo \"$result\" >> $outfile\n+  done < $infile\n+}\n+\n@@ -501,0 +516,2 @@\n+elif [[ \"$ACTION\" == \"convert\" ]] ; then\n+  convert_file \"$@\"\n","filename":"make\/scripts\/fixpath.sh","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-OpenJDK group page: http:\/\/openjdk.java.net\/groups\/2d\/\n+OpenJDK group page: https:\/\/openjdk.org\/groups\/2d\/\n","filename":"src\/demo\/share\/jfc\/J2Ddemo\/README.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -398,2 +398,0 @@\n-  inline intptr_t* interpreter_frame_last_sp() const;\n-\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,5 +260,0 @@\n-inline intptr_t* frame::interpreter_frame_last_sp() const {\n-  Unimplemented();\n-  return NULL;\n-}\n-\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -6845,0 +6845,3 @@\n+    assert(ra_->is_oop(this) == true, \"A decodeN node must produce an oop!\");\n+    ra_->set_oop(n2, true);\n+\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -483,2 +483,0 @@\n-  inline intptr_t* interpreter_frame_last_sp() const;\n-\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -329,5 +329,0 @@\n-inline intptr_t* frame::interpreter_frame_last_sp() const {\n-  Unimplemented();\n-  return NULL;\n-}\n-\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -84,2 +84,0 @@\n-  inline intptr_t* interpreter_frame_last_sp() const;\n-\n","filename":"src\/hotspot\/cpu\/zero\/frame_zero.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -193,5 +193,0 @@\n-inline intptr_t* frame::interpreter_frame_last_sp() const {\n-  Unimplemented();\n-  return NULL;\n-}\n-\n","filename":"src\/hotspot\/cpu\/zero\/frame_zero.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -148,0 +148,6 @@\n+  if (!is_readable_pointer(epc)) {\n+    \/\/ Try to recover from calling into bad memory\n+    \/\/ Assume new frame has not been set up, the same as\n+    \/\/ compiled frame stack bang\n+    return fetch_compiled_frame_from_context(ucVoid);\n+  }\n@@ -360,2 +366,2 @@\n-  address pc = os::Posix::ucontext_get_pc(uc);\n-  print_instructions(st, pc, UseRVC ? sizeof(char) : 4\/*non-compressed native instruction size*\/);\n+  address pc = os::fetch_frame_from_context(uc).pc();\n+  print_instructions(st, pc, UseRVC ? sizeof(char) : (int)NativeInstruction::instruction_size);\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/os_linux_riscv.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1164,11 +1164,6 @@\n-  VM_ENTRY_MARK;\n-  {\n-    ExceptionMark em(THREAD);\n-    methodHandle m(THREAD, get_Method());\n-    bool has_unloaded = Method::has_unloaded_classes_in_signature(m, thread);\n-    if( HAS_PENDING_EXCEPTION ) {\n-      CLEAR_PENDING_EXCEPTION;\n-      return true;     \/\/ Declare that we may have unloaded classes\n-    }\n-    return has_unloaded;\n-  }\n+  \/\/ ciSignature is resolved against some accessing class and\n+  \/\/ signature classes aren't required to be local. As a benefit,\n+  \/\/ it makes signature classes visible through loader constraints.\n+  \/\/ So, encountering an unloaded class signals it is absent both in\n+  \/\/ the callee (local) and caller contexts.\n+  return signature()->has_unloaded_classes();\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"ci\/ciStreams.hpp\"\n@@ -49,1 +50,0 @@\n-  int count = 0;\n@@ -51,3 +51,1 @@\n-  Symbol* sh = symbol->get_symbol();\n-  SignatureStream ss(sh);\n-  for (; ; ss.next()) {\n+  for (SignatureStream ss(symbol->get_symbol()); !ss.is_done(); ss.next()) {\n@@ -55,4 +53,2 @@\n-    ciType* type;\n-    if (!ss.is_reference()) {\n-      type = ciType::make(ss.type());\n-    } else {\n+    ciType* type = NULL;\n+    if (ss.is_reference()) {\n@@ -61,0 +57,2 @@\n+    } else {\n+      type = ciType::make(ss.type());\n@@ -65,1 +63,3 @@\n-      break;\n+    } else {\n+      _types.append(type);\n+      size += type->size();\n@@ -67,2 +67,0 @@\n-    _types.append(type);\n-    size += type->size();\n@@ -100,0 +98,16 @@\n+\/\/ ------------------------------------------------------------------\n+\/\/ ciSignature::has_unloaded_classes\n+\/\/\n+\/\/ Reports if there are any unloaded classes present in the signature.\n+\/\/ Each ciSignature when instantiated is resolved against some accessing class\n+\/\/ and the resolved classes aren't required to be local, but can be revealed\n+\/\/ through loader constraints.\n+bool ciSignature::has_unloaded_classes() {\n+  for (ciSignatureStream str(this); !str.is_done(); str.next()) {\n+    if (!str.type()->is_loaded()) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/ci\/ciSignature.cpp","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+  bool has_unloaded_classes();\n+\n","filename":"src\/hotspot\/share\/ci\/ciSignature.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n@@ -53,1 +54,0 @@\n-#include \"runtime\/interfaceSupport.inline.hpp\"\n@@ -606,1 +606,0 @@\n-  Thread* thr = Thread::current();\n@@ -608,3 +607,1 @@\n-  if (!_local_table->try_scan(thr, vs)) {\n-    log_info(stringtable)(\"verify unavailable at this moment\");\n-  }\n+  _local_table->do_safepoint_scan(vs);\n@@ -646,3 +643,1 @@\n-  if (!_local_table->try_scan(thr, vcs)) {\n-    log_info(stringtable)(\"verify unavailable at this moment\");\n-  }\n+  _local_table->do_scan(thr, vcs);\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -630,1 +630,1 @@\n-    _consts_offset           = data_offset();\n+    _consts_offset           = content_offset()      + code_buffer->total_offset_of(code_buffer->consts());\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,2 +248,1 @@\n-      \/\/ alias_idx correct??\n-      pre_val = __ load(__ ctrl(), adr, val_type, bt, alias_idx);\n+      pre_val = __ load(__ ctrl(), adr, val_type, bt, alias_idx, false, MemNode::unordered, LoadNode::Pinned);\n@@ -615,1 +614,0 @@\n-  Node* load = CardTableBarrierSetC2::load_at_resolved(access, val_type);\n@@ -627,1 +625,1 @@\n-    return load;\n+    return CardTableBarrierSetC2::load_at_resolved(access, val_type);\n@@ -631,0 +629,1 @@\n+\n@@ -633,0 +632,13 @@\n+  Node* load;\n+\n+  Node* control =  kit->control();\n+  const TypePtr* adr_type = access.addr().type();\n+  MemNode::MemOrd mo = access.mem_node_mo();\n+  bool requires_atomic_access = (decorators & MO_UNORDERED) == 0;\n+  bool unaligned = (decorators & C2_UNALIGNED) != 0;\n+  bool unsafe = (decorators & C2_UNSAFE_ACCESS) != 0;\n+  \/\/ Pinned control dependency is the strictest. So it's ok to substitute it for any other.\n+  load = kit->make_load(control, adr, val_type, access.type(), adr_type, mo,\n+      LoadNode::Pinned, requires_atomic_access, unaligned, mismatched, unsafe,\n+      access.barrier_data());\n+\n@@ -784,0 +796,129 @@\n+bool G1BarrierSetC2::has_cas_in_use_chain(Node *n) const {\n+  Unique_Node_List visited;\n+  Node_List worklist;\n+  worklist.push(n);\n+  while (worklist.size() > 0) {\n+    Node* x = worklist.pop();\n+    if (visited.member(x)) {\n+      continue;\n+    } else {\n+      visited.push(x);\n+    }\n+\n+    if (x->is_LoadStore()) {\n+      int op = x->Opcode();\n+      if (op == Op_CompareAndExchangeP || op == Op_CompareAndExchangeN ||\n+          op == Op_CompareAndSwapP     || op == Op_CompareAndSwapN     ||\n+          op == Op_WeakCompareAndSwapP || op == Op_WeakCompareAndSwapN) {\n+        return true;\n+      }\n+    }\n+    if (!x->is_CFG()) {\n+      for (SimpleDUIterator iter(x); iter.has_next(); iter.next()) {\n+        Node* use = iter.get();\n+        worklist.push(use);\n+      }\n+    }\n+  }\n+  return false;\n+}\n+\n+void G1BarrierSetC2::verify_pre_load(Node* marking_if, Unique_Node_List& loads \/*output*\/) const {\n+  assert(loads.size() == 0, \"Loads list should be empty\");\n+  Node* pre_val_if = marking_if->find_out_with(Op_IfTrue)->find_out_with(Op_If);\n+  if (pre_val_if != NULL) {\n+    Unique_Node_List visited;\n+    Node_List worklist;\n+    Node* pre_val = pre_val_if->in(1)->in(1)->in(1);\n+\n+    worklist.push(pre_val);\n+    while (worklist.size() > 0) {\n+      Node* x = worklist.pop();\n+      if (visited.member(x)) {\n+        continue;\n+      } else {\n+        visited.push(x);\n+      }\n+\n+      if (has_cas_in_use_chain(x)) {\n+        loads.clear();\n+        return;\n+      }\n+\n+      if (x->is_Con()) {\n+        continue;\n+      }\n+      if (x->is_EncodeP() || x->is_DecodeN()) {\n+        worklist.push(x->in(1));\n+        continue;\n+      }\n+      if (x->is_Load() || x->is_LoadStore()) {\n+        assert(x->in(0) != NULL, \"Pre-val load has to have a control\");\n+        loads.push(x);\n+        continue;\n+      }\n+      if (x->is_Phi()) {\n+        for (uint i = 1; i < x->req(); i++) {\n+          worklist.push(x->in(i));\n+        }\n+        continue;\n+      }\n+      assert(false, \"Pre-val anomaly\");\n+    }\n+  }\n+}\n+\n+void G1BarrierSetC2::verify_no_safepoints(Compile* compile, Node* marking_check_if, const Unique_Node_List& loads) const {\n+  if (loads.size() == 0) {\n+    return;\n+  }\n+\n+  if (loads.size() == 1) { \/\/ Handle the typical situation when there a single pre-value load\n+                           \/\/ that is dominated by the marking_check_if, that's true when the\n+                           \/\/ barrier itself does the pre-val load.\n+    Node *pre_val = loads.at(0);\n+    if (pre_val->in(0)->in(0) == marking_check_if) { \/\/ IfTrue->If\n+      return;\n+    }\n+  }\n+\n+  \/\/ All other cases are when pre-value loads dominate the marking check.\n+  Unique_Node_List controls;\n+  for (uint i = 0; i < loads.size(); i++) {\n+    Node *c = loads.at(i)->in(0);\n+    controls.push(c);\n+  }\n+\n+  Unique_Node_List visited;\n+  Unique_Node_List safepoints;\n+  Node_List worklist;\n+  uint found = 0;\n+\n+  worklist.push(marking_check_if);\n+  while (worklist.size() > 0 && found < controls.size()) {\n+    Node* x = worklist.pop();\n+    if (x == NULL || x == compile->top()) continue;\n+    if (visited.member(x)) {\n+      continue;\n+    } else {\n+      visited.push(x);\n+    }\n+\n+    if (controls.member(x)) {\n+      found++;\n+    }\n+    if (x->is_Region()) {\n+      for (uint i = 1; i < x->req(); i++) {\n+        worklist.push(x->in(i));\n+      }\n+    } else {\n+      if (!x->is_SafePoint()) {\n+        worklist.push(x->in(0));\n+      } else {\n+        safepoints.push(x);\n+      }\n+    }\n+  }\n+  assert(found == controls.size(), \"Pre-barrier structure anomaly or possible safepoint\");\n+}\n+\n@@ -838,0 +979,4 @@\n+\n+              Unique_Node_List loads;\n+              verify_pre_load(iff, loads);\n+              verify_no_safepoints(compile, iff, loads);\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":149,"deletions":4,"binary":false,"changes":153,"status":"modified"},{"patch":"@@ -87,1 +87,7 @@\n- public:\n+#ifdef ASSERT\n+  bool has_cas_in_use_chain(Node* x) const;\n+  void verify_pre_load(Node* marking_check_if, Unique_Node_List& loads \/*output*\/) const;\n+  void verify_no_safepoints(Compile* compile, Node* marking_load, const Unique_Node_List& loads) const;\n+#endif\n+\n+public:\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1311,1 +1311,1 @@\n-  class G1FlushHumongousCandidateRemSets : public HeapRegionClosure {\n+  class G1FlushHumongousCandidateRemSets : public HeapRegionIndexClosure {\n@@ -1318,1 +1318,1 @@\n-    virtual bool do_heap_region(HeapRegion* r) {\n+    bool do_heap_region_index(uint region_index) override {\n@@ -1321,2 +1321,6 @@\n-      if (!g1h->region_attr(r->hrm_index()).is_humongous_candidate() ||\n-          r->rem_set()->is_empty()) {\n+      if (!g1h->region_attr(region_index).is_humongous_candidate()) {\n+        return false;\n+      }\n+\n+      HeapRegion* r = g1h->region_at(region_index);\n+      if (r->rem_set()->is_empty()) {\n@@ -1346,1 +1350,1 @@\n-      G1HeapRegionAttr region_attr = g1h->region_attr(r->hrm_index());\n+      G1HeapRegionAttr region_attr = g1h->region_attr(region_index);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -97,2 +97,1 @@\n-    last_card                   =  1,\n-    CT_MR_BS_last_reserved      =  2\n+    CT_MR_BS_last_reserved      =  1\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  void notify_allocation();\n+  void notify_allocation(JavaThread* thread);\n@@ -63,1 +63,1 @@\n-  void notify_allocation_dtrace_sampler();\n+  void notify_allocation_dtrace_sampler(JavaThread* thread);\n@@ -87,1 +87,1 @@\n-      notify_allocation();\n+      notify_allocation(_thread);\n@@ -238,1 +238,1 @@\n-void MemAllocator::Allocation::notify_allocation_dtrace_sampler() {\n+void MemAllocator::Allocation::notify_allocation_dtrace_sampler(JavaThread* thread) {\n@@ -244,1 +244,1 @@\n-      SharedRuntime::dtrace_object_alloc(Thread::current(), obj(), word_size);\n+      SharedRuntime::dtrace_object_alloc(thread, obj(), word_size);\n@@ -249,1 +249,1 @@\n-void MemAllocator::Allocation::notify_allocation() {\n+void MemAllocator::Allocation::notify_allocation(JavaThread* thread) {\n@@ -252,1 +252,1 @@\n-  notify_allocation_dtrace_sampler();\n+  notify_allocation_dtrace_sampler(thread);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-\/\/ http:\/\/openjdk.java.net\/jeps\/192\n+\/\/ https:\/\/openjdk.org\/jeps\/192\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedup.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -237,1 +237,0 @@\n-  declare_constant(CardTable::last_card)                                    \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1083,1 +1083,2 @@\n-             n->in(0) != NULL) {\n+             n->in(0) != NULL &&\n+             n->outcnt() == 2) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1550,2 +1550,6 @@\n-} else {\n-    \/\/ We want the nmethod to be deoptimized immediately.\n+\n+    \/\/ Do not clear the address field here as the Java code may still\n+    \/\/ want to later call this method with deoptimize == true. That requires\n+    \/\/ the address field to still be pointing at the nmethod.\n+   } else {\n+    \/\/ Deoptimize the nmethod immediately.\n@@ -1553,1 +1557,0 @@\n-  }\n@@ -1555,3 +1558,4 @@\n-  \/\/ A HotSpotNmethod instance can only reference a single nmethod\n-  \/\/ during its lifetime so simply clear it here.\n-  set_InstalledCode_address(mirror, 0);\n+    \/\/ A HotSpotNmethod instance can only reference a single nmethod\n+    \/\/ during its lifetime so simply clear it here.\n+    set_InstalledCode_address(mirror, 0);\n+  }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1733,14 +1733,0 @@\n-bool Method::has_unloaded_classes_in_signature(const methodHandle& m, TRAPS) {\n-  ResourceMark rm(THREAD);\n-  for(ResolvingSignatureStream ss(m()); !ss.is_done(); ss.next()) {\n-    if (ss.type() == T_OBJECT) {\n-      \/\/ Do not use ss.is_reference() here, since we don't care about\n-      \/\/ unloaded array component types.\n-      Klass* klass = ss.as_klass_if_loaded(THREAD);\n-      assert(!HAS_PENDING_EXCEPTION, \"as_klass_if_loaded contract\");\n-      if (klass == NULL) return true;\n-    }\n-  }\n-  return false;\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -968,3 +968,0 @@\n-  \/\/ Return if true if not all classes references in signature, including return type, has been loaded\n-  static bool has_unloaded_classes_in_signature(const methodHandle& m, TRAPS);\n-\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -367,9 +367,0 @@\n-  \/\/ Convert (~x+c) into (c-1)-x. Note there isn't a bitwise not\n-  \/\/ bytecode, \"~x\" would typically represented as \"x^(-1)\", so (~x+c)\n-  \/\/ will be (x^(-1))+c.\n-  if (op1 == Op_Xor(bt) &&\n-      (in2->Opcode() == Op_ConI || in2->Opcode() == Op_ConL) &&\n-      phase->type(in1->in(2)) == TypeInteger::minus_1(bt)) {\n-    Node* c_minus_one = phase->makecon(add_ring(phase->type(in(2)), TypeInteger::minus_1(bt)));\n-    return SubNode::make(c_minus_one, in1->in(1), bt);\n-  }\n@@ -865,0 +856,13 @@\n+\/\/---------------------------Helper -------------------------------------------\n+\/* Decide if the given node is used only in arithmetic expressions(add or sub).\n+ *\/\n+static bool is_used_in_only_arithmetic(Node* n, BasicType bt) {\n+  for (DUIterator_Fast imax, i = n->fast_outs(imax); i < imax; i++) {\n+    Node* u = n->fast_out(i);\n+    if (u->Opcode() != Op_Add(bt) && u->Opcode() != Op_Sub(bt)) {\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n@@ -870,9 +874,14 @@\n-  int op1 = in1->Opcode();\n-  \/\/ Convert ~(x+c) into (-c-1)-x. Note there isn't a bitwise not\n-  \/\/ bytecode, \"~x\" would typically represented as \"x^(-1)\", so ~(x+c)\n-  \/\/ will eventually be (x+c)^-1.\n-  if (op1 == Op_AddI && phase->type(in2) == TypeInt::MINUS_1 &&\n-      in1->in(2)->Opcode() == Op_ConI) {\n-    jint c = phase->type(in1->in(2))->isa_int()->get_con();\n-    Node* neg_c_minus_one = phase->intcon(java_add(-c, -1));\n-    return new SubINode(neg_c_minus_one, in1->in(1));\n+\n+  \/\/ Convert ~x into -1-x when ~x is used in an arithmetic expression\n+  \/\/ or x itself is an expression.\n+  if (phase->type(in2) == TypeInt::MINUS_1) { \/\/ follows LHS^(-1), i.e., ~LHS\n+    if (phase->is_IterGVN()) {\n+      if (is_used_in_only_arithmetic(this, T_INT)\n+          \/\/ LHS is arithmetic\n+          || (in1->Opcode() == Op_AddI || in1->Opcode() == Op_SubI)) {\n+        return new SubINode(in2, in1);\n+      }\n+    } else {\n+      \/\/ graph could be incomplete in GVN so we postpone to IGVN\n+      phase->record_for_igvn(this);\n+    }\n@@ -950,9 +959,14 @@\n-  int op1 = in1->Opcode();\n-  \/\/ Convert ~(x+c) into (-c-1)-x. Note there isn't a bitwise not\n-  \/\/ bytecode, \"~x\" would typically represented as \"x^(-1)\", so ~(x+c)\n-  \/\/ will eventually be (x+c)^-1.\n-  if (op1 == Op_AddL && phase->type(in2) == TypeLong::MINUS_1 &&\n-      in1->in(2)->Opcode() == Op_ConL) {\n-    jlong c = phase->type(in1->in(2))->isa_long()->get_con();\n-    Node* neg_c_minus_one = phase->longcon(java_add(-c, (jlong)-1));\n-    return new SubLNode(neg_c_minus_one, in1->in(1));\n+\n+  \/\/ Convert ~x into -1-x when ~x is used in an arithmetic expression\n+  \/\/ or x itself is an arithmetic expression.\n+  if (phase->type(in2) == TypeLong::MINUS_1) { \/\/ follows LHS^(-1), i.e., ~LHS\n+    if (phase->is_IterGVN()) {\n+      if (is_used_in_only_arithmetic(this, T_LONG)\n+          \/\/ LHS is arithmetic\n+          || (in1->Opcode() == Op_AddL || in1->Opcode() == Op_SubL)) {\n+        return new SubLNode(in2, in1);\n+      }\n+    } else {\n+      \/\/ graph could be incomplete in GVN so we postpone to IGVN\n+      phase->record_for_igvn(this);\n+    }\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":41,"deletions":27,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -355,1 +355,2 @@\n-                     MemNode::MemOrd mo) {\n+                     MemNode::MemOrd mo,\n+                     LoadNode::ControlDependency control_dependency) {\n@@ -361,1 +362,1 @@\n-  Node* ld = LoadNode::make(_gvn, ctl, mem, adr, adr_type, t, bt, mo, LoadNode::DependsOnlyOnTest, require_atomic_access);\n+  Node* ld = LoadNode::make(_gvn, ctl, mem, adr, adr_type, t, bt, mo, control_dependency, require_atomic_access);\n","filename":"src\/hotspot\/share\/opto\/idealKit.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -223,1 +223,3 @@\n-             bool require_atomic_access = false, MemNode::MemOrd mo = MemNode::unordered);\n+             bool require_atomic_access = false,\n+             MemNode::MemOrd mo = MemNode::unordered,\n+             LoadNode::ControlDependency control_dependency = LoadNode::DependsOnlyOnTest);\n","filename":"src\/hotspot\/share\/opto\/idealKit.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3904,11 +3904,0 @@\n-#ifdef ASSERT\n-bool IdealLoopTree::has_reduction_nodes() const {\n-  for (uint i = 0; i < _body.size(); i++) {\n-    if (_body[i]->is_reduction()) {\n-      return true;\n-    }\n-  }\n-  return false;\n-}\n-#endif \/\/ ASSERT\n-\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -781,5 +781,0 @@\n-#ifdef ASSERT\n-  \/\/ Tell whether the body contains nodes marked as reductions.\n-  bool has_reduction_nodes() const;\n-#endif \/\/ ASSERT\n-\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1629,1 +1629,1 @@\n-                                          static_cast<int (*)(Thread*, oopDesc*)>(SharedRuntime::dtrace_object_alloc)),\n+                                          static_cast<int (*)(JavaThread*, oopDesc*)>(SharedRuntime::dtrace_object_alloc)),\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -823,1 +823,1 @@\n-  return true;\n+  return !has_pinned_control_dependency();\n@@ -841,1 +841,11 @@\n-    st->print(\" (does not depend only on test)\");\n+    st->print(\" (does not depend only on test, \");\n+    if (control_dependency() == UnknownControl) {\n+      st->print(\"unknown control\");\n+    } else if (control_dependency() == Pinned) {\n+      st->print(\"pinned\");\n+    } else if (adr_type() == TypeRawPtr::BOTTOM) {\n+      st->print(\"raw access\");\n+    } else {\n+      st->print(\"unknown reason\");\n+    }\n+    st->print(\")\");\n@@ -1202,0 +1212,3 @@\n+  if (has_pinned_control_dependency()) {\n+    return this;\n+  }\n@@ -1488,1 +1501,6 @@\n-Node *LoadNode::split_through_phi(PhaseGVN *phase) {\n+Node* LoadNode::split_through_phi(PhaseGVN* phase) {\n+  if (req() > 3) {\n+    assert(is_LoadVector() && Opcode() != Op_LoadVector, \"load has too many inputs\");\n+    \/\/ LoadVector subclasses such as LoadVectorMasked have extra inputs that the logic below doesn't take into account\n+    return NULL;\n+  }\n@@ -1699,0 +1717,3 @@\n+  if (has_pinned_control_dependency()) {\n+    return NULL;\n+  }\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":24,"deletions":3,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -288,3 +288,3 @@\n-  ControlDependency control_dependency() {return _control_dependency; }\n-\n-  bool has_unknown_control_dependency() const { return _control_dependency == UnknownControl; }\n+  ControlDependency control_dependency() const { return _control_dependency; }\n+  bool has_unknown_control_dependency() const  { return _control_dependency == UnknownControl; }\n+  bool has_pinned_control_dependency() const   { return _control_dependency == Pinned; }\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -472,2 +472,3 @@\n-      if (md_count == md->trap_count_limit())\n-        md_count += md->overflow_trap_count();\n+      if (md_count >= md->trap_count_limit()) {\n+        md_count = md->trap_count_limit() + md->overflow_trap_count();\n+      }\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2456,5 +2456,0 @@\n-  \/\/ Check that the loop to be vectorized does not have inconsistent reduction\n-  \/\/ information, which would likely lead to a miscompilation.\n-  assert(!lpt()->has_reduction_nodes() || cl->is_reduction_loop(),\n-         \"non-reduction loop contains reduction nodes\");\n-\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -358,18 +358,0 @@\n-void* NativeLookup::dll_load(const methodHandle& method) {\n-  if (method->has_native_function()) {\n-\n-    address current_entry = method->native_function();\n-\n-    char dll_name[JVM_MAXPATHLEN];\n-    dll_name[0] = '\\0';\n-    int offset;\n-    bool ret = os::dll_address_to_library_name(current_entry, dll_name, sizeof(dll_name), &offset);\n-    if (ret && dll_name[0] != '\\0') {\n-      char ebuf[32];\n-      return os::dll_load(dll_name, ebuf, sizeof(ebuf));\n-    }\n-  }\n-\n-  return NULL;\n-}\n-\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-  static void* dll_load(const methodHandle& method);\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3155,0 +3155,6 @@\n+\n+  \/\/ Zero runs without compilers. Do not let compiler selection code\n+  \/\/ to force it into Serial GC, let the GC ergonomics decide.\n+  if (FLAG_IS_DEFAULT(NeverActAsServerClassMachine)) {\n+    FLAG_SET_ERGO(NeverActAsServerClassMachine, false);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -138,0 +138,4 @@\n+\/\/ The parameter `sp` should be the actual sp and not the unextended sp because at\n+\/\/ least on PPC64 unextended_sp < sp is possible as interpreted frames are trimmed\n+\/\/ to the actual size of the expression stack before calls. The problem there is\n+\/\/ that even unextended_sp < entry_sp < sp is possible for an interpreted frame.\n@@ -139,0 +143,1 @@\n+  \/\/ entry_sp() returns the unextended_sp which is always greater or equal to the actual sp\n@@ -143,1 +148,1 @@\n-  return is_sp_in_continuation(entry, f.unextended_sp());\n+  return is_sp_in_continuation(entry, f.sp());\n@@ -163,1 +168,1 @@\n-  return f.is_heap_frame() || (get_continuation_entry_for_sp(thread, f.unextended_sp()) != nullptr);\n+  return f.is_heap_frame() || (get_continuation_entry_for_sp(thread, f.sp()) != nullptr);\n@@ -299,3 +304,2 @@\n-  ContinuationEntry* ce = get_continuation_entry_for_sp(thread,\n-        callee.is_interpreted_frame() ? callee.interpreter_frame_last_sp() : callee.unextended_sp());\n-  assert(ce != nullptr, \"callee.unextended_sp(): \" INTPTR_FORMAT, p2i(callee.unextended_sp()));\n+  ContinuationEntry* ce = get_continuation_entry_for_sp(thread, callee.sp());\n+  assert(ce != nullptr, \"callee.sp(): \" INTPTR_FORMAT, p2i(callee.sp()));\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logStream.hpp\"\n+#include \"memory\/resourceArea.hpp\"\n@@ -383,0 +386,10 @@\n+void MutexLocker::post_initialize() {\n+  \/\/ Print mutex ranks if requested.\n+  LogTarget(Info, vmmutex) lt;\n+  if (lt.is_enabled()) {\n+    ResourceMark rm;\n+    LogStream ls(lt);\n+    print_lock_ranks(&ls);\n+  }\n+}\n+\n@@ -412,0 +425,36 @@\n+\n+void print_lock_ranks(outputStream* st) {\n+  st->print_cr(\"VM Mutex\/Monitor ranks: \");\n+\n+#ifdef ASSERT\n+  \/\/ Be extra defensive and figure out the bounds on\n+  \/\/ ranks right here. This also saves a bit of time\n+  \/\/ in the #ranks*#mutexes loop below.\n+  int min_rank = INT_MAX;\n+  int max_rank = INT_MIN;\n+  for (int i = 0; i < _num_mutex; i++) {\n+    Mutex* m = _mutex_array[i];\n+    int r = (int) m->rank();\n+    if (min_rank > r) min_rank = r;\n+    if (max_rank < r) max_rank = r;\n+  }\n+\n+  \/\/ Print the listings rank by rank\n+  for (int r = min_rank; r <= max_rank; r++) {\n+    bool first = true;\n+    for (int i = 0; i < _num_mutex; i++) {\n+      Mutex* m = _mutex_array[i];\n+      if (r != (int) m->rank()) continue;\n+\n+      if (first) {\n+        st->cr();\n+        st->print_cr(\"Rank \\\"%s\\\":\", m->rank_name());\n+        first = false;\n+      }\n+      st->print_cr(\"  %s\", m->name());\n+    }\n+  }\n+#else\n+  st->print_cr(\"  Only known in debug builds.\");\n+#endif \/\/ ASSERT\n+}\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":49,"deletions":0,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -178,0 +178,1 @@\n+void print_lock_ranks(outputStream* st);\n@@ -228,0 +229,2 @@\n+\n+  static void post_initialize();\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -999,7 +999,4 @@\n-jlong SharedRuntime::get_java_tid(Thread* thread) {\n-  if (thread != NULL && thread->is_Java_thread()) {\n-    Thread* current = Thread::current();\n-    guarantee(current != thread || JavaThread::cast(thread)->is_oop_safe(),\n-              \"current cannot touch oops after its GC barrier is detached.\");\n-    oop obj = JavaThread::cast(thread)->threadObj();\n-    return (obj == NULL) ? 0 : java_lang_Thread::thread_id(obj);\n+jlong SharedRuntime::get_java_tid(JavaThread* thread) {\n+  assert(thread != NULL, \"No thread\");\n+  if (thread == NULL) {\n+    return 0;\n@@ -1007,1 +1004,4 @@\n-  return 0;\n+  guarantee(Thread::current() != thread || thread->is_oop_safe(),\n+            \"current cannot touch oops after its GC barrier is detached.\");\n+  oop obj = thread->threadObj();\n+  return (obj == NULL) ? 0 : java_lang_Thread::thread_id(obj);\n@@ -1016,1 +1016,1 @@\n-  return dtrace_object_alloc(Thread::current(), o, o->size());\n+  return dtrace_object_alloc(JavaThread::current(), o, o->size());\n@@ -1019,1 +1019,1 @@\n-int SharedRuntime::dtrace_object_alloc(Thread* thread, oopDesc* o) {\n+int SharedRuntime::dtrace_object_alloc(JavaThread* thread, oopDesc* o) {\n@@ -1023,1 +1023,1 @@\n-int SharedRuntime::dtrace_object_alloc(Thread* thread, oopDesc* o, size_t size) {\n+int SharedRuntime::dtrace_object_alloc(JavaThread* thread, oopDesc* o, size_t size) {\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -280,2 +280,2 @@\n-  static int dtrace_object_alloc(Thread* thread, oopDesc* o);\n-  static int dtrace_object_alloc(Thread* thread, oopDesc* o, size_t size);\n+  static int dtrace_object_alloc(JavaThread* thread, oopDesc* o);\n+  static int dtrace_object_alloc(JavaThread* thread, oopDesc* o, size_t size);\n@@ -287,1 +287,1 @@\n-  static jlong get_java_tid(Thread* thread);\n+  static jlong get_java_tid(JavaThread* thread);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -243,1 +243,1 @@\n-int dtrace_waited_probe(ObjectMonitor* monitor, Handle obj, Thread* thr) {\n+int dtrace_waited_probe(ObjectMonitor* monitor, Handle obj, JavaThread* thr) {\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -650,0 +650,1 @@\n+  MutexLocker::post_initialize();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -239,0 +239,11 @@\n+const char* type2name(BasicType t) {\n+  if (t < ARRAY_SIZE(type2name_tab)) {\n+    return type2name_tab[t];\n+  } else if (t == T_ILLEGAL) {\n+    return \"*illegal*\";\n+  } else {\n+    fatal(\"invalid type %d\", t);\n+    return \"invalid type\";\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -789,4 +789,1 @@\n-inline const char* type2name(BasicType t) {\n-  assert((uint)t < T_CONFLICT + 1, \"invalid type\");\n-  return type2name_tab[t];\n-}\n+const char* type2name(BasicType t);\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,2 +46,1 @@\n-outputStream::outputStream(int width) {\n-  _width       = width;\n+outputStream::outputStream() {\n@@ -49,1 +48,0 @@\n-  _newlines    = 0;\n@@ -56,2 +54,1 @@\n-outputStream::outputStream(int width, bool has_time_stamps) {\n-  _width       = width;\n+outputStream::outputStream(bool has_time_stamps) {\n@@ -59,1 +56,0 @@\n-  _newlines    = 0;\n@@ -67,1 +63,2 @@\n-void outputStream::update_position(const char* s, size_t len) {\n+bool outputStream::update_position(const char* s, size_t len) {\n+  bool saw_newline = false;\n@@ -71,1 +68,1 @@\n-      _newlines += 1;\n+      saw_newline = true;\n@@ -82,0 +79,1 @@\n+  return saw_newline;\n@@ -403,1 +401,0 @@\n-  _newlines = 0;\n@@ -896,1 +893,1 @@\n-      (_outer_xmlStream == NULL || !_outer_xmlStream->inside_attrs())) {\n+      (_outer_xmlStream == nullptr || !_outer_xmlStream->inside_attrs())) {\n@@ -902,3 +899,3 @@\n-  if (has_log_file()) {\n-    int nl0 = _newlines;\n-    xmlTextStream::write(s, len);\n+  if (has_log_file() && _outer_xmlStream != nullptr) {\n+     _outer_xmlStream->write_text(s, len);\n+    bool nl = update_position(s, len);\n@@ -906,1 +903,1 @@\n-    if (nl0 != _newlines){\n+    if (nl) {\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -51,4 +51,2 @@\n-   int _width;       \/\/ width of the page\n-   int _position;    \/\/ position on the current line\n-   int _newlines;    \/\/ number of '\\n' output so far\n-   julong _precount; \/\/ number of chars output, less _position\n+   int _position;    \/\/ visual position on the current line\n+   uint64_t _precount; \/\/ number of chars output, less than _position\n@@ -59,1 +57,2 @@\n-   void update_position(const char* s, size_t len);\n+  \/\/ Returns whether a newline was seen or not\n+   bool update_position(const char* s, size_t len);\n@@ -74,2 +73,2 @@\n-   outputStream(int width = 80);\n-   outputStream(int width, bool has_time_stamps);\n+   outputStream();\n+   outputStream(bool has_time_stamps);\n@@ -89,1 +88,0 @@\n-   int width()    const { return _width;    }\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -551,18 +551,0 @@\n-\n-    \/**\n-     * Finalize crypto operation with ByteBuffers\n-     *\n-     * @param input the input ByteBuffer\n-     * @param output the output ByteBuffer\n-     *\n-     * @return output length\n-     * @throws ShortBufferException\n-     * @throws IllegalBlockSizeException\n-     * @throws BadPaddingException\n-     *\/\n-    @Override\n-    protected int engineDoFinal(ByteBuffer input, ByteBuffer output)\n-        throws ShortBufferException, IllegalBlockSizeException,\n-        BadPaddingException {\n-        return super.engineDoFinal(input, output);\n-    }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESCipher.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,1 +230,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -246,1 +245,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -261,1 +259,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -294,1 +291,0 @@\n-    @SuppressWarnings(\"unchecked\")\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * {@linkplain Double#POSITIVE_INFINITY positive infinity} and\n+ * ({@linkplain Double#POSITIVE_INFINITY positive infinity} and\n@@ -119,6 +119,7 @@\n- * Double#equals equals} defines NaN arguments to be equal to each\n- * other and defines {@code +0.0} to <em>not<\/em> be equal to {@code\n- * -0.0}, restoring reflexivity. For comparisons, {@link\n- * Double#compareTo compareTo} defines a total order where {@code\n- * -0.0} is less than {@code +0.0} and where a NaN is equal to itself\n- * and considered greater than positive infinity.\n+ * Double#equals equals} uses <a href=#repEquivalence> representation\n+ * equivalence<\/a>, defining NaN arguments to be equal to each other,\n+ * restoring reflexivity, and defining {@code +0.0} to <em>not<\/em> be\n+ * equal to {@code -0.0}. For comparisons, {@link Double#compareTo\n+ * compareTo} defines a total order where {@code -0.0} is less than\n+ * {@code +0.0} and where a NaN is equal to itself and considered\n+ * greater than positive infinity.\n@@ -146,0 +147,56 @@\n+ * <p>Comparing numerical equality to various useful equivalence\n+ * relations that can be defined over floating-point values:\n+ *\n+ * <dl>\n+ * <dt><a id=fpNumericalEq><i>numerical equality<\/i><\/a> ({@code ==}\n+ * operator): (<em>Not<\/em> an equivalence relation)<\/dt>\n+ * <dd>Two floating-point values represent the same extended real\n+ * number. The extended real numbers are the real numbers augmented\n+ * with positive infinity and negative infinity. Under numerical\n+ * equality, {@code +0.0} and {@code -0.0} are equal since they both\n+ * map to the same real value, 0. A NaN does not map to any real\n+ * number and is not equal to any value, including itself.\n+ * <\/dd>\n+ *\n+ * <dt><i>bit-wise equivalence<\/i>:<\/dt>\n+ * <dd>The bits of the two floating-point values are the same. This\n+ * equivalence relation for {@code double} values {@code a} and {@code\n+ * b} is implemented by the expression\n+ * <br>{@code Double.doubleTo}<code><b>Raw<\/b><\/code>{@code LongBits(a) == Double.doubleTo}<code><b>Raw<\/b><\/code>{@code LongBits(b)}<br>\n+ * Under this relation, {@code +0.0} and {@code -0.0} are\n+ * distinguished from each other and every bit pattern encoding a NaN\n+ * is distinguished from every other bit pattern encoding a NaN.\n+ * <\/dd>\n+ *\n+ * <dt><i><a id=repEquivalence>representation equivalence<\/a><\/i>:<\/dt>\n+ * <dd>The two floating-point values represent the the same IEEE 754\n+ * <i>datum<\/i>. In particular, for {@linkplain #isFinite(double)\n+ * finite} values, the sign, {@linkplain Math#getExponent(double)\n+ * exponent}, and significand components of the\n+ * floating-point values are the same. Under this relation:\n+ * <ul>\n+ * <li> {@code +0.0} and {@code -0.0} are distinguished from each other.\n+ * <li> every bit pattern encoding a NaN is considered equivalent to each other\n+ * <li> positive infinity is equivalent to positive infinity; negative\n+ *      infinity is equivalent to negative infinity.\n+ * <\/ul>\n+ * Expressions implementing this equivalence relation include:\n+ * <ul>\n+ * <li>{@code Double.doubleToLongBits(a) == Double.doubleToLongBits(b)}\n+ * <li>{@code Double.valueOf(a).equals(Double.valueOf(b))}\n+ * <li>{@code Double.compare(a, b) == 0}\n+ * <\/ul>\n+ * Note that representation equivalence is often an appropriate notion\n+ * of equivalence to test the behavior of {@linkplain StrictMath math\n+ * libraries}.\n+ * <\/dd>\n+ * <\/dl>\n+ *\n+ * For two binary floating-point values {@code a} and {@code b}, if\n+ * neither of {@code a} and {@code b} is zero or NaN, then the three\n+ * relations numerical equality, bit-wise equivalence, and\n+ * representation equivalence of {@code a} and {@code b} have the same\n+ * {@code true}\/{@code false} value. In other words, for binary\n+ * floating-point values, the three relations only differ if at least\n+ * one argument is zero or NaN.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":64,"deletions":7,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -571,1 +571,1 @@\n-     * See <a href=\"https:\/\/openjdk.java.net\/jeps\/421\">JEP 421<\/a> for\n+     * See <a href=\"https:\/\/openjdk.org\/jeps\/421\">JEP 421<\/a> for\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-     * Use {@link #getInputStream} and {@link #inputReader} with extreme care.\n+     * Use {@link #getInputStream()} and {@link #inputReader()} with extreme care.\n@@ -187,2 +187,2 @@\n-     * Use {@link #getInputStream} and {@link #inputReader} with extreme care.\n-     * The {@code BufferedReader} may have buffered input from the input stream.\n+     * Use {@link #getErrorStream()} and {@link #errorReader()} with extreme care.\n+     * The {@code BufferedReader} may have buffered input from the error stream.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Process.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,2 +47,64 @@\n- * <p>\n- * An application cannot create its own instance of this class.\n+ *\n+ * <p>An application cannot create its own instance of this class.\n+ *\n+ * <h2><a id=\"shutdown\">Shutdown Sequence<\/a><\/h2>\n+ *\n+ * <p>The Java Virtual Machine initiates the <i>shutdown sequence<\/i> in response\n+ * to one of several events:\n+ * <ol>\n+ * <li>when the number of {@linkplain Thread#isAlive() live} non-daemon threads drops to zero\n+ * for the first time (see note below on the JNI Invocation API);<\/li>\n+ * <li>when the {@link #exit Runtime.exit} or {@link System#exit System.exit} method is called\n+ * for the first time; or<\/li>\n+ * <li>when some external event occurs, such as an interrupt or a signal is received from\n+ * the operating system.<\/li>\n+ * <\/ol>\n+ *\n+ * <p>At the beginning of the shutdown sequence, the registered shutdown hooks are\n+ * {@linkplain Thread#start started} in some unspecified order. They run concurrently\n+ * with any daemon or non-daemon threads that were {@linkplain Thread#isAlive() alive}\n+ * at the beginning of the shutdown sequence.\n+ *\n+ * <p>After the shutdown sequence has begun, registration and de-registration of shutdown hooks\n+ * with {@link #addShutdownHook addShutdownHook} and {@link #removeShutdownHook removeShutdownHook}\n+ * is prohibited. However, creating and starting new threads is permitted. New threads run\n+ * concurrently with the registered shutdown hooks and with any daemon or non-daemon threads\n+ * that are already running.\n+ *\n+ * <p>The shutdown sequence finishes when all shutdown hooks have terminated. At this point,\n+ * the Java Virtual Machine terminates as described below.\n+ *\n+ * <p>It is possible that one or more shutdown hooks do not terminate, for example, because\n+ * of an infinite loop. In this case, the shutdown sequence will never finish. Other threads\n+ * and shutdown hooks continue to run and can terminate the JVM via the {@link #halt halt} method.\n+ *\n+ * <p>Prior to the beginning of the shutdown sequence, it is possible for a program to start\n+ * a shutdown hook by calling its {@link Thread#start start} method explicitly. If this occurs, the\n+ * behavior of the shutdown sequence is unspecified.\n+ *\n+ * <h2><a id=\"termination\">Java Virtual Machine Termination<\/a><\/h2>\n+ *\n+ * <p>The JVM terminates when the shutdown sequence finishes or when {@link #halt halt} is called.\n+ * In contrast to {@link #exit exit}, the {@link #halt halt} method does not initiate the\n+ * shutdown sequence.\n+ *\n+ * <p>When the JVM terminates, all threads are immediately prevented from executing any further\n+ * Java code. This includes shutdown hooks as well as daemon and non-daemon threads. The\n+ * threads' current methods do not complete normally or abruptly; no {@code finally} clause\n+ * of any method is executed, nor is any {@linkplain Thread.UncaughtExceptionHandler\n+ * uncaught exception handler}.\n+ *\n+ * @implNote\n+ * Native code typically uses the\n+ * <a href=\"{@docRoot}\/..\/specs\/jni\/invocation.html\">JNI Invocation API<\/a>\n+ * to control launching and termination of the JVM. Such native code invokes the\n+ * <a href=\"{@docRoot}\/..\/specs\/jni\/invocation.html#jni_createjavavm\">{@code JNI_CreateJavaVM}<\/a>\n+ * function to launch the JVM. Subsequently, the native code invokes the\n+ * <a href=\"{@docRoot}\/..\/specs\/jni\/invocation.html#destroyjavavm\">{@code DestroyJavaVM}<\/a>\n+ * function to await termination of that JVM. The {@code DestroyJavaVM} function is responsible\n+ * for initiating the shutdown sequence when the number of {@linkplain Thread#isAlive() live}\n+ * non-daemon threads first drops to zero. When the shutdown sequence completes and the JVM\n+ * terminates, control is returned to the native code that invoked {@code DestroyJavaVM}. This\n+ * behavior differs from the {@link #exit exit} or {@link #halt halt} methods. These methods\n+ * typically terminate the OS process hosting the JVM and do not interact with the JNI Invocation\n+ * API.\n@@ -51,0 +113,1 @@\n+ * @jls     12.8 Program Exit\n@@ -75,9 +138,4 @@\n-     * Terminates the currently running Java virtual machine by initiating its\n-     * shutdown sequence.  This method never returns normally.  The argument\n-     * serves as a status code; by convention, a nonzero status code indicates\n-     * abnormal termination.\n-     *\n-     * <p> All registered {@linkplain #addShutdownHook shutdown hooks}, if any,\n-     * are started in some unspecified order and allowed to run concurrently\n-     * until they finish.  Once this is done the virtual machine\n-     * {@linkplain #halt halts}.\n+     * Initiates the <a href=\"#shutdown\">shutdown sequence<\/a> of the Java Virtual Machine.\n+     * This method blocks indefinitely; it never returns or throws an exception (that is, it\n+     * does not complete either normally or abruptly). The argument serves as a status code;\n+     * by convention, a nonzero status code indicates abnormal termination.\n@@ -88,2 +146,5 @@\n-     * will block indefinitely. If this method is invoked from a shutdown\n-     * hook the system will deadlock.\n+     * simply block indefinitely.\n+     *\n+     * <p> Because this method always blocks indefinitely, if it is invoked from\n+     * a shutdown hook, it will prevent that shutdown hook from terminating.\n+     * Consequently, this will prevent the shutdown sequence from finishing.\n@@ -121,34 +182,14 @@\n-     * <p> The Java virtual machine <i>shuts down<\/i> in response to two kinds\n-     * of events:\n-     *\n-     *   <ul>\n-     *\n-     *   <li> The program <i>exits<\/i> normally, when the last non-daemon\n-     *   thread exits or when the {@link #exit exit} (equivalently,\n-     *   {@link System#exit(int) System.exit}) method is invoked, or\n-     *\n-     *   <li> The virtual machine is <i>terminated<\/i> in response to a\n-     *   user interrupt, such as typing {@code ^C}, or a system-wide event,\n-     *   such as user logoff or system shutdown.\n-     *\n-     *   <\/ul>\n-     *\n-     * <p> A <i>shutdown hook<\/i> is simply an initialized but unstarted\n-     * thread.  When the virtual machine begins its shutdown sequence it will\n-     * start all registered shutdown hooks in some unspecified order and let\n-     * them run concurrently.  When all the hooks have finished it will then\n-     * halt. Note that daemon threads will continue to run during the shutdown\n-     * sequence, as will non-daemon threads if shutdown was initiated by\n-     * invoking the {@link #exit exit} method.\n-     *\n-     * <p> Once the shutdown sequence has begun it can be stopped only by\n-     * invoking the {@link #halt halt} method, which forcibly\n-     * terminates the virtual machine.\n-     *\n-     * <p> Once the shutdown sequence has begun it is impossible to register a\n-     * new shutdown hook or de-register a previously-registered hook.\n-     * Attempting either of these operations will cause an\n-     * {@link IllegalStateException} to be thrown.\n-     *\n-     * <p> Shutdown hooks run at a delicate time in the life cycle of a virtual\n-     * machine and should therefore be coded defensively.  They should, in\n+     * <p> A <i>shutdown hook<\/i> is simply an initialized but unstarted thread. Shutdown hooks\n+     * are started at the beginning of the <a href=\"#shutdown\">shutdown sequence<\/a>.\n+     * Registration and de-registration of shutdown hooks is disallowed once the shutdown\n+     * sequence has begun.\n+     * <p>\n+     * Uncaught exceptions are handled in shutdown hooks just as in any other thread, as\n+     * specified in {@link Thread.UncaughtExceptionHandler}. After the uncaught exception\n+     * handler has completed, the shutdown hook is considered to have terminated and is not\n+     * treated differently from a hook that has terminated without having thrown an\n+     * uncaught exception.\n+     *\n+     * @apiNote\n+     * Shutdown hooks run at a delicate time in the life cycle of a virtual\n+     * machine and should therefore be coded defensively. They should, in\n@@ -156,3 +197,3 @@\n-     * as possible.  They should also not rely blindly upon services that may\n-     * have registered their own shutdown hooks and therefore may themselves in\n-     * the process of shutting down.  Attempts to use other thread-based\n+     * as possible. They should also not rely blindly upon services that may\n+     * have registered their own shutdown hooks and therefore may themselves be\n+     * in the process of shutting down. Attempts to use other thread-based\n@@ -161,3 +202,3 @@\n-     *\n-     * <p> Shutdown hooks should also finish their work quickly.  When a\n-     * program invokes {@link #exit exit} the expectation is\n+     * <p>\n+     * Shutdown hooks should also finish their work quickly.  When a\n+     * program invokes {@link #exit exit}, the expectation is\n@@ -166,2 +207,2 @@\n-     * underlying operating system may only allow a fixed amount of time in\n-     * which to shut down and exit.  It is therefore inadvisable to attempt any\n+     * underlying operating system may only allow a limited amount of time in\n+     * which to shut down and exit. It is therefore inadvisable to attempt any\n@@ -171,18 +212,0 @@\n-     * <p> Uncaught exceptions are handled in shutdown hooks just as in any\n-     * other thread, by invoking the\n-     * {@link ThreadGroup#uncaughtException uncaughtException} method of the\n-     * thread's {@link ThreadGroup} object. The default implementation of this\n-     * method prints the exception's stack trace to {@link System#err} and\n-     * terminates the thread; it does not cause the virtual machine to exit or\n-     * halt.\n-     *\n-     * <p> In rare circumstances the virtual machine may <i>abort<\/i>, that is,\n-     * stop running without shutting down cleanly.  This occurs when the\n-     * virtual machine is terminated externally, for example with the\n-     * {@code SIGKILL} signal on Unix or the {@code TerminateProcess} call on\n-     * Microsoft Windows.  The virtual machine may also abort if a native\n-     * method goes awry by, for example, corrupting internal data structures or\n-     * attempting to access nonexistent memory.  If the virtual machine aborts\n-     * then no guarantee can be made about whether or not any shutdown hooks\n-     * will be run.\n-     *\n@@ -193,3 +216,3 @@\n-     *          If the specified hook has already been registered,\n-     *          or if it can be determined that the hook is already running or\n-     *          has already been run\n+     *          If the same hook (compared using {@code ==}) as the specified hook has\n+     *          already been registered, or if it can be determined that the hook is\n+     *          already running or has already been run\n@@ -198,2 +221,1 @@\n-     *          If the virtual machine is already in the process\n-     *          of shutting down\n+     *          If the shutdown sequence has already begun\n@@ -221,0 +243,3 @@\n+     * Hooks are compared using {@code ==}.\n+     * Registration and de-registration of shutdown hooks is disallowed\n+     * once the shutdown sequence has begun.\n@@ -228,2 +253,1 @@\n-     *          If the virtual machine is already in the process of shutting\n-     *          down\n+     *          If the shutdown sequence has already begun\n@@ -249,8 +273,9 @@\n-     * Forcibly terminates the currently running Java virtual machine.  This\n-     * method never returns normally.\n-     *\n-     * <p> This method should be used with extreme caution.  Unlike the\n-     * {@link #exit exit} method, this method does not cause shutdown\n-     * hooks to be started.  If the shutdown sequence has already been\n-     * initiated then this method does not wait for any running\n-     * shutdown hooks to finish their work.\n+     * Immediately <a href=\"#termination\">terminates<\/a> the Java Virtual Machine. Termination\n+     * is unconditional and immediate. This method does not initiate the\n+     * <a href=\"#shutdown\">shutdown sequence<\/a>, nor does it wait for the shutdown sequence\n+     * to finish if it is already in progress. This method never returns normally.\n+     *\n+     * @apiNote\n+     * This method should be used with extreme caution. Using it may circumvent or disrupt\n+     * any cleanup actions intended to be performed by shutdown hooks, possibly leading to\n+     * data corruption.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":113,"deletions":88,"binary":false,"changes":201,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -313,1 +313,1 @@\n- *       See <a href=\"https:\/\/openjdk.java.net\/jeps\/411\">JEP 411<\/a> for\n+ *       See <a href=\"https:\/\/openjdk.org\/jeps\/411\">JEP 411<\/a> for\n","filename":"src\/java.base\/share\/classes\/java\/lang\/SecurityManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1888,3 +1888,4 @@\n-     * Terminates the currently running Java Virtual Machine. The\n-     * argument serves as a status code; by convention, a nonzero status\n-     * code indicates abnormal termination.\n+     * Initiates the <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> of the\n+     * Java Virtual Machine. This method always blocks indefinitely. The argument\n+     * serves as a status code; by convention, a nonzero status code indicates\n+     * abnormal termination.\n@@ -1892,2 +1893,2 @@\n-     * This method calls the {@code exit} method in class\n-     * {@code Runtime}. This method never returns normally.\n+     * This method calls the {@code exit} method in class {@code Runtime}. This\n+     * method never returns normally.\n@@ -1895,2 +1896,1 @@\n-     * The call {@code System.exit(n)} is effectively equivalent to\n-     * the call:\n+     * The call {@code System.exit(n)} is effectively equivalent to the call:\n@@ -1901,5 +1901,5 @@\n-     * @param      status   exit status.\n-     * @throws  SecurityException\n-     *        if a security manager exists and its {@code checkExit}\n-     *        method doesn't allow exit with the specified status.\n-     * @see        java.lang.Runtime#exit(int)\n+     * @param  status exit status.\n+     * @throws SecurityException\n+     *         if a security manager exists and its {@code checkExit} method\n+     *         doesn't allow exit with the specified status.\n+     * @see    java.lang.Runtime#exit(int)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-import jdk.internal.vm.annotation.Stable;\n@@ -66,5 +65,10 @@\n- * <p> {@code Thread} defines constructors and a {@link Builder} to create threads\n- * that execute {@link Runnable} tasks. {@linkplain  #start() Starting} a thread\n- * schedules it to execute concurrently with the thread that caused it to start.\n- * The newly started thread invokes the task's {@link Runnable#run() run} method.\n- * Thread defines the {@link #join() join} method to wait for a thread to terminate.\n+ * <p> {@code Thread} defines constructors and a {@link Builder} to create threads.\n+ * {@linkplain #start() Starting} a thread schedules it to execute its {@link #run() run}\n+ * method. The newly started thread executes concurrently with the thread that caused\n+ * it to start.\n+ *\n+ * <p> A thread <i>terminates<\/i> if either its {@code run} method completes normally,\n+ * or if its {@code run} method completes abruptly and the appropriate {@linkplain\n+ * Thread.UncaughtExceptionHandler uncaught exception handler} completes normally or\n+ * abruptly. With no code left to run, the thread has completed execution. The\n+ * {@link #join() join} method can be used to wait for a thread to terminate.\n@@ -97,5 +101,3 @@\n- * The Java virtual machine terminates when all started non-daemon threads have\n- * terminated. Unstarted non-daemon threads do not prevent the Java virtual machine\n- * from terminating. The Java virtual machine can also be terminated by invoking\n- * the {@linkplain Runtime#exit(int)} method, in which case it will terminate even\n- * if there are non-daemon threads still running.\n+ * The <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> begins when all started\n+ * non-daemon threads have terminated. Unstarted non-daemon threads do not prevent\n+ * the shutdown sequence from beginning.\n@@ -127,3 +129,4 @@\n- * <p> Virtual threads are daemon threads and so do not prevent the Java virtual\n- * machine from terminating. Virtual threads have a fixed {@linkplain #getPriority()\n- * thread priority} that cannot be changed.\n+ * <p> Virtual threads are daemon threads and so do not prevent the\n+ * <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> from beginning.\n+ * Virtual threads have a fixed {@linkplain #getPriority() thread priority}\n+ * that cannot be changed.\n@@ -2203,2 +2206,2 @@\n-     * The Java virtual machine terminates when all started non-daemon threads have\n-     * terminated.\n+     * The <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> begins when all\n+     * started non-daemon threads have terminated.\n@@ -2206,1 +2209,1 @@\n-     * The daemon status of a virtual thread is always {@code true} and cannot be\n+     * <p> The daemon status of a virtual thread is always {@code true} and cannot be\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -378,1 +378,0 @@\n-            @SuppressWarnings(\"deprecation\")\n@@ -449,1 +448,0 @@\n-                @SuppressWarnings(\"deprecation\")\n@@ -585,1 +583,0 @@\n-            @SuppressWarnings(\"deprecation\")\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadGroup.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/181\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/181\">\n@@ -205,1 +205,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/371\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/371\">\n@@ -230,1 +230,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/306\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/306\">\n@@ -232,1 +232,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/409\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/409\">\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ClassFileFormatVersion.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3090,0 +3090,4 @@\n+     * The behavior of comparing the result of this method for\n+     * equality to 0 is analogous to checking the <a\n+     * href=\"{@docRoot}\/java.base\/java\/lang\/Double.html#fpNumericalEq\">numerical\n+     * equality<\/a> of {@code double} values.\n@@ -3182,0 +3186,3 @@\n+     * The behavior of this method is analogous to checking the <a\n+     * href=\"{@docRoot}\/java.base\/java\/lang\/Double.html#repEquivalence\">representation\n+     * equivalence<\/a> of {@code double} values.\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3892,1 +3892,3 @@\n-\n+        if (w.bitLength() > PRIME_SEARCH_BIT_LENGTH_LIMIT + 1) {\n+            throw new ArithmeticException(\"Primality test implementation restriction on bitLength\");\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -443,1 +443,1 @@\n-        protocol = toLowerCase(protocol);\n+        protocol = lowerCaseProtocol(protocol);\n@@ -636,1 +636,1 @@\n-                    String s = toLowerCase(spec.substring(start, i));\n+                    String s = lowerCaseProtocol(spec.substring(start, i));\n@@ -1387,3 +1387,7 @@\n-    static String toLowerCase(String protocol) {\n-        if (protocol.equals(\"jrt\") || protocol.equals(\"file\") || protocol.equals(\"jar\")) {\n-            return protocol;\n+    static String lowerCaseProtocol(String protocol) {\n+        if (protocol.equals(\"jrt\")) {\n+            return \"jrt\";\n+        } else if (protocol.equals(\"file\")) {\n+            return \"file\";\n+        } else if (protocol.equals(\"jar\")) {\n+            return \"jar\";\n","filename":"src\/java.base\/share\/classes\/java\/net\/URL.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1095,1 +1095,1 @@\n-        protocol = protocol.toLowerCase(Locale.US);\n+        protocol = URL.lowerCaseProtocol(protocol);\n@@ -1111,1 +1111,1 @@\n-        Boolean protoDefault = defaultCaching.get(protocol.toLowerCase(Locale.US));\n+        Boolean protoDefault = defaultCaching.get(URL.lowerCaseProtocol(protocol));\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLConnection.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -779,1 +779,1 @@\n-    private StringBuffer key = new StringBuffer(5);\n+    private StringBuilder key = new StringBuilder(5);\n","filename":"src\/java.base\/share\/classes\/java\/text\/CollationElementIterator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -164,6 +164,6 @@\n-        StringBuffer temp = getStringBuffer();\n-        temp.append('.');\n-        temp.append(digits, 0, count);\n-        temp.append('E');\n-        temp.append(decimalAt);\n-        return Double.parseDouble(temp.toString());\n+        return Double.parseDouble(getStringBuilder()\n+                .append('.')\n+                .append(digits, 0, count)\n+                .append('E')\n+                .append(decimalAt)\n+                .toString());\n@@ -190,1 +190,1 @@\n-        StringBuffer temp = getStringBuffer();\n+        StringBuilder temp = getStringBuilder();\n@@ -739,1 +739,1 @@\n-            other.tempBuffer = null;\n+            other.tempBuilder = null;\n@@ -791,6 +791,7 @@\n-        StringBuffer buf = getStringBuffer();\n-        buf.append(\"0.\");\n-        buf.append(digits, 0, count);\n-        buf.append(\"x10^\");\n-        buf.append(decimalAt);\n-        return buf.toString();\n+\n+        return getStringBuilder()\n+                .append(\"0.\")\n+                .append(digits, 0, count)\n+                .append(\"x10^\")\n+                .append(decimalAt)\n+                .toString();\n@@ -799,1 +800,1 @@\n-    private StringBuffer tempBuffer;\n+    private StringBuilder tempBuilder;\n@@ -801,3 +802,3 @@\n-    private StringBuffer getStringBuffer() {\n-        if (tempBuffer == null) {\n-            tempBuffer = new StringBuffer(MAX_COUNT);\n+    private StringBuilder getStringBuilder() {\n+        if (tempBuilder == null) {\n+            tempBuilder = new StringBuilder(MAX_COUNT);\n@@ -805,1 +806,1 @@\n-            tempBuffer.setLength(0);\n+            tempBuilder.setLength(0);\n@@ -807,1 +808,1 @@\n-        return tempBuffer;\n+        return tempBuilder;\n","filename":"src\/java.base\/share\/classes\/java\/text\/DigitList.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-                        tmp.addToBuffer(result, false, withWhiteSpace, last);\n+                        tmp.addToBuilder(result, false, withWhiteSpace, last);\n@@ -108,1 +108,1 @@\n-                entry.addToBuffer(result, false, withWhiteSpace, null);\n+                entry.addToBuilder(result, false, withWhiteSpace, null);\n@@ -115,1 +115,1 @@\n-                tmp.addToBuffer(result, false, withWhiteSpace, last);\n+                tmp.addToBuilder(result, false, withWhiteSpace, last);\n@@ -154,1 +154,1 @@\n-                entry.addToBuffer(result, true, withWhiteSpace, null);\n+                entry.addToBuilder(result, true, withWhiteSpace, null);\n@@ -214,1 +214,1 @@\n-    private transient StringBuffer excess = new StringBuffer();\n+    private transient StringBuilder excess = new StringBuilder();\n@@ -303,1 +303,1 @@\n-                              StringBuffer excessChars) throws ParseException\n+                              StringBuilder excessChars) throws ParseException\n","filename":"src\/java.base\/share\/classes\/java\/text\/MergeCollation.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        addToBuffer(result, true, false, null);\n+        addToBuilder(result, true, false, null);\n@@ -114,4 +114,4 @@\n-    void addToBuffer(StringBuilder toAddTo,\n-                     boolean showExtension,\n-                     boolean showWhiteSpace,\n-                     PatternEntry lastEntry)\n+    void addToBuilder(StringBuilder toAddTo,\n+                      boolean showExtension,\n+                      boolean showWhiteSpace,\n+                      PatternEntry lastEntry)\n@@ -193,2 +193,2 @@\n-                 StringBuffer chars,\n-                 StringBuffer extension)\n+                 StringBuilder chars,\n+                 StringBuilder extension)\n@@ -290,2 +290,2 @@\n-        private StringBuffer newChars = new StringBuffer();\n-        private StringBuffer newExtension = new StringBuffer();\n+        private StringBuilder newChars = new StringBuilder();\n+        private StringBuilder newExtension = new StringBuilder();\n","filename":"src\/java.base\/share\/classes\/java\/text\/PatternEntry.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2434,1 +2434,0 @@\n-            int cutoverGap = 0;\n@@ -2450,3 +2449,1 @@\n-                int realDayOfYear = (int)(fixedDate - fixedDateJan1) + 1;\n-                cutoverGap = dayOfYear - realDayOfYear;\n-                dayOfYear = realDayOfYear;\n+                dayOfYear = (int)(fixedDate - fixedDateJan1) + 1;\n","filename":"src\/java.base\/share\/classes\/java\/util\/GregorianCalendar.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2121,1 +2121,0 @@\n-        Era era = date.getEra();\n","filename":"src\/java.base\/share\/classes\/java\/util\/JapaneseImperialCalendar.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3024,1 +3024,1 @@\n-        \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+        \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CompletableFuture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6379,1 +6379,1 @@\n-        \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+        \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentHashMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1573,1 +1573,1 @@\n-        \/\/ https:\/\/bugs.openjdk.java.net\/browse\/JDK-8246587\n+        \/\/ https:\/\/bugs.openjdk.org\/browse\/JDK-8246587\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-        \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+        \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/FutureTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1663,1 +1663,1 @@\n-        \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+        \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/LinkedTransferQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1150,1 +1150,1 @@\n-        \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+        \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/Phaser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1520,1 +1520,1 @@\n-            \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+            \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/SubmissionPublisher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1165,1 +1165,1 @@\n-        \/\/ LockSupport.park: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8074773\n+        \/\/ LockSupport.park: https:\/\/bugs.openjdk.org\/browse\/JDK-8074773\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/SynchronousQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * Features\" (http:\/\/openjdk.java.net\/jeps\/12).\n+ * Features\" (https:\/\/openjdk.org\/jeps\/12).\n@@ -62,0 +62,4 @@\n+    \/**\n+     * Enum of preview features in the current release.\n+     * Values should be annotated with the feature's {@code JEP}.\n+     *\/\n@@ -63,1 +67,3 @@\n-        SWITCH_PATTERN_MATCHING,\n+        @JEP(number=427, title=\"Pattern Matching for switch\", status=\"Third Preview\")\n+        SWITCH_PATTERN_MATCHING(),\n+        @JEP(number=405, title=\"Record Patterns\")\n@@ -65,0 +71,1 @@\n+        @JEP(number=425, title=\"Virtual Threads\")\n@@ -66,0 +73,1 @@\n+        @JEP(number=424, title=\"Foreign Function & Memory API\")\n@@ -70,0 +78,1 @@\n+        @JEP(number=0, title=\"Test Feature\")\n@@ -73,0 +82,14 @@\n+\n+    \/**\n+     * Annotation identifying the JEP associated with a preview feature.\n+     *\/\n+    @Target(ElementType.FIELD)\n+    @Retention(RetentionPolicy.CLASS)\n+    @interface JEP {\n+        \/** JEP number *\/\n+        int number() default 0;\n+        \/** JEP title in plain text *\/\n+        String title();\n+        \/** JEP status such as \"Preview\", \"Second Preview\", etc *\/\n+        String status() default \"Preview\";\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,0 @@\n-                                         Class<?>[] checkedExceptions,\n@@ -79,1 +78,0 @@\n-                                         checkedExceptions,\n@@ -89,1 +87,0 @@\n-                                                   Class<?>[] checkedExceptions,\n@@ -96,1 +93,0 @@\n-                                              checkedExceptions,\n@@ -107,1 +103,0 @@\n-                                     Class<?>[] checkedExceptions,\n@@ -116,1 +111,0 @@\n-                     checkedExceptions,\n@@ -129,1 +123,0 @@\n-                                       Class<?>[] checkedExceptions,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessorGenerator.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,0 @@\n-                                            c.getExceptionTypes(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeConstructorAccessorImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,0 @@\n-                                       method.getExceptionTypes(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeMethodAccessorImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,0 @@\n-                                method.getExceptionTypes(),\n@@ -214,1 +213,0 @@\n-                                            c.getExceptionTypes(),\n@@ -424,1 +422,0 @@\n-                                             constructorToCall.getExceptionTypes(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-            result[j>>2] = (result[j>>2] << 8) | seed[j];\n+            result[j>>2] = (result[j>>2] << 8) | (seed[j] & 0xFF);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/random\/RandomSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,2 +52,8 @@\n-            \/* protocol is compared case-insensitive, so convert to lowercase *\/\n-            protocol = protocol.toLowerCase();\n+            \/* protocol is compared case-insensitive, so convert to lowercase\n+             * if needed. URL will store from lower-cased String literals for\n+             * built-in protocols, so avoid calling toLowerCase for these and\n+             * use identity tests for speed\n+             *\/\n+            if (protocol != \"file\" && protocol != \"jrt\" && protocol != \"jar\") {\n+                protocol = protocol.toLowerCase();\n+            }\n@@ -61,2 +67,3 @@\n-            host = host.toLowerCase();\n-            strForm.append(host);\n+            if (!host.isEmpty()) {\n+                strForm.append(host.toLowerCase());\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/URLUtil.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -125,0 +125,6 @@\n+        \/\/ this method may need to close an HttpClient, either because\n+        \/\/ it is not cacheable, or because the cache is at its capacity.\n+        \/\/ In the latter case, we close the least recently used client.\n+        \/\/ The client to close is stored in oldClient, and is closed\n+        \/\/ after cacheLock is released.\n+        HttpClient oldClient = null;\n@@ -175,1 +181,1 @@\n-                    http.closeServer();\n+                    oldClient = http;\n@@ -182,1 +188,1 @@\n-                v.put(http);\n+                oldClient = v.put(http);\n@@ -187,0 +193,4 @@\n+        \/\/ close after releasing locks\n+        if (oldClient != null) {\n+            oldClient.closeServer();\n+        }\n@@ -194,17 +204,0 @@\n-    \/* remove an obsolete HttpClient from its VectorCache *\/\n-    public void remove(HttpClient h, Object obj) {\n-        cacheLock.lock();\n-        try {\n-            KeepAliveKey key = new KeepAliveKey(h.url, obj);\n-            ClientVector v = super.get(key);\n-            if (v != null) {\n-                v.remove(h);\n-                if (v.isEmpty()) {\n-                    removeVector(key);\n-                }\n-            }\n-        } finally {\n-            cacheLock.unlock();\n-        }\n-    }\n-\n@@ -246,0 +239,1 @@\n+            List<HttpClient> closeList = null;\n@@ -257,1 +251,1 @@\n-                        KeepAliveEntry e = v.peek();\n+                        KeepAliveEntry e = v.peekLast();\n@@ -260,2 +254,5 @@\n-                                v.poll();\n-                                e.hc.closeServer();\n+                                v.pollLast();\n+                                if (closeList == null) {\n+                                    closeList = new ArrayList<>();\n+                                }\n+                                closeList.add(e.hc);\n@@ -265,1 +262,1 @@\n-                            e = v.peek();\n+                            e = v.peekLast();\n@@ -281,0 +278,6 @@\n+                \/\/ close connections outside cacheLock\n+                if (closeList != null) {\n+                    for (HttpClient hc : closeList) {\n+                        hc.closeServer();\n+                    }\n+                }\n@@ -301,2 +304,2 @@\n-\/* FILO order for recycling HttpClients, should run in a thread\n- * to time them out.  If > maxConns are in use, block.\n+\/* LIFO order for reusing HttpClients. Most recent entries at the front.\n+ * If > maxConns are in use, discard oldest.\n@@ -316,0 +319,1 @@\n+    \/* return a still valid, idle HttpClient *\/\n@@ -319,1 +323,3 @@\n-            if (isEmpty()) {\n+            \/\/ check the most recent connection, use if still valid\n+            KeepAliveEntry e = peekFirst();\n+            if (e == null) {\n@@ -322,3 +328,0 @@\n-\n-            \/\/ Loop until we find a connection that has not timed out\n-            HttpClient hc = null;\n@@ -326,25 +329,2 @@\n-            do {\n-                KeepAliveEntry e = pop();\n-                if ((currentTime - e.idleStartTime) > nap) {\n-                    e.hc.closeServer();\n-                } else {\n-                    hc = e.hc;\n-                    if (KeepAliveCache.logger.isLoggable(PlatformLogger.Level.FINEST)) {\n-                        String msg = \"cached HttpClient was idle for \"\n-                                + Long.toString(currentTime - e.idleStartTime);\n-                        KeepAliveCache.logger.finest(msg);\n-                    }\n-                }\n-            } while ((hc == null) && (!isEmpty()));\n-            return hc;\n-        } finally {\n-            unlock();\n-        }\n-    }\n-\n-    \/* return a still valid, unused HttpClient *\/\n-    void put(HttpClient h) {\n-        lock();\n-        try {\n-            if (size() >= KeepAliveCache.getMaxConnections()) {\n-                h.closeServer(); \/\/ otherwise the connection remains in limbo\n+            if ((currentTime - e.idleStartTime) > nap) {\n+                return null; \/\/ all connections stale - will be cleaned up later\n@@ -352,1 +332,7 @@\n-                push(new KeepAliveEntry(h, System.currentTimeMillis()));\n+                pollFirst();\n+                if (KeepAliveCache.logger.isLoggable(PlatformLogger.Level.FINEST)) {\n+                    String msg = \"cached HttpClient was idle for \"\n+                            + Long.toString(currentTime - e.idleStartTime);\n+                    KeepAliveCache.logger.finest(msg);\n+                }\n+                return e.hc;\n@@ -359,2 +345,2 @@\n-    \/* remove an HttpClient *\/\n-    boolean remove(HttpClient h) {\n+    HttpClient put(HttpClient h) {\n+        HttpClient staleClient = null;\n@@ -363,4 +349,4 @@\n-            for (KeepAliveEntry curr : this) {\n-                if (curr.hc == h) {\n-                    return super.remove(curr);\n-                }\n+            assert KeepAliveCache.getMaxConnections() > 0;\n+            if (size() >= KeepAliveCache.getMaxConnections()) {\n+                \/\/ remove oldest connection\n+                staleClient = removeLast().hc;\n@@ -368,1 +354,1 @@\n-            return false;\n+            addFirst(new KeepAliveEntry(h, System.currentTimeMillis()));\n@@ -372,0 +358,2 @@\n+        \/\/ close after releasing the locks\n+        return staleClient;\n@@ -399,4 +387,4 @@\n-    private String      protocol = null;\n-    private String      host = null;\n-    private int         port = 0;\n-    private Object      obj = null; \/\/ additional key, such as socketfactory\n+    private final String      protocol;\n+    private final String      host;\n+    private final int         port;\n+    private final Object      obj; \/\/ additional key, such as socketfactory\n@@ -443,2 +431,2 @@\n-    HttpClient hc;\n-    long idleStartTime;\n+    final HttpClient hc;\n+    final long idleStartTime;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/KeepAliveCache.java","additions":56,"deletions":68,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -437,0 +437,9 @@\n+    @Override\n+    public void closeServer() {\n+        try {\n+            \/\/ SSLSocket.close may block up to timeout. Make sure it's short.\n+            serverSocket.setSoTimeout(1);\n+        } catch (Exception e) {}\n+        super.closeServer();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/https\/HttpsClient.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -497,1 +497,1 @@\n-        int  d1, d2, d3, d4;\n+        int  d1, d2, d3;\n@@ -510,1 +510,0 @@\n-            d4 = (d3 % 365) + 1;\n@@ -520,1 +519,0 @@\n-            d4 = CalendarUtils.mod(d3, 365) + 1;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/BaseCalendar.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -585,6 +585,2 @@\n-                    \/\/ \"last\", it works for now. From tzdata2020d this hacking\n-                    \/\/ will not work for Asia\/Gaza and Asia\/Hebron which follow\n-                    \/\/ Palestine DST rules.\n-                    if (dom < 0 || dom >= 24 &&\n-                                   !(zoneId.equals(\"Asia\/Gaza\") ||\n-                                     zoneId.equals(\"Asia\/Hebron\"))) {\n+                    \/\/ \"last\", it works for now.\n+                    if (dom < 0 || dom >= 24) {\n@@ -612,1 +608,0 @@\n-                    \/\/ No need of hacking for Asia\/Gaza and Asia\/Hebron from tz2021e\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-dataVersion=172\n+dataVersion=173\n","filename":"src\/java.base\/share\/data\/currency\/CurrencyData.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-tzdata2022c\n+tzdata2022d\n","filename":"src\/java.base\/share\/data\/tzdata\/VERSION","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3401,4 +3401,0 @@\n-#\n-# From Paul Eggert (2019-04-10):\n-# For now, guess spring-ahead transitions are at 00:00 on the Saturday\n-# preceding March's last Sunday (i.e., Sat>=24).\n@@ -3421,0 +3417,12 @@\n+# From Heba Hamad (2022-08-30):\n+# winter time will begin in Palestine from Saturday 10-29, 02:00 AM by\n+# 60 minutes backwards.  Also the state of Palestine adopted the summer\n+# and winter time for the years: 2023,2024,2025,2026 ...\n+# https:\/\/mm.icann.org\/pipermail\/tz\/attachments\/20220830\/9f024566\/Time-0001.pdf\n+# (2022-08-31): ... the Saturday before the last Sunday in March and October\n+# at 2:00 AM ,for the years from 2023 to 2026.\n+# (2022-09-05): https:\/\/mtit.pna.ps\/Site\/New\/1453\n+#\n+# From Paul Eggert (2022-08-31):\n+# For now, assume that this rule will also be used after 2026.\n+\n@@ -3451,2 +3459,2 @@\n-Rule Palestine\t2016\t2018\t-\tMar\tSat>=24\t1:00\t1:00\tS\n-Rule Palestine\t2016\t2018\t-\tOct\tSat>=24\t1:00\t0\t-\n+Rule Palestine\t2016\t2018\t-\tMar\tSat<=30\t1:00\t1:00\tS\n+Rule Palestine\t2016\t2018\t-\tOct\tSat<=30\t1:00\t0\t-\n@@ -3454,2 +3462,2 @@\n-Rule Palestine\t2019\tonly\t-\tOct\tSat>=24\t0:00\t0\t-\n-Rule Palestine\t2020\t2021\t-\tMar\tSat>=24\t0:00\t1:00\tS\n+Rule Palestine\t2019\tonly\t-\tOct\tSat<=30\t0:00\t0\t-\n+Rule Palestine\t2020\t2021\t-\tMar\tSat<=30\t0:00\t1:00\tS\n@@ -3457,2 +3465,4 @@\n-Rule Palestine\t2021\tmax\t-\tOct\tFri>=23\t1:00\t0\t-\n-Rule Palestine\t2022\tmax\t-\tMar\tSun>=25\t0:00\t1:00\tS\n+Rule Palestine\t2021\tonly\t-\tOct\t29\t1:00\t0\t-\n+Rule Palestine\t2022\tonly\t-\tMar\t27\t0:00\t1:00\tS\n+Rule Palestine\t2022\tmax\t-\tOct\tSat<=30\t2:00\t0\t-\n+Rule Palestine\t2023\tmax\t-\tMar\tSat<=30\t2:00\t1:00\tS\n","filename":"src\/java.base\/share\/data\/tzdata\/asia","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -116,0 +116,2 @@\n+Link\tEurope\/Kyiv\t\tEurope\/Uzhgorod\n+Link\tEurope\/Kyiv\t\tEurope\/Zaporozhye\n","filename":"src\/java.base\/share\/data\/tzdata\/backward","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2641,4 +2641,8 @@\n-# From Paul Eggert (2014-03-30):\n-# Simferopol and Sevastopol reportedly changed their central town clocks\n-# late the previous day, but this appears to have been ceremonial\n-# and the discrepancies are small enough to not worry about.\n+# From Tim Parenti (2022-07-01), per Paul Eggert (2014-03-30):\n+# The clocks at the railway station in Simferopol were put forward from 22:00\n+# to 24:00 the previous day in a \"symbolic ceremony\"; however, per\n+# contemporaneous news reports, \"ordinary Crimeans [made] the daylight savings\n+# time switch at 2am\" on Sunday.\n+# https:\/\/www.business-standard.com\/article\/pti-stories\/crimea-to-set-clocks-to-russia-time-114033000014_1.html\n+# https:\/\/www.reuters.com\/article\/us-ukraine-crisis-crimea-time\/crimea-switches-to-moscow-time-amid-incorporation-frenzy-idUKBREA2S0LT20140329\n+# https:\/\/www.bbc.com\/news\/av\/world-europe-26806583\n@@ -3777,2 +3781,2 @@\n-# From Paul Eggert (2022-02-08):\n-# For now, assume that Ukraine's other three zones followed the same rules,\n+# From Paul Eggert (2022-08-27):\n+# For now, assume that Ukraine's zones all followed the same rules,\n@@ -3848,13 +3852,0 @@\n-# From Paul Eggert (2022-04-12):\n-# As is usual in tzdb, Ukrainian zones use the most common English spellings.\n-# In particular, tzdb's name Europe\/Kyiv uses the most common spelling in\n-# English for Ukraine's capital.  Although tzdb's former name was Europe\/Kiev,\n-# \"Kyiv\" is now more common due to widespread reporting of the current conflict.\n-# Conversely, tzdb continues to use the names Europe\/Uzhgorod and\n-# Europe\/Zaporozhye; this is similar to tzdb's use of Europe\/Prague, which is\n-# certainly wrong as a transliteration of the Czech \"Praha\".\n-# English-language spelling of Ukrainian names is in flux, and\n-# some day \"Uzhhorod\" or \"Zaporizhzhia\" may become substantially more\n-# common in English; in the meantime, do not change these\n-# English spellings as that means less disruption for our users.\n-\n@@ -3862,1 +3853,0 @@\n-# This represents most of Ukraine.  See above for the spelling of \"Kyiv\".\n@@ -3871,28 +3861,0 @@\n-\t\t\t2:00\tEU\tEE%sT\n-# Transcarpathia used CET 1990\/1991.\n-# \"Uzhhorod\" is the transliteration of the Rusyn\/Ukrainian pronunciation, but\n-# \"Uzhgorod\" is more common in English.\n-Zone Europe\/Uzhgorod\t1:29:12 -\tLMT\t1890 Oct\n-\t\t\t1:00\t-\tCET\t1940\n-\t\t\t1:00\tC-Eur\tCE%sT\t1944 Oct\n-\t\t\t1:00\t1:00\tCEST\t1944 Oct 26\n-\t\t\t1:00\t-\tCET\t1945 Jun 29\n-\t\t\t3:00\tRussia\tMSK\/MSD\t1990\n-\t\t\t3:00\t-\tMSK\t1990 Jul  1  2:00\n-\t\t\t1:00\t-\tCET\t1991 Mar 31  3:00\n-\t\t\t2:00\t-\tEET\t1992 Mar 20\n-\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n-\t\t\t2:00\tEU\tEE%sT\n-# Zaporozh'ye and eastern Lugansk oblasts observed DST 1990\/1991.\n-# \"Zaporizhzhia\" is the transliteration of the Ukrainian name, but\n-# \"Zaporozh'ye\" is more common in English.  Use the common English\n-# spelling, except omit the apostrophe as it is not allowed in\n-# portable Posix file names.\n-Zone Europe\/Zaporozhye\t2:20:40 -\tLMT\t1880\n-\t\t\t2:20\t-\t+0220\t1924 May  2\n-\t\t\t2:00\t-\tEET\t1930 Jun 21\n-\t\t\t3:00\t-\tMSK\t1941 Aug 25\n-\t\t\t1:00\tC-Eur\tCE%sT\t1943 Oct 25\n-\t\t\t3:00\tRussia\tMSK\/MSD\t1991 Mar 31  2:00\n-\t\t\t2:00\tE-Eur\tEE%sT\t1992 Mar 20\n-\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n","filename":"src\/java.base\/share\/data\/tzdata\/europe","additions":10,"deletions":48,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -1335,2 +1335,8 @@\n-# we will have a voting whether to approve a new Constitution....\n-# https:\/\/www.interior.gob.cl\/noticias\/2022\/08\/09\/comunicado-el-proximo-sabado-10-de-septiembre-los-relojes-se-deben-adelantar-una-hora\/\n+# we will have a voting whether to approve a new Constitution.\n+#\n+# From Eduardo Romero Urra (2022-08-17):\n+# https:\/\/www.diariooficial.interior.gob.cl\/publicaciones\/2022\/08\/13\/43327\/01\/2172567.pdf\n+#\n+# From Paul Eggert (2022-08-17):\n+# Although the presidential decree stops at fall 2026, assume that\n+# similar DST rules will continue thereafter.\n","filename":"src\/java.base\/share\/data\/tzdata\/southamerica","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -427,2 +427,0 @@\n-UA\t+4837+02218\tEurope\/Uzhgorod\tTranscarpathia\n-UA\t+4750+03510\tEurope\/Zaporozhye\tZaporozhye and east Lugansk\n","filename":"src\/java.base\/share\/data\/tzdata\/zone.tab","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,4 +102,4 @@\n-                p = t*(pS0+t*(pS1+t*(pS2+t*(pS3+t*(pS4+t*pS5)))));\n-                q = one+t*(qS1+t*(qS2+t*(qS3+t*qS4)));\n-                w = p\/q;\n-                return x+x*w;\n+            p = t*(pS0+t*(pS1+t*(pS2+t*(pS3+t*(pS4+t*pS5)))));\n+            q = one+t*(qS1+t*(qS2+t*(qS3+t*qS4)));\n+            w = p\/q;\n+            return x+x*w;\n","filename":"src\/java.base\/share\/native\/libfdlibm\/e_asin.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -200,1 +200,2 @@\n-            for(j=0,fw=0.0;j<=jx;j++) fw += x[j]*f[jx+i-j]; q[i] = fw;\n+            for(j=0,fw=0.0;j<=jx;j++) fw += x[j]*f[jx+i-j];\n+            q[i] = fw;\n","filename":"src\/java.base\/share\/native\/libfdlibm\/k_rem_pio2.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n- * described in http:\/\/mail.openjdk.java.net\/pipermail\/core-libs-dev\/2018-September\/055333.html).\n+ * described in http:\/\/mail.openjdk.org\/pipermail\/core-libs-dev\/2018-September\/055333.html).\n","filename":"src\/java.base\/unix\/native\/libjava\/ProcessImpl_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -561,1 +561,1 @@\n-                        } else if (buildNumber > 17676) {\n+                        } else if (buildNumber > 17762) {\n","filename":"src\/java.base\/windows\/native\/libjava\/java_props_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/213\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/213\">\n@@ -215,1 +215,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/286\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/286\">\n@@ -232,1 +232,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/323\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/323\">\n@@ -274,1 +274,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/361\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/361\">\n@@ -290,1 +290,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/378\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/378\">\n@@ -307,1 +307,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/394\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/394\">\n@@ -309,1 +309,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/395\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/395\">\n@@ -326,1 +326,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/306\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/306\">\n@@ -328,1 +328,1 @@\n-     * @see <a href=\"https:\/\/openjdk.java.net\/jeps\/409\">\n+     * @see <a href=\"https:\/\/openjdk.org\/jeps\/409\">\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -327,2 +327,5 @@\n-            throw new IOException(\"Image can not be encoded with compression type \"\n-                                  + BMPCompressionTypes.getName(compressionType));\n+            throw new\n+            IOException(\"Image can not be encoded with compression type \"\n+                        + BMPCompressionTypes.getName(compressionType)\n+                        + \" and \" + colorModel.getPixelSize()\n+                        + \" bits per pixel\");\n@@ -1455,1 +1458,0 @@\n-        int biType = imgType.getBufferedImageType();\n@@ -1457,0 +1459,4 @@\n+        if (bpp != 0 && bpp != 1 && bpp != 4 && bpp != 8 &&\n+            bpp != 15 && bpp != 16 && bpp != 24 && bpp != 32) {\n+            return false;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPImageWriter.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,5 @@\n+import java.awt.image.ColorModel;\n+import java.awt.image.IndexColorModel;\n+import java.awt.image.MultiPixelPackedSampleModel;\n+import java.awt.image.PixelInterleavedSampleModel;\n+import java.awt.image.SampleModel;\n@@ -39,0 +44,1 @@\n+\n@@ -46,0 +52,1 @@\n+\n@@ -47,5 +54,0 @@\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.MultiPixelPackedSampleModel;\n-import java.awt.image.PixelInterleavedSampleModel;\n-import java.awt.image.SampleModel;\n@@ -657,0 +659,6 @@\n+            if (ignoreMetadata) {\n+                stream.skipBytes(length);\n+                continue;\n+            }\n+            byte[] subBlockData =\n+                ReaderUtil.staggeredReadByteStream(stream, length);\n@@ -659,1 +667,2 @@\n-            stream.readFully(newData, data.length, length);\n+            System.arraycopy(subBlockData, 0, newData,\n+                             data.length, length);\n@@ -662,1 +671,0 @@\n-\n@@ -697,2 +705,3 @@\n-                            new byte[3*numLCTEntries];\n-                        stream.readFully(imageMetadata.localColorTable);\n+                            ReaderUtil.\n+                                staggeredReadByteStream(stream,\n+                                                       (3 * numLCTEntries));\n@@ -729,17 +738,21 @@\n-                        imageMetadata.hasPlainTextExtension = true;\n-                        imageMetadata.textGridLeft =\n-                            stream.readUnsignedShort();\n-                        imageMetadata.textGridTop =\n-                            stream.readUnsignedShort();\n-                        imageMetadata.textGridWidth =\n-                            stream.readUnsignedShort();\n-                        imageMetadata.textGridHeight =\n-                            stream.readUnsignedShort();\n-                        imageMetadata.characterCellWidth =\n-                            stream.readUnsignedByte();\n-                        imageMetadata.characterCellHeight =\n-                            stream.readUnsignedByte();\n-                        imageMetadata.textForegroundColor =\n-                            stream.readUnsignedByte();\n-                        imageMetadata.textBackgroundColor =\n-                            stream.readUnsignedByte();\n+                        if (!ignoreMetadata) {\n+                            imageMetadata.hasPlainTextExtension = true;\n+                            imageMetadata.textGridLeft =\n+                                    stream.readUnsignedShort();\n+                            imageMetadata.textGridTop =\n+                                    stream.readUnsignedShort();\n+                            imageMetadata.textGridWidth =\n+                                    stream.readUnsignedShort();\n+                            imageMetadata.textGridHeight =\n+                                    stream.readUnsignedShort();\n+                            imageMetadata.characterCellWidth =\n+                                    stream.readUnsignedByte();\n+                            imageMetadata.characterCellHeight =\n+                                    stream.readUnsignedByte();\n+                            imageMetadata.textForegroundColor =\n+                                    stream.readUnsignedByte();\n+                            imageMetadata.textBackgroundColor =\n+                                    stream.readUnsignedByte();\n+                        } else {\n+                            stream.skipBytes(length);\n+                        }\n@@ -749,2 +762,5 @@\n-                        if (imageMetadata.comments == null) {\n-                            imageMetadata.comments = new ArrayList<>();\n+                        if (!ignoreMetadata) {\n+                            if (imageMetadata.comments == null) {\n+                                imageMetadata.comments = new ArrayList<>();\n+                            }\n+                            imageMetadata.comments.add(comment);\n@@ -752,1 +768,0 @@\n-                        imageMetadata.comments.add(comment);\n@@ -755,0 +770,2 @@\n+                        int offset = 0;\n+                        byte[] blockData = new byte[0];\n@@ -757,7 +774,12 @@\n-\n-                        \/\/ read available data\n-                        byte[] blockData = new byte[blockSize];\n-                        stream.readFully(blockData);\n-\n-                        int offset = copyData(blockData, 0, applicationID);\n-                        offset = copyData(blockData, offset, authCode);\n+                        if (!ignoreMetadata) {\n+                            \/\/ read available data\n+                            blockData =\n+                                ReaderUtil.staggeredReadByteStream(stream,\n+                                                                   blockSize);\n+\n+                            offset =\n+                                copyData(blockData, 0, applicationID);\n+                            offset = copyData(blockData, offset, authCode);\n+                        } else {\n+                            stream.skipBytes(blockSize);\n+                        }\n@@ -767,1 +789,2 @@\n-                        if (offset < blockSize) {\n+                        if (!ignoreMetadata &&\n+                            offset < blockSize) {\n@@ -772,2 +795,4 @@\n-                            System.arraycopy(blockData, offset, data, 0, len);\n-                            System.arraycopy(applicationData, 0, data, len,\n+                            System.arraycopy(blockData, offset,\n+                                             data, 0, len);\n+                            System.arraycopy(applicationData, 0,\n+                                             data, len,\n@@ -779,6 +804,13 @@\n-                        \/\/ Init lists if necessary\n-                        if (imageMetadata.applicationIDs == null) {\n-                            imageMetadata.applicationIDs = new ArrayList<>();\n-                            imageMetadata.authenticationCodes =\n-                                new ArrayList<>();\n-                            imageMetadata.applicationData = new ArrayList<>();\n+                        if (!ignoreMetadata) {\n+                            \/\/ Init lists if necessary\n+                            if (imageMetadata.applicationIDs == null) {\n+                                imageMetadata.applicationIDs =\n+                                    new ArrayList<>();\n+                                imageMetadata.authenticationCodes =\n+                                    new ArrayList<>();\n+                                imageMetadata.applicationData =\n+                                    new ArrayList<>();\n+                            }\n+                            imageMetadata.applicationIDs.add(applicationID);\n+                            imageMetadata.authenticationCodes.add(authCode);\n+                            imageMetadata.applicationData.add(applicationData);\n@@ -786,3 +818,0 @@\n-                        imageMetadata.applicationIDs.add(applicationID);\n-                        imageMetadata.authenticationCodes.add(authCode);\n-                        imageMetadata.applicationData.add(applicationData);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFImageReader.java","additions":78,"deletions":49,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -3905,6 +3905,6 @@\n-        long bits = Double.doubleToLongBits(m00);\n-        bits = bits * 31 + Double.doubleToLongBits(m01);\n-        bits = bits * 31 + Double.doubleToLongBits(m02);\n-        bits = bits * 31 + Double.doubleToLongBits(m10);\n-        bits = bits * 31 + Double.doubleToLongBits(m11);\n-        bits = bits * 31 + Double.doubleToLongBits(m12);\n+        long bits = hash(m00);\n+        bits = bits * 31 + hash(m01);\n+        bits = bits * 31 + hash(m02);\n+        bits = bits * 31 + hash(m10);\n+        bits = bits * 31 + hash(m11);\n+        bits = bits * 31 + hash(m12);\n@@ -3914,0 +3914,10 @@\n+    \/**\n+     * Returns a hash code for the given value, with negative zero\n+     * collapsed to the single positive zero.\n+     *\/\n+    private static long hash(double m) {\n+        long h = Double.doubleToLongBits(m);\n+        if (h == 0x8000000000000000L) h = 0;    \/\/ Replace -0 by +0.\n+        return h;\n+    }\n+\n@@ -3931,2 +3941,11 @@\n-        return ((m00 == a.m00) && (m01 == a.m01) && (m02 == a.m02) &&\n-                (m10 == a.m10) && (m11 == a.m11) && (m12 == a.m12));\n+        return equals(m00, a.m00) && equals(m01, a.m01) &&\n+               equals(m02, a.m02) && equals(m10, a.m10) &&\n+               equals(m11, a.m11) && equals(m12, a.m12);\n+    }\n+\n+    \/**\n+     * Compares the given floating point values, with negative zero\n+     * considered equals to positive zero.\n+     *\/\n+    private static boolean equals(double a, double b) {\n+        return (a == b) || (Double.isNaN(a) && Double.isNaN(b));\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/AffineTransform.java","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -1966,1 +1966,1 @@\n-             *   &lt;a href=\"http:\/\/openjdk.java.net\"&gt;OpenJDK&lt;\/a&gt;\n+             *   &lt;a href=\"https:\/\/openjdk.org\"&gt;OpenJDK&lt;\/a&gt;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JEditorPane.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.awt.event.*;\n@@ -31,1 +30,0 @@\n-import javax.swing.border.*;\n@@ -36,3 +34,0 @@\n-import java.util.Enumeration;\n-import java.util.HashSet;\n-import java.util.Set;\n@@ -58,2 +53,0 @@\n-    private KeyListener keyListener = null;\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicRadioButtonUI.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -731,0 +731,2 @@\n+        table.put(\"PasswordField.echoChar\", '*');\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthLookAndFeel.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,0 +70,13 @@\n+    \/**\n+     * Installs the necessary properties on the JPasswordField.\n+     *\/\n+    @Override\n+    protected void installDefaults() {\n+        super.installDefaults();\n+        String prefix = getPropertyPrefix();\n+        Character echoChar = (Character)UIManager.getDefaults().get(prefix + \".echoChar\");\n+        if (echoChar != null) {\n+            LookAndFeel.installProperty(getComponent(), \"echoChar\", echoChar);\n+        }\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthPasswordFieldUI.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -782,0 +782,8 @@\n+            } else if (c instanceof JCheckBox) {\n+                if (UIManager.getColor(\"CheckBox.disabledText\") != null) {\n+                    return UIManager.getColor(\"CheckBox.disabledText\");\n+                }\n+            } else if (c instanceof JRadioButton) {\n+                if (UIManager.getColor(\"RadioButton.disabledText\") != null) {\n+                    return UIManager.getColor(\"RadioButton.disabledText\");\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthStyle.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1434,1 +1434,2 @@\n-     * Parameterless version of realsync which uses default timout (see DEFAUL_WAIT_TIME).\n+     * Parameterless version of {@link #realSync(long)} which uses\n+     * the default timeout of {@link #DEFAULT_WAIT_TIME}.\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/SunToolkit.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-        \/\/ (see e.g. https:\/\/bugs.openjdk.java.net\/browse\/JDK-6260652)\n+        \/\/ (see e.g. https:\/\/bugs.openjdk.org\/browse\/JDK-6260652)\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/util\/IdentityArrayList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,0 +23,21 @@\n+\n+Copyright (C) 1996-2022 by David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2007-2022 by Dereg Clegg and Michael Toftdal.\n+Copyright (C) 1996-2022 by Just van Rossum, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2004-2022 by Masatake YAMATO and Redhat K.K.\n+Copyright (C) 2007-2022 by Derek Clegg and Michael Toftdal.\n+Copyright (C) 2007-2022 by David Turner.\n+Copyright (C) 2022 by David Turner, Robert Wilhelm, Werner Lemberg, and Moazin Khatti.\n+Copyright (C) 2007-2022 by Rahul Bhalerao <rahul.bhalerao@redhat.com>, <b.rahul.pm@gmail.com>.\n+Copyright (C) 2008-2022 by David Turner, Robert Wilhelm, Werner Lemberg, and suzuki toshiya.\n+Copyright (C) 2019-2022 by Nikhil Ramakrishnan, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2009-2022 by Oran Agra and Mickey Gabel.\n+Copyright (C) 2004-2022 by David Turner, Robert Wilhelm, Werner Lemberg, and George Williams.\n+Copyright (C) 2004-2022 by Masatake YAMATO, Red Hat K.K.,\n+Copyright (C) 2003-2022 by Masatake YAMATO, Redhat K.K.,\n+Copyright (C) 2013-2022 by Google, Inc.\n+Copyright (C) 2018-2022 by David Turner, Robert Wilhelm, Dominik Röttsches, and Werner Lemberg.\n+Copyright (C) 2005-2022 by David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright 2013 by Google, Inc.\n+\n+\n@@ -536,40 +557,28 @@\n-#########################################################################\n-\n---- fthash.c and fthash.h are covered by the following notices ---\n-\n-\/*\n- * Copyright 2000 Computing Research Labs, New Mexico State University\n- * Copyright 2001-2015\n- *   Francesco Zappa Nardelli\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a\n- * copy of this software and associated documentation files (the \"Software\"),\n- * to deal in the Software without restriction, including without limitation\n- * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n- * and\/or sell copies of the Software, and to permit persons to whom the\n- * Software is furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n- * THE COMPUTING RESEARCH LAB OR NEW MEXICO STATE UNIVERSITY BE LIABLE FOR ANY\n- * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n- * OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n- * THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n- *\/\n-\n-  \/**************************************************************************\n-   *\n-   * This file is based on code from bdf.c,v 1.22 2000\/03\/16 20:08:50\n-   *\n-   * taken from Mark Leisher's xmbdfed package\n-   *\n-   *\/\n-   \n-#########################################################################\n-\n-\n---- FreeType 2 PSaux module is covered by the following notices ---\n+```\n+\n+### Additional Freetype Attributions\n+```\n+\n+---------------------------------\n+The below license applies to the following files:\n+libfreetype\/src\/psaux\/psarrst.c\n+libfreetype\/src\/psaux\/psarrst.h\n+libfreetype\/src\/psaux\/psblues.c\n+libfreetype\/src\/psaux\/psblues.h\n+libfreetype\/src\/psaux\/pserror.c\n+libfreetype\/src\/psaux\/pserror.h\n+libfreetype\/src\/psaux\/psfixed.h\n+libfreetype\/src\/psaux\/psfont.c\n+libfreetype\/src\/psaux\/psfont.h\n+libfreetype\/src\/psaux\/psft.c\n+libfreetype\/src\/psaux\/psft.h\n+libfreetype\/src\/psaux\/psglue.h\n+libfreetype\/src\/psaux\/pshints.c\n+libfreetype\/src\/psaux\/pshints.h\n+libfreetype\/src\/psaux\/psintrp.c\n+libfreetype\/src\/psaux\/psintrp.h\n+libfreetype\/src\/psaux\/psread.c\n+libfreetype\/src\/psaux\/psread.h\n+libfreetype\/src\/psaux\/psstack.c\n+libfreetype\/src\/psaux\/psstack.h\n+libfreetype\/src\/psaux\/pstypes.h\n@@ -606,1 +615,0 @@\n-#########################################################################\n@@ -610,0 +618,33 @@\n+### MIT License\n+```\n+\n+---------------------------------\n+The below license applies to the following files:\n+libfreetype\/include\/freetype\/internal\/fthash.h\n+libfreetype\/src\/base\/fthash.c\n+\n+Copyright 2000 Computing Research Labs, New Mexico State University\n+Copyright 2001-2015\n+\n+  Francesco Zappa Nardelli\n+\n+Permission is hereby granted, free of charge, to any person obtaining a\n+copy of this software and associated documentation files (the \"Software\"),\n+to deal in the Software without restriction, including without limitation\n+the rights to use, copy, modify, merge, publish, distribute, sublicense,\n+and\/or sell copies of the Software, and to permit persons to whom the\n+Software is furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in\n+all copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n+THE COMPUTING RESEARCH LAB OR NEW MEXICO STATE UNIVERSITY BE LIABLE FOR ANY\n+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n+OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\n+THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+\n+```\n","filename":"src\/java.desktop\/share\/legal\/freetype.md","additions":82,"deletions":41,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-            return;\n+            goto cleanup;\n@@ -575,0 +575,3 @@\n+        for (i = 0; i < nConfig; i++) {\n+            free(graphicsConfigs[i]);\n+        }\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/awt_GraphicsEnv.c","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -603,0 +603,2 @@\n+        updateIconImages();\n+\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WWindowPeer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -472,1 +472,1 @@\n-   * @see  <a href=\"https:\/\/bugs.openjdk.java.net\/secure\/attachment\/74618\/constant-dynamic.html\">\n+   * @see  <a href=\"https:\/\/bugs.openjdk.org\/secure\/attachment\/74618\/constant-dynamic.html\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/Const.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @see  <a href=\"https:\/\/bugs.openjdk.java.net\/secure\/attachment\/74618\/constant-dynamic.html\">\n+ * @see  <a href=\"https:\/\/bugs.openjdk.org\/secure\/attachment\/74618\/constant-dynamic.html\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantDynamic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,1 +282,1 @@\n-   <xi:include href=\"http:\/\/openjdk.java.net\/xml\/disclaimer.xml\"\/>\n+   <xi:include href=\"https:\/\/openjdk.org\/xml\/disclaimer.xml\"\/>\n@@ -285,1 +285,1 @@\n-   <uri name=\"http:\/\/openjdk.java.net\/xml\/disclaimer.xml\" uri=\"file:\/\/\/pathto\/local\/disclaimer.xml\"\/>\n+   <uri name=\"https:\/\/openjdk.org\/xml\/disclaimer.xml\" uri=\"file:\/\/\/pathto\/local\/disclaimer.xml\"\/>\n@@ -297,2 +297,2 @@\n-    <xsd:import namespace=\"http:\/\/openjdk.java.net\/xsd\/XSDImport_person\"\n-                schemaLocation=\"http:\/\/openjdk.java.net\/xsd\/XSDImport_person.xsd\"\/>\n+    <xsd:import namespace=\"https:\/\/openjdk.org\/xsd\/XSDImport_person\"\n+                schemaLocation=\"https:\/\/openjdk.org\/xsd\/XSDImport_person.xsd\"\/>\n@@ -301,1 +301,1 @@\n-   <uri name=\"http:\/\/openjdk.java.net\/xsd\/XSDImport_person.xsd\" uri=\"file:\/\/\/pathto\/local\/XSDImport_person.xsd\"\/>\n+   <uri name=\"https:\/\/openjdk.org\/xsd\/XSDImport_person.xsd\" uri=\"file:\/\/\/pathto\/local\/XSDImport_person.xsd\"\/>\n@@ -305,1 +305,1 @@\n-   <uriSuffix uriSuffix=\"http:\/\/openjdk.java.net\/xsd\/XSDImport_person\" uri=\"file:\/\/\/pathto\/local\/XSDImport_person.xsd\"\/>\n+   <uriSuffix uriSuffix=\"https:\/\/openjdk.org\/xsd\/XSDImport_person\" uri=\"file:\/\/\/pathto\/local\/XSDImport_person.xsd\"\/>\n@@ -315,1 +315,1 @@\n-   <xsd:include schemaLocation=\"http:\/\/openjdk.java.net\/xsd\/XSDInclude_person.xsd\"\/>\n+   <xsd:include schemaLocation=\"https:\/\/openjdk.org\/xsd\/XSDInclude_person.xsd\"\/>\n@@ -318,1 +318,1 @@\n-   <uri name=\"http:\/\/openjdk.java.net\/xsd\/XSDInclude_person.xsd\" uri=\"file:\/\/\/pathto\/local\/XSDInclude_person.xsd\"\/>\n+   <uri name=\"https:\/\/openjdk.org\/xsd\/XSDInclude_person.xsd\" uri=\"file:\/\/\/pathto\/local\/XSDInclude_person.xsd\"\/>\n@@ -330,1 +330,1 @@\n-   <xsl:include href=\"http:\/\/openjdk.java.net\/xsl\/include.xsl\"\/>\n+   <xsl:include href=\"https:\/\/openjdk.org\/xsl\/include.xsl\"\/>\n@@ -333,1 +333,1 @@\n-   <uri name=\"http:\/\/openjdk.java.net\/xsl\/include.xsl\" uri=\"file:\/\/\/pathto\/local\/include.xsl\"\/>\n+   <uri name=\"https:\/\/openjdk.org\/xsl\/include.xsl\" uri=\"file:\/\/\/pathto\/local\/include.xsl\"\/>\n@@ -345,1 +345,1 @@\n-   <xsl:variable name=\"dummy\" select=\"document('http:\/\/openjdk.java.net\/xsl\/list.xml')\"\/>\n+   <xsl:variable name=\"dummy\" select=\"document('https:\/\/openjdk.org\/xsl\/list.xml')\"\/>\n@@ -348,1 +348,1 @@\n-   <uri name=\"http:\/\/openjdk.java.net\/xsl\/list.xml\" uri=\"file:\/\/\/pathto\/local\/list.xml\"\/>\n+   <uri name=\"https:\/\/openjdk.org\/xsl\/list.xml\" uri=\"file:\/\/\/pathto\/local\/list.xml\"\/>\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/CatalogFeatures.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * http:\/\/hg.openjdk.java.net\/jdk9\/jdk9\/jdk\/raw-file\/tip\/src\/jdk.accessibility\/windows\/native\/bridge\/AccessBridgeCalls.c\n+ * https:\/\/git.openjdk.org\/jdk17\/blob\/master\/src\/jdk.accessibility\/windows\/native\/bridge\/AccessBridgeCalls.c\n@@ -39,2 +39,2 @@\n- * http:\/\/hg.openjdk.java.net\/jdk9\/jdk9\/jdk\/file\/tip\/src\/jdk.accessibility\/windows\/native\/jaccessinspector\/jaccessinspector.cpp\n- * http:\/\/hg.openjdk.java.net\/jdk9\/jdk9\/jdk\/file\/tip\/src\/jdk.accessibility\/windows\/native\/jaccesswalker\/jaccesswalker.cpp\n+ * https:\/\/git.openjdk.org\/jdk17\/blob\/master\/src\/jdk.accessibility\/windows\/native\/jaccessinspector\/jaccessinspector.cpp\n+ * https:\/\/git.openjdk.org\/jdk17\/blob\/master\/src\/jdk.accessibility\/windows\/native\/jaccesswalker\/jaccesswalker.cpp\n","filename":"src\/jdk.accessibility\/windows\/native\/include\/bridge\/AccessBridgeCalls.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2312,1 +2312,2 @@\n-                    return isIntersectionOrUnionType(pt);\n+                    if (isIntersectionOrUnionType(pt))\n+                        return true;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -228,1 +228,1 @@\n-        \/\/ https:\/\/bugs.openjdk.java.net\/browse\/JDK-8225740\n+        \/\/ https:\/\/bugs.openjdk.org\/browse\/JDK-8225740\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractMask.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,1 @@\n-        \/\/ https:\/\/bugs.openjdk.java.net\/browse\/JDK-8225740\n+        \/\/ https:\/\/bugs.openjdk.org\/browse\/JDK-8225740\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-    \/\/ FIXME: appeal to general method (see https:\/\/bugs.openjdk.java.net\/browse\/JDK-6176992)\n+    \/\/ FIXME: appeal to general method (see https:\/\/bugs.openjdk.org\/browse\/JDK-6176992)\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractSpecies.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-     * @see <a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8076112\">JDK-8076112<\/a>\n+     * @see <a href=\"https:\/\/bugs.openjdk.org\/browse\/JDK-8076112\">JDK-8076112<\/a>\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedJavaMethod.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        return new HtmlTree(TagName.UL);\n+        return HtmlTree.UL(HtmlStyle.contentsList);\n@@ -119,0 +119,1 @@\n+        bodyContents.addMainContent(div);\n@@ -124,2 +125,1 @@\n-        div.add(section);\n-        bodyContents.addMainContent(div);\n+        bodyContents.addMainContent(section);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,2 +60,1 @@\n-        super(configuration, filename, PageMode.DEPRECATED, \"deprecated elements\",\n-              configuration.contents.deprecatedAPI, \"doclet.Window_Deprecated_List\");\n+        super(configuration, filename, configuration.deprecatedAPIListBuilder);\n@@ -76,1 +75,2 @@\n-            depr.generateSummaryListFile(configuration.deprecatedAPIListBuilder);\n+            depr.generateSummaryListFile(PageMode.DEPRECATED, \"deprecated elements\",\n+                    configuration.contents.deprecatedAPI, \"doclet.Window_Deprecated_List\");\n@@ -81,2 +81,2 @@\n-    protected void addExtraSection(DeprecatedAPIListBuilder list, Content content) {\n-        List<String> releases = configuration.deprecatedAPIListBuilder.releases;\n+    protected void addContentSelectors(Content target) {\n+        List<String> releases = builder.releases;\n@@ -90,1 +90,1 @@\n-            content.add(tabs);\n+            target.add(tabs);\n@@ -92,1 +92,5 @@\n-        addSummaryAPI(list.getForRemoval(), HtmlIds.FOR_REMOVAL,\n+    }\n+\n+    @Override\n+    protected void addExtraSection(Content content) {\n+        addSummaryAPI(builder.getForRemoval(), HtmlIds.FOR_REMOVAL,\n@@ -114,2 +118,2 @@\n-    protected void addExtraIndexLink(DeprecatedAPIListBuilder list, Content target) {\n-        if (!list.getForRemoval().isEmpty()) {\n+    protected void addExtraIndexLink(Content target) {\n+        if (!builder.getForRemoval().isEmpty()) {\n@@ -132,1 +136,1 @@\n-        List<String> releases = configuration.deprecatedAPIListBuilder.releases;\n+        List<String> releases = builder.releases;\n@@ -152,1 +156,1 @@\n-        List<String> releases = configuration.deprecatedAPIListBuilder.releases;\n+        List<String> releases = builder.releases;\n@@ -163,1 +167,1 @@\n-        List<String> releases = configuration.deprecatedAPIListBuilder.releases;\n+        List<String> releases = builder.releases;\n@@ -176,1 +180,1 @@\n-        List<String> releases = configuration.deprecatedAPIListBuilder.releases;\n+        List<String> releases = builder.releases;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -58,4 +58,2 @@\n-    public NewAPIListWriter(NewAPIBuilder builder, HtmlConfiguration configuration, DocPath filename) {\n-        super(configuration, filename, PageMode.NEW, \"new elements\",\n-                Text.of(getHeading(configuration)),\n-                \"doclet.Window_New_List\");\n+    public NewAPIListWriter(HtmlConfiguration configuration, DocPath filename) {\n+        super(configuration, filename, configuration.newAPIPageBuilder);\n@@ -73,3 +71,3 @@\n-            NewAPIBuilder builder = configuration.newAPIPageBuilder;\n-            NewAPIListWriter writer = new NewAPIListWriter(builder, configuration, DocPaths.NEW_LIST);\n-            writer.generateSummaryListFile(builder);\n+            NewAPIListWriter writer = new NewAPIListWriter(configuration, DocPaths.NEW_LIST);\n+            writer.generateSummaryListFile(PageMode.NEW, \"new elements\",\n+                    Text.of(getHeading(configuration)), \"doclet.Window_New_List\");\n@@ -80,1 +78,1 @@\n-    protected void addExtraSection(NewAPIBuilder list, Content content) {\n+    protected void addContentSelectors(Content content) {\n@@ -96,1 +94,2 @@\n-            content.add(tabs);        }\n+            content.add(tabs);\n+        }\n@@ -102,1 +101,1 @@\n-        List<String> releases = configuration.newAPIPageBuilder.releases;\n+        List<String> releases = builder.releases;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NewAPIListWriter.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -101,0 +101,1 @@\n+        mainContent.add(div);\n@@ -102,1 +103,1 @@\n-            addLinkToAllPackages(div);\n+            addLinkToAllPackages(mainContent);\n@@ -104,1 +105,0 @@\n-        mainContent.add(div);\n@@ -146,1 +146,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.horizontal);\n+        var ul = HtmlTree.UL(HtmlStyle.horizontal).addStyle(HtmlStyle.contentsList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Set;\n@@ -35,0 +36,4 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -54,1 +59,0 @@\n-\n@@ -56,2 +60,1 @@\n-        super(configuration, filename, PageMode.PREVIEW, \"preview elements\",\n-              configuration.contents.previewAPI, \"doclet.Window_Preview_List\");\n+        super(configuration, filename, configuration.previewAPIListBuilder);\n@@ -71,1 +74,25 @@\n-            depr.generateSummaryListFile(configuration.previewAPIListBuilder);\n+            depr.generateSummaryListFile(PageMode.PREVIEW, \"preview elements\",\n+                    configuration.contents.previewAPI, \"doclet.Window_Preview_List\");\n+        }\n+    }\n+\n+    @Override\n+    protected void addContentSelectors(Content target) {\n+        Set<PreviewAPIListBuilder.JEP> jeps = builder.getJEPs();\n+        if (!jeps.isEmpty()) {\n+            int index = 0;\n+            target.add(HtmlTree.P(contents.getContent(\"doclet.Preview_API_Checkbox_Label\")));\n+            Content list = HtmlTree.UL(HtmlStyle.previewFeatureList);\n+            for (var jep : jeps) {\n+                index++;\n+                HtmlId htmlId = HtmlId.of(\"feature-\" + index);\n+                String jepUrl = resources.getText(\"doclet.Preview_JEP_URL\", jep.number());\n+                list.add(HtmlTree.LI(HtmlTree.LABEL(htmlId.name(),\n+                                HtmlTree.INPUT(\"checkbox\", htmlId)\n+                                        .put(HtmlAttr.CHECKED, \"\")\n+                                        .put(HtmlAttr.ONCLICK,\n+                                                \"toggleGlobal(this, '\" + index + \"', 3)\"))\n+                        .add(HtmlTree.SPAN(Text.of(jep.number() + \": \"))\n+                                .add(HtmlTree.A(jepUrl, Text.of(jep.title() + \" (\" + jep.status() + \")\"))))));\n+            }\n+            target.add(list);\n@@ -85,0 +112,30 @@\n+    @Override\n+    protected void addTableTabs(Table table, String headingKey) {\n+        table.setGridStyle(HtmlStyle.threeColumnSummary)\n+                .setDefaultTab(getTableCaption(headingKey))\n+                .setAlwaysShowDefaultTab(true)\n+                .setRenderTabs(false);\n+        for (PreviewAPIListBuilder.JEP jep : builder.getJEPs()) {\n+            table.addTab(Text.EMPTY, element -> jep == builder.getJEP(element));\n+        }\n+    }\n+\n+    @Override\n+    protected Content getExtraContent(Element element) {\n+        PreviewAPIListBuilder.JEP jep = configuration.previewAPIListBuilder.getJEP(element);\n+        return jep == null ? Text.EMPTY : Text.of(jep.title());\n+    }\n+\n+    @Override\n+    protected TableHeader getTableHeader(String headerKey) {\n+        return new TableHeader(\n+                contents.getContent(headerKey),\n+                Text.of(\"Preview Feature\"),\n+                contents.descriptionLabel)\n+                .sortable(true, true, false); \/\/ Allow sorting by element name and feature\n+    }\n+\n+    @Override\n+    protected HtmlStyle[] getColumnStyles() {\n+        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":61,"deletions":4,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-public class SummaryListWriter<L extends SummaryAPIListBuilder> extends SubWriterHolderWriter {\n+public abstract class SummaryListWriter<B extends SummaryAPIListBuilder> extends SubWriterHolderWriter {\n@@ -54,1 +54,1 @@\n-    private String getHeadingKey(SummaryElementKind kind) {\n+    protected String getHeadingKey(SummaryElementKind kind) {\n@@ -90,4 +90,2 @@\n-    private final PageMode pageMode;\n-    private final String description;\n-    private final Content headContent;\n-    private final String titleKey;\n+    \/** The summary list builder *\/\n+    protected final B builder;\n@@ -100,4 +98,1 @@\n-     * @param pageMode page mode to use\n-     * @param description page description\n-     * @param headContent page heading content\n-     * @param titleKey page title resource key\n+     * @param builder the summary list builder\n@@ -105,4 +100,1 @@\n-\n-    public SummaryListWriter(HtmlConfiguration configuration, DocPath filename,\n-                             PageMode pageMode, String description,\n-                             Content headContent, String titleKey) {\n+    public SummaryListWriter(HtmlConfiguration configuration, DocPath filename, B builder) {\n@@ -110,4 +102,1 @@\n-        this.pageMode = pageMode;\n-        this.description = description;\n-        this.headContent = headContent;\n-        this.titleKey = titleKey;\n+        this.builder = builder;\n@@ -119,1 +108,4 @@\n-     * @param summaryapi list of API summary built already.\n+     * @param pageMode page mode to use\n+     * @param description page description\n+     * @param headContent page heading content\n+     * @param titleKey page title resource key\n@@ -122,1 +114,2 @@\n-    protected void generateSummaryListFile(L summaryapi)\n+    protected void generateSummaryListFile(PageMode pageMode, String description,\n+                                           Content headContent, String titleKey)\n@@ -124,2 +117,1 @@\n-        HtmlTree body = getHeader();\n-        bodyContents.addMainContent(getContentsList(summaryapi));\n+        HtmlTree body = getHeader(pageMode, titleKey);\n@@ -127,1 +119,7 @@\n-        addExtraSection(summaryapi, content);\n+        var heading = HtmlTree.HEADING_TITLE(Headings.PAGE_TITLE_HEADING,\n+                HtmlStyle.title, headContent);\n+        content.add(HtmlTree.DIV(HtmlStyle.header, heading));\n+        addContentSelectors(content);\n+        content.add(HtmlTree.HEADING_TITLE(Headings.CONTENT_HEADING, contents.contentsHeading));\n+        content.add(getContentsList());\n+        addExtraSection(content);\n@@ -129,2 +127,2 @@\n-            if (summaryapi.hasDocumentation(kind)) {\n-                addSummaryAPI(summaryapi.getSet(kind), HtmlIds.forSummaryKind(kind),\n+            if (builder.hasDocumentation(kind)) {\n+                addSummaryAPI(builder.getSet(kind), HtmlIds.forSummaryKind(kind),\n@@ -165,0 +163,1 @@\n+        \/\/ The \"contents-\" + id value is used in JavaScript code to toggle visibility of the link.\n@@ -166,1 +165,1 @@\n-                contents.getContent(headingKey)));\n+                contents.getContent(headingKey))).setId(HtmlId.of(\"contents-\" + id.name()));\n@@ -173,1 +172,0 @@\n-     * @param apiSummary the summary list builder\n@@ -176,9 +174,3 @@\n-    public Content getContentsList(L apiSummary) {\n-        var heading = HtmlTree.HEADING_TITLE(Headings.PAGE_TITLE_HEADING,\n-                HtmlStyle.title, headContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n-        Content headingContent = contents.contentsHeading;\n-        div.add(HtmlTree.HEADING_TITLE(Headings.CONTENT_HEADING,\n-                headingContent));\n-        var ul = new HtmlTree(TagName.UL);\n-        addExtraIndexLink(apiSummary, ul);\n+    public Content getContentsList() {\n+        var ul= HtmlTree.UL(HtmlStyle.contentsList);\n+        addExtraIndexLink(ul);\n@@ -186,1 +178,1 @@\n-            if (apiSummary.hasDocumentation(kind)) {\n+            if (builder.hasDocumentation(kind)) {\n@@ -190,2 +182,1 @@\n-        div.add(ul);\n-        return div;\n+        return ul;\n@@ -195,0 +186,2 @@\n+     * @param pageMode page mode to use\n+     * @param titleKey page title resource key\n@@ -197,1 +190,1 @@\n-    public HtmlTree getHeader() {\n+    public HtmlTree getHeader(PageMode pageMode, String titleKey) {\n@@ -280,1 +273,0 @@\n-     * @param list the element list\n@@ -283,1 +275,1 @@\n-    protected void addExtraSection(L list, Content target) {\n+    protected void addExtraSection(Content target) {\n@@ -289,1 +281,0 @@\n-     * @param list the element list\n@@ -292,1 +283,1 @@\n-    protected void addExtraIndexLink(L list, Content target) {\n+    protected void addExtraIndexLink(Content target) {\n@@ -295,0 +286,8 @@\n+    \/**\n+     * Subclasses allow the user to show or hide parts of the content in the page.\n+     * This method should be used to add the UI to select the visible page content.\n+     *\n+     * @param target the content to which the UI should be added\n+     *\/\n+    protected abstract void addContentSelectors(Content target);\n+\n@@ -298,0 +297,1 @@\n+     *\n@@ -301,3 +301,1 @@\n-    protected Content getExtraContent(Element element) {\n-        return null;\n-    }\n+    protected abstract Content getExtraContent(Element element);\n@@ -342,1 +340,1 @@\n-    protected void addTableTabs(Table table, String headingKey) {}\n+    protected abstract void addTableTabs(Table table, String headingKey);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":46,"deletions":48,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -104,1 +104,0 @@\n-        addPackageTreeLinks(div);\n@@ -107,0 +106,1 @@\n+        addPackageTreeLinks(mainContent);\n@@ -132,1 +132,1 @@\n-            var ul = HtmlTree.UL(HtmlStyle.horizontal);\n+            var ul = HtmlTree.UL(HtmlStyle.horizontal).addStyle(HtmlStyle.contentsList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TreeWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -248,0 +248,13 @@\n+\n+    \/**\n+     * The class for a {@code ul} element in various summary pages containing links to the\n+     * contents of the page.\n+     *\/\n+    contentsList,\n+\n+    \/**\n+     * The class for a {@code ul} element in the preview summary page containing information\n+     * about the preview features in the current release.\n+     *\/\n+    previewFeatureList,\n+\n@@ -907,0 +920,2 @@\n+    \/\/<\/editor-fold>\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -124,0 +124,2 @@\n+doclet.Preview_API_Checkbox_Label=Show preview API for:\n+doclet.Preview_JEP_URL=https:\/\/openjdk.org\/jeps\/{0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import javax.lang.model.element.AnnotationValue;\n@@ -530,0 +531,24 @@\n+    \/**\n+     * Returns a map containing {@code jdk.internal.javac.PreviewFeature.JEP} element values associated with the\n+     * {@code jdk.internal.javac.PreviewFeature.Feature} enum constant identified by {@code feature}.\n+     *\n+     * This method uses internal javac features (although only reflectively).\n+     *\n+     * @param feature the name of the PreviewFeature.Feature enum value\n+     * @return the map of PreviewFeature.JEP annotation element values, or an empty map\n+     *\/\n+    public Map<? extends ExecutableElement, ? extends AnnotationValue> getJepInfo(String feature) {\n+        TypeElement featureType = elementUtils.getTypeElement(\"jdk.internal.javac.PreviewFeature.Feature\");\n+        TypeElement jepType = elementUtils.getTypeElement(\"jdk.internal.javac.PreviewFeature.JEP\");\n+        var featureVar = featureType.getEnclosedElements().stream()\n+                .filter(e -> feature.equals(e.getSimpleName().toString())).findFirst();\n+        if (featureVar.isPresent()) {\n+            for (AnnotationMirror anno : featureVar.get().getAnnotationMirrors()) {\n+                if (anno.getAnnotationType().asElement().equals(jepType)) {\n+                    return anno.getElementValues();\n+                }\n+            }\n+        }\n+        return Map.of();\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/WorkArounds.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -136,1 +136,3 @@\n-        t.parentElement.style.display = visible === 0 ? 'none' : '';\n+        var displaySection = visible === 0 ? 'none' : '';\n+        t.parentElement.style.display = displaySection;\n+        document.querySelector(\"li#contents-\" + id).style.display = displaySection;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/script.js","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -278,3 +278,4 @@\n-.header ul {\n-    margin:0 0 15px 0;\n-    padding:0;\n+ul.contents-list {\n+    margin: 0 0 15px 0;\n+    padding: 0;\n+    list-style: none;\n@@ -282,2 +283,1 @@\n-.header ul li {\n-    list-style:none;\n+ul.contents-list li {\n@@ -392,0 +392,6 @@\n+ul.preview-feature-list {\n+    list-style: none;\n+    margin:0;\n+    padding:0.1em;\n+    line-height: 1.6em;\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/stylesheet.css","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -30,0 +30,9 @@\n+import javax.lang.model.element.AnnotationValue;\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.ExecutableElement;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.TreeSet;\n+\n@@ -35,0 +44,13 @@\n+    final private Map<Element, JEP> elementJeps = new HashMap<>();\n+    final private Map<String, JEP> jeps = new HashMap<>();\n+\n+    \/**\n+     * The JEP for a preview feature in this release.\n+     *\/\n+    public record JEP(int number, String title, String status) implements Comparable<JEP> {\n+        @Override\n+        public int compareTo(JEP o) {\n+            return number - o.number;\n+        }\n+    }\n+\n@@ -41,1 +63,1 @@\n-        super(configuration, e -> configuration.utils.isPreviewAPI(e));\n+        super(configuration, configuration.utils::isPreviewAPI);\n@@ -44,0 +66,39 @@\n+\n+    @Override\n+    protected void handleElement(Element e) {\n+        String feature = Objects.requireNonNull(utils.getPreviewFeature(e),\n+                \"Preview feature not specified\").toString();\n+        JEP jep = jeps.computeIfAbsent(feature, (featureName) -> {\n+            Map<? extends ExecutableElement, ? extends AnnotationValue> anno = configuration.workArounds.getJepInfo(featureName);\n+            int number = 0;\n+            String title = \"\";\n+            String status = \"Preview\"; \/\/ Default value is not returned by the method we use above.\n+            for (var entry : anno.entrySet()) {\n+                if (\"number\".equals(entry.getKey().getSimpleName().toString())) {\n+                    number = (int) entry.getValue().getValue();\n+                } else if (\"title\".equals(entry.getKey().getSimpleName().toString())) {\n+                    title = (String) entry.getValue().getValue();\n+                } else if (\"status\".equals(entry.getKey().getSimpleName().toString())) {\n+                    status = (String) entry.getValue().getValue();\n+                } else {\n+                    throw new IllegalArgumentException(entry.getKey().getSimpleName().toString());\n+                }\n+            }\n+            return new JEP(number, title, status);\n+        });\n+        elementJeps.put(e, jep);\n+    }\n+\n+    \/**\n+     * {@return a sorted set of preview feature JEPs in this release}\n+     *\/\n+    public Set<JEP> getJEPs() {\n+        return new TreeSet<>(jeps.values());\n+    }\n+\n+    \/**\n+     * {@return the JEP for a preview element}\n+     *\/\n+    public JEP getJEP(Element e) {\n+        return elementJeps.get(e);\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/PreviewAPIListBuilder.java","additions":62,"deletions":1,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    private final BaseConfiguration configuration;\n+    protected final BaseConfiguration configuration;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/SummaryAPIListBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1269,1 +1269,1 @@\n-        Object forRemoval = getDeprecatedElement(e, \"forRemoval\");\n+        Object forRemoval = getAnnotationElement(e, getDeprecatedType(), \"forRemoval\");\n@@ -1280,1 +1280,11 @@\n-        return (String) getDeprecatedElement(e, \"since\");\n+        return (String) getAnnotationElement(e, getDeprecatedType(), \"since\");\n+    }\n+\n+    \/**\n+     * Returns the value of the internal {@code PreviewFeature.feature} element.\n+     *\n+     * @param e the Element to check\n+     * @return the PreviewFeature.feature for e, or null\n+     *\/\n+    public Object getPreviewFeature(Element e) {\n+        return getAnnotationElement(e, getSymbol(\"jdk.internal.javac.PreviewFeature\"), \"feature\");\n@@ -1286,1 +1296,1 @@\n-    private Object getDeprecatedElement(Element e, String elementName) {\n+    private Object getAnnotationElement(Element e, TypeMirror annotationType, String annotationElementName) {\n@@ -1290,1 +1300,1 @@\n-            if (jctypes.isSameType(anno.getAnnotationType().asElement().asType(), getDeprecatedType())) {\n+            if (jctypes.isSameType(anno.getAnnotationType(), annotationType)) {\n@@ -1294,1 +1304,1 @@\n-                        if (element.getSimpleName().contentEquals(elementName)) {\n+                        if (element.getSimpleName().contentEquals(annotationElementName)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -165,3 +165,3 @@\n- * @see <a href=\"https:\/\/openjdk.java.net\/groups\/compiler\/javadoc-architecture.html\">JavaDoc Architecture<\/a>\n- * @see <a href=\"https:\/\/openjdk.java.net\/groups\/compiler\/using-new-doclet.html\">Using the new Doclet API<\/a>\n- * @see <a href=\"https:\/\/openjdk.java.net\/groups\/compiler\/processing-code.html\">Processing Code<\/a>\n+ * @see <a href=\"https:\/\/openjdk.org\/groups\/compiler\/javadoc-architecture.html\">JavaDoc Architecture<\/a>\n+ * @see <a href=\"https:\/\/openjdk.org\/groups\/compiler\/using-new-doclet.html\">Using the new Doclet API<\/a>\n+ * @see <a href=\"https:\/\/openjdk.org\/groups\/compiler\/processing-code.html\">Processing Code<\/a>\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/package-info.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,3 +148,6 @@\n-                        .map(Requires::name)\n-                        .map(configuration::findModule)  \/\/ must be present\n-                        .forEach(v -> builder.addEdge(v.get(), m));\n+                        \/\/ filter \"requires static\" if the module is not resolved in the configuration\n+                        .filter(req -> !req.modifiers().contains(Requires.Modifier.STATIC)\n+                            || configuration.findModule(req.name()).isPresent())\n+                            .map(Requires::name)\n+                            .map(configuration::findModule)  \/\/ must be present\n+                            .forEach(v -> builder.addEdge(v.get(), m));\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/InverseDepsAnalyzer.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -270,1 +270,1 @@\n-jdeps.wiki.url=https:\/\/wiki.openjdk.java.net\/display\/JDK8\/Java+Dependency+Analysis+Tool\n+jdeps.wiki.url=https:\/\/wiki.openjdk.org\/display\/JDK8\/Java+Dependency+Analysis+Tool\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-jdeps.wiki.url=https:\/\/wiki.openjdk.java.net\/display\/JDK8\/Java+Dependency+Analysis+Tool\n+jdeps.wiki.url=https:\/\/wiki.openjdk.org\/display\/JDK8\/Java+Dependency+Analysis+Tool\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps_de.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-jdeps.wiki.url=https:\/\/wiki.openjdk.java.net\/display\/JDK8\/Java+Dependency+Analysis+Tool\n+jdeps.wiki.url=https:\/\/wiki.openjdk.org\/display\/JDK8\/Java+Dependency+Analysis+Tool\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-jdeps.wiki.url=https:\/\/wiki.openjdk.java.net\/display\/JDK8\/Java+Dependency+Analysis+Tool\n+jdeps.wiki.url=https:\/\/wiki.openjdk.org\/display\/JDK8\/Java+Dependency+Analysis+Tool\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-java.awt.peer=Should not use. See https:\/\/bugs.openjdk.java.net\/browse\/JDK-8037739\n-java.awt.dnd.peer=Should not use. See https:\/\/bugs.openjdk.java.net\/browse\/JDK-8037739\n+java.awt.peer=Should not use. See https:\/\/bugs.openjdk.org\/browse\/JDK-8037739\n+java.awt.dnd.peer=Should not use. See https:\/\/bugs.openjdk.org\/browse\/JDK-8037739\n@@ -43,4 +43,4 @@\n-sun.reflect.ReflectionFactory=See http:\/\/openjdk.java.net\/jeps\/260\n-sun.misc.Unsafe=See http:\/\/openjdk.java.net\/jeps\/260\n-sun.misc.Signal=See http:\/\/openjdk.java.net\/jeps\/260\n-sun.misc.SignalHandler=See http:\/\/openjdk.java.net\/jeps\/260\n+sun.reflect.ReflectionFactory=See https:\/\/openjdk.org\/jeps\/260\n+sun.misc.Unsafe=See https:\/\/openjdk.org\/jeps\/260\n+sun.misc.Signal=See https:\/\/openjdk.org\/jeps\/260\n+sun.misc.SignalHandler=See https:\/\/openjdk.org\/jeps\/260\n@@ -58,1 +58,1 @@\n-com.apple.concurrent=Removed. See https:\/\/bugs.openjdk.java.net\/browse\/JDK-8148187\n+com.apple.concurrent=Removed. See https:\/\/bugs.openjdk.org\/browse\/JDK-8148187\n@@ -65,2 +65,2 @@\n-sun.misc=Removed. See http:\/\/openjdk.java.net\/jeps\/260\n-sun.reflect=Removed. See http:\/\/openjdk.java.net\/jeps\/260\n+sun.misc=Removed. See https:\/\/openjdk.org\/jeps\/260\n+sun.reflect=Removed. See https:\/\/openjdk.org\/jeps\/260\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdkinternals.properties","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -351,1 +351,1 @@\n-     *\n+     * <p>\n@@ -367,1 +367,3 @@\n-     * Recording must be started, but not necessarily stopped.\n+     * For a dump to succeed, the recording must either be 1) running, or 2) stopped\n+     * and to disk. If the recording is in any other state, an\n+     * {@link IOException} is thrown.\n@@ -372,2 +374,3 @@\n-     * @throws IOException if the recording can't be copied to the specified\n-     *         location\n+     * @throws IOException if recording data can't be copied to the specified\n+     *         location, for example, if the recording is closed or the\n+     *         destination path is not writable\n@@ -377,0 +380,3 @@\n+     *\n+     * @see #getState()\n+     * @see #isToDisk()\n@@ -381,1 +387,0 @@\n-\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Recording.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+ * <p>\n+ * If the annotated value equals {@code Long.MAX_VALUE}, it represents forever.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Timespan.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.time.temporal.ChronoUnit;\n@@ -758,0 +759,4 @@\n+     * If the committed event value was {@code Long.MAX_VALUE},\n+     * regardless of the unit set by {@code @Timespan}, this method returns\n+     * {@link ChronoUnit#FOREVER}.\n+     * <p>\n@@ -814,0 +819,3 @@\n+        if (timespan == Long.MAX_VALUE) {\n+            return ChronoUnit.FOREVER.getDuration();\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -193,0 +193,1 @@\n+    static final String ATTRIBUTE_DST = \"dst\";\n@@ -208,0 +209,1 @@\n+    long dst;\n@@ -245,0 +247,4 @@\n+    public int getDST() {\n+        return (int) dst;\n+    }\n+\n@@ -257,1 +263,3 @@\n-        m.gmtOffset = TimeZone.getDefault().getRawOffset();\n+        TimeZone tz = TimeZone.getDefault();\n+        m.gmtOffset = tz.getRawOffset();\n+        m.dst = tz.getDSTSavings();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataDescriptor.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,0 +84,1 @@\n+        descriptor.dst = time.attribute(MetadataDescriptor.ATTRIBUTE_DST, 0L);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataReader.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import static jdk.jfr.internal.MetadataDescriptor.ATTRIBUTE_DST;\n@@ -75,0 +76,1 @@\n+        region.addAttribute(ATTRIBUTE_DST, descriptor.dst);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataWriter.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -324,0 +324,1 @@\n+\n@@ -325,0 +326,4 @@\n+            if (!isToDisk()) {\n+                throw new IOException(\"Recording \\\"\" + name + \"\\\" (id=\" + id + \")\"\n+                    + \" is an in memory recording. No data to copy after it has been stopped.\");\n+            }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecording.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,5 @@\n-            throw new IOException(\"Unexpected error during I\/O operation\");\n+            Throwable cause = null;\n+            if (System.getSecurityManager() == null) {\n+                cause = t;\n+            }\n+            throw new IOException(\"Unexpected error during I\/O operation\", cause);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/WriteableUserPath.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-    private boolean isFinished;\n@@ -92,7 +91,5 @@\n-        long c = input.readRawLong(); \/\/ chunk size\n-        Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Chunk: chunkSize=\" + c);\n-        long cp = input.readRawLong(); \/\/ constant pool position\n-        Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Chunk: constantPoolPosition=\" + cp);\n-        long mp = input.readRawLong(); \/\/ metadata position\n-        Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Chunk: metadataPosition=\" + mp);\n-        chunkStartNanos = input.readRawLong(); \/\/ nanos since epoch\n+        \/\/ Chunk size, constant pool position and metadata position are\n+        \/\/ updated by JVM and not reliable to read\n+        input.skipBytes(3 * Long.BYTES);\n+\n+        chunkStartNanos = input.readRawLong();\n@@ -100,2 +97,4 @@\n-        durationNanos = input.readRawLong(); \/\/ duration nanos, not used\n-        Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Chunk: durationNanos=\" + durationNanos);\n+\n+        \/\/ Duration nanos, updated by JVM and not reliable to read\n+        input.skipBytes(Long.BYTES);\n+\n@@ -104,0 +103,1 @@\n+\n@@ -106,1 +106,4 @@\n-        input.readRawInt(); \/\/ ignore file state and flag bits\n+\n+        \/\/ File state and flag bit, updated by JVM and not reliable to read\n+        input.skipBytes(Integer.BYTES);\n+\n@@ -157,1 +160,0 @@\n-                    isFinished = fileState2 == 0;\n@@ -159,1 +161,1 @@\n-                    Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Chunk: finished=\" + isFinished);\n+                    Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Chunk: finished=\" + finished);\n@@ -202,1 +204,1 @@\n-        return isFinished;\n+        return finished;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ChunkHeader.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        this.timeConverter = new TimeConverter(chunkHeader, metadata.getGMTOffset());\n+        this.timeConverter = new TimeConverter(chunkHeader, metadata.getGMTOffset() + metadata.getDST());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ChunkParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    TimeConverter(ChunkHeader chunkHeader, int rawOffset) {\n+    TimeConverter(ChunkHeader chunkHeader, int offset) {\n@@ -48,1 +48,1 @@\n-        this.zoneOffset = zoneOfSet(rawOffset);\n+        this.zoneOffset = zoneOfSet(offset);\n@@ -63,1 +63,1 @@\n-    private ZoneOffset zoneOfSet(int rawOffset) {\n+    private ZoneOffset zoneOfSet(int offset) {\n@@ -65,1 +65,1 @@\n-            return ZoneOffset.ofTotalSeconds(rawOffset \/ 1000);\n+            return ZoneOffset.ofTotalSeconds(offset \/ 1000);\n@@ -67,1 +67,1 @@\n-            Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Could not create ZoneOffset from raw offset \" + rawOffset);\n+            Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.INFO, \"Could not create ZoneOffset from raw offset \" + offset);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/TimeConverter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -142,0 +142,8 @@\n+            if (!disk) {\n+                if (maxAge != null) {\n+                    logWarning(\"Option maxage has no effect with disk=false.\");\n+                }\n+                if (maxSize != null) {\n+                    logWarning(\"Option maxsize has no effect with disk=false.\");\n+                }\n+            }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStart.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.time.temporal.ChronoUnit;\n@@ -556,0 +557,4 @@\n+            if (d.equals(ChronoUnit.FOREVER.getDuration())) {\n+                println(\"Forever\");\n+                return true;\n+            }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/PrettyWriter.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,166 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.tools.jlink.internal;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.util.List;\n+\n+\/**\n+ * This file was originally a copy of CommandLine.java in\n+ * com.sun.tools.javac.main.\n+ * It should track changes made to that file.\n+ *\/\n+\n+\/**\n+ * Various utility methods for processing Java tool command line arguments.\n+ *\/\n+public class CommandLine {\n+\n+    static void loadCmdFile(InputStream in, List<String> args)\n+            throws IOException {\n+        try (Reader r = new InputStreamReader(in)) {\n+            Tokenizer t = new Tokenizer(r);\n+            String s;\n+            while ((s = t.nextToken()) != null) {\n+                args.add(s);\n+            }\n+        }\n+    }\n+    public static class Tokenizer {\n+        private final Reader in;\n+        private int ch;\n+\n+        public Tokenizer(Reader in) throws IOException {\n+            this.in = in;\n+            ch = in.read();\n+        }\n+\n+        public String nextToken() throws IOException {\n+            skipWhite();\n+            if (ch == -1) {\n+                return null;\n+            }\n+\n+            StringBuilder sb = new StringBuilder();\n+            char quoteChar = 0;\n+\n+            while (ch != -1) {\n+                switch (ch) {\n+                    case ' ':\n+                    case '\\t':\n+                    case '\\f':\n+                        if (quoteChar == 0) {\n+                            return sb.toString();\n+                        }\n+                        sb.append((char) ch);\n+                        break;\n+\n+                    case '\\n':\n+                    case '\\r':\n+                        return sb.toString();\n+\n+                    case '\\'':\n+                    case '\"':\n+                        if (quoteChar == 0) {\n+                            quoteChar = (char) ch;\n+                        } else if (quoteChar == ch) {\n+                            quoteChar = 0;\n+                        } else {\n+                            sb.append((char) ch);\n+                        }\n+                        break;\n+\n+                    case '\\\\':\n+                        if (quoteChar != 0) {\n+                            ch = in.read();\n+                            switch (ch) {\n+                                case '\\n':\n+                                case '\\r':\n+                                    while (ch == ' ' || ch == '\\n'\n+                                            || ch == '\\r' || ch == '\\t'\n+                                            || ch == '\\f') {\n+                                        ch = in.read();\n+                                    }\n+                                    continue;\n+\n+                                case 'n':\n+                                    ch = '\\n';\n+                                    break;\n+                                case 'r':\n+                                    ch = '\\r';\n+                                    break;\n+                                case 't':\n+                                    ch = '\\t';\n+                                    break;\n+                                case 'f':\n+                                    ch = '\\f';\n+                                    break;\n+                                default:\n+                                    break;\n+                            }\n+                        }\n+                        sb.append((char) ch);\n+                        break;\n+\n+                    default:\n+                        sb.append((char) ch);\n+                }\n+\n+                ch = in.read();\n+            }\n+\n+            return sb.toString();\n+        }\n+\n+        void skipWhite() throws IOException {\n+            while (ch != -1) {\n+                switch (ch) {\n+                    case ' ':\n+                    case '\\t':\n+                    case '\\n':\n+                    case '\\r':\n+                    case '\\f':\n+                        break;\n+\n+                    case '#':\n+                        ch = in.read();\n+                        while (ch != '\\n' && ch != '\\r' && ch != -1) {\n+                            ch = in.read();\n+                        }\n+                        break;\n+\n+                    default:\n+                        return;\n+                }\n+\n+                ch = in.read();\n+            }\n+        }\n+    }\n+}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/CommandLine.java","additions":166,"deletions":0,"binary":false,"changes":166,"status":"added"},{"patch":"@@ -30,0 +30,1 @@\n+import java.io.InputStream;\n@@ -226,0 +227,2 @@\n+    public static final String OPTIONS_RESOURCE = \"jdk\/tools\/jlink\/internal\/options\";\n+\n@@ -233,0 +236,12 @@\n+            Module m = JlinkTask.class.getModule();\n+            try (InputStream savedOptions = m.getResourceAsStream(OPTIONS_RESOURCE)) {\n+                if (savedOptions != null) {\n+                    List<String> prependArgs = new ArrayList<>();\n+                    CommandLine.loadCmdFile(savedOptions, prependArgs);\n+                    if (!prependArgs.isEmpty()) {\n+                        prependArgs.addAll(Arrays.asList(args));\n+                        args = prependArgs.toArray(new String[prependArgs.size()]);\n+                    }\n+                }\n+            }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.tools.jlink.internal.plugins;\n+\n+import static jdk.tools.jlink.internal.JlinkTask.OPTIONS_RESOURCE;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import jdk.tools.jlink.plugin.PluginException;\n+import jdk.tools.jlink.plugin.ResourcePool;\n+import jdk.tools.jlink.plugin.ResourcePoolBuilder;\n+import jdk.tools.jlink.plugin.ResourcePoolEntry;\n+\n+\/**\n+ * Saves the arguments in the specified argument files to a resource that's read\n+ * by jlink in the output image. The saved arguments are prepended to the arguments\n+ * specified on the jlink command line.\n+ *\/\n+public final class SaveJlinkArgfilesPlugin extends AbstractPlugin {\n+\n+    public SaveJlinkArgfilesPlugin() {\n+        super(\"save-jlink-argfiles\");\n+    }\n+\n+    private List<String> argfiles = new ArrayList<>();\n+\n+    @Override\n+    public Category getType() {\n+        return Category.ADDER;\n+    }\n+\n+    @Override\n+    public boolean hasArguments() {\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean hasRawArgument() {\n+        return true;\n+    }\n+\n+    @Override\n+    public void configure(Map<String, String> config) {\n+        var v = config.get(getName());\n+\n+        if (v == null)\n+            throw new AssertionError();\n+\n+        for (String argfile : v.split(File.pathSeparator)) {\n+            argfiles.add(readArgfile(argfile));\n+        }\n+    }\n+\n+    private static String readArgfile(String argfile) {\n+        try {\n+            return Files.readString(Path.of(argfile));\n+        } catch (IOException e) {\n+            throw new PluginException(\"Argfile \" + argfile + \" is not readable\");\n+        }\n+    }\n+\n+    @Override\n+    public ResourcePool transform(ResourcePool in, ResourcePoolBuilder out) {\n+        in.transformAndCopy(Function.identity(), out);\n+        if (!in.moduleView().findModule(\"jdk.jlink\").isPresent()) {\n+            throw new PluginException(\"--save-jlink-argfiles requires jdk.jlink to be in the output image\");\n+        }\n+        byte[] savedOptions = argfiles.stream()\n+                                      .collect(Collectors.joining(\"\\n\"))\n+                                      .getBytes(StandardCharsets.UTF_8);\n+        out.add(ResourcePoolEntry.create(\"\/jdk.jlink\/\" + OPTIONS_RESOURCE,\n+                                         savedOptions));\n+        return out.build();\n+    }\n+}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SaveJlinkArgfilesPlugin.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -190,0 +190,14 @@\n+save-jlink-argfiles.argument=<filenames>\n+\n+save-jlink-argfiles.description=\\\n+Save the specified argument files that contain the arguments \\n\\\n+to be prepended to the execution of jlink in the output image. \\n\\\n+<filenames> is a ':' (';' on Windows) separated list of command-line argument files.\n+\n+save-jlink-argfiles.usage=\\\n+\\  --save-jlink-argfiles <filenames>\\n\\\n+\\                            Save the specified argument files that contain \\n\\\n+\\                            the arguments to be prepended to the execution of \\n\\\n+\\                            jlink in the output image. <filenames> is a \\n\\\n+\\                            ':' (';' on Windows) separated list of command-line argument files.\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins.properties","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -83,1 +83,2 @@\n-        jdk.tools.jlink.internal.plugins.CDSPlugin;\n+        jdk.tools.jlink.internal.plugins.CDSPlugin,\n+        jdk.tools.jlink.internal.plugins.SaveJlinkArgfilesPlugin;\n","filename":"src\/jdk.jlink\/share\/classes\/module-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -526,2 +526,3 @@\n-                    if (vt.getInitializer() != null) {\n-                        \/\/for variables with initializer, explicitly move the initializer\n+                    if (vt.getInitializer() != null &&\n+                        !vt.getModifiers().getFlags().contains(Modifier.STATIC)) {\n+                        \/\/for instance variables with initializer, explicitly move the initializer\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/Eval.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-\/* Implement and update https:\/\/bugs.openjdk.java.net\/browse\/JDK-8030957 *\/\n+\/* Implement and update https:\/\/bugs.openjdk.org\/browse\/JDK-8030957 *\/\n","filename":"src\/jdk.management\/aix\/native\/libmanagement_ext\/UnixOperatingSystem.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.hotspot.igv.util.StringUtils;\n@@ -52,0 +53,1 @@\n+    private boolean selected = false;\n@@ -111,1 +113,5 @@\n-        return ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/coordinator\/images\/folder.png\");\n+        if (selected) {\n+            return ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/coordinator\/images\/folder_selected.png\");\n+        } else {\n+            return ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/coordinator\/images\/folder.png\");\n+        }\n@@ -135,0 +141,14 @@\n+    public void setSelected(boolean selected) {\n+        this.selected = selected;\n+        fireDisplayNameChange(null, null);\n+        fireIconChange();\n+    }\n+\n+    public String getHtmlDisplayName() {\n+        String htmlDisplayName = StringUtils.escapeHTML(getDisplayName());\n+        if (selected) {\n+            htmlDisplayName = \"<b>\" + htmlDisplayName + \"<\/b>\";\n+        }\n+        return htmlDisplayName;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/FolderNode.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import com.sun.hotspot.igv.util.StringUtils;\n@@ -55,0 +56,1 @@\n+\n@@ -56,0 +58,1 @@\n+    private boolean selected = false;\n@@ -62,0 +65,13 @@\n+    public void setSelected(boolean selected) {\n+        this.selected = selected;\n+        fireDisplayNameChange(null, null);\n+        fireIconChange();\n+    }\n+\n+    public String getHtmlDisplayName() {\n+        String htmlDisplayName = StringUtils.escapeHTML(getDisplayName());\n+        if (selected) {\n+            htmlDisplayName = \"<b>\" + htmlDisplayName + \"<\/b>\";\n+        }\n+        return htmlDisplayName;\n+    }\n@@ -105,1 +121,5 @@\n-        return ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/coordinator\/images\/graph.png\");\n+        if (selected) {\n+            return ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/coordinator\/images\/graph_selected.png\");\n+        } else {\n+            return ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/coordinator\/images\/graph.png\");\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/GraphNode.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -41,1 +41,2 @@\n-import javax.swing.SwingUtilities;\n+import java.util.HashSet;\n+import java.util.Set;\n@@ -51,0 +52,1 @@\n+import org.openide.nodes.Node;\n@@ -71,1 +73,2 @@\n-\n+    private GraphNode[] selectedGraphs = new GraphNode[0];\n+    private final Set<FolderNode> selectedFolders = new HashSet<>();\n@@ -227,14 +230,21 @@\n-        \/\/ Wait for LookupHistory to be updated with the last active graph\n-        \/\/ before selecting it.\n-        SwingUtilities.invokeLater(() -> {\n-            GraphNode[] selection = new GraphNode[0];\n-            if (lastProvider != null) {\n-                \/\/ Try to fetch and select the latest active graph.\n-                InputGraph graph = lastProvider.getGraph();\n-                if (graph != null) {\n-                    if (graph.isDiffGraph()) {\n-                        EditorTopComponent editor = EditorTopComponent.getActive();\n-                        if (editor != null) {\n-                            InputGraph firstGraph = editor.getModel().getFirstGraph();\n-                            InputGraph secondGraph = editor.getModel().getSecondGraph();\n-                            selection = new GraphNode[]{FolderNode.getGraphNode(firstGraph), FolderNode.getGraphNode(secondGraph)};\n+        for (GraphNode graphNode : selectedGraphs) {\n+            graphNode.setSelected(false);\n+        }\n+        for (FolderNode folderNode : selectedFolders) {\n+            folderNode.setSelected(false);\n+        }\n+        selectedGraphs = new GraphNode[0];\n+        selectedFolders.clear();\n+        if (lastProvider != null) {\n+            \/\/ Try to fetch and select the latest active graph.\n+            InputGraph graph = lastProvider.getGraph();\n+            if (graph != null) {\n+                if (graph.isDiffGraph()) {\n+                    EditorTopComponent editor = EditorTopComponent.getActive();\n+                    if (editor != null) {\n+                        InputGraph firstGraph = editor.getModel().getFirstGraph();\n+                        GraphNode firstNode = FolderNode.getGraphNode(firstGraph);\n+                        InputGraph secondGraph = editor.getModel().getSecondGraph();\n+                        GraphNode secondNode = FolderNode.getGraphNode(secondGraph);\n+                        if (firstNode != null && secondNode != null) {\n+                            selectedGraphs = new GraphNode[]{firstNode, secondNode};\n@@ -242,2 +252,5 @@\n-                    } else {\n-                        selection = new GraphNode[]{FolderNode.getGraphNode(graph)};\n+                    }\n+                } else {\n+                    GraphNode graphNode = FolderNode.getGraphNode(graph);\n+                    if (graphNode != null) {\n+                        selectedGraphs = new GraphNode[]{graphNode};\n@@ -247,4 +260,10 @@\n-            try {\n-                manager.setSelectedNodes(selection);\n-            } catch (Exception e) {\n-                Exceptions.printStackTrace(e);\n+        }\n+        try {\n+            for (GraphNode graphNode : selectedGraphs) {\n+                Node parentNode = graphNode.getParentNode();\n+                if (parentNode instanceof FolderNode) {\n+                    FolderNode folderNode = (FolderNode) graphNode.getParentNode();\n+                    folderNode.setSelected(true);\n+                    selectedFolders.add(folderNode);\n+                }\n+                graphNode.setSelected(true);\n@@ -252,1 +271,4 @@\n-        });\n+            manager.setSelectedNodes(selectedGraphs);\n+        } catch (Exception e) {\n+            Exceptions.printStackTrace(e);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":45,"deletions":23,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import com.sun.hotspot.igv.view.GraphViewerImplementation;\n@@ -40,1 +42,1 @@\n-    private InputGraph graph;\n+    private final InputGraph graph;\n@@ -55,1 +57,2 @@\n-        return getCurrentGraph() != null;\n+        InputGraph currentGraph = getCurrentGraph();\n+        return currentGraph != null && !currentGraph.isDiffGraph() && currentGraph != graph;\n@@ -61,3 +64,2 @@\n-        if (viewer != null) {\n-            InputGraph diffGraph = Difference.createDiffGraph(other, graph);\n-            viewer.view(diffGraph, true);\n+        if (viewer != null && other != null) {\n+            viewer.viewDifference(other, graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/DiffGraphCookie.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/resources\/com\/sun\/hotspot\/igv\/coordinator\/images\/folder_selected.png","binary":true,"status":"added"},{"filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/resources\/com\/sun\/hotspot\/igv\/coordinator\/images\/graph_selected.png","binary":true,"status":"added"},{"patch":"@@ -42,0 +42,2 @@\n+    private InputGraph firstGraph;\n+    private InputGraph secondGraph;\n@@ -43,3 +45,7 @@\n-    public InputGraph(String name, boolean isDiffGraph) {\n-        this(name);\n-        this.isDiffGraph = isDiffGraph;\n+\n+    public InputGraph(InputGraph firstGraph, InputGraph secondGraph) {\n+        this(firstGraph.getName() + \" Δ \" + secondGraph.getName());\n+        assert !firstGraph.isDiffGraph() && !secondGraph.isDiffGraph();\n+        this.firstGraph = firstGraph;\n+        this.secondGraph = secondGraph;\n+        isDiffGraph = true;\n@@ -55,0 +61,2 @@\n+        firstGraph = null;\n+        secondGraph = null;\n@@ -62,0 +70,8 @@\n+    public InputGraph getFirstGraph() {\n+        return firstGraph;\n+    }\n+\n+    public InputGraph getSecondGraph() {\n+        return secondGraph;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputGraph.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -34,1 +34,3 @@\n-    public void view(InputGraph graph, boolean clone);\n+    void view(InputGraph graph, boolean clone);\n+\n+    void viewDifference(InputGraph firstGraph, InputGraph secondGraph);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/GraphViewer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-        InputGraph graph = new InputGraph(a.getName() + \", \" + b.getName(), true);\n+        InputGraph graph = new InputGraph(a, b);\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/src\/main\/java\/com\/sun\/hotspot\/igv\/difference\/Difference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/IdealGraphVisualizer.\n+https:\/\/wiki.openjdk.org\/display\/HotSpot\/IdealGraphVisualizer.\n","filename":"src\/utils\/IdealGraphVisualizer\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -408,0 +408,1 @@\n+        InputGraph firstGraph;\n@@ -409,1 +410,3 @@\n-            return graphs.get(getFirstPosition());\n+            firstGraph = graphs.get(getFirstPosition());\n+        } else {\n+            firstGraph = graphs.get(graphs.size() - 1);\n@@ -411,1 +414,4 @@\n-        return graphs.get(graphs.size() - 1);\n+        if (firstGraph.isDiffGraph()) {\n+            firstGraph = firstGraph.getFirstGraph();\n+        }\n+        return firstGraph;\n@@ -415,0 +421,1 @@\n+        InputGraph secondGraph;\n@@ -416,1 +423,6 @@\n-            return graphs.get(getSecondPosition());\n+            secondGraph = graphs.get(getSecondPosition());\n+        } else {\n+            secondGraph = getFirstGraph();\n+        }\n+        if (secondGraph.isDiffGraph()) {\n+            secondGraph = secondGraph.getSecondGraph();\n@@ -418,1 +430,1 @@\n-        return getFirstGraph();\n+        return secondGraph;\n@@ -421,2 +433,2 @@\n-    public void selectGraph(InputGraph g) {\n-        int index = graphs.indexOf(g);\n+    public void selectGraph(InputGraph graph) {\n+        int index = graphs.indexOf(graph);\n@@ -426,1 +438,1 @@\n-            index = graphs.indexOf(g);\n+            index = graphs.indexOf(graph);\n@@ -432,0 +444,17 @@\n+    public void selectDiffGraph(InputGraph graph) {\n+        int index = graphs.indexOf(graph);\n+        if (index == -1 && hideDuplicates) {\n+            \/\/ A graph was selected that's currently hidden, so unhide and select it.\n+            setHideDuplicates(false);\n+            index = graphs.indexOf(graph);\n+        }\n+        assert index != -1;\n+        int firstIndex = getFirstPosition();\n+        int secondIndex = getSecondPosition();\n+        if (firstIndex <= index) {\n+            setPositions(firstIndex, index);\n+        } else {\n+            setPositions(index, secondIndex);\n+        }\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":36,"deletions":7,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        if (editor != null && editor.isOpened()) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n@@ -61,1 +61,1 @@\n-        if (editor != null && editor.isOpened()) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n@@ -68,1 +68,1 @@\n-        if (editor != null && editor.isOpened()) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n@@ -77,1 +77,1 @@\n-        if (editor != null && editor.isOpened()) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorInputGraphProvider.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import org.openide.windows.Mode;\n@@ -58,0 +59,1 @@\n+import org.openide.windows.WindowManager;\n@@ -286,0 +288,4 @@\n+    public static boolean isOpen(EditorTopComponent editor) {\n+        return WindowManager.getDefault().isOpenedEditorTopComponent(editor);\n+    }\n+\n@@ -294,0 +300,18 @@\n+    public static EditorTopComponent findEditorForGraph(InputGraph graph) {\n+        WindowManager manager = WindowManager.getDefault();\n+        for (Mode m : manager.getModes()) {\n+            List<TopComponent> l = new ArrayList<>();\n+            l.add(m.getSelectedTopComponent());\n+            l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n+            for (TopComponent t : l) {\n+                if (t instanceof EditorTopComponent) {\n+                    EditorTopComponent etc = (EditorTopComponent) t;\n+                    if (etc.getModel().getGroup().getGraphs().contains(graph)) {\n+                        return etc;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.hotspot.igv.difference.Difference;\n@@ -30,6 +31,0 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import org.openide.windows.Mode;\n-import org.openide.windows.TopComponent;\n-import org.openide.windows.WindowManager;\n@@ -46,1 +41,13 @@\n-    public void view(InputGraph graph, boolean clone) {\n+    public void viewDifference(InputGraph firstGraph, InputGraph secondGraph) {\n+        if (firstGraph.getGroup() != secondGraph.getGroup()) {\n+            InputGraph diffGraph = Difference.createDiffGraph(firstGraph, secondGraph);\n+            view(diffGraph, true);\n+        } else {\n+            view(firstGraph, true);\n+            EditorTopComponent etc = EditorTopComponent.findEditorForGraph(firstGraph);\n+            if (etc != null) {\n+                etc.getModel().selectDiffGraph(secondGraph);\n+                etc.requestActive();\n+            }\n+        }\n+    }\n@@ -48,0 +55,2 @@\n+    @Override\n+    public void view(InputGraph graph, boolean clone) {\n@@ -49,15 +58,5 @@\n-            WindowManager manager = WindowManager.getDefault();\n-            for (Mode m : manager.getModes()) {\n-                List<TopComponent> l = new ArrayList<>();\n-                l.add(m.getSelectedTopComponent());\n-                l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n-                for (TopComponent t : l) {\n-                    if (t instanceof EditorTopComponent) {\n-                        EditorTopComponent etc = (EditorTopComponent) t;\n-                        if (etc.getModel().getGroup().getGraphs().contains(graph)) {\n-                            etc.getModel().selectGraph(graph);\n-                            t.requestActive();\n-                            return;\n-                        }\n-                    }\n-                }\n+            EditorTopComponent etc = EditorTopComponent.findEditorForGraph(graph);\n+            if (etc != null) {\n+                etc.getModel().selectGraph(graph);\n+                etc.requestActive();\n+                return;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -16,3 +16,3 @@\n-https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/LogCompilation+overview\n-https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/PrintCompilation\n-https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/LogCompilation+tool\n+https:\/\/wiki.openjdk.org\/display\/HotSpot\/LogCompilation+overview\n+https:\/\/wiki.openjdk.org\/display\/HotSpot\/PrintCompilation\n+https:\/\/wiki.openjdk.org\/display\/HotSpot\/LogCompilation+tool\n","filename":"src\/utils\/LogCompilation\/README","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-wiki](https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/PrintAssembly).\n+wiki](https:\/\/wiki.openjdk.org\/display\/HotSpot\/PrintAssembly).\n","filename":"src\/utils\/hsdis\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug JDK-8292780\n+ * @summary misc tests failed \"assert(false) failed: graph should be schedulable\"\n+ *\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement TestArrayCopyPartialInliningLoadSplit\n+ *\/\n+\n+public class TestArrayCopyPartialInliningLoadSplit {\n+    public static void main(String[] args) {\n+        byte[] array = new byte[16];\n+        for (int i = 0; i < 20_0000; i++) {\n+            test(array, 16, 0, 0);\n+        }\n+    }\n+\n+    private static void test(byte[] array, int length, int srcPos, int dstPos) {\n+        byte[] nonEscaping = new byte[16];\n+        nonEscaping[0] = 0x42;\n+        System.arraycopy(array, srcPos, nonEscaping, 1, 8);\n+        System.arraycopy(nonEscaping, 0, array, 0, length);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyPartialInliningLoadSplit.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -47,1 +47,1 @@\n-                 \"test20\",\"test21\", \"test22\"})\n+                 \"test20\", \"test21\", \"test22\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,367 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package compiler.c2.irTests;\n-\n-import jdk.test.lib.Asserts;\n-import compiler.lib.ir_framework.*;\n-\n-\/*\n- * @test\n- * @bug 8279607\n- * @summary Test that transformation from ~x + c to (c - 1) - x and\n- *          from ~(x + c) to (-c - 1) - x works as intended.\n- * @library \/test\/lib \/\n- * @requires vm.compiler2.enabled\n- * @run driver compiler.c2.irTests.TestIRAddIdealNotXPlusC\n- *\/\n-public class TestIRAddIdealNotXPlusC {\n-\n-    public static void main(String[] args) {\n-        TestFramework.run();\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntConIsNormal1(int x) {\n-        return ~x + 1234; \/\/ transformed to 1233 - x\n-    }\n-\n-    @Run(test = \"testIntConIsNormal1\")\n-    public void checkTestIntConIsNormal1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(1223, testIntConIsNormal1(10));\n-        Asserts.assertEquals(1233, testIntConIsNormal1(0));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntConIsNormal2(int x) {\n-        return ~(x + -1234); \/\/ transformed to 1233 - x\n-    }\n-\n-    @Run(test = \"testIntConIsNormal2\")\n-    public void checkTestIntConIsNormal2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(1223, testIntConIsNormal2(10));\n-        Asserts.assertEquals(1233, testIntConIsNormal2(0));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongConIsNormal1(long x) {\n-        return ~x + 123_456_789_123L; \/\/ transformed to 123_456_789_122L - x\n-    }\n-\n-    @Run(test = \"testLongConIsNormal1\")\n-    public void checkTestLongConIsNormal1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(113_456_789_122L, testLongConIsNormal1(10_000_000_000L));\n-        Asserts.assertEquals(123_456_789_122L, testLongConIsNormal1(0L));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongConIsNormal2(long x) {\n-        return ~(x + -123_456_789_123L); \/\/ transformed to 123_456_789_122L - x\n-    }\n-\n-    @Run(test = \"testLongConIsNormal2\")\n-    public void checkTestLongConIsNormal2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(113_456_789_122L, testLongConIsNormal2(10_000_000_000L));\n-        Asserts.assertEquals(123_456_789_122L, testLongConIsNormal2(0L));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntConIsZero1(int x) {\n-        return ~x + 0; \/\/ transformed to -1 - x\n-    }\n-\n-    @Run(test = \"testIntConIsZero1\")\n-    public void checkTestIntConIsZero1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-11, testIntConIsZero1(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.SUB_I})\n-    @IR(counts = {IRNode.XOR_I, \"1\"})\n-    public int testIntConIsZero2(int x) {\n-        return ~(x + 0); \/\/ should not happen, transformed to ~x\n-    }\n-\n-    @Run(test = \"testIntConIsZero2\")\n-    public void checkTestIntConIsZero2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-11, testIntConIsZero2(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongConIsZero1(long x) {\n-        return ~x + 0L; \/\/ transformed to -1 - x\n-    }\n-\n-    @Run(test = \"testLongConIsZero1\")\n-    public void checkTestLongConIsZero1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-10_000_000_001L, testLongConIsZero1(10_000_000_000L));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.SUB_L})\n-    @IR(counts = {IRNode.XOR_L, \"1\"})\n-    public long testLongConIsZero2(long x) {\n-        return ~(x + 0L); \/\/ should not happen, transformed to ~x\n-    }\n-\n-    @Run(test = \"testLongConIsZero2\")\n-    public void checkTestLongConIsZero2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-10_000_000_001L, testLongConIsZero2(10_000_000_000L));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntConIsOne1(int x) {\n-        return ~x + 1; \/\/ transformed to 0 - x\n-    }\n-\n-    @Run(test = \"testIntConIsOne1\")\n-    public void checkTestIntConIsOne1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-10, testIntConIsOne1(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntConIsNegOne2(int x) {\n-        return ~(x + -1); \/\/ transformed to 0 - x\n-    }\n-\n-    @Run(test = \"testIntConIsNegOne2\")\n-    public void checkTestIntConIsNegOne2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-10, testIntConIsNegOne2(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongConIsOne1(long x) {\n-        return ~x + 1L; \/\/ transformed to 0 - x\n-    }\n-\n-    @Run(test = \"testLongConIsOne1\")\n-    public void checkTestLongConIsOne1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-10_000_000_000L, testLongConIsOne1(10_000_000_000L));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongConIsNegOne2(long x) {\n-        return ~(x + -1L); \/\/ transformed to 0 - x\n-    }\n-\n-    @Run(test = \"testLongConIsNegOne2\")\n-    public void checkTestLongConIsNegOne2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(-10_000_000_000L, testLongConIsNegOne2(10_000_000_000L));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntConMinusOneIsUnderflow1(int x) {\n-        return ~x + Integer.MIN_VALUE; \/\/ transformed to Integer.MAX_VALUE - x\n-    }\n-\n-    @Run(test = \"testIntConMinusOneIsUnderflow1\")\n-    public void checkTestIntConMinusOneIsUnderflow1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(2147483637, testIntConMinusOneIsUnderflow1(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntNegConMinusOneIsUnderflow2(int x) {\n-        return ~(x + Integer.MIN_VALUE); \/\/ transformed to Integer.MAX_VALUE - x\n-    }\n-\n-    @Run(test = \"testIntNegConMinusOneIsUnderflow2\")\n-    public void checkTestIntNegConMinusOneIsUnderflow2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(2147483637, testIntNegConMinusOneIsUnderflow2(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongConMinusOneIsUnderflow1(long x) {\n-        return ~x + Long.MIN_VALUE; \/\/ transformed to Long.MAX_VALUE - x\n-    }\n-\n-    @Run(test = \"testLongConMinusOneIsUnderflow1\")\n-    public void checkTestLongConMinusOneIsUnderflow1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(9223372036854775797L, testLongConMinusOneIsUnderflow1(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongNegConMinusOneIsUnderflow2(long x) {\n-        return ~(x + Long.MIN_VALUE); \/\/ transformed to Long.MAX_VALUE - x\n-    }\n-\n-    @Run(test = \"testLongNegConMinusOneIsUnderflow2\")\n-    public void checkTestLongNegConMinusOneIsUnderflow2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(9223372036854775797L, testLongNegConMinusOneIsUnderflow2(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntResultIsUnderflow1(int x) {\n-        return ~x + -2147483638; \/\/ transformed to -2147483639 - x\n-    }\n-\n-    @Run(test = \"testIntResultIsUnderflow1\")\n-    public void checkTestIntResultIsUnderflow1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Integer.MAX_VALUE, testIntResultIsUnderflow1(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntResultIsUnderflow2(int x) {\n-        return ~(x + 2147483638); \/\/ transformed to -2147483639 - x\n-    }\n-\n-    @Run(test = \"testIntResultIsUnderflow2\")\n-    public void checkTestIntResultIsUnderflow2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Integer.MAX_VALUE, testIntResultIsUnderflow2(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongResultIsUnderflow1(long x) {\n-        return ~x + -9223372036854775798L; \/\/ transformed to -9223372036854775799L - x\n-    }\n-\n-    @Run(test = \"testLongResultIsUnderflow1\")\n-    public void checkTestLongResultIsUnderflow1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Long.MAX_VALUE, testLongResultIsUnderflow1(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongResultIsUnderflow2(long x) {\n-        return ~(x + 9223372036854775798L); \/\/ transformed to -9223372036854775799L - x\n-    }\n-\n-    @Run(test = \"testLongResultIsUnderflow2\")\n-    public void checkTestLongResultIsUnderflow2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Long.MAX_VALUE, testLongResultIsUnderflow2(10));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntResultIsOverflow1(int x) {\n-        return ~x + 2147483637; \/\/ transformed to 2147483646 - x\n-    }\n-\n-    @Run(test = \"testIntResultIsOverflow1\")\n-    public void checkTestIntResultIsOverflow1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Integer.MIN_VALUE, testIntResultIsOverflow1(-12));\n-    }\n-    @Test\n-    @IR(failOn = {IRNode.ADD_I, IRNode.XOR_I})\n-    @IR(counts = {IRNode.SUB_I, \"1\"})\n-    public int testIntResultIsOverflow2(int x) {\n-        return ~(x + -2147483637); \/\/ transformed to 2147483646 - x\n-    }\n-\n-    @Run(test = \"testIntResultIsOverflow2\")\n-    public void checkTestIntResultIsOverflow2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Integer.MIN_VALUE, testIntResultIsOverflow2(-12));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongResultIsOverflow1(long x) {\n-        return ~x + 9223372036854775797L; \/\/ transformed to 9223372036854775798L - x\n-    }\n-\n-    @Run(test = \"testLongResultIsOverflow1\")\n-    public void checkTestLongResultIsOverflow1(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Long.MIN_VALUE, testLongResultIsOverflow1(-12));\n-    }\n-\n-    @Test\n-    @IR(failOn = {IRNode.ADD_L, IRNode.XOR_L})\n-    @IR(counts = {IRNode.SUB_L, \"1\"})\n-    public long testLongResultIsOverflow2(long x) {\n-        return ~(x + -9223372036854775797L); \/\/ transformed to 9223372036854775798L - x\n-    }\n-\n-    @Run(test = \"testLongResultIsOverflow2\")\n-    public void checkTestLongResultIsOverflow2(RunInfo info) {\n-        assertC2Compiled(info);\n-        Asserts.assertEquals(Long.MIN_VALUE, testLongResultIsOverflow2(-12));\n-    }\n-\n-    private void assertC2Compiled(RunInfo info) {\n-        \/\/ Test VM allows C2 to work\n-        Asserts.assertTrue(info.isC2CompilationEnabled());\n-        if (!info.isWarmUp()) {\n-            \/\/ C2 compilation happens\n-            Asserts.assertTrue(info.isTestC2Compiled());\n-        }\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestIRAddIdealNotXPlusC.java","additions":0,"deletions":367,"binary":false,"changes":367,"status":"deleted"},{"patch":"@@ -0,0 +1,220 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package compiler.c2.irTests;\n+\n+import jdk.test.lib.Asserts;\n+import compiler.lib.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @bug 8281453\n+ * @summary Convert ~x into -1-x when ~x is used in an arithmetic expression\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.irTests.XorINodeIdealizationTests\n+ *\/\n+public class XorINodeIdealizationTests {\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+\n+    @Run(test = {\"test1\", \"test2\", \"test3\",\n+                 \"test4\", \"test5\", \"test6\",\n+                 \"test7\", \"test8\", \"test9\",\n+                 \"test10\", \"test11\", \"test12\",\n+                 \"test13\", \"test14\", \"test15\",\n+                 \"test16\", \"test17\"})\n+    public void runMethod() {\n+        int a = RunInfo.getRandom().nextInt();\n+        int b = RunInfo.getRandom().nextInt();\n+        int c = RunInfo.getRandom().nextInt();\n+        int d = RunInfo.getRandom().nextInt();\n+\n+        int min = Integer.MIN_VALUE;\n+        int max = Integer.MAX_VALUE;\n+\n+        assertResult(0, 0, 0, 0);\n+        assertResult(a, b, c, d);\n+        assertResult(min, min, min, min);\n+        assertResult(max, max, max, max);\n+    }\n+\n+    @DontCompile\n+    public void assertResult(int a, int b, int c, int d) {\n+        Asserts.assertEQ(b - a              , test1(a, b));\n+        Asserts.assertEQ(a - b              , test2(a, b));\n+        Asserts.assertEQ(b - a              , test3(a, b));\n+        Asserts.assertEQ(a - b              , test4(a, b));\n+        Asserts.assertEQ(b - a              , test5(a, b));\n+        Asserts.assertEQ(a + 1              , test6(a));\n+        Asserts.assertEQ(a                  , test7(a));\n+        Asserts.assertEQ((b + a) + 1        , test8(a, b));\n+        Asserts.assertEQ((-1 - a) - b       , test9(a, b));\n+        Asserts.assertEQ((b - a) + (-1)     , test10(a, b));\n+        Asserts.assertEQ((b - a) + (-1)     , test11(a, b));\n+        Asserts.assertEQ(~a                 , test12(a));\n+        Asserts.assertEQ(~a                 , test13(a));\n+        Asserts.assertEQ(~a                 , test14(a));\n+        Asserts.assertEQ(~a                 , test15(a));\n+        Asserts.assertEQ((~a + b) + (~a | c), test16(a, b, c));\n+        Asserts.assertEQ(-2023 - a          , test17(a));\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (~x + y) + 1 => y - x\n+    public int test1(int x, int y) {\n+        return (~x + y) + 1;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (x + ~y) + 1 => x - y\n+    public int test2(int x, int y) {\n+        return (x + ~y) + 1;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks ~x + (y + 1) => y - x\n+    public int test3(int x, int y) {\n+        return ~x + (y + 1);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (x + 1) + ~y => x - y\n+    public int test4(int x, int y) {\n+        return (x + 1) + ~y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks ~x - ~y => y - x\n+    public int test5(int x, int y) {\n+        return ~x - ~y; \/\/ transformed to y - x\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.XOR})\n+    @IR(counts = {IRNode.ADD, \"1\"})\n+    \/\/ Checks 0 - ~x => x + 1\n+    public int test6(int x) {\n+        return 0 - ~x; \/\/ transformed to x + 1\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.XOR, IRNode.ADD})\n+    \/\/ Checks -1 - ~x => x\n+    public int test7(int x) {\n+        return -1 - ~x;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.XOR})\n+    @IR(counts = {IRNode.ADD, \"2\"})\n+    \/\/ Checks y - ~x => (y + x) + 1\n+    public int test8(int x, int y) {\n+        return y - ~x;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.ADD, IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"2\"})\n+    \/\/ Checks ~x - y => (-1 - x) -y\n+    public int test9(int x, int y) {\n+        return ~x - y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"1\",\n+                  IRNode.ADD, \"1\"})\n+    \/\/ Checks ~x + y => (y - x) + (-1)\n+    public int test10(int x, int y) {\n+        return ~x + y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"1\",\n+                  IRNode.ADD, \"1\"})\n+    \/\/ Checks y + ~x => (y - x) + (-1)\n+    public int test11(int x, int y) {\n+        return y + ~x;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~(x + 0) => ~x, should not be transformed into -1-x\n+    public int test12(int x) {\n+        return ~(x + 0);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~(x - 0) => ~x, should not be transformed into -1-x\n+    public int test13(int x) {\n+        return ~(x - 0);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~x + 0 => ~x, should not be transformed into -1-x\n+    public int test14(int x) {\n+        return ~x + 0;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~x - 0 => ~x, should not be transformed into -1-x\n+    public int test15(int x) {\n+        return ~x - 0;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~x + y should NOT be transformed into (y - x) + (-1)\n+    \/\/ because ~x has one non-arithmetic user.\n+    public int test16(int x, int y, int z) {\n+        int u = ~x + y;\n+        int v = ~x | z;\n+        return u + v;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks ~(x + c) => (-c-1) - x\n+    public int test17(int x) {\n+        return ~(x + 2022);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java","additions":220,"deletions":0,"binary":false,"changes":220,"status":"added"},{"patch":"@@ -0,0 +1,220 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package compiler.c2.irTests;\n+\n+import jdk.test.lib.Asserts;\n+import compiler.lib.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @bug 8281453\n+ * @summary Convert ~x into -1-x when ~x is used in an arithmetic expression\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.irTests.XorLNodeIdealizationTests\n+ *\/\n+public class XorLNodeIdealizationTests {\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+\n+    @Run(test = {\"test1\", \"test2\", \"test3\",\n+                 \"test4\", \"test5\", \"test6\",\n+                 \"test7\", \"test8\", \"test9\",\n+                 \"test10\", \"test11\", \"test12\",\n+                 \"test13\", \"test14\", \"test15\",\n+                 \"test16\", \"test17\"})\n+    public void runMethod() {\n+        long a = RunInfo.getRandom().nextLong();\n+        long b = RunInfo.getRandom().nextLong();\n+        long c = RunInfo.getRandom().nextLong();\n+        long d = RunInfo.getRandom().nextLong();\n+\n+        long min = Long.MIN_VALUE;\n+        long max = Long.MAX_VALUE;\n+\n+        assertResult(0, 0, 0, 0);\n+        assertResult(a, b, c, d);\n+        assertResult(min, min, min, min);\n+        assertResult(max, max, max, max);\n+    }\n+\n+    @DontCompile\n+    public void assertResult(long a, long b, long c, long d) {\n+        Asserts.assertEQ(b - a              , test1(a, b));\n+        Asserts.assertEQ(a - b              , test2(a, b));\n+        Asserts.assertEQ(b - a              , test3(a, b));\n+        Asserts.assertEQ(a - b              , test4(a, b));\n+        Asserts.assertEQ(b - a              , test5(a, b));\n+        Asserts.assertEQ(a + 1              , test6(a));\n+        Asserts.assertEQ(a                  , test7(a));\n+        Asserts.assertEQ((b + a) + 1        , test8(a, b));\n+        Asserts.assertEQ((-1 - a) - b       , test9(a, b));\n+        Asserts.assertEQ((b - a) + (-1)     , test10(a, b));\n+        Asserts.assertEQ((b - a) + (-1)     , test11(a, b));\n+        Asserts.assertEQ(~a                 , test12(a));\n+        Asserts.assertEQ(~a                 , test13(a));\n+        Asserts.assertEQ(~a                 , test14(a));\n+        Asserts.assertEQ(~a                 , test15(a));\n+        Asserts.assertEQ((~a + b) + (~a | c), test16(a, b, c));\n+        Asserts.assertEQ(-2023 - a          , test17(a));\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (~x + y) + 1 => y - x\n+    public long test1(long x, long y) {\n+        return (~x + y) + 1;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (x + ~y) + 1 => x - y\n+    public long test2(long x, long y) {\n+        return (x + ~y) + 1;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks ~x + (y + 1) => y - x\n+    public long test3(long x, long y) {\n+        return ~x + (y + 1);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (x + 1) + ~y => x - y\n+    public long test4(long x, long y) {\n+        return (x + 1) + ~y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks ~x - ~y => y - x\n+    public long test5(long x, long y) {\n+        return ~x - ~y; \/\/ transformed to y - x\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.XOR})\n+    @IR(counts = {IRNode.ADD, \"1\"})\n+    \/\/ Checks 0 - ~x => x + 1\n+    public long test6(long x) {\n+        return 0 - ~x; \/\/ transformed to x + 1\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.XOR, IRNode.ADD})\n+    \/\/ Checks -1 - ~x => x\n+    public long test7(long x) {\n+        return -1 - ~x;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.XOR})\n+    @IR(counts = {IRNode.ADD, \"2\"})\n+    \/\/ Checks y - ~x => (y + x) + 1\n+    public long test8(long x, long y) {\n+        return y - ~x;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.ADD, IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"2\"})\n+    \/\/ Checks ~x - y => (-1 - x) -y\n+    public long test9(long x, long y) {\n+        return ~x - y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"1\",\n+                  IRNode.ADD, \"1\"})\n+    \/\/ Checks ~x + y => (y - x) + (-1)\n+    public long test10(long x, long y) {\n+        return ~x + y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR})\n+    @IR(counts = {IRNode.SUB, \"1\",\n+                  IRNode.ADD, \"1\"})\n+    \/\/ Checks y + ~x => (y - x) + (-1)\n+    public long test11(long x, long y) {\n+        return y + ~x;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~(x + 0) => ~x, should not be transformed into -1-x\n+    public long test12(long x) {\n+        return ~(x + 0);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~(x - 0) => ~x, should not be transformed into -1-x\n+    public long test13(long x) {\n+        return ~(x - 0);\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~x + 0 => ~x, should not be transformed into -1-x\n+    public long test14(long x) {\n+        return ~x + 0;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~x - 0 => ~x, should not be transformed into -1-x\n+    public long test15(long x) {\n+        return ~x - 0;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.XOR, \"1\"})\n+    \/\/ Checks ~x + y should NOT be transformed into (y - x) + (-1)\n+    \/\/ because ~x has one non-arithmetic user.\n+    public long test16(long x, long y, long z) {\n+        long u = ~x + y;\n+        long v = ~x | z;\n+        return u + v;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.XOR, IRNode.ADD})\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks ~(x + c) => (-c-1) - x\n+    public long test17(long x) {\n+        return ~(x + 2022);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java","additions":220,"deletions":0,"binary":false,"changes":220,"status":"added"},{"patch":"@@ -0,0 +1,227 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8294609\n+ * @requires vm.compiler2.enabled & vm.flagless\n+ *\n+ * @library \/test\/lib\n+ *\n+ * @build compiler.c2.unloaded.TestInlineUnloaded\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar launcher.jar\n+ *                  compiler.c2.unloaded.TestInlineUnloaded\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Launcher\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar parent.jar\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent$U\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent$TestCase\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent$Invoker\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent$TestNull\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent$TestLoadedRemotely\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Parent$TestUnloaded\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar caller.jar\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Caller\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Caller$TestNull\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar callee.jar\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Callee\n+ *                  compiler.c2.unloaded.TestInlineUnloaded$Callee$TestNull\n+ *\n+ * @run driver compiler.c2.unloaded.TestInlineUnloaded\n+ *\/\n+\n+package compiler.c2.unloaded;\n+\n+import jdk.test.lib.JDKToolFinder;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.util.function.Consumer;\n+\n+public class TestInlineUnloaded {\n+    static final String THIS_CLASS = TestInlineUnloaded.class.getName();\n+\n+    public static class Parent {\n+        public class U {\n+        }\n+\n+        public interface TestCase {\n+            U test(Invoker obj, U arg);\n+\n+            void testArg(Invoker obj, U arg);\n+\n+            U testRet(Invoker obj);\n+\n+            void test(Invoker obj);\n+        }\n+\n+        public interface Invoker {\n+            void invokeArg(U obj);\n+\n+            U invokeRet();\n+\n+            U invoke(U obj);\n+        }\n+\n+        private static class TestNull implements Runnable {\n+            final TestCase test;\n+            final Invoker recv;\n+\n+            public TestNull(TestCase test, Invoker recv) {\n+                this.test = test;\n+                this.recv = recv;\n+            }\n+\n+            @Override\n+            public void run() {\n+                test.testArg(recv, null);\n+                test.testRet(recv);\n+                test.test(recv, null);\n+            }\n+        }\n+\n+        public static class TestLoadedRemotely extends TestNull {\n+            public TestLoadedRemotely(TestCase test, Invoker recv) throws Exception {\n+                super(test, recv);\n+                Class.forName(U.class.getName()); \/\/ preload in parent context\n+            }\n+        }\n+\n+        public static class TestUnloaded extends TestNull {\n+            public TestUnloaded(TestCase test, Invoker recv) {\n+                super(test, recv);\n+            }\n+        }\n+    }\n+\n+    public static class Caller {\n+        public static class TestNull implements Parent.TestCase {\n+            public TestNull() {}\n+\n+            public Parent.U test(Parent.Invoker obj, Parent.U arg) {\n+                return obj.invoke(arg);\n+            }\n+\n+            public void testArg(Parent.Invoker obj, Parent.U arg) {\n+                obj.invokeArg(arg);\n+            }\n+\n+            public Parent.U testRet(Parent.Invoker obj) {\n+                return obj.invokeRet();\n+            }\n+\n+            public void test(Parent.Invoker obj) {\n+                test(obj, null);\n+            }\n+        }\n+    }\n+\n+    public static class Callee {\n+        public static class TestNull implements Parent.Invoker {\n+            public void invokeArg(Parent.U obj) {}\n+\n+            public Parent.U invokeRet() {\n+                return null;\n+            }\n+\n+            public Parent.U invoke(Parent.U obj) {\n+                return obj;\n+            }\n+        }\n+    }\n+\n+    public static class Launcher {\n+        public static void main(String... args) throws Exception {\n+            final String testName = args[0];\n+\n+            URLClassLoader parentCL = new URLClassLoader(\"parent\", new URL[] { new URL(\"file:parent.jar\") }, ClassLoader.getSystemClassLoader());\n+            URLClassLoader callerCL = new URLClassLoader(\"caller\", new URL[] { new URL(\"file:caller.jar\") }, parentCL);\n+            URLClassLoader calleeCL = new URLClassLoader(\"callee\", new URL[] { new URL(\"file:callee.jar\") }, parentCL);\n+\n+            Object caller = Class.forName(THIS_CLASS + \"$Caller$TestNull\", false, callerCL)\n+                                 .getDeclaredConstructor().newInstance();\n+            Object callee = Class.forName(THIS_CLASS + \"$Callee$TestNull\", false, calleeCL)\n+                                 .getDeclaredConstructor().newInstance();\n+\n+            Class<?> testClass = Class.forName(THIS_CLASS + \"$Parent$TestCase\", false, parentCL);\n+            Class<?> invClass  = Class.forName(THIS_CLASS + \"$Parent$Invoker\",  false, parentCL);\n+            Class<?> test      = Class.forName(THIS_CLASS + \"$Parent$\" + testName, false, parentCL);\n+            Runnable r = (Runnable) test.getDeclaredConstructor(testClass, invClass)\n+                                       .newInstance(caller, callee);\n+\n+            for (int i = 0; i < 20_000; i ++) {\n+                r.run();\n+            }\n+        }\n+    }\n+\n+    static void run(String testCaseName, Consumer<OutputAnalyzer> processor) throws IOException {\n+        ProcessBuilder pb = new ProcessBuilder();\n+\n+        pb.command(JDKToolFinder.getJDKTool(\"java\"),\n+            \"-cp\", \"launcher.jar\",\n+            \"-XX:+IgnoreUnrecognizedVMOptions\", \"-showversion\",\n+            \"-XX:-TieredCompilation\", \"-Xbatch\",\n+            \"-XX:+PrintCompilation\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+PrintInlining\",\n+            \"-XX:CompileCommand=quiet\", \"-XX:CompileCommand=compileonly,*TestNull::run\",\n+            Launcher.class.getName(), testCaseName);\n+\n+        System.out.println(\"Command line: [\" + pb.command() + \"]\");\n+\n+        OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n+\n+        analyzer.shouldHaveExitValue(0);\n+\n+        \/\/ The test is applicable only to C2 (present in Server VM).\n+        analyzer.stderrShouldContain(\"Server VM\");\n+\n+        analyzer.shouldContain(\"TestNull::run\"); \/\/ ensure that relevant method is compiled\n+\n+        processor.accept(analyzer); \/\/ test-specific checks\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        run(\"TestUnloaded\", output -> {\n+            output.shouldMatch(\"TestNull::testArg .* unloaded signature classes\");\n+            output.shouldMatch(\"TestNull::testRet .* unloaded signature classes\");\n+            output.shouldMatch(\"TestNull::test .* unloaded signature classes\");\n+\n+            output.shouldNotMatch(\"TestNull::testArg .* inline\");\n+            output.shouldNotMatch(\"TestNull::testRet .* inline\");\n+            output.shouldNotMatch(\"TestNull::test .* inline\");\n+        });\n+        run(\"TestLoadedRemotely\", output -> {\n+            output.shouldMatch(\"TestNull::testArg .* inline\");\n+            output.shouldMatch(\"TestNull::testRet .* inline\");\n+            output.shouldMatch(\"TestNull::test .* inline\");\n+\n+            output.shouldNotMatch(\"TestNull::testArg .* unloaded signature classes\");\n+            output.shouldNotMatch(\"TestNull::testRet .* unloaded signature classes\");\n+            output.shouldNotMatch(\"TestNull::test .* unloaded signature classes\");\n+        });\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/unloaded\/TestInlineUnloaded.java","additions":227,"deletions":0,"binary":false,"changes":227,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.jvmci.common;\n+\n+import jdk.vm.ci.code.Architecture;\n+import jdk.vm.ci.code.CodeCacheProvider;\n+import jdk.vm.ci.code.Register;\n+import jdk.vm.ci.code.RegisterArray;\n+import jdk.vm.ci.code.StackSlot;\n+import jdk.vm.ci.code.site.DataPatch;\n+import jdk.vm.ci.code.site.Site;\n+import jdk.vm.ci.code.InstalledCode;\n+import jdk.vm.ci.hotspot.HotSpotCompiledCode;\n+import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;\n+import jdk.vm.ci.hotspot.HotSpotCompiledNmethod;\n+import jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider;\n+import jdk.vm.ci.hotspot.HotSpotResolvedJavaMethod;\n+import jdk.vm.ci.meta.Assumptions.Assumption;\n+import jdk.vm.ci.meta.MetaAccessProvider;\n+import jdk.vm.ci.meta.PlatformKind;\n+import jdk.vm.ci.meta.ResolvedJavaMethod;\n+import jdk.vm.ci.meta.SpeculationLog;\n+import jdk.vm.ci.runtime.JVMCI;\n+import jdk.vm.ci.runtime.JVMCIBackend;\n+import org.junit.Assert;\n+\n+import java.lang.reflect.Method;\n+\n+public class CodeInstallerTest {\n+\n+    protected final Architecture arch;\n+    protected final CodeCacheProvider codeCache;\n+    protected final MetaAccessProvider metaAccess;\n+    protected final HotSpotConstantReflectionProvider constantReflection;\n+\n+    protected final HotSpotResolvedJavaMethod dummyMethod;\n+\n+    public static void dummyMethod() {\n+    }\n+\n+    protected CodeInstallerTest() {\n+        JVMCIBackend backend = JVMCI.getRuntime().getHostJVMCIBackend();\n+        metaAccess = backend.getMetaAccess();\n+        codeCache = backend.getCodeCache();\n+        constantReflection = (HotSpotConstantReflectionProvider) backend.getConstantReflection();\n+        arch = codeCache.getTarget().arch;\n+\n+        Method method = null;\n+        try {\n+            method = CodeInstallerTest.class.getMethod(\"dummyMethod\");\n+        } catch (NoSuchMethodException e) {\n+            Assert.fail();\n+        }\n+\n+        dummyMethod = (HotSpotResolvedJavaMethod) metaAccess.lookupJavaMethod(method);\n+    }\n+\n+    protected InstalledCode installEmptyCode(Site[] sites,\n+                                    Assumption[] assumptions,\n+                                    Comment[] comments,\n+                                    int dataSectionAlignment,\n+                                    DataPatch[] dataSectionPatches,\n+                                    StackSlot deoptRescueSlot) {\n+        ResolvedJavaMethod[] methods = {dummyMethod};\n+        byte[] targetCode = {0};\n+        int targetCodeSize = targetCode.length;\n+        boolean isImmutablePIC = false;\n+        int totalFrameSize = 0;\n+        int entryBCI = 0;\n+        int id = 1;\n+        long compileState = 0L;\n+        boolean hasUnsafeAccess = false;\n+\n+        HotSpotCompiledCode code =\n+            new HotSpotCompiledNmethod(\"dummyMethod\",\n+                                    targetCode,\n+                                    targetCodeSize,\n+                                    sites,\n+                                    assumptions,\n+                                    methods,\n+                                    comments,\n+                                    new byte[8],\n+                                    dataSectionAlignment,\n+                                    dataSectionPatches,\n+                                    isImmutablePIC,\n+                                    totalFrameSize,\n+                                    deoptRescueSlot,\n+                                    dummyMethod,\n+                                    entryBCI,\n+                                    id,\n+                                    compileState,\n+                                    hasUnsafeAccess);\n+        SpeculationLog log = null;\n+        InstalledCode installedCode = null;\n+        return codeCache.addCode(dummyMethod, code, log, installedCode);\n+    }\n+\n+    protected Register getRegister(PlatformKind kind, int index) {\n+        int idx = index;\n+        RegisterArray allRegs = arch.getAvailableValueRegisters();\n+        for (Register reg : allRegs) {\n+            if (arch.canStoreValue(reg.getRegisterCategory(), kind)) {\n+                if (idx-- == 0) {\n+                    return reg;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/CodeInstallerTest.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -246,2 +246,2 @@\n-    public static void invalidateHotSpotNmethod(HotSpotNmethod nmethodMirror) {\n-        CTVM.invalidateHotSpotNmethod(nmethodMirror, true);\n+    public static void invalidateHotSpotNmethod(HotSpotNmethod nmethodMirror, boolean deoptimize) {\n+        CTVM.invalidateHotSpotNmethod(nmethodMirror, deoptimize);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/patches\/jdk.internal.vm.ci\/jdk\/vm\/ci\/hotspot\/CompilerToVMHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,0 @@\n- * @ignore 8249621\n- * @ignore 8163894\n@@ -37,0 +35,2 @@\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.code.site\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n@@ -40,2 +40,1 @@\n- * @build compiler.jvmci.compilerToVM.InvalidateInstalledCodeTest\n- * @build jdk.test.whitebox.WhiteBox\n+ *        jdk.test.whitebox.WhiteBox jdk.test.whitebox.parser.DiagnosticCommand\n@@ -43,1 +42,2 @@\n- * @run main\/othervm -Xbootclasspath\/a:.\n+ *                                jdk.test.whitebox.parser.DiagnosticCommand\n+ * @run junit\/othervm -Xbootclasspath\/a:.\n@@ -51,0 +51,1 @@\n+import compiler.jvmci.common.CodeInstallerTest;\n@@ -54,2 +55,0 @@\n-import jdk.vm.ci.code.CodeCacheProvider;\n-import jdk.vm.ci.code.CompilationResult;\n@@ -57,0 +56,2 @@\n+import jdk.vm.ci.code.site.Site;\n+import jdk.vm.ci.code.site.DataPatch;\n@@ -58,1 +59,0 @@\n-import jdk.vm.ci.hotspot.HotSpotCompilationRequest;\n@@ -61,1 +61,3 @@\n-import jdk.test.whitebox.code.NMethod;\n+import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;\n+import jdk.vm.ci.hotspot.HotSpotNmethod;\n+import jdk.vm.ci.meta.Assumptions.Assumption;\n@@ -64,0 +66,1 @@\n+import org.junit.Test;\n@@ -65,4 +68,1 @@\n-public class InvalidateInstalledCodeTest {\n-    private static final CodeCacheProvider CACHE_PROVIDER\n-            = HotSpotJVMCIRuntime.runtime().getHostJVMCIBackend()\n-                    .getCodeCache();\n+public class InvalidateInstalledCodeTest extends CodeInstallerTest {\n@@ -70,3 +70,2 @@\n-    public static void main(String[] args) {\n-        InvalidateInstalledCodeTest test\n-                = new InvalidateInstalledCodeTest();\n+    @Test\n+    public void testInvalidation() {\n@@ -76,2 +75,2 @@\n-        testCases.forEach(test::check);\n-        test.checkNull();\n+        testCases.forEach(t -> check(t));\n+        checkNull();\n@@ -82,1 +81,1 @@\n-                () -> CompilerToVMHelper.invalidateInstalledCode(null),\n+                () -> CompilerToVMHelper.invalidateHotSpotNmethod(null, true),\n@@ -87,16 +86,3 @@\n-        System.out.println(testCase);\n-        HotSpotResolvedJavaMethod javaMethod\n-                = CTVMUtilities.getResolvedMethod(testCase.executable);\n-        HotSpotCompilationRequest compRequest = new HotSpotCompilationRequest(\n-                javaMethod, testCase.bci, \/* jvmciEnv = *\/ 0L);\n-        String name = testCase.executable.getName();\n-        CompilationResult compResult = new CompilationResult(name);\n-        \/\/ to pass sanity check of default -1\n-        compResult.setTotalFrameSize(0);\n-        compResult.close();\n-        InstalledCode installedCode = CACHE_PROVIDER.installCode(\n-                compRequest, compResult,\n-                new InstalledCode(name), \/* speculationLog = *\/ null,\n-                \/* isDefault = *\/ false);\n-        Asserts.assertTrue(installedCode.isValid(), testCase\n-                + \" : code is invalid even before invalidation\");\n+        HotSpotResolvedJavaMethod javaMethod = CTVMUtilities.getResolvedMethod(testCase.executable);\n+        HotSpotNmethod nmethod = (HotSpotNmethod) installEmptyCode(new Site[0], new Assumption[0],\n+                new Comment[0], 8, new DataPatch[0], null);\n@@ -104,17 +90,14 @@\n-        NMethod beforeInvalidation = testCase.toNMethod();\n-        if (beforeInvalidation != null) {\n-            throw new Error(\"TESTBUG : \" + testCase + \" : nmethod isn't found\");\n-        }\n-        \/\/ run twice to verify how it works if method is already invalidated\n-        for (int i = 0; i < 2; ++i) {\n-            CompilerToVMHelper.invalidateInstalledCode(installedCode);\n-            Asserts.assertFalse(installedCode.isValid(), testCase\n-                            + \" : code is valid after invalidation, i = \" + i);\n-            NMethod afterInvalidation = testCase.toNMethod();\n-            if (afterInvalidation != null) {\n-                System.err.println(\"before: \" + beforeInvalidation);\n-                System.err.println(\"after: \" + afterInvalidation);\n-                throw new AssertionError(testCase\n-                        + \" : method hasn't been invalidated, i = \" + i);\n-            }\n-        }\n+        Asserts.assertTrue(nmethod.isValid(), testCase + \" : code is invalid even before invalidation\");\n+\n+        Asserts.assertTrue(nmethod.isValid(), testCase + \" : code is not valid, i = \" + nmethod);\n+        Asserts.assertTrue(nmethod.isAlive(), testCase + \" : code is not alive, i = \" + nmethod);\n+\n+        \/\/ Make nmethod non-entrant but still alive\n+        CompilerToVMHelper.invalidateHotSpotNmethod(nmethod, false);\n+        Asserts.assertFalse(nmethod.isValid(), testCase + \" : code is valid, i = \" + nmethod);\n+        Asserts.assertTrue(nmethod.isAlive(), testCase + \" : code is not alive, i = \" + nmethod);\n+\n+        \/\/ Deoptimize the nmethod and cut the link to it from the HotSpotNmethod\n+        CompilerToVMHelper.invalidateHotSpotNmethod(nmethod, true);\n+        Asserts.assertFalse(nmethod.isValid(), testCase + \" : code is valid, i = \" + nmethod);\n+        Asserts.assertFalse(nmethod.isAlive(), testCase + \" : code is alive, i = \" + nmethod);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/InvalidateInstalledCodeTest.java","additions":36,"deletions":53,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -1,96 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package compiler.jvmci.errors;\n-\n-import jdk.vm.ci.code.Architecture;\n-import jdk.vm.ci.code.CodeCacheProvider;\n-import jdk.vm.ci.code.Register;\n-import jdk.vm.ci.code.RegisterArray;\n-import jdk.vm.ci.code.StackSlot;\n-import jdk.vm.ci.code.site.DataPatch;\n-import jdk.vm.ci.code.site.Site;\n-import jdk.vm.ci.hotspot.HotSpotCompiledCode;\n-import jdk.vm.ci.hotspot.HotSpotCompiledCode.Comment;\n-import jdk.vm.ci.hotspot.HotSpotCompiledNmethod;\n-import jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider;\n-import jdk.vm.ci.hotspot.HotSpotResolvedJavaMethod;\n-import jdk.vm.ci.meta.Assumptions.Assumption;\n-import jdk.vm.ci.meta.MetaAccessProvider;\n-import jdk.vm.ci.meta.PlatformKind;\n-import jdk.vm.ci.meta.ResolvedJavaMethod;\n-import jdk.vm.ci.runtime.JVMCI;\n-import jdk.vm.ci.runtime.JVMCIBackend;\n-import org.junit.Assert;\n-\n-import java.lang.reflect.Method;\n-\n-public class CodeInstallerTest {\n-\n-    protected final Architecture arch;\n-    protected final CodeCacheProvider codeCache;\n-    protected final MetaAccessProvider metaAccess;\n-    protected final HotSpotConstantReflectionProvider constantReflection;\n-\n-    protected final HotSpotResolvedJavaMethod dummyMethod;\n-\n-    public static void dummyMethod() {\n-    }\n-\n-    protected CodeInstallerTest() {\n-        JVMCIBackend backend = JVMCI.getRuntime().getHostJVMCIBackend();\n-        metaAccess = backend.getMetaAccess();\n-        codeCache = backend.getCodeCache();\n-        constantReflection = (HotSpotConstantReflectionProvider) backend.getConstantReflection();\n-        arch = codeCache.getTarget().arch;\n-\n-        Method method = null;\n-        try {\n-            method = CodeInstallerTest.class.getMethod(\"dummyMethod\");\n-        } catch (NoSuchMethodException e) {\n-            Assert.fail();\n-        }\n-\n-        dummyMethod = (HotSpotResolvedJavaMethod) metaAccess.lookupJavaMethod(method);\n-    }\n-\n-    protected void installEmptyCode(Site[] sites, Assumption[] assumptions, Comment[] comments, int dataSectionAlignment, DataPatch[] dataSectionPatches, StackSlot deoptRescueSlot) {\n-        HotSpotCompiledCode code = new HotSpotCompiledNmethod(\"dummyMethod\", new byte[0], 0, sites, assumptions, new ResolvedJavaMethod[]{dummyMethod}, comments, new byte[8], dataSectionAlignment,\n-                        dataSectionPatches, false, 0, deoptRescueSlot,\n-                        dummyMethod, 0, 1, 0L, false);\n-        codeCache.addCode(dummyMethod, code, null, null);\n-    }\n-\n-    protected Register getRegister(PlatformKind kind, int index) {\n-        int idx = index;\n-        RegisterArray allRegs = arch.getAvailableValueRegisters();\n-        for (Register reg : allRegs) {\n-            if (arch.canStoreValue(reg.getRegisterCategory(), kind)) {\n-                if (idx-- == 0) {\n-                    return reg;\n-                }\n-            }\n-        }\n-        return null;\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/CodeInstallerTest.java","additions":0,"deletions":96,"binary":false,"changes":96,"status":"deleted"},{"patch":"@@ -26,0 +26,1 @@\n+ * @library \/\n@@ -33,1 +34,0 @@\n- * @compile CodeInstallerTest.java\n@@ -40,0 +40,1 @@\n+import compiler.jvmci.common.CodeInstallerTest;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidCompilationResult.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @library \/\n@@ -33,1 +34,0 @@\n- * @compile CodeInstallerTest.java\n@@ -40,0 +40,1 @@\n+import compiler.jvmci.common.CodeInstallerTest;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidDebugInfo.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @library \/\n@@ -33,1 +34,0 @@\n- * @compile CodeInstallerTest.java\n@@ -40,0 +40,1 @@\n+import compiler.jvmci.common.CodeInstallerTest;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidOopMap.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -154,0 +154,1 @@\n+    public static final String XOR = START + \"Xor(I|L)\" + MID + END;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-An `@IR` annotation allows additional preconditions\/restrictions on the currently present VM flags to enable or disable rules when certain flags are present or have a specific value (see `applyIfXX` properties of an `@IR` annotation).\n+An `@IR` annotation allows additional preconditions\/restrictions on the currently present VM flags to enable or disable rules when certain flags are present or have a specific value (see `applyIfXX` properties of an `@IR` annotation). If a `@Test` annotated method has multiple preconditions (for example `applyIf` and `applyIfCPUFeature`), they are evaluated as a logical conjunction.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,0 +98,5 @@\n+    private void printDisableReason(String method, String reason) {\n+        TestFrameworkSocket.write(\"Disabling IR matching for \" + method + \": \" + reason + \".\",\n+                                  \"[IREncodingPrinter]\", true);\n+    }\n+\n@@ -102,0 +107,24 @@\n+        } else if (irAnno.applyIf().length != 0 && !hasAllRequiredFlags(irAnno.applyIf(), \"applyIf\")) {\n+            printDisableReason(m, \"Flag constraint not met\");\n+            return false;\n+        } else if (irAnno.applyIfNot().length != 0 && !hasNoRequiredFlags(irAnno.applyIfNot(), \"applyIfNot\")) {\n+            printDisableReason(m, \"Flag constraint not met\");\n+            return false;\n+        } else if (irAnno.applyIfAnd().length != 0 && !hasAllRequiredFlags(irAnno.applyIfAnd(), \"applyIfAnd\")) {\n+            printDisableReason(m, \"All flag constraints not met\");\n+            return false;\n+        } else if (irAnno.applyIfOr().length != 0 && hasNoRequiredFlags(irAnno.applyIfOr(), \"applyIfOr\")) {\n+            printDisableReason(m, \"None of the flag constraints met\");\n+            return false;\n+        } else if (irAnno.applyIfCPUFeature().length != 0 && !hasAllRequiredCPUFeature(irAnno.applyIfCPUFeature())) {\n+            printDisableReason(m, \"Feature constraint not met\");\n+            return false;\n+        } else if (irAnno.applyIfCPUFeatureAnd().length != 0 && !hasAllRequiredCPUFeature(irAnno.applyIfCPUFeatureAnd())) {\n+            printDisableReason(m, \"All feature constraints not met\");\n+            return false;\n+        } else if (irAnno.applyIfCPUFeatureOr().length != 0 && !hasAnyRequiredCPUFeature(irAnno.applyIfCPUFeatureOr())) {\n+            printDisableReason(m, \"None of the feature constraints met\");\n+            return false;\n+        } else {\n+            \/\/ All preconditions satisfied: apply rule.\n+            return true;\n@@ -103,64 +132,0 @@\n-        if (irAnno.applyIf().length != 0) {\n-            boolean check = hasAllRequiredFlags(irAnno.applyIf(), \"applyIf\");\n-            if (!check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": Flag constraint not met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return check;\n-        }\n-\n-        if (irAnno.applyIfNot().length != 0) {\n-            boolean check = hasNoRequiredFlags(irAnno.applyIfNot(), \"applyIfNot\");\n-            if (!check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": Flag constraint not met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return check;\n-        }\n-\n-        if (irAnno.applyIfAnd().length != 0) {\n-            boolean check = hasAllRequiredFlags(irAnno.applyIfAnd(), \"applyIfAnd\");\n-            if (!check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": All flag constraints not met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return check;\n-        }\n-\n-        if (irAnno.applyIfOr().length != 0) {\n-            boolean check = hasNoRequiredFlags(irAnno.applyIfOr(), \"applyIfOr\");\n-            if (check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": None of the flag constraint met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return !check;\n-        }\n-\n-        if (irAnno.applyIfCPUFeature().length != 0) {\n-            boolean check = hasAllRequiredCPUFeature(irAnno.applyIfCPUFeature());\n-            if (!check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": Feature constraint not met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return check;\n-        }\n-\n-        if (irAnno.applyIfCPUFeatureAnd().length != 0) {\n-            boolean check = hasAllRequiredCPUFeature(irAnno.applyIfCPUFeatureAnd());\n-            if (!check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": All feature constraints not met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return check;\n-        }\n-\n-        if (irAnno.applyIfCPUFeatureOr().length != 0) {\n-            boolean check = hasAnyRequiredCPUFeature(irAnno.applyIfCPUFeatureOr());\n-            if (!check) {\n-                TestFrameworkSocket.write(\"Disabling IR matching for \" + m + \": None of the feature constraint met.\",\n-                                     \"[IREncodingPrinter]\", true);\n-            }\n-            return check;\n-        }\n-        \/\/ No conditions, always apply.\n-        return true;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/IREncodingPrinter.java","additions":29,"deletions":64,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ *      -XX:StressLongCountedLoop=0\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRemoveEmptyLoop.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-import jdk.test.lib.cds.CDSOptions;\n-\n-\/\/ This class represents options used for\n-\/\/ during creation of the archive and\/or running JVM with archive\n-\n-public class AppCDSOptions extends CDSOptions {\n-    public String appJar;\n-    public String appJarDir;\n-\n-    public AppCDSOptions setAppJar(String appJar) {\n-        this.appJar = appJar;\n-        return this;\n-    }\n-\n-    public AppCDSOptions setAppJarDir(String appJarDir) {\n-        this.appJarDir = appJarDir;\n-        return this;\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/AppCDSOptions.java","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -172,1 +172,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions()).setAppJar(appJar);\n+        CDSOptions opts = (new CDSOptions()).setAppJar(appJar);\n@@ -180,1 +180,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions()).setAppJar(appJar);\n+        CDSOptions opts = (new CDSOptions()).setAppJar(appJar);\n@@ -210,1 +210,1 @@\n-    public static OutputAnalyzer createArchive(AppCDSOptions opts)\n+    public static OutputAnalyzer createArchive(CDSOptions opts)\n@@ -410,2 +410,2 @@\n-    \/\/ Execute JVM using AppCDS archive with specified AppCDSOptions\n-    public static OutputAnalyzer runWithArchive(AppCDSOptions opts)\n+    \/\/ Execute JVM using AppCDS archive with specified CDSOptions\n+    public static OutputAnalyzer runWithArchive(CDSOptions opts)\n@@ -454,1 +454,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -462,1 +462,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -468,1 +468,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -474,1 +474,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -481,1 +481,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions()).setAppJar(appJar);\n+        CDSOptions opts = (new CDSOptions()).setAppJar(appJar);\n@@ -488,1 +488,1 @@\n-        AppCDSOptions opts = makeModuleOptions(prefix, upgrademodulepath, modulepath,\n+        CDSOptions opts = makeModuleOptions(prefix, upgrademodulepath, modulepath,\n@@ -494,1 +494,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -500,1 +500,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -506,1 +506,1 @@\n-    private static AppCDSOptions makeModuleOptions(String prefix[], String upgrademodulepath, String modulepath,\n+    private static CDSOptions makeModuleOptions(String prefix[], String upgrademodulepath, String modulepath,\n@@ -508,1 +508,1 @@\n-        AppCDSOptions opts = (new AppCDSOptions());\n+        CDSOptions opts = (new CDSOptions());\n@@ -524,1 +524,1 @@\n-        AppCDSOptions opts = makeModuleOptions(prefix, upgrademodulepath, modulepath,\n+        CDSOptions opts = makeModuleOptions(prefix, upgrademodulepath, modulepath,\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n-            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE\n+                && e.getCode() != JVMTIUtils.JVMTI_ERROR_WRONG_PHASE) {\n@@ -65,1 +66,2 @@\n-            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE\n+                && e.getCode() != JVMTIUtils.JVMTI_ERROR_WRONG_PHASE) {\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeDirectTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8294759\n+ * @summary Verify mutex rank logging works\n+ * @requires vm.flagless\n+ * @library \/test\/lib\n+ * @run driver MutexRankTest\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Platform;\n+\n+public class MutexRankTest {\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vmmutex\",\n+                                                                  \"-version\");\n+        OutputAnalyzer oa = new OutputAnalyzer(pb.start());\n+        oa.shouldContain(\"VM Mutex\/Monitor ranks:\");\n+        if (Platform.isDebugBuild()) {\n+            oa.shouldContain(\"Rank \\\"safepoint\\\"\");\n+            oa.shouldContain(\"Heap_lock\");\n+        } else {\n+            oa.shouldContain(\"Only known in debug builds\");\n+        }\n+        oa.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MutexRankTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -32,1 +32,1 @@\n- * @run main\/othervm\/native\n+ * @run main\/othervm\/native\/timeout=600\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume1\/SuspendResume1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+    public static int JVMTI_ERROR_WRONG_PHASE = 112;\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jvmti\/JVMTIUtils.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test 8294236\n+ * @summary Tests different sources and combinations of preconditions.\n+ * @library \/test\/lib \/\n+ * @requires vm.compiler2.enabled\n+ * @run driver ir_framework.tests.TestPreconditions\n+ *\/\n+\n+package ir_framework.tests;\n+\n+import compiler.lib.ir_framework.*;\n+\n+public class TestPreconditions {\n+\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\"-XX:LoopMaxUnroll=8\");\n+    }\n+\n+    \/\/ The IR check should not be applied, since the VM is run with LoopMaxUnroll=8.\n+    @Test\n+    @IR(applyIf = {\"LoopMaxUnroll\", \"= 0\"},\n+        counts = {IRNode.LOOP, \">= 1000\"})\n+    public static void testApplyIfOnly() {}\n+\n+    \/\/ The IR check should not be applied, since the CPU feature does not exist.\n+    @Test\n+    @IR(applyIfCPUFeature = {\"this-feature-does-not-exist-at-all\", \"true\"},\n+        counts = {IRNode.LOOP, \">= 1000\"})\n+    public static void testApplyIfCPUFeatureOnly() {}\n+\n+    \/\/ The IR check should not be applied, since the CPU feature does not exist.\n+    @Test\n+    @IR(applyIfCPUFeature = {\"this-feature-does-not-exist-at-all\", \"true\"},\n+        applyIf = {\"LoopMaxUnroll\", \"= 8\"},\n+        counts = {IRNode.LOOP, \">= 1000\"})\n+    public static void testApplyBoth() {}\n+\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPreconditions.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,6 @@\n-  @author das@sparc.spb.su area=awt.print\n-  @run main\/manual=yesno ConstrainedPrintingTest\n+  @library \/test\/lib\n+  @library \/javax\/accessibility\/manual\n+  @build lib.ManualTestFrame\n+  @build lib.TestResult\n+  @build jtreg.SkippedException\n+  @run main\/manual ConstrainedPrintingTest\n@@ -33,67 +37,34 @@\n-\/\/ Note there is no @ in front of test above.  This is so that the\n-\/\/  harness will not mistake this file as a test file.  It should\n-\/\/  only see the html file as a test file. (the harness runs all\n-\/\/  valid test files, so it would run this test twice if this file\n-\/\/  were valid as well as the html file.)\n-\/\/ Also, note the area= after Your Name in the author tag.  Here, you\n-\/\/  should put which functional area the test falls in.  See the\n-\/\/  AWT-core home page -> test areas and\/or -> AWT team  for a list of\n-\/\/  areas.\n-\/\/ There are several places where ManualYesNoTest appear.  It is\n-\/\/  recommended that these be changed by a global search and replace,\n-\/\/  such as  ESC-%  in xemacs.\n-\n-\n-\n-\/**\n- * ConstrainedPrintingTest.java\n- *\n- * summary: verify that child components can draw only inside their\n- *          visible bounds\n- *\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-\n-\n-\/\/Manual tests should run as applet tests if possible because they\n-\/\/ get their environments cleaned up, including AWT threads, any\n-\/\/ test created threads, and any system resources used by the test\n-\/\/ such as file descriptors.  (This is normally not a problem as\n-\/\/ main tests usually run in a separate VM, however on some platforms\n-\/\/ such as the Mac, separate VMs are not possible and non-applet\n-\/\/ tests will cause problems).  Also, you don't have to worry about\n-\/\/ synchronisation stuff in Applet tests the way you do in main\n-\/\/ tests...\n-\n-\n-public class ConstrainedPrintingTest implements ActionListener\n- {\n-   \/\/Declare things used in the test, like buttons and labels here\n-    final Frame frame = new Frame(\"PrintTest\");\n-    final Button button = new Button(\"Print\");\n-    final Panel panel = new Panel();\n-    final Component testComponent = new Component() {\n-        public void paint(Graphics g) {\n-            ConstrainedPrintingTest.paintOutsideBounds(this, g, Color.green);\n-        }\n-        public Dimension getPreferredSize() {\n-            return new Dimension(100, 100);\n-        }\n-    };\n-    final Canvas testCanvas = new Canvas() {\n-        public void paint(Graphics g) {\n-            ConstrainedPrintingTest.paintOutsideBounds(this, g, Color.red);\n-            \/\/ The frame is sized so that only the upper part of\n-            \/\/ the canvas is visible. We draw on the lower part,\n-            \/\/ so that we can verify that the output is clipped\n-            \/\/ by the parent container bounds.\n-            Dimension panelSize = panel.getSize();\n-            Rectangle b = getBounds();\n-            g.setColor(Color.red);\n-            g.setClip(null);\n-            for (int i = panelSize.height - b.y; i < b.height; i+= 10) {\n-                g.drawLine(0, i, b.width, i);\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.JobAttributes;\n+import java.awt.PageAttributes;\n+import java.awt.Panel;\n+import java.awt.PrintJob;\n+import java.awt.Rectangle;\n+import java.awt.print.PrinterJob;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.function.Consumer;\n+import java.util.function.Supplier;\n+import javax.swing.JEditorPane;\n+import jtreg.SkippedException;\n+import lib.ManualTestFrame;\n+import lib.TestResult;\n+\n+public class ConstrainedPrintingTest {\n+\n+    public static void createTestUI() {\n+        Frame frame = new Frame(\"PrintTest\");\n+        Button button = new Button(\"Print\");\n+        Panel panel = new Panel();\n+        Component testComponent = new Component() {\n+            public void paint(Graphics g) {\n+                ConstrainedPrintingTest.paintOutsideBounds(this, g, Color.green);\n@@ -101,12 +72,40 @@\n-        }\n-        public Dimension getPreferredSize() {\n-            return new Dimension(100, 100);\n-        }\n-    };\n-\n-   public void init()\n-    {\n-      \/\/Create instructions for the user here, as well as set up\n-      \/\/ the environment -- set the layout manager, add buttons,\n-      \/\/ etc.\n-        button.addActionListener(this);\n+            public Dimension getPreferredSize() {\n+                return new Dimension(100, 100);\n+            }\n+        };\n+\n+        Canvas testCanvas = new Canvas() {\n+            public void paint(Graphics g) {\n+                ConstrainedPrintingTest.paintOutsideBounds(this, g, Color.red);\n+                \/\/ The frame is sized so that only the upper part of\n+                \/\/ the canvas is visible. We draw on the lower part,\n+                \/\/ so that we can verify that the output is clipped\n+                \/\/ by the parent container bounds.\n+                Dimension panelSize = panel.getSize();\n+                Rectangle b = getBounds();\n+                g.setColor(Color.red);\n+                g.setClip(null);\n+                for (int i = panelSize.height - b.y; i < b.height; i+= 10) {\n+                    g.drawLine(0, i, b.width, i);\n+                }\n+            }\n+            public Dimension getPreferredSize() {\n+                return new Dimension(100, 100);\n+            }\n+        };\n+\n+        button.addActionListener((actionEvent) -> {\n+            PageAttributes pa = new PageAttributes();\n+            pa.setPrinterResolution(36);\n+            PrintJob pjob = frame.getToolkit().getPrintJob(frame, \"NewTest\",\n+                    new JobAttributes(), pa);\n+            if (pjob != null) {\n+                Graphics pg = pjob.getGraphics();\n+                if (pg != null) {\n+                    pg.translate(20, 20);\n+                    frame.printAll(pg);\n+                    pg.dispose();\n+                }\n+                pjob.end();\n+            }\n+        });\n@@ -125,20 +124,1 @@\n-\n-      String[] instructions =\n-       {\n-         \"1.Look at the frame titled \\\"PrintTest\\\". If you see green or\",\n-         \"  red lines on the white area below the \\\"Print\\\" button, the\",\n-         \"  test fails. Otherwise go to step 2.\",\n-         \"2.Press \\\"Print\\\" button. The print dialog will appear. Select\",\n-         \"  a printer and proceed. Look at the output. If you see multiple\",\n-         \"  lines outside of the frame bounds or in the white area below\",\n-         \"  the image of the \\\"Print\\\" button, the test fails. Otherwise\",\n-         \"  the test passes.\"\n-       };\n-      Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-   public void start ()\n-    {\n-      \/\/Get things going.  Request focus, set size, et cetera\n-\n+        frame.setLocationRelativeTo(null);\n@@ -146,36 +126,0 @@\n-\n-      \/\/What would normally go into main() will probably go here.\n-      \/\/Use System.out.println for diagnostic messages that you want\n-      \/\/ to read after the test is done.\n-      \/\/Use Sysout.println for messages you want the tester to read.\n-\n-    }\/\/ start()\n-\n-   \/\/The rest of this class is the actions which perform the test...\n-\n-   \/\/Use Sysout.println to communicate with the user NOT System.out!!\n-   \/\/Sysout.println (\"Something Happened!\");\n-\n-    public void stop() {\n-        frame.setVisible(false);\n-    }\n-\n-    public void destroy() {\n-        frame.dispose();\n-    }\n-\n-    public void actionPerformed(ActionEvent e) {\n-        PageAttributes pa = new PageAttributes();\n-        pa.setPrinterResolution(36);\n-        PrintJob pjob = frame.getToolkit().getPrintJob(frame, \"NewTest\",\n-                                                       new JobAttributes(),\n-                                                       pa);\n-        if (pjob != null) {\n-            Graphics pg = pjob.getGraphics();\n-            if (pg != null) {\n-                pg.translate(20, 20);\n-                frame.printAll(pg);\n-                pg.dispose();\n-            }\n-            pjob.end();\n-        }\n@@ -206,6 +150,2 @@\n-    public static void main(String[] args) {\n-        ConstrainedPrintingTest c = new ConstrainedPrintingTest();\n-\n-        c.init();\n-        c.start();\n-    }\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, IOException {\n@@ -213,135 +153,4 @@\n- }\/\/ class ConstrainedPrintingTest\n-\n-\/* Place other classes related to the test after this line *\/\n-\n-\n-\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n- {\n-   private static TestDialog dialog;\n-\n-   public static void createDialogWithInstructions( String[] instructions )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      dialog.printInstructions( instructions );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-   public static void createDialog( )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-      dialog.printInstructions( defInstr );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-   public static void printInstructions( String[] instructions )\n-    {\n-      dialog.printInstructions( instructions );\n-    }\n-\n-\n-   public static void println( String messageIn )\n-    {\n-      dialog.displayMessage( messageIn );\n-    }\n-\n- }\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n- {\n-\n-   TextArea instructionsText;\n-   TextArea messageText;\n-   int maxStringLength = 80;\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public TestDialog( Frame frame, String name )\n-    {\n-      super( frame, name );\n-      int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-      instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-      add( \"North\", instructionsText );\n-\n-      messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-      add(\"South\", messageText);\n-\n-      pack();\n-\n-      show();\n-    }\/\/ TestDialog()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void printInstructions( String[] instructions )\n-    {\n-      \/\/Clear out any current instructions\n-      instructionsText.setText( \"\" );\n-\n-      \/\/Go down array of instruction strings\n-\n-      String printStr, remainingStr;\n-      for( int i=0; i < instructions.length; i++ )\n-       {\n-         \/\/chop up each into pieces maxSringLength long\n-         remainingStr = instructions[ i ];\n-         while( remainingStr.length() > 0 )\n-          {\n-            \/\/if longer than max then chop off first max chars to print\n-            if( remainingStr.length() >= maxStringLength )\n-             {\n-               \/\/Try to chop on a word boundary\n-               int posOfSpace = remainingStr.\n-                  lastIndexOf( ' ', maxStringLength - 1 );\n-\n-               if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-               printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-               remainingStr = remainingStr.substring( posOfSpace + 1 );\n-             }\n-            \/\/else just print\n-            else\n-             {\n-               printStr = remainingStr;\n-               remainingStr = \"\";\n-             }\n-\n-            instructionsText.append( printStr + \"\\n\" );\n-\n-          }\/\/ while\n-\n-       }\/\/ for\n-\n-    }\/\/printInstructions()\n+        if (PrinterJob.lookupPrintServices().length == 0) {\n+            throw new SkippedException(\"Printer not configured or available.\"\n+                    + \" Test cannot continue.\");\n+        }\n@@ -349,4 +158,23 @@\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void displayMessage( String messageIn )\n-    {\n-      messageText.append( messageIn + \"\\n\" );\n+        String instruction = \"\"\"\n+                1.Look at the frame titled \"PrintTest\". If you see green or,\n+                red lines on the white area below the \"Print\" button, the,\n+                test fails. Otherwise go to step 2.,\n+                2.Press \"Print\" button. The print dialog will appear.\n+                Select, a printer and proceed. Look at the output.\n+                If you see multiple, lines outside of the frame bounds\n+                or in the white area below, the image of the \"Print\"\n+                button, the test fails. Otherwise,the test passes.\n+                \"\"\";\n+        Consumer<JEditorPane> testInstProvider = e -> {\n+            e.setContentType(\"text\/plain\");\n+            e.setText(instruction);\n+        };\n+\n+        Supplier<TestResult> resultSupplier = ManualTestFrame.showUI(\n+                \"Tests ConstrainedPrintingTest\",\n+                \"Wait until the Test UI is seen\", testInstProvider);\n+        EventQueue.invokeAndWait(ConstrainedPrintingTest::createTestUI);\n+\n+        \/\/this will block until user decision to pass or fail the test\n+        TestResult  testResult = resultSupplier.get();\n+        ManualTestFrame.handleResult(testResult,\"ConstrainedPrintingTest\");\n@@ -354,0 +182,1 @@\n+}\n@@ -355,1 +184,0 @@\n- }\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/PrintJob\/ConstrainedPrintingTest\/ConstrainedPrintingTest.java","additions":112,"deletions":284,"binary":false,"changes":396,"status":"modified"},{"patch":"@@ -0,0 +1,148 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.FlowLayout;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.RenderingHints;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.font.TextLayout;\n+import java.awt.image.BufferedImage;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.IntStream;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n+import javax.swing.border.EmptyBorder;\n+\n+\/* @test\n+ * @bug 8276849\n+ * @summary Update the window icon on DPI scale factor changes\n+ * @requires os.family == \"windows\"\n+ * @run main\/manual WindowIconUpdateOnDPIChangingTest\n+ *\/\n+public class WindowIconUpdateOnDPIChangingTest {\n+\n+    private static volatile boolean testResult = false;\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(1);\n+    private static JFrame frame;\n+\n+    private static final String INSTRUCTIONS = \"<html><body style=\\\"font-family: sans-serif\\\">\\n\"\n+            + \"<b>INSTRUCTIONS:<\/b>\\n\"\n+            + \"<p>Verify that the window icon is properly updated after changing the display DPI.<\/p>\\n\"\n+            + \"\\n\"\n+            + \"<p>The test is applicable for OSes that allows to change the display DPI\\n\"\n+            + \"without rebooting the system. Press <b>PASS<\/b> for other systems.<\/p>\\n\"\n+            + \"\\n\"\n+            + \"<ol>\"\n+            + \"  <li>Set the display DPI scale factor to 100%<\/li>\"\n+            + \"  <li>Check that the string \\\"16\\\" is painted in the window icon.<\/li>\"\n+            + \"  <li>Set the display DPI scale factor to a different value,\"\n+            + \"   or move the frame to another screen with a different DPI scale factor.<\/li>\"\n+            + \"  <li>Check that the window icon is updated, it should display \\\"24\\\" on a screen\"\n+            + \"      with a 150% DPI scaling, or \\\"32\\\" on a screen with a 200% DPI scaling.\"\n+            + \"      <br>If so, press <b>PASS<\/b>, otherwise press <b>FAIL<\/b>.<\/li>\"\n+            + \"<ol>\\n\"\n+            + \"<\/body>\\n\"\n+            + \"<\/html>\\n\";\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeLater(WindowIconUpdateOnDPIChangingTest::createUI);\n+        if (!countDownLatch.await(15, TimeUnit.MINUTES)) {\n+            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            throw new RuntimeException(\"Timed out!\");\n+        } else if (!testResult) {\n+            throw new RuntimeException(\"Test fails!\");\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new JFrame(\"Window Icon Update Test\");\n+        frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        frame.setSize(640, 480);\n+        frame.addWindowListener(new WindowAdapter() {\n+            public void windowClosed(WindowEvent e) {\n+                countDownLatch.countDown();\n+            }\n+        });\n+        frame.getContentPane().setLayout(new BorderLayout());\n+        frame.getContentPane().add(createInstrumentsPane(), BorderLayout.CENTER);\n+        frame.getContentPane().add(createControlPanel(), BorderLayout.SOUTH);\n+        frame.setIconImages(IntStream.rangeClosed(16, 32).mapToObj(size -> createIcon(size)).toList());\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static JTextPane createInstrumentsPane() {\n+        JTextPane instructionsPane = new JTextPane();\n+        instructionsPane.setContentType(\"text\/html\");\n+        instructionsPane.setText(INSTRUCTIONS);\n+        instructionsPane.setEditable(false);\n+        instructionsPane.setBorder(new EmptyBorder(10, 10, 10, 10));\n+        return instructionsPane;\n+    }\n+\n+    private static JPanel createControlPanel() {\n+        JButton passButton = new JButton(\"Pass\");\n+        passButton.addActionListener(e -> testResult = true);\n+        passButton.addActionListener(e -> frame.dispose());\n+\n+        JButton failButton = new JButton(\"Fail\");\n+        failButton.addActionListener(e -> frame.dispose());\n+\n+        JPanel controlPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));\n+        controlPanel.add(passButton);\n+        controlPanel.add(failButton);\n+\n+        return controlPanel;\n+    }\n+\n+    \/**\n+     * Creates an icon of the size specified. The size is drawn at the center of the icon.\n+     *\n+     * @param size the size of the icon\n+     *\/\n+    private static Image createIcon(int size) {\n+        BufferedImage image = new BufferedImage(size, size, BufferedImage.TYPE_INT_ARGB);\n+        Graphics2D g = image.createGraphics();\n+        g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+        g.setColor(Color.WHITE);\n+        g.fillRect(0, 0, size, size);\n+        g.setFont(new Font(\"Dialog\", Font.BOLD, 12));\n+        g.setColor(Color.BLACK);\n+\n+        TextLayout layout = new TextLayout(String.valueOf(size), g.getFont(), g.getFontRenderContext());\n+        int height = (int) layout.getBounds().getHeight();\n+        int width = (int) layout.getBounds().getWidth();\n+        layout.draw(g, (size - width) \/ 2f - 1, (size + height) \/ 2f);\n+        return image;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/WindowIconUpdateOnDPIChanging\/WindowIconUpdateOnDPIChangingTest.java","additions":148,"deletions":0,"binary":false,"changes":148,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Tests that equals(Object) is consistent with hashCode(),\n+ *          in particular regarding negative versus positive zeros and\n+ *          NaN values.\n+ *\/\n+\n+import java.awt.geom.AffineTransform;\n+\n+public class EqualsAndHashCode {\n+    private static boolean failed;\n+\n+    public static void main(String arg[]) {\n+        checkReflexiveEquals();\n+        checkZeros();\n+        checkNotEqual();\n+        if (failed) {\n+            throw new RuntimeException(\"Some tests failed.\");\n+        }\n+    }\n+\n+    private static void checkReflexiveEquals() {\n+        AffineTransform t = new AffineTransform(1, 0, 0, 1, Double.NaN, 0);\n+        if (!t.equals(t)) {\n+            System.err.println(\"Transform should be equal to itself.\");\n+            failed = true;\n+        }\n+        if (!t.equals(t.clone())) {\n+            System.err.println(\"Transform should be equal to its clone.\");\n+            failed = true;\n+        }\n+    }\n+\n+    private static void checkZeros() {\n+        AffineTransform positive = new AffineTransform(2, 0, 0, 3, 0, +0.0);\n+        AffineTransform negative = new AffineTransform(2, 0, 0, 3, 0, -0.0);\n+        if (!positive.equals(negative)) {\n+            System.err.println(\"Transforms should be equal despite the sign difference in zero values.\");\n+            failed = true;\n+        } else if (positive.hashCode() != negative.hashCode()) {\n+            System.err.println(\"Equal transforms should have the same hash code value.\");\n+            failed = true;\n+        }\n+    }\n+\n+    private static void checkNotEqual() {\n+        AffineTransform t1 = new AffineTransform(2, 0, 0, 3, 2, 0);\n+        AffineTransform t2 = new AffineTransform(2, 0, 0, 3, 2, 4);\n+        if (t1.equals(t2)) {\n+            System.err.println(\"Expected non-equal transforms.\");\n+            failed = true;\n+        }\n+        if (t1.hashCode() == t2.hashCode()) {\n+            System.err.println(\"Expected different hash codes.\");\n+            failed = true;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/geom\/AffineTransform\/EqualsAndHashCode.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -7,10 +7,0 @@\n-\t\/\/ Allows any thread to stop itself using the java.lang.Thread.stop()\n-\t\/\/ method that takes no argument.\n-\t\/\/ Note that this permission is granted by default only to remain\n-\t\/\/ backwards compatible.\n-\t\/\/ It is strongly recommended that you either remove this permission\n-\t\/\/ from this policy file or further restrict it to code sources\n-\t\/\/ that you specify, because Thread.stop() is potentially unsafe.\n-\t\/\/ See \"http:\/\/java.sun.com\/notes\" for more information.\n-\tpermission java.lang.RuntimePermission \"stopThread\";\n-\n","filename":"test\/jdk\/java\/lang\/System\/System.policy","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -24,2 +24,2 @@\n-\/**\n- * @test\n+\/*\n+ * @test id=default\n@@ -31,1 +31,1 @@\n- * @run testng\/othervm\/timeout=300 ThreadAPI\n+ * @run testng ThreadAPI\n@@ -34,2 +34,2 @@\n-\/**\n- * @test\n+\/*\n+ * @test id=no-vmcontinuations\n@@ -40,1 +40,1 @@\n- * @run testng\/othervm\/timeout=300 -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations ThreadAPI\n+ * @run testng\/othervm -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations ThreadAPI\n@@ -55,0 +55,1 @@\n+import java.util.concurrent.ScheduledExecutorService;\n@@ -66,0 +67,3 @@\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n@@ -72,0 +76,26 @@\n+    \/\/ used for scheduling thread interrupt\n+    private ScheduledExecutorService scheduler;\n+\n+    @BeforeClass\n+    public void setUp() throws Exception {\n+        ThreadFactory factory = (task) -> {\n+            Thread thread = new Thread(task);\n+            thread.setDaemon(true);\n+            return thread;\n+        };\n+        scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+    }\n+\n+    @AfterClass\n+    public void tearDown() {\n+        scheduler.shutdown();\n+    }\n+\n+    \/**\n+     * An operation that does not return a result but may throw an exception.\n+     *\/\n+    @FunctionalInterface\n+    interface ThrowingRunnable {\n+        void run() throws Exception;\n+    }\n+\n@@ -84,1 +114,1 @@\n-        Thread.sleep(100); \/\/ give time for virtual thread to park\n+        awaitParked(thread);\n@@ -108,1 +138,1 @@\n-            Thread.sleep(100); \/\/ give time for virtual thread to block\n+            awaitBlocked(thread);\n@@ -138,1 +168,1 @@\n-            Thread.sleep(100); \/\/ give time for virtual thread to block\n+            awaitParked(thread);\n@@ -209,1 +239,1 @@\n-            \/\/ Thread.currentThread() returned the virtual thread\n+            \/\/ Thread.currentThread() returned by the virtual thread\n@@ -344,5 +374,5 @@\n-            thread.join(100);\n-            thread.join(100, 0);\n-            thread.join(100, 100);\n-            thread.join(0, 100);\n-            assertFalse(thread.join(Duration.ofMillis(-100)));\n+            thread.join(20);\n+            thread.join(20, 0);\n+            thread.join(20, 20);\n+            thread.join(0, 20);\n+            assertFalse(thread.join(Duration.ofMillis(-20)));\n@@ -350,1 +380,1 @@\n-            assertFalse(thread.join(Duration.ofMillis(100)));\n+            assertFalse(thread.join(Duration.ofMillis(20)));\n@@ -417,1 +447,1 @@\n-                Thread.sleep(100);\n+                Thread.sleep(50);\n@@ -635,1 +665,1 @@\n-        long nanos = TimeUnit.NANOSECONDS.convert(2, TimeUnit.SECONDS);\n+        long nanos = TimeUnit.NANOSECONDS.convert(100, TimeUnit.MILLISECONDS);\n@@ -661,1 +691,1 @@\n-                fail();\n+                fail(\"join not interrupted\");\n@@ -688,1 +718,1 @@\n-                fail();\n+                fail(\"join not interrupted\");\n@@ -707,2 +737,2 @@\n-                for (int i=0; i<10; i++) {\n-                    LockSupport.parkNanos(Duration.ofMillis(100).toNanos());\n+                for (int i = 0; i < 10; i++) {\n+                    LockSupport.parkNanos(Duration.ofMillis(20).toNanos());\n@@ -727,1 +757,1 @@\n-     * and unparking.\n+     * and unparking while pinned.\n@@ -735,1 +765,1 @@\n-                    LockSupport.parkNanos(Duration.ofMillis(100).toNanos());\n+                    LockSupport.parkNanos(Duration.ofMillis(20).toNanos());\n@@ -740,1 +770,1 @@\n-            assertFalse(thread.join(Duration.ofSeconds(1)));\n+            assertFalse(thread.join(Duration.ofMillis(100)));\n@@ -748,1 +778,1 @@\n-     * and unparking.\n+     * and unparking while pinned.\n@@ -752,1 +782,8 @@\n-        VThreadRunner.run(this::testJoin33);\n+        \/\/ need at least two carrier threads due to pinning\n+        int previousParallelism = VThreadRunner.ensureParallelism(2);\n+        try {\n+            VThreadRunner.run(this::testJoin33);\n+        } finally {\n+            \/\/ restore\n+            VThreadRunner.setParallelism(previousParallelism);\n+        }\n@@ -859,1 +896,1 @@\n-                    fail();\n+                    fail(\"sleep not interrupted\");\n@@ -868,1 +905,1 @@\n-        Thread.sleep(100);  \/\/ give time for thread to block\n+        awaitParked(thread);\n@@ -888,1 +925,1 @@\n-        Thread.sleep(100);  \/\/ give time for thread to block\n+        awaitParked(thread);\n@@ -895,1 +932,1 @@\n-     * Test trying to park, wait or block with interrupt status set.\n+     * Test trying to park with interrupt status set.\n@@ -905,0 +942,1 @@\n+    }\n@@ -906,0 +944,5 @@\n+    \/**\n+     * Test trying to wait with interrupt status set.\n+     *\/\n+    @Test\n+    public void testInterrupt9() throws Exception {\n@@ -912,1 +955,1 @@\n-                    fail();\n+                    fail(\"wait not interrupted\");\n@@ -918,0 +961,1 @@\n+    }\n@@ -919,0 +963,5 @@\n+    \/**\n+     * Test trying to block with interrupt status set.\n+     *\/\n+    @Test\n+    public void testInterrupt10() throws Exception {\n@@ -1188,1 +1237,1 @@\n-     * Test Thread.sleep(2000), thread should sleep.\n+     * Tasks that sleep for 1 second.\n@@ -1190,17 +1239,9 @@\n-    @Test\n-    public void testSleep3() throws Exception {\n-        VThreadRunner.run(() -> {\n-            long start = millisTime();\n-            Thread.sleep(2000);\n-            expectDuration(start, \/*min*\/1900, \/*max*\/4000);\n-        });\n-        VThreadRunner.run(() -> {\n-            long start = millisTime();\n-            Thread.sleep(2000, 0);\n-            expectDuration(start, \/*min*\/1900, \/*max*\/4000);\n-        });\n-        VThreadRunner.run(() -> {\n-            long start = millisTime();\n-            Thread.sleep(Duration.ofMillis(2000));\n-            expectDuration(start, \/*min*\/1900, \/*max*\/4000);\n-        });\n+    @DataProvider(name = \"oneSecondSleepers\")\n+    public Object[][] oneSecondSleepers() {\n+        ThrowingRunnable[] sleepers = {\n+                () -> Thread.sleep(1000),\n+                () -> Thread.sleep(Duration.ofSeconds(1))\n+        };\n+        return Arrays.stream(sleepers)\n+                .map(s -> new Object[] { s })\n+                .toArray(Object[][]::new);\n@@ -1210,1 +1251,1 @@\n-     * Test Thread.sleep with interrupt status set.\n+     * Test Thread.sleep duration.\n@@ -1212,2 +1253,2 @@\n-    @Test\n-    public void testSleep4() throws Exception {\n+    @Test(dataProvider = \"oneSecondSleepers\")\n+    public void testSleep3(ThrowingRunnable sleeper) throws Exception {\n@@ -1215,21 +1256,3 @@\n-            Thread me = Thread.currentThread();\n-            me.interrupt();\n-            try {\n-                Thread.sleep(0);\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ expected\n-                assertFalse(me.isInterrupted());\n-            }\n-        });\n-\n-        VThreadRunner.run(() -> {\n-            Thread me = Thread.currentThread();\n-            me.interrupt();\n-            try {\n-                Thread.sleep(0, 0);\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ expected\n-                assertFalse(me.isInterrupted());\n-            }\n+            long start = millisTime();\n+            sleeper.run();\n+            expectDuration(start, \/*min*\/900, \/*max*\/4000);\n@@ -1237,0 +1260,1 @@\n+    }\n@@ -1238,11 +1262,17 @@\n-        VThreadRunner.run(() -> {\n-            Thread me = Thread.currentThread();\n-            me.interrupt();\n-            try {\n-                Thread.sleep(1000);\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ expected\n-                assertFalse(me.isInterrupted());\n-            }\n-        });\n+    \/**\n+     * Tasks that sleep for zero or longer duration.\n+     *\/\n+    @DataProvider(name = \"sleepers\")\n+    public Object[][] sleepers() {\n+        ThrowingRunnable[] sleepers = {\n+                () -> Thread.sleep(0),\n+                () -> Thread.sleep(0, 0),\n+                () -> Thread.sleep(1000),\n+                () -> Thread.sleep(1000, 0),\n+                () -> Thread.sleep(Duration.ofMillis(0)),\n+                () -> Thread.sleep(Duration.ofMillis(1000)),\n+        };\n+        return Arrays.stream(sleepers)\n+                .map(s -> new Object[] { s })\n+                .toArray(Object[][]::new);\n+    }\n@@ -1250,0 +1280,5 @@\n+    \/**\n+     * Test Thread.sleep with interrupt status set.\n+     *\/\n+    @Test(dataProvider = \"sleepers\")\n+    public void testSleep4(ThrowingRunnable sleeper) throws Exception {\n@@ -1254,2 +1289,2 @@\n-                Thread.sleep(1000, 0);\n-                fail();\n+                sleeper.run();\n+                fail(\"sleep was not interrupted\");\n@@ -1261,0 +1296,1 @@\n+    }\n@@ -1262,0 +1298,5 @@\n+    \/**\n+     * Test Thread.sleep with interrupt status set and a negative duration.\n+     *\/\n+    @Test\n+    public void testSleep4() throws Exception {\n@@ -1268,24 +1309,0 @@\n-\n-        VThreadRunner.run(() -> {\n-            Thread me = Thread.currentThread();\n-            me.interrupt();\n-            try {\n-                Thread.sleep(Duration.ofMillis(0));\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ expected\n-                assertFalse(me.isInterrupted());\n-            }\n-        });\n-\n-        VThreadRunner.run(() -> {\n-            Thread me = Thread.currentThread();\n-            me.interrupt();\n-            try {\n-                Thread.sleep(Duration.ofMillis(1000));\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ expected\n-                assertFalse(me.isInterrupted());\n-            }\n-        });\n@@ -1295,1 +1312,1 @@\n-     * Test interrupting Thread.sleep\n+     * Tasks that sleep for a long time.\n@@ -1297,25 +1314,11 @@\n-    @Test\n-    public void testSleep5() throws Exception {\n-        VThreadRunner.run(() -> {\n-            Thread t = Thread.currentThread();\n-            scheduleInterrupt(t, 2000);\n-            try {\n-                Thread.sleep(20*1000);\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ interrupt status should be cleared\n-                assertFalse(t.isInterrupted());\n-            }\n-        });\n-\n-        VThreadRunner.run(() -> {\n-            Thread t = Thread.currentThread();\n-            scheduleInterrupt(t, 2000);\n-            try {\n-                Thread.sleep(20*1000, 0);\n-                fail();\n-            } catch (InterruptedException e) {\n-                \/\/ interrupt status should be cleared\n-                assertFalse(t.isInterrupted());\n-            }\n-        });\n+    @DataProvider(name = \"longSleepers\")\n+    public Object[][] longSleepers() {\n+        ThrowingRunnable[] sleepers = {\n+                () -> Thread.sleep(20_000),\n+                () -> Thread.sleep(20_000, 0),\n+                () -> Thread.sleep(Duration.ofSeconds(20)),\n+        };\n+        return Arrays.stream(sleepers)\n+                .map(s -> new Object[] { s })\n+                .toArray(Object[][]::new);\n+    }\n@@ -1323,0 +1326,5 @@\n+    \/**\n+     * Test interrupting Thread.sleep.\n+     *\/\n+    @Test(dataProvider = \"longSleepers\")\n+    public void testSleep5(ThrowingRunnable sleeper) throws Exception {\n@@ -1325,1 +1333,1 @@\n-            scheduleInterrupt(t, 2000);\n+            scheduleInterrupt(t, 100);\n@@ -1327,2 +1335,2 @@\n-                Thread.sleep(Duration.ofSeconds(20));\n-                fail();\n+                sleeper.run();\n+                fail(\"sleep was not interrupted\");\n@@ -1337,1 +1345,1 @@\n-     * Test that Thread.sleep should not disrupt parking permit.\n+     * Test that Thread.sleep does not disrupt parking permit.\n@@ -1345,2 +1353,2 @@\n-            Thread.sleep(2000);\n-            expectDuration(start, \/*min*\/1900, \/*max*\/4000);\n+            Thread.sleep(1000);\n+            expectDuration(start, \/*min*\/900, \/*max*\/4000);\n@@ -1360,1 +1368,0 @@\n-            long start = millisTime();\n@@ -1362,6 +1369,4 @@\n-                Thread.sleep(2000);\n-                long elapsed = millisTime() - start;\n-                if (elapsed < 1900) {\n-                    exc.set(new RuntimeException(\"sleep too short\"));\n-                }\n-            } catch (InterruptedException e) {\n+                long start = millisTime();\n+                Thread.sleep(1000);\n+                expectDuration(start, \/*min*\/900, \/*max*\/4000);\n+            } catch (Exception e) {\n@@ -1373,1 +1378,1 @@\n-        for (int i=0; i<5; i++) {\n+        for (int i = 0; i < 5; i++) {\n@@ -1385,1 +1390,1 @@\n-     * Test Thread.sleep when pinned\n+     * Test Thread.sleep when pinned.\n@@ -1392,1 +1397,1 @@\n-                Thread.sleep(2000);\n+                Thread.sleep(1000);\n@@ -1394,1 +1399,1 @@\n-            expectDuration(start, \/*min*\/1900, \/*max*\/4000);\n+            expectDuration(start, \/*min*\/900, \/*max*\/4000);\n@@ -1399,1 +1404,1 @@\n-     * Test Thread.sleep when pinned and with interrupt status set\n+     * Test Thread.sleep when pinned and with interrupt status set.\n@@ -1410,1 +1415,1 @@\n-                fail();\n+                fail(\"sleep not interrupted\");\n@@ -1419,1 +1424,1 @@\n-     * Test interrupting Thread.sleep when pinned\n+     * Test interrupting Thread.sleep when pinned.\n@@ -1425,1 +1430,1 @@\n-            scheduleInterrupt(t, 2000);\n+            scheduleInterrupt(t, 100);\n@@ -1430,1 +1435,1 @@\n-                fail();\n+                fail(\"sleep not interrupted\");\n@@ -1867,2 +1872,1 @@\n-     * Test Thread::getStackTrace on thread that has been started but\n-     * has not run.\n+     * Test Thread::getStackTrace on thread that has been started but has not run.\n@@ -1874,34 +1878,5 @@\n-        List<Thread> threads = new ArrayList<>();\n-        AtomicBoolean done = new AtomicBoolean();\n-        try {\n-            Thread target = null;\n-\n-            \/\/ start virtual threads that are CPU bound until we find a thread\n-            \/\/ that does not run. This is done while holding a monitor to\n-            \/\/ allow this test run in the context of a virtual thread.\n-            synchronized (this) {\n-                while (target == null) {\n-                    CountDownLatch latch = new CountDownLatch(1);\n-                    Thread vthread = Thread.ofVirtual().start(() -> {\n-                        latch.countDown();\n-                        while (!done.get()) { }\n-                    });\n-                    threads.add(vthread);\n-                    if (!latch.await(3, TimeUnit.SECONDS)) {\n-                        \/\/ thread did not run\n-                        target = vthread;\n-                    }\n-                }\n-            }\n-\n-            \/\/ stack trace should be empty\n-            StackTraceElement[] stack = target.getStackTrace();\n-            assertTrue(stack.length == 0);\n-        } finally {\n-            done.set(true);\n-\n-            \/\/ wait for threads to terminate\n-            for (Thread thread : threads) {\n-                thread.join();\n-            }\n-        }\n+        Executor scheduler = task -> { };\n+        Thread.Builder builder = ThreadBuilders.virtualThreadBuilder(scheduler);\n+        Thread thread = builder.start(() -> { });\n+        StackTraceElement[] stack = thread.getStackTrace();\n+        assertTrue(stack.length == 0);\n@@ -2296,0 +2271,24 @@\n+    \/**\n+     * Waits for the given thread to park.\n+     *\/\n+    static void awaitParked(Thread thread) throws InterruptedException {\n+        Thread.State state = thread.getState();\n+        while (state != Thread.State.WAITING && state != Thread.State.TIMED_WAITING) {\n+            assertTrue(state != Thread.State.TERMINATED, \"Thread has terminated\");\n+            Thread.sleep(10);\n+            state = thread.getState();\n+        }\n+    }\n+\n+    \/**\n+     * Waits for the given thread to block waiting on a monitor.\n+     *\/\n+    static void awaitBlocked(Thread thread) throws InterruptedException {\n+        Thread.State state = thread.getState();\n+        while (state != Thread.State.BLOCKED) {\n+            assertTrue(state != Thread.State.TERMINATED, \"Thread has terminated\");\n+            Thread.sleep(10);\n+            state = thread.getState();\n+        }\n+    }\n+\n@@ -2299,10 +2298,2 @@\n-    private static void scheduleInterrupt(Thread thread, long delay) {\n-        Runnable interruptTask = () -> {\n-            try {\n-                Thread.sleep(delay);\n-                thread.interrupt();\n-            } catch (Exception e) {\n-                e.printStackTrace();\n-            }\n-        };\n-        new Thread(interruptTask).start();\n+    private void scheduleInterrupt(Thread thread, long delayInMillis) {\n+        scheduler.schedule(thread::interrupt, delayInMillis, TimeUnit.MILLISECONDS);\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ThreadAPI.java","additions":196,"deletions":205,"binary":false,"changes":401,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,3 +26,0 @@\n- * @requires vm.debug != true\n- * @compile --enable-preview -source ${jdk.version} PinALot.java\n- * @run main\/othervm --enable-preview PinALot\n@@ -30,0 +27,3 @@\n+ * @requires vm.debug != true\n+ * @enablePreview\n+ * @run main PinALot 500000\n@@ -32,1 +32,1 @@\n-\/**\n+\/*\n@@ -35,2 +35,2 @@\n- * @compile --enable-preview -source ${jdk.version} PinALot.java\n- * @run main\/othervm\/timeout=300 --enable-preview PinALot 200000\n+ * @enablePreview\n+ * @run main\/othervm\/timeout=300 PinALot 200000\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/PinALot.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -24,3 +24,11 @@\n-\/**\n- * @test\n- * @summary Stress test virtual threads with SynchronousQueue and LinkedTransferQueue\n+\/*\n+ * @test id=sq\n+ * @summary Stress test virtual threads with a SynchronousQueue\n+ * @requires vm.debug != true\n+ * @enablePreview\n+ * @run main PingPong SQ 500000\n+ *\/\n+\n+\/*\n+ * @test id=ltq\n+ * @summary Stress test virtual threads with a LinkedTransferQueue\n@@ -28,3 +36,2 @@\n- * @compile --enable-preview -source ${jdk.version} PingPong.java\n- * @run main\/othervm --enable-preview PingPong SQ 1000000\n- * @run main\/othervm --enable-preview PingPong LTQ 1000000\n+ * @enablePreview\n+ * @run main PingPong LTQ 500000\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/PingPong.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} Skynet.java\n- * @run main\/othervm\/timeout=300 --enable-preview Skynet\n+ * @enablePreview\n+ * @run main\/othervm\/timeout=300 Skynet\n@@ -32,1 +32,1 @@\n-\/**\n+\/*\n@@ -36,2 +36,2 @@\n- * @compile --enable-preview -source ${jdk.version} Skynet.java\n- * @run main\/othervm\/timeout=300 --enable-preview -XX:+UnlockDiagnosticVMOptions\n+ * @enablePreview\n+ * @run main\/othervm\/timeout=300 -XX:+UnlockDiagnosticVMOptions\n@@ -46,2 +46,0 @@\n-    public static final int ITERATIONS = 10;\n-\n@@ -49,1 +47,2 @@\n-        for (int i = 0; i < ITERATIONS; i++) {\n+        int iterations = (args.length > 0) ? Integer.parseInt(args[0]) : 10;\n+        for (int i = 0; i < iterations; i++) {\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/Skynet.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} SleepALot.java\n- * @run main\/othervm --enable-preview SleepALot\n+ * @enablePreview\n+ * @run main\/othervm SleepALot 500000\n@@ -32,1 +32,1 @@\n-\/**\n+\/*\n@@ -35,2 +35,2 @@\n- * @compile --enable-preview -source ${jdk.version} SleepALot.java\n- * @run main\/othervm\/timeout=300 --enable-preview SleepALot 200000\n+ * @enablePreview\n+ * @run main\/othervm\/timeout=300 SleepALot 200000\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/SleepALot.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} TimedGet.java\n- * @run main\/othervm -Xmx1g --enable-preview TimedGet\n+ * @enablePreview\n+ * @run main\/othervm -Xmx1g TimedGet 100000\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/TimedGet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} YieldALot.java\n- * @run main\/othervm --enable-preview YieldALot\n+ * @enablePreview\n+ * @run main YieldALot 500000\n@@ -32,1 +32,1 @@\n-\/**\n+\/*\n@@ -35,2 +35,2 @@\n- * @compile --enable-preview -source ${jdk.version} YieldALot.java\n- * @run main\/othervm\/timeout=360 --enable-preview YieldALot 200000\n+ * @enablePreview\n+ * @run main YieldALot 200000\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/YieldALot.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=default\n@@ -30,1 +30,2 @@\n- * @modules java.management\n+ * @modules java.base\/java.lang:+open java.management\n+ * @library \/test\/lib\n@@ -37,1 +38,1 @@\n- * @test\n+ * @test id=no-vmcontinuations\n@@ -40,1 +41,2 @@\n- * @modules java.management\n+ * @modules java.base\/java.lang:+open java.management\n+ * @library \/test\/lib\n@@ -51,0 +53,1 @@\n+import jdk.test.lib.thread.VThreadRunner;\n@@ -64,0 +67,2 @@\n+        \/\/ need at least two carrier threads due to pinning\n+        VThreadRunner.ensureParallelism(2);\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreadDeadlocks.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=default\n@@ -34,1 +34,1 @@\n- * @test\n+ * @test id=no-vmcontinuations\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreads.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @bug 8026236 8074460 8078672\n+ * @bug 8026236 8074460 8078672 8294593\n@@ -89,0 +89,4 @@\n+        if (!checkHugeFails()) {\n+            throw new Exception(\"Primality test on huge integer should fail but succeeded\");\n+        }\n+\n@@ -233,0 +237,15 @@\n+\n+    private static boolean checkHugeFails() {\n+        try {\n+            \/\/ huge odd integer\n+            BigInteger a = BigInteger.ONE.shiftLeft(500_000_000 + 1)\n+                    .setBit(0);\n+            a.isProbablePrime(1);\n+            \/\/ not expected to reach here\n+            return false;\n+        } catch (ArithmeticException e) {\n+            \/\/ this is the expected behavior\n+            return true;\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/math\/BigInteger\/PrimeTest.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @bug 8284161\n@@ -31,0 +32,3 @@\n+ * @comment This test runs with -Dsun.net.httpserver.nodelay=true to enable TCP_NODELAY on the\n+ *          sockets \"accept()\"ed by the HttpServer. This is to avoid occasional 40ms delays\n+ *          receiving responses from the server on Linux.\n@@ -33,0 +37,1 @@\n+ *     -Dsun.net.httpserver.nodelay=true\n","filename":"test\/jdk\/java\/net\/vthread\/HttpALot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import static java.nio.file.StandardOpenOption.*;\n+\n+\/**\n+ * Common library for various test file utility functions.\n+ *\/\n+public final class FileChannelUtils {\n+\n+    public static Path createSparseTempFile(String prefix, String suffix) throws IOException {\n+        Path file = Files.createTempFile(prefix, suffix);\n+        Files.delete(file); \/\/ need CREATE_NEW to make the file sparse\n+\n+        FileChannel fc = FileChannel.open(file, CREATE_NEW, SPARSE, WRITE);\n+        fc.close();\n+        return file;\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/FileChannelUtils.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -24,0 +24,2 @@\n+import jdk.test.lib.RandomFactory;\n+\n@@ -27,1 +29,0 @@\n-import java.io.File;\n@@ -32,0 +33,3 @@\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+\n@@ -41,1 +45,4 @@\n- * @run main\/othervm\/timeout=240 LargeMapTest\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.RandomFactory FileChannelUtils\n+ * @run main\/othervm LargeMapTest\n+ * @key randomness\n@@ -44,4 +51,4 @@\n-    private static final String FILE = \"test.dat\";\n-    private static final long LENGTH = 8000000000L;\n-    private static final long OFFSET = 3704800000L;\n-    private static final int  BUFSIZ = 100000;\n+    private static final long LENGTH = (1L << 32) + 512;\n+    private static final int  EXTRA  = 1024;\n+    private static final long BASE   = LENGTH - EXTRA;\n+    private static final Random GEN  = RandomFactory.getRandom();\n@@ -54,1 +61,3 @@\n-        Path p = Path.of(FILE);\n+        System.out.println(\"  Writing large file...\");\n+        long t0 = System.nanoTime();\n+        Path p = FileChannelUtils.createSparseTempFile(\"test\", \".dat\");\n@@ -56,3 +65,10 @@\n-        try (FileChannel fc = FileChannel.open(p, CREATE, WRITE)) {\n-            fc.position(LENGTH - 1);\n-            fc.write(ByteBuffer.wrap(new byte[] {27}));\n+        ByteBuffer bb;\n+        try (FileChannel fc = FileChannel.open(p, WRITE)) {\n+            fc.position(BASE);\n+            byte[] b = new byte[EXTRA];\n+            GEN.nextBytes(b);\n+            bb = ByteBuffer.wrap(b);\n+            fc.write(bb);\n+            long t1 = System.nanoTime();\n+            System.out.printf(\"  Wrote large file in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n@@ -60,0 +76,1 @@\n+        bb.rewind();\n@@ -61,5 +78,1 @@\n-        long offset = OFFSET;\n-        ByteBuffer bb = ByteBuffer.allocateDirect(BUFSIZ);\n-\n-        try (FileChannel fc = FileChannel.open(p, READ, WRITE);) {\n-            MemorySegment mbb = MemorySegment.ofBuffer(bb);\n+        try (FileChannel fc = FileChannel.open(p, READ, WRITE)) {\n@@ -69,8 +82,3 @@\n-\n-            final int interval = BUFSIZ*1000;\n-            while (offset < LENGTH) {\n-                if (offset % interval == 0)\n-                    System.out.println(\"offset: \" + offset);\n-                MemorySegment target = mappedMemorySegment.asSlice(offset, BUFSIZ);\n-                offset = offset + BUFSIZ;\n-                target.copyFrom(mbb);\n+            MemorySegment target = mappedMemorySegment.asSlice(BASE, EXTRA);\n+            if (!target.asByteBuffer().equals(bb)) {\n+                throw new RuntimeException(\"Expected buffers to be equal\");\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java","additions":31,"deletions":23,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -59,0 +60,1 @@\n+        long t0 = System.nanoTime();\n@@ -60,0 +62,4 @@\n+        long t1 = System.nanoTime();\n+        out.printf(\"Test file %s initialized in %d ns (%d ms) %n\",\n+                blah, t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+        t0 = t1;\n@@ -61,1 +67,0 @@\n-            out.println(\"Test file \" + blah + \" initialized\");\n@@ -63,1 +68,4 @@\n-            out.println(\"Zero size: OK\");\n+            t1 = System.nanoTime();\n+            out.printf(\"Zero size: done in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+            t0 = t1;\n@@ -65,1 +73,4 @@\n-            out.println(\"Read: OK\");\n+            t1 = System.nanoTime();\n+            out.printf(\"Read: done in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+            t0 = t1;\n@@ -67,1 +78,4 @@\n-            out.println(\"Write: OK\");\n+            t1 = System.nanoTime();\n+            out.printf(\"Write: done in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+            t0 = t1;\n@@ -69,1 +83,4 @@\n-            out.println(\"High offset: OK\");\n+            t1 = System.nanoTime();\n+            out.printf(\"High offset: done in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+            t0 = t1;\n@@ -71,1 +88,4 @@\n-            out.println(\"Force: OK\");\n+            t1 = System.nanoTime();\n+            out.printf(\"Force: done in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+            t0 = t1;\n@@ -73,1 +93,3 @@\n-            out.println(\"Exceptions: OK\");\n+            t1 = System.nanoTime();\n+            out.printf(\"Exceptions: done in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n@@ -198,15 +220,11 @@\n-        for (int x=0; x<50; x++) {\n-            try (RandomAccessFile raf = new RandomAccessFile(blah, \"rw\")) {\n-                FileChannel fc = raf.getChannel();\n-                final int BLOCK_SIZE = 64;\n-                final int BLOCK_COUNT = (4096 * 2)\/ BLOCK_SIZE;\n-                int offset = 0;\n-                MappedByteBuffer b = fc.map(MapMode.READ_WRITE,\n-                                            0, BLOCK_SIZE * (BLOCK_COUNT + 1));\n-\n-                for (int blocks = 0; blocks < BLOCK_COUNT; blocks++) {\n-                    for (int i = 0; i < BLOCK_SIZE; i++) {\n-                        b.put(offset + i, (byte)('0' + i));\n-                    }\n-                    b.force(offset, BLOCK_SIZE);\n-                    offset += BLOCK_SIZE;\n+        try (RandomAccessFile raf = new RandomAccessFile(blah, \"rw\")) {\n+            FileChannel fc = raf.getChannel();\n+            final int BLOCK_SIZE = 64;\n+            final int BLOCK_COUNT = (4096 * 2)\/ BLOCK_SIZE;\n+            int offset = 0;\n+            MappedByteBuffer b = fc.map(MapMode.READ_WRITE,\n+                                        0, BLOCK_SIZE * (BLOCK_COUNT + 1));\n+\n+            for (int blocks = 0; blocks < BLOCK_COUNT; blocks++) {\n+                for (int i = 0; i < BLOCK_SIZE; i++) {\n+                    b.put(offset + i, (byte)('0' + i));\n@@ -214,0 +232,3 @@\n+                b.force(offset, BLOCK_SIZE);\n+                offset += BLOCK_SIZE;\n+            }\n@@ -215,10 +236,10 @@\n-                Exception exc = null;\n-                try {\n-                    \/\/ start and end are out of range\n-                    b.force(offset + BLOCK_SIZE, BLOCK_SIZE);\n-                } catch (IndexOutOfBoundsException e) {\n-                    exc = e;\n-                }\n-                if (exc == null) {\n-                    throw new RuntimeException(\"expected Exception for force beyond buffer extent\");\n-                }\n+            Exception exc = null;\n+            try {\n+                \/\/ start and end are out of range\n+                b.force(offset + BLOCK_SIZE, BLOCK_SIZE);\n+            } catch (IndexOutOfBoundsException e) {\n+                exc = e;\n+            }\n+            if (exc == null) {\n+                throw new RuntimeException(\"expected Exception for force beyond buffer extent\");\n+            }\n@@ -226,10 +247,9 @@\n-                exc = null;\n-                try {\n-                    \/\/ start is in range but end is out of range\n-                    b.force(offset, 2 * BLOCK_SIZE);\n-                } catch (IndexOutOfBoundsException e) {\n-                    exc = e;\n-                }\n-                if (exc == null) {\n-                    throw new RuntimeException(\"expected Exception for force beyond write limit\");\n-                }\n+            exc = null;\n+            try {\n+                \/\/ start is in range but end is out of range\n+                b.force(offset, 2 * BLOCK_SIZE);\n+            } catch (IndexOutOfBoundsException e) {\n+                exc = e;\n+            }\n+            if (exc == null) {\n+                throw new RuntimeException(\"expected Exception for force beyond write limit\");\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/MapTest.java","additions":63,"deletions":43,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @build jdk.test.lib.Platform\n+ * @build jdk.test.lib.Platform jdk.test.lib.RandomFactory FileChannelUtils\n@@ -31,0 +31,1 @@\n+ * @key randomness\n@@ -33,3 +34,2 @@\n-import java.io.File;\n-import java.io.DataOutputStream;\n-import java.io.FileOutputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.FilterOutputStream;\n@@ -37,1 +37,1 @@\n-import java.io.RandomAccessFile;\n+import java.io.OutputStream;\n@@ -44,1 +44,0 @@\n-import java.nio.file.StandardOpenOption;\n@@ -47,0 +46,2 @@\n+import java.util.concurrent.TimeUnit;\n+\n@@ -48,0 +49,3 @@\n+import jdk.test.lib.RandomFactory;\n+\n+import static java.nio.file.StandardOpenOption.*;\n@@ -53,0 +57,1 @@\n+    private static final Random GEN  = RandomFactory.getRandom();\n@@ -55,1 +60,1 @@\n-        Path src = Files.createTempFile(\"src\", \".dat\");\n+        Path src = FileChannelUtils.createSparseTempFile(\"src\", \".dat\");\n@@ -57,0 +62,1 @@\n+        long t0 = System.nanoTime();\n@@ -58,0 +64,4 @@\n+        long t1 = System.nanoTime();\n+        System.out.printf(\"  Wrote large file in %d ns (%d ms) %n\",\n+                t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+        t0 = t1;\n@@ -59,0 +69,4 @@\n+        t1 = System.nanoTime();\n+        System.out.printf(\"  Copied to file channel in %d ns (%d ms) %n\",\n+                t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+        t0 = t1;\n@@ -60,0 +74,3 @@\n+        t1 = System.nanoTime();\n+        System.out.printf(\"  Copied to byte channel in %d ns (%d ms) %n\",\n+                t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n@@ -65,8 +82,7 @@\n-        RandomAccessFile raf = new RandomAccessFile(src.toString(), \"rw\");\n-        raf.setLength(LENGTH);\n-        raf.seek(BASE);\n-        Random r = new Random(System.nanoTime());\n-        byte[] b = new byte[EXTRA];\n-        r.nextBytes(b);\n-        raf.write(b);\n-        return b;\n+        try (FileChannel fc = FileChannel.open(src, WRITE)) {\n+            fc.position(BASE);\n+            byte[] b = new byte[EXTRA];\n+            GEN.nextBytes(b);\n+            fc.write(ByteBuffer.wrap(b));\n+            return b;\n+        }\n@@ -82,2 +98,1 @@\n-            try (FileChannel dstCh = FileChannel.open(dst,\n-                 StandardOpenOption.READ, StandardOpenOption.WRITE)) {\n+            try (FileChannel dstCh = FileChannel.open(dst, READ, WRITE)) {\n@@ -118,22 +133,52 @@\n-        File file = File.createTempFile(\"dst\", \".dat\");\n-        file.deleteOnExit();\n-        try (FileChannel srcCh = FileChannel.open(src)) {\n-            \/\/ The FileOutputStream is wrapped so that newChannel() does not\n-            \/\/ return a FileChannelImpl and so make a faster path be taken.\n-            try (DataOutputStream stream =\n-                new DataOutputStream(new FileOutputStream(file))) {\n-                try (WritableByteChannel wbc = Channels.newChannel(stream)) {\n-                    long n;\n-                    if ((n = srcCh.transferTo(0, LENGTH, wbc)) < LENGTH)\n-                        throw new RuntimeException(\"Too few bytes transferred: \" +\n-                            n + \" < \" + LENGTH);\n-\n-                    System.out.println(\"Transferred \" + n + \" bytes\");\n-\n-                    RandomAccessFile raf = new RandomAccessFile(file, \"r\");\n-                    raf.seek(BASE);\n-                    byte[] b = new byte[EXTRA];\n-                    raf.read(b);\n-                    if (!Arrays.equals(b, expected))\n-                        throw new RuntimeException(\"Unexpected values\");\n-                }\n+        \/\/ transfer src to channel that is not FileChannelImpl\n+        try (FileChannel srcCh = FileChannel.open(src);\n+             ByteArrayOutputStream baos = new ByteArrayOutputStream(EXTRA);\n+             OutputStream os = new SkipBytesStream(baos, BASE);\n+             WritableByteChannel wbc = Channels.newChannel(os)){\n+\n+            long n;\n+            if ((n = srcCh.transferTo(0, LENGTH, wbc)) < LENGTH)\n+                throw new RuntimeException(\"Too few bytes transferred: \" +\n+                        n + \" < \" + LENGTH);\n+\n+            System.out.println(\"Transferred \" + n + \" bytes\");\n+\n+            byte[] b = baos.toByteArray();\n+            if (!Arrays.equals(b, expected))\n+                throw new RuntimeException(\"Unexpected values\");\n+        }\n+    }\n+\n+    \/**\n+     * Stream that discards the first bytesToSkip bytes, then passes through\n+     *\/\n+    static class SkipBytesStream extends FilterOutputStream {\n+\n+        private long bytesToSkip;\n+\n+        public SkipBytesStream(OutputStream out, long bytesToSkip) {\n+            super(out);\n+            this.bytesToSkip = bytesToSkip;\n+        }\n+\n+        @Override\n+        public void write(int b) throws IOException {\n+            if (bytesToSkip > 0) {\n+                bytesToSkip--;\n+            } else {\n+                super.write(b);\n+            }\n+        }\n+\n+        @Override\n+        public void write(byte[] b, int off, int len) throws IOException {\n+            \/\/ check copied from FilterOutputStream\n+            if ((off | len | (b.length - (len + off)) | (off + len)) < 0)\n+                throw new IndexOutOfBoundsException();\n+\n+            if (bytesToSkip >= len) {\n+                bytesToSkip -= len;\n+            } else {\n+                int skip = (int)bytesToSkip;\n+                bytesToSkip = 0;\n+                super.write(b, off + skip, len - skip);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/Transfer2GPlus.java","additions":85,"deletions":40,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @build FileChannelUtils\n@@ -31,3 +32,0 @@\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n@@ -35,1 +33,0 @@\n-import java.io.OutputStreamWriter;\n@@ -37,1 +34,0 @@\n-import java.io.RandomAccessFile;\n@@ -40,2 +36,3 @@\n-import java.nio.file.StandardOpenOption;\n-import java.nio.file.FileAlreadyExistsException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -46,0 +43,2 @@\n+import static java.nio.file.StandardOpenOption.*;\n+\n@@ -54,2 +53,2 @@\n-        File source = File.createTempFile(\"blah\", null);\n-        source.deleteOnExit();\n+        Path source = FileChannelUtils.createSparseTempFile(\"blah\", null);\n+        source.toFile().deleteOnExit();\n@@ -57,3 +56,1 @@\n-        initTestFile(source, 10);\n-        RandomAccessFile raf = new RandomAccessFile(source, \"rw\");\n-        FileChannel fc = raf.getChannel();\n+\n@@ -62,10 +59,6 @@\n-        fc.write(ByteBuffer.wrap(\"Use the source!\".getBytes()), testSize - 40);\n-        long t1 = System.nanoTime();\n-        out.printf(\"  Wrote large file in %d ns (%d ms) %n\",\n-            t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n-\n-        fc.close();\n-        raf.close();\n-\n-        File sink = File.createTempFile(\"sink\", null);\n-        sink.deleteOnExit();\n+        try (FileChannel fc = FileChannel.open(source, READ, WRITE)) {\n+            fc.write(ByteBuffer.wrap(\"Use the source!\".getBytes()), testSize - 40);\n+            long t1 = System.nanoTime();\n+            out.printf(\"  Wrote large file in %d ns (%d ms) %n\",\n+                    t1 - t0, TimeUnit.NANOSECONDS.toMillis(t1 - t0));\n+        }\n@@ -73,2 +66,2 @@\n-        FileInputStream fis = new FileInputStream(source);\n-        FileChannel sourceChannel = fis.getChannel();\n+        Path sink = Files.createTempFile(\"sink\", null);\n+        sink.toFile().deleteOnExit();\n@@ -76,2 +69,2 @@\n-        raf = new RandomAccessFile(sink, \"rw\");\n-        FileChannel sinkChannel = raf.getChannel();\n+        try (FileChannel sourceChannel = FileChannel.open(source, READ);\n+             FileChannel sinkChannel = FileChannel.open(sink, WRITE)) {\n@@ -79,5 +72,6 @@\n-        long bytesWritten = sourceChannel.transferTo(testSize -40, 10,\n-                                                     sinkChannel);\n-        if (bytesWritten != 10) {\n-            throw new RuntimeException(\"Transfer test 4 failed \" +\n-                                       bytesWritten);\n+            long bytesWritten = sourceChannel.transferTo(testSize - 40, 10,\n+                    sinkChannel);\n+            if (bytesWritten != 10) {\n+                throw new RuntimeException(\"Transfer test 4 failed \" +\n+                        bytesWritten);\n+            }\n@@ -85,2 +79,0 @@\n-        sourceChannel.close();\n-        sinkChannel.close();\n@@ -88,2 +80,2 @@\n-        source.delete();\n-        sink.delete();\n+        Files.delete(source);\n+        Files.delete(sink);\n@@ -96,2 +88,2 @@\n-        File source = File.createTempFile(\"blech\", null);\n-        source.deleteOnExit();\n+        Path source = Files.createTempFile(\"blech\", null);\n+        source.toFile().deleteOnExit();\n@@ -101,17 +93,2 @@\n-        File sink = null;\n-        FileChannel fc = null;\n-        while (fc == null) {\n-            sink = File.createTempFile(\"sink\", null);\n-            \/\/ re-create as a sparse file\n-            sink.delete();\n-            try {\n-                fc = FileChannel.open(sink.toPath(),\n-                                      StandardOpenOption.CREATE_NEW,\n-                                      StandardOpenOption.WRITE,\n-                                      StandardOpenOption.SPARSE);\n-            } catch (FileAlreadyExistsException ignore) {\n-                \/\/ someone else got it\n-            }\n-        }\n-        sink.deleteOnExit();\n-\n+        Path sink = FileChannelUtils.createSparseTempFile(\"sink\", null);\n+        sink.toFile().deleteOnExit();\n@@ -119,1 +96,1 @@\n-        try {\n+        try (FileChannel fc = FileChannel.open(sink, WRITE)){\n@@ -131,2 +108,0 @@\n-        } finally {\n-            fc.close();\n@@ -136,12 +111,7 @@\n-        FileChannel sourceChannel = new FileInputStream(source).getChannel();\n-        try {\n-            FileChannel sinkChannel = new RandomAccessFile(sink, \"rw\").getChannel();\n-            try {\n-                long bytesWritten = sinkChannel.transferFrom(sourceChannel,\n-                                                             testSize - 40, 10);\n-                if (bytesWritten != 10) {\n-                    throw new RuntimeException(\"Transfer test 5 failed \" +\n-                                               bytesWritten);\n-                }\n-            } finally {\n-                sinkChannel.close();\n+        try (FileChannel sourceChannel = FileChannel.open(source, READ);\n+             FileChannel sinkChannel = FileChannel.open(sink, WRITE)) {\n+            long bytesWritten = sinkChannel.transferFrom(sourceChannel,\n+                    testSize - 40, 10);\n+            if (bytesWritten != 10) {\n+                throw new RuntimeException(\"Transfer test 5 failed \" +\n+                        bytesWritten);\n@@ -149,2 +119,0 @@\n-        } finally {\n-            sourceChannel.close();\n@@ -153,2 +121,2 @@\n-        source.delete();\n-        sink.delete();\n+        Files.delete(source);\n+        Files.delete(sink);\n@@ -160,9 +128,7 @@\n-    private static void initTestFile(File blah, long size) throws Exception {\n-        if (blah.exists())\n-            blah.delete();\n-        FileOutputStream fos = new FileOutputStream(blah);\n-        BufferedWriter awriter\n-            = new BufferedWriter(new OutputStreamWriter(fos, \"8859_1\"));\n-\n-        for(int i=0; i<size; i++) {\n-            awriter.write(\"e\");\n+    private static void initTestFile(Path blah, long size) throws Exception {\n+        try (BufferedWriter awriter = Files.newBufferedWriter(blah,\n+                StandardCharsets.ISO_8859_1)) {\n+\n+            for (int i = 0; i < size; i++) {\n+                awriter.write(\"e\");\n+            }\n@@ -170,2 +136,0 @@\n-        awriter.flush();\n-        awriter.close();\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/Transfer4GBFile.java","additions":49,"deletions":85,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @build FileChannelUtils\n@@ -30,1 +31,0 @@\n-import java.io.File;\n@@ -33,1 +33,0 @@\n-import java.io.RandomAccessFile;\n@@ -40,0 +39,2 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -44,0 +45,2 @@\n+import static java.nio.file.StandardOpenOption.*;\n+\n@@ -55,6 +58,2 @@\n-\n-        File file = File.createTempFile(\"source\", null);\n-        file.deleteOnExit();\n-\n-        RandomAccessFile raf = new RandomAccessFile(file, \"rw\");\n-        FileChannel fc = raf.getChannel();\n+        Path file = FileChannelUtils.createSparseTempFile(\"source\", null);\n+        file.toFile().deleteOnExit();\n@@ -64,1 +63,1 @@\n-        try {\n+        try (FileChannel fc = FileChannel.open(file, READ, WRITE)) {\n@@ -69,5 +68,0 @@\n-        } catch (IOException x) {\n-            err.println(\"  Unable to create test file:\" + x);\n-            fc.close();\n-            return;\n-        }\n@@ -75,64 +69,36 @@\n-        \/\/ Setup looback connection and echo server\n-\n-        ServerSocketChannel ssc = ServerSocketChannel.open();\n-        ssc.socket().bind(new InetSocketAddress(0));\n-\n-        InetAddress lh = InetAddress.getLocalHost();\n-        InetSocketAddress isa = new InetSocketAddress(lh, ssc.socket().getLocalPort());\n-        SocketChannel source = SocketChannel.open(isa);\n-        SocketChannel sink = ssc.accept();\n-\n-        Thread thr = new Thread(new EchoServer(sink));\n-        thr.start();\n-\n-        \/\/ Test data is array of positions and counts\n-\n-        long testdata[][] = {\n-            { 2*G-1,    1 },\n-            { 2*G-1,    10 },       \/\/ across 2GB boundary\n-            { 2*G,      1 },\n-            { 2*G,      10 },\n-            { 2*G+1,    1 },\n-            { 4*G-1,    1 },\n-            { 4*G-1,    10 },       \/\/ across 4GB boundary\n-            { 4*G,      1 },\n-            { 4*G,      10 },\n-            { 4*G+1,    1 },\n-            { 5*G-1,    1 },\n-            { 5*G-1,    10 },\n-            { 5*G,      1 },\n-            { 5*G,      10 },\n-            { 5*G+1,    1 },\n-            { 6*G,      1 },\n-        };\n-\n-        ByteBuffer sendbuf = ByteBuffer.allocateDirect(100);\n-        ByteBuffer readbuf = ByteBuffer.allocateDirect(100);\n-\n-        try {\n-            byte value = 0;\n-            for (int i=0; i<testdata.length; i++) {\n-                long position = testdata[(int)i][0];\n-                long count = testdata[(int)i][1];\n-\n-                \/\/ generate bytes\n-                for (long j=0; j<count; j++) {\n-                    sendbuf.put(++value);\n-                }\n-                sendbuf.flip();\n-\n-                \/\/ write to file and transfer to echo server\n-                fc.write(sendbuf, position);\n-                t0 = System.nanoTime();\n-                fc.transferTo(position, count, source);\n-                out.printf(\"  transferTo(%d, %2d, source): %d ns%n\",\n-                    position, count, System.nanoTime() - t0);\n-\n-                \/\/ read from echo server\n-                long nread = 0;\n-                while (nread < count) {\n-                    int n = source.read(readbuf);\n-                    if (n < 0)\n-                        throw new RuntimeException(\"Premature EOF!\");\n-                    nread += n;\n-                }\n+            \/\/ Setup loopback connection and echo server\n+\n+            ServerSocketChannel ssc = ServerSocketChannel.open();\n+            ssc.socket().bind(new InetSocketAddress(0));\n+\n+            InetAddress lh = InetAddress.getLocalHost();\n+            InetSocketAddress isa = new InetSocketAddress(lh, ssc.socket().getLocalPort());\n+            SocketChannel source = SocketChannel.open(isa);\n+            SocketChannel sink = ssc.accept();\n+\n+            Thread thr = new Thread(new EchoServer(sink));\n+            thr.start();\n+\n+            \/\/ Test data is array of positions and counts\n+\n+            long testdata[][] = {\n+                { 2*G-1,    1 },\n+                { 2*G-1,    10 },       \/\/ across 2GB boundary\n+                { 2*G,      1 },\n+                { 2*G,      10 },\n+                { 2*G+1,    1 },\n+                { 4*G-1,    1 },\n+                { 4*G-1,    10 },       \/\/ across 4GB boundary\n+                { 4*G,      1 },\n+                { 4*G,      10 },\n+                { 4*G+1,    1 },\n+                { 5*G-1,    1 },\n+                { 5*G-1,    10 },\n+                { 5*G,      1 },\n+                { 5*G,      10 },\n+                { 5*G+1,    1 },\n+                { 6*G,      1 },\n+            };\n+\n+            ByteBuffer sendbuf = ByteBuffer.allocateDirect(100);\n+            ByteBuffer readbuf = ByteBuffer.allocateDirect(100);\n@@ -140,7 +106,39 @@\n-                \/\/ check reply from echo server\n-                readbuf.flip();\n-                sendbuf.flip();\n-                if (!readbuf.equals(sendbuf))\n-                    throw new RuntimeException(\"Echoed bytes do not match!\");\n-                readbuf.clear();\n-                sendbuf.clear();\n+            try {\n+                byte value = 0;\n+                for (int i=0; i<testdata.length; i++) {\n+                    long position = testdata[(int)i][0];\n+                    long count = testdata[(int)i][1];\n+\n+                    \/\/ generate bytes\n+                    for (long j=0; j<count; j++) {\n+                        sendbuf.put(++value);\n+                    }\n+                    sendbuf.flip();\n+\n+                    \/\/ write to file and transfer to echo server\n+                    fc.write(sendbuf, position);\n+                    t0 = System.nanoTime();\n+                    fc.transferTo(position, count, source);\n+                    out.printf(\"  transferTo(%d, %2d, source): %d ns%n\",\n+                        position, count, System.nanoTime() - t0);\n+\n+                    \/\/ read from echo server\n+                    long nread = 0;\n+                    while (nread < count) {\n+                        int n = source.read(readbuf);\n+                        if (n < 0)\n+                            throw new RuntimeException(\"Premature EOF!\");\n+                        nread += n;\n+                    }\n+\n+                    \/\/ check reply from echo server\n+                    readbuf.flip();\n+                    sendbuf.flip();\n+                    if (!readbuf.equals(sendbuf))\n+                        throw new RuntimeException(\"Echoed bytes do not match!\");\n+                    readbuf.clear();\n+                    sendbuf.clear();\n+                }\n+            } finally {\n+                source.close();\n+                ssc.close();\n@@ -148,5 +146,0 @@\n-        } finally {\n-            source.close();\n-            ssc.close();\n-            fc.close();\n-            file.delete();\n@@ -154,0 +147,1 @@\n+        Files.delete(file);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/TransferTo6GBFile.java","additions":85,"deletions":91,"binary":false,"changes":176,"status":"modified"},{"patch":"@@ -12,10 +12,0 @@\n-\t\/\/ Allows any thread to stop itself using the java.lang.Thread.stop()\n-\t\/\/ method that takes no argument.\n-\t\/\/ Note that this permission is granted by default only to remain\n-\t\/\/ backwards compatible.\n-\t\/\/ It is strongly recommended that you either remove this permission\n-\t\/\/ from this policy file or further restrict it to code sources\n-\t\/\/ that you specify, because Thread.stop() is potentially unsafe.\n-\t\/\/ See \"http:\/\/java.sun.com\/notes\" for more information.\n-\tpermission java.lang.RuntimePermission \"stopThread\";\n-\n","filename":"test\/jdk\/java\/nio\/charset\/spi\/default-pol","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,0 @@\n-        perms.add(new java.lang.RuntimePermission(\"stopThread\"));\n","filename":"test\/jdk\/java\/security\/Policy\/Dynamic\/DynamicPolicy.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,2 +3,2 @@\n-# Amendments up until ISO 4217 AMENDMENT NUMBER 172\n-#   (As of 27 June 2022)\n+# Amendments up until ISO 4217 AMENDMENT NUMBER 173\n+#   (As of 23 September 2022)\n@@ -9,1 +9,1 @@\n-DATAVERSION=172\n+DATAVERSION=173\n","filename":"test\/jdk\/java\/util\/Currency\/tablea1.txt","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @bug 8282144\n+ * @bug 8282144 8294509\n@@ -39,0 +39,5 @@\n+        testLongs();\n+        testInts();\n+    }\n+\n+    private static void testLongs() {\n@@ -59,0 +64,21 @@\n+    private static void testInts() {\n+        RandomGenerator rng = RandomGeneratorFactory.of(\"L64X128MixRandom\").create(42);\n+\n+        for (int i = 1; i < 8; i++) {\n+            byte[] seed = new byte[i];\n+\n+            for (int j = 0; j < 10; j++) {\n+                rng.nextBytes(seed);\n+\n+                int[] existing = RandomSupport.convertSeedBytesToInts(seed, 1, 1);\n+                int[] testing = convertSeedBytesToIntsFixed(seed, 1, 1);\n+\n+                for (int k = 0; k < existing.length; k++) {\n+                    if (existing[k] != testing[k]) {\n+                        throw new RuntimeException(\"convertSeedBytesToInts incorrect\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n@@ -71,0 +97,13 @@\n+\n+    public static int[] convertSeedBytesToIntsFixed(byte[] seed, int n, int z) {\n+        final int[] result = new int[n];\n+        final int m = Math.min(seed.length, n << 2);\n+\n+        \/\/ Distribute seed bytes into the words to be formed.\n+        for (int j = 0; j < m; j++) {\n+            result[j >> 2] = (result[j >> 2] << 8) | (seed[j] & 0xff);\n+        }\n+\n+        return result;\n+    }\n+\n","filename":"test\/jdk\/java\/util\/Random\/T8282144.java","additions":40,"deletions":1,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-tzdata2022c\n+tzdata2022d\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/VERSION","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,0 +186,2 @@\n+Link\tEurope\/Kyiv\t\tEurope\/Uzhgorod\n+Link\tEurope\/Kyiv\t\tEurope\/Zaporozhye\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/aliases.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,1 +166,0 @@\n-Europe\/Uzhgorod EET EEST\n@@ -170,1 +169,0 @@\n-Europe\/Zaporozhye EET EEST\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/displaynames.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} CloseTest.java\n- * @run testng\/othervm --enable-preview CloseTest\n+ * @enablePreview\n+ * @run testng CloseTest\n@@ -84,1 +84,1 @@\n-            Thread.sleep(Duration.ofSeconds(1));\n+            Thread.sleep(Duration.ofMillis(100));\n@@ -91,1 +91,1 @@\n-        assertEquals(future.get(), \"foo\");\n+        assertEquals(future.resultNow(), \"foo\");\n@@ -102,1 +102,1 @@\n-            Thread.sleep(Duration.ofSeconds(1));\n+            Thread.sleep(Duration.ofMillis(100));\n@@ -113,1 +113,1 @@\n-        assertEquals(future.get(), \"foo\");\n+        assertEquals(future.resultNow(), \"foo\");\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorService\/CloseTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=platform\n@@ -27,2 +27,8 @@\n- * @compile --enable-preview -source ${jdk.version} ThreadPerTaskExecutorTest.java\n- * @run testng\/othervm\/timeout=300 --enable-preview ThreadPerTaskExecutorTest\n+ * @enablePreview\n+ * @run testng\/othervm -DthreadFactory=platform ThreadPerTaskExecutorTest\n+ *\/\n+\n+\/*\n+ * @test id=virtual\n+ * @enablePreview\n+ * @run testng\/othervm -DthreadFactory=virtual ThreadPerTaskExecutorTest\n@@ -32,0 +38,1 @@\n+import java.util.Arrays;\n@@ -57,0 +64,1 @@\n+    private Object[][] threadFactories;\n@@ -65,1 +73,13 @@\n-        scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+        this.scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+\n+        \/\/ thread factories\n+        String value = System.getProperty(\"threadFactory\");\n+        List<ThreadFactory> list = new ArrayList<>();\n+        if (value == null || value.equals(\"platform\"))\n+            list.add(Thread.ofPlatform().factory());\n+        if (value == null || value.equals(\"virtual\"))\n+            list.add(Thread.ofVirtual().factory());\n+        assertTrue(list.size() > 0, \"No thread factories for tests\");\n+        this.threadFactories = list.stream()\n+                .map(f -> new Object[] { f })\n+                .toArray(Object[][]::new);\n@@ -75,4 +95,1 @@\n-        return new Object[][] {\n-            { Executors.defaultThreadFactory(), },\n-            { Thread.ofVirtual().factory(), },\n-        };\n+        return threadFactories;\n@@ -83,6 +100,4 @@\n-        var defaultThreadFactory = Executors.defaultThreadFactory();\n-        var virtualThreadFactory = Thread.ofVirtual().factory();\n-        return new Object[][] {\n-            { Executors.newThreadPerTaskExecutor(defaultThreadFactory), },\n-            { Executors.newThreadPerTaskExecutor(virtualThreadFactory), },\n-        };\n+        return Arrays.stream(threadFactories)\n+                .map(f -> Executors.newThreadPerTaskExecutor((ThreadFactory) f[0]))\n+                .map(e -> new Object[] { e })\n+                .toArray(Object[][]::new);\n@@ -219,1 +234,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -404,1 +419,1 @@\n-                fail();\n+                fail(\"invokeAny did not throw\");\n@@ -422,1 +437,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -427,1 +442,1 @@\n-                fail();\n+                fail(\"invokeAny did not throw\");\n@@ -451,1 +466,1 @@\n-     * completion of the last task is delayed.\n+     * completion of the first task to complete normally is delayed.\n@@ -458,1 +473,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -561,1 +576,1 @@\n-                fail();\n+                fail(\"invokeAny did not throw\");\n@@ -587,1 +602,1 @@\n-                fail();\n+                fail(\"invokeAny did not throw\");\n@@ -660,1 +675,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -687,1 +702,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -714,1 +729,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -784,1 +799,1 @@\n-                fail();\n+                fail(\"invokeAll did not throw\");\n@@ -808,1 +823,1 @@\n-                fail();\n+                fail(\"invokeAll did not throw\");\n@@ -818,1 +833,1 @@\n-     * Test interrupt with thread blocked in invokeAll\n+     * Test interrupt with thread blocked in invokeAll.\n@@ -828,1 +843,1 @@\n-                fail();\n+                fail(\"invokeAll did not throw\");\n@@ -844,1 +859,1 @@\n-     * Test interrupt with thread blocked in timed-invokeAll\n+     * Test interrupt with thread blocked in timed-invokeAll.\n@@ -854,1 +869,1 @@\n-                fail();\n+                fail(\"invokeAll did not throw\");\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPerTaskExecutor\/ThreadPerTaskExecutorTest.java","additions":46,"deletions":31,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8278086\n+ * @summary Tests that writing invalid bits per pixel image in BMP\n+            throws IOException\n+ *\/\n+\n+import java.awt.image.BufferedImage;\n+import java.awt.image.IndexColorModel;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+\n+public class BMPBitsPerPixelTest {\n+\n+    public static void main(String[] args) {\n+        test(1, false);\n+        test(2, true);\n+        test(3, true);\n+        test(4, false);\n+        test(5, true);\n+        test(6, true);\n+        test(7, true);\n+        test(8, false);\n+    }\n+\n+    public static void test(int bpp, boolean shouldThrowException) {\n+        int palettes = (int)Math.pow(2, bpp);\n+        byte[] r = new byte[palettes];\n+        byte[] g = new byte[palettes];\n+        byte[] b = new byte[palettes];\n+        boolean exceptionThrown = false;\n+        try {\n+            IndexColorModel cm = new IndexColorModel(bpp, palettes, r, g, b);\n+            int imageType = BufferedImage.TYPE_BYTE_BINARY;\n+            if (bpp > 4) {\n+                imageType = BufferedImage.TYPE_BYTE_INDEXED;\n+            }\n+            BufferedImage img = new\n+                BufferedImage(10, 10, imageType, (IndexColorModel)cm);\n+            File file = File.createTempFile(\"test\", \".bmp\", new File(\".\"));\n+            file.deleteOnExit();\n+            ImageIO.write(img, \"BMP\", file);\n+        } catch (IOException e) {\n+            exceptionThrown = true;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            throw new RuntimeException(\"Unexpected exception: \" + e);\n+        }\n+\n+        if (shouldThrowException && !exceptionThrown) {\n+            throw new RuntimeException(\"IOException was not caught.\");\n+        } else if (!shouldThrowException && exceptionThrown) {\n+            throw new RuntimeException(\"IOException should not be thrown.\");\n+        } else {\n+            System.out.println(\"Test PASSED.\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/bmp\/BMPBitsPerPixelTest.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -9,10 +9,0 @@\n-\t\/\/ Allows any thread to stop itself using the java.lang.Thread.stop()\n-\t\/\/ method that takes no argument.\n-\t\/\/ Note that this permission is granted by default only to remain\n-\t\/\/ backwards compatible.\n-\t\/\/ It is strongly recommended that you either remove this permission\n-\t\/\/ from this policy file or further restrict it to code sources\n-\t\/\/ that you specify, because Thread.stop() is potentially unsafe.\n-\t\/\/ See \"http:\/\/java.sun.com\/notes\" for more information.\n-\tpermission java.lang.RuntimePermission \"stopThread\";\n-\n","filename":"test\/jdk\/javax\/management\/security\/java.policy.authorization","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,143 @@\n+\/*\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4314194 8075916\n+ * @summary  Verifies disabled color for JCheckbox and JRadiobutton is honored in all L&F\n+ * @run main bug4314194\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JCheckBox;\n+import javax.swing.JRadioButton;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class bug4314194 {\n+    private static JFrame frame;\n+    private static JRadioButton radioButton;\n+    private static JCheckBox checkBox;\n+    private static Point point;\n+    private static Rectangle rect;\n+    private static Robot robot;\n+    private static final Color radioButtonColor = Color.RED;\n+    private static final Color checkboxColor = Color.GREEN;\n+    private static final int tolerance = 20;\n+\n+    private static boolean checkComponent(Component comp, Color c) throws Exception {\n+        int correctColoredPixels = 0;\n+        int totalPixels = 0;\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            point = comp.getLocationOnScreen();\n+            rect = comp.getBounds();\n+        });\n+\n+        int y = point.y + rect.height \/ 2;\n+        for (int x = point.x; x < point.x + rect.width; x++) {\n+            Color color = robot.getPixelColor(x, y);\n+            robot.waitForIdle();\n+\n+            if (color.equals(c)) {\n+                correctColoredPixels++;\n+            }\n+            totalPixels++;\n+        }\n+\n+        return ((double)correctColoredPixels\/totalPixels*100) >= tolerance;\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void createUI() {\n+        UIManager.getDefaults().put(\"CheckBox.disabledText\", checkboxColor);\n+        UIManager.getDefaults().put(\"RadioButton.disabledText\", radioButtonColor);\n+\n+        checkBox = new JCheckBox(\"WWWWW\");\n+        radioButton = new JRadioButton(\"WWWWW\");\n+        checkBox.setFont(checkBox.getFont().deriveFont(50.0f));\n+        radioButton.setFont(radioButton.getFont().deriveFont(50.0f));\n+        checkBox.setEnabled(false);\n+        radioButton.setEnabled(false);\n+\n+        frame = new JFrame(\"bug4314194\");\n+        frame.getContentPane().add(radioButton, BorderLayout.SOUTH);\n+        frame.getContentPane().add(checkBox, BorderLayout.NORTH);\n+        frame.pack();\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+\n+        for (UIManager.LookAndFeelInfo laf :\n+                 UIManager.getInstalledLookAndFeels()) {\n+            if (laf.getClassName().contains(\"Motif\")) {\n+                System.out.println(\"Skipping Motif L&F as it is deprecated\");\n+                continue;\n+            }\n+            System.out.println(\"Testing L&F: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            try {\n+                SwingUtilities.invokeAndWait(() -> createUI());\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                if (!checkComponent(checkBox, checkboxColor)) {\n+                    throw new RuntimeException(\"Correct color not set for Checkbox\");\n+                }\n+\n+                if (!checkComponent(radioButton, radioButtonColor)) {\n+                    throw new RuntimeException(\"Correct color not set for RadioButton\");\n+                }\n+            } finally {\n+                if (frame != null) {\n+                    SwingUtilities.invokeAndWait(() -> frame.dispose());\n+                }\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/4314194\/bug4314194.java","additions":143,"deletions":0,"binary":false,"changes":143,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 6852577\n+ * @summary  Verifies PasswordField.echoChar is not null for Nimbus L&F\n+ * @run main PasswordFieldTest\n+ *\/\n+\n+import javax.swing.UIManager;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class PasswordFieldTest {\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            for (UIManager.LookAndFeelInfo laf :\n+                                UIManager.getInstalledLookAndFeels()) {\n+                System.out.println(\"Testing L&F: \" + laf.getClassName());\n+                setLookAndFeel(laf);\n+\n+                System.out.println(\"Echo char: \" +\n+                                UIManager.get(\"PasswordField.echoChar\"));\n+                if (UIManager.get(\"PasswordField.echoChar\") == null) {\n+                    throw new RuntimeException(\n+                        \"PasswordField.echoChar returns null for \" +\n+                            laf.getClassName());\n+                }\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/PasswordFieldTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=platform\n@@ -30,1 +30,8 @@\n- * @run testng\/othervm StructuredTaskScopeTest\n+ * @run testng\/othervm -DthreadFactory=platform StructuredTaskScopeTest\n+ *\/\n+\n+\/*\n+ * @test id=virtual\n+ * @enablePreview\n+ * @modules jdk.incubator.concurrent\n+ * @run testng\/othervm -DthreadFactory=virtual StructuredTaskScopeTest\n@@ -40,0 +47,1 @@\n+import java.util.ArrayList;\n@@ -68,0 +76,1 @@\n+    private Object[][] threadFactories;\n@@ -76,1 +85,13 @@\n-        scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+        this.scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+\n+        \/\/ thread factories\n+        String value = System.getProperty(\"threadFactory\");\n+        List<ThreadFactory> list = new ArrayList<>();\n+        if (value == null || value.equals(\"platform\"))\n+            list.add(Thread.ofPlatform().factory());\n+        if (value == null || value.equals(\"virtual\"))\n+            list.add(Thread.ofVirtual().factory());\n+        assertTrue(list.size() > 0, \"No thread factories for tests\");\n+        this.threadFactories = list.stream()\n+                .map(f -> new Object[] { f })\n+                .toArray(Object[][]::new);\n@@ -89,6 +110,1 @@\n-        var defaultThreadFactory = Executors.defaultThreadFactory();\n-        var virtualThreadFactory = Thread.ofVirtual().factory();\n-        return new Object[][] {\n-                { defaultThreadFactory, },\n-                { virtualThreadFactory, },\n-        };\n+        return threadFactories;\n@@ -287,1 +303,1 @@\n-            \/\/ start a second task to shutdown the scope after 500ms\n+            \/\/ start a second task to shutdown the scope after a short delay\n@@ -289,1 +305,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(100));\n@@ -322,1 +338,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -365,1 +381,1 @@\n-                Thread.sleep(Duration.ofSeconds(3));\n+                Thread.sleep(Duration.ofMillis(100));\n@@ -373,1 +389,1 @@\n-                fail();\n+                fail(\"join did not throw\");\n@@ -399,1 +415,1 @@\n-                fail();\n+                fail(\"join did not throw\");\n@@ -449,1 +465,1 @@\n-                Thread.sleep(Duration.ofMillis(500));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -545,2 +561,2 @@\n-                        scope.joinUntil(Instant.now().plusSeconds(1));\n-                        fail();\n+                        scope.joinUntil(Instant.now().plusMillis(50));\n+                        fail(\"joinUntil did not throw\");\n@@ -575,1 +591,1 @@\n-                    fail();\n+                    fail(\"joinUntil did not throw\");\n@@ -583,1 +599,1 @@\n-                    fail();\n+                    fail(\"joinUntil did not throw\");\n@@ -601,1 +617,1 @@\n-                Thread.sleep(Duration.ofSeconds(3));\n+                Thread.sleep(Duration.ofMillis(100));\n@@ -605,1 +621,1 @@\n-            \/\/ join should throw\n+            \/\/ joinUntil should throw\n@@ -609,1 +625,1 @@\n-                fail();\n+                fail(\"joinUntil did not throw\");\n@@ -621,1 +637,1 @@\n-     * Test interrupt of thread blocked in joinUntil\n+     * Test interrupt of thread blocked in joinUntil.\n@@ -631,1 +647,1 @@\n-            \/\/ join should throw\n+            \/\/ joinUntil should throw\n@@ -635,1 +651,1 @@\n-                fail();\n+                fail(\"joinUntil did not throw\");\n@@ -790,1 +806,1 @@\n-            scheduler.schedule(latch::countDown, 1, TimeUnit.SECONDS);\n+            scheduler.schedule(latch::countDown, 100, TimeUnit.MILLISECONDS);\n@@ -849,1 +865,1 @@\n-                    fail();\n+                    fail(\"close did not throw\");\n@@ -873,1 +889,1 @@\n-                Thread.sleep(Duration.ofMillis(100));\n+                Thread.sleep(Duration.ofMillis(20));\n@@ -893,1 +909,1 @@\n-                Thread.sleep(Duration.ofMillis(100));\n+                Thread.sleep(Duration.ofMillis(20));\n@@ -920,2 +936,2 @@\n-                future.get(100, TimeUnit.MICROSECONDS);\n-                fail();\n+                future.get(20, TimeUnit.MILLISECONDS);\n+                fail(\"Future.get did not throw\");\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/StructuredTaskScope\/StructuredTaskScopeTest.java","additions":48,"deletions":32,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=platform\n@@ -28,2 +28,9 @@\n- * @compile --enable-preview -source ${jdk.version} ThreadFlockTest.java\n- * @run testng\/othervm --enable-preview ThreadFlockTest\n+ * @enablePreview\n+ * @run testng\/othervm -DthreadFactory=platform ThreadFlockTest\n+ *\/\n+\n+\/*\n+ * @test id=virtual\n+ * @modules java.base\/jdk.internal.misc\n+ * @enablePreview\n+ * @run testng\/othervm -DthreadFactory=virtual ThreadFlockTest\n@@ -49,0 +56,1 @@\n+    private Object[][] threadFactories;\n@@ -57,1 +65,13 @@\n-        scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+        this.scheduler = Executors.newSingleThreadScheduledExecutor(factory);\n+\n+        \/\/ thread factories\n+        String value = System.getProperty(\"threadFactory\");\n+        List<ThreadFactory> list = new ArrayList<>();\n+        if (value == null || value.equals(\"platform\"))\n+            list.add(Thread.ofPlatform().factory());\n+        if (value == null || value.equals(\"virtual\"))\n+            list.add(Thread.ofVirtual().factory());\n+        assertTrue(list.size() > 0, \"No thread factories for tests\");\n+        this.threadFactories = list.stream()\n+                .map(f -> new Object[] { f })\n+                .toArray(Object[][]::new);\n@@ -67,6 +87,1 @@\n-        var defaultThreadFactory = Executors.defaultThreadFactory();\n-        var virtualThreadFactory = Thread.ofVirtual().factory();\n-        return new Object[][] {\n-                { defaultThreadFactory, },\n-                { virtualThreadFactory, },\n-        };\n+        return threadFactories;\n@@ -384,1 +399,1 @@\n-                    Thread.sleep(Duration.ofSeconds(1));\n+                    Thread.sleep(Duration.ofMillis(50));\n@@ -434,1 +449,1 @@\n-                    fail();\n+                    fail(\"awaitAll did not throw\");\n@@ -461,2 +476,2 @@\n-                        flock.awaitAll(Duration.ofSeconds(1));\n-                        fail();\n+                        flock.awaitAll(Duration.ofMillis(50));\n+                        fail(\"awaitAll did not throw\");\n@@ -491,1 +506,1 @@\n-                    fail();\n+                    fail(\"awaitAll did not throw\");\n@@ -495,1 +510,1 @@\n-                    fail();\n+                    fail(\"awaitAll did not throw\");\n@@ -530,1 +545,1 @@\n-                fail();\n+                fail(\"awaitAll did not throw\");\n@@ -540,1 +555,1 @@\n-                fail();\n+                fail(\"awaitAll did not throw\");\n@@ -542,1 +557,1 @@\n-                fail();\n+                fail(\"TimeoutException not expected\");\n@@ -582,1 +597,1 @@\n-                fail();\n+                fail(\"awaitAll did not throw\");\n@@ -591,1 +606,1 @@\n-                fail();\n+                fail(\"awaitAll did not throw\");\n@@ -593,1 +608,1 @@\n-                fail();\n+                fail(\"TimeoutException not expected\");\n@@ -709,1 +724,1 @@\n-                try { Thread.sleep(Duration.ofSeconds(1)); } catch (Exception e) { }\n+                try { Thread.sleep(Duration.ofMillis(500)); } catch (Exception e) { }\n@@ -785,1 +800,1 @@\n-                Thread.sleep(Duration.ofSeconds(1));\n+                Thread.sleep(Duration.ofMillis(50));\n@@ -961,1 +976,1 @@\n-                    fail();\n+                    fail(\"close did not throw\");\n","filename":"test\/jdk\/jdk\/internal\/misc\/ThreadFlock\/ThreadFlockTest.java","additions":40,"deletions":25,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @key cgroups\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/TestDockerBasic.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.time.temporal.ChronoUnit;\n@@ -95,0 +96,6 @@\n+        @Timespan(Timespan.SECONDS)\n+        long foreverMillis = Long.MAX_VALUE;\n+\n+        @Timespan(Timespan.NANOSECONDS)\n+        long foreverNanoseconds = Long.MAX_VALUE;\n+\n@@ -182,0 +189,3 @@\n+        Asserts.assertEquals(event.getDuration(\"foreverMillis\"), ChronoUnit.FOREVER.getDuration());\n+        Asserts.assertEquals(event.getDuration(\"foreverNanoseconds\"), ChronoUnit.FOREVER.getDuration());\n+\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestRecordedObject.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,2 @@\n+import java.io.IOException;\n+import java.nio.file.Paths;\n@@ -85,0 +87,21 @@\n+\n+        testMemoryCopy();\n+    }\n+\n+    private static void testMemoryCopy() throws Exception {\n+        try (Recording memory = new Recording()) {\n+            memory.setToDisk(false);\n+            memory.enable(SimpleEvent.class);\n+            memory.start();\n+\n+            Recording unstopped = memory.copy(false);\n+            unstopped.dump(Paths.get(\"unstopped-memory.jfr\"));\n+\n+            Recording stopped = memory.copy(true);\n+            try {\n+                stopped.dump(Paths.get(\"stopped-memory.jfr\"));\n+                throw new Exception(\"Should not be able to dump stopped in memory recording\");\n+            } catch (IOException ioe) {\n+                \/\/ As expected\n+            }\n+        }\n","filename":"test\/jdk\/jdk\/jfr\/api\/recording\/misc\/TestRecordingCopy.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -267,0 +267,1 @@\n+        settingValues.put(EventNames.SecurityProviderService + \"#threshold\", \"0 ns\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestActiveSettingEvent.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-            if (!f1.get() && !f1.get() && !f3.get()) {\n+            if (!f1.get() || !f2.get() || !f3.get()) {\n","filename":"test\/jdk\/jdk\/jfr\/jmx\/streaming\/TestRemoteDump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,10 +11,0 @@\n-\t\/\/ Allows any thread to stop itself using the java.lang.Thread.stop()\n-\t\/\/ method that takes no argument.\n-\t\/\/ Note that this permission is granted by default only to remain\n-\t\/\/ backwards compatible.\n-\t\/\/ It is strongly recommended that you either remove this permission\n-\t\/\/ from this policy file or further restrict it to code sources\n-\t\/\/ that you specify, because Thread.stop() is potentially unsafe.\n-\t\/\/ See \"http:\/\/java.sun.com\/notes\" for more information.\n-\tpermission java.lang.RuntimePermission \"stopThread\";\n-\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/IsKeepingAlive.policy","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -11,10 +11,0 @@\n-\t\/\/ Allows any thread to stop itself using the java.lang.Thread.stop()\n-\t\/\/ method that takes no argument.\n-\t\/\/ Note that this permission is granted by default only to remain\n-\t\/\/ backwards compatible.\n-\t\/\/ It is strongly recommended that you either remove this permission\n-\t\/\/ from this policy file or further restrict it to code sources\n-\t\/\/ that you specify, because Thread.stop() is potentially unsafe.\n-\t\/\/ See \"http:\/\/java.sun.com\/notes\" for more information.\n-\tpermission java.lang.RuntimePermission \"stopThread\";\n-\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/OpenServer.policy","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,238 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8293562\n+ * @library \/test\/lib\n+ * @run main\/othervm -Dhttp.keepAlive.time.server=1 B8293562\n+ * @summary Http keep-alive thread should close sockets without holding a lock\n+ *\/\n+\n+import com.sun.net.httpserver.HttpServer;\n+\n+import javax.net.ssl.HandshakeCompletedListener;\n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLSession;\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.SSLSocketFactory;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+import java.net.Socket;\n+import java.net.URL;\n+import java.net.UnknownHostException;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+\n+public class B8293562 {\n+    static HttpServer server;\n+    static CountDownLatch closing = new CountDownLatch(1);\n+    static CountDownLatch secondRequestDone = new CountDownLatch(1);\n+    static CompletableFuture<Void> result = new CompletableFuture<>();\n+\n+    public static void main(String[] args) throws Exception {\n+        startHttpServer();\n+        clientHttpCalls();\n+    }\n+\n+    public static void startHttpServer() throws Exception {\n+        server = HttpServer.create(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0), 10);\n+        server.setExecutor(Executors.newCachedThreadPool());\n+        server.start();\n+    }\n+\n+    public static void clientHttpCalls() throws Exception {\n+        try {\n+            System.out.println(\"http server listen on: \" + server.getAddress().getPort());\n+            String hostAddr = InetAddress.getLoopbackAddress().getHostAddress();\n+            if (hostAddr.indexOf(':') > -1) hostAddr = \"[\" + hostAddr + \"]\";\n+            String baseURLStr = \"https:\/\/\" + hostAddr + \":\" + server.getAddress().getPort() + \"\/\";\n+\n+            URL testUrl = new URL (baseURLStr);\n+\n+            \/\/ SlowCloseSocketFactory is not a real SSLSocketFactory;\n+            \/\/ it produces regular non-SSL sockets. Effectively, the request\n+            \/\/ is made over http.\n+            HttpsURLConnection.setDefaultSSLSocketFactory(new SlowCloseSocketFactory());\n+            System.out.println(\"Performing first request\");\n+            HttpsURLConnection uc = (HttpsURLConnection)testUrl.openConnection(Proxy.NO_PROXY);\n+            byte[] buf = new byte[1024];\n+            try {\n+                uc.getInputStream();\n+                throw new RuntimeException(\"Expected 404 here\");\n+            } catch (FileNotFoundException ignored) { }\n+            try (InputStream is = uc.getErrorStream()) {\n+                while (is.read(buf) >= 0) {\n+                }\n+            }\n+            System.out.println(\"First request completed\");\n+            closing.await();\n+            \/\/ KeepAliveThread is closing the connection now\n+            System.out.println(\"Performing second request\");\n+            HttpsURLConnection uc2 = (HttpsURLConnection)testUrl.openConnection(Proxy.NO_PROXY);\n+\n+            try {\n+                uc2.getInputStream();\n+                throw new RuntimeException(\"Expected 404 here\");\n+            } catch (FileNotFoundException ignored) { }\n+            try (InputStream is = uc2.getErrorStream()) {\n+                while (is.read(buf) >= 0) {\n+                }\n+            }\n+            System.out.println(\"Second request completed\");\n+            \/\/ let the socket know it can close now\n+            secondRequestDone.countDown();\n+            result.get();\n+            System.out.println(\"Test completed successfully\");\n+        } finally {\n+            server.stop(1);\n+        }\n+    }\n+\n+    static class SlowCloseSocket extends SSLSocket {\n+        @Override\n+        public synchronized void close() throws IOException {\n+            String threadName = Thread.currentThread().getName();\n+            System.out.println(\"Connection closing, thread name: \" + threadName);\n+            closing.countDown();\n+            super.close();\n+            if (threadName.equals(\"Keep-Alive-Timer\")) {\n+                try {\n+                    if (secondRequestDone.await(5, TimeUnit.SECONDS)) {\n+                        result.complete(null);\n+                    } else {\n+                        result.completeExceptionally(new RuntimeException(\n+                                \"Wait for second request timed out\"));\n+                    }\n+                } catch (InterruptedException e) {\n+                    result.completeExceptionally(new RuntimeException(\n+                            \"Wait for second request was interrupted\"));\n+                }\n+            } else {\n+                result.completeExceptionally(new RuntimeException(\n+                        \"Close invoked from unexpected thread\"));\n+            }\n+            System.out.println(\"Connection closed\");\n+        }\n+\n+        \/\/ required abstract method overrides\n+        @Override\n+        public String[] getSupportedCipherSuites() {\n+            return new String[0];\n+        }\n+        @Override\n+        public String[] getEnabledCipherSuites() {\n+            return new String[0];\n+        }\n+        @Override\n+        public void setEnabledCipherSuites(String[] suites) { }\n+        @Override\n+        public String[] getSupportedProtocols() {\n+            return new String[0];\n+        }\n+        @Override\n+        public String[] getEnabledProtocols() {\n+            return new String[0];\n+        }\n+        @Override\n+        public void setEnabledProtocols(String[] protocols) { }\n+        @Override\n+        public SSLSession getSession() {\n+            return null;\n+        }\n+        @Override\n+        public void addHandshakeCompletedListener(HandshakeCompletedListener listener) { }\n+        @Override\n+        public void removeHandshakeCompletedListener(HandshakeCompletedListener listener) { }\n+        @Override\n+        public void startHandshake() throws IOException { }\n+        @Override\n+        public void setUseClientMode(boolean mode) { }\n+        @Override\n+        public boolean getUseClientMode() {\n+            return false;\n+        }\n+        @Override\n+        public void setNeedClientAuth(boolean need) { }\n+        @Override\n+        public boolean getNeedClientAuth() {\n+            return false;\n+        }\n+        @Override\n+        public void setWantClientAuth(boolean want) { }\n+        @Override\n+        public boolean getWantClientAuth() {\n+            return false;\n+        }\n+        @Override\n+        public void setEnableSessionCreation(boolean flag) { }\n+        @Override\n+        public boolean getEnableSessionCreation() {\n+            return false;\n+        }\n+    }\n+\n+    static class SlowCloseSocketFactory extends SSLSocketFactory {\n+\n+        @Override\n+        public Socket createSocket() throws IOException {\n+            return new SlowCloseSocket();\n+        }\n+        \/\/ required abstract method overrides\n+        @Override\n+        public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n+            throw new UnsupportedOperationException();\n+        }\n+        @Override\n+        public Socket createSocket(String host, int port, InetAddress localHost, int localPort) throws IOException, UnknownHostException {\n+            throw new UnsupportedOperationException();\n+        }\n+        @Override\n+        public Socket createSocket(InetAddress host, int port) throws IOException {\n+            throw new UnsupportedOperationException();\n+        }\n+        @Override\n+        public Socket createSocket(InetAddress address, int port, InetAddress localAddress, int localPort) throws IOException {\n+            throw new UnsupportedOperationException();\n+        }\n+        @Override\n+        public String[] getDefaultCipherSuites() {\n+            return new String[0];\n+        }\n+        @Override\n+        public String[] getSupportedCipherSuites() {\n+            return new String[0];\n+        }\n+        @Override\n+        public Socket createSocket(Socket s, String host, int port, boolean autoClose) throws IOException {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/sun\/net\/www\/http\/KeepAliveCache\/B8293562.java","additions":238,"deletions":0,"binary":false,"changes":238,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,11 @@\n+    @Override\n+    protected void doServerSide() throws Exception {\n+        if (expectSuccess) {\n+            super.doServerSide();\n+        } else {\n+            \/\/ we don't expect anything to connect to the server\n+            serverPort = 443;\n+            serverCondition.countDown();\n+        }\n+    }\n+\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsClient\/ProxyAuthTest.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n- * @bug 4170614\n- * @summary Test internal hashCode() and equals() functions\n- * @library patch-src\n- * @build java.base\/java.text.Bug4170614Test\n- * @run main java.base\/java.text.Bug4170614Test\n- *\/\n","filename":"test\/jdk\/sun\/text\/IntHashtable\/Bug4170614TestRun.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n","filename":"test\/jdk\/sun\/text\/IntHashtable\/Bug4705389.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,5 +24,0 @@\n-\/*\n-    (this test doesn't have an at-test tag because it's run by Bug4170614TestRun.java\n-     instead of directly by the test harness)\n-*\/\n-\n@@ -64,0 +59,9 @@\n+\n+\/* @test\n+ * @bug 4170614\n+ * @summary Test internal hashCode() and equals() functions\n+ * @library ..\/..\/..\/..\/patch-src\n+ * @build java.base\/java.text.Bug4170614Test\n+ * @run main java.base\/java.text.Bug4170614Test\n+ *\/\n+\n@@ -70,1 +74,1 @@\n- * Bug #4170614 complained that we had two iternal classes that\n+ * Bug #4170614 complained that we had two internal classes that\n@@ -145,2 +149,2 @@\n-                                             new StringBuffer(\"hello\"),\n-                                             new StringBuffer(\"up\"));\n+                                             new StringBuilder(\"hello\"),\n+                                             new StringBuilder(\"up\"));\n@@ -148,2 +152,2 @@\n-                                               new StringBuffer(\"hello\"),\n-                                               new StringBuffer(\"down\"));\n+                                               new StringBuilder(\"hello\"),\n+                                               new StringBuilder(\"down\"));\n@@ -152,2 +156,2 @@\n-                                              new StringBuffer(\"goodbye\"),\n-                                              new StringBuffer(\"up\"));\n+                                              new StringBuilder(\"goodbye\"),\n+                                              new StringBuilder(\"up\"));\n","filename":"test\/jdk\/sun\/text\/IntHashtable\/patch-src\/java.base\/java\/text\/Bug4170614Test.java","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-             * format (as of 2019a):\n+             * format (as of 2019a), Palestine added in 2022d:\n@@ -184,0 +184,1 @@\n+             *  - Rule \"Palestine\"\n@@ -199,0 +200,2 @@\n+                zid.equals(\"Asia\/Gaza\") || \/\/ uses \"Palestine\" rule\n+                zid.equals(\"Asia\/Hebron\") || \/\/ uses \"Palestine\" rule\n","filename":"test\/jdk\/sun\/util\/calendar\/zi\/TestZoneInfo310.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test --save-jlink-argfiles plugin\n+ * @library ..\/..\/lib\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.jimage\n+ *          jdk.jdeps\/com.sun.tools.classfile\n+ *          jdk.jlink\/jdk.tools.jlink.internal\n+ *          jdk.jlink\/jdk.tools.jmod\n+ *          jdk.jlink\/jdk.tools.jimage\n+ *          jdk.compiler\n+ * @build tests.*\n+ * @run main SaveJlinkArgfilesPluginTest\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+import tests.Helper;\n+\n+public class SaveJlinkArgfilesPluginTest {\n+\n+    public static void main(String[] args) throws Throwable {\n+\n+        Helper helper = Helper.newHelper();\n+        if (helper == null) {\n+            System.err.println(\"Test not run\");\n+            return;\n+        }\n+\n+        String exe = System.getProperty(\"os.name\").startsWith(\"Windows\") ? \".exe\" : \"\";\n+        Path argfile1 = Path.of(\"argfile1\");\n+        Path argfile2 = Path.of(\"argfile2\");\n+\n+        Files.writeString(argfile1, \"--add-modules jdk.internal.vm.ci --add-options=-Dfoo=xyzzy\");\n+        Files.writeString(argfile2, \"--vendor-version=\\\"XyzzyVM 3.14.15\\\" --vendor-bug-url=https:\/\/bugs.xyzzy.com\/\");\n+\n+        var module = \"base\";\n+        helper.generateDefaultJModule(module);\n+        var image = helper.generateDefaultImage(new String[] {\n+                \"--add-modules\", \"jdk.jlink,jdk.jdeps,jdk.internal.opt,jdk.compiler,java.compiler,jdk.zipfs,jdk.internal.vm.ci\",\n+                \"--keep-packaged-modules\", \"images\/base.image\/jmods\",\n+                \"--save-jlink-argfiles\", argfile1 + File.pathSeparator + argfile2\n+            }, module)\n+            .assertSuccess();\n+        helper.checkImage(image, module, null, null);\n+\n+        String launcher = image.resolve(\"bin\/java\" + exe).toString();\n+        var oa = ProcessTools.executeProcess(launcher, \"-XshowSettings:properties\", \"--version\");\n+\n+        \/\/ Check that the primary image creation ignored the saved args\n+        oa.shouldHaveExitValue(0);\n+        oa.shouldNotMatch(\"java.vendor.url.bug = https:\/\/bugs.xyzzy.com\/\");\n+        oa.shouldNotMatch(\"java.vendor.version = XyzzyVM 3.14.15\");\n+        oa.shouldNotMatch(\"foo = xyzzy\");\n+\n+        \/\/ Check that --save-jlink-argfiles fails if jdk.jlink not in the output image\n+        launcher = image.resolve(\"bin\/jlink\" + exe).toString();\n+        oa = ProcessTools.executeProcess(launcher, \"--output=ignore\", \"--save-jlink-argfiles=\" + argfile1);\n+        oa.shouldHaveExitValue(1);\n+        oa.stdoutShouldMatch(\"--save-jlink-argfiles requires jdk.jlink to be in the output image\");\n+\n+        \/\/ Create a secondary image\n+        Path image2 = Path.of(\"image2\").toAbsolutePath();\n+        launcher = image.resolve(\"bin\/jlink\" + exe).toString();\n+        oa = ProcessTools.executeProcess(launcher, \"--output\", image2.toString(), \"--add-modules=java.base\");\n+        oa.shouldHaveExitValue(0);\n+\n+        \/\/ Ensure the saved `--add-options` and `--vendor-*` options\n+        \/\/ were applied when creating the secondary image.\n+        launcher = image2.resolve(Path.of(\"bin\", \"java\" + exe)).toString();\n+        oa = ProcessTools.executeProcess(launcher, \"-XshowSettings:properties\", \"--version\");\n+        oa.shouldHaveExitValue(0);\n+        oa.stdoutShouldMatch(\" XyzzyVM 3.14.15 \");\n+        oa.stderrShouldMatch(\"java.vendor.url.bug = https:\/\/bugs.xyzzy.com\/\");\n+        oa.stderrShouldMatch(\"java.vendor.version = XyzzyVM 3.14.15\");\n+        oa.stderrShouldMatch(\"foo = xyzzy\");\n+\n+        \/\/ Ensure the saved `--add-modules` option\n+        \/\/ was applied when creating the secondary image.\n+        oa = ProcessTools.executeProcess(launcher.toString(), \"-d\", \"jdk.internal.vm.ci\");\n+        oa.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SaveJlinkArgfilesPluginTest.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,13 @@\n-        final String testString = new String(Character.toChars(0x00E9));\n+        final String testString;\n+\n+        String encoding = System.getProperty(\"native.encoding\");\n+        switch (encoding) {\n+        default:\n+            testString = new String(Character.toChars(0x00E9));\n+            break;\n+\n+        case \"MS932\":\n+        case \"SJIS\":\n+            testString = new String(Character.toChars(0x3042));\n+            break;\n+        }\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/UnicodeArgsTest.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        removeAll(htmlStyleNames, \"col-plain\", \"external-link\",\n+        removeAll(htmlStyleNames, \"col-plain\", \"external-link\", \"header\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkStylesheetClasses\/CheckStylesheetClasses.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-                    <ul>\n+                    <ul class=\"contents-list\">\n@@ -145,1 +145,1 @@\n-                    <ul>\n+                    <ul class=\"contents-list\">\n@@ -184,1 +184,1 @@\n-                    <ul>\n+                    <ul class=\"contents-list\">\n@@ -250,1 +250,1 @@\n-                    <ul>\n+                    <ul class=\"contents-list\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testConstantValuesPage\/TestConstantValuesPage.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -269,11 +269,11 @@\n-                    <ul>\n-                    <li><a href=\"#for-removal\">Terminally Deprecated<\/a><\/li>\n-                    <li><a href=\"#class\">Classes<\/a><\/li>\n-                    <li><a href=\"#enum-class\">Enum Classes<\/a><\/li>\n-                    <li><a href=\"#exception-class\">Exception Classes<\/a><\/li>\n-                    <li><a href=\"#annotation-interface\">Annotation Interfaces<\/a><\/li>\n-                    <li><a href=\"#field\">Fields<\/a><\/li>\n-                    <li><a href=\"#method\">Methods<\/a><\/li>\n-                    <li><a href=\"#constructor\">Constructors<\/a><\/li>\n-                    <li><a href=\"#enum-constant\">Enum Constants<\/a><\/li>\n-                    <li><a href=\"#annotation-interface-member\">Annotation Interface Elements<\/a><\/li>\n+                    <ul class=\"contents-list\">\n+                    <li id=\"contents-for-removal\"><a href=\"#for-removal\">Terminally Deprecated<\/a><\/li>\n+                    <li id=\"contents-class\"><a href=\"#class\">Classes<\/a><\/li>\n+                    <li id=\"contents-enum-class\"><a href=\"#enum-class\">Enum Classes<\/a><\/li>\n+                    <li id=\"contents-exception-class\"><a href=\"#exception-class\">Exception Classes<\/a><\/li>\n+                    <li id=\"contents-annotation-interface\"><a href=\"#annotation-interface\">Annotation Interfaces<\/a><\/li>\n+                    <li id=\"contents-field\"><a href=\"#field\">Fields<\/a><\/li>\n+                    <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n+                    <li id=\"contents-constructor\"><a href=\"#constructor\">Constructors<\/a><\/li>\n+                    <li id=\"contents-enum-constant\"><a href=\"#enum-constant\">Enum Constants<\/a><\/li>\n+                    <li id=\"contents-annotation-interface-member\"><a href=\"#annotation-interface-member\">Annotation Interface Elements<\/a><\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDeprecatedDocs\/TestDeprecatedDocs.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1113,3 +1113,3 @@\n-                    <ul>\n-                    <li><a href=\"#for-removal\">Terminally Deprecated<\/a><\/li>\n-                    <li><a href=\"#module\">Modules<\/a><\/li>\n+                    <ul class=\"contents-list\">\n+                    <li id=\"contents-for-removal\"><a href=\"#for-removal\">Terminally Deprecated<\/a><\/li>\n+                    <li id=\"contents-module\"><a href=\"#module\">Modules<\/a><\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModules.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -105,16 +105,0 @@\n-                <h2 title=\"Contents\">Contents<\/h2>\n-                <ul>\n-                <li><a href=\"#module\">Modules<\/a><\/li>\n-                <li><a href=\"#package\">Packages<\/a><\/li>\n-                <li><a href=\"#interface\">Interfaces<\/a><\/li>\n-                <li><a href=\"#class\">Classes<\/a><\/li>\n-                <li><a href=\"#enum-class\">Enum Classes<\/a><\/li>\n-                <li><a href=\"#exception-class\">Exception Classes<\/a><\/li>\n-                <li><a href=\"#record-class\">Record Classes<\/a><\/li>\n-                <li><a href=\"#annotation-interface\">Annotation Interfaces<\/a><\/li>\n-                <li><a href=\"#field\">Fields<\/a><\/li>\n-                <li><a href=\"#method\">Methods<\/a><\/li>\n-                <li><a href=\"#constructor\">Constructors<\/a><\/li>\n-                <li><a href=\"#enum-constant\">Enum Constants<\/a><\/li>\n-                <li><a href=\"#annotation-interface-member\">Annotation Interface Elements<\/a><\/li>\n-                <\/ul>\n@@ -134,1 +118,17 @@\n-                <span>5<\/span><\/label><\/div>\"\"\");\n+                <span>5<\/span><\/label><\/div>\n+                <h2 title=\"Contents\">Contents<\/h2>\n+                <ul class=\"contents-list\">\n+                <li id=\"contents-module\"><a href=\"#module\">Modules<\/a><\/li>\n+                <li id=\"contents-package\"><a href=\"#package\">Packages<\/a><\/li>\n+                <li id=\"contents-interface\"><a href=\"#interface\">Interfaces<\/a><\/li>\n+                <li id=\"contents-class\"><a href=\"#class\">Classes<\/a><\/li>\n+                <li id=\"contents-enum-class\"><a href=\"#enum-class\">Enum Classes<\/a><\/li>\n+                <li id=\"contents-exception-class\"><a href=\"#exception-class\">Exception Classes<\/a><\/li>\n+                <li id=\"contents-record-class\"><a href=\"#record-class\">Record Classes<\/a><\/li>\n+                <li id=\"contents-annotation-interface\"><a href=\"#annotation-interface\">Annotation Interfaces<\/a><\/li>\n+                <li id=\"contents-field\"><a href=\"#field\">Fields<\/a><\/li>\n+                <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n+                <li id=\"contents-constructor\"><a href=\"#constructor\">Constructors<\/a><\/li>\n+                <li id=\"contents-enum-constant\"><a href=\"#enum-constant\">Enum Constants<\/a><\/li>\n+                <li id=\"contents-annotation-interface-member\"><a href=\"#annotation-interface-member\">Annotation Interface Elements<\/a><\/li>\n+                <\/ul>\"\"\");\n@@ -550,0 +550,1 @@\n+                <\/div>\n@@ -551,3 +552,3 @@\n-                <ul>\n-                <li><a href=\"#method\">Methods<\/a><\/li>\n-                <li><a href=\"#constructor\">Constructors<\/a><\/li>\n+                <ul class=\"contents-list\">\n+                <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n+                <li id=\"contents-constructor\"><a href=\"#constructor\">Constructors<\/a><\/li>\n@@ -555,1 +556,0 @@\n-                <\/div>\n@@ -604,8 +604,0 @@\n-                <h2 title=\"Contents\">Contents<\/h2>\n-                <ul>\n-                <li><a href=\"#for-removal\">Terminally Deprecated<\/a><\/li>\n-                <li><a href=\"#method\">Methods<\/a><\/li>\n-                <li><a href=\"#constructor\">Constructors<\/a><\/li>\n-                <li><a href=\"#enum-constant\">Enum Constants<\/a><\/li>\n-                <li><a href=\"#annotation-interface-member\">Annotation Interface Elements<\/a><\/li>\n-                <\/ul>\n@@ -613,1 +605,13 @@\n-                <div class=\"checkboxes\">Show API deprecated in: <label for=\"release-1\">\"\"\",\n+                <div class=\"checkboxes\">Show API deprecated in: <label for=\"release-1\">\n+                <input type=\"checkbox\" id=\"release-1\" disabled checked onclick=\"toggleGlobal(this, '1', 3)\">\n+                <span>5<\/span><\/label> <label for=\"release-2\">\n+                <input type=\"checkbox\" id=\"release-2\" disabled checked onclick=\"toggleGlobal(this, '', 3)\">\n+                <span>other<\/span><\/label><\/div>\n+                <h2 title=\"Contents\">Contents<\/h2>\n+                <ul class=\"contents-list\">\n+                <li id=\"contents-for-removal\"><a href=\"#for-removal\">Terminally Deprecated<\/a><\/li>\n+                <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n+                <li id=\"contents-constructor\"><a href=\"#constructor\">Constructors<\/a><\/li>\n+                <li id=\"contents-enum-constant\"><a href=\"#enum-constant\">Enum Constants<\/a><\/li>\n+                <li id=\"contents-annotation-interface-member\"><a href=\"#annotation-interface-member\">Annotation Interface Elements<\/a><\/li>\n+                <\/ul>\"\"\",\n@@ -665,7 +669,0 @@\n-                <h2 title=\"Contents\">Contents<\/h2>\n-                <ul>\n-                <li><a href=\"#class\">Classes<\/a><\/li>\n-                <li><a href=\"#field\">Fields<\/a><\/li>\n-                <li><a href=\"#method\">Methods<\/a><\/li>\n-                <li><a href=\"#constructor\">Constructors<\/a><\/li>\n-                <\/ul>\n@@ -683,1 +680,8 @@\n-                <span>6<\/span><\/label><\/div>\"\"\");\n+                <span>6<\/span><\/label><\/div>\n+                <h2 title=\"Contents\">Contents<\/h2>\n+                <ul class=\"contents-list\">\n+                <li id=\"contents-class\"><a href=\"#class\">Classes<\/a><\/li>\n+                <li id=\"contents-field\"><a href=\"#field\">Fields<\/a><\/li>\n+                <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n+                <li id=\"contents-constructor\"><a href=\"#constructor\">Constructors<\/a><\/li>\n+                <\/ul>\"\"\");\n@@ -777,0 +781,1 @@\n+                <\/div>\n@@ -778,2 +783,2 @@\n-                <ul>\n-                <li><a href=\"#constructor\">Constructors<\/a><\/li>\n+                <ul class=\"contents-list\">\n+                <li id=\"contents-constructor\"><a href=\"#constructor\">Constructors<\/a><\/li>\n@@ -781,1 +786,0 @@\n-                <\/div>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewApiList\/TestNewApiList.java","additions":45,"deletions":41,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                <li><a href=\"#package\">Packages<\/a><\/li>\"\"\"\n+                <li id=\"contents-package\"><a href=\"#package\">Packages<\/a><\/li>\"\"\"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPackageDeprecation\/TestPackageDeprecation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug      8250768 8261976 8277300 8282452\n+ * @bug      8250768 8261976 8277300 8282452 8287597\n@@ -80,0 +80,13 @@\n+                    \"\"\"\n+                    <ul class=\"preview-feature-list\">\n+                    <li><label for=\"feature-1\">\n+                    <input type=\"checkbox\" id=\"feature-1\" disabled checked onclick=\"toggleGlobal(this, '1', 3)\">\n+                    <span>0: <a href=\"https:\/\/openjdk.org\/jeps\/0\">Test Feature (Preview)<\/a><\/span><\/label><\/li>\n+                    <\/ul>\n+                    <h2 title=\"Contents\">Contents<\/h2>\n+                    <ul class=\"contents-list\">\n+                    <li id=\"contents-class\"><a href=\"#class\">Classes<\/a><\/li>\n+                    <li id=\"contents-record-class\"><a href=\"#record-class\">Record Classes<\/a><\/li>\n+                    <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n+                    <\/ul>\n+                    \"\"\",\n@@ -82,0 +95,1 @@\n+                    <div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\">\n@@ -83,2 +97,5 @@\n-                    <div class=\"summary-table two-column-summary\">\n-                    <div class=\"table-header col-first\">Record Class<\/div>\n+                    <\/div>\n+                    <div id=\"record-class.tabpanel\" role=\"tabpanel\">\n+                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"record-class-tab0\">\n+                    <div class=\"table-header col-first sort-asc\" onclick=\"sortTable(this, 0, 3)\">Record Class<\/div>\n+                    <div class=\"table-header col-second\" onclick=\"sortTable(this, 1, 3)\">Preview Feature<\/div>\n@@ -86,2 +103,3 @@\n-                    <div class=\"col-summary-item-name even-row-color\"><a href=\"java.base\/preview\/CoreRecord.html\" title=\"class in preview\">preview.CoreRecord<\/a><sup><a href=\"java.base\/preview\/CoreRecord.html#preview-preview.CoreRecord\">PREVIEW<\/a><\/sup><\/div>\n-                    <div class=\"col-last even-row-color\"><\/div>\n+                    <div class=\"col-summary-item-name even-row-color record-class record-class-tab1\"><a href=\"java.base\/preview\/CoreRecord.html\" title=\"class in preview\">preview.CoreRecord<\/a><sup><a href=\"java.base\/preview\/CoreRecord.html#preview-preview.CoreRecord\">PREVIEW<\/a><\/sup><\/div>\n+                    <div class=\"col-second even-row-color record-class record-class-tab1\">Test Feature<\/div>\n+                    <div class=\"col-last even-row-color record-class record-class-tab1\"><\/div>\n@@ -92,0 +110,1 @@\n+                    <div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\">\n@@ -93,2 +112,5 @@\n-                    <div class=\"summary-table two-column-summary\">\n-                    <div class=\"table-header col-first\">Method<\/div>\n+                    <\/div>\n+                    <div id=\"method.tabpanel\" role=\"tabpanel\">\n+                    <div class=\"summary-table three-column-summary\" aria-labelledby=\"method-tab0\">\n+                    <div class=\"table-header col-first sort-asc\" onclick=\"sortTable(this, 0, 3)\">Method<\/div>\n+                    <div class=\"table-header col-second\" onclick=\"sortTable(this, 1, 3)\">Preview Feature<\/div>\n@@ -96,2 +118,3 @@\n-                    <div class=\"col-summary-item-name even-row-color\"><a href=\"java.base\/preview\/CoreRecordComponent.html#i()\">preview.CoreRecordComponent.i()<\/a><sup><a href=\"java.base\/preview\/CoreRecordComponent.html#preview-i()\">PREVIEW<\/a><\/sup><\/div>\n-                    <div class=\"col-last even-row-color\">\n+                    <div class=\"col-summary-item-name even-row-color method method-tab1\"><a href=\"java.base\/preview\/CoreRecordComponent.html#i()\">preview.CoreRecordComponent.i()<\/a><sup><a href=\"java.base\/preview\/CoreRecordComponent.html#preview-i()\">PREVIEW<\/a><\/sup><\/div>\n+                    <div class=\"col-second even-row-color method method-tab1\">Test Feature<\/div>\n+                    <div class=\"col-last even-row-color method method-tab1\">\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":32,"deletions":9,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -516,2 +516,2 @@\n-                    <ul>\n-                    <li><a href=\"#record-class\">Record Classes<\/a><\/li>\n+                    <ul class=\"contents-list\">\n+                    <li id=\"contents-record-class\"><a href=\"#record-class\">Record Classes<\/a><\/li>\n@@ -548,2 +548,2 @@\n-                    <ul>\n-                    <li><a href=\"#method\">Methods<\/a><\/li>\n+                    <ul class=\"contents-list\">\n+                    <li id=\"contents-method\"><a href=\"#method\">Methods<\/a><\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/TestRecordTypes.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8144903 8177466 8191842 8211694 8213725 8239536 8257236 8252409\n+ * @bug 8144903 8177466 8191842 8211694 8213725 8239536 8257236 8252409 8294431\n@@ -620,0 +620,4 @@\n+    public void varAnonymousClassAndStaticField() { \/\/JDK-8294431\n+        assertEval(\"var obj = new Object() { public static final String msg = \\\"hello\\\"; };\");\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/VariablesTest.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,198 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-\n-# @test\n-# @bug 4212732\n-# @summary Test handling of the Class-Path attribute in jar file manifests\n-# @author Martin Buchholz\n-#\n-# @run shell Class-Path.sh\n-\n-# To run this test manually, simply do .\/Class-Path.sh\n-\n-. ${TESTSRC-.}\/Util.sh\n-\n-set -u\n-\n-Cleanup() {\n-    Sys rm -rf pkg Main.java Main.class Main.jar jars\n-    Sys rm -rf MANIFEST.MF A.jar B.zip\n-}\n-\n-Cleanup\n-Sys mkdir pkg\n-\n-#----------------------------------------------------------------\n-# Create mutually referential jar files\n-#----------------------------------------------------------------\n-cat >pkg\/A.java <<EOF\n-package pkg;\n-import pkg.B;\n-public class A {\n-    public static int f() { return B.g(); }\n-    public static int g() { return 0; }\n-}\n-EOF\n-\n-cat >pkg\/B.java <<EOF\n-package pkg;\n-import pkg.A;\n-public class B {\n-    public static int f() { return A.g(); }\n-    public static int g() { return 0; }\n-}\n-EOF\n-\n-Sys \"$javac\" ${TESTTOOLVMOPTS} pkg\/A.java pkg\/B.java\n-\n-MkManifestWithClassPath \"B.zip\"\n-Sys \"$jar\" cmf MANIFEST.MF A.jar pkg\/A.class\n-\n-MkManifestWithClassPath \"A.jar\"\n-Sys \"$jar\" cmf MANIFEST.MF B.zip pkg\/B.class\n-\n-cat >Main.java <<EOF\n-import pkg.*;\n-public class Main {\n-    public static void main(String []a) { System.exit(A.f() + B.f()); }\n-}\n-EOF\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"A.jar\" Main.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"B.zip\" Main.java\n-Success \"$java\" ${TESTVMOPTS}  -cp \"A.jar${PS}.\" Main\n-Success \"$java\" ${TESTVMOPTS}  -cp \"B.zip${PS}.\" Main\n-\n-#----------------------------------------------------------------\n-# Jar file Class-Path expanded only for jars found on user class path\n-#----------------------------------------------------------------\n-Sys mkdir jars\n-Sys mv A.jar B.zip jars\/.\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"jars\/A.jar\"       Main.java\n-Success \"$java\" ${TESTVMOPTS}  -cp \"jars\/A.jar${PS}.\" Main\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"jars\/B.zip\"       Main.java\n-Success \"$java\" ${TESTVMOPTS}  -cp \"jars\/B.zip${PS}.\" Main\n-\n-# Success \"$javac\" ${TESTTOOLVMOPTS} -extdirs \"jars\"        -cp None Main.java\n-# Success \"$javac\" ${TESTTOOLVMOPTS} -Djava.ext.dirs=\"jars\" -cp None Main.java\n-# Success \"$java\" ${TESTVMOPTS}  -Djava.ext.dirs=\"jars\" -cp .    Main\n-\n-# Success \"$javac\" ${TESTTOOLVMOPTS} -endorseddirs \"jars\"        -cp None Main.java\n-# Success \"$javac\" ${TESTTOOLVMOPTS} -Djava.endorsed.dirs=\"jars\" -cp None Main.java\n-# Success \"$java\" ${TESTVMOPTS}  -Djava.endorsed.dirs=\"jars\" -cp .    Main\n-\n-Failure \"$java\" ${TESTVMOPTS}  -Xbootclasspath\/p:\"jars\/A.jar\" -cp .    Main\n-Failure \"$java\" ${TESTVMOPTS}  -Xbootclasspath\/a:\"jars\/B.zip\" -cp .    Main\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -Xbootclasspath\/p:\"jars\/A.jar\" -cp None Main.java\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -Xbootclasspath\/a:\"jars\/B.zip\" -cp None Main.java\n-Sys mv jars\/A.jar jars\/B.zip .\n-\n-MkManifestWithClassPath \"A.jar\"\n-echo \"Main-Class: Main\" >> MANIFEST.MF\n-Sys \"$jar\" cmf MANIFEST.MF Main.jar Main.class\n-\n-Success \"$java\" ${TESTVMOPTS} -jar Main.jar\n-\n-MkManifestWithClassPath \".\"\n-Sys \"$jar\" cmf MANIFEST.MF A.jar pkg\/A.class\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"A.jar\" Main.java\n-Success \"$java\" ${TESTVMOPTS} -jar Main.jar\n-\n-MkManifestWithClassPath \"\"\n-Sys \"$jar\" cmf MANIFEST.MF A.jar pkg\/A.class\n-\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -cp \"A.jar\" Main.java\n-Failure \"$java\" ${TESTVMOPTS} -jar Main.jar\n-\n-#----------------------------------------------------------------\n-# Test new flag -e (application entry point)\n-#----------------------------------------------------------------\n-\n-cat > Hello.java <<EOF\n-import pkg.*;\n-public class Hello {\n-    public static void main(String []a) { System.out.println(\"Hello World!\"); }\n-}\n-EOF\n-\n-cat > Bye.java <<EOF\n-import pkg.*;\n-public class Bye {\n-    public static void main(String []a) { System.out.println(\"Good Bye!\"); }\n-}\n-EOF\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} Hello.java Bye.java\n-\n-# test jar creation without manifest\n-#\n-Success \"$jar\" cfe \"Hello.jar\" \"Hello\" Hello.class\n-Success \"$java\" ${TESTVMOPTS} -jar Hello.jar\n-\n-# test for overriding the manifest during jar creation\n-#\n-echo \"Main-Class: Hello\" >> MANIFEST.MF\n-\n-# test for error: \" 'e' flag and manifest with the 'Main-Class' \n-# attribute cannot be specified together, during creation\n-Failure \"$jar\" cmfe  MANIFEST.MF \"Bye.jar\" \"Bye\" Bye.class\n-\n-# test for overriding the manifest when updating the jar\n-#\n-Success \"$jar\" cfe \"greetings.jar\" \"Hello\" Hello.class\n-Success \"$jar\" ufe \"greetings.jar\" \"Bye\" Bye.class\n-Success \"$java\" ${TESTVMOPTS} -jar greetings.jar\n-\n-# test for error: \" 'e' flag and manifest with the 'Main-Class'\n-# attribute cannot be specified together, during update\n-Failure \"$jar\" umfe  MANIFEST.MF \"greetings.jar\" \"Hello\"\n-\n-# test jar updation when there are no inputfiles \n-#\n-Success \"$jar\" ufe \"Hello.jar\" \"Bye\"\n-Failure \"$java\" ${TESTVMOPTS} -jar Hello.jar\n-Success \"$jar\" umf  MANIFEST.MF \"Hello.jar\"\n-\n-# test creating jar when the to-be-archived files\n-# do not contain the specified main class, there is no check done\n-# for the presence of the main class, so the test will pass\n-#\n-Success \"$jar\" cfe \"Hello.jar\" \"Hello\" Bye.class\n-\n-# Jar creation and update when there is no manifest and inputfiles \n-# specified\n-Failure \"$jar\" cvf \"A.jar\"\n-Failure \"$jar\" uvf \"A.jar\"\n-\n-# error: no such file or directory\n-Failure \"$jar\" cvf \"A.jar\" non-existing.file\n-Failure \"$jar\" uvf \"A.jar\" non-existing.file\n-\n-Cleanup\n-\n-Bottom Line\n","filename":"test\/langtools\/tools\/javac\/Paths\/Class-Path.sh","additions":0,"deletions":198,"binary":false,"changes":198,"status":"deleted"},{"patch":"@@ -1,111 +0,0 @@\n-#!\/bin\/sh\n-#\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test \n-# @bug 4212732 6485027\n-# @summary Test handling of the Class-Path attribute in jar file manifests\n-# @author Martin Buchholz\n-#\n-# @run shell Class-Path2.sh\n-\n-# To run this test manually, simply do .\/Class-Path2.sh\n-\n-. ${TESTSRC-.}\/Util.sh\n-\n-set -u\n-\n-Cleanup() {\n-    Sys rm -rf pkg Main.java Main.class Main.jar jars\n-    Sys rm -rf MANIFEST.MF A.jar B.zip\n-}\n-\n-Cleanup\n-Sys mkdir pkg\n-\n-#----------------------------------------------------------------\n-# Create mutually referential jar files\n-#----------------------------------------------------------------\n-cat >pkg\/A.java <<EOF\n-package pkg;\n-import pkg.B;\n-public class A {\n-    public static int f() { return B.g(); }\n-    public static int g() { return 0; }\n-}\n-EOF\n-\n-cat >pkg\/B.java <<EOF\n-package pkg;\n-import pkg.A;\n-public class B {\n-    public static int f() { return A.g(); }\n-    public static int g() { return 0; }\n-}\n-EOF\n-\n-Sys \"$javac\" pkg\/A.java pkg\/B.java\n-\n-MkManifestWithClassPath \".\/sub\/B.zip\"\n-Sys \"$jar\" cmf MANIFEST.MF A.jar pkg\/A.class\n-\n-MkManifestWithClassPath \"..\/A.jar\"\n-Sys \"$jar\" cmf MANIFEST.MF B.zip pkg\/B.class\n-\n-cat >Main.java <<EOF\n-import pkg.*;\n-public class Main {\n-    public static void main(String []a) { System.exit(A.f() + B.f()); }\n-}\n-EOF\n-\n-Sys rm -rf pkg\n-\n-Sys mkdir jars\n-Sys mkdir jars\/sub\/\n-Sys mv A.jar jars\/.\n-Sys mv B.zip jars\/sub\/.\n-\n-#\n-# Test 1: Compiling \n-#\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"jars\/A.jar\" Main.java\n-Success \"$java\"  ${TESTVMOPTS}     -cp \"jars\/A.jar${PS}.\" Main\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"jars\/sub\/B.zip\"       Main.java\n-Success \"$java\"  ${TESTVMOPTS}     -cp \"jars\/sub\/B.zip${PS}.\" Main\n-\n-#\n-# Test 2: Use of extension directories is incorrect\n-#\n-\n-# Success \"$javac\" ${TESTTOOLVMOPTS} -extdirs jars          -cp None Main.java\n-# Success \"$java\"  ${TESTVMOPTS}     -Djava.ext.dirs=\"jars\" -cp .    Main\n-\n-# Success \"$javac\" ${TESTTOOLVMOPTS} -extdirs jars\/sub          -cp None Main.java\n-# Success \"$java\"  ${TESTVMOPTS}     -Djava.ext.dirs=\"jars\/sub\" -cp .    Main\n-\n-Cleanup\n-\n-Bottom Line\n","filename":"test\/langtools\/tools\/javac\/Paths\/Class-Path2.sh","additions":0,"deletions":111,"binary":false,"changes":111,"status":"deleted"},{"patch":"@@ -0,0 +1,218 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @bug 4212732 8293877\n+ * @summary Test handling of the Class-Path attribute in jar file manifests\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox Util ClassPath\n+ * @run main ClassPath\n+*\/\n+\n+\n+\/*\n+ * Converted from Class-Path.sh, originally written by Martin Buchholz.\n+ *\n+ * For the last version of the original, Class-Path.sh, see\n+ * https:\/\/git.openjdk.org\/jdk\/blob\/jdk-19%2B36\/test\/langtools\/tools\/javac\/Paths\/Class-Path.sh\n+ *\n+ * This class primarily tests that the Class-Path attribute in jar files\n+ * is handled the same way by javac and java. It also has various tests\n+ * of the jar tool itself.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n+import java.util.List;\n+\n+public class ClassPath extends Util {\n+    public static void main(String... args) throws Exception {\n+        new ClassPath().run(args);\n+    }\n+\n+    void run(String... args) throws Exception {\n+        setup();\n+        tests();\n+        cleanup();\n+        bottomLine();\n+    }\n+\n+    void setup() throws Exception {\n+        cleanup();\n+        tb.createDirectories(\"pkg\");\n+\n+        \/*----------------------------------------------------------------\n+         * Create mutually referential jar files\n+         *----------------------------------------------------------------*\/\n+\n+        Files.writeString(Path.of(\"pkg\/A.java\"), \"\"\"\n+                package pkg;\n+                import pkg.B;\n+                public class A {\n+                    public static int f() { return B.g(); }\n+                    public static int g() { return 0; }\n+                }\n+                \"\"\");\n+        Files.writeString(Path.of(\"pkg\/B.java\"), \"\"\"\n+                package pkg;\n+                import pkg.A;\n+                public class B {\n+                    public static int f() { return A.g(); }\n+                    public static int g() { return 0; }\n+                }\n+                \"\"\");\n+\n+        javac(\"pkg\/A.java\", \"pkg\/B.java\");\n+\n+        makeManifestWithClassPath(\"B.zip\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"A.jar\", \"pkg\/A.class\");\n+\n+        makeManifestWithClassPath(\"A.jar\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"B.zip\", \"pkg\/B.class\");\n+\n+        Files.writeString(Path.of(\"Main.java\"), \"\"\"\n+                import pkg.*;\n+                public class Main {\n+                    public static void main(String[] a) { System.exit(A.f() + B.f()); }\n+                }\n+                \"\"\");\n+    }\n+\n+    void cleanup() throws IOException {\n+        deleteFiles(\"pkg\", \"Main.java\", \"Main.class\", \"Main.jar\", \"jars\");\n+        deleteFiles(\"MANIFEST.MF\", \"A.jar\", \"B.zip\");\n+    }\n+\n+    void tests() throws Exception {\n+        expectPass(JAVAC, \"-cp A.jar Main.java\");\n+        expectPass(JAVAC, \"-cp B.zip Main.java\");\n+        expectPass(JAVA, \"-cp A.jar${PS}. Main\");\n+        expectPass(JAVA, \"-cp B.zip${PS}. Main\");\n+\n+        \/*----------------------------------------------------------------\n+         * Jar file Class-Path expanded only for jars found on user class path\n+         *----------------------------------------------------------------*\/\n+\n+        tb.createDirectories(\"jars\");\n+        moveFiles(List.of(\"A.jar\", \"B.zip\"), \"jars\/.\");\n+\n+        expectPass(JAVAC, \"-cp jars\/A.jar Main.java\");\n+        expectPass(JAVA, \"-cp jars\/A.jar${PS}. Main\");\n+\n+        expectPass(JAVAC, \"-cp jars\/B.zip Main.java\");\n+        expectPass(JAVA, \"-cp jars\/B.zip${PS}. Main\");\n+\n+        expectFail(JAVA, \"-Xbootclasspath\/p:jars\/A.jar -cp .    Main\");\n+        expectFail(JAVA, \"-Xbootclasspath\/a:jars\/B.zip -cp .    Main\");\n+        expectFail(JAVAC, \"-Xbootclasspath\/p:jars\/A.jar -cp None Main.java\");\n+        expectFail(JAVAC, \"-Xbootclasspath\/a:jars\/B.zip -cp None Main.java\");\n+        moveFiles(List.of(\"jars\/A.jar\", \"jars\/B.zip\"), \".\");\n+\n+        makeManifestWithClassPath(\"A.jar\");\n+        Files.writeString(Path.of(\"MANIFEST.MF\"), \"Main-Class: Main\\n\", StandardOpenOption.APPEND);\n+        jar(\"cmf\", \"MANIFEST.MF\", \"Main.jar\", \"Main.class\");\n+\n+        expectPass(JAVA, \"-jar Main.jar\");\n+\n+        makeManifestWithClassPath(\".\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"A.jar\", \"pkg\/A.class\");\n+\n+        expectPass(JAVAC, \"-cp A.jar Main.java\");\n+        expectPass(JAVA, \"-jar Main.jar\");\n+\n+        makeManifestWithClassPath(\"\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"A.jar\", \"pkg\/A.class\");\n+\n+        expectFail(JAVAC, \"-cp A.jar Main.java\");\n+        expectFail(JAVA, \"-jar Main.jar\");\n+\n+        \/*----------------------------------------------------------------\n+         * Test new flag -e (application entry point)\n+         *----------------------------------------------------------------*\/\n+\n+        Files.writeString(Path.of(\"Hello.java\"), \"\"\"\n+                import pkg.*;\n+                public class Hello {\n+                    public static void main(String[] a) { System.out.println(\"Hello World!\"); }\n+                }\n+                \"\"\");\n+\n+        Files.writeString(Path.of(\"Bye.java\"), \"\"\"\n+                import pkg.*;\n+                public class Bye {\n+                    public static void main(String[] a) { System.out.println(\"Good Bye!\"); }\n+                }\n+                \"\"\");\n+\n+        \/\/ Set an empty classpath to override any inherited setting of CLASSPATH\n+        expectPass(classpath(\"\"), JAVAC, \"Hello.java Bye.java\");\n+\n+        \/\/ test jar creation without manifest\n+        \/\/\n+        expectPass(JAR, \"cfe Hello.jar Hello Hello.class\");\n+        expectPass(JAVA, \"-jar Hello.jar\");\n+\n+        \/\/ test for overriding the manifest during jar creation\n+        \/\/\n+        Files.writeString(Path.of(\"MANIFEST.MF\"), \"Main-Class: Hello\\n\", StandardOpenOption.APPEND);\n+\n+        \/\/ test for error: \" 'e' flag and manifest with the 'Main-Class'\n+        \/\/ attribute cannot be specified together, during creation\n+        expectFail(JAR, \"cmfe MANIFEST.MF Bye.jar Bye Bye.class\");\n+\n+        \/\/ test for overriding the manifest when updating the jar\n+        \/\/\n+        expectPass(JAR, \"cfe greetings.jar Hello Hello.class\");\n+        expectPass(JAR, \"ufe greetings.jar Bye Bye.class\");\n+        expectPass(JAVA, \"-jar greetings.jar\");\n+\n+        \/\/ test for error: \" 'e' flag and manifest with the 'Main-Class'\n+        \/\/ attribute cannot be specified together, during update\n+        expectFail(JAR, \"umfe MANIFEST.MF greetings.jar Hello\");\n+\n+        \/\/ test jar update when there are no input files\n+        expectPass(JAR, \"ufe Hello.jar Bye\");\n+        expectFail(JAVA, \"-jar Hello.jar\");\n+        expectPass(JAR, \"umf MANIFEST.MF Hello.jar\");\n+\n+        \/\/ test creating jar when the to-be-archived files\n+        \/\/ do not contain the specified main class, there is no check done\n+        \/\/ for the presence of the main class, so the test will pass\n+        \/\/\n+        expectPass(JAR, \"cfe Hello.jar Hello Bye.class\");\n+\n+        \/\/ Jar creation and update when there is no manifest and inputfiles\n+        \/\/ specified\n+        expectFail(JAR, \"cvf A.jar\");\n+        expectFail(JAR, \"uvf A.jar\");\n+\n+        \/\/ error: no such file or directory\n+        expectFail(JAR, \"cvf A.jar non-existing.file\");\n+        expectFail(JAR, \"uvf A.jar non-existing.file\");\n+\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Paths\/ClassPath.java","additions":218,"deletions":0,"binary":false,"changes":218,"status":"added"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4212732 6485027 8293877\n+ * @summary Test handling of the Class-Path attribute in jar file manifests\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox Util ClassPath\n+ * @run main ClassPath2\n+ *\/\n+\n+\/*\n+ * Converted from Class-Path2.sh, originally written by Martin Buchholz.\n+ *\n+ * For the last version of the original, Class-Path2.sh, see\n+ * https:\/\/git.openjdk.org\/jdk\/blob\/jdk-19%2B36\/test\/langtools\/tools\/javac\/Paths\/Class-Path2.sh\n+ *\n+ * This class provides additional tests for the Class-Path attribute in jar\n+ * files, when the entries are not in the same directory.\n+ *\/\n+\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class ClassPath2 extends Util {\n+    public static void main(String... args) throws Exception {\n+        new ClassPath2().run(args);\n+    }\n+\n+    void run(String... args) throws Exception {\n+        setup();\n+        tests();\n+        cleanup();\n+        bottomLine();\n+    }\n+\n+    void setup() throws Exception {\n+        cleanup();\n+\n+        tb.createDirectories(\"pkg\");\n+\n+        \/*----------------------------------------------------------------\n+         * Create mutually referential jar files\n+         *----------------------------------------------------------------*\/\n+\n+        Files.writeString(Path.of(\"pkg\/A.java\"), \"\"\"\n+                package pkg;\n+                import pkg.B;\n+                public class A {\n+                    public static int f() { return B.g(); }\n+                    public static int g() { return 0; }\n+                }\n+                \"\"\");\n+        Files.writeString(Path.of(\"pkg\/B.java\"), \"\"\"\n+                package pkg;\n+                import pkg.A;\n+                public class B {\n+                    public static int f() { return A.g(); }\n+                    public static int g() { return 0; }\n+                }\n+                \"\"\");\n+\n+        javac(\"pkg\/A.java\", \"pkg\/B.java\");\n+\n+        makeManifestWithClassPath(\".\/sub\/B.zip\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"A.jar\", \"pkg\/A.class\");\n+\n+        makeManifestWithClassPath(\"..\/A.jar\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"B.zip\", \"pkg\/B.class\");\n+\n+        Files.writeString(Path.of(\"Main.java\"), \"\"\"\n+                import pkg.*;\n+                public class Main {\n+                    public static void main(String[] a) { System.exit(A.f() + B.f()); }\n+                }\n+                \"\"\");\n+\n+        deleteFiles(\"pkg\");\n+        tb.createDirectories(\"jars\");\n+        tb.createDirectories(\"jars\/sub\");\n+        tb.moveFile(\"A.jar\", \"jars\/.\");\n+        tb.moveFile(\"B.zip\", \"jars\/sub\/.\");\n+    }\n+\n+    void cleanup() throws IOException {\n+        deleteFiles(\"pkg\", \"Main.java\", \"Main.class\", \"Main.jar\", \"jars\");\n+        deleteFiles(\"MANIFEST.MF\", \"A.jar\", \"B.zip\");\n+    }\n+\n+    void tests() throws Exception {\n+\n+        \/*\n+         * Test 1: Compiling\n+         *\/\n+\n+        expectPass(JAVAC, \"-cp jars\/A.jar Main.java\");\n+        expectPass(JAVA, \"-cp jars\/A.jar${PS}. Main\");\n+\n+        expectPass(JAVAC, \"-cp jars\/sub\/B.zip Main.java\");\n+        expectPass(JAVA, \"-cp jars\/sub\/B.zip${PS}. Main\");\n+\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Paths\/ClassPath2.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -0,0 +1,253 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4884487 6295519 6236704 6429613 8293877\n+ * @summary Test for proper diagnostics during path manipulation operations\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox Util Diagnostics\n+ * @run main Diagnostics\n+ *\/\n+\n+\n+\/*\n+ * Converted from Diagnostics.sh, originally written by Martin Buchholz.\n+ *\n+ * For the last version of the original, Diagnostics.sh, see\n+ * https:\/\/git.openjdk.org\/jdk\/blob\/jdk-19%2B36\/test\/langtools\/tools\/javac\/Paths\/Diagnostics.sh\n+ *\n+ * This class primarily tests that javac generates warnings or errors\n+ * as appropriate for various input conditions.\n+ *\n+ * Note: only the {@code warning:} or {@code error:} prefixes are checked,\n+ * and not the subsequent text of the diagnostic.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Locale;\n+\n+public class Diagnostics extends Util {\n+    public static void main(String... args) throws Exception {\n+        new Diagnostics().run(args);\n+    }\n+\n+    void run(String... args) throws Exception{\n+        setup();\n+\n+        Locale prev = Locale.getDefault();\n+        Locale.setDefault(Locale.US); \/\/ diagnostics in English, please!\n+        try {\n+            tests();\n+        } finally {\n+            Locale.setDefault(prev);\n+        }\n+\n+        cleanup();\n+        bottomLine();\n+    }\n+\n+    void setup() throws IOException {\n+        cleanup();\n+        Files.writeString(Path.of(\"Main.java\"), \"public class Main{public static void main(String[]a){}}\");\n+    }\n+\n+    void cleanup() throws IOException {\n+        deleteFiles(\"Main.java\", \"Main.class\");\n+        deleteFiles(\"classes\", \"classes.foo\", \"classes.jar\", \"classes.war\", \"classes.zip\");\n+        deleteFiles(\"MANIFEST.MF\", \"classesRef.jar\", \"classesRefRef.jar\", \"jars\");\n+    }\n+\n+    void tests() throws Exception {\n+        \/*----------------------------------------------------------------\n+         * No warnings unless -Xlint:path is used\n+         *----------------------------------------------------------------*\/\n+        checkWarning(false, \"Main.java\");\n+        checkWarning(false, \"-cp .${PS}classes Main.java\");\n+\n+        \/*----------------------------------------------------------------\n+         * Warn for missing elts in user-specified paths\n+         *----------------------------------------------------------------*\/\n+\n+        \/\/ use --source 8 -target 8 with bootclasspath-related options\n+        String JDK8 = \"-source 8 -target 8 -Xlint:-options \";\n+        checkWarning(true, \"-Xlint:path -cp .${PS}classes         Main.java\");\n+        checkWarning(true, JDK8 + \"-Xlint:path -Xbootclasspath\/p:classes Main.java\");\n+        checkWarning(true, JDK8 + \"-Xlint      -Xbootclasspath\/a:classes Main.java\");\n+\n+        checkWarning(true, JDK8 + \"-Xlint:-options -Xlint:path -endorseddirs classes   Main.java\");\n+        checkWarning(true, JDK8 + \"-Xlint:-options -Xlint      -extdirs      classes   Main.java\");\n+\n+        \/*----------------------------------------------------------------\n+         * No warning for missing elts in \"system\" paths\n+         *----------------------------------------------------------------*\/\n+        \/\/ TODO? there are system paths we could check, such as --module-path\n+\n+        \/*----------------------------------------------------------------\n+         * No warning if class path element exists\n+         *----------------------------------------------------------------*\/\n+        tb.createDirectories(\"classes\");\n+\n+        checkWarning(false, \"-Xlint:path -cp .${PS}classes         Main.java\");\n+        checkWarning(false, JDK8 + \"-Xlint:path -endorseddirs  classes Main.java\");\n+        checkWarning(false, JDK8 + \"-Xlint:path -extdirs       classes Main.java\");\n+        checkWarning(false, JDK8 + \"-Xlint:path -Xbootclasspath\/p:classes Main.java\");\n+        checkWarning(false, JDK8 + \"-Xlint:path -Xbootclasspath\/a:classes Main.java\");\n+\n+        jar(\"cf\", \"classes.jar\", \"Main.class\");\n+        tb.copyFile(\"classes.jar\", \"classes.war\");\n+        tb.copyFile(\"classes.war\", \"classes.zip\");\n+        checkWarning(false, \"-Xlint:path -cp .${PS}classes.jar     Main.java\");\n+        checkWarning(true,  \"-Xlint:path -cp .${PS}classes.war     Main.java\");\n+        checkWarning(false, \"-Xlint:path -cp .${PS}classes.zip     Main.java\");\n+\n+        \/*----------------------------------------------------------------\n+         * Warn if -Xlint is used and if class path element refers to\n+         * regular file which doesn't look like a zip file, but is\n+         *----------------------------------------------------------------*\/\n+        tb.copyFile(\"classes.war\", \"classes.foo\");\n+        checkWarning(true, \"-Xlint:path -cp .${PS}classes.foo     Main.java\");\n+\n+        \/*----------------------------------------------------------------\n+         * No error if class path element refers to regular file which is\n+         * not a zip file\n+         *----------------------------------------------------------------*\/\n+        checkError(false, \"-cp Main.java Main.java\"); \/\/ Main.java is NOT a jar file\n+        checkError(false, \"Main.java\");\n+\n+        \/*----------------------------------------------------------------\n+         * Warn if -Xlint is used and if class path element refers to\n+         * regular file which is not a zip file\n+         *----------------------------------------------------------------*\/\n+        checkWarning(true, \"-Xlint -cp Main.java Main.java\"); \/\/ Main.java is NOT a jar file\n+\n+        \/*----------------------------------------------------------------\n+         * Test jar file class path reference recursion\n+         *----------------------------------------------------------------*\/\n+        makeManifestWithClassPath(\"classesRef.jar\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"classesRefRef.jar\", \"Main.class\");\n+\n+        \/*----------------------------------------------------------------\n+         * Non-existent recursive Class-Path reference gives warning\n+         *----------------------------------------------------------------*\/\n+        checkWarning(false, \"                   -classpath   classesRefRef.jar Main.java\");\n+        checkWarning(true, \"        -Xlint      -classpath   classesRefRef.jar Main.java\");\n+        checkWarning(false, JDK8 + \"-Xlint -Xbootclasspath\/p:classesRefRef.jar Main.java\");\n+\n+        createBadJarFiles(\"classesRef.jar\");\n+\n+        \/*----------------------------------------------------------------\n+         * Non-jar file recursive Class-Path reference gives error\n+         *----------------------------------------------------------------*\/\n+\n+        checkError(true, \"        -classpath        classesRefRef.jar Main.java\");\n+        checkError(false, JDK8 + \"-Xbootclasspath\/a:classesRefRef.jar Main.java\");\n+\n+        makeManifestWithClassPath(\"classes\");\n+        jar(\"cmf\", \"MANIFEST.MF\", \"classesRef.jar\", \"Main.class\");\n+\n+        \/*----------------------------------------------------------------\n+         * Jar file recursive Class-Path reference is OK\n+         *----------------------------------------------------------------*\/\n+        checkWarning(false, \"       -Xlint      -classpath   classesRefRef.jar Main.java\");\n+        checkWarning(false, JDK8 + \"-Xlint -Xbootclasspath\/p:classesRefRef.jar Main.java\");\n+\n+\n+        \/*----------------------------------------------------------------\n+         * Class-Path attribute followed in extdirs or endorseddirs\n+         *----------------------------------------------------------------*\/\n+        tb.createDirectories(\"jars\");\n+        tb.copyFile(\"classesRefRef.jar\", \"jars\/.\");\n+        checkWarning(true, JDK8 + \"-Xlint -extdirs      jars Main.java\");\n+        checkWarning(true, JDK8 + \"-Xlint -endorseddirs jars Main.java\");\n+\n+        \/*----------------------------------------------------------------\n+         * Bad Jar file in extdirs and endorseddirs should not be ignored\n+         *----------------------------------------------------------------*\/\n+        createBadJarFiles(\"jars\/classesRef.jar\");\n+        checkError(true, JDK8 + \"-Xlint -extdirs      jars Main.java\");\n+        checkError(true, JDK8 + \"-Xlint -endorseddirs jars Main.java\");\n+    }\n+\n+    void checkWarning(boolean expect, String args) throws Exception {\n+        Result result = javac(splitArgs(args));\n+        int exitCode = result.exitCode();\n+        if (exitCode != 0) {\n+            throw new Exception(\"javac failed: exit code \" + exitCode);\n+        }\n+        String output = result.out();\n+        if (output.contains(\"warning:\")) {\n+            if (!expect) {\n+                out.println(\"FAIL: Command 'javac \" + args + \"' printed an unexpected warning\");\n+                failCount++;\n+            } else {\n+                passCount++;\n+            }\n+        } else {\n+            if (expect) {\n+                out.println(\"FAIL: Command 'javac \" + args + \"' did not generate the expected warning\");\n+                failCount++;\n+            } else {\n+                passCount++;\n+            }\n+        }\n+    }\n+\n+    void checkError(boolean expect, String args) throws Exception {\n+        Result result = javac(splitArgs(args));\n+        int exitCode = result.exitCode();\n+        boolean ok = true;\n+        if (expect) {\n+            if (exitCode == 0) {\n+                out.println(\"FAIL: Command 'javac \" + args + \" was supposed to exit with non-zero return code\");\n+                ok = false;\n+            }\n+            if (!result.out().contains(\"error:\")) {\n+                out.println(\"FAIL: Command 'javac \" + args + \" did not generate any error message\");\n+                ok = false;\n+            }\n+        } else {\n+            if (exitCode != 0) {\n+                out.println(\"FAIL: Command 'javac \" + args + \" failed with a non-zero return code\");\n+                ok = false;\n+            }\n+            if (result.out().contains(\"error:\")) {\n+                out.println(\"FAIL: Command 'javac \" + args + \" printed an unexpected error message\");\n+                ok = false;\n+            }\n+        }\n+        if (ok) {\n+            passCount++;\n+        } else {\n+            failCount++;\n+        }\n+    }\n+\n+    void createBadJarFiles(String... paths) throws IOException {\n+        for (String p : paths) {\n+            Files.writeString(Path.of(p), \"not a jar file\\n\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Paths\/Diagnostics.java","additions":253,"deletions":0,"binary":false,"changes":253,"status":"added"},{"patch":"@@ -1,210 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-# @test\n-# @bug 4884487 6295519 6236704 6429613\n-# @summary Test for proper diagnostics during path manipulation operations\n-# @author Martin Buchholz\n-#\n-# @run shell\/timeout=180 Diagnostics.sh\n-\n-# To run this test manually, simply do .\/Diagnostics.sh\n-\n-. ${TESTSRC-.}\/Util.sh\n-\n-set -u\n-\n-# BCP=`DefaultBootClassPath`\n-\n-DiagnosticsInEnglishPlease\n-\n-No() { NO=\"no\"; \"$@\"; NO=\"\"; }  # No means NO!\n-\n-Warning() {\n-    HorizontalRule\n-    echo \"$@\"\n-    output=`\"$@\" 2>&1`; rc=\"$?\"\n-    output2=`echo \"$output\" | grep -v \"bootstrap class path not set in conjunction with -source\"`\n-    test -n \"$output2\" && echo \"$output\"\n-    test $rc -eq 0 || Fail \"Command \\\"$*\\\" failed with exitValue $rc\";\n-    case \"$output2\" in *warning:*) gotwarning=\"yes\";; *) gotwarning=\"no\";; esac\n-\n-    if test \"$gotwarning\" = \"yes\" -a \"$NO\" = \"no\"; then\n-        Fail \"Command \\\"$*\\\" printed an unexpected warning\"\n-    elif test \"$gotwarning\" = \"no\" -a \"$NO\" != \"no\"; then\n-        Fail \"Command \\\"$*\\\" did not generate the expected warning\"\n-    fi\n-}\n-\n-Error() {\n-    HorizontalRule\n-    echo \"$@\"\n-    output=`\"$@\" 2>&1`; rc=\"$?\"\n-    test -n \"$output\" && echo \"$output\"\n-    case \"$output\" in *error:*) goterror=\"yes\";; *) goterror=\"no\";; esac\n-\n-    if test \"$NO\" = \"no\"; then\n-        test \"$rc\" -ne 0 && \\\n-            Fail \"Command \\\"$*\\\" failed with return code $rc\"\n-        test \"$goterror\" = \"yes\" && \\\n-            Fail \"Command \\\"$*\\\" did not generate any error message\"\n-    else\n-        test \"$rc\" -eq 0 && \\\n-            Fail \"Command \\\"$*\\\" was supposed to Die with fatal error\";\n-        test \"$goterror\" = \"no\" && \\\n-            Fail \"Command \\\"$*\\\" printed an unexpected error message\"\n-    fi\n-}\n-\n-Cleanup() {\n-    Sys rm -rf Main.java Main.class\n-    Sys rm -rf classes classes.foo classes.jar classes.war classes.zip\n-    Sys rm -rf MANIFEST.MF classesRef.jar classesRefRef.jar jars\n-}\n-\n-Cleanup\n-echo \"public class Main{public static void main(String[]a){}}\" > Main.java\n-\n-# We need to set -source 8 -target 8 for those cases where the option is\n-# not legal in 9 and later. However, that triggers an additional warning\n-# about not setting bootclasspath, which is filtered out in Warning.\n-# The alternative would be to extract a minimal rt.jar from JDK and\n-# specify that with -bootclasspath.\n-SRCTRG8=\"-source 8 -target 8 -Xlint:-options\"\n-\n-#----------------------------------------------------------------\n-# No warnings unless -Xlint:path is used\n-#----------------------------------------------------------------\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} -cp \".${PS}classes\" Main.java\n-\n-#----------------------------------------------------------------\n-# Warn for missing elts in user-specified paths\n-#----------------------------------------------------------------\n-Warning \"$javac\" ${TESTTOOLVMOPTS}           -Xlint:path -cp \".${PS}classes\"         Main.java\n-Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-Xbootclasspath\/p:classes\" Main.java\n-Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint      \"-Xbootclasspath\/a:classes\" Main.java\n-\n-Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-endorseddirs\" \"classes\"   Main.java\n-Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint      \"-extdirs\"      \"classes\"   Main.java\n-#Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-Xbootclasspath:classes${PS}${BCP}\" Main.java\n-\n-#----------------------------------------------------------------\n-# No warning for missing elts in \"system\" paths\n-#----------------------------------------------------------------\n-# No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path \"-J-Djava.endorsed.dirs=classes\" Main.java\n-# No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path \"-J-Djava.ext.dirs=classes\"      Main.java\n-# No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path \"-J-Xbootclasspath\/p:classes\"    Main.java\n-# No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path \"-J-Xbootclasspath\/a:classes\"    Main.java\n-# No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path \"-J-Xbootclasspath:classes${PS}${BCP}\" Main.java\n-\n-#----------------------------------------------------------------\n-# No warning if class path element exists\n-#----------------------------------------------------------------\n-Sys mkdir classes\n-No Warning \"$javac\" ${TESTTOOLVMOPTS}           -Xlint:path -cp \".${PS}classes\"         Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-endorseddirs\"   \"classes\" Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-extdirs\"        \"classes\" Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-Xbootclasspath\/p:classes\" Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-Xbootclasspath\/a:classes\" Main.java\n-#No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint:path \"-Xbootclasspath:classes${PS}${BCP}\" Main.java\n-\n-Sys \"$jar\" cf classes.jar Main.class\n-Sys cp classes.jar classes.war\n-Sys cp classes.war classes.zip\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path -cp \".${PS}classes.jar\"     Main.java\n-   Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path -cp \".${PS}classes.war\"     Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path -cp \".${PS}classes.zip\"     Main.java\n-\n-#----------------------------------------------------------------\n-# Warn if -Xlint is used and if class path element refers to\n-# regular file which doesn't look like a zip file, but is\n-#----------------------------------------------------------------\n-Sys cp classes.war classes.foo\n-   Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint:path -cp \".${PS}classes.foo\"     Main.java\n-\n-\n-#----------------------------------------------------------------\n-# No error if class path element refers to regular file which is\n-# not a zip file\n-#----------------------------------------------------------------\n-No Error \"$javac\" ${TESTTOOLVMOPTS} -cp Main.java Main.java # Main.java is NOT a jar file\n-No Error \"$javac\" ${TESTTOOLVMOPTS} Main.java\n-\n-#----------------------------------------------------------------\n-# Warn if -Xlint is used and if class path element refers to\n-# regular file which is not a zip file\n-#----------------------------------------------------------------\n-Warning \"$javac\" ${TESTTOOLVMOPTS} -Xlint -cp Main.java Main.java # Main.java is NOT a jar file\n-\n-#----------------------------------------------------------------\n-# Test jar file class path reference recursion\n-#----------------------------------------------------------------\n-MkManifestWithClassPath classesRef.jar\n-Sys \"$jar\" cmf MANIFEST.MF classesRefRef.jar Main.class\n-\n-#----------------------------------------------------------------\n-# Non-existent recursive Class-Path reference gives warning\n-#----------------------------------------------------------------\n-No Warning \"$javac\" ${TESTTOOLVMOPTS}                        -classpath   classesRefRef.jar Main.java\n-   Warning \"$javac\" ${TESTTOOLVMOPTS}            -Xlint      -classpath   classesRefRef.jar Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint -Xbootclasspath\/p:classesRefRef.jar Main.java\n-\n-BadJarFile classesRef.jar\n-\n-#----------------------------------------------------------------\n-# Non-jar file recursive Class-Path reference gives error\n-#----------------------------------------------------------------\n-   Error \"$javac\" ${TESTTOOLVMOPTS}            -classpath        classesRefRef.jar Main.java\n-No Error \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xbootclasspath\/a:classesRefRef.jar Main.java\n-\n-MkManifestWithClassPath classes\n-Sys \"$jar\" cmf MANIFEST.MF classesRef.jar Main.class\n-\n-#----------------------------------------------------------------\n-# Jar file recursive Class-Path reference is OK\n-#----------------------------------------------------------------\n-No Warning \"$javac\" ${TESTTOOLVMOPTS}            -Xlint      -classpath   classesRefRef.jar Main.java\n-No Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint -Xbootclasspath\/p:classesRefRef.jar Main.java\n-\n-#----------------------------------------------------------------\n-# Class-Path attribute followed in extdirs or endorseddirs\n-#----------------------------------------------------------------\n-Sys mkdir jars\n-Sys cp classesRefRef.jar jars\/.\n-   Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint -extdirs      jars Main.java\n-   Warning \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint -endorseddirs jars Main.java\n-\n-#----------------------------------------------------------------\n-# Bad Jar file in extdirs and endorseddirs should not be ignored\n-#----------------------------------------------------------------\n-BadJarFile jars\/classesRef.jar\n-   Error \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint -extdirs      jars Main.java\n-   Error \"$javac\" ${TESTTOOLVMOPTS} ${SRCTRG8} -Xlint -endorseddirs jars Main.java\n-\n-Cleanup\n-\n-Bottom Line\n","filename":"test\/langtools\/tools\/javac\/Paths\/Diagnostics.sh","additions":0,"deletions":210,"binary":false,"changes":210,"status":"deleted"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @bug 4940642 8293877\n+ * @summary Check for -help and -X flags\n+ *\/\n+\n+\/*\n+ * Converted from Help.sh, originally written by Martin Buchholz\n+ *\n+ * For the last version of the original, Help.sh, see\n+ * https:\/\/git.openjdk.org\/jdk\/blob\/jdk-19%2B36\/test\/langtools\/tools\/javac\/Paths\/Help.sh\n+ *\n+ * This class provides rudimentary tests of the javac command-line help.\n+ *\/\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.spi.ToolProvider;\n+\n+public class Help {\n+    public static void main(String... args) throws Exception {\n+        new Help().run(args);\n+    }\n+\n+    void run(String... args) throws Exception {\n+        String helpText = javac(\"-help\");\n+        check(helpText,\n+                \"-X \", \"-J\", \"-classpath \", \"-cp \", \"-bootclasspath \", \"-sourcepath \");\n+\n+        String xText = javac(\"-X\");\n+        check(xText, \"-Xbootclasspath\/p:\");\n+    }\n+\n+    void check(String text, String... options) throws Exception {\n+        for (String opt : options) {\n+            System.err.println(\"Checking '\" + opt + \"'\");\n+            if (!text.contains(opt)) {\n+                text.lines().forEach(System.err::println);\n+                throw new Exception(\"Bad help output\");\n+            }\n+        }\n+    }\n+\n+    String javac(String... args) throws Exception {\n+        var javac = ToolProvider.findFirst(\"javac\")\n+                .orElseThrow(() -> new Exception(\"cannot find javac\"));\n+        try (StringWriter sw = new StringWriter();\n+             PrintWriter pw = new PrintWriter(sw)) {\n+             int rc = javac.run(pw, pw, args);\n+             if (rc != 0) {\n+                 throw new Error(\"unexpected exit from javac: \" + rc);\n+             }\n+             pw.flush();\n+             return sw.toString();\n+        }\n+    }\n+}\n+\n","filename":"test\/langtools\/tools\/javac\/Paths\/Help.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -1,69 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-# @test\n-# @bug 4940642\n-# @summary Check for -help and -X flags\n-# @author Martin Buchholz\n-#\n-# @run shell Help.sh\n-\n-# To run this test manually, simply do .\/MineField.sh\n-\n-\n-. ${TESTSRC-.}\/Util.sh\n-\n-set -u\n-\n-DiagnosticsInEnglishPlease\n-\n-HELP=\"`\\\"$javac\\\" ${TESTTOOLVMOPTS} -help 2>&1`\"\n-XHELP=\"`\\\"$javac\\\" ${TESTTOOLVMOPTS} -X 2>&1`\"\n-\n-#----------------------------------------------------------------\n-# Standard options\n-#----------------------------------------------------------------\n-for opt in \\\n-    \"-X \" \\\n-    \"-J\" \\\n-    \"-classpath \" \\\n-    \"-cp \" \\\n-    \"-bootclasspath \" \\\n-    \"-sourcepath \"; \n-do\n-    case \"$HELP\" in *\"$opt\"*) ;; *) Fail \"Bad help output\" ;; esac\n-done\n-\n-#----------------------------------------------------------------\n-# Non-standard options\n-#----------------------------------------------------------------\n-for opt in \\\n-    \"-Xbootclasspath\/p:\"; \n-do\n-    case \"$XHELP\" in *\"$opt\"*) ;; *) Fail \"Bad help output\" ;; esac\n-done\n-\n-Bottom Line\n","filename":"test\/langtools\/tools\/javac\/Paths\/Help.sh","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"},{"patch":"@@ -0,0 +1,352 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @bug 4758537 4809833 8149599 8293877\n+ * @summary Test that javac and java find files in similar ways\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox Util MineField\n+ * @run main MineField\n+ *\/\n+\n+\/*\n+ * Converted from MineField.sh, originally written by Martin Buchholz.\n+ *\n+ * For the last version of the original, MineField.sh, see\n+ * https:\/\/git.openjdk.org\/jdk\/blob\/jdk-19%2B36\/test\/langtools\/tools\/javac\/Paths\/MineField.sh\n+ *\n+ * This class primarily tests that javac and the java launcher provide\n+ * equivalent handling of all path-related options, like {@code -classpath}.\n+ *\/\n+\n+\/*\n+#----------------------------------------------------------------\n+# The search order for classes used by both java and javac is:\n+#\n+# -Xbootclasspath\/p:<path>\n+# -endorseddirs <dirs> or -Djava.endorsed.dirs=<dirs> (search for jar\/zip only)\n+# -bootclasspath <path> or -Xbootclasspath:<path>\n+# -Xbootclasspath\/a:<path>\n+# -extdirs <dirs> or -Djava.ext.dirs=<dirs> (search for jar\/zip only)\n+# -classpath <path>, -cp <path>, env CLASSPATH=<path>\n+#\n+# Peculiarities of the class file search:\n+# - Empty elements of the (user) classpath default to \".\",\n+#   while empty elements of other paths are ignored.\n+# - Only for the user classpath is an empty string value equivalent to \".\"\n+# - Specifying a bootclasspath on the command line obliterates any\n+#   previous -Xbootclasspath\/p: or -Xbootclasspath\/a: command line flags.\n+#\n+# JDK 9 update:\n+#   java: The java launcher does not support any of the following:\n+#       * -Xbootclasspath\/p: -Xbootclasspath:\n+#       * -endorseddirs -Djava.endorsed.dirs\n+#       * -extdirs -Djava.ext.dirs\n+#       All test cases exercising these features have been removed.\n+#   javac: The following features are only supported when compiling\n+#       for older releases:\n+#       * -Xbootclasspath\/p: -Xbootclasspath: -bootclasspath -Xbootclasspath\/a:\n+#       * -endorseddirs -Djava.endorsed.dirs\n+#       * -extdirs -Djava.ext.dirs\n+#       All test cases exercising these features have been modified to\n+#       use -source 8 -target 8.  In addition, javac test cases involving\n+#       use of the runtime properties java.endorsed.dirs and java.extdirs\n+#       (by means of -J-Dname=value) have been removed.\n+#       Although the primary purpose of the test cases in this file is to\n+#       compare javac and java behavior, some tests remain for javac for\n+#       which there is no java equivalent. However, the cases remain as useful\n+#       test cases for javac handling of the paths involved.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class MineField extends Util {\n+    public static void main(String... args) throws Exception {\n+        new MineField().run(args);\n+    }\n+\n+    void run(String... args) throws Exception{\n+        setup();\n+        tests();\n+        cleanup();\n+        bottomLine();\n+    }\n+\n+    void cleanup() throws IOException {\n+        deleteFiles(\"GooSrc\", \"GooJar\", \"GooZip\", \"GooClass\");\n+        deleteFiles(\"BadSrc\", \"BadJar\", \"BadZip\", \"BadClass\");\n+        deleteFiles(\"OneDir\", \"Main.java\", \"MANIFEST.MF\");\n+        deleteFiles(listFiles(Path.of(\".\"), \"*.class\"));\n+        deleteFiles(\"java-lang.jar\");\n+    }\n+\n+    \/**\n+     * \"Prepare the minefield\".\n+     *\/\n+    void setup() throws Exception {\n+        cleanup();\n+\n+        tb.createDirectories(\"GooSrc\", \"GooJar\", \"GooZip\", \"GooClass\");\n+        tb.createDirectories(\"BadSrc\", \"BadJar\", \"BadZip\", \"BadClass\");\n+\n+        Files.writeString(Path.of(\"Lib.java\"),\n+                \"public class Lib {public static void f(){}}\");\n+        javac(\"Lib.java\");\n+        jar(\"cf\", \"GooJar\/Lib.jar\", \"Lib.class\");\n+        jar(\"cf\", \"GooZip\/Lib.zip\", \"Lib.class\");\n+        tb.moveFile(\"Lib.class\", \"GooClass\/.\");\n+        tb.moveFile(\"Lib.java\", \"GooSrc\/.\");\n+        checkFiles(\"GooZip\/Lib.zip\", \"GooJar\/Lib.jar\", \"GooSrc\/Lib.java\");\n+\n+        Files.writeString(Path.of(\"Lib.java\"),\n+                \"public class Lib {\/* Bad *\/}\");\n+        javac(\"Lib.java\");\n+        jar(\"cf\", \"BadJar\/Lib.jar\", \"Lib.class\");\n+        jar(\"cf\", \"BadZip\/Lib.zip\", \"Lib.class\");\n+        tb.moveFile(\"Lib.class\", \"BadClass\/.\");\n+        tb.moveFile(\"Lib.java\", \"BadSrc\/.\");\n+        checkFiles(\"BadZip\/Lib.zip\", \"BadJar\/Lib.jar\", \"BadSrc\/Lib.java\");\n+\n+        Files.writeString(Path.of(\"Main.java\"),\n+                \"public class Main {public static void main(String[] a) {Lib.f();}}\");\n+        Path libModules = javaHome.resolve(\"lib\").resolve(\"modules\");\n+        if (Files.isReadable(libModules)) {\n+            jimage(\"extract\", \"--dir\", \"modules\", libModules.toString());\n+            jar(\"cf\", \"java-lang.jar\", \"-C\", \"modules\/java.base\", \"java\/lang\");\n+            deleteFiles(\"modules\");\n+        } else {\n+            Path modules = javaHome.resolve(\"modules\");\n+            if (Files.isDirectory(modules)) {\n+                jar(\"cf\", \"java-lang.jar\", \"-C\", modules.resolve(\"java.base\").toString(), \"java\/lang\");\n+            } else {\n+                throw new Exception(\"Cannot create java-lang.jar\");\n+            }\n+        }\n+    }\n+\n+    void tests() throws Exception {\n+\n+        \/\/----------------------------------------------------------------\n+        \/\/ Verify that javac class search order is the same as java's\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:GooClass\n+                -bootclasspath java-lang.jar${PS}BadZip\/Lib.zip\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:BadClass${PS}GooClass\n+                -bootclasspath java-lang.jar${PS}GooZip\/Lib.zip${PS}BadClass\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:BadJar\/Lib.jar\n+                -Xbootclasspath:java-lang.jar${PS}GooClass\n+                Main.java\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -bootclasspath java-lang.jar${PS}GooZip\/Lib.zip\n+                -Xbootclasspath\/p:BadClass\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -bootclasspath java-lang.jar${PS}BadZip\/Lib.zip\n+                -Xbootclasspath\/p:GooClass${PS}BadJar\/Lib.jar\n+                Main.java\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:BadClass\n+                -Xbootclasspath\/a:GooClass\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:GooClass${PS}BadClass\n+                -Xbootclasspath\/a:BadClass\n+                Main.java\"\"\");\n+\n+        expectPass(JAVA, \"\"\"\n+                -Xbootclasspath\/a:GooClass\n+                Main\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:GooClass\n+                -Xbootclasspath:BadClass${PS}java-lang.jar\n+                -Xbootclasspath\/a:GooClass\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/p:BadClass\n+                -Xbootclasspath:GooClass${PS}BadClass${PS}java-lang.jar\n+                -Xbootclasspath\/a:BadClass\n+                Main.java\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -endorseddirs BadClass${PS}GooZip${PS}BadJar\n+                -Xbootclasspath:\"BadClass${PS}java-lang.jar\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Djava.endorsed.dirs=BadClass${PS}GooZip${PS}BadJar\n+                -Xbootclasspath:BadClass${PS}java-lang.jar\n+                Main.java\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/a:BadClass\n+                -extdirs GooZip\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Xbootclasspath\/a:GooClass${PS}BadClass\n+                -extdirs BadZip\n+                Main.java\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -extdirs GooClass${PS}BadZip\n+                -cp GooZip\/Lib.zip\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -extdirs BadClass${PS}GooZip${PS}BadJar\n+                -cp BadZip\/Lib.zip\n+                Main.java\"\"\");\n+\n+        expectPass(JAVAC, \"\"\"\n+                -source 8 -target 8\n+                -Djava.ext.dirs=GooZip${PS}BadJar\n+                -classpath BadZip\/Lib.zip\n+                Main.java\"\"\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(JAVAC, \"-classpath BadClass${PS}GooClass Main.java\");\n+        expectPass(JAVAC, \"-classpath GooClass${PS}BadClass Main.java\");\n+        expectFail(JAVA,  \"-classpath BadClass${PS}GooClass${PS}. Main\");\n+        expectPass(JAVA,  \"-classpath GooClass${PS}BadClass${PS}. Main\");\n+\n+        expectFail(JAVAC, \"-cp BadJar\/Lib.jar${PS}GooZip\/Lib.zip Main.java\");\n+        expectPass(JAVAC, \"-cp GooJar\/Lib.jar${PS}BadZip\/Lib.zip Main.java\");\n+        expectFail(JAVA,  \"-cp BadJar\/Lib.jar${PS}${PS}GooZip\/Lib.zip Main\");\n+        expectPass(JAVA,  \"-cp GooJar\/Lib.jar${PS}${PS}BadZip\/Lib.zip Main\");\n+\n+        \/\/----------------------------------------------------------------\n+\n+        expectFail(classpath(\"BadZip\/Lib.zip${PS}GooJar\/Lib.jar\"), JAVAC,\"Main.java\");\n+        expectPass(classpath(\"GooZip\/Lib.zip${PS}BadJar\/Lib.jar\"), JAVAC, \"Main.java\");\n+        expectFail(classpath(\"${PS}BadZip\/Lib.zip${PS}GooJar\/Lib.jar\"), JAVA, \"Main\");\n+        expectPass(classpath(\"${PS}GooZip\/Lib.zip${PS}BadJar\/Lib.jar\"), JAVA, \"Main\");\n+\n+        \/\/----------------------------------------------------------------\n+        \/\/ Check behavior of empty paths and empty path elements\n+        \/\/----------------------------------------------------------------\n+\n+        Path GooClass = Path.of(\"GooClass\");\n+        Path GooJar = Path.of(\"GooJar\");\n+\n+        expectFail(GooClass,  JAVAC, \"-cp .. ..\/Main.java\");\n+        expectFail(GooClass,  JAVA, \"-cp .. Main\");\n+\n+        \/\/ Unspecified classpath defaults to \".\"\n+        Path OneDir = Path.of(\"OneDir\");\n+        tb.createDirectories(OneDir);\n+        tb.copyFile(Path.of(\"Main.java\"), OneDir);\n+        tb.copyFile(GooClass.resolve(\"Lib.class\"), OneDir);\n+        expectPass(OneDir,  JAVAC, \"Main.java\");\n+        expectPass(OneDir,  JAVA, \"Main\");\n+\n+        \/\/ Empty classpath elements mean \".\"\n+        expectPass(GooClass,  JAVAC, \"-cp ${PS}.. ..\/Main.java\");\n+        expectPass(GooClass,  JAVA,  \"-cp ${PS}.. Main\");\n+\n+        expectPass(GooClass,  JAVAC, \"-cp ..${PS} ..\/Main.java\");\n+        expectPass(GooClass,  JAVA,  \"-cp ..${PS} Main\");\n+\n+        expectPass(GooClass,  JAVAC, \"-cp ..${PS}${PS}\/xyzzy ..\/Main.java\");\n+        expectPass(GooClass,  JAVA,  \"-cp ..${PS}${PS}\/xyzzy Main\");\n+\n+        \/\/ All other empty path elements are ignored.\n+\n+        \/\/ note presence of empty arg in this invocation\n+        expectFail(GooJar,  null, JAVAC, \"-source\", \"8\", \"-target\", \"8\", \"-extdirs\", \"\", \"-cp\", \"..\", \"..\/Main.java\");\n+\n+        expectFail(GooJar,  JAVAC, \"-source 8 -target 8 -extdirs        ${PS} -cp .. ..\/Main.java\");\n+        expectFail(GooJar,  JAVAC, \"-source 8 -target 8 -Djava.ext.dirs=${PS} -cp .. ..\/Main.java\");\n+\n+        expectPass(GooJar,  JAVAC, \"-source 8 -target 8 -extdirs        . -cp .. ..\/Main.java\");\n+        expectPass(GooJar,  JAVAC, \"-source 8 -target 8 -Djava.ext.dirs=. -cp .. ..\/Main.java\");\n+\n+        expectFail(GooJar,  JAVAC, \"-source 8 -target 8 -Djava.endorsed.dirs= -cp .. ..\/Main.java\");\n+\n+        expectFail(GooJar,  JAVAC, \"-source 8 -target 8 -endorseddirs        ${PS} -cp .. ..\/Main.java\");\n+\n+        expectPass(GooJar,  JAVAC, \"-source 8 -target 8 -Djava.endorsed.dirs=. -cp .. ..\/Main.java\");\n+\n+        expectFail(GooClass,  JAVAC, \"-source 8 -target 8 -Xbootclasspath\/p: -cp .. ..\/Main.java\");\n+\n+        expectPass(GooClass,  JAVAC, \"-source 8 -target 8 -Xbootclasspath\/p:. -cp .. ..\/Main.java\");\n+\n+        expectFail(GooClass,  JAVAC, \"-source 8 -target 8 -Xbootclasspath:..\/java-lang.jar -cp .. ..\/Main.java\");\n+\n+        expectPass(GooClass,  JAVAC, \"-source 8 -target 8 -Xbootclasspath:..\/java-lang.jar${PS}. -cp .. ..\/Main.java\");\n+\n+        expectFail(GooClass,  JAVAC, \"-source 8 -target 8 -Xbootclasspath\/a: -cp .. ..\/Main.java\");\n+        expectFail(GooClass,  JAVA, \"-Xbootclasspath\/a: -cp .. Main\");\n+\n+        expectPass(GooClass,  JAVAC, \"-source 8 -target 8 -Xbootclasspath\/a:. -cp .. ..\/Main.java\");\n+        expectPass(GooClass,  JAVA, \"-Xbootclasspath\/a:. -cp .. Main\");\n+\n+    }\n+\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/Paths\/MineField.java","additions":352,"deletions":0,"binary":false,"changes":352,"status":"added"},{"patch":"@@ -1,277 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-# @test\n-# @bug 4758537 4809833 8149599\n-# @summary Test that javac and java find files in similar ways\n-# @author Martin Buchholz\n-#\n-# @run shell\/timeout=600 MineField.sh\n-\n-# To run this test manually, simply do .\/MineField.sh\n-\n-#----------------------------------------------------------------\n-# The search order for classes used by both java and javac is:\n-#\n-# -Xbootclasspath\/p:<path>\n-# -endorseddirs <dirs> or -Djava.endorsed.dirs=<dirs> (search for jar\/zip only)\n-# -bootclasspath <path> or -Xbootclasspath:<path>\n-# -Xbootclasspath\/a:<path>\n-# -extdirs <dirs> or -Djava.ext.dirs=<dirs> (search for jar\/zip only)\n-# -classpath <path>, -cp <path>, env CLASSPATH=<path>\n-#\n-# Peculiarities of the class file search:\n-# - Empty elements of the (user) classpath default to \".\",\n-#   while empty elements of other paths are ignored.\n-# - Only for the user classpath is an empty string value equivalent to \".\"\n-# - Specifying a bootclasspath on the command line obliterates any\n-#   previous -Xbootclasspath\/p: or -Xbootclasspath\/a: command line flags.\n-#\n-# JDK 9 update:\n-#   java: The java launcher does not support any of the following:\n-#       * -Xbootclasspath\/p: -Xbootclasspath:\n-#       * -endorseddirs -Djava.endorsed.dirs\n-#       * -extdirs -Djava.ext.dirs\n-#       All test cases exercising these features have been removed.\n-#   javac: The following features are only supported when compiling\n-#       for older releases:\n-#       * -Xbootclasspath\/p: -Xbootclasspath: -bootclasspath -Xbootclasspath\/a:\n-#       * -endorseddirs -Djava.endorsed.dirs\n-#       * -extdirs -Djava.ext.dirs\n-#       All test cases exercising these features have been modified to\n-#       use -source 8 -target 8.  In addition, javac test cases involving\n-#       use of the runtime properties java.endorsed.dirs and java.extdirs\n-#       (by means of -J-Dname=value) have been removed.\n-#       Although the primary purpose of the test cases in this file is to\n-#       compare javac and java behavior, some tests remain for javac for\n-#       which there is no java equivalent. However, the cases remain as useful\n-#       test cases for javac handling of the paths involved.\n-\n-#----------------------------------------------------------------\n-\n-. ${TESTSRC-.}\/Util.sh\n-\n-set -u\n-\n-#----------------------------------------------------------------\n-# Prepare the \"Minefield\"\n-#----------------------------------------------------------------\n-Cleanup() {\n-    Sys rm -rf GooSrc GooJar GooZip GooClass\n-    Sys rm -rf BadSrc BadJar BadZip BadClass\n-    Sys rm -rf OneDir *.class Main.java MANIFEST.MF\n-    Sys rm -f java-lang.jar\n-}\n-\n-Cleanup\n-Sys mkdir  GooSrc GooJar GooZip GooClass\n-Sys mkdir  BadSrc BadJar BadZip BadClass\n-\n-echo 'public class Lib {public static void f(){}}' > Lib.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Lib.java\n-Sys \"$jar\" cf GooJar\/Lib.jar Lib.class\n-Sys \"$jar\" cf GooZip\/Lib.zip Lib.class\n-Sys mv Lib.class GooClass\/.\n-Sys mv Lib.java GooSrc\/.\n-CheckFiles GooZip\/Lib.zip GooJar\/Lib.jar GooSrc\/Lib.java\n-\n-echo 'public class Lib {\/* Bad *\/}' > Lib.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Lib.java\n-Sys \"$jar\" cf BadJar\/Lib.jar Lib.class\n-Sys \"$jar\" cf BadZip\/Lib.zip Lib.class\n-Sys mv Lib.class BadClass\/.\n-Sys mv Lib.java BadSrc\/.\n-CheckFiles BadZip\/Lib.zip BadJar\/Lib.jar BadSrc\/Lib.java\n-\n-echo 'public class Main {public static void main(String[] a) {Lib.f();}}' > Main.java\n-\n-# Create a jar file that is good enough to put on the javac boot class path (i.e. contains java.lang.**)\n-if [ -r ${TESTJAVA}\/lib\/modules ]; then\n-  Sys \"$jimage\" extract --dir modules ${TESTJAVA}\/lib\/modules\n-  Sys \"$jar\" cf java-lang.jar -C modules\/java.base java\/lang\n-  Sys rm -rf modules\n-elif [ -d ${TESTJAVA}\/modules ]; then\n-  Sys \"$jar\" cf java-lang.jar -C ${TESTJAVA}\/modules\/java.base java\/lang\n-else\n-  echo 'cannot create java-lang.jar' ; exit 1\n-fi\n-\n-#----------------------------------------------------------------\n-# Verify that javac class search order is the same as java's\n-#----------------------------------------------------------------\n-Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"GooClass\" \\\n-    -bootclasspath \"java-lang.jar${PS}BadZip\/Lib.zip\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"BadClass${PS}GooClass\" \\\n-    -bootclasspath \"java-lang.jar${PS}GooZip\/Lib.zip${PS}BadClass\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"BadJar\/Lib.jar\" \\\n-    -Xbootclasspath:\"java-lang.jar${PS}GooClass\" \\\n-    Main.java\n-\n-#----------------------------------------------------------------\n-Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -bootclasspath \"java-lang.jar${PS}GooZip\/Lib.zip\" \\\n-    -Xbootclasspath\/p:\"BadClass\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -bootclasspath \"java-lang.jar${PS}BadZip\/Lib.zip\" \\\n-    -Xbootclasspath\/p:\"GooClass${PS}BadJar\/Lib.jar\" \\\n-    Main.java\n-\n-#----------------------------------------------------------------\n-Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"BadClass\" \\\n-    -Xbootclasspath\/a:\"GooClass\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"GooClass${PS}BadClass\" \\\n-    -Xbootclasspath\/a:\"BadClass\" \\\n-    Main.java\n-Success \"$java\" ${TESTVMOPTS} \\\n-    -Xbootclasspath\/a:\"GooClass\" \\\n-    Main\n-\n-#----------------------------------------------------------------\n-Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"GooClass\" \\\n-    -Xbootclasspath:\"BadClass${PS}java-lang.jar\" \\\n-    -Xbootclasspath\/a:\"GooClass\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/p:\"BadClass\" \\\n-    -Xbootclasspath:\"GooClass${PS}BadClass${PS}java-lang.jar\" \\\n-    -Xbootclasspath\/a:\"BadClass\" \\\n-    Main.java\n-\n-#----------------------------------------------------------------\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -endorseddirs \"BadClass${PS}GooZip${PS}BadJar\" \\\n-    -Xbootclasspath:\"BadClass${PS}java-lang.jar\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Djava.endorsed.dirs=\"BadClass${PS}GooZip${PS}BadJar\" \\\n-    -Xbootclasspath:\"BadClass${PS}java-lang.jar\" \\\n-    Main.java\n-\n-#----------------------------------------------------------------\n-Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/a:\"BadClass\" \\\n-    -extdirs \"GooZip\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Xbootclasspath\/a:\"GooClass${PS}BadClass\" \\\n-    -extdirs \"BadZip\" \\\n-    Main.java\n-\n-#----------------------------------------------------------------\n-Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -extdirs \"GooClass${PS}BadZip\" \\\n-    -cp \"GooZip\/Lib.zip\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -extdirs \"BadClass${PS}GooZip${PS}BadJar\" \\\n-    -cp \"BadZip\/Lib.zip\" \\\n-    Main.java\n-Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} \\\n-    -Djava.ext.dirs=\"GooZip${PS}BadJar\" \\\n-    -classpath \"BadZip\/Lib.zip\" \\\n-    Main.java\n-\n-#----------------------------------------------------------------\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"BadClass${PS}GooClass\" Main.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooClass${PS}BadClass\" Main.java\n-Failure \"$java\" ${TESTVMOPTS}  -classpath \"BadClass${PS}GooClass${PS}.\" Main\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"GooClass${PS}BadClass${PS}.\" Main\n-\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -cp \"BadJar\/Lib.jar${PS}GooZip\/Lib.zip\" Main.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"GooJar\/Lib.jar${PS}BadZip\/Lib.zip\" Main.java\n-Failure \"$java\" ${TESTVMOPTS}  -cp \"BadJar\/Lib.jar${PS}${PS}GooZip\/Lib.zip\" Main\n-Success \"$java\" ${TESTVMOPTS}  -cp \"GooJar\/Lib.jar${PS}${PS}BadZip\/Lib.zip\" Main\n-\n-Failure env CLASSPATH=\"BadZip\/Lib.zip${PS}GooJar\/Lib.jar\" \"$javac\" ${TESTTOOLVMOPTS} Main.java\n-Success env CLASSPATH=\"GooZip\/Lib.zip${PS}BadJar\/Lib.jar\" \"$javac\" ${TESTTOOLVMOPTS} Main.java\n-Failure env CLASSPATH=\"${PS}BadZip\/Lib.zip${PS}GooJar\/Lib.jar\" \"$java\" ${TESTVMOPTS} Main\n-Success env CLASSPATH=\"${PS}GooZip\/Lib.zip${PS}BadJar\/Lib.jar\" \"$java\" ${TESTVMOPTS} Main\n-\n-#----------------------------------------------------------------\n-# Check behavior of empty paths and empty path elements\n-#----------------------------------------------------------------\n-In() { cd \"$1\"; shift; \"$@\"; cd ..; }\n-\n-In GooClass Failure \"$javac\" ${TESTTOOLVMOPTS} -cp \"..\" ..\/Main.java\n-In GooClass Failure \"$java\" ${TESTVMOPTS}  -cp \"..\" Main\n-\n-# Unspecified classpath defaults to \".\"\n-Sys mkdir OneDir; Sys cp Main.java GooClass\/Lib.class OneDir\/.\n-In OneDir Success \"$javac\" ${TESTTOOLVMOPTS} Main.java\n-In OneDir Success \"$java\" ${TESTVMOPTS}  Main\n-\n-# Empty classpath elements mean \".\"\n-In GooClass Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"${PS}..\" ..\/Main.java\n-In GooClass Success \"$java\" ${TESTVMOPTS}  -cp \"${PS}..\" Main\n-\n-In GooClass Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"..${PS}\" ..\/Main.java\n-In GooClass Success \"$java\" ${TESTVMOPTS}  -cp \"..${PS}\" Main\n-\n-In GooClass Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"..${PS}${PS}\/xyzzy\" ..\/Main.java\n-In GooClass Success \"$java\" ${TESTVMOPTS}  -cp \"..${PS}${PS}\/xyzzy\" Main\n-\n-# All other empty path elements are ignored.\n-In GooJar Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -extdirs \"\" -cp \"..\" ..\/Main.java\n-\n-In GooJar Failure \"$javac\" -source 8 -targt 8 ${TESTTOOLVMOPTS} -extdirs        \"${PS}\" -cp \"..\" ..\/Main.java\n-In GooJar Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Djava.ext.dirs=\"${PS}\" -cp \"..\" ..\/Main.java\n-\n-In GooJar Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -extdirs        \".\" -cp \"..\" ..\/Main.java\n-In GooJar Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Djava.ext.dirs=\".\" -cp \"..\" ..\/Main.java\n-\n-In GooJar Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS}   -Djava.endorsed.dirs=\"\" -cp \"..\" ..\/Main.java\n-\n-In GooJar Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS}   -endorseddirs        \"${PS}\" -cp \"..\" ..\/Main.java\n-\n-In GooJar Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS}   -Djava.endorsed.dirs=\".\" -cp \"..\" ..\/Main.java\n-\n-In GooClass Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Xbootclasspath\/p: -cp \"..\" ..\/Main.java\n-\n-In GooClass Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Xbootclasspath\/p:. -cp \"..\" ..\/Main.java\n-\n-In GooClass Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Xbootclasspath:\"..\/java-lang.jar\" -cp \"..\" ..\/Main.java\n-\n-In GooClass Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Xbootclasspath:\"..\/java-lang.jar${PS}.\" -cp \"..\" ..\/Main.java\n-\n-In GooClass Failure \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Xbootclasspath\/a: -cp \"..\" ..\/Main.java\n-In GooClass Failure \"$java\" ${TESTVMOPTS}  -Xbootclasspath\/a: -cp \"..\" Main\n-\n-In GooClass Success \"$javac\" -source 8 -target 8 ${TESTTOOLVMOPTS} -Xbootclasspath\/a:. -cp \"..\" ..\/Main.java\n-In GooClass Success \"$java\" ${TESTVMOPTS}  -Xbootclasspath\/a:. -cp \"..\" Main\n-\n-Cleanup\n-\n-Bottom Line\n","filename":"test\/langtools\/tools\/javac\/Paths\/MineField.sh","additions":0,"deletions":277,"binary":false,"changes":277,"status":"deleted"},{"patch":"@@ -0,0 +1,560 @@\n+\/*\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.spi.ToolProvider;\n+\n+import toolbox.ToolBox;\n+\n+\/**\n+ * Utility methods for use by tests in the `Paths` directory.\n+ *\/\n+class Util {\n+\n+    ToolBox tb = new ToolBox();\n+    PrintStream out = tb.out;\n+\n+    Path javaHome = Path.of(System.getProperty(\"java.home\"));\n+    String PS = File.pathSeparator;\n+    Path curDir = Path.of(\".\");\n+\n+    static final String JAR = \"jar\";\n+    static final String JAVA = \"java\";\n+    static final String JAVAC = \"javac\";\n+    static final String JIMAGE = \"jimage\";\n+\n+    \/** The number of test-case failures. *\/\n+    int failCount = 0;\n+    \/** The number of test-case passes. *\/\n+    int passCount = 0;\n+    \/** A map recording how often each tool is executed in a separate process. *\/\n+    Map<String, Integer> execCounts = new TreeMap<>();\n+    \/** A map recording how often each tool is invoked via its ToolProvider API. *\/\n+    Map<String, Integer> toolCounts = new TreeMap<>();\n+\n+    \/**\n+     * Reports a summary of the overall test statistics, and throws an exception\n+     * if any test cases failed.\n+     *\n+     * @throws Exception if any test cases failed\n+     *\/\n+    void bottomLine() throws Exception {\n+        out.println();\n+        out.println(\"-- Summary --\");\n+        out.println(\"Passed: \" + passCount);\n+        out.println(\"Failed: \" + failCount);\n+        out.println(\"exec: \" + execCounts);\n+        out.println(\"tool: \" + toolCounts);\n+\n+        if (failCount > 0) {\n+            throw new Exception(failCount + \" tests failed\");\n+        }\n+    }\n+\n+    \/**\n+     * The result of executing a tool, either in a separate process, or via its ToolProvider API.\n+     *\n+     * @param exitCode the exit code from the tool: 0 for success\n+     * @param out the output from the tool\n+     *\/\n+    record Result(int exitCode, String out) { }\n+\n+    \/**\n+     * Executes a tool with given arguments and verifies that it passes.\n+     *\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args a string containing whitespace separated arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     * @see #splitArgs(String)\n+     *\/\n+    void expectPass(String command, String args) throws Exception {\n+        expectPass(null, null, command, splitArgs(args));\n+    }\n+\n+    \/**\n+     * Executes a tool in a specific directory with given arguments and verifies that it passes.\n+     * In order to set the directory, the tool will be executed in a separate process.\n+     *\n+     * @param dir the directory\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args a string containing whitespace separated arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     * @see #splitArgs(String)\n+     *\/\n+    void expectPass(Path dir, String command, String args) throws Exception {\n+        expectPass(dir, null, command, splitArgs(args));\n+    }\n+\n+    \/**\n+     * Executes a tool with additional env variables with given arguments and verifies that it passes.\n+     * In order to set the env variables, the tool will be executed in a separate process.\n+     * Note that any value of {@code CLASSPATH} inherited from this process will always be removed.\n+     *\n+     * @param env the additional env variables\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args a string containing whitespace separated arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     * @see #splitArgs(String)\n+     *\/\n+    void expectPass(Map<String, String> env, String command, String args) throws Exception {\n+        expectPass(null, env, command, splitArgs(args));\n+    }\n+\n+    \/**\n+     * Executes a tool in a given directory with additional env variables with given arguments\n+     * and verifies that it passes.\n+     * In order to set any directory and env variables, the tool will be executed in a separate process.\n+     * Note that any value of {@code CLASSPATH} inherited from this process will always be removed.\n+     *\n+     * @param dir the directory, or {@code null}\n+     * @param env the additional env variables, or {@code null}\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args the arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     *\/\n+    void expectPass(Path dir, Map<String, String> env, String command, String... args) throws Exception {\n+        Result result = switch (command) {\n+            case JAR -> jar(args);\n+            case JAVAC -> javac(dir, env, args);\n+            case JAVA -> java(dir, env, args);\n+            default -> throw new Exception(\"unknown command: \" + command);\n+        };\n+\n+        if (result.exitCode == 0) {\n+            out.println(\"PASS: test passed as expected\");\n+            passCount++;\n+        } else {\n+            out.println(\"FAIL: test failed unexpectedly\");\n+            failCount++;\n+        }\n+    }\n+\n+    \/**\n+     * Executes a tool with given arguments and verifies that it fails.\n+     *\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args a string containing whitespace separated arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     * @see #splitArgs(String)\n+     *\/\n+    void expectFail(String command, String args) throws Exception {\n+        expectFail(null, null, command, splitArgs(args));\n+    }\n+\n+    \/**\n+     * Executes a tool in a specific directory with given arguments and verifies that it fails.\n+     * In order to set the directory, the tool will be executed in a separate process.\n+     *\n+     * @param dir the directory\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args a string containing whitespace separated arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     * @see #splitArgs(String)\n+     *\/\n+    void expectFail(Path dir, String command, String args) throws Exception {\n+        expectFail(dir, null, command, splitArgs(args));\n+    }\n+\n+    \/**\n+     * Executes a tool with additional env variables with given arguments and verifies that it passes.\n+     * In order to set the env variables, the tool will be executed in a separate process.\n+     * Note that any value of {@code CLASSPATH} inherited from this process will always be removed.\n+     *\n+     * @param env the additional env variables\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args a string containing whitespace separated arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     * @see #splitArgs(String)\n+     *\/\n+    void expectFail(Map<String, String> env, String command, String args) throws Exception {\n+        expectFail(null, env, command, splitArgs(args));\n+    }\n+\n+    \/**\n+     * Executes a tool in a given directory with additional env variables with given arguments\n+     * and verifies that it passes.\n+     * In order to set any directory and env variables, the tool will be executed in a separate process.\n+     * Note that any value of {@code CLASSPATH} inherited from this process will always be removed.\n+     *\n+     * @param dir the directory, or {@code null}\n+     * @param env the additional env variables, or {@code null}\n+     * @param command the name of a JDK tool: java, javac or jar\n+     * @param args the arguments\n+     * @throws Exception if there was an issue trying to execute the tool\n+     * @see #passCount\n+     * @see #failCount\n+     *\/\n+    void expectFail(Path dir, Map<String, String> env, String command, String... args) throws Exception {\n+        Result result = switch (command) {\n+            case JAR -> jar(args);\n+            case JAVAC -> javac(dir, env, args);\n+            case JAVA -> java(dir, env, args);\n+            default -> throw new Exception(\"unknown command: \" + command);\n+        };\n+\n+        if (result.exitCode == 0) {\n+            out.println(\"FAIL: test passed unexpectedly\");\n+            failCount++;\n+        } else {\n+            out.println(\"PASS: failed as expected\");\n+            passCount++;\n+        }\n+    }\n+\n+    \/**\n+     * Splits a string into a list of strings that were separated by whitespace.\n+     * Leading and trailing whitespace is removed.\n+     * The character sequence {@code ${PS}} is replaced by the platform path separator.\n+     * Note, quotes are not supported, and so there is no support for embedded whitespace\n+     * or empty strings in the output.\n+     *\n+     * @param args a string of tokens separated by whitespace\n+     * @return an array of the tokens that were separated by whitespace\n+     *\/\n+    String[] splitArgs(String args) {\n+        return args.trim()\n+                .replace(\"${PS}\", PS)\n+                .split(\"\\\\s+\");\n+    }\n+\n+    \/**\n+     * Executes {@code javac} using its ToolProvider API.\n+     *\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the tool\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result javac(String... args) throws Exception {\n+        return runTool(JAVAC, args);\n+    }\n+\n+    \/**\n+     * Executes {@code javac} in either a separate process or using its ToolProvider API.\n+     * The ToolProvider API is used if the directory and env parameters are {@code null},\n+     * and if the arguments definitely do not use \"classpath wildcards\", which are\n+     * only supported when the tool is invoked by the launcher.\n+     *\n+     * @param dir the directory, or {@code null}\n+     * @param env any additional environment variables, or {@code null}\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the tool\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result javac(Path dir, Map<String, String> env, String... args) throws Exception {\n+        return (env != null || dir != null || hasWildcardClassPath(args))\n+                ? execTool(dir, env, JAVAC, args)\n+                : runTool(JAVAC, args);\n+    }\n+\n+    \/**\n+     * {@return true if the arguments may contain a classpath option using a \"classpath wildcard\"}\n+     *\n+     * The result is {@code true} if there is any form of a classpath option whose value contains {@code *}.\n+     * Note: this may include \"false positives\", where the {@code *} is not at the end of\n+     * any element in the path, such as when the character is part of the filename.\n+     * However, in context, the approximation is safe, and just means that we may sometimes\n+     * execute javac in a separate process when it would be sufficient to use its ToolProvider API.\n+     *\n+     * A more refined implementation could split apart the path elements and looking for\n+     * an element that is {@code *} or which ends in {@code *}.\n+     *\n+     * @param args the arguments to be checked\n+     *\/\n+    private boolean hasWildcardClassPath(String... args) {\n+        for (int i = 0; i < args.length; i++) {\n+            String arg = args[i];\n+            switch (arg) {\n+                case \"-classpath\", \"--class-path\", \"-cp\" -> {\n+                    if (i + 1 < args.length && args[i + 1].contains(\"*\")) {\n+                        return true;\n+                    }\n+                }\n+                default -> {\n+                    if (arg.startsWith(\"--class-path=\") && arg.contains(\"*\")) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    \/**\n+     * Executes {@code jar} using its ToolProvider API.\n+     *\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the tool\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result jar(String... args) throws Exception {\n+        return runTool(JAR, args);\n+    }\n+\n+    \/**\n+     * Executes {@code jimage} using its ToolProvider API.\n+     *\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the tool\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result jimage(String... args) throws Exception {\n+        return execTool(null, null, JIMAGE, args);\n+    }\n+\n+    \/**\n+     * Executes {@code java} in a separate process.\n+     *\n+     * @param dir the directory, or {@code null}\n+     * @param env any additional environment variables, or {@code null}\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the launcher\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result java(Path dir, Map<String, String> env, String... args) throws Exception {\n+        return execTool(dir, env, JAVA, args);\n+    }\n+\n+    \/**\n+     * Runs a tool using its ToolProvider API.\n+     *\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the launcher\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result runTool(String name, String... args) throws Exception {\n+        out.println(name + \": \" + String.join(\" \", args));\n+        var tool = ToolProvider.findFirst(name)\n+                .orElseThrow(() -> new Exception(\"cannot find \" + name));\n+        try (StringWriter sw = new StringWriter();\n+             PrintWriter pw = new PrintWriter(sw)) {\n+            int rc = tool.run(pw, pw, args);\n+            pw.flush();\n+            String output = sw.toString();\n+            output.lines()\n+                    .forEach(l -> out.println(name + \": \" + l));\n+            if (rc != 0) {\n+                out.println(name + \": exit code \" + rc);\n+            }\n+            toolCounts.put(name, toolCounts.computeIfAbsent(name, n -> 0) + 1);\n+            return new Result(rc, output);\n+        }\n+    }\n+\n+    \/**\n+     * Executes a tool in a separate process.\n+     *\n+     * Note that any value of {@code CLASSPATH} inherited from this process will always be removed.\n+     *\n+     * @param dir the directory, or {@code null}\n+     * @param env any additional environment variables, or {@code null}\n+     * @param args the arguments\n+     * @return an object containing the output and exit code from the launcher\n+     * @throws Exception if there is an issue executing the tool\n+     *\/\n+    Result execTool(Path dir, Map<String, String> env, String name, String... args) throws Exception {\n+        out.print(name + \":\");\n+        if (env != null) {\n+            out.print(\" \" + env);\n+        }\n+        if (dir != null) {\n+            out.print(\" (\" + dir + \")\");\n+        }\n+        out.println(\" \" + String.join(\" \", args));\n+\n+        Path tool = javaHome.resolve(\"bin\").resolve(name + (ToolBox.isWindows() ? \".exe\" : \"\"));\n+        if (!Files.exists(tool)) {\n+            throw new Exception(\"cannot find \" + name);\n+        }\n+        var cmd = new ArrayList<String>();\n+        cmd.add(tool.toString());\n+        cmd.addAll(List.of(args));\n+        ProcessBuilder pb = new ProcessBuilder(cmd)\n+                .redirectErrorStream(true);\n+        pb.environment().remove(\"CLASSPATH\"); \/\/ always remove default value set by jtreg\n+        if (env != null) {\n+            pb.environment().putAll(env);\n+        }\n+        if (dir != null) {\n+            pb.directory(dir.toFile());\n+        }\n+        Process p = pb.start();\n+        StringBuilder sb = new StringBuilder();\n+        try (var in = p.inputReader()) {\n+            in.lines().forEach(l -> {\n+                sb.append(l).append(\"\\n\");\n+                out.println(name + \": \" + l);\n+            });\n+        }\n+        p.waitFor();\n+        int rc = p.exitValue();\n+        if (rc != 0) {\n+            out.println(name + \": exit code \" + rc);\n+        }\n+        execCounts.put(name, execCounts.computeIfAbsent(name, n -> 0) + 1);\n+        return new Result(rc, sb.toString());\n+    }\n+\n+    \/**\n+     * Checks that a series of files exist and are readable.\n+     *\n+     * @param paths the files\n+     * @throws Exception if any of the files are not found or are not readable\n+     *\/\n+    void checkFiles(String... paths) throws Exception {\n+        for (String p : paths) {\n+            Path path = Path.of(p);\n+            if (!Files.isReadable(path) ) {\n+                throw new Exception(\"file not found: \" + path);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * List the files in a directory that match a \"glob\" pattern.\n+     *\n+     * @param dir the directory\n+     * @param glob the pattern\n+     * @return the list of files\n+     * @throws IOException if there is a problem listing the contents of the directory\n+     *\/\n+    List<Path> listFiles(Path dir, String glob) throws IOException {\n+        var files = new ArrayList<Path>();\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir, glob)) {\n+            for (Path p : ds) {\n+                files.add(p);\n+            }\n+        }\n+        return files;\n+    }\n+\n+    \/**\n+     * Deletes a series of files.\n+     * The files are deleted using {@link ToolBox#cleanDirectory(Path)} and\n+     * {@code ToolBox#deleteFiles}, which together try hard to delete the files,\n+     * even on Windows.\n+     *\n+     * @param paths the paths\n+     * @throws IOException if there is a problem deleting any of the files\n+     * @see #deleteFiles(List)\n+     *\/\n+    void deleteFiles(String... paths) throws IOException {\n+        deleteFiles(Arrays.stream(paths)\n+                        .map(Path::of)\n+                        .toList());\n+    }\n+\n+    \/**\n+     * Deletes a series of files.\n+     * The files are deleted using {@link ToolBox#cleanDirectory(Path)} and\n+     * {@code ToolBox#deleteFiles}, which together try hard to delete the files,\n+     * even on Windows.\n+     *\n+     * @param paths the paths\n+     * @throws IOException if there is a problem deleting any of the files\n+     *\/\n+    void deleteFiles(List<Path> paths) throws IOException {\n+        for (Path path : paths) {\n+            if (Files.exists(path)) {\n+                if (Files.isDirectory(path)) {\n+                    tb.cleanDirectory(path);\n+                }\n+                tb.deleteFiles(path);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Moves a series of files into a given directory.\n+     *\n+     * @param files the files\n+     * @param dir the target directory\n+     * @throws IOException if there is a problem moving any of the files\n+     *\/\n+    void moveFiles(List<Path> files, Path dir) throws IOException {\n+        for (Path p : files) {\n+            tb.moveFile(p, dir);\n+        }\n+    }\n+\n+    \/**\n+     * Moves a series of files into a given directory.\n+     *\n+     * @param files the files\n+     * @param dir the target directory\n+     * @throws IOException if there is a problem moving any of the files\n+     *\/\n+    void moveFiles(List<String> files, String dir) throws IOException {\n+        for (String p : files) {\n+            tb.moveFile(p, dir);\n+        }\n+    }\n+\n+    \/**\n+     * {@return a map containing a setting for the {@code CLASSPATH} env variable}\n+     *\n+     * @param classpath the value for the env variable\n+     *\/\n+    Map<String, String> classpath(String classpath) {\n+        return Map.of(\"CLASSPATH\", classpath.replace(\"${PS}\", PS));\n+    }\n+\n+    \/**\n+     * Writes a file called {@code MANIFEST.MF} containing a given value for\n+     * the {@code Class-Path} entry.\n+     *\n+     * @param path the value for the {@code Class-Path} entry\n+     * @throws IOException if there is a problem writing the file\n+     *\/\n+    void makeManifestWithClassPath(String path) throws IOException {\n+        Files.writeString(Path.of(\"MANIFEST.MF\"),\n+                \"Manifest-Version: 1.0\\n\"\n+                    + \"Class-Path: \" + path + \"\\n\");\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/Paths\/Util.java","additions":560,"deletions":0,"binary":false,"changes":560,"status":"added"},{"patch":"@@ -1,115 +0,0 @@\n-#\n-# Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Utilities for shell tests\n-\n-: ${TESTSRC=.} ${TESTCLASSES=.}\n-  java=\"${TESTJAVA+${TESTJAVA}\/bin\/}java${EXE_SUFFIX}\"\n- javac=\"${TESTJAVA+${TESTJAVA}\/bin\/}javac${EXE_SUFFIX}\"\n-   jar=\"${TESTJAVA+${TESTJAVA}\/bin\/}jar${EXE_SUFFIX}\"\n-jimage=\"${TESTJAVA+${TESTJAVA}\/bin\/}jimage${EXE_SUFFIX}\"\n-\n-case `uname -s` in\n-  Windows*|CYGWIN*|MSYS*|MINGW*)\n-    WindowsOnly() { \"$@\"; }\n-    UnixOnly() { :; }\n-    PS=\";\" ;;\n-  *)\n-    UnixOnly() { \"$@\"; }\n-    WindowsOnly() { :; }\n-    PS=\":\";;\n-esac\n-\n-failed=\"\"\n-Fail() { echo \"FAIL: $1\"; failed=\"${failed}.\"; }\n-\n-Die() { printf \"%s\\n\" \"$*\"; exit 1; }\n-\n-Sys() {\n-    printf \"%s\\n\" \"$*\"; \"$@\"; rc=\"$?\";\n-    test \"$rc\" -eq 0 || Die \"Command \\\"$*\\\" failed with exitValue $rc\";\n-}\n-\n-CheckFiles() {\n-    for f in \"$@\"; do test -r \"$f\" || Die \"File $f not found\"; done\n-}\n-\n-Report() {\n-    test \"$#\" != 2 && Die \"Usage: Report success|failure rc\"\n-\n-    if   test \"$1\" = \"success\" -a \"$2\" = 0; then\n-        echo \"PASS: succeeded as expected\"\n-    elif test \"$1\" = \"failure\" -a \"$2\" != 0; then\n-        echo \"PASS: failed as expected\"\n-    elif test \"$1\" = \"success\" -a \"$2\" != 0; then\n-        Fail \"test failed unexpectedly\"\n-    elif test \"$1\" = \"failure\" -a \"$2\" = 0; then\n-        Fail \"test succeeded unexpectedly\"\n-    else\n-        Die \"Usage: Report success|failure rc\"\n-    fi\n-}\n-\n-MkManifestWithClassPath() {\n-    (echo \"Manifest-Version: 1.0\"; echo \"Class-Path: $*\") > MANIFEST.MF\n-}\n-\n-HorizontalRule() {\n-    echo \"-----------------------------------------------------------------\"\n-}\n-\n-Test() {\n-    HorizontalRule\n-    expectedResult=\"$1\"; shift\n-    printf \"%s\\n\" \"$*\"\n-    \"$@\"\n-    Report \"$expectedResult\" \"$?\"\n-}\n-\n-Failure() { Test failure \"$@\"; }\n-Success() { Test success \"$@\"; }\n-\n-Bottom() {\n-    test \"$#\" = 1 -a \"$1\" = \"Line\" || Die \"Usage: Bottom Line\"\n-\n-    if test -n \"$failed\"; then\n-        count=`printf \"%s\" \"$failed\" | wc -c | tr -d ' '`\n-        echo \"FAIL: $count tests failed\"\n-        exit 1\n-    else\n-        echo \"PASS: all tests gave expected results\"\n-        exit 0\n-    fi\n-}\n-\n-BadJarFile() {\n-    for jarfilename in \"$@\"; do pwd > \"$jarfilename\"; done\n-}\n-\n-\n-#----------------------------------------------------------------\n-# Foil message localization\n-#----------------------------------------------------------------\n-DiagnosticsInEnglishPlease() {\n-    LANG=\"C\" LC_ALL=\"C\" LC_MESSAGES=\"C\"; export LANG LC_ALL LC_MESSAGES\n-}\n","filename":"test\/langtools\/tools\/javac\/Paths\/Util.sh","additions":0,"deletions":115,"binary":false,"changes":115,"status":"deleted"},{"patch":"@@ -0,0 +1,340 @@\n+\/*\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6268383 8172309 8293877\n+ * @summary Test classpath wildcards for javac and java -classpath option.\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox Util WildcardMineField\n+ * @run main WildcardMineField\n+ *\/\n+\n+\/*\n+ * Converted from wcMineField.sh, originally written by Martin Buchholz.\n+ *\n+ * For the last version of the original, wcMineField.sh, see\n+ * https:\/\/git.openjdk.org\/jdk\/blob\/jdk-19%2B36\/test\/langtools\/tools\/javac\/Paths\/wcMineField.sh\n+ *\n+ * This class primarily tests support for \"classpath wildcards\", which is a feature\n+ * by which elements of a classpath option ending in {@code *} are expanded into\n+ * the set of jar files found in the directory preceding the {@code *}.\n+ *\n+ * Note that this feature is only implemented in the launcher, even for javac,\n+ * and so is only available when running javac via its launcher, in a separate process.\n+ *\n+ * Note that this feature does not affect the use of {@code *} elsewhere in any path,\n+ * classpath or otherwise, and so this class also tests the use of {@code *} and other special\n+ * characters (like {@code ,} and {@code ;}) in filenames. Some of these tests,\n+ * labelled in the original code as \"UnixOnly\", do not apply to Windows.\n+ *\n+ * For information on the launcher support for the {@code -classpath} option,\n+ * see the java man page. As of September 2022, there is no equivalent documentation\n+ * for javac, except to say that the support is only in the native launcher for javac,\n+ * and not in the main javac source code.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import toolbox.ToolBox;\n+\n+public class WildcardMineField extends Util {\n+    public static void main(String... args) throws Exception {\n+        new WildcardMineField().run(args);\n+    }\n+\n+    void run(String... args) throws Exception {\n+        setup();\n+        tests();\n+        cleanup();\n+        bottomLine();\n+    }\n+\n+    void setup() throws Exception {\n+        cleanup();\n+        tb.createDirectories(\"GooSrc\", \"GooJar\", \"GooZip\", \"GooClass\", \"GooJar\/SubDir\");\n+        tb.createDirectories(\"BadSrc\", \"BadJar\", \"BadZip\", \"BadClass\");\n+        tb.createDirectories(\"SpeSrc\", \"SpeJar\", \"SpeZip\", \"SpeClass\");\n+        tb.createDirectories(\"JarNClass\", \"StarJar\", \"MixJar\");\n+        Files.writeString(Path.of(\"Lib.java\"), \"public class Lib  {public static void f(){}}\");\n+        Files.writeString(Path.of(\"Lib2.java\"), \"public class Lib2 {public static void g(){}}\");\n+        Files.writeString(Path.of(\"Lib3.java\"), \"public class Lib3 {public static void h(){}}\");\n+        javac(\"Lib.java\", \"Lib2.java\", \"Lib3.java\");\n+        tb.copyFile(\"Lib.class\", \"JarNClass\/.\");\n+        jar(\"cf\", \"GooJar\/Lib.jar\", \"Lib.class\");\n+        jar(\"cf\", \"GooJar\/SubDir\/Lib2.jar\", \"Lib2.class\");\n+        jar(\"cf\", \"JarNClass\/Lib.jar\", \"Lib.class\");\n+\n+        jar(\"cf\", \"GooZip\/Lib.zip\", \"Lib.class\");\n+        tb.moveFile(\"Lib.class\", \"GooClass\/.\");\n+        tb.moveFile(\"Lib2.class\", \"GooClass\/.\");\n+        tb.moveFile(\"Lib3.class\", \"GooClass\/.\");\n+        tb.moveFile(\"Lib.java\", \"GooSrc\/.\");\n+        tb.moveFile(\"Lib2.java\", \"GooSrc\/.\");\n+        tb.moveFile(\"Lib3.java\", \"GooSrc\/.\");\n+\n+        checkFiles(\"GooZip\/Lib.zip\", \"GooJar\/Lib.jar\", \"GooSrc\/Lib.java\");\n+        checkFiles(\"GooSrc\/Lib2.java\", \"GooSrc\/Lib3.java\", \"GooJar\/SubDir\/Lib2.jar\");\n+\n+        Files.writeString(Path.of(\"Spe1.java\"), \"public class Spe1 {public static void f(){}}\");\n+        Files.writeString(Path.of(\"Spe2.java\"), \"public class Spe2 {public static void f(){}}\");\n+        Files.writeString(Path.of(\"Spe3.java\"), \"public class Spe3 {public static void f(){}}\");\n+        Files.writeString(Path.of(\"Spe4.java\"), \"public class Spe4 {public static void f(){}}\");\n+        javac(\"Spe1.java\", \"Spe2.java\", \"Spe3.java\", \"Spe4.java\");\n+\n+        if (!ToolBox.isWindows()) {\n+            jar(\"cf\", \"SpeJar\/Spe:Colon.jar\", \"Spe1.class\");\n+            jar(\"cf\", \"SpeJar\/Spe*wc.jar\", \"Spe4.class\");\n+            checkFiles(\"SpeJar\/Spe*wc.jar\");\n+\n+            jar(\"cf\", \"StarJar\/*jar.jar\", \"Spe2.class\");\n+            jar(\"cf\", \"StarJar\/jar*.jar\", \"Spe3.class\");\n+            jar(\"cf\", \"StarJar\/*jar*.jar\", \"Spe4.class\");\n+            checkFiles(\"StarJar\/*jar.jar\", \"StarJar\/jar*.jar\", \"StarJar\/*jar*.jar\");\n+        }\n+\n+        jar(\"cf\", \"SpeJar\/Spe,Comma.jar\", \"Spe2.class\");\n+        jar(\"cf\", \"SpeJar\/Spe;Semi.jar\", \"Spe3.class\");\n+\n+        jar(\"cf\", \"MixJar\/mix.jAr\", \"Spe1.class\");\n+        jar(\"cf\", \"MixJar\/mix2.JAR\", \"Spe2.class\");\n+        jar(\"cf\", \"MixJar\/mix3.zip\", \"Spe3.class\");\n+        jar(\"cf\", \"MixJar\/.hiddenjar.jar\", \"Spe4.class\");\n+\n+        moveFiles(listFiles(curDir, \"Spe*.class\"), Path.of(\"SpeClass\/.\"));\n+        moveFiles(listFiles(curDir, \"Spe*.java\"), Path.of(\"SpeSrc\/.\"));\n+        checkFiles(\"SpeJar\/Spe,Comma.jar\", \"SpeJar\/Spe;Semi.jar\", \"SpeSrc\/Spe2.java\", \"SpeSrc\/Spe3.\" +\n+                \"java\", \"SpeSrc\/Spe4.java\");\n+        checkFiles(\"MixJar\/mix.jAr\", \"MixJar\/mix2.JAR\", \"MixJar\/mix3.zip\", \"MixJar\/.hiddenjar.jar\");\n+\n+        Files.writeString(Path.of(\"Main.java\"), \"public class Main {public static void main(String[] a) {Lib.f();}}\");\n+        Files.writeString(Path.of(\"Main1.java\"), \"public class Main1 {public static void main(String[] a) {Lib2.g();}}\");\n+        Files.writeString(Path.of(\"Main1b.java\"), \"public class Main1b {public static void main(String[] a) {Spe1.f();}}\");\n+        Files.writeString(Path.of(\"Main2.java\"), \"public class Main2 {public static void main(String[] a) {Spe2.f();}}\");\n+        Files.writeString(Path.of(\"Main3.java\"), \"public class Main3 {public static void main(String[] a) {Spe3.f();}}\");\n+        Files.writeString(Path.of(\"Main4.java\"), \"public class Main4 {public static void main(String[] a) {Spe4.f();}}\");\n+        Files.writeString(Path.of(\"Main5.java\"), \"public class Main5 {public static void main(String[] a) {Spe2.f(); Lib.f();}}\");\n+        Files.writeString(Path.of(\"Main6.java\"), \"public class Main6 {public static void main(String[] a) {Lib3.h();}}\");\n+    }\n+\n+    void cleanup() throws IOException {\n+        deleteFiles(\"GooSrc\", \"GooJar\", \"GooZip\", \"GooClass\");\n+        deleteFiles(\"SpeSrc\", \"SpeJar\", \"SpeZip\", \"SpeClass\");\n+        deleteFiles(\"BadSrc\", \"BadJar\", \"BadZip\", \"BadClass\");\n+        deleteFiles(\"JarNClass\", \"StarJar\", \"MixJar\", \"StarDir\");\n+        deleteFiles(\"OneDir\", \"MANIFEST.MF\");\n+        deleteFiles(listFiles(curDir, \"*.class\"));\n+        deleteFiles(listFiles(curDir, \"Main*.java\"));\n+    }\n+\n+    void tests() throws Exception {\n+        if (!ToolBox.isWindows()) {\n+            starDirTests();\n+        }\n+\n+        \/*----------------------------------------------------------------\n+         * Verify the basic jar file works\n+         *----------------------------------------------------------------*\/\n+\n+        \/\/ baseline test to verify it works.\n+        expectPass(JAVAC, \"-cp GooJar\/Lib.jar Main.java\");\n+        expectPass(JAVAC, \"-classpath GooJar\/Lib.jar Main.java\");\n+        expectPass(JAVA, \"-classpath GooJar\/Lib.jar${PS}. Main\");\n+        expectPass(JAVA, \"-cp GooJar\/Lib.jar${PS}. Main\");\n+\n+        \/\/ basic test of one jar to be loaded\n+        if (!ToolBox.isWindows()) {\n+            expectPass(JAVAC, \"-classpath GooJar\/* Main.java\");\n+        }\n+        expectPass(JAVAC, \"-classpath GooJar\/*${PS}. Main.java\");\n+        expectPass(JAVA, \"-classpath GooJar\/*${PS}. Main\");\n+\n+        \/\/ in a subdir. First * should not load jars in subdirectories unless specified\n+        expectFail(JAVAC, \"-classpath GooJar\/* Main1.java\");\n+        expectFail(JAVAC, \" -classpath GooJar\/*${PS}. Main1.java\");\n+        expectPass(JAVAC, \"-cp GooJar\/SubDir\/* Main1.java\");\n+        expectPass(JAVAC, \"-classpath GooJar\/SubDir\/* Main1.java\");\n+        expectPass(JAVAC, \"--class-path GooJar\/SubDir\/* Main1.java\");\n+        expectPass(JAVAC, \"--class-path=GooJar\/SubDir\/* Main1.java\");\n+\n+        \/\/ Same with launcher. Should not load jar in subdirectories unless specified\n+        expectFail(JAVA, \"-classpath GooJar\/*${PS}. Main1\");\n+        expectPass(JAVA, \"-classpath GooJar\/SubDir\/*${PS}. Main1\");\n+        expectPass(JAVA, \"-cp GooJar\/SubDir\/*${PS}. Main1\");\n+\n+        expectPass(classpath(\"GooJar\/SubDir\/*\"), JAVAC, \"Main1.java\");\n+        expectPass(classpath(\"GooJar\/SubDir\/*${PS}.\"), JAVA, \"Main1\");\n+\n+        \/*----------------------------------------------------------------\n+         * Verify the jar files in 2 directories\n+         *----------------------------------------------------------------*\/\n+\n+        expectPass(JAVAC, \"-classpath GooJar\/Lib.jar${PS}SpeJar\/Spe,Comma.jar Main5.java\");\n+        expectPass(JAVA, \"-classpath GooJar\/Lib.jar${PS}SpeJar\/Spe,Comma.jar${PS}. Main5\");\n+\n+        expectPass(JAVAC, \"-classpath GooJar\/*${PS}SpeJar\/* Main5.java\");\n+        expectPass(JAVA, \"-classpath GooJar\/*${PS}SpeJar\/*${PS}. Main5\");\n+\n+        \/*----------------------------------------------------------------\n+         * Verify jar file and class file in same directory.\n+         *----------------------------------------------------------------*\/\n+\n+        expectPass(JAVAC, \"-classpath JarNClass\/*${PS} Main.java\");\n+        expectPass(JAVA, \"-classpath JarNClass\/*${PS}. Main\");\n+\n+        \/*----------------------------------------------------------------\n+         * Verify these odd jar files work explicitly on classpath, kind of\n+         * a baseline. Last one is also a test with * in a jar name.\n+         *----------------------------------------------------------------*\/\n+\n+        expectFail(JAVAC, \"-classpath SpeJar\/Spe:Colon.jar Main1.java\");\n+\n+        expectPass(JAVAC, \"-classpath SpeJar\/Spe,Comma.jar Main2.java\");\n+        expectPass(JAVA, \"-classpath SpeJar\/Spe,Comma.jar${PS}. Main2\");\n+\n+        if (!ToolBox.isWindows()) {\n+            expectPass(JAVAC, \"-classpath SpeJar\/Spe;Semi.jar Main3.java\");\n+            expectPass(JAVA, \"-classpath SpeJar\/Spe;Semi.jar${PS}. Main3\");\n+\n+            expectPass(JAVAC, \"-classpath SpeJar\/Spe*wc.jar Main4.java\");\n+            expectPass(JAVA, \"-classpath SpeJar\/Spe*wc.jar${PS}. Main4\");\n+        }\n+\n+        if (!ToolBox.isWindows()) {\n+            speJar();\n+        }\n+\n+        if (!ToolBox.isWindows()) {\n+            starJar();\n+        }\n+\n+        \/*----------------------------------------------------------------\n+         * Verify these jar files with varying extensions\n+         *----------------------------------------------------------------*\/\n+\n+        \/\/ Mixed case extensions should not be loaded.\n+        expectFail(JAVAC, \"-classpath MixJar\/* Main1b.java\");\n+        expectPass(JAVAC, \"-classpath MixJar\/mix.jAr Main1b.java\");\n+        expectFail(JAVAC, \"-classpath MixJar\/* Main1b\");\n+\n+        \/\/ upper case, .JAR, extension should be loaded\n+        if (!ToolBox.isWindows()) {\n+            expectPass(JAVAC, \"-classpath MixJar\/* Main2.java\");\n+        }\n+        expectPass(JAVAC, \"-classpath .${PS}MixJar\/* Main2.java\");\n+\n+        expectPass(JAVA, \"-classpath MixJar\/*${PS}. Main2\");\n+\n+        \/\/ zip extensions should not be loaded\n+        expectFail(JAVAC, \"-classpath MixJar\/* Main3.java\");\n+        expectPass(JAVAC, \"-classpath MixJar\/mix3.zip Main3.java\");\n+        expectFail(JAVA, \"-classpath MixJar\/*${PS}. Main3\");\n+\n+        \/\/ unix \"hidden\" file\n+        if (!ToolBox.isWindows()) {\n+            expectPass(JAVAC, \"-classpath MixJar\/* Main4.java\");\n+            expectPass(JAVA, \"-classpath MixJar\/*${PS}. Main4\");\n+        }\n+    }\n+\n+    void starDirTests() throws Exception {\n+        out.println(\"Running tests with directory named \\\"*\\\"\");\n+        deleteFiles(\".\/StarDir\");\n+        tb.createDirectories(\"StarDir\/*\");\n+        tb.copyFile(\"GooClass\/Lib2.class\", \"StarDir\/*\/Lib2.class\");\n+        jar(\"cf\", \"StarDir\/Lib3.jar\", \"-C\", \"GooClass\", \"Lib3.class\");\n+        jar(\"cf\", \"StarDir\/*\/Lib.jar\", \"-C\", \"GooClass\", \"Lib.class\");\n+        checkFiles(\"StarDir\/*\/Lib.jar\", \"StarDir\/*\/Lib2.class\", \"StarDir\/Lib3.jar\");\n+        tb.copyFile(\"Main6.java\", \".\/StarDir\/.\");\n+        tb.copyFile(\"Main.java\", \".\/StarDir\/*\/.\");\n+        tb.copyFile(\"Main1.java\", \".\/StarDir\/*\/.\");\n+        Path StarDir = Path.of(\"StarDir\");\n+        expectFail(StarDir, JAVAC, \"-classpath * Main6.java\");\n+        expectFail(StarDir, JAVAC, \"-classpath .\/* Main6.java\");\n+        deleteFiles(listFiles(StarDir, \"Main6.*\"));\n+        Path StarDir_star = StarDir.resolve(\"*\");\n+        expectPass(StarDir_star, JAVAC, \"-classpath * Main.java\");\n+        expectPass(StarDir_star, JAVA, \"-classpath .${PS}* Main\");\n+        expectPass(StarDir_star, JAVAC, \"Main1.java\");\n+        expectPass(StarDir_star, JAVA, \"-classpath . Main1\");\n+\n+        expectFail(JAVAC, \"-classpath StarDir\/* Main6.java\");\n+\n+        expectPass(JAVAC, \"-classpath StarDir\/* Main1.java\");\n+        expectPass(JAVA, \"-classpath StarDir\/*:. Main1\");\n+\n+        expectPass(JAVAC, \"-classpath StarDir\/* Main1.java\");\n+        expectPass(JAVA, \"-classpath .${PS}StarDir\/* Main1\");\n+\n+        expectFail(JAVAC, \"-classpath StarDir\/\\\\*\/* Main.java\");\n+        expectPass(JAVAC, \"-classpath StarDir\/*\/* Main.java\");\n+\n+        expectPass(JAVA, \"-classpath .${PS}StarDir\/*\/* Main\");\n+        expectFail(JAVA, \"-classpath .${PS}StarDir\/\\\\*\/* Main\");\n+\n+        expectPass(JAVAC, \"-classpath StarDir\/Lib3.jar Main6.java\");\n+        expectPass(JAVA, \"-classpath .${PS}StarDir\/Lib3.jar Main6\");\n+\n+        expectPass(JAVAC, \"-classpath StarDir\/*\/Lib.jar Main.java\");\n+        expectPass(JAVA, \"-classpath .${PS}StarDir\/*\/Lib.jar Main\");\n+    }\n+\n+    void speJar() throws Exception {\n+        out.println(\"Running tests with jar file names containing special characters\");\n+\n+        expectPass(JAVAC, \"-classpath SpeJar\/* Main2.java\");\n+        expectPass(JAVA, \"-classpath SpeJar\/*${PS}. Main2\");\n+\n+        expectPass(JAVAC, \"-classpath SpeJar\/* Main3.java\");\n+        expectPass(JAVA, \"-classpath SpeJar\/*${PS}. Main3\");\n+\n+        expectPass(JAVAC, \"-classpath SpeJar\/* Main4.java\");\n+        expectPass(JAVA, \"-classpath SpeJar\/*${PS}. Main4\");\n+    }\n+\n+    \/*----------------------------------------------------------------\n+     * Verify these jar files with asterisk in jar file name\n+     *----------------------------------------------------------------*\/\n+    void starJar() throws Exception {\n+        out.println(\"Running tests with jar file names containing \\\"*\\\"\");\n+        expectPass(JAVAC, \"-classpath StarJar\/*jar.jar Main2.java\");\n+        expectPass(JAVA, \"-classpath StarJar\/*jar.jar${PS}. Main2\");\n+\n+        expectPass(JAVAC, \"-classpath StarJar\/jar*.jar Main3.java\");\n+        expectPass(JAVA, \"-classpath StarJar\/jar*.jar${PS}. Main3\");\n+\n+        expectPass(JAVAC, \"-classpath StarJar\/*jar*.jar Main4.java\");\n+        expectPass(JAVA, \"-classpath StarJar\/*jar*.jar${PS}. Main4\");\n+\n+        expectPass(JAVAC, \"-classpath StarJar\/* Main2.java\");\n+        expectPass(JAVA, \"-classpath StarJar\/*${PS}. Main2\");\n+\n+        expectPass(JAVAC, \"-classpath StarJar\/* Main3.java\");\n+        expectPass(JAVA, \"-classpath StarJar\/*${PS}. Main3\");\n+\n+        expectPass(JAVAC, \"-classpath StarJar\/* Main4.java\");\n+        expectPass(JAVA, \"-classpath StarJar\/*${PS}. Main4\");\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Paths\/WildcardMineField.java","additions":340,"deletions":0,"binary":false,"changes":340,"status":"added"},{"patch":"@@ -1,296 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-# @test\n-# @summary Test classpath wildcards for javac and java -classpath option.\n-# @bug 6268383 8172309\n-# @run shell\/timeout=600 wcMineField.sh\n-\n-# To run this test manually, simply do .\/wcMineField.sh\n-#----------------------------------------------------------------\n-\n-. ${TESTSRC-.}\/Util.sh\n-\n-set -u\n-\n-#----------------------------------------------------------------\n-# Note that, on Windows only, the launcher also includes another\n-# kind of command-line wildcard expansion, via setargv.obj\n-# http:\/\/msdn.microsoft.com\/library\/default.asp?url=\/library\/en-us\/vccelng\/htm\/progs_11.asp\n-# Therefore, on Windows, -classpath \"foo\/*\" is treated differently\n-# from -classpath \".${PS}foo\/*\"\n-#----------------------------------------------------------------\n-\n-#----------------------------------------------------------------\n-# Prepare the \"Minefield\"\n-#----------------------------------------------------------------\n-Cleanup() {\n-    Sys rm -rf GooSrc GooJar GooZip GooClass\n-         Sys rm -rf SpeSrc SpeJar SpeZip SpeClass\n-    Sys rm -rf BadSrc BadJar BadZip BadClass\n-         Sys rm -rf JarNClass StarJar MixJar StarDir\n-    Sys rm -rf OneDir *.class Main*.java MANIFEST.MF\n-}\n-\n-Cleanup\n-Sys mkdir  GooSrc GooJar GooZip GooClass GooJar\/SubDir\n-Sys mkdir  BadSrc BadJar BadZip BadClass\n-Sys mkdir  SpeSrc SpeJar SpeZip SpeClass\n-Sys mkdir  JarNClass StarJar MixJar\n-echo 'public class Lib  {public static void f(){}}' > Lib.java\n-echo 'public class Lib2 {public static void g(){}}' > Lib2.java\n-echo 'public class Lib3 {public static void h(){}}' > Lib3.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Lib.java Lib2.java Lib3.java\n-Sys cp Lib.class JarNClass\/.\n-Sys \"$jar\" cf GooJar\/Lib.jar Lib.class\n-Sys \"$jar\" cf GooJar\/SubDir\/Lib2.jar Lib2.class\n-Sys \"$jar\" cf JarNClass\/Lib.jar Lib.class\n-\n-Sys \"$jar\" cf GooZip\/Lib.zip Lib.class\n-Sys mv Lib.class GooClass\/.\n-Sys mv Lib2.class GooClass\/.\n-Sys mv Lib3.class GooClass\/.\n-Sys mv Lib.java GooSrc\/.\n-Sys mv Lib2.java GooSrc\/.\n-Sys mv Lib3.java GooSrc\n-CheckFiles GooZip\/Lib.zip GooJar\/Lib.jar GooSrc\/Lib.java\n-CheckFiles GooSrc\/Lib2.java GooSrc\/Lib3.java GooJar\/SubDir\/Lib2.jar\n-\n-echo 'public class Spe1 {public static void f(){}}' > Spe1.java\n-echo 'public class Spe2 {public static void f(){}}' > Spe2.java\n-echo 'public class Spe3 {public static void f(){}}' > Spe3.java\n-echo 'public class Spe4 {public static void f(){}}' > Spe4.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Spe1.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Spe2.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Spe3.java\n-Sys \"$javac\" ${TESTTOOLVMOPTS} Spe4.java\n-\n-UnixOnly Sys \"$jar\" cf \"SpeJar\/Spe:Colon.jar\" Spe1.class\n-UnixOnly Sys \"$jar\" cf \"SpeJar\/Spe*wc.jar\" Spe4.class\n-UnixOnly CheckFiles \"SpeJar\/Spe*wc.jar\"\n-\n-UnixOnly Sys \"$jar\" cf \"StarJar\/*jar.jar\" Spe2.class\n-UnixOnly Sys \"$jar\" cf \"StarJar\/jar*.jar\" Spe3.class\n-UnixOnly Sys \"$jar\" cf \"StarJar\/*jar*.jar\" Spe4.class\n-UnixOnly CheckFiles \"StarJar\/*jar.jar\" \"StarJar\/jar*.jar\" \"StarJar\/*jar*.jar\"\n-\n-Sys \"$jar\" cf \"SpeJar\/Spe,Comma.jar\" Spe2.class\n-Sys \"$jar\" cf \"SpeJar\/Spe;Semi.jar\" Spe3.class\n-\n-Sys \"$jar\" cf \"MixJar\/mix.jAr\" Spe1.class\n-Sys \"$jar\" cf \"MixJar\/mix2.JAR\" Spe2.class\n-Sys \"$jar\" cf \"MixJar\/mix3.zip\" Spe3.class\n-Sys \"$jar\" cf \"MixJar\/.hiddenjar.jar\" Spe4.class\n-\n-Sys mv Spe*.class SpeClass\/.\n-Sys mv Spe*.java SpeSrc\/.\n-CheckFiles \"SpeJar\/Spe,Comma.jar\" \"SpeJar\/Spe;Semi.jar\" \"SpeSrc\/Spe2.java\" \"SpeSrc\/Spe3.java\" \"SpeSrc\/Spe4.java\"\n-CheckFiles \"MixJar\/mix.jAr\" \"MixJar\/mix2.JAR\" \"MixJar\/mix3.zip\" \"MixJar\/.hiddenjar.jar\"\n-\n-echo 'public class Main {public static void main(String[] a) {Lib.f();}}' > Main.java\n-echo 'public class Main1 {public static void main(String[] a) {Lib2.g();}}' > Main1.java\n-echo 'public class Main1b {public static void main(String[] a) {Spe1.f();}}' > Main1b.java\n-echo 'public class Main2 {public static void main(String[] a) {Spe2.f();}}' > Main2.java\n-echo 'public class Main3 {public static void main(String[] a) {Spe3.f();}}' > Main3.java\n-echo 'public class Main4 {public static void main(String[] a) {Spe4.f();}}' > Main4.java\n-echo 'public class Main5 {public static void main(String[] a) {Spe2.f(); Lib.f();}}' > Main5.java\n-echo 'public class Main6 {public static void main(String[] a) {Lib3.h();}}' > Main6.java\n-\n-\n-#----------------------------------------------------------------\n-# Verify expected behaviour with directory named \"*\"\n-#----------------------------------------------------------------\n-starDir() {\n-    printf \"Running tests with directory named \\\"*\\\"\\n\"\n-    Sys rm -rf .\/StarDir\n-    Sys mkdir -p StarDir\/\"*\"\n-    Sys cp \"GooClass\/Lib2.class\" \"StarDir\/*\/Lib2.class\"\n-    Sys \"$jar\" cf \"StarDir\/Lib3.jar\" -C GooClass \"Lib3.class\"\n-    Sys \"$jar\" cf \"StarDir\/*\/Lib.jar\" -C GooClass \"Lib.class\"\n-    CheckFiles \"StarDir\/*\/Lib.jar\" \"StarDir\/*\/Lib2.class\" \"StarDir\/Lib3.jar\"\n-    Sys cp Main6.java .\/StarDir\/.\n-    Sys cp Main.java  .\/StarDir\/\"*\"\/.\n-    Sys cp Main1.java .\/StarDir\/\"*\"\/.\n-    CPWC_DIR=`pwd`\n-    Sys cd StarDir\n-    Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"*\" Main6.java\n-    Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \".\/*\" Main6.java\n-    Sys rm -f Main6.*\n-    Sys cd \"*\"\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"*\" Main.java\n-    Success \"$java\" ${TESTVMOPTS} -classpath .${PS}\"*\" Main\n-    Success \"$javac\" ${TESTTOOLVMOPTS} Main1.java\n-    Success \"$java\" ${TESTVMOPTS} -classpath \".\" Main1\n-    Sys cd $CPWC_DIR\n-\n-    Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarDir\/*\" Main6.java\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath StarDir\/\\* Main1.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath StarDir\/\\*:. Main1\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarDir\/*\" Main1.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \".${PS}StarDir\/*\" Main1\n-\n-    Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath StarDir\/\"\\*\/*\" Main.java\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath StarDir\/\"*\/*\" Main.java\n-\n-    Success \"$java\" ${TESTVMOPTS}  -classpath .${PS}StarDir\/\"*\/*\" Main\n-    Failure \"$java\" ${TESTVMOPTS}  -classpath .${PS}StarDir\/\"\\*\/*\" Main\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarDir\/Lib3.jar\" Main6.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \".${PS}StarDir\/Lib3.jar\" Main6\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath StarDir\/\"*\"\/Lib.jar Main.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath .${PS}StarDir\/\"*\"\/Lib.jar Main\n-}\n-UnixOnly starDir\n-\n-#----------------------------------------------------------------\n-# Verify the basic jar file works\n-#----------------------------------------------------------------\n-#baseline test to verify it works.\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"GooJar\/Lib.jar\" Main.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/Lib.jar\" Main.java\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"GooJar\/Lib.jar${PS}.\" Main\n-Success \"$java\" ${TESTVMOPTS}  -cp \"GooJar\/Lib.jar${PS}.\" Main\n-\n-#basic test of one jar to be loaded\n-UnixOnly Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/*\"       Main.java\n-         Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/*${PS}.\" Main.java\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"GooJar\/*${PS}.\" Main\n-#in a subdir. First * should not load jars in subdirectories unless specified\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/*\" Main1.java\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/*${PS}.\" Main1.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -cp \"GooJar\/SubDir\/*\" Main1.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/SubDir\/*\" Main1.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} --class-path \"GooJar\/SubDir\/*\" Main1.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} --class-path=\"GooJar\/SubDir\/*\" Main1.java\n-#Same with launcher. Should not load jar in subdirectories unless specified\n-Failure \"$java\" ${TESTVMOPTS}  -classpath \"GooJar\/*${PS}.\" Main1\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"GooJar\/SubDir\/*${PS}.\" Main1\n-Success \"$java\" ${TESTVMOPTS}  -cp \"GooJar\/SubDir\/*${PS}.\" Main1\n-\n-Success env CLASSPATH=\"GooJar\/SubDir\/*\" \"$javac\" ${TESTTOOLVMOPTS} Main1.java\n-Success env CLASSPATH=\"GooJar\/SubDir\/*${PS}.\" \"$java\" ${TESTVMOPTS} Main1\n-#----------------------------------------------------------------\n-# Verify the jar files in 2 directories\n-#----------------------------------------------------------------\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/Lib.jar${PS}SpeJar\/Spe,Comma.jar\" Main5.java\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"GooJar\/Lib.jar${PS}SpeJar\/Spe,Comma.jar${PS}.\" Main5\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"GooJar\/*${PS}SpeJar\/*\" Main5.java\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"GooJar\/*${PS}SpeJar\/*${PS}.\" Main5\n-\n-#----------------------------------------------------------------\n-# Verify jar file and class file in same directory.\n-#----------------------------------------------------------------\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"JarNClass\/*${PS}\" Main.java\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"JarNClass\/*${PS}.\" Main\n-\n-#----------------------------------------------------------------\n-# Verify these odd jar files work explicitly on classpath, kind of\n-# a baseline. Last one is also a test with * in a jar name.\n-#----------------------------------------------------------------\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/Spe:Colon.jar\" Main1.java\n-\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/Spe,Comma.jar\" Main2.java\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/Spe,Comma.jar${PS}.\" Main2\n-\n-UnixOnly Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/Spe;Semi.jar\" Main3.java\n-UnixOnly Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/Spe;Semi.jar${PS}.\" Main3\n-\n-UnixOnly Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/Spe*wc.jar\" Main4.java\n-UnixOnly Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/Spe*wc.jar${PS}.\" Main4\n-#----------------------------------------------------------------\n-# Verify these odd jar files work with classpath wildcard.\n-#----------------------------------------------------------------\n-\n-speJar() {\n-    printf \"Running tests with jar file names containing special characters\\n\"\n-#     Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/*\" Main1.java\n-#     Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/*\" Main1\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/*\" Main2.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/*${PS}.\" Main2\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/*\" Main3.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/*${PS}.\" Main3\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"SpeJar\/*\" Main4.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"SpeJar\/*${PS}.\" Main4\n-}\n-UnixOnly speJar\n-\n-#----------------------------------------------------------------\n-# Verify these jar files with asterisk in jar file name\n-#----------------------------------------------------------------\n-starJar() {\n-    printf \"Running tests with jar file names containing \\\"*\\\"\\n\"\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarJar\/*jar.jar\" Main2.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"StarJar\/*jar.jar${PS}.\" Main2\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarJar\/jar*.jar\" Main3.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"StarJar\/jar*.jar${PS}.\" Main3\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarJar\/*jar*.jar\" Main4.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"StarJar\/*jar*.jar${PS}.\" Main4\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarJar\/*\" Main2.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"StarJar\/*${PS}.\" Main2\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarJar\/*\" Main3.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"StarJar\/*${PS}.\" Main3\n-\n-    Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"StarJar\/*\" Main4.java\n-    Success \"$java\" ${TESTVMOPTS}  -classpath \"StarJar\/*${PS}.\" Main4\n-}\n-UnixOnly starJar\n-\n-#----------------------------------------------------------------\n-# Verify these jar files with varying extensions\n-#----------------------------------------------------------------\n-# Mixed case extensions should not be loaded.\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"MixJar\/*\" Main1b.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"MixJar\/mix.jAr\" Main1b.java\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"MixJar\/*\" Main1b\n-\n-#upper case, .JAR, extension should be loaded\n-UnixOnly Success \"$javac\" ${TESTTOOLVMOPTS} -classpath       \"MixJar\/*\" Main2.java\n-         Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \".${PS}MixJar\/*\" Main2.java\n-\n-Success \"$java\" ${TESTVMOPTS}  -classpath \"MixJar\/*${PS}.\" Main2\n-# zip extensions should not be loaded\n-Failure \"$javac\" ${TESTTOOLVMOPTS} -classpath \"MixJar\/*\" Main3.java\n-Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"MixJar\/mix3.zip\" Main3.java\n-Failure \"$java\" ${TESTVMOPTS}  -classpath \"MixJar\/*${PS}.\" Main3\n-# unix \"hidden\" file\n-UnixOnly Success \"$javac\" ${TESTTOOLVMOPTS} -classpath \"MixJar\/*\" Main4.java\n-UnixOnly Success \"$java\" ${TESTVMOPTS}  -classpath \"MixJar\/*${PS}.\" Main4\n-\n-Cleanup\n-\n-Bottom Line\n-#----------------------------------------------------------------\n","filename":"test\/langtools\/tools\/javac\/Paths\/wcMineField.sh","additions":0,"deletions":296,"binary":false,"changes":296,"status":"deleted"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8292975\n+ * @summary Javac produces code that crashes with LambdaConversionException\n+ * @run main IntersectionParameterTypeTest\n+ *\/\n+\n+import java.util.function.BiFunction;\n+\n+public class IntersectionParameterTypeTest {\n+\n+    sealed interface Term {\n+        record Lit() implements Term {}\n+        record Lam(String x, Term a) implements Term {}\n+    }\n+\n+    public static <U, T> void call(BiFunction<U, T, T> op, U x, T t) {\n+      op.apply(x, t);\n+    }\n+\n+    public static void main(String[] args) {\n+      \/\/ this code works\n+      call(Term.Lam::new, \"x\", (Term) new Term.Lit());\n+\n+      \/\/ this does not\n+      call(Term.Lam::new, \"x\", new Term.Lit());\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/IntersectionParameterTypeTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8269983\n+ * @summary BootstrapMethodError with method reference and intersection type\n+ * @run main IntersectionParameterTypeTest2\n+ *\/\n+\n+public class IntersectionParameterTypeTest2 {\n+\n+    public static void main(String[] args) {\n+        f();\n+    }\n+\n+    static <T extends Comparable<T> & G> C<T> f() {\n+        return new C<>(Q::g);\n+    }\n+\n+    public interface G {}\n+\n+    private interface E<T> {\n+        void g(Q g, T value);\n+    }\n+\n+    static class C<T extends Comparable<?>> {\n+        C(E<T> g) {}\n+    }\n+\n+    static class Q {\n+        void g(G g) {}\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/IntersectionParameterTypeTest2.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -187,1 +187,1 @@\n-        \"sun.misc.SoftCache\", \"Removed. See http:\/\/openjdk.java.net\/jeps\/260\",\n+        \"sun.misc.SoftCache\", \"Removed. See https:\/\/openjdk.org\/jeps\/260\",\n@@ -189,1 +189,1 @@\n-        \"sun.reflect.ReflectionFactory\", \"See http:\/\/openjdk.java.net\/jeps\/260\"\n+        \"sun.reflect.ReflectionFactory\", \"See https:\/\/openjdk.org\/jeps\/260\"\n","filename":"test\/langtools\/tools\/jdeps\/jdkinternals\/RemovedJDKInternals.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8293701\n+ * @library ..\/lib\n+ * @build CompilerUtils\n+ * @run testng OptionalDependencyTest\n+ * @summary Tests optional dependency handling\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.spi.ToolProvider;\n+\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class OptionalDependencyTest {\n+    private static final String TEST_SRC = System.getProperty(\"test.src\");\n+    private static final Path SRC_DIR = Paths.get(TEST_SRC, \"src\");\n+\n+    private static final Path MODS_DIR = Paths.get(\"mods\");\n+\n+    private static final ToolProvider JAR_TOOL = ToolProvider.findFirst(\"jar\").orElseThrow();\n+    private static final Set<String> modules = Set.of(\"m1\", \"m2\", \"m3\");\n+\n+    @BeforeTest\n+    public void compileAll() throws Exception {\n+        CompilerUtils.cleanDir(MODS_DIR);\n+        modules.forEach(mn ->\n+                assertTrue(CompilerUtils.compileModule(SRC_DIR, MODS_DIR, mn)));\n+\n+        Path m1 = MODS_DIR.resolve(\"m1\");\n+        Path m2 = MODS_DIR.resolve(\"m2\");\n+        Path m3 = MODS_DIR.resolve(\"m3\");\n+        jar(\"cf\", \"m1.jar\", \"-C\", m1.toString(), \"p1\/P.class\",\n+                \"-C\", m1.toString(), \"module-info.class\");\n+        jar(\"cf\", \"m2.jar\", \"-C\", m2.toString(), \"p2\/Q.class\",\n+                \"-C\", m2.toString(), \"module-info.class\");\n+        jar(\"cf\", \"m3.jar\", \"-C\", m3.toString(), \"p3\/R.class\",\n+                \"-C\", m3.toString(), \"module-info.class\");\n+    }\n+\n+    \/*\n+     * Test if a requires static dependence is not resolved in the configuration.\n+     *\/\n+    @Test\n+    public void optionalDependenceNotResolved() {\n+        JdepsRunner jdepsRunner = new JdepsRunner(\"--module-path\", \"m2.jar\" + File.pathSeparator + \"m3.jar\",\n+                                                  \"--inverse\",\n+                                                  \"--package\", \"p2\", \"m1.jar\");\n+        int rc = jdepsRunner.run(true);\n+        assertTrue(rc == 0);\n+    }\n+\n+    \/*\n+     * Test if a requires static dependence is resolved in the configuration.\n+     *\/\n+    @Test\n+    public void optionalDependenceResolved() {\n+        JdepsRunner jdepsRunner = new JdepsRunner(\"--module-path\", \"m2.jar\" + File.pathSeparator + \"m3.jar\",\n+                                                  \"--inverse\", \"--add-modules\", \"m3\",\n+                                                  \"--package\", \"p2\", \"m1.jar\");\n+        int rc = jdepsRunner.run(true);\n+        assertTrue(rc == 0);\n+    }\n+\n+    private static void jar(String... options) {\n+        int rc = JAR_TOOL.run(System.out, System.err, options);\n+        assertTrue(rc == 0);\n+    }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/OptionalDependencyTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m1 {\n+    requires transitive m2;\n+    exports p1;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/src\/m1\/module-info.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p1;\n+public class P {\n+    public void m() {}\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/src\/m1\/p1\/P.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m2 {\n+    requires static m3;\n+    exports p2;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/src\/m2\/module-info.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p2;\n+public class Q {\n+    @p3.R\n+    public void m() {}\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/src\/m2\/p2\/Q.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m3 {\n+    exports p3;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/src\/m3\/module-info.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p3;\n+import java.lang.annotation.*;\n+\n+@Retention(RetentionPolicy.SOURCE)\n+public @interface R {\n+}\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/src\/m3\/p3\/R.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -248,1 +248,1 @@\n-        } else {\n+        } else if (to.getParent() != null) {\n","filename":"test\/langtools\/tools\/lib\/toolbox\/ToolBox.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+    public String appJar;\n+    public String appJarDir;\n@@ -108,0 +110,11 @@\n+    \/\/ AppCDS methods\n+    public CDSOptions setAppJar(String appJar) {\n+        this.appJar = appJar;\n+        return this;\n+    }\n+\n+    public CDSOptions setAppJarDir(String appJarDir) {\n+        this.appJarDir = appJarDir;\n+        return this;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSOptions.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.lang.reflect.Field;\n@@ -27,0 +28,1 @@\n+import java.util.concurrent.ForkJoinPool;\n@@ -30,1 +32,1 @@\n- * Helper class for running tasks in a virtual thread.\n+ * Helper class to support tests running tasks a in virtual thread.\n@@ -143,0 +145,37 @@\n+\n+    \/**\n+     * Returns the virtual thread scheduler.\n+     *\/\n+    private static ForkJoinPool defaultScheduler() {\n+        try {\n+            var clazz = Class.forName(\"java.lang.VirtualThread\");\n+            var field = clazz.getDeclaredField(\"DEFAULT_SCHEDULER\");\n+            field.setAccessible(true);\n+            return (ForkJoinPool) field.get(null);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    \/**\n+     * Sets the virtual thread scheduler's target parallelism.\n+     * @return the previous parallelism level\n+     *\/\n+    public static int setParallelism(int size) {\n+        return defaultScheduler().setParallelism(size);\n+    }\n+\n+    \/**\n+     * Ensures that the virtual thread scheduler's target parallelism is at least\n+     * the given size. If the target parallelism is less than the given size then\n+     * it is changed to the given size.\n+     * @return the previous parallelism level\n+     *\/\n+    public static int ensureParallelism(int size) {\n+        ForkJoinPool pool = defaultScheduler();\n+        int parallelism = pool.getParallelism();\n+        if (size > parallelism) {\n+            pool.setParallelism(size);\n+        }\n+        return parallelism;\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/thread\/VThreadRunner.java","additions":40,"deletions":1,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.CompilerControl;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * Tests transformation that converts `~x` into `-1-x` when `~x` is\n+ * used in an arithmetic expression.\n+ *\/\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 20, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 20, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n+public class NotOpTransformation {\n+\n+    private static final int I_C = 1234567;\n+\n+    private static final long L_C = 123_456_789_123_456L;\n+\n+    private int iFld = 4711;\n+\n+    private long lFld = 4711 * 4711 * 4711;\n+\n+    @Benchmark\n+    public void baselineInt(Blackhole bh) {\n+        bh.consume(iFld);\n+    }\n+\n+    @Benchmark\n+    public void baselineLong(Blackhole bh) {\n+        bh.consume(lFld);\n+    }\n+\n+    \/\/ Convert c-(~x)-x into c-(-1-x)-x, which is finally converted\n+    \/\/ into c+1.\n+    @Benchmark\n+    public void testInt1(Blackhole bh) {\n+        bh.consume(I_C - (~iFld) - iFld);\n+    }\n+\n+    \/\/ Convert ~(c-x)-x into -1-(c-x)-x, which is finally converted\n+    \/\/ into -1-c.\n+    @Benchmark\n+    public void testInt2(Blackhole bh) {\n+        bh.consume(~(I_C - iFld) - iFld);\n+    }\n+\n+    \/\/ Convert c-(~x)-x into c-(-1-x)-x, which is finally converted\n+    \/\/ into c+1.\n+    @Benchmark\n+    public void testLong1(Blackhole bh) {\n+        bh.consume(L_C - (~lFld) - lFld);\n+    }\n+\n+    \/\/ Convert ~(c-x)-x into -1-(c-x)-x, which is finally converted\n+    \/\/ into -1-c.\n+    @Benchmark\n+    public void testLong2(Blackhole bh) {\n+        bh.consume(~(L_C - lFld) - lFld);\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/NotOpTransformation.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"}]}