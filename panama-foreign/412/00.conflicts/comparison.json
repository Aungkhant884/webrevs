{"files":[{"patch":"@@ -360,0 +360,2 @@\n+     * @throws NullPointerException if either {@code elements == null}, or if any of the elements\n+     * in {@code elements} is {@code null}.\n@@ -392,0 +394,5 @@\n+<<<<<<< HEAD\n+=======\n+     * @throws NullPointerException if either {@code elements == null}, or if any of the elements\n+     * in {@code elements} is {@code null}.\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -409,0 +416,2 @@\n+     * @throws NullPointerException if either {@code elements == null}, or if any of the elements\n+     * in {@code elements} is {@code null}.\n@@ -444,0 +453,5 @@\n+<<<<<<< HEAD\n+=======\n+     * @throws NullPointerException if either {@code elements == null}, or if any of the elements\n+     * in {@code elements} is {@code null}.\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -60,0 +60,4 @@\n+<<<<<<< HEAD\n+=======\n+\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/Utils.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+<<<<<<< HEAD\n@@ -40,0 +41,2 @@\n+=======\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -53,0 +56,1 @@\n+<<<<<<< HEAD\n@@ -54,0 +58,3 @@\n+=======\n+        seq.bitOffset(groupElement(\"foo\"));\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -59,0 +66,1 @@\n+<<<<<<< HEAD\n@@ -60,0 +68,3 @@\n+=======\n+        seq.byteOffset(groupElement(\"foo\"));\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -89,0 +100,1 @@\n+<<<<<<< HEAD\n@@ -90,0 +102,3 @@\n+=======\n+        g.bitOffset(groupElement(\"foo\"));\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -95,0 +110,1 @@\n+<<<<<<< HEAD\n@@ -96,0 +112,3 @@\n+=======\n+        g.byteOffset(groupElement(\"foo\"));\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -171,0 +190,1 @@\n+<<<<<<< HEAD\n@@ -172,0 +192,40 @@\n+=======\n+        g.byteOffset(groupElement(\"foo\"));\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testBitOffsetBadUnboundedSequenceTraverse() {\n+        MemoryLayout layout = MemoryLayout.ofSequence(MemoryLayout.ofSequence(JAVA_INT));\n+        layout.bitOffset(sequenceElement(1), sequenceElement(0));\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testByteOffsetBadUnboundedSequenceTraverse() {\n+        MemoryLayout layout = MemoryLayout.ofSequence(MemoryLayout.ofSequence(JAVA_INT));\n+        layout.byteOffset(sequenceElement(1), sequenceElement(0));\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testBitOffsetHandleBadUnboundedSequenceTraverse() {\n+        MemoryLayout layout = MemoryLayout.ofSequence(MemoryLayout.ofSequence(JAVA_INT));\n+        layout.bitOffsetHandle(sequenceElement(1), sequenceElement(0));\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testByteOffsetHandleBadUnboundedSequenceTraverse() {\n+        MemoryLayout layout = MemoryLayout.ofSequence(MemoryLayout.ofSequence(JAVA_INT));\n+        layout.byteOffsetHandle(sequenceElement(1), sequenceElement(0));\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testBadByteOffsetNoMultipleOf8() {\n+        MemoryLayout layout = MemoryLayout.ofStruct(MemoryLayout.ofPaddingBits(7), JAVA_INT.withName(\"x\"));\n+        layout.byteOffset(groupElement(\"x\"));\n+    }\n+\n+    @Test(expectedExceptions = UnsupportedOperationException.class)\n+    public void testBadByteOffsetHandleNoMultipleOf8() throws Throwable {\n+        MemoryLayout layout = MemoryLayout.ofStruct(MemoryLayout.ofPaddingBits(7), JAVA_INT.withName(\"x\"));\n+        MethodHandle handle = layout.byteOffsetHandle(groupElement(\"x\"));\n+        handle.invoke();\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n@@ -215,2 +275,2 @@\n-            g.bitOffset(PathElement.groupElement(\"foo\"));\n-            g.byteOffset(PathElement.groupElement(\"foo\"));\n+            g.bitOffset(groupElement(\"foo\"));\n+            g.byteOffset(groupElement(\"foo\"));\n@@ -221,1 +281,1 @@\n-            g.varHandle(int.class, PathElement.groupElement(\"foo\")); \/\/ok\n+            g.varHandle(int.class, groupElement(\"foo\")); \/\/ok\n@@ -234,2 +294,2 @@\n-            g.bitOffset(PathElement.groupElement(\"foo\"));\n-            g.byteOffset(PathElement.groupElement(\"foo\"));\n+            g.bitOffset(groupElement(\"foo\"));\n+            g.byteOffset(groupElement(\"foo\"));\n@@ -240,1 +300,1 @@\n-            g.varHandle(int.class, PathElement.groupElement(\"foo\")); \/\/ok\n+            g.varHandle(int.class, groupElement(\"foo\")); \/\/ok\n@@ -308,1 +368,1 @@\n-            MemoryLayout selected = g.select(PathElement.groupElement(String.valueOf(i)));\n+            MemoryLayout selected = g.select(groupElement(String.valueOf(i)));\n@@ -315,1 +375,1 @@\n-            long bitOffset = g.bitOffset(PathElement.groupElement(String.valueOf(i)));\n+            long bitOffset = g.bitOffset(groupElement(String.valueOf(i)));\n@@ -317,1 +377,1 @@\n-            long byteOffset = g.byteOffset(PathElement.groupElement(String.valueOf(i)));\n+            long byteOffset = g.byteOffset(groupElement(String.valueOf(i)));\n@@ -324,1 +384,1 @@\n-            GroupLayout g2 = (GroupLayout)g.map(l -> MemoryLayouts.JAVA_DOUBLE, PathElement.groupElement(String.valueOf(i)));\n+            GroupLayout g2 = (GroupLayout)g.map(l -> MemoryLayouts.JAVA_DOUBLE, groupElement(String.valueOf(i)));\n@@ -349,1 +409,1 @@\n-            MemoryLayout selected = g.select(PathElement.groupElement(String.valueOf(i)));\n+            MemoryLayout selected = g.select(groupElement(String.valueOf(i)));\n@@ -356,1 +416,1 @@\n-            long bitOffset = g.bitOffset(PathElement.groupElement(String.valueOf(i)));\n+            long bitOffset = g.bitOffset(groupElement(String.valueOf(i)));\n@@ -358,1 +418,1 @@\n-            long byteOffset = g.byteOffset(PathElement.groupElement(String.valueOf(i)));\n+            long byteOffset = g.byteOffset(groupElement(String.valueOf(i)));\n@@ -365,1 +425,1 @@\n-            GroupLayout g2 = (GroupLayout)g.map(l -> MemoryLayouts.JAVA_DOUBLE, PathElement.groupElement(String.valueOf(i)));\n+            GroupLayout g2 = (GroupLayout)g.map(l -> MemoryLayouts.JAVA_DOUBLE, groupElement(String.valueOf(i)));\n","filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java","additions":74,"deletions":14,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+<<<<<<< HEAD\n@@ -76,0 +77,6 @@\n+=======\n+            unsafe.putDouble(unsafe_addrIn + (i * CARRIER_SIZE) , i);\n+        }\n+        for (int i = 0; i < ELEM_SIZE; i++) {\n+            unsafe.putDouble(unsafe_addrOut + (i * CARRIER_SIZE) , i);\n+>>>>>>> 0927cd0c9b764b8f12c74d3ad0af5e608292e005\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantFP.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}