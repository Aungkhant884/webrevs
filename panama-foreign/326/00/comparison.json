{"files":[{"patch":"@@ -99,0 +99,4 @@\n+    public static final MemorySegment nonCloseableSegment(MemorySegment seg) {\n+        return seg.withAccessModes(seg.accessModes() &  ~MemorySegment.CLOSE);\n+    }\n+\n@@ -100,2 +104,2 @@\n-        return MemorySegment.ofNativeRestricted(addr, numElements * layout.byteSize(),\n-               Thread.currentThread(), null, null);\n+        return nonCloseableSegment(MemorySegment.ofNativeRestricted(addr, numElements * layout.byteSize(),\n+               Thread.currentThread(), null, null));\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import static org.testng.Assert.assertTrue;\n@@ -34,1 +35,1 @@\n- * @summary jextract generates uncompilable code for no argument C function\n+ * @summary jextract should emit address to segment utility method on struct classes\n@@ -43,1 +44,1 @@\n- * @summary jextract generates uncompilable code for no argument C function\n+ * @summary jextract should emit address to segment utility method on struct classes\n@@ -57,0 +58,8 @@\n+        boolean caughtException = false;\n+        try {\n+            seg.close();\n+        } catch (UnsupportedOperationException uoe) {\n+            System.err.println(uoe);\n+            caughtException = true;\n+        }\n+        assertTrue(caughtException);\n","filename":"test\/jdk\/tools\/jextract\/test8253102\/LibTest8253102Test.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import jdk.incubator.foreign.CSupport;\n+import jdk.incubator.foreign.MemoryAddress;\n+import jdk.incubator.foreign.MemorySegment;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertTrue;\n+import test.jextract.test8253159.RuntimeHelper;\n+import static test.jextract.test8253159.test8253159_h.*;\n+\n+\/*\n+ * @test id=classes\n+ * @bug 8253159\n+ * @summary RuntimeHelper.asArrayRestricted should create noncloseable segment\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextract -l Test8253159 -t test.jextract.test8253159 -- test8253159.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8253159Test\n+ *\/\n+\/*\n+ * @test id=sources\n+ * @bug 8253159\n+ * @summary RuntimeHelper.asArrayRestricted should create noncloseable segment\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l Test8253159 -t test.jextract.test8253159 -- test8253159.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8253159Test\n+ *\/\n+public class LibTest8253159Test {\n+    @Test\n+    public void test() {\n+        MemoryAddress addr = get_array();\n+        MemorySegment seg = RuntimeHelper.asArrayRestricted(addr, CSupport.C_INT, 6);\n+        int[] actual = seg.toIntArray();\n+        int[] expected = new int[] { 2, 3, 5, 7, 11, 13};\n+        assertEquals(actual.length, expected.length);\n+        for (int i = 0; i < actual.length; i++) {\n+            assertEquals(actual[i], expected[i]);\n+        }\n+        boolean caughtException = false;\n+        try {\n+            seg.close();\n+        } catch (UnsupportedOperationException uoe) {\n+            System.err.println(uoe);\n+            caughtException = true;\n+        }\n+        assertTrue(caughtException);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jextract\/test8253159\/LibTest8253159Test.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"test8253159.h\"\n+\n+static int arr[] = {\n+    2, 3, 5, 7, 11, 13\n+};\n+\n+EXPORT int* get_array() {\n+    return arr;\n+}\n","filename":"test\/jdk\/tools\/jextract\/test8253159\/libTest8253159.c","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif \/\/ __cplusplus\n+\n+#ifdef _WIN64\n+#define EXPORT __declspec(dllexport)\n+#else\n+#define EXPORT\n+#endif\n+\n+EXPORT int* get_array();\n+\n+#ifdef __cplusplus\n+}\n+#endif \/\/ __cplusplus\n","filename":"test\/jdk\/tools\/jextract\/test8253159\/test8253159.h","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}