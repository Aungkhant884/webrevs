{"files":[{"patch":"@@ -763,1 +763,0 @@\n-    bool should_detach;\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,22 @@\n-JavaThread* ProgrammableUpcallHandler::maybe_attach_and_get_thread(bool* should_detach) {\n+\/\/ When an upcall is invoked from a thread that is not attached to the VM, we need to attach it,\n+\/\/ and then to detach it at some point later. Detaching a thread as soon as the upcall completes\n+\/\/ is suboptimal, as the same thread could later upcall to Java again, at which point the VM would\n+\/\/ create multiple Java views of the same native thread. For this reason, we use thread local storage\n+\/\/ to keep track of the fact that we have attached a native thread to the VM. When the thread local\n+\/\/ storage is destroyed (which happens when the native threads is terminated), we check if the\n+\/\/ storage has an attached thread and, if so, we detach it from the VM.\n+struct UpcallContext {\n+  Thread* attachedThread;\n+\n+  ~UpcallContext() {\n+    if (attachedThread != NULL) {\n+      JavaVM_ *vm = (JavaVM *)(&main_vm);\n+      vm->functions->DetachCurrentThread(vm);\n+    }\n+  }\n+};\n+\n+\n+APPROVED_CPP_THREAD_LOCAL UpcallContext threadContext;\n+\n+JavaThread* ProgrammableUpcallHandler::maybe_attach_and_get_thread() {\n@@ -47,1 +68,0 @@\n-    *should_detach = true;\n@@ -49,0 +69,1 @@\n+    threadContext.attachedThread = thread;\n@@ -50,2 +71,0 @@\n-  } else {\n-    *should_detach = false;\n@@ -63,1 +82,1 @@\n-  JavaThread* thread = maybe_attach_and_get_thread(&context->should_detach);\n+  JavaThread* thread = maybe_attach_and_get_thread();\n@@ -117,4 +136,0 @@\n-\n-  if (context->should_detach) {\n-    detach_current_thread();\n-  }\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp","additions":24,"deletions":9,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  static JavaThread* maybe_attach_and_get_thread(bool* should_detach);\n+  static JavaThread* maybe_attach_and_get_thread();\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}