[{"commit":{"message":"Remove whitespaces"},"files":[{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"}],"sha":"67f2480941e7257018726225a75aeead5310991d"},{"commit":{"message":"Improve javadoc"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryAddress.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/invoker_module\/handle\/invoker\/MethodHandleInvoker.java"},{"filename":"test\/jdk\/java\/foreign\/handles\/lookup_module\/handle\/lookup\/MethodHandleLookup.java"}],"sha":"9b910c58008ec16d6fc16106bc843d98a3087e98"},{"commit":{"message":"Merge branch 'foreign-preview' into symbol_lookup_reloaded"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/CLinker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"}],"sha":"84cc081c9f2b8b8d53d76b99792c376a401d43c8"},{"commit":{"message":"Tweak javadoc of SymbolLookup"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"}],"sha":"9deca29f1243928d635553e54bda2bc14853fb95"},{"commit":{"message":"Tweak SymbolLookup javadoc"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"}],"sha":"db41f9c09383e0e6d9444e9cda9bdacc7f7c10c1"},{"commit":{"message":"Fix package javadoc"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"}],"sha":"3ca19bea6e0b4fc8cea62454ecd5ae6ecf51e1bc"},{"commit":{"message":"Fix benchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/VaList.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"}],"sha":"d7a4504f58b1ef3a4f91aa9aabd9c8e00355bda2"},{"commit":{"message":"All tests pass"},"files":[{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestClassLoaderFindNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestFallbackLookup.java"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallAsync.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStack.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/loaderLookup\/lookup\/Lookup.java"},{"filename":"test\/jdk\/java\/foreign\/malloc\/TestMixedMallocFree.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestAsyncStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/upcalldeopt\/TestUpcallDeopt.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/jdk\/java\/foreign\/virtual\/TestVirtualCalls.java"}],"sha":"7630e4ba356b9d44a1ff757cf2856704cad65f72"},{"commit":{"message":"Add test comment"},"files":[{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"}],"sha":"bb92c907ade84ce2dc867870e5e54f6fa4689786"},{"commit":{"message":"Initial push\n* API changes\n* loader lookup test\nTodo\n* test changes\n* benchmark changes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/CLinker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/LibraryLookupTest.java"},{"filename":"test\/jdk\/java\/foreign\/libLibraryLookup.c"}],"sha":"568f99862ced664628e8ece1dd469310fb869727"},{"commit":{"message":"Initial push"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/CLinker.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java"}],"sha":"bcf316109493f443590ca0b766722ee908a0fc18"},{"commit":{"message":"Re-add implicit session class, to avoid confusion in `DirectBuffer::address`."},"files":[],"sha":"b43d683c39439d9be309d0d4b64fdd95fd5489c6"},{"commit":{"message":"Improve javadoc"},"files":[],"sha":"2a14353ffcc720cf010540b802e2869f971212cf"},{"commit":{"message":"API tweaks"},"files":[],"sha":"d43001d29b76a1cb8d935f5b48173bb80dd8653c"},{"commit":{"message":"Readd equals\/hashcode"},"files":[],"sha":"ecc130f61d6b867c7b7f8ee9483f810253d95a6c"},{"commit":{"message":"Improve implementation by accepting MemorySessionImpl where really required."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"ea698bc63c62f5b239c55d7082ae70d4c60c8518"},{"commit":{"message":"Fix tests and benchmarks"},"files":[{"filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java"}],"sha":"a3accae9d707cc2a98bb70c9598181841135b540"},{"commit":{"message":"Add support for non closeable views"},"files":[],"sha":"03f1f7b1ce5a4f594d1c15f14943459450f86db7"}]