{"files":[{"patch":"@@ -247,0 +247,1 @@\n+<<<<<<< HEAD\n@@ -252,0 +253,3 @@\n+=======\n+    recorder->describe_scope(pc_offset, methodHandle(), scope()->method(), bci(), reexecute, rethrow_exception, is_method_handle_invoke, false \/* is opt native *\/, return_oop, locvals, expvals, monvals);\n+>>>>>>> c32f1085d985ef83bf7c7c783007408a9f2b049e\n","filename":"src\/hotspot\/share\/c1\/c1_IR.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+<<<<<<< HEAD\n@@ -48,0 +49,7 @@\n+=======\n+    PCDESC_reexecute                 = 1 << 0,\n+    PCDESC_is_method_handle_invoke   = 1 << 1,\n+    PCDESC_return_oop                = 1 << 2,\n+    PCDESC_rethrow_exception         = 1 << 3,\n+    PCDESC_is_optimized_linkToNative = 1 << 4\n+>>>>>>> c32f1085d985ef83bf7c7c783007408a9f2b049e\n@@ -91,0 +99,3 @@\n+  bool     is_optimized_linkToNative()     const { return (_flags & PCDESC_is_optimized_linkToNative) != 0;     }\n+  void set_is_optimized_linkToNative(bool z)     { set_flag(PCDESC_is_optimized_linkToNative, z); }\n+\n","filename":"src\/hotspot\/share\/code\/pcDesc.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1191,0 +1191,1 @@\n+<<<<<<< HEAD\n@@ -1196,0 +1197,3 @@\n+=======\n+  _debug_recorder->describe_scope(pc_offset, method, NULL, bci, reexecute, throw_exception, is_mh_invoke, false, return_oop,\n+>>>>>>> c32f1085d985ef83bf7c7c783007408a9f2b049e\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -539,0 +539,1 @@\n+                  _native_stubs(NULL),\n@@ -835,0 +836,1 @@\n+    _native_stubs(NULL),\n@@ -1005,0 +1007,11 @@\n+<<<<<<< HEAD\n+=======\n+  _intrinsics = NULL;\n+  _macro_nodes = new(comp_arena()) GrowableArray<Node*>(comp_arena(), 8,  0, NULL);\n+  _predicate_opaqs = new(comp_arena()) GrowableArray<Node*>(comp_arena(), 8,  0, NULL);\n+  _expensive_nodes = new(comp_arena()) GrowableArray<Node*>(comp_arena(), 8,  0, NULL);\n+  _range_check_casts = new(comp_arena()) GrowableArray<Node*>(comp_arena(), 8,  0, NULL);\n+  _opaque4_nodes = new(comp_arena()) GrowableArray<Node*>(comp_arena(), 8,  0, NULL);\n+  _native_stubs = new(comp_arena()) GrowableArray<address>(comp_arena(), 1,  0, NULL);\n+  register_library_intrinsics();\n+>>>>>>> c32f1085d985ef83bf7c7c783007408a9f2b049e\n@@ -2907,0 +2920,1 @@\n+  case Op_CallNative:\n@@ -4702,0 +4716,3 @@\n+void Compile::add_native_stub(address stubAddress) {\n+  _native_stubs->append(stubAddress);\n+}\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"memory\/allocation.hpp\"\n@@ -1143,0 +1144,1 @@\n+<<<<<<< HEAD\n@@ -1147,0 +1149,16 @@\n+=======\n+    C->debug_info()->describe_scope(\n+      safepoint_pc_offset,\n+      null_mh,\n+      scope_method,\n+      jvms->bci(),\n+      jvms->should_reexecute(),\n+      rethrow_exception,\n+      is_method_handle_invoke,\n+      mach->is_MachCallNative(),\n+      return_oop,\n+      locvals,\n+      expvals,\n+      monvals\n+    );\n+>>>>>>> c32f1085d985ef83bf7c7c783007408a9f2b049e\n@@ -1522,0 +1540,1 @@\n+        bool observe_safepoint = is_sfn;\n@@ -1532,4 +1551,1 @@\n-          if (mcall->is_MachCallLeaf()) {\n-            is_mcall = false;\n-            is_sfn = false;\n-          }\n+          observe_safepoint = mcall->guaranteed_safepoint();\n@@ -1539,2 +1555,1 @@\n-        if (is_sfn || is_mcall) {\n-\n+        if (observe_safepoint) {\n@@ -1686,0 +1701,2 @@\n+      assert(!is_mcall || (call_returns[block->_pre_order] == (uint) current_offset), \"ret_addr_offset() did not match size of emitted code\");\n+\n@@ -3381,0 +3398,10 @@\n+    address* native_stubs = NULL;\n+    int num_stubs = 0;\n+    if (!C->native_stubs()->is_empty()) {\n+      num_stubs = C->native_stubs()->length();\n+      native_stubs = NEW_C_HEAP_ARRAY(address, num_stubs, mtInternal);\n+      for (int i = 0; i < num_stubs; i++) {\n+        native_stubs[i] = C->native_stubs()->at(i);\n+      }\n+    }\n+\n@@ -3393,1 +3420,3 @@\n-                                     C->rtm_state());\n+                                     C->rtm_state(),\n+                                     native_stubs,\n+                                     num_stubs);\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":36,"deletions":7,"binary":false,"changes":43,"status":"modified"}]}