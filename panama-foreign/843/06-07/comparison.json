{"files":[{"patch":"@@ -776,6 +776,0 @@\n-    \/\/ This flag is lazily initialized in LauncherHelper after this class is initialized (hence mutable)\n-    private static boolean ENABLE_NATIVE_ACCESS_SET_IN_MANIFEST = false;\n-\n-    public static void setEnableNativeAccessSetInManifest() {\n-        ENABLE_NATIVE_ACCESS_SET_IN_MANIFEST = true;\n-    }\n@@ -784,1 +778,1 @@\n-        return HAS_ENABLE_NATIVE_ACCESS_FLAG || ENABLE_NATIVE_ACCESS_SET_IN_MANIFEST;\n+        return HAS_ENABLE_NATIVE_ACCESS_FLAG;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleBootstrap.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -605,1 +605,0 @@\n-                ModuleBootstrap.setEnableNativeAccessSetInManifest();\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-            { \"panama_enable_native_access_false\", REINVOKER, failWithError(\"Illegal native access from: module panama_module\"),\n+            { \"panama_enable_native_access_false\", REINVOKER, successWithWarning(\"panama_module\"),\n@@ -108,1 +108,1 @@\n-            { \"panama_enable_native_access_reflection_false\", REINVOKER, failWithError(\"Illegal native access from: module panama_module\"),\n+            { \"panama_enable_native_access_reflection_false\", REINVOKER, successWithWarning(\"panama_module\"),\n@@ -112,1 +112,1 @@\n-            { \"panama_enable_native_access_invoke_false\", REINVOKER, failWithError(\"Illegal native access from: module panama_module\"),\n+            { \"panama_enable_native_access_invoke_false\", REINVOKER, successWithWarning(\"panama_module\"),\n","filename":"test\/jdk\/java\/foreign\/enablenativeaccess\/TestEnableNativeAccessJarManifest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}