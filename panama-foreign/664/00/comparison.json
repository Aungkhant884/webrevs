{"files":[{"patch":"@@ -212,1 +212,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the byte elements to be copied to the newly allocated memory block.\n@@ -215,2 +215,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfByte elementLayout, byte[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfByte elementLayout, byte... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n@@ -223,1 +223,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the short elements to be copied to the newly allocated memory block.\n@@ -226,2 +226,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfShort elementLayout, short[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfShort elementLayout, short... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n@@ -234,1 +234,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the char elements to be copied to the newly allocated memory block.\n@@ -237,2 +237,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfChar elementLayout, char[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfChar elementLayout, char... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n@@ -245,1 +245,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the int elements to be copied to the newly allocated memory block.\n@@ -248,2 +248,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfInt elementLayout, int[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfInt elementLayout, int... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n@@ -256,1 +256,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the float elements to be copied to the newly allocated memory block.\n@@ -259,2 +259,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfFloat elementLayout, float[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfFloat elementLayout, float... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n@@ -267,1 +267,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the long elements to be copied to the newly allocated memory block.\n@@ -270,2 +270,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfLong elementLayout, long[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfLong elementLayout, long... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n@@ -278,1 +278,1 @@\n-     * @param array the array to be copied on the newly allocated memory block.\n+     * @param elements the double elements to be copied to the newly allocated memory block.\n@@ -281,2 +281,2 @@\n-    default MemorySegment allocateArray(ValueLayout.OfDouble elementLayout, double[] array) {\n-        return copyArrayWithSwapIfNeeded(array, elementLayout, MemorySegment::ofArray);\n+    default MemorySegment allocateArray(ValueLayout.OfDouble elementLayout, double... elements) {\n+        return copyArrayWithSwapIfNeeded(elements, elementLayout, MemorySegment::ofArray);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}