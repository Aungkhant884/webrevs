{"files":[{"patch":"@@ -818,1 +818,3 @@\n-                    return new DirectByteBuffer(address, cap, obj, unmapperProxy.fileDescriptor(), unmapperProxy.isSync(), segment);\n+                    return unmapperProxy == null\n+                            ? new DirectByteBuffer(address, cap, obj, segment)\n+                            : new DirectByteBuffer(address, cap, obj, unmapperProxy.fileDescriptor(), unmapperProxy.isSync(), segment);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public sealed class MappedMemorySegmentImpl extends NativeMemorySegmentImpl {\n+public final class MappedMemorySegmentImpl extends NativeMemorySegmentImpl {\n@@ -80,1 +80,3 @@\n-        SCOPED_MEMORY_ACCESS.load(sessionImpl(), min, unmapper.isSync(), length);\n+        if (unmapper != null) {\n+            SCOPED_MEMORY_ACCESS.load(sessionImpl(), min, unmapper.isSync(), length);\n+        }\n@@ -84,1 +86,3 @@\n-        SCOPED_MEMORY_ACCESS.unload(sessionImpl(), min, unmapper.isSync(), length);\n+        if (unmapper != null) {\n+            SCOPED_MEMORY_ACCESS.unload(sessionImpl(), min, unmapper.isSync(), length);\n+        }\n@@ -88,1 +92,1 @@\n-        return SCOPED_MEMORY_ACCESS.isLoaded(sessionImpl(), min, unmapper.isSync(), length);\n+        return unmapper == null || SCOPED_MEMORY_ACCESS.isLoaded(sessionImpl(), min, unmapper.isSync(), length);\n@@ -92,27 +96,2 @@\n-        SCOPED_MEMORY_ACCESS.force(sessionImpl(), unmapper.fileDescriptor(), min, unmapper.isSync(), 0, length);\n-    }\n-\n-    public static final class EmptyMappedMemorySegmentImpl extends MappedMemorySegmentImpl {\n-\n-        public EmptyMappedMemorySegmentImpl(boolean readOnly, MemorySessionImpl session) {\n-            super(0, null, 0, readOnly, session);\n-        }\n-\n-        @Override\n-        public void load() {\n-            \/\/ do nothing\n-        }\n-\n-        @Override\n-        public void unload() {\n-            \/\/ do nothing\n-        }\n-\n-        @Override\n-        public boolean isLoaded() {\n-            return true;\n-        }\n-\n-        @Override\n-        public void force() {\n-            \/\/ do nothing\n+        if (unmapper != null) {\n+            SCOPED_MEMORY_ACCESS.force(sessionImpl(), unmapper.fileDescriptor(), min, unmapper.isSync(), 0, length);\n@@ -121,0 +100,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java","additions":11,"deletions":31,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1244,1 +1244,1 @@\n-            return new MappedMemorySegmentImpl.EmptyMappedMemorySegmentImpl(readOnly, sessionImpl);\n+            return new MappedMemorySegmentImpl(0, null, 0, readOnly, sessionImpl);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -555,0 +555,3 @@\n+            ByteBuffer byteBuffer = segment.asByteBuffer();\n+            assertEquals(byteBuffer.capacity(), 0);\n+            assertFalse(byteBuffer.isReadOnly());\n@@ -567,0 +570,3 @@\n+            ByteBuffer byteBuffer = segment.asByteBuffer();\n+            assertEquals(byteBuffer.capacity(), 0);\n+            assertTrue(byteBuffer.isReadOnly());\n","filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}