{"files":[{"patch":"@@ -93,1 +93,1 @@\n-            \/\/ It is possible to end up here in two cases: this scope was the ancestor of some other confined scope\n+            \/\/ It is possible to end up here in two cases: this scope was kept alive by some other confined scope\n@@ -95,1 +95,1 @@\n-            \/\/ this scope might be the ancestor of a shared scope, which means the release call can come from any\n+            \/\/ this scope might be kept alive by a shared scope, which means the release call can come from any\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,3 +326,2 @@\n-        \/\/ Now let's keep trying to close 'root' until we succeed. This is trickier than it seems: releases of\n-        \/\/ the confined scope happen in different threads, so that the confined scope lock count is updated racily.\n-        \/\/ If that happens, the following close will blow up.\n+        \/\/ Now let's close 'root'. This is trickier than it seems: releases of the confined scope happen in different\n+        \/\/ threads, so that the confined scope lock count is updated racily. If that happens, the following close will blow up.\n","filename":"test\/jdk\/java\/foreign\/TestResourceScope.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}