{"files":[{"patch":"@@ -327,4 +327,4 @@\n-                                 &buffer,\n-                                 exception_handler_offset,\n-                                 receiver,\n-                                 in_ByteSize(frame_data_offset));\n+                         &buffer,\n+                         exception_handler_offset,\n+                         receiver,\n+                         in_ByteSize(frame_data_offset));\n","filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -390,4 +390,4 @@\n-                                 &buffer,\n-                                 exception_handler_offset,\n-                                 receiver,\n-                                 in_ByteSize(frame_data_offset));\n+                         &buffer,\n+                         exception_handler_offset,\n+                         receiver,\n+                         in_ByteSize(frame_data_offset));\n","filename":"src\/hotspot\/cpu\/x86\/upcallLinker_x86_64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-  virtual bool is_upcall_stub() const        { return false; }\n+  virtual bool is_upcall_stub() const                 { return false; }\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -897,6 +897,0 @@\n-  \/\/\n-  \/\/ Also, native callees can not save oops, so we kill the SOE registers\n-  \/\/ here in case a native call has a safepoint. This doesn't work for\n-  \/\/ RBP though, which seems to be special-cased elsewhere to always be\n-  \/\/ treated as alive, so we instead manually save the location of RBP\n-  \/\/ before doing the native call (see DowncallStubGenerator::generate).\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}