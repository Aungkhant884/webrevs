{"files":[{"patch":"@@ -118,1 +118,0 @@\n-            files.add(jfoFromString(pkgName,\"C\", getCAnnotationSource()));\n@@ -134,6 +133,0 @@\n-    private String getCAnnotationSource() throws URISyntaxException, IOException {\n-        URL cAnnotation = OutputFactory.class.getResource(\"resources\/C.java.template\");\n-        return (pkgName.isEmpty()? \"\" : \"package \" + pkgName + \";\\n\") +\n-                String.join(\"\\n\", Files.readAllLines(Paths.get(cAnnotation.toURI())));\n-    }\n-\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/OutputFactory.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-                \"-parameters\", \"-g:lines\",\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/Writer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,21 +0,0 @@\n-\/\/ Generated by jextract\n-\n-import java.lang.annotation.Documented;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n-\n-\/**\n- * Annotation to indicate C types\n- *\/\n-@Target({ ElementType.TYPE_USE })\n-@Retention(RetentionPolicy.RUNTIME)\n-@Documented\n-public @interface C {\n-    \/**\n-     * The C type associated with a given Java type\n-     * @return The C type associated with a given Java type\n-     *\/\n-    String value();\n-}\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/C.java.template","additions":0,"deletions":21,"binary":false,"changes":21,"status":"deleted"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Parameter;\n-import java.nio.file.Path;\n-import org.testng.annotations.Test;\n-import static org.testng.Assert.assertEquals;\n-\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @modules jdk.incubator.jextract\n- * @build JextractToolRunner\n- * @bug 8252302\n- * @summary jextract should compile generated java code with -parameters and -g:lines option\n- * @run testng\/othervm -Dforeign.restricted=permit Test8252302\n- *\/\n-public class Test8252302 extends JextractToolRunner {\n-    @Test\n-    public void test() {\n-        Path outputPath = getOutputFilePath(\"output8252302\");\n-        Path headerFile = getInputFilePath(\"test8252302.h\");\n-        run(\"-d\", outputPath.toString(), headerFile.toString()).checkSuccess();\n-        try(Loader loader = classLoader(outputPath)) {\n-            Class<?> headerClass = loader.loadClass(\"test8252302_h\");\n-            Method m = findMethod(headerClass, \"func\", int.class, int.class);\n-            Parameter[] params = m.getParameters();\n-            assertEquals(params[0].getName(), \"x\");\n-            assertEquals(params[1].getName(), \"y\");\n-        } finally {\n-            deleteDir(outputPath);\n-        }\n-    }\n-}\n","filename":"test\/jdk\/tools\/jextract\/Test8252302.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,32 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif \/\/ __cplusplus\n-\n-void func(int x, int y);\n-\n-#ifdef __cplusplus\n-}\n-#endif \/\/ __cplusplus\n","filename":"test\/jdk\/tools\/jextract\/test8252302.h","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"}]}