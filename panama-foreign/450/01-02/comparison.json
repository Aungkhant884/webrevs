{"files":[{"patch":"@@ -157,2 +157,2 @@\n-        Constant emitGetter(JavaSourceBuilder builder, String mods, Function<List<String>, String> getterNameFunc, String msgIfNull) {\n-            builder.emitGetter(mods, kind.type, getterNameFunc.apply(getterNameParts()), accessExpression(), true, msgIfNull);\n+        Constant emitGetter(JavaSourceBuilder builder, String mods, Function<List<String>, String> getterNameFunc, String symbolName) {\n+            builder.emitGetter(mods, kind.type, getterNameFunc.apply(getterNameParts()), accessExpression(), true, symbolName);\n@@ -179,0 +179,4 @@\n+            if (constant.kind != kind) {\n+                throw new AssertionError(\"Factory return wrong kind of constant; expected: \"\n+                        + kind + \"; found: \" + constant.kind);\n+            }\n@@ -266,2 +270,2 @@\n-        } else if (l instanceof GroupLayout) {\n-            if (((GroupLayout) l).isStruct()) {\n+        } else if (l instanceof GroupLayout group) {\n+            if (group.isStruct()) {\n@@ -274,1 +278,1 @@\n-            for (MemoryLayout e : ((GroupLayout) l).memberLayouts()) {\n+            for (MemoryLayout e : group.memberLayouts()) {\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/ConstantBuilder.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-                        .emitGetter(this, MEMBER_MODS, Constant.QUALIFIED_NAME, \"unresolved symbol: \" + nativeName);\n+                        .emitGetter(this, MEMBER_MODS, Constant.QUALIFIED_NAME, nativeName);\n@@ -76,1 +76,1 @@\n-                        .emitGetter(this, MEMBER_MODS, Constant.QUALIFIED_NAME, \"unresolved symbol: \" + nativeName);\n+                        .emitGetter(this, MEMBER_MODS, Constant.QUALIFIED_NAME, nativeName);\n@@ -87,1 +87,1 @@\n-                    .emitGetter(this, MEMBER_MODS, Constant.QUALIFIED_NAME, \"unresolved symbol: \" + nativeName);\n+                    .emitGetter(this, MEMBER_MODS, Constant.QUALIFIED_NAME, nativeName);\n@@ -157,1 +157,1 @@\n-        append(\", \\\"unresolved symbol: \");\n+        append(\", \\\"\");\n@@ -247,1 +247,1 @@\n-        append(\", \\\"unresolved symbol: \");\n+        append(\", \\\"\");\n@@ -265,1 +265,1 @@\n-        append(\", \\\"unresolved symbol: \");\n+        append(\", \\\"\");\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/HeaderFileBuilder.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-    protected void emitGetter(String mods, Class<?> type, String name, String access, boolean nullCheck, String errMsg) {\n+    protected void emitGetter(String mods, Class<?> type, String name, String access, boolean nullCheck, String symbolName) {\n@@ -245,1 +245,1 @@\n-            append(errMsg);\n+            append(symbolName);\n@@ -260,0 +260,1 @@\n+    int constant_class_index = 0;\n@@ -270,1 +271,1 @@\n-            constantBuilder = new ConstantBuilder(this, Kind.CLASS, javaName + \"_constants\");\n+            constantBuilder = new ConstantBuilder(this, Kind.CLASS, \"constants$\" + constant_class_index++);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/JavaSourceBuilder.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-    static <T> T requireNonNull(T obj, String msg) {\n+    static <T> T requireNonNull(T obj, String symbolName) {\n@@ -31,1 +31,1 @@\n-            throw new UnsatisfiedLinkError(msg);\n+            throw new UnsatisfiedLinkError(\"unresolved symbol: \" + symbolName);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}