{"files":[{"patch":"@@ -617,1 +617,1 @@\n-        var dstInfo = baseAndScale(dstArray);\n+        var dstInfo = BaseAndScale.of(dstArray);\n@@ -644,1 +644,1 @@\n-        var srcInfo = baseAndScale(srcArray);\n+        var srcInfo = BaseAndScale.of(srcArray);\n@@ -704,12 +704,28 @@\n-    private static BaseAndScale baseAndScale(Object array) {\n-        return switch (array) {\n-            case byte[]   __ -> new BaseAndScale(Unsafe.ARRAY_BYTE_BASE_OFFSET, Unsafe.ARRAY_BYTE_INDEX_SCALE);\n-            case char[]   __ -> new BaseAndScale(Unsafe.ARRAY_CHAR_BASE_OFFSET, Unsafe.ARRAY_CHAR_INDEX_SCALE);\n-            case short[]  __ -> new BaseAndScale(Unsafe.ARRAY_SHORT_BASE_OFFSET, Unsafe.ARRAY_SHORT_INDEX_SCALE);\n-            case int[]    __ -> new BaseAndScale(Unsafe.ARRAY_INT_BASE_OFFSET, Unsafe.ARRAY_INT_INDEX_SCALE);\n-            case float[]  __ -> new BaseAndScale(Unsafe.ARRAY_FLOAT_BASE_OFFSET, Unsafe.ARRAY_FLOAT_INDEX_SCALE);\n-            case long[]   __ -> new BaseAndScale(Unsafe.ARRAY_LONG_BASE_OFFSET,  Unsafe.ARRAY_LONG_INDEX_SCALE);\n-            case double[] __ -> new BaseAndScale(Unsafe.ARRAY_DOUBLE_BASE_OFFSET, Unsafe.ARRAY_DOUBLE_INDEX_SCALE);\n-            default -> throw new IllegalArgumentException(\"Not a supported array class: \" + array.getClass().getSimpleName());\n-        };\n-    }\n+    record BaseAndScale(int base, long scale) {\n+        private static final BaseAndScale BYTE =\n+                new BaseAndScale(Unsafe.ARRAY_BYTE_BASE_OFFSET, Unsafe.ARRAY_BYTE_INDEX_SCALE);\n+        private static final BaseAndScale CHAR =\n+                new BaseAndScale(Unsafe.ARRAY_CHAR_BASE_OFFSET, Unsafe.ARRAY_CHAR_INDEX_SCALE);\n+        private static final BaseAndScale SHORT =\n+                new BaseAndScale(Unsafe.ARRAY_SHORT_BASE_OFFSET, Unsafe.ARRAY_SHORT_INDEX_SCALE);\n+        private static final BaseAndScale INT =\n+                new BaseAndScale(Unsafe.ARRAY_INT_BASE_OFFSET, Unsafe.ARRAY_INT_INDEX_SCALE);\n+        private static final BaseAndScale FLOAT =\n+                new BaseAndScale(Unsafe.ARRAY_FLOAT_BASE_OFFSET, Unsafe.ARRAY_FLOAT_INDEX_SCALE);\n+        private static final BaseAndScale LONG =\n+                new BaseAndScale(Unsafe.ARRAY_LONG_BASE_OFFSET, Unsafe.ARRAY_LONG_INDEX_SCALE);\n+        private static final BaseAndScale DOUBLE =\n+                new BaseAndScale(Unsafe.ARRAY_DOUBLE_BASE_OFFSET, Unsafe.ARRAY_DOUBLE_INDEX_SCALE);\n+\n+        static BaseAndScale of(Object array) {\n+            return switch (array) {\n+                case byte[]   __ -> BaseAndScale.BYTE;\n+                case char[]   __ -> BaseAndScale.CHAR;\n+                case short[]  __ -> BaseAndScale.SHORT;\n+                case int[]    __ -> BaseAndScale.INT;\n+                case float[]  __ -> BaseAndScale.FLOAT;\n+                case long[]   __ -> BaseAndScale.LONG;\n+                case double[] __ -> BaseAndScale.DOUBLE;\n+                default -> throw new IllegalArgumentException(\"Not a supported array class: \" + array.getClass().getSimpleName());\n+            };\n+        }\n@@ -717,1 +733,1 @@\n-    record BaseAndScale(int base, long scale){ }\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":31,"deletions":15,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -211,2 +211,4 @@\n-    private static void groupByEightBytes(MemoryLayout l, long offset, List<ArgumentClassImpl>[] groups) {\n-        switch (l) {\n+    private static void groupByEightBytes(MemoryLayout layout,\n+                                          long offset,\n+                                          List<ArgumentClassImpl>[] groups) {\n+        switch (layout) {\n@@ -242,1 +244,1 @@\n-            case null, default -> throw new IllegalStateException(\"Unexpected layout: \" + l);\n+            case null, default -> throw new IllegalStateException(\"Unexpected layout: \" + layout);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/TypeClass.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}