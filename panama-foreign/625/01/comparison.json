{"files":[{"patch":"@@ -154,2 +154,0 @@\n-  \/\/ To spill receiver during deopt\n-  int deopt_spill_size = 1 * BytesPerWord;\n@@ -158,2 +156,1 @@\n-  int deopt_spill_offset     = shuffle_area_offset    + out_arg_area;\n-  int res_save_area_offset   = deopt_spill_offset     + deopt_spill_size;\n+  int res_save_area_offset   = shuffle_area_offset    + out_arg_area;\n@@ -195,3 +192,0 @@\n-  \/\/      | deopt_spill         |\n-  \/\/      |---------------------| = deopt_spill_offset\n-  \/\/      |                     |\n","filename":"src\/hotspot\/cpu\/aarch64\/universalUpcallHandler_aarch64.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1583,5 +1583,0 @@\n-            @Override\n-            public void ensureCustomized(MethodHandle mh) {\n-                mh.customize();\n-            }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -138,7 +138,0 @@\n-    \/**\n-     * Ensure given method handle is customized\n-     *\n-     * @param mh the method handle\n-     *\/\n-    void ensureCustomized(MethodHandle mh);\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import jdk.internal.access.JavaLangInvokeAccess;\n-import jdk.internal.access.SharedSecrets;\n@@ -51,0 +49,1 @@\n+import static java.lang.invoke.MethodHandles.exactInvoker;\n@@ -66,2 +65,0 @@\n-    private static final JavaLangInvokeAccess JLI = SharedSecrets.getJavaLangInvokeAccess();\n-\n@@ -105,1 +102,1 @@\n-        JLI.ensureCustomized(doBindings);\n+        doBindings = insertArguments(exactInvoker(doBindings.type()), 0, doBindings);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}