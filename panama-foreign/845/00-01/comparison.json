{"files":[{"patch":"@@ -297,1 +297,1 @@\n-            MemorySegment hello = arena.allocateString(\"Hello\");\n+            MemorySegment hello = arena.allocateFrom(\"Hello\");\n@@ -309,1 +309,1 @@\n-            MemorySegment hello = arena.allocateString(\"Hello\");\n+            MemorySegment hello = arena.allocateFrom(\"Hello\");\n@@ -353,1 +353,1 @@\n-            MemorySegment s = arena.allocateString(\"%d plus %d equals %d\\n\");\n+            MemorySegment s = arena.allocateFrom(\"%d plus %d equals %d\\n\");\n","filename":"doc\/panama_ffi.md","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n- *     MemorySegment str = arena.allocateString(\"Hello\");\n+ *     MemorySegment str = arena.allocateFrom(\"Hello\");\n@@ -478,1 +478,1 @@\n- *     int res = (int)printf.invokeExact(arena.allocateString(\"%d plus %d equals %d\"), 2, 2, 4); \/\/prints \"2 plus 2 equals 4\"\n+ *     int res = (int)printf.invokeExact(arena.allocateFrom(\"%d plus %d equals %d\"), 2, 2, 4); \/\/prints \"2 plus 2 equals 4\"\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-     * allocateString(str, StandardCharsets.UTF_8);\n+     * allocateFrom(str, StandardCharsets.UTF_8);\n@@ -93,1 +93,1 @@\n-    default MemorySegment allocateString(String str) {\n+    default MemorySegment allocateFrom(String str) {\n@@ -95,1 +95,1 @@\n-        return allocateString(str, StandardCharsets.UTF_8);\n+        return allocateFrom(str, StandardCharsets.UTF_8);\n@@ -126,1 +126,1 @@\n-    default MemorySegment allocateString(String str, Charset charset) {\n+    default MemorySegment allocateFrom(String str, Charset charset) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n- *     MemorySegment cString = arena.allocateString(\"Hello\");\n+ *     MemorySegment cString = arena.allocateFrom(\"Hello\");\n@@ -113,1 +113,1 @@\n- * {@linkplain java.lang.foreign.SegmentAllocator#allocateString(java.lang.String) converting} Java strings into\n+ * {@linkplain java.lang.foreign.SegmentAllocator#allocateFrom(java.lang.String) converting} Java strings into\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-                MemorySegment str = arena.allocateString(\"Hello\");\n+                MemorySegment str = arena.allocateFrom(\"Hello\");\n@@ -290,1 +290,1 @@\n-                int res = (int) printf.invokeExact(arena.allocateString(\"%d plus %d equals %d\"), 2, 2, 4); \/\/prints \"2 plus 2 equals 4\"\n+                int res = (int) printf.invokeExact(arena.allocateFrom(\"%d plus %d equals %d\"), 2, 2, 4); \/\/prints \"2 plus 2 equals 4\"\n@@ -575,1 +575,1 @@\n-                MemorySegment cString = arena.allocateString(\"Hello\");\n+                MemorySegment cString = arena.allocateFrom(\"Hello\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/snippet-files\/Snippets.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-                MemorySegment other = arena.allocateString(s2);\n+                MemorySegment other = arena.allocateFrom(s2);\n@@ -198,2 +198,2 @@\n-                MemorySegment ns1 = arena.allocateString(s1);\n-                MemorySegment ns2 = arena.allocateString(s2);\n+                MemorySegment ns1 = arena.allocateFrom(s1);\n+                MemorySegment ns2 = arena.allocateFrom(s2);\n@@ -206,1 +206,1 @@\n-                MemorySegment s = arena.allocateString(msg);\n+                MemorySegment s = arena.allocateFrom(msg);\n@@ -213,1 +213,1 @@\n-                MemorySegment s = arena.allocateString(msg);\n+                MemorySegment s = arena.allocateFrom(msg);\n@@ -303,1 +303,1 @@\n-                MemorySegment formatStr = arena.allocateString(format);\n+                MemorySegment formatStr = arena.allocateFrom(format);\n@@ -384,1 +384,1 @@\n-        STRING(MemorySegment.class, C_POINTER, \"%s\", arena -> arena.allocateString(\"str\"), \"str\");\n+        STRING(MemorySegment.class, C_POINTER, \"%s\", arena -> arena.allocateFrom(\"str\"), \"str\");\n","filename":"test\/jdk\/java\/foreign\/StdLibTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-        allocator.allocateString(\"Hello\");\n+        allocator.allocateFrom(\"Hello\");\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                    MemorySegment text = arena.allocateString(testString, charset);\n+                    MemorySegment text = arena.allocateFrom(testString, charset);\n@@ -67,1 +67,1 @@\n-                assertThrows(UnsupportedOperationException.class, () -> Arena.global().allocateString(testString, charset));\n+                assertThrows(UnsupportedOperationException.class, () -> Arena.global().allocateFrom(testString, charset));\n","filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-            MemorySegment segment = arena.allocateString(str);\n+            MemorySegment segment = arena.allocateFrom(str);\n@@ -104,1 +104,1 @@\n-        return (int)STRLEN.invokeExact(arenaAllocator.allocateString(str));\n+        return (int)STRLEN.invokeExact(arenaAllocator.allocateFrom(str));\n@@ -110,1 +110,1 @@\n-        int l = (int) STRLEN.invokeExact(arena.allocateString(str));\n+        int l = (int) STRLEN.invokeExact(arena.allocateFrom(str));\n@@ -117,1 +117,1 @@\n-        return (int)STRLEN.invokeExact(segmentAllocator.allocateString(str));\n+        return (int)STRLEN.invokeExact(segmentAllocator.allocateFrom(str));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}