{"files":[{"patch":"@@ -34,2 +34,2 @@\n-    LINUX_A_ARCH_64,\n-    MAC_OS_A_ARCH_64;\n+    LINUX_AARCH_64,\n+    MAC_OS_AARCH_64;\n@@ -56,1 +56,1 @@\n-                ABI = MAC_OS_A_ARCH_64;\n+                ABI = MAC_OS_AARCH_64;\n@@ -59,1 +59,1 @@\n-                ABI = LINUX_A_ARCH_64;\n+                ABI = LINUX_AARCH_64;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/CABI.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-                case SYS_V, LINUX_A_ARCH_64, MAC_OS_A_ARCH_64 -> libLookup(libs -> libs.load(jdkLibraryPath(\"syslookup\")));\n+                case SYS_V, LINUX_AARCH_64, MAC_OS_AARCH_64 -> libLookup(libs -> libs.load(jdkLibraryPath(\"syslookup\")));\n@@ -122,1 +122,1 @@\n-            case SYS_V, LINUX_A_ARCH_64, MAC_OS_A_ARCH_64 -> \"lib\";\n+            case SYS_V, LINUX_AARCH_64, MAC_OS_AARCH_64 -> \"lib\";\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -234,2 +234,2 @@\n-            case LINUX_A_ARCH_64 -> LinuxAArch64Linker.getInstance();\n-            case MAC_OS_A_ARCH_64 -> MacOsAArch64Linker.getInstance();\n+            case LINUX_AARCH_64 -> LinuxAArch64Linker.getInstance();\n+            case MAC_OS_AARCH_64 -> MacOsAArch64Linker.getInstance();\n@@ -338,2 +338,2 @@\n-            case LINUX_A_ARCH_64 -> LinuxAArch64Linker.newVaList(actions, session);\n-            case MAC_OS_A_ARCH_64 -> MacOsAArch64Linker.newVaList(actions, session);\n+            case LINUX_AARCH_64 -> LinuxAArch64Linker.newVaList(actions, session);\n+            case MAC_OS_AARCH_64 -> MacOsAArch64Linker.newVaList(actions, session);\n@@ -347,2 +347,2 @@\n-            case LINUX_A_ARCH_64 -> LinuxAArch64Linker.newVaListOfAddress(address, session);\n-            case MAC_OS_A_ARCH_64 -> MacOsAArch64Linker.newVaListOfAddress(address, session);\n+            case LINUX_AARCH_64 -> LinuxAArch64Linker.newVaListOfAddress(address, session);\n+            case MAC_OS_AARCH_64 -> MacOsAArch64Linker.newVaListOfAddress(address, session);\n@@ -356,2 +356,2 @@\n-            case LINUX_A_ARCH_64 -> LinuxAArch64Linker.emptyVaList();\n-            case MAC_OS_A_ARCH_64 -> MacOsAArch64Linker.emptyVaList();\n+            case LINUX_AARCH_64 -> LinuxAArch64Linker.emptyVaList();\n+            case MAC_OS_AARCH_64 -> MacOsAArch64Linker.emptyVaList();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}