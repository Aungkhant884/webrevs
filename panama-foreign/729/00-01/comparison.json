{"files":[{"patch":"@@ -283,1 +283,1 @@\n-        return isNamed()? this : ALL_UNNAMED_MODULE;\n+        return isNamed() ? this : ALL_UNNAMED_MODULE;\n@@ -298,0 +298,1 @@\n+                   \/\/ another thread beat us to it - nothing to do\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Module.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -304,2 +304,2 @@\n-         * Enables <a href=\"foreign\/package-summary.html#restricted\">native access<\/a>\n-         * for a module in the layer if the caller module already has native access.\n+         * Enables native access for a module in the layer if the caller's module\n+         * already has native access.\n@@ -317,1 +317,4 @@\n-         * @throws IllegalCallerException If the caller module doesn't have native access.\n+         * @throws IllegalCallerException if access to this method occurs from a module {@code M}\n+         * and the command line option {@code --enable-native-access} is specified, but does not\n+         * mention the module name {@code M}, or {@code ALL-UNNAMED} in case {@code M} is an\n+         * unnamed module.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ModuleLayer.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -276,2 +276,2 @@\n-     * Ensure that the given module has native access. If not, warn\n-     * and set native access depending on the configuration.\n+     * Ensure that the given module has native access. If not, warn or\n+     * throw exception depending on the configuration.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}