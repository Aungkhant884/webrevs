{"files":[{"patch":"@@ -285,5 +285,1 @@\n-        if (type instanceof Type.Delegated) {\n-            Type.Delegated delegated = (Type.Delegated) type;\n-            return (delegated.kind() == Type.Delegated.Kind.POINTER) ?\n-                    getAsFunctionPointer(delegated.type()) : null;\n-        } else if (type instanceof Type.Function) {\n+        if (type instanceof Type.Function) {\n@@ -297,0 +293,2 @@\n+        } else if (Utils.isPointerType(type)) {\n+            return getAsFunctionPointer(((Type.Delegated)type).type());\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/OutputFactory.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -264,2 +264,1 @@\n-        } else if (canonicalType instanceof Type.Delegated &&\n-                ((Type.Delegated)canonicalType).kind() == Type.Delegated.Kind.POINTER) {\n+        } else if (Utils.isPointerType(canonicalType)) {\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/TreeMaker.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import jdk.incubator.jextract.Type.Delegated;\n@@ -325,0 +326,9 @@\n+    static boolean isPointerType(jdk.incubator.jextract.Type type) {\n+        if (type instanceof Delegated) {\n+            Delegated delegated = (Delegated) type;\n+            return delegated.kind() == Delegated.Kind.POINTER;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/Utils.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}