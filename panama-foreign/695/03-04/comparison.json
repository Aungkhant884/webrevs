{"files":[{"patch":"@@ -1889,1 +1889,1 @@\n-     *             <li>Address values are rendered according to their {@code toString()} values.<\/li>\n+     *             <li>Address values are rendered in hexadecimal form e.g. {@code 0x0000000000000000}.<\/li>\n@@ -1892,1 +1892,1 @@\n-     *     <li>Grouped layouts are enclosed in curly brackets.<\/li>\n+     *     <li>Values in a group layout are rendered with enclosing curly braces.<\/li>\n@@ -1927,1 +1927,1 @@\n-        return MemorySegmentRenderUtil.viewThrough(this, layout);\n+        return MemorySegmentRenderUtil.toString(this, layout);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+    private static final String ADDRESS_FORMATTING = \"0x%0\" + (ValueLayout.ADDRESS.byteSize() * 2) + \"X\";\n+\n@@ -100,0 +102,1 @@\n+     *\n@@ -163,2 +166,2 @@\n-    public static String viewThrough(MemorySegment segment,\n-                                     MemoryLayout layout) {\n+    public static String toString(MemorySegment segment,\n+                                  MemoryLayout layout) {\n@@ -175,1 +178,1 @@\n-        renderView(segment, layout, action, new ViewState(), \"\");\n+        toString0(segment, layout, action, new ViewState(), \"\");\n@@ -179,5 +182,5 @@\n-    public static void renderView(MemorySegment segment,\n-                                  MemoryLayout layout,\n-                                  Consumer<? super CharSequence> action,\n-                                  ViewState state,\n-                                  String suffix) {\n+    public static void toString0(MemorySegment segment,\n+                                 MemoryLayout layout,\n+                                 Consumer<? super CharSequence> action,\n+                                 ViewState state,\n+                                 String suffix) {\n@@ -220,1 +223,2 @@\n-            action.accept(renderValueLayout(state, ofAddress, segment.get(ofAddress, state.indexAndAdd(ofAddress)).toString(), suffix));\n+            final long address = segment.get(ofAddress, state.indexAndAdd(ofAddress)).address();\n+            action.accept(renderValueLayout(state, ofAddress, String.format(ADDRESS_FORMATTING, address), suffix));\n@@ -252,1 +256,1 @@\n-                renderView(segment, members.get(i), action, state, (i != (members.size() - 1)) ? separator : \"\");\n+                toString0(segment, members.get(i), action, state, (i != (members.size() - 1)) ? separator : \"\");\n@@ -267,1 +271,1 @@\n-                renderView(segment, sequenceLayout.elementLayout(), action, state, (i != (elementCount - 1L)) ? \",\" : \"\");\n+                toString0(segment, sequenceLayout.elementLayout(), action, state, (i != (elementCount - 1L)) ? \",\" : \"\");\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/MemorySegmentRenderUtil.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -97,3 +97,1 @@\n-        var addressStringValue = MemorySegment.allocateNative(Long.BYTES, ValueLayout.ADDRESS.byteAlignment(), MemorySession.openImplicit())\n-                .get(ValueLayout.ADDRESS, 0)\n-                .toString();\n+        var expectAddress = \"0x\" + \"00\".repeat((int) ValueLayout.ADDRESS.byteSize());\n@@ -111,1 +109,1 @@\n-                new TestInput(ValueLayout.ADDRESS, addressStringValue)\n+                new TestInput(ValueLayout.ADDRESS, expectAddress)\n@@ -114,1 +112,1 @@\n-            var actual = testWithFreshMemorySegment(ti.layout().byteSize(), s -> viewThrough(s, ti.layout()));\n+            var actual = testWithFreshMemorySegment(ti.layout().byteSize(), s -> MemorySegmentRenderUtil.toString(s, ti.layout()));\n@@ -170,1 +168,1 @@\n-            return viewThrough(segment, Point.LAYOUT);\n+            return MemorySegmentRenderUtil.toString(segment, Point.LAYOUT);\n@@ -206,1 +204,1 @@\n-                viewThrough(segment, sequenceLayout));\n+                MemorySegmentRenderUtil.toString(segment, sequenceLayout));\n@@ -242,1 +240,1 @@\n-                viewThrough(segment, union));\n+                MemorySegmentRenderUtil.toString(segment, union));\n","filename":"test\/jdk\/java\/foreign\/RenderTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        VaList.ofAddress(MemoryAddress.NULL, MemorySession.openImplicit());\n+        VaList.ofAddress(0L, MemorySession.openImplicit());\n","filename":"test\/jdk\/java\/foreign\/TestUnsupportedLinker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}