{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -47,0 +48,3 @@\n+import java.util.stream.Stream;\n+\n+import static java.util.stream.Collectors.joining;\n@@ -92,0 +96,1 @@\n+    @Stable\n@@ -93,1 +98,1 @@\n-\n+    @Stable\n@@ -95,0 +100,1 @@\n+    @Stable\n@@ -150,1 +156,2 @@\n-            throw badLayoutPath(\"cannot resolve '\" + name + \"' in layout \" + layout);\n+            throw badLayoutPath(\n+                    String.format(\"cannot resolve '%s' in layout %s (%s)\", name, layout, breadcrumbs()));\n@@ -162,1 +169,2 @@\n-                throw badLayoutPath(\"cannot resolve element \" + index + \" in layout \" + layout);\n+                throw badLayoutPath(\n+                        String.format(\"cannot resolve element %d in layout: %s (%s)\", index, layout, breadcrumbs()));\n@@ -175,1 +183,2 @@\n-                .orElseThrow(() -> badLayoutPath(\"no targetLayout: \" + layout));\n+                .orElseThrow(() -> badLayoutPath(\n+                        String.format(\"no targetLayout: %s (%s)\", layout, breadcrumbs())));\n@@ -198,1 +207,2 @@\n-            throw new IllegalArgumentException(\"Path does not select a value layout: \" + layout);\n+            throw new IllegalArgumentException(\n+                    String.format(\"Path does not select a value layout: %s (%s)\", layout, breadcrumbs()));\n@@ -321,2 +331,2 @@\n-                    String.format(\"attempting to select a %s element from a non-%s layout: %s\",\n-                            type, type, layout));\n+                    String.format(\"attempting to select a %s element from a non-%s layout: %s (%s)\",\n+                            type, type, layout, breadcrumbs()));\n@@ -329,2 +339,2 @@\n-            throw badLayoutPath(String.format(\"sequence index out of bounds; index: %d, elementCount is %d for layout %s\",\n-                    index, seq.elementCount(), seq));\n+            throw badLayoutPath(String.format(\"sequence index out of bounds; index: %d, elementCount is %d for layout %s (%s)\",\n+                    index, seq.elementCount(), seq, breadcrumbs()));\n@@ -350,0 +360,12 @@\n+    private String breadcrumbs() {\n+        var layouts = Stream.iterate(this, Objects::nonNull, lp -> lp.enclosing)\n+                .map(LayoutPath::layout)\n+                .toList()\n+                .reversed();\n+        return layouts.size() == 1\n+                ? \"root\"\n+                : layouts.stream()\n+                .map(Object::toString)\n+                .collect(joining(\" -> \"));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":31,"deletions":9,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-    public void testWrongType() {\n+    public void testWrongTypeRoot() {\n@@ -170,1 +170,2 @@\n-                JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN), JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN)\n+                JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN),\n+                JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN)\n@@ -173,1 +174,1 @@\n-        var expectedMessage = \"Bad layout path: attempting to select a sequence element from a non-sequence layout: [i4i4]\";\n+        var expectedMessage = \"Bad layout path: attempting to select a sequence element from a non-sequence layout: [i4i4] (root)\";\n@@ -180,0 +181,19 @@\n+    @Test\n+    public void testWrongTypeEnclosing() {\n+        MemoryLayout struct = MemoryLayout.structLayout(\n+                MemoryLayout.sequenceLayout(2, MemoryLayout.structLayout(\n+                                JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN).withName(\"3a\"),\n+                                JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN).withName(\"3b\")\n+                        ).withName(\"2\")\n+                ).withName(\"1\")\n+        ).withName(\"0\");\n+\n+        var expectedMessage = \"Bad layout path: attempting to select a sequence element from a non-sequence layout: [i4(3a)i4(3b)](2) ([[2:[i4(3a)i4(3b)](2)](1)](0) -> [2:[i4(3a)i4(3b)](2)](1) -> [i4(3a)i4(3b)](2))\";\n+\n+        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () ->\n+                struct.select(PathElement.groupElement(\"1\"),\n+                        PathElement.sequenceElement(),\n+                        PathElement.sequenceElement()));\n+        assertEquals(iae.getMessage(), expectedMessage);\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"}]}