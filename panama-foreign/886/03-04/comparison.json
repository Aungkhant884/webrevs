{"files":[{"patch":"@@ -43,0 +43,1 @@\n+import java.util.Locale;\n@@ -314,1 +315,8 @@\n-            throw badLayoutPath(\"unable to select a \" + layoutClass.getSimpleName() + \" from layout: \" + layout);\n+            var name = layoutClass.getSimpleName();\n+            var type = name\n+                    \/\/ Take what is before \"Layout\"\n+                    .substring(0, name.indexOf(\"Layout\"))\n+                    .toLowerCase(Locale.ROOT);\n+            throw badLayoutPath(\n+                    String.format(\"attempting to select a %s element from a non-%s layout: %s\",\n+                            type, type, layout));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-            } else if (!ex.getMessage().contains(\"lignment\") && !ex.getMessage().contains(\"Misaligned\")) {\n+            } else if (!ex.getMessage().contains(\"alignment\") && !ex.getMessage().contains(\"Misaligned\")) {\n","filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.nio.ByteOrder;\n@@ -139,1 +140,1 @@\n-    public void testBadAlignmentOfRoot() throws Throwable {\n+    public void testBadAlignmentOfRoot() {\n@@ -150,1 +151,1 @@\n-            String expectedMessage = \"Target offset 0 is incompatible with byteAlignment \"+struct.byteAlignment()+\" (of [i4s2(x)]) for segment MemorySegment\";\n+            String expectedMessage = \"Target offset 0 is incompatible with alignment constraint \" + struct.byteAlignment() + \" (of [i4s2(x)]) for segment MemorySegment\";\n@@ -166,0 +167,13 @@\n+    @Test\n+    public void testWrongType() {\n+        MemoryLayout struct = MemoryLayout.structLayout(\n+                JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN), JAVA_INT.withOrder(ByteOrder.LITTLE_ENDIAN)\n+        );\n+\n+        var expectedMessage = \"Bad layout path: attempting to select a sequence element from a non-sequence layout: [i4i4]\";\n+\n+        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class, () ->\n+                struct.select(PathElement.sequenceElement()));\n+        assertEquals(iae.getMessage(), expectedMessage);\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"}]}