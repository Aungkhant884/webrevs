{"files":[{"patch":"@@ -41,2 +41,2 @@\n- * A function descriptor is made up of zero or more argument layouts and one return  A function descriptor\n- * is used to model the signature of native functions.\n+ * A function descriptor is made up of zero or more argument layouts and zero or one return layout. A function descriptor\n+ * is used to model the signature of foreign functions.\n@@ -65,1 +65,1 @@\n-     * @param name the attribute name\n+     * @param name the attribute name.\n@@ -97,1 +97,1 @@\n-     * Returns the return foreign.layout associated with this function.\n+     * Returns the return layout associated with this function.\n@@ -117,1 +117,1 @@\n-     * @throws NullPointerException if any of the argument layouts, or the return layout is null\n+     * @throws NullPointerException if any of the argument layouts, or the return layout is null.\n@@ -126,1 +126,1 @@\n-     * Create a void function descriptor with given argument layouts.\n+     * Create a function descriptor with given argument layouts and no return layout.\n@@ -129,1 +129,1 @@\n-     * @throws NullPointerException if any of the argument layouts is null\n+     * @throws NullPointerException if any of the argument layouts is null.\n@@ -139,3 +139,3 @@\n-     * @param addedLayouts the layouts to append\n-     * @return the new function descriptor\n-     * @throws NullPointerException if any of the new argument layouts is null\n+     * @param addedLayouts the argument layouts to append.\n+     * @return the new function descriptor.\n+     * @throws NullPointerException if any of the new argument layouts is null.\n@@ -152,3 +152,3 @@\n-     * @param newReturn the new return layout\n-     * @return the new function descriptor\n-     * @throws NullPointerException if the new return layout is null\n+     * @param newReturn the new return layout.\n+     * @return the new function descriptor.\n+     * @throws NullPointerException if the new return layout is null.\n@@ -163,1 +163,1 @@\n-     * @return the new function descriptor\n+     * @return the new function descriptor.\n@@ -184,1 +184,5 @@\n-     * object is also a function descriptor, and it is equal to this layout.\n+     * object is also a function descriptor, and all of the following conditions are met:\n+     * <ul>\n+     *     <li>the two function descriptors have equals return layouts (see {@link MemoryLayout#equals(Object)}), or both have no return layout<\/li>\n+     *     <li>the two function descriptors have argument layouts that are pair-wise equal (see {@link MemoryLayout#equals(Object)})\n+     * <\/ul>\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/FunctionDescriptor.java","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-    protected GroupLayout dup(long alignment, Map<String, Constable> attributes) {\n+    GroupLayout dup(long alignment, Map<String, Constable> attributes) {\n@@ -179,1 +179,1 @@\n-    protected boolean hasNaturalAlignment() {\n+    boolean hasNaturalAlignment() {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/GroupLayout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -401,1 +401,1 @@\n-     * @throws IllegalArgumentException if the carrier type is neither a primitive type nor {@code MemoryAddress}, or if the carrier is {@code void},\n+     * @throws IllegalArgumentException if the carrier does not represent a primitive type, if the carrier is {@code void},\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-    protected SequenceLayout dup(long alignment, Map<String, Constable> attributes) {\n+    SequenceLayout dup(long alignment, Map<String, Constable> attributes) {\n@@ -260,1 +260,1 @@\n-    protected boolean hasNaturalAlignment() {\n+    boolean hasNaturalAlignment() {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SequenceLayout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}