{"files":[{"patch":"@@ -65,0 +65,4 @@\n+ * <p>\n+ * Unless otherwise specified, whenever an allocator is associated with a <em>shared<\/em> resource scope, then allocation is\n+ * thread-safe and may be performed concurrently; conversely, if the allocator is associated with a <em>confined<\/em> resource scope\n+ * then allocation is confined to the owning thread of the allocator's resource scope.\n@@ -70,3 +74,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given byte value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given byte value.\n@@ -87,3 +89,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given char value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given char value.\n@@ -104,3 +104,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given short value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given short value.\n@@ -121,3 +119,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given int value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given int value.\n@@ -138,3 +134,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given float value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given float value.\n@@ -155,3 +149,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given long value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given long value.\n@@ -172,3 +164,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given double value.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given double value.\n@@ -189,1 +179,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given address value\n+     * Allocate a block of memory with given layout and initialize it with given address value\n@@ -192,2 +182,0 @@\n-     * The segment returned by this method cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n@@ -213,3 +201,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given byte array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given byte array.\n@@ -226,3 +212,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given short array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given short array.\n@@ -239,3 +223,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given char array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given char array.\n@@ -252,3 +234,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given int array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given int array.\n@@ -265,3 +245,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given float array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given float array.\n@@ -278,3 +256,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given long array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given long array.\n@@ -291,3 +267,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given double array.\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory with given layout and initialize it with given double array.\n@@ -304,1 +278,1 @@\n-     * Allocate a block of memory  with given layout and initialize it with given address array.\n+     * Allocate a block of memory with given layout and initialize it with given address array.\n@@ -306,2 +280,0 @@\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover, the returned\n-     * segment must conform to the layout alignment constraints.\n@@ -346,2 +318,1 @@\n-     * Allocate a block of memory  with given layout. The segment returned by this method is\n-     * associated with a segment which cannot be closed. Moreover, the returned segment must conform to the layout alignment constraints.\n+     * Allocate a block of memory  with given layout.\n@@ -358,6 +329,0 @@\n-     * The segment returned by this method is associated with a segment which cannot be closed.\n-     * Moreover, the returned segment must conform to the layout alignment constraints. This is equivalent to the\n-     * following code:\n-     * <pre>{@code\n-    allocate(MemoryLayout.ofSequence(size, elementLayout));\n-     * }<\/pre>\n@@ -374,2 +339,1 @@\n-     * Allocate a block of memory  with given size. The segment returned by this method is\n-     * associated with a segment which cannot be closed. Moreover, the returned segment must be aligned to {@code size}.\n+     * Allocate a block of memory with given size, with default alignment (1-byte aligned).\n@@ -385,2 +349,0 @@\n-     * The segment returned by this method is associated with a segment which cannot be closed. Moreover,\n-     * the returned segment must be aligned to {@code alignment}.\n@@ -469,0 +431,3 @@\n+     * <p>\n+     * While the allocator returned by this method is <em>thread-safe<\/em>, concurrent access on the same recycling\n+     * allocator might cause a thread to overwrite contents written to the underlying segment by a different thread.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java","additions":25,"deletions":60,"binary":false,"changes":85,"status":"modified"}]}