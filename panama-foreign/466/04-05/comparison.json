{"files":[{"patch":"@@ -470,12 +470,0 @@\n-    public static MethodHandle adaptDowncall(MethodType type, FunctionDescriptor descriptor,\n-                                             MethodHandle MH_unboxVaList, Function<MethodType, MethodHandle> downcallFactory) {\n-        MethodType sigMethodType = type;\n-        MethodHandle handle = downcallFactory.apply(sigMethodType);\n-        if (!sigMethodType.returnType().equals(MemorySegment.class)) {\n-            \/\/ not returning segment, just insert default allocator\n-            handle = MethodHandles.insertArguments(handle, 1, Binding.Context.DEFAULT.allocator());\n-        }\n-        handle = SharedUtils.unboxVaLists(type, handle, MH_unboxVaList);\n-        return handle;\n-    }\n-\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.internal.foreign.abi.Binding;\n@@ -78,4 +79,8 @@\n-        return SharedUtils.adaptDowncall(type, function, MH_unboxVaList, sigType -> {\n-                MethodType llMt = SharedUtils.convertVaListCarriers(type, AArch64VaList.CARRIER);\n-                return CallArranger.arrangeDowncall(llMt, function);\n-        });\n+        MethodType llMt = SharedUtils.convertVaListCarriers(type, AArch64VaList.CARRIER);\n+        MethodHandle handle = CallArranger.arrangeDowncall(llMt, function);\n+        if (!type.returnType().equals(MemorySegment.class)) {\n+            \/\/ not returning segment, just insert default allocator\n+            handle = MethodHandles.insertArguments(handle, 1, Binding.Context.DEFAULT.allocator());\n+        }\n+        handle = SharedUtils.unboxVaLists(type, handle, MH_unboxVaList);\n+        return handle;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import jdk.internal.foreign.abi.Binding;\n@@ -88,4 +89,8 @@\n-        return SharedUtils.adaptDowncall(type, function, MH_unboxVaList, sigType -> {\n-            MethodType llMt = SharedUtils.convertVaListCarriers(sigType, SysVVaList.CARRIER);\n-            return CallArranger.arrangeDowncall(llMt, function);\n-        });\n+        MethodType llMt = SharedUtils.convertVaListCarriers(type, SysVVaList.CARRIER);\n+        MethodHandle handle = CallArranger.arrangeDowncall(llMt, function);\n+        if (!type.returnType().equals(MemorySegment.class)) {\n+            \/\/ not returning segment, just insert default allocator\n+            handle = MethodHandles.insertArguments(handle, 1, Binding.Context.DEFAULT.allocator());\n+        }\n+        handle = SharedUtils.unboxVaLists(type, handle, MH_unboxVaList);\n+        return handle;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import jdk.internal.foreign.abi.Binding;\n@@ -90,4 +91,8 @@\n-        return SharedUtils.adaptDowncall(type, function, MH_unboxVaList, sigType -> {\n-            MethodType llMt = SharedUtils.convertVaListCarriers(type, WinVaList.CARRIER);\n-            return CallArranger.arrangeDowncall(llMt, function);\n-        });\n+        MethodType llMt = SharedUtils.convertVaListCarriers(type, WinVaList.CARRIER);\n+        MethodHandle handle = CallArranger.arrangeDowncall(llMt, function);\n+        if (!type.returnType().equals(MemorySegment.class)) {\n+            \/\/ not returning segment, just insert default allocator\n+            handle = MethodHandles.insertArguments(handle, 1, Binding.Context.DEFAULT.allocator());\n+        }\n+        handle = SharedUtils.unboxVaLists(type, handle, MH_unboxVaList);\n+        return handle;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}