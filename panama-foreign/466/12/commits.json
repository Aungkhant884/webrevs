[{"commit":{"message":"Address rest of review comments from Paul"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java"}],"sha":"85451607bec801b4213274c420d99b2dc71fa00b"},{"commit":{"message":"Merge branch 'resourceScope' of https:\/\/github.com\/mcimadamore\/panama-foreign into resourceScope"},"files":[],"sha":"55924260f694985e577019956048849cb1aea963"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java"}],"sha":"c19b04a5f4506458e079895d95ae0176b57773cc"},{"commit":{"message":"Address review comments"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"}],"sha":"9c5af185b8305bce4564aafbfbe78850be0b3914"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java"}],"sha":"285644a37ac333849c7e2fd47b9c9e9e869050fb"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java"}],"sha":"b5bdc61493f88c5809721ee867767a19967ddeea"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java"}],"sha":"81c4d9ba9dc65023a4720e5c8d250369ee68193c"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java"}],"sha":"f3741fce057507c7c2eafd5ac064896798034ed3"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java"}],"sha":"833556886e6acd667259fd01e39bc358ad0dbb80"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"}],"sha":"65e5d6306dc2889105c76de2b2fc926753b451dc"},{"commit":{"message":"Update src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"}],"sha":"d2c6b683f2cdbc75071cceffcdc3858e3cc08f0e"},{"commit":{"message":"Remove spurious println"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"5710a355a5383304b395d87f5b96949352b26b92"},{"commit":{"message":"Clarify javadoc for SegmentAllocator::arenaUnbounded"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"465df1160d65581db0822a84a06a4e34826e2003"},{"commit":{"message":"Refactor MemoryScope and ResourceList hierarchies"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/SharedScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"924f8e54e56a2277f24a96b9ab2ba2d1b5e35882"},{"commit":{"message":"Improve arena allocator implementation:\n* for unbounded arena allocation, provide an optimized shared version, which uses a different confined arena allocator for each requesting thread\n* for confined arena allocation, remove synchronization\n* the only synchronization left is in bounded\/shared (which should be fairly uncommon)"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"}],"sha":"69c084fec3ff2f33517da4ddcbf57569426de330"},{"commit":{"message":"Cleanup SharedUtils::wrapWithAllocator and Binding.Context"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"}],"sha":"6328866f5645ce09c566a6fcbb7bf700066cf9a3"},{"commit":{"message":"Revert changes to SharedUtils::adaptDowncall"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"9d1ba857c37d50f037072b099c35b8ed5d31a34e"},{"commit":{"message":"Address more review comments (VaList\/SharedUtils\/tests)"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/TestAddressHandle.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/libCallOverheadJNI.c"}],"sha":"472b214b28d420e6f087f57d297407e74d644a31"},{"commit":{"message":"Address more review comments on MemoryScope\/ResourceList"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"}],"sha":"df7eb2b8ec075271337ba86ccf505f8cd20ca945"},{"commit":{"message":"Address javadoc issues in review comments"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/LibraryLookup.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java"}],"sha":"5db5e3b3156b9b466a1254bdd74c5babbd6fff1f"},{"commit":{"message":"Fix issue in ResourceScope::ofShared() javadoc"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"}],"sha":"d04ee60fddf77b74bae97fb6199ac963396d8612"},{"commit":{"message":"Fix whitespaces"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"}],"sha":"bf0ee8073b8321a7df09b500960b1ad62189aa86"},{"commit":{"message":"Rename ResourceScope::Lock"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"}],"sha":"3e1399b604fd412fe2c42f335000e1887fcacd96"},{"commit":{"message":"Fix javadoc"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"}],"sha":"092eca260fdc59bf1ad1f9922b4ec6fdd55b2f5e"},{"commit":{"message":"Slightly clarify ProgrammableInvoker::specialize"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"}],"sha":"16f983a1fb9ece9b198f8de70ba0836384afc78d"},{"commit":{"message":"Add assertion when functions are void"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"}],"sha":"91ed099975adc185688457a17926576e74236f99"},{"commit":{"message":"Remove comments from TestDowncall\nMake sure that only return structs are allocated using provided SegmentAllocator"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"}],"sha":"321b389b9c887b362255ca33f3387718b047a832"},{"commit":{"message":"Add overload for restricted VaList factory which takes a scope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"fec4b654a8cda905cb709b55c3fa1427165dc619"},{"commit":{"message":"Fix TestResourceScope"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"167e25f7c6f13c00c3e49f9252027b8518d20800"},{"commit":{"message":"Fix issues with GC cleaned upcall"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"}],"sha":"91e2794a6efdedf05dea654439e83342e8d4e7a0"},{"commit":{"message":"Fix Windows VaList to add eager scope check on creation\/copy"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"}],"sha":"ceb0774a13453d3416d428b61879c3d9e6dd7128"},{"commit":{"message":"Fix some issues in upcall handler (Jorn)"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"}],"sha":"3f7b263f3ac8d6658e4d1ab0039fd39913e8f5de"},{"commit":{"message":"Merge branch 'foreign-memaccess+abi' into resourceScope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"}],"sha":"67e1831f9d2da7e82ecf21bb03a648e5bfa4021f"},{"commit":{"message":"Simplify ResourceScope API by removing closeable bit."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"9fa07a7cd47f87362f3da1ee82f65fb168b0efa5"},{"commit":{"message":"Fix benchmark for implicit deallocation\nSlightly tweak ResourceList to implement Runnable (one less object to allocate)."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"}],"sha":"a0a9dc701d61323fb75f297f9f18b6b66fb9c470"},{"commit":{"message":"Add useful overloads in CLinker:\n* create downcall handle with given allocator\n* create upcall stub without a resource scope\n* tweak MemoryAddress::asSegment restricted to return segments based on global scope\n* fixup javadoc"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"}],"sha":"04de1730479d0b1592bc277c6b97ee6347d0e205"},{"commit":{"message":"Simplify arena allocators"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"}],"sha":"941edbce3f54aae33513336b9fdbbd549d5f4873"},{"commit":{"message":"Clarify javadoc of ResourceScope::Lock"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"}],"sha":"8b2894b4f2ee0df5147beaa54e95efa13210ae0a"},{"commit":{"message":"Remove NativeScope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/NativeTestHelper.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestUnsupportedPlatform.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/StrLenTest.java"}],"sha":"3af1f5403899b8d86f14b3fd4b643a335a32f856"},{"commit":{"message":"Fix javadoc issue in CLinker"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"}],"sha":"0c37bf30a882daf3460907f2d5794e0f29147ffd"},{"commit":{"message":"Remove linker implementation dependencies on NativeScope\nTodo: completely remove NativeScope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"35968a72c5dd3288ea49ccbf0611261e9a2d6d38"},{"commit":{"message":"Fix javadoc in SegmentAllocator"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"}],"sha":"9d60bd9178212408acf06e339e9e4625175d4378"},{"commit":{"message":"Rename allocator factories, and add a factory which takes a scope."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/StrLenTest.java"}],"sha":"2b584e4f56381bea4636f32e4b52d264688f11f0"},{"commit":{"message":"Updated CLinker javadoc"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"}],"sha":"14d4956564aadaa9c07b48570e4401a2fc1a2672"},{"commit":{"message":"Tweak logic by which CLinker adds a SegmentAllocator argument"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadVirtual.java"}],"sha":"16cec3f30c4d69b92a87acc33734b57483c42780"},{"commit":{"message":"Add benchmark for strlen with recyclig scope"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/StrLenTest.java"}],"sha":"8e564e5e719367156ea4926e634b7b5386973359"},{"commit":{"message":"Fix adaptation type comments"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"db0220fc534ed4470ed448e97a420c44a764ca9f"},{"commit":{"message":"ALl tests pass"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"}],"sha":"2fb8a8f9300601091ac0bc5dbd34f7d50e3de7f1"},{"commit":{"message":"Fix most test failures"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStubs.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/StrLenTest.java"}],"sha":"bbccc3a0defa719fae21b2f3c018400efb955b1d"},{"commit":{"message":"Merge branch 'foreign-memaccess+abi' into resourceScope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/CallOverheadVirtual.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/StrLenTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/libCallOverheadJNI.c"}],"sha":"c96fd3d2ec610327c526eb4741c92c9e36e78809"},{"commit":{"message":"Enhance and fix the CallOverhead benchmark:\n* add support for JNI struct by-value calls\n* convert benchmarks into loops (so that we can free memory)\n* use malloc allocator for base test with Panama (not to rely on Cleaners)"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/libCallOverheadJNI.c"}],"sha":"cb762d78365b241d24f5fc272861c2368ec7d0d9"},{"commit":{"message":"Add SegmentAllocator support to CLinker"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"}],"sha":"da936ac3f70885fe7caa0369ef574865404d313f"},{"commit":{"message":"* Remove SharedUtils.Allocator\n* introduce Binding.Context (a pair of ResourceScope and SegmentAllocator)\n* Fix issue in SegmentAllocator::allocate(long) which uses size value for alignment"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingInterpreter.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"}],"sha":"2aaf78b29b354e981224904558be11ec761182f2"},{"commit":{"message":"Generalize NativeAllocator to cover heap segments too (->SegmentAllocator)\nRefactor code for ArenaAllocator to be expressed in terms of a block allocator."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"}],"sha":"87d12dc26a90b40530714aa1d442c9563c179703"},{"commit":{"message":"Centralize testing for all scoped entities\n* check that access on a confined scope from a different thread is forbidden\n* check that access after scope closure is forbidden\nFixed an issue where ResourceScope::lock was missing a thread check in the confined case"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestScopedOperations.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"2847f8b8b0d198ece3c498c31dbde47f6bae43b0"},{"commit":{"message":"Tweak API for recycling allocator.\nThe new API takes a segment and is thus more general, allowing e.g. to allocate the result of a native function into a slice of an existing segment."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"}],"sha":"fb226dac8eba853b5708e0223f1e51138eed3201"},{"commit":{"message":"Another javadoc fix"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"}],"sha":"689c94b14d065041bf73c385346277c9d6d21799"},{"commit":{"message":"Fix javadoc of ResourceScope::close"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"}],"sha":"a0e91515705c4e557ff1150f7fdce4f7457cca64"},{"commit":{"message":"Minor javadoc tweaks"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"}],"sha":"ae9a8e4bec6b68831ecbdc6f8bb30dda7c39f0a2"},{"commit":{"message":"Remove spurious debug print statement\nAdd benchmark for recycling allocation"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"}],"sha":"145b1225a2634c39a8b1ca8c09ddfa5b215849bb"},{"commit":{"message":"Fix javadoc\nConsolidate scope checks"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"}],"sha":"525ebbc8209a60270e74096c29d4be893e247e72"},{"commit":{"message":"Add extra documentation on MemoryScope\nFix issues with raw scope exceptions not been caught leading to issues in ResourceScopeTest\nFix ResourceScopeTest not calling cleanup manually if addOnClose failed."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"4e9a06f9b7268f38df4a5179531d085d5f70e8dc"},{"commit":{"message":"Simplify MemoryScope implementation"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"}],"sha":"475eb13b3329d816222ae8bf28ee91f6c39a820e"},{"commit":{"message":"Do not call cleanup action if addOnClose fails because of closed scope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"}],"sha":"97a60c9d767aa3ffbc187d0d4ca3d727dcd99c0c"},{"commit":{"message":"Split ResourceScope.fork() into lock() and addOnClose()."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"1a033e874c8a7c20fb3b580b44c7e589557fb74d"},{"commit":{"message":"Add implementations for recycling\/malloc\/arena allocators.\nRebase NativeScope on top of arena allocator.\nImprove efficiency of VaList builder code by using arena allocators."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractNativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"}],"sha":"980544d16dbb83fc39d200cfab8de8a9a35e3c29"},{"commit":{"message":"Tweak benchmark after VaList changes"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/VaList.java"}],"sha":"8b512dfd2abe4b130621bc43838bcff92a0e9a5b"},{"commit":{"message":"Simplify VaList API.\nNow VaLists are simple views (like segments). They have a scope, and they do not implement AutoCloseable."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"cd89bc37cfc8ce7772c2c89a7bbc89886beb4506"},{"commit":{"message":"Remove ad-hoc liveness check segment from Windows VaList impl"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"}],"sha":"7dc2e93e908bc3df46f84e06be11f442ac25ed5d"},{"commit":{"message":"Clarify implementation of valists, by accepting a single scope.\nRemove need to track \"attached segments\"."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"16b1032dc2d7827a7f66d93cbd3fb95db3993ab3"},{"commit":{"message":"Simplify implementation for VaList::read"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"}],"sha":"443e166351f6ae9c6b642f7c5be372639c11c269"},{"commit":{"message":"Tweak more defaults - now short segment factories return shared, non-closeable, managed segments."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"9a2e417ecf81e73a37632518e5bcb9694c3094a5"},{"commit":{"message":"Fix MemoryScope javadoc"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"}],"sha":"2773f152bbf6130a124115f5021060f56fe2fc62"},{"commit":{"message":"Fix NPE assertions on ResourceScope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"}],"sha":"63fef62888c406fc2ab27dd57a90c07aec9aff01"},{"commit":{"message":"Flip defaults for short native\/mapped segment factories.\nNow these factories return non-closeable, managed segments.\nTodo: the VaList liveness code seems to be all over the place, I think the impl is in need of a revamp."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/CallGeneratorHelper.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/BulkOps.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/points\/support\/PanamaPoint.java"}],"sha":"77de618fcd7a04775bf08d64cd4f6a544d4a06cd"},{"commit":{"message":"First stab at javadoc"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/LibraryLookup.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MappedMemorySegments.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java"}],"sha":"7ba07cccc8bd21fdebede89b3f53a46dd99489f7"},{"commit":{"message":"Add support for non-closeable ResourceScopes"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractNativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"}],"sha":"1a4a8ef512e80b56f10bfb4d35e9727971228282"},{"commit":{"message":"Simplify implementation of LibrariesHelper to use ResourceScope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LibrariesHelper.java"}],"sha":"5dba87d54cdb3a2b58d157bc379cebd8d82e9e00"},{"commit":{"message":"Switch default for MemorySegment::allocateNative to be cleaner-enabled.\nFix benchmarks"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantShared.java"}],"sha":"7757c109e2269add3442f0a80516721e99304d92"},{"commit":{"message":"Add biggie test for ResourceScope::fork\nFixed exception thrown in checkValidState in case of confined scope"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"a46a480dbed976d5e459723e7b551959fa435aa7"},{"commit":{"message":"Remove access modes"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractNativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"}],"sha":"e71a1933a8b1698d17914d76a5525d2de4f905d7"},{"commit":{"message":"Improve implementation of NativeScope\nUse fork to prevent NativeScope from being closed accidentally by calling scope() on segments."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractNativeScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"}],"sha":"87cfd703de1036fdbe2df4affac38b30dced027d"},{"commit":{"message":"Add initial implementation of ResourceScope::fork"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractNativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"f2f694620321f33e68e51e2471a2a19e213cebfc"},{"commit":{"message":"Add NativeAllocator API.\nTweak VaList API to use right abstractions in the right places"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"}],"sha":"562899383d69d1d91e3421cef78227eccc0283f4"},{"commit":{"message":"Cleanup scope logic - pull resource list into its own abstraction"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"}],"sha":"b0790bd81a6068e9bd6085fb8b3dcde0a3093ad7"},{"commit":{"message":"All tests pass"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestAddressHandle.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestCleaner.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayouts.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryAlignment.java"},{"filename":"test\/jdk\/java\/foreign\/TestMemoryHandleAsUnsigned.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestNulls.java"},{"filename":"test\/jdk\/java\/foreign\/TestResourceScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSlices.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestTypeAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStubs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarArgs.java"},{"filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java"},{"filename":"test\/jdk\/java\/foreign\/stackwalk\/TestStackWalk.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"}],"sha":"9c8799a84a1905984071294d0aea22313188b6a3"},{"commit":{"message":"Fix benchmarks"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/ParallelSum.java"}],"sha":"911d73925afcab3dd9d7ed8c6e5412b33c8ed281"},{"commit":{"message":"Cleanup VaList implementation\nAdd overloads to MemoryAddress::asSegmentRestricted"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"}],"sha":"0d52da8a66b8140bd1e38ccde2a7678a87b7a815"},{"commit":{"message":"Initial (hacky) pass.\nOnly StdLibTest has been ported to new API."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractNativeScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MappedMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryAddressImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/MemoryScope.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64VaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/WinVaList.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/StdLibTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestArrays.java"},{"filename":"test\/jdk\/java\/foreign\/TestByteBuffer.java"},{"filename":"test\/jdk\/java\/foreign\/TestCleaner.java"},{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestHandshake.java"},{"filename":"test\/jdk\/java\/foreign\/TestMismatch.java"},{"filename":"test\/jdk\/java\/foreign\/TestNative.java"},{"filename":"test\/jdk\/java\/foreign\/TestNativeScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"},{"filename":"test\/jdk\/java\/foreign\/TestSharedAccess.java"},{"filename":"test\/jdk\/java\/foreign\/TestSpliterator.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStructScope.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallStubs.java"},{"filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNew.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstant.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantFP.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantHeap.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantMapped.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstantShared.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverPollutedSegments.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/ParallelSum.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/VarHandleExact.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/points\/support\/PanamaPoint.java"}],"sha":"85b12464ba21cedd28a7872e0123c2cbbe7c498a"}]