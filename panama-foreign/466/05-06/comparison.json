{"files":[{"patch":"@@ -263,1 +263,2 @@\n-        public static Context ofBoundedAllocator(ResourceScope scope, long size) {\n+        public static Context ofBoundedAllocator(long size) {\n+            ResourceScope scope = ResourceScope.ofConfined();\n@@ -284,1 +285,2 @@\n-        public static Context ofScope(ResourceScope scope) {\n+        public static Context ofScope() {\n+            ResourceScope scope = ResourceScope.ofConfined();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-                ? Binding.Context.ofBoundedAllocator(ResourceScope.ofConfined(), bufferCopySize)\n+                ? Binding.Context.ofBoundedAllocator(bufferCopySize)\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -262,2 +262,2 @@\n-                ? Binding.Context.ofBoundedAllocator(ResourceScope.ofConfined(), bufferCopySize)\n-                : Binding.Context.ofScope(ResourceScope.ofConfined());\n+                ? Binding.Context.ofBoundedAllocator(bufferCopySize)\n+                : Binding.Context.ofScope();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,4 +78,3 @@\n-    private static final MethodHandle MH_MAKE_SCOPE;\n-    private static final MethodHandle MH_CLOSE_SCOPE;\n-    private static final MethodHandle MH_ALLOCATOR_TO_BINDING_CONTEXT;\n-    private static final MethodHandle MH_SCOPE_TO_BINDING_CONTEXT;\n+    private static final MethodHandle MH_MAKE_CONTEXT_NO_ALLOCATOR;\n+    private static final MethodHandle MH_MAKE_CONTEXT_BOUNDED_ALLOCATOR;\n+    private static final MethodHandle MH_CLOSE_CONTEXT;\n@@ -92,3 +91,5 @@\n-            MH_MAKE_SCOPE = lookup.findStatic(ResourceScope.class, \"ofConfined\",\n-                    methodType(ResourceScope.class));\n-            MH_CLOSE_SCOPE = lookup.findVirtual(ResourceScope.class, \"close\",\n+            MH_MAKE_CONTEXT_NO_ALLOCATOR = lookup.findStatic(Binding.Context.class, \"ofScope\",\n+                    methodType(Binding.Context.class));\n+            MH_MAKE_CONTEXT_BOUNDED_ALLOCATOR = lookup.findStatic(Binding.Context.class, \"ofBoundedAllocator\",\n+                    methodType(Binding.Context.class, long.class));\n+            MH_CLOSE_CONTEXT = lookup.findVirtual(Binding.Context.class, \"close\",\n@@ -96,4 +97,0 @@\n-            MH_ALLOCATOR_TO_BINDING_CONTEXT = lookup.findStatic(Binding.Context.class, \"ofBoundedAllocator\",\n-                    methodType(Binding.Context.class, ResourceScope.class, long.class));\n-            MH_SCOPE_TO_BINDING_CONTEXT = lookup.findStatic(Binding.Context.class, \"ofScope\",\n-                    methodType(Binding.Context.class, ResourceScope.class));\n@@ -363,0 +360,1 @@\n+        System.err.println(specializedHandle.type().descriptorString());\n@@ -381,1 +379,1 @@\n-        closer = collectArguments(closer, insertPos, MH_CLOSE_SCOPE); \/\/ (Throwable, V?, Addressable?, ResourceScope) -> V\/void\n+        closer = collectArguments(closer, insertPos, MH_CLOSE_CONTEXT); \/\/ (Throwable, V?, Addressable?, BindingContext) -> V\/void\n@@ -383,1 +381,1 @@\n-        MethodHandle scopeFilter;\n+        MethodHandle contextFactory;\n@@ -386,1 +384,1 @@\n-            scopeFilter = MethodHandles.insertArguments(MH_ALLOCATOR_TO_BINDING_CONTEXT, 1, bufferCopySize);\n+            contextFactory = MethodHandles.insertArguments(MH_MAKE_CONTEXT_BOUNDED_ALLOCATOR, 0, bufferCopySize);\n@@ -388,1 +386,1 @@\n-            scopeFilter = MH_SCOPE_TO_BINDING_CONTEXT;\n+            contextFactory = MH_MAKE_CONTEXT_NO_ALLOCATOR;\n@@ -391,2 +389,1 @@\n-            scopeFilter = constant(Binding.Context.class, Binding.Context.DUMMY);\n-            scopeFilter = dropArguments(scopeFilter, 0, ResourceScope.class);\n+            contextFactory = constant(Binding.Context.class, Binding.Context.DUMMY);\n@@ -395,1 +392,0 @@\n-        specializedHandle = filterArguments(specializedHandle, allocatorPos, scopeFilter);\n@@ -397,1 +393,1 @@\n-        specializedHandle = collectArguments(specializedHandle, allocatorPos, MH_MAKE_SCOPE);\n+        specializedHandle = collectArguments(specializedHandle, allocatorPos, contextFactory);\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-import jdk.incubator.foreign.ResourceScope;\n-import org.testng.annotations.AfterClass;\n+\n","filename":"test\/jdk\/java\/foreign\/TestUpcall.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}