{"files":[{"patch":"@@ -384,1 +384,3 @@\n-        if (isSmall() && offset < Integer.MAX_VALUE && length < Integer.MAX_VALUE) {\n+        if (isSmall() &&\n+                offset < Integer.MAX_VALUE && length < Integer.MAX_VALUE &&\n+                offset > Integer.MIN_VALUE && length > Integer.MIN_VALUE) {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    public void testSmallSegment() {\n+    public void testSmallSegmentMax() {\n@@ -110,0 +110,7 @@\n+        MemoryAccess.getIntAtOffset(memorySegment, offset);\n+    }\n+\n+    @Test(expectedExceptions = IndexOutOfBoundsException.class)\n+    public void testSmallSegmentMin() {\n+        long offset = ((long)Integer.MIN_VALUE * 2L) + 6L;\n+        MemorySegment memorySegment = MemorySegment.allocateNative(10, ResourceScope.newImplicitScope());\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}