{"files":[{"patch":"@@ -188,1 +188,1 @@\n-     *\n+     * @param <T> the memory layout type\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,10 @@\n+ * In cases where a client wants to create a memory segment out of a lookup symbol, the client might want to attach the\n+ * lookup symbol to the newly created segment, so that the symbol will be kept reachable as long as the memory segment\n+ * is reachable; this can be achieved by creating the segment using the {@link MemoryAddress#asSegmentRestricted(long, Object)}\n+ * restricted segment factory, as follows:\n+ * <pre>{@code\n+LibraryLookup defaultLookup = LibraryLookup.defaultLookup();\n+LibraryLookup.Symbol errno = defaultLookup.lookup(\"errno\");\n+MemorySegment errnoSegment = errno.address().asRestrictedSegment(4, errno);\n+ * }<\/pre>\n+ * <p>\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/LibraryLookup.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}