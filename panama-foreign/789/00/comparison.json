{"files":[{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -503,1 +503,1 @@\n-        MemorySegment r = , Arena.ofAuto().allocate(a.byteSize(), $Boxtype$.SIZE);\n+        MemorySegment r = Arena.ofAuto().allocate(a.byteSize(), $Boxtype$.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}