{"files":[{"patch":"@@ -59,0 +59,4 @@\n+    private String safeParameterName(String paramName) {\n+        return isEnclosedBySameName(paramName)? paramName + \"$\" : paramName;\n+    }\n+\n@@ -150,1 +154,1 @@\n-        append(MEMBER_MODS + \" \" + type.getSimpleName() + \" \" + javaName + \"$get(MemorySegment seg) {\\n\");\n+        append(MEMBER_MODS + \" \" + type.getSimpleName() + \" \" + javaName + \"$get(MemorySegment \" + safeParameterName(\"seg\") + \") {\\n\");\n@@ -154,1 +158,1 @@\n-                + vhConstant.accessExpression() + \".get(seg);\\n\");\n+                + vhConstant.accessExpression() + \".get(\" + safeParameterName(\"seg\") + \");\\n\");\n@@ -164,2 +168,2 @@\n-        String param = MemorySegment.class.getSimpleName() + \" seg\";\n-        append(MEMBER_MODS + \" void \" + javaName + \"$set( \" + param + \", \" + type.getSimpleName() + \" x) {\\n\");\n+        String param = MemorySegment.class.getSimpleName() + \" \" + safeParameterName(\"seg\");\n+        append(MEMBER_MODS + \" void \" + javaName + \"$set( \" + param + \", \" + type.getSimpleName() + \" \" + safeParameterName(\"x\") + \") {\\n\");\n@@ -168,1 +172,1 @@\n-        append(vhConstant.accessExpression() + \".set(seg, x);\\n\");\n+        append(vhConstant.accessExpression() + \".set(\" + safeParameterName(\"seg\") + \", \" + safeParameterName(\"x\") + \");\\n\");\n@@ -189,1 +193,1 @@\n-        append(MEMBER_MODS + \" MemorySegment \" + javaName + \"$slice(MemorySegment seg) {\\n\");\n+        append(MEMBER_MODS + \" MemorySegment \" + javaName + \"$slice(MemorySegment \" + safeParameterName(\"seg\") + \") {\\n\");\n@@ -192,1 +196,3 @@\n-        append(\"return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(\");\n+        append(\"return RuntimeHelper.nonCloseableNonTransferableSegment(\");\n+        append(safeParameterName(\"seg\"));\n+        append(\".asSlice(\");\n@@ -294,1 +300,1 @@\n-        String params = MemorySegment.class.getSimpleName() + \" seg, long index\";\n+        String params = MemorySegment.class.getSimpleName() + \" \" + safeParameterName(\"seg\") + \", long \" + safeParameterName(\"index\");\n@@ -298,3 +304,7 @@\n-        append(\"return (\" + type.getName() + \")\"\n-                + vhConstant.accessExpression() +\n-                \".get(seg.asSlice(index*sizeof()));\\n\");\n+        append(\"return (\" + type.getName() + \")\");\n+        append(vhConstant.accessExpression());\n+        append(\".get(\");\n+        append(safeParameterName(\"seg\"));\n+        append(\".asSlice(\");\n+        append(safeParameterName(\"index\"));\n+        append(\"*sizeof()));\\n\");\n@@ -310,1 +320,2 @@\n-        String params = MemorySegment.class.getSimpleName() + \" seg, long index, \" + type.getSimpleName() + \" x\";\n+        String params = MemorySegment.class.getSimpleName() + \" \" + safeParameterName(\"seg\") +\n+            \", long \" + safeParameterName(\"index\") + \", \" + type.getSimpleName() + \" \" + safeParameterName(\"x\");\n@@ -314,2 +325,8 @@\n-        append(vhConstant.accessExpression() +\n-                \".set(seg.asSlice(index*sizeof()), x);\\n\");\n+        append(vhConstant.accessExpression());\n+        append(\".set(\");\n+        append(safeParameterName(\"seg\"));\n+        append(\".asSlice(\");\n+        append(safeParameterName(\"index\"));\n+        append(\"*sizeof()), \");\n+        append(safeParameterName(\"x\"));\n+        append(\");\\n\");\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/StructBuilder.java","additions":31,"deletions":14,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import java.nio.file.Path;\n+import static org.testng.Assert.assertNotNull;\n+\n+\/*\n+ * @test\n+ * @modules jdk.incubator.jextract\n+ * @library \/test\/lib\n+ * @build JextractToolRunner\n+ * @bug 8262733\n+ * @summary jextract generates clashing names which results in compilation error with javac\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8262733\n+ *\/\n+public class Test8262733 extends JextractToolRunner {\n+    @Test\n+    public void test() {\n+        Path output = getOutputFilePath(\"8262733gen\");\n+        Path outputH = getInputFilePath(\"test8262733.h\");\n+        run(\"-d\", output.toString(), outputH.toString()).checkSuccess();\n+        try(Loader loader = classLoader(output)) {\n+            Class<?> cls = loader.loadClass(\"test8262733_h\");\n+            assertNotNull(cls);\n+        } finally {\n+            deleteDir(output);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/jextract\/Test8262733.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+struct {\n+   int x, y;\n+} x;\n+\n+struct Foo {\n+   union {\n+       int i;\n+       float f;\n+   } x;\n+};\n+\n+struct seg {\n+  int x;\n+};\n+\n+struct index {\n+  int x;\n+};\n","filename":"test\/jdk\/tools\/jextract\/test8262733.h","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"}]}