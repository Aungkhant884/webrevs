{"files":[{"patch":"@@ -51,1 +51,0 @@\n-    private final String setterParameterName;\n@@ -58,1 +57,0 @@\n-        setterParameterName = safeParameterName(\"x\");\n@@ -156,1 +154,1 @@\n-        append(MEMBER_MODS + \" \" + type.getSimpleName() + \" \" + javaName + \"$get(MemorySegment seg) {\\n\");\n+        append(MEMBER_MODS + \" \" + type.getSimpleName() + \" \" + javaName + \"$get(MemorySegment \" + safeParameterName(\"seg\") + \") {\\n\");\n@@ -160,1 +158,1 @@\n-                + vhConstant.accessExpression() + \".get(seg);\\n\");\n+                + vhConstant.accessExpression() + \".get(\" + safeParameterName(\"seg\") + \");\\n\");\n@@ -170,2 +168,2 @@\n-        String param = MemorySegment.class.getSimpleName() + \" seg\";\n-        append(MEMBER_MODS + \" void \" + javaName + \"$set( \" + param + \", \" + type.getSimpleName() + \" \" + setterParameterName + \") {\\n\");\n+        String param = MemorySegment.class.getSimpleName() + \" \" + safeParameterName(\"seg\");\n+        append(MEMBER_MODS + \" void \" + javaName + \"$set( \" + param + \", \" + type.getSimpleName() + \" \" + safeParameterName(\"x\") + \") {\\n\");\n@@ -174,1 +172,1 @@\n-        append(vhConstant.accessExpression() + \".set(seg, \" + setterParameterName + \");\\n\");\n+        append(vhConstant.accessExpression() + \".set(\" + safeParameterName(\"seg\") + \", \" + safeParameterName(\"x\") + \");\\n\");\n@@ -195,1 +193,1 @@\n-        append(MEMBER_MODS + \" MemorySegment \" + javaName + \"$slice(MemorySegment seg) {\\n\");\n+        append(MEMBER_MODS + \" MemorySegment \" + javaName + \"$slice(MemorySegment \" + safeParameterName(\"seg\") + \") {\\n\");\n@@ -198,1 +196,3 @@\n-        append(\"return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(\");\n+        append(\"return RuntimeHelper.nonCloseableNonTransferableSegment(\");\n+        append(safeParameterName(\"seg\"));\n+        append(\".asSlice(\");\n@@ -300,1 +300,1 @@\n-        String params = MemorySegment.class.getSimpleName() + \" seg, long index\";\n+        String params = MemorySegment.class.getSimpleName() + \" \" + safeParameterName(\"seg\") + \", long \" + safeParameterName(\"index\");\n@@ -304,3 +304,7 @@\n-        append(\"return (\" + type.getName() + \")\"\n-                + vhConstant.accessExpression() +\n-                \".get(seg.asSlice(index*sizeof()));\\n\");\n+        append(\"return (\" + type.getName() + \")\");\n+        append(vhConstant.accessExpression());\n+        append(\".get(\");\n+        append(safeParameterName(\"seg\"));\n+        append(\".asSlice(\");\n+        append(safeParameterName(\"index\"));\n+        append(\"*sizeof()));\\n\");\n@@ -316,1 +320,2 @@\n-        String params = MemorySegment.class.getSimpleName() + \" seg, long index, \" + type.getSimpleName() + \" \" + setterParameterName;\n+        String params = MemorySegment.class.getSimpleName() + \" \" + safeParameterName(\"seg\") +\n+            \", long \" + safeParameterName(\"index\") + \", \" + type.getSimpleName() + \" \" + safeParameterName(\"x\");\n@@ -320,2 +325,8 @@\n-        append(vhConstant.accessExpression() +\n-                \".set(seg.asSlice(index*sizeof()), \" + setterParameterName + \");\\n\");\n+        append(vhConstant.accessExpression());\n+        append(\".set(\");\n+        append(safeParameterName(\"seg\"));\n+        append(\".asSlice(\");\n+        append(safeParameterName(\"index\"));\n+        append(\"*sizeof()), \");\n+        append(safeParameterName(\"x\"));\n+        append(\");\\n\");\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/StructBuilder.java","additions":27,"deletions":16,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -35,0 +35,8 @@\n+\n+struct seg {\n+  int x;\n+};\n+\n+struct index {\n+  int x;\n+};\n","filename":"test\/jdk\/tools\/jextract\/test8262733.h","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}