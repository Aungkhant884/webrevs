{"files":[{"patch":"@@ -60,1 +60,1 @@\n-    private final Set<Declaration.Variable> variables = new HashSet<>();\n+    private final Set<String> variables = new HashSet<>();\n@@ -86,1 +86,1 @@\n-        return !variables.add(tree);\n+        return !variables.add(tree.name());\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/OutputFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import test.jextract.redef.*;\n+\n+import java.lang.reflect.Method;\n+\n+import static org.testng.Assert.assertEquals;\n+import static test.jextract.redef.redef_h.*;\n+\n+\/*\n+ * @test id=classes\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextract -t test.jextract.redef -- redef.h\n+ * @run testng\/othervm -Dforeign.restricted=permit TestGlobalRedefinition\n+ *\/\n+\/*\n+ * @test id=sources\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -t test.jextract.redef -- redef.h\n+ * @run testng\/othervm -Dforeign.restricted=permit TestGlobalRedefinition\n+ *\/\n+public class TestGlobalRedefinition {\n+    @Test\n+    public void test() throws Throwable {\n+        Method mGet = redef_h.class.getMethod(\"x$get\");\n+        C c1 = mGet.getAnnotatedReturnType().getAnnotation(C.class);\n+        assertEquals(c1.value(), \"int\");\n+\n+        Method mSet = redef_h.class.getMethod(\"x$set\", int.class);\n+        C c2 = mSet.getAnnotatedParameterTypes()[0].getAnnotation(C.class);\n+        assertEquals(c2.value(), \"int\");\n+    }\n+}\n","filename":"test\/jdk\/tools\/jextract\/testGlobalRedefinition\/TestGlobalRedefinition.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -22,1 +22,0 @@\n- *\n@@ -24,0 +23,1 @@\n+typedef int MyInt;\n@@ -25,3 +25,2 @@\n-module com.foos {\n-    exports com.foos;\n-}\n+extern const int x;\n+extern const MyInt x;\n","filename":"test\/jdk\/tools\/jextract\/testGlobalRedefinition\/redef.h","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/src\/com.foos\/module-info.java","status":"copied"}]}