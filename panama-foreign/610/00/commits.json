[{"commit":{"message":"8275646: Implement optimized upcall stubs on AArch64\n\nThis is a fairly direct port of the X86 code.  The changes to\nframe_aarch64 and foreign_globals_aarch64 are identical: perhaps\nForeignGlobals::parse_call_regs_impl() could be moved to shared code?\n\nThe X86 version has a call to reinit_heapbase() before the return from\nthe stub.  I think this is redundant because the heap base register will\nbe clobbered immediately by the native code?\n\nI hit a really weird bug in release builds where the first few\ninstructions in the code buffer were overwritten by the fields of\nOptimizedEntryBlob.  I think we need to pass sizeof(OptimizedEntryBlob)\ninstead of sizeof(BufferBlob) as the header_size argument to the\nRuntimeBlob constructor (none of the other subclasses of BufferBlob have\nextra fields).  I added a header_size argument to BufferBlob's\nconstructor to thread this through.\n\nI removed the calls to change the W^X state in on_entry\/on_exit calls:\nin the on_entry case the stub must already be executable because we\ncalled into the VM from there, and for on_exit we need the code to be\nexecutable not writable otherwise we'll get a SIGBUS as soon as we\nreturn to the stub.  The newly added stack tests in TestUpcall hit\nJDK-8275584 so I've problem-listed that for now.\n\nJMH results from org.openjdk.bench.jdk.incubator.foreign.Upcalls before:\n\nBenchmark                Mode  Cnt     Score    Error  Units\nUpcalls.jni_args10       avgt   30   450.417 ?  4.755  ns\/op\nUpcalls.jni_args5        avgt   30   245.898 ?  3.171  ns\/op\nUpcalls.jni_blank        avgt   30   195.606 ?  5.459  ns\/op\nUpcalls.jni_identity     avgt   30   369.788 ? 15.165  ns\/op\nUpcalls.panama_args10    avgt   30  1253.189 ? 62.261  ns\/op\nUpcalls.panama_args5     avgt   30   927.101 ? 35.369  ns\/op\nUpcalls.panama_blank     avgt   30   637.708 ? 11.353  ns\/op\nUpcalls.panama_identity  avgt   30   697.109 ?  9.971  ns\/op\n\nAfter:\n\nBenchmark                Mode  Cnt    Score    Error  Units\nUpcalls.jni_args10       avgt   30  455.304 ? 21.838  ns\/op\nUpcalls.jni_args5        avgt   30  247.279 ?  2.513  ns\/op\nUpcalls.jni_blank        avgt   30  194.113 ?  4.317  ns\/op\nUpcalls.jni_identity     avgt   30  366.145 ?  4.912  ns\/op\nUpcalls.panama_args10    avgt   30  236.337 ? 11.072  ns\/op\nUpcalls.panama_args5     avgt   30  223.858 ? 12.345  ns\/op\nUpcalls.panama_blank     avgt   30  203.631 ?  8.840  ns\/op\nUpcalls.panama_identity  avgt   30  208.783 ?  9.914  ns\/op\n\nTested tier1 and jdk_foreign on Linux\/AArch64 and MacOS\/AArch64."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreign_globals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/universalUpcallHandler_aarch64.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/hotspot\/share\/prims\/whitebox.cpp"},{"filename":"test\/jdk\/ProblemList.txt"}],"sha":"d385e9649a96268cd4b474a318771e3f3cb0eac3"}]