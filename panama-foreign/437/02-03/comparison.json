{"files":[{"patch":"@@ -26,1 +26,1 @@\n-import jdk.incubator.foreign.MemoryAddress;\n+import jdk.incubator.foreign.MemoryHandles;\n@@ -66,0 +66,4 @@\n+    \/** Used to test access using raw pointers. *\/\n+    static final VarHandle VH_int_ptr = MemoryHandles.varHandle(int.class, ByteOrder.nativeOrder());\n+    static final VarHandle VH_int_ptr_noalign = MemoryHandles.varHandle(int.class, 1, ByteOrder.nativeOrder());\n+\n@@ -67,1 +71,0 @@\n-    long segment_addr_idx; \/\/ The segment address divided by carrier size, as it's sequence layout\n@@ -80,1 +83,1 @@\n-        segment = MemorySegment.allocateNative(ALLOC_SIZE + CARRIER_SIZE);\n+        segment = MemorySegment.allocateNative(ALLOC_SIZE);\n@@ -84,2 +87,0 @@\n-        \/\/ Get index of segment's address aligned up\n-        segment_addr_idx = (segment.address().toRawLongValue() + CARRIER_SIZE - 1) \/ CARRIER_SIZE;\n@@ -117,1 +118,1 @@\n-        return (int) VH_int.get(globalRestrictedSegment, segment_addr_idx);\n+        return (int) VH_int_ptr.get(globalRestrictedSegment, unsafe_addr);\n@@ -137,1 +138,1 @@\n-        \/\/ In fact, we operate inside `segment`\n+        \/\/ Note: this benchmarks slightly differs from other by using VH_int_ptr\n@@ -139,2 +140,12 @@\n-        for (int i = 0; i < ELEM_SIZE; i ++) {\n-            res += (int) VH_int.get(globalRestrictedSegment, segment_addr_idx + i);\n+        for (long i = 0; i < ELEM_SIZE; i ++) {\n+            res += (int) VH_int_ptr.get(globalRestrictedSegment, unsafe_addr + (i * CARRIER_SIZE));\n+        }\n+        return res;\n+    }\n+\n+    @Benchmark\n+    public int global_segment_loop_no_align() {\n+        \/\/ Note: this benchmarks slightly differs from other by using VH_int_ptr\n+        int res = 0;\n+        for (long i = 0; i < ELEM_SIZE; i ++) {\n+            res += (int) VH_int_ptr_noalign.get(globalRestrictedSegment, unsafe_addr + (i * CARRIER_SIZE));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/LoopOverNonConstant.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"}]}