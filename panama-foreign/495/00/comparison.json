{"files":[{"patch":"@@ -690,1 +690,1 @@\n-    static MemorySegment ofNative() {\n+    static MemorySegment globalNativeSegment() {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n- * which covers the entire native heap. This segment can be obtained by calling the {@link jdk.incubator.foreign.MemorySegment#ofNative()}\n+ * which covers the entire native heap. This segment can be obtained by calling the {@link jdk.incubator.foreign.MemorySegment#globalNativeSegment()}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-        MemorySegment everything = MemorySegment.ofNative();\n+        MemorySegment everything = MemorySegment.globalNativeSegment();\n@@ -207,1 +207,1 @@\n-        MemorySegment everything = MemorySegment.ofNative();\n+        MemorySegment everything = MemorySegment.globalNativeSegment();\n","filename":"test\/jdk\/java\/foreign\/TestNative.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        Method method = MemorySegment.class.getDeclaredMethod(\"ofNative\");\n+        Method method = MemorySegment.class.getDeclaredMethod(\"globalNativeSegment\");\n@@ -48,1 +48,1 @@\n-            \"ofNative\", MethodType.methodType(MemorySegment.class));\n+                \"globalNativeSegment\", MethodType.methodType(MemorySegment.class));\n@@ -54,1 +54,1 @@\n-        MemorySegment.ofNative();\n+        MemorySegment.globalNativeSegment();\n","filename":"test\/jdk\/java\/foreign\/TestRestricted.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-                    return MemoryAccess.getIntAtOffset(MemorySegment.ofNative(), ma.toRawLongValue());\n+                    return MemoryAccess.getIntAtOffset(MemorySegment.globalNativeSegment(), ma.toRawLongValue());\n","filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}