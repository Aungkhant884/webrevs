{"files":[{"patch":"@@ -38,1 +38,0 @@\n-import java.util.Map;\n@@ -41,1 +40,0 @@\n-import java.util.concurrent.ConcurrentHashMap;\n@@ -79,1 +77,1 @@\n-            SymbolLookup fallbackLookup = name -> Optional.ofNullable(WindowsFallbackSymbols.BY_NAME.get(name))\n+            SymbolLookup fallbackLookup = name -> Optional.ofNullable(WindowsFallbackSymbols.valueOfOrNull(name))\n@@ -172,6 +170,5 @@\n-        private static final Map<String, WindowsFallbackSymbols> BY_NAME;\n-\n-        static {\n-            BY_NAME = new ConcurrentHashMap<>();\n-            for (var symbol : values()) {\n-                BY_NAME.put(symbol.name(), symbol);\n+        static WindowsFallbackSymbols valueOfOrNull(String name) {\n+            try {\n+                return valueOf(name);\n+            } catch (IllegalArgumentException e) {\n+                return null;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-};\n\\ No newline at end of file\n+};\n","filename":"src\/jdk.incubator.foreign\/windows\/native\/libWinFallbackLookup\/WinFallbackLookup.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}