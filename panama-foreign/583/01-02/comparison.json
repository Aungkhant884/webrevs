{"files":[{"patch":"@@ -322,2 +322,2 @@\n-     * Returns a native arena-based allocator which allocates a single memory segment, of given size (using malloc),\n-     * and then responds to allocation request by returning different slices of that same segment\n+     * Returns a native arena-based allocator which {@linkplain MemorySegment#allocateNative(long, ResourceScope) allocates}\n+     * a single memory segment, of given size, and then responds to allocation request by returning different slices of that same segment\n@@ -358,1 +358,1 @@\n-     *     slices which fits that allocation request, allocate a new segment {@code S'} (using malloc), which has same size as {@code S}\n+     *     slices which fits that allocation request, allocate a new segment {@code S'}, which has same size as {@code S}\n@@ -360,2 +360,2 @@\n-     *     <li>if the size of the allocation requests is bigger than the size of {@code S}, allocate a new segment {@code S'}\n-     *     (using malloc), which has a sufficient size to satisfy the allocation request, and return {@code S'}.\n+     *     <li>if the size of the allocation requests is bigger than the size of {@code S}, allocate a new segment {@code S'},\n+     *     which has a sufficient size to satisfy the allocation request, and return {@code S'}.\n@@ -396,1 +396,1 @@\n-     *     slices which fits that allocation request, allocate a new segment {@code S'} (using malloc), which has same size as {@code S}\n+     *     slices which fits that allocation request, allocate a new segment {@code S'}, which has same size as {@code S}\n@@ -398,2 +398,2 @@\n-     *     <li>if the size of the allocation requests is bigger than the size of {@code S}, allocate a new segment {@code S'}\n-     *     (using malloc), which has a sufficient size to satisfy the allocation request, and return {@code S'}.\n+     *     <li>if the size of the allocation requests is bigger than the size of {@code S}, allocate a new segment {@code S'},\n+     *     which has a sufficient size to satisfy the allocation request, and return {@code S'}.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}