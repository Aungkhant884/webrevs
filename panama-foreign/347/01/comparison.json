{"files":[{"patch":"@@ -239,14 +239,13 @@\n-<span id=\"cb8-5\"><a href=\"#cb8-5\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.python.RuntimeHelper.*;<\/span><\/span>\n-<span id=\"cb8-6\"><a href=\"#cb8-6\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.python.Python_h.*;<\/span><\/span>\n-<span id=\"cb8-7\"><a href=\"#cb8-7\"><\/a><\/span>\n-<span id=\"cb8-8\"><a href=\"#cb8-8\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> PythonMain {<\/span>\n-<span id=\"cb8-9\"><a href=\"#cb8-9\"><\/a>    <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n-<span id=\"cb8-10\"><a href=\"#cb8-10\"><\/a>        <span class=\"bu\">String<\/span> script = <span class=\"st\">&quot;print(sum([33, 55, 66])); print(&#39;Hello from Python!&#39;)<\/span><span class=\"sc\">\\n<\/span><span class=\"st\">&quot;<\/span>;<\/span>\n-<span id=\"cb8-11\"><a href=\"#cb8-11\"><\/a><\/span>\n-<span id=\"cb8-12\"><a href=\"#cb8-12\"><\/a>        <span class=\"fu\">Py_Initialize<\/span>();<\/span>\n-<span id=\"cb8-13\"><a href=\"#cb8-13\"><\/a>        <span class=\"kw\">try<\/span> (var str = <span class=\"fu\">toCString<\/span>(script)) {<\/span>\n-<span id=\"cb8-14\"><a href=\"#cb8-14\"><\/a>            <span class=\"fu\">PyRun_SimpleStringFlags<\/span>(str, NULL);<\/span>\n-<span id=\"cb8-15\"><a href=\"#cb8-15\"><\/a>            <span class=\"fu\">Py_Finalize<\/span>();<\/span>\n-<span id=\"cb8-16\"><a href=\"#cb8-16\"><\/a>        }<\/span>\n-<span id=\"cb8-17\"><a href=\"#cb8-17\"><\/a>    }<\/span>\n-<span id=\"cb8-18\"><a href=\"#cb8-18\"><\/a>}<\/span><\/code><\/pre><\/div>\n+<span id=\"cb8-5\"><a href=\"#cb8-5\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.python.Python_h.*;<\/span><\/span>\n+<span id=\"cb8-6\"><a href=\"#cb8-6\"><\/a><\/span>\n+<span id=\"cb8-7\"><a href=\"#cb8-7\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> PythonMain {<\/span>\n+<span id=\"cb8-8\"><a href=\"#cb8-8\"><\/a>    <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n+<span id=\"cb8-9\"><a href=\"#cb8-9\"><\/a>        <span class=\"bu\">String<\/span> script = <span class=\"st\">&quot;print(sum([33, 55, 66])); print(&#39;Hello from Python!&#39;)<\/span><span class=\"sc\">\\n<\/span><span class=\"st\">&quot;<\/span>;<\/span>\n+<span id=\"cb8-10\"><a href=\"#cb8-10\"><\/a><\/span>\n+<span id=\"cb8-11\"><a href=\"#cb8-11\"><\/a>        <span class=\"fu\">Py_Initialize<\/span>();<\/span>\n+<span id=\"cb8-12\"><a href=\"#cb8-12\"><\/a>        <span class=\"kw\">try<\/span> (var str = <span class=\"fu\">toCString<\/span>(script)) {<\/span>\n+<span id=\"cb8-13\"><a href=\"#cb8-13\"><\/a>            <span class=\"fu\">PyRun_SimpleStringFlags<\/span>(str, NULL);<\/span>\n+<span id=\"cb8-14\"><a href=\"#cb8-14\"><\/a>            <span class=\"fu\">Py_Finalize<\/span>();<\/span>\n+<span id=\"cb8-15\"><a href=\"#cb8-15\"><\/a>        }<\/span>\n+<span id=\"cb8-16\"><a href=\"#cb8-16\"><\/a>    }<\/span>\n+<span id=\"cb8-17\"><a href=\"#cb8-17\"><\/a>}<\/span><\/code><\/pre><\/div>\n@@ -267,17 +266,16 @@\n-<span id=\"cb11-2\"><a href=\"#cb11-2\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.unix.RuntimeHelper.*;<\/span><\/span>\n-<span id=\"cb11-3\"><a href=\"#cb11-3\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.unix.readline_h.*;<\/span><\/span>\n-<span id=\"cb11-4\"><a href=\"#cb11-4\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n-<span id=\"cb11-5\"><a href=\"#cb11-5\"><\/a><\/span>\n-<span id=\"cb11-6\"><a href=\"#cb11-6\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> Readline {<\/span>\n-<span id=\"cb11-7\"><a href=\"#cb11-7\"><\/a>    <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n-<span id=\"cb11-8\"><a href=\"#cb11-8\"><\/a>        <span class=\"kw\">try<\/span> (var str = <span class=\"fu\">toCString<\/span>(<span class=\"st\">&quot;name? &quot;<\/span>)) {<\/span>\n-<span id=\"cb11-9\"><a href=\"#cb11-9\"><\/a>            <span class=\"co\">\/\/ call &quot;readline&quot; API<\/span><\/span>\n-<span id=\"cb11-10\"><a href=\"#cb11-10\"><\/a>            var p = <span class=\"fu\">readline<\/span>(str);<\/span>\n-<span id=\"cb11-11\"><a href=\"#cb11-11\"><\/a><\/span>\n-<span id=\"cb11-12\"><a href=\"#cb11-12\"><\/a>            <span class=\"co\">\/\/ print char* as is<\/span><\/span>\n-<span id=\"cb11-13\"><a href=\"#cb11-13\"><\/a>            <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(p);<\/span>\n-<span id=\"cb11-14\"><a href=\"#cb11-14\"><\/a>            <span class=\"co\">\/\/ convert char* ptr from readline as Java String &amp; print it<\/span><\/span>\n-<span id=\"cb11-15\"><a href=\"#cb11-15\"><\/a>            <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;Hello, &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(p));<\/span>\n-<span id=\"cb11-16\"><a href=\"#cb11-16\"><\/a>        }<\/span>\n-<span id=\"cb11-17\"><a href=\"#cb11-17\"><\/a>    }<\/span>\n-<span id=\"cb11-18\"><a href=\"#cb11-18\"><\/a>}<\/span><\/code><\/pre><\/div>\n+<span id=\"cb11-2\"><a href=\"#cb11-2\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.unix.readline_h.*;<\/span><\/span>\n+<span id=\"cb11-3\"><a href=\"#cb11-3\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n+<span id=\"cb11-4\"><a href=\"#cb11-4\"><\/a><\/span>\n+<span id=\"cb11-5\"><a href=\"#cb11-5\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> Readline {<\/span>\n+<span id=\"cb11-6\"><a href=\"#cb11-6\"><\/a>    <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n+<span id=\"cb11-7\"><a href=\"#cb11-7\"><\/a>        <span class=\"kw\">try<\/span> (var str = <span class=\"fu\">toCString<\/span>(<span class=\"st\">&quot;name? &quot;<\/span>)) {<\/span>\n+<span id=\"cb11-8\"><a href=\"#cb11-8\"><\/a>            <span class=\"co\">\/\/ call &quot;readline&quot; API<\/span><\/span>\n+<span id=\"cb11-9\"><a href=\"#cb11-9\"><\/a>            var p = <span class=\"fu\">readline<\/span>(str);<\/span>\n+<span id=\"cb11-10\"><a href=\"#cb11-10\"><\/a><\/span>\n+<span id=\"cb11-11\"><a href=\"#cb11-11\"><\/a>            <span class=\"co\">\/\/ print char* as is<\/span><\/span>\n+<span id=\"cb11-12\"><a href=\"#cb11-12\"><\/a>            <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(p);<\/span>\n+<span id=\"cb11-13\"><a href=\"#cb11-13\"><\/a>            <span class=\"co\">\/\/ convert char* ptr from readline as Java String &amp; print it<\/span><\/span>\n+<span id=\"cb11-14\"><a href=\"#cb11-14\"><\/a>            <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;Hello, &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(p));<\/span>\n+<span id=\"cb11-15\"><a href=\"#cb11-15\"><\/a>        }<\/span>\n+<span id=\"cb11-16\"><a href=\"#cb11-16\"><\/a>    }<\/span>\n+<span id=\"cb11-17\"><a href=\"#cb11-17\"><\/a>}<\/span><\/code><\/pre><\/div>\n@@ -298,23 +296,22 @@\n-<span id=\"cb14-3\"><a href=\"#cb14-3\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.jextract.RuntimeHelper.*;<\/span><\/span>\n-<span id=\"cb14-4\"><a href=\"#cb14-4\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.jextract.curl_h.*;<\/span><\/span>\n-<span id=\"cb14-5\"><a href=\"#cb14-5\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n-<span id=\"cb14-6\"><a href=\"#cb14-6\"><\/a><\/span>\n-<span id=\"cb14-7\"><a href=\"#cb14-7\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> CurlMain {<\/span>\n-<span id=\"cb14-8\"><a href=\"#cb14-8\"><\/a>   <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n-<span id=\"cb14-9\"><a href=\"#cb14-9\"><\/a>       var urlStr = args[<span class=\"dv\">0<\/span>];<\/span>\n-<span id=\"cb14-10\"><a href=\"#cb14-10\"><\/a>       <span class=\"fu\">curl_global_init<\/span>(<span class=\"fu\">CURL_GLOBAL_DEFAULT<\/span>());<\/span>\n-<span id=\"cb14-11\"><a href=\"#cb14-11\"><\/a>       var curl = <span class=\"fu\">curl_easy_init<\/span>();<\/span>\n-<span id=\"cb14-12\"><a href=\"#cb14-12\"><\/a>       <span class=\"kw\">if<\/span>(!curl.<span class=\"fu\">equals<\/span>(NULL)) {<\/span>\n-<span id=\"cb14-13\"><a href=\"#cb14-13\"><\/a>           <span class=\"kw\">try<\/span> (var url = <span class=\"fu\">toCString<\/span>(urlStr)) {<\/span>\n-<span id=\"cb14-14\"><a href=\"#cb14-14\"><\/a>               <span class=\"fu\">curl_easy_setopt<\/span>(curl, <span class=\"fu\">CURLOPT_URL<\/span>(), url.<span class=\"fu\">address<\/span>());<\/span>\n-<span id=\"cb14-15\"><a href=\"#cb14-15\"><\/a>               <span class=\"dt\">int<\/span> res = <span class=\"fu\">curl_easy_perform<\/span>(curl);<\/span>\n-<span id=\"cb14-16\"><a href=\"#cb14-16\"><\/a>               <span class=\"kw\">if<\/span> (res != <span class=\"fu\">CURLE_OK<\/span>()) {<\/span>\n-<span id=\"cb14-17\"><a href=\"#cb14-17\"><\/a>                   <span class=\"bu\">String<\/span> error = <span class=\"fu\">toJavaStringRestricted<\/span>(<span class=\"fu\">curl_easy_strerror<\/span>(res));<\/span>\n-<span id=\"cb14-18\"><a href=\"#cb14-18\"><\/a>                   <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;Curl error: &quot;<\/span> + error);<\/span>\n-<span id=\"cb14-19\"><a href=\"#cb14-19\"><\/a>                   <span class=\"fu\">curl_easy_cleanup<\/span>(curl);<\/span>\n-<span id=\"cb14-20\"><a href=\"#cb14-20\"><\/a>               }<\/span>\n-<span id=\"cb14-21\"><a href=\"#cb14-21\"><\/a>           }<\/span>\n-<span id=\"cb14-22\"><a href=\"#cb14-22\"><\/a>       }<\/span>\n-<span id=\"cb14-23\"><a href=\"#cb14-23\"><\/a>       <span class=\"fu\">curl_global_cleanup<\/span>();<\/span>\n-<span id=\"cb14-24\"><a href=\"#cb14-24\"><\/a>   }<\/span>\n-<span id=\"cb14-25\"><a href=\"#cb14-25\"><\/a>}<\/span><\/code><\/pre><\/div>\n+<span id=\"cb14-3\"><a href=\"#cb14-3\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.jextract.curl_h.*;<\/span><\/span>\n+<span id=\"cb14-4\"><a href=\"#cb14-4\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n+<span id=\"cb14-5\"><a href=\"#cb14-5\"><\/a><\/span>\n+<span id=\"cb14-6\"><a href=\"#cb14-6\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> CurlMain {<\/span>\n+<span id=\"cb14-7\"><a href=\"#cb14-7\"><\/a>   <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n+<span id=\"cb14-8\"><a href=\"#cb14-8\"><\/a>       var urlStr = args[<span class=\"dv\">0<\/span>];<\/span>\n+<span id=\"cb14-9\"><a href=\"#cb14-9\"><\/a>       <span class=\"fu\">curl_global_init<\/span>(<span class=\"fu\">CURL_GLOBAL_DEFAULT<\/span>());<\/span>\n+<span id=\"cb14-10\"><a href=\"#cb14-10\"><\/a>       var curl = <span class=\"fu\">curl_easy_init<\/span>();<\/span>\n+<span id=\"cb14-11\"><a href=\"#cb14-11\"><\/a>       <span class=\"kw\">if<\/span>(!curl.<span class=\"fu\">equals<\/span>(NULL)) {<\/span>\n+<span id=\"cb14-12\"><a href=\"#cb14-12\"><\/a>           <span class=\"kw\">try<\/span> (var url = <span class=\"fu\">toCString<\/span>(urlStr)) {<\/span>\n+<span id=\"cb14-13\"><a href=\"#cb14-13\"><\/a>               <span class=\"fu\">curl_easy_setopt<\/span>(curl, <span class=\"fu\">CURLOPT_URL<\/span>(), url.<span class=\"fu\">address<\/span>());<\/span>\n+<span id=\"cb14-14\"><a href=\"#cb14-14\"><\/a>               <span class=\"dt\">int<\/span> res = <span class=\"fu\">curl_easy_perform<\/span>(curl);<\/span>\n+<span id=\"cb14-15\"><a href=\"#cb14-15\"><\/a>               <span class=\"kw\">if<\/span> (res != <span class=\"fu\">CURLE_OK<\/span>()) {<\/span>\n+<span id=\"cb14-16\"><a href=\"#cb14-16\"><\/a>                   <span class=\"bu\">String<\/span> error = <span class=\"fu\">toJavaStringRestricted<\/span>(<span class=\"fu\">curl_easy_strerror<\/span>(res));<\/span>\n+<span id=\"cb14-17\"><a href=\"#cb14-17\"><\/a>                   <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;Curl error: &quot;<\/span> + error);<\/span>\n+<span id=\"cb14-18\"><a href=\"#cb14-18\"><\/a>                   <span class=\"fu\">curl_easy_cleanup<\/span>(curl);<\/span>\n+<span id=\"cb14-19\"><a href=\"#cb14-19\"><\/a>               }<\/span>\n+<span id=\"cb14-20\"><a href=\"#cb14-20\"><\/a>           }<\/span>\n+<span id=\"cb14-21\"><a href=\"#cb14-21\"><\/a>       }<\/span>\n+<span id=\"cb14-22\"><a href=\"#cb14-22\"><\/a>       <span class=\"fu\">curl_global_cleanup<\/span>();<\/span>\n+<span id=\"cb14-23\"><a href=\"#cb14-23\"><\/a>   }<\/span>\n+<span id=\"cb14-24\"><a href=\"#cb14-24\"><\/a>}<\/span><\/code><\/pre><\/div>\n@@ -347,43 +344,42 @@\n-<span id=\"cb18-6\"><a href=\"#cb18-6\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> blas.RuntimeHelper.*;<\/span><\/span>\n-<span id=\"cb18-7\"><a href=\"#cb18-7\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> blas.cblas_h.*;<\/span><\/span>\n-<span id=\"cb18-8\"><a href=\"#cb18-8\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n-<span id=\"cb18-9\"><a href=\"#cb18-9\"><\/a><\/span>\n-<span id=\"cb18-10\"><a href=\"#cb18-10\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> TestBlas {<\/span>\n-<span id=\"cb18-11\"><a href=\"#cb18-11\"><\/a>    <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n-<span id=\"cb18-12\"><a href=\"#cb18-12\"><\/a>        <span class=\"dt\">int<\/span> Layout;<\/span>\n-<span id=\"cb18-13\"><a href=\"#cb18-13\"><\/a>        <span class=\"dt\">int<\/span> transa;<\/span>\n-<span id=\"cb18-14\"><a href=\"#cb18-14\"><\/a><\/span>\n-<span id=\"cb18-15\"><a href=\"#cb18-15\"><\/a>        <span class=\"dt\">double<\/span> alpha, beta;<\/span>\n-<span id=\"cb18-16\"><a href=\"#cb18-16\"><\/a>        <span class=\"dt\">int<\/span> m, n, lda, incx, incy, i;<\/span>\n-<span id=\"cb18-17\"><a href=\"#cb18-17\"><\/a><\/span>\n-<span id=\"cb18-18\"><a href=\"#cb18-18\"><\/a>        Layout = <span class=\"fu\">CblasColMajor<\/span>();<\/span>\n-<span id=\"cb18-19\"><a href=\"#cb18-19\"><\/a>        transa = <span class=\"fu\">CblasNoTrans<\/span>();<\/span>\n-<span id=\"cb18-20\"><a href=\"#cb18-20\"><\/a><\/span>\n-<span id=\"cb18-21\"><a href=\"#cb18-21\"><\/a>        m = <span class=\"dv\">4<\/span>; <span class=\"co\">\/* Size of Column ( the number of rows ) *\/<\/span><\/span>\n-<span id=\"cb18-22\"><a href=\"#cb18-22\"><\/a>        n = <span class=\"dv\">4<\/span>; <span class=\"co\">\/* Size of Row ( the number of columns ) *\/<\/span><\/span>\n-<span id=\"cb18-23\"><a href=\"#cb18-23\"><\/a>        lda = <span class=\"dv\">4<\/span>; <span class=\"co\">\/* Leading dimension of 5 * 4 matrix is 5 *\/<\/span><\/span>\n-<span id=\"cb18-24\"><a href=\"#cb18-24\"><\/a>        incx = <span class=\"dv\">1<\/span>;<\/span>\n-<span id=\"cb18-25\"><a href=\"#cb18-25\"><\/a>        incy = <span class=\"dv\">1<\/span>;<\/span>\n-<span id=\"cb18-26\"><a href=\"#cb18-26\"><\/a>        alpha = <span class=\"dv\">1<\/span>;<\/span>\n-<span id=\"cb18-27\"><a href=\"#cb18-27\"><\/a>        beta = <span class=\"dv\">0<\/span>;<\/span>\n-<span id=\"cb18-28\"><a href=\"#cb18-28\"><\/a><\/span>\n-<span id=\"cb18-29\"><a href=\"#cb18-29\"><\/a>        <span class=\"kw\">try<\/span> (var scope = NativeScope.<span class=\"fu\">unboundedScope<\/span>()) {<\/span>\n-<span id=\"cb18-30\"><a href=\"#cb18-30\"><\/a>            var a = scope.<span class=\"fu\">allocateArray<\/span>(C_DOUBLE, <span class=\"kw\">new<\/span> <span class=\"dt\">double<\/span>[] {<\/span>\n-<span id=\"cb18-31\"><a href=\"#cb18-31\"><\/a>                <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">2.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">3.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">4.<\/span><span class=\"dv\">0<\/span>,<\/span>\n-<span id=\"cb18-32\"><a href=\"#cb18-32\"><\/a>                <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>,<\/span>\n-<span id=\"cb18-33\"><a href=\"#cb18-33\"><\/a>                <span class=\"fl\">3.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">4.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">5.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">6.<\/span><span class=\"dv\">0<\/span>,<\/span>\n-<span id=\"cb18-34\"><a href=\"#cb18-34\"><\/a>                <span class=\"fl\">5.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">6.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">7.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">8.<\/span><span class=\"dv\">0<\/span><\/span>\n-<span id=\"cb18-35\"><a href=\"#cb18-35\"><\/a>            });<\/span>\n-<span id=\"cb18-36\"><a href=\"#cb18-36\"><\/a>            var x = scope.<span class=\"fu\">allocateArray<\/span>(C_DOUBLE, <span class=\"kw\">new<\/span> <span class=\"dt\">double<\/span>[] {<\/span>\n-<span id=\"cb18-37\"><a href=\"#cb18-37\"><\/a>                <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">2.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span><\/span>\n-<span id=\"cb18-38\"><a href=\"#cb18-38\"><\/a>            });<\/span>\n-<span id=\"cb18-39\"><a href=\"#cb18-39\"><\/a>            var y = scope.<span class=\"fu\">allocateArray<\/span>(C_DOUBLE, n);<\/span>\n-<span id=\"cb18-40\"><a href=\"#cb18-40\"><\/a><\/span>\n-<span id=\"cb18-41\"><a href=\"#cb18-41\"><\/a>            <span class=\"fu\">cblas_dgemv<\/span>(Layout, transa, m, n, alpha, a, lda, x, incx, beta, y, incy);<\/span>\n-<span id=\"cb18-42\"><a href=\"#cb18-42\"><\/a>            <span class=\"co\">\/* Print y *\/<\/span><\/span>\n-<span id=\"cb18-43\"><a href=\"#cb18-43\"><\/a>            <span class=\"kw\">for<\/span> (i = <span class=\"dv\">0<\/span>; i &lt; n; i++) {<\/span>\n-<span id=\"cb18-44\"><a href=\"#cb18-44\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">print<\/span>(<span class=\"bu\">String<\/span><span class=\"fu\">.format<\/span>(<span class=\"st\">&quot; y<\/span><span class=\"sc\">%d<\/span><span class=\"st\"> = <\/span><span class=\"sc\">%f\\n<\/span><span class=\"st\">&quot;<\/span>, i, MemoryAccess.<span class=\"fu\">getDoubleAtIndex<\/span>(y, i)));<\/span>\n-<span id=\"cb18-45\"><a href=\"#cb18-45\"><\/a>            }<\/span>\n-<span id=\"cb18-46\"><a href=\"#cb18-46\"><\/a>        }<\/span>\n-<span id=\"cb18-47\"><a href=\"#cb18-47\"><\/a>    }<\/span>\n-<span id=\"cb18-48\"><a href=\"#cb18-48\"><\/a>}<\/span><\/code><\/pre><\/div>\n+<span id=\"cb18-6\"><a href=\"#cb18-6\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> blas.cblas_h.*;<\/span><\/span>\n+<span id=\"cb18-7\"><a href=\"#cb18-7\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n+<span id=\"cb18-8\"><a href=\"#cb18-8\"><\/a><\/span>\n+<span id=\"cb18-9\"><a href=\"#cb18-9\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> TestBlas {<\/span>\n+<span id=\"cb18-10\"><a href=\"#cb18-10\"><\/a>    <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) {<\/span>\n+<span id=\"cb18-11\"><a href=\"#cb18-11\"><\/a>        <span class=\"dt\">int<\/span> Layout;<\/span>\n+<span id=\"cb18-12\"><a href=\"#cb18-12\"><\/a>        <span class=\"dt\">int<\/span> transa;<\/span>\n+<span id=\"cb18-13\"><a href=\"#cb18-13\"><\/a><\/span>\n+<span id=\"cb18-14\"><a href=\"#cb18-14\"><\/a>        <span class=\"dt\">double<\/span> alpha, beta;<\/span>\n+<span id=\"cb18-15\"><a href=\"#cb18-15\"><\/a>        <span class=\"dt\">int<\/span> m, n, lda, incx, incy, i;<\/span>\n+<span id=\"cb18-16\"><a href=\"#cb18-16\"><\/a><\/span>\n+<span id=\"cb18-17\"><a href=\"#cb18-17\"><\/a>        Layout = <span class=\"fu\">CblasColMajor<\/span>();<\/span>\n+<span id=\"cb18-18\"><a href=\"#cb18-18\"><\/a>        transa = <span class=\"fu\">CblasNoTrans<\/span>();<\/span>\n+<span id=\"cb18-19\"><a href=\"#cb18-19\"><\/a><\/span>\n+<span id=\"cb18-20\"><a href=\"#cb18-20\"><\/a>        m = <span class=\"dv\">4<\/span>; <span class=\"co\">\/* Size of Column ( the number of rows ) *\/<\/span><\/span>\n+<span id=\"cb18-21\"><a href=\"#cb18-21\"><\/a>        n = <span class=\"dv\">4<\/span>; <span class=\"co\">\/* Size of Row ( the number of columns ) *\/<\/span><\/span>\n+<span id=\"cb18-22\"><a href=\"#cb18-22\"><\/a>        lda = <span class=\"dv\">4<\/span>; <span class=\"co\">\/* Leading dimension of 5 * 4 matrix is 5 *\/<\/span><\/span>\n+<span id=\"cb18-23\"><a href=\"#cb18-23\"><\/a>        incx = <span class=\"dv\">1<\/span>;<\/span>\n+<span id=\"cb18-24\"><a href=\"#cb18-24\"><\/a>        incy = <span class=\"dv\">1<\/span>;<\/span>\n+<span id=\"cb18-25\"><a href=\"#cb18-25\"><\/a>        alpha = <span class=\"dv\">1<\/span>;<\/span>\n+<span id=\"cb18-26\"><a href=\"#cb18-26\"><\/a>        beta = <span class=\"dv\">0<\/span>;<\/span>\n+<span id=\"cb18-27\"><a href=\"#cb18-27\"><\/a><\/span>\n+<span id=\"cb18-28\"><a href=\"#cb18-28\"><\/a>        <span class=\"kw\">try<\/span> (var scope = NativeScope.<span class=\"fu\">unboundedScope<\/span>()) {<\/span>\n+<span id=\"cb18-29\"><a href=\"#cb18-29\"><\/a>            var a = scope.<span class=\"fu\">allocateArray<\/span>(C_DOUBLE, <span class=\"kw\">new<\/span> <span class=\"dt\">double<\/span>[] {<\/span>\n+<span id=\"cb18-30\"><a href=\"#cb18-30\"><\/a>                <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">2.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">3.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">4.<\/span><span class=\"dv\">0<\/span>,<\/span>\n+<span id=\"cb18-31\"><a href=\"#cb18-31\"><\/a>                <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>,<\/span>\n+<span id=\"cb18-32\"><a href=\"#cb18-32\"><\/a>                <span class=\"fl\">3.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">4.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">5.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">6.<\/span><span class=\"dv\">0<\/span>,<\/span>\n+<span id=\"cb18-33\"><a href=\"#cb18-33\"><\/a>                <span class=\"fl\">5.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">6.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">7.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">8.<\/span><span class=\"dv\">0<\/span><\/span>\n+<span id=\"cb18-34\"><a href=\"#cb18-34\"><\/a>            });<\/span>\n+<span id=\"cb18-35\"><a href=\"#cb18-35\"><\/a>            var x = scope.<span class=\"fu\">allocateArray<\/span>(C_DOUBLE, <span class=\"kw\">new<\/span> <span class=\"dt\">double<\/span>[] {<\/span>\n+<span id=\"cb18-36\"><a href=\"#cb18-36\"><\/a>                <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">2.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span>, <span class=\"fl\">1.<\/span><span class=\"dv\">0<\/span><\/span>\n+<span id=\"cb18-37\"><a href=\"#cb18-37\"><\/a>            });<\/span>\n+<span id=\"cb18-38\"><a href=\"#cb18-38\"><\/a>            var y = scope.<span class=\"fu\">allocateArray<\/span>(C_DOUBLE, n);<\/span>\n+<span id=\"cb18-39\"><a href=\"#cb18-39\"><\/a><\/span>\n+<span id=\"cb18-40\"><a href=\"#cb18-40\"><\/a>            <span class=\"fu\">cblas_dgemv<\/span>(Layout, transa, m, n, alpha, a, lda, x, incx, beta, y, incy);<\/span>\n+<span id=\"cb18-41\"><a href=\"#cb18-41\"><\/a>            <span class=\"co\">\/* Print y *\/<\/span><\/span>\n+<span id=\"cb18-42\"><a href=\"#cb18-42\"><\/a>            <span class=\"kw\">for<\/span> (i = <span class=\"dv\">0<\/span>; i &lt; n; i++) {<\/span>\n+<span id=\"cb18-43\"><a href=\"#cb18-43\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">print<\/span>(<span class=\"bu\">String<\/span><span class=\"fu\">.format<\/span>(<span class=\"st\">&quot; y<\/span><span class=\"sc\">%d<\/span><span class=\"st\"> = <\/span><span class=\"sc\">%f\\n<\/span><span class=\"st\">&quot;<\/span>, i, MemoryAccess.<span class=\"fu\">getDoubleAtIndex<\/span>(y, i)));<\/span>\n+<span id=\"cb18-44\"><a href=\"#cb18-44\"><\/a>            }<\/span>\n+<span id=\"cb18-45\"><a href=\"#cb18-45\"><\/a>        }<\/span>\n+<span id=\"cb18-46\"><a href=\"#cb18-46\"><\/a>    }<\/span>\n+<span id=\"cb18-47\"><a href=\"#cb18-47\"><\/a>}<\/span><\/code><\/pre><\/div>\n@@ -581,88 +577,87 @@\n-<span id=\"cb31-7\"><a href=\"#cb31-7\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> org.sqlite.RuntimeHelper.*;<\/span><\/span>\n-<span id=\"cb31-8\"><a href=\"#cb31-8\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n-<span id=\"cb31-9\"><a href=\"#cb31-9\"><\/a><\/span>\n-<span id=\"cb31-10\"><a href=\"#cb31-10\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> SqliteMain {<\/span>\n-<span id=\"cb31-11\"><a href=\"#cb31-11\"><\/a>   <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) <span class=\"kw\">throws<\/span> <span class=\"bu\">Exception<\/span> {<\/span>\n-<span id=\"cb31-12\"><a href=\"#cb31-12\"><\/a>        <span class=\"kw\">try<\/span> (var scope = NativeScope.<span class=\"fu\">unboundedScope<\/span>()) {<\/span>\n-<span id=\"cb31-13\"><a href=\"#cb31-13\"><\/a>            <span class=\"co\">\/\/ char** errMsgPtrPtr;<\/span><\/span>\n-<span id=\"cb31-14\"><a href=\"#cb31-14\"><\/a>            var errMsgPtrPtr = scope.<span class=\"fu\">allocate<\/span>(C_POINTER);<\/span>\n-<span id=\"cb31-15\"><a href=\"#cb31-15\"><\/a><\/span>\n-<span id=\"cb31-16\"><a href=\"#cb31-16\"><\/a>            <span class=\"co\">\/\/ sqlite3** dbPtrPtr;<\/span><\/span>\n-<span id=\"cb31-17\"><a href=\"#cb31-17\"><\/a>            var dbPtrPtr = scope.<span class=\"fu\">allocate<\/span>(C_POINTER);<\/span>\n-<span id=\"cb31-18\"><a href=\"#cb31-18\"><\/a><\/span>\n-<span id=\"cb31-19\"><a href=\"#cb31-19\"><\/a>            <span class=\"dt\">int<\/span> rc = <span class=\"fu\">sqlite3_open<\/span>(<span class=\"fu\">toCString<\/span>(<span class=\"st\">&quot;employee.db&quot;<\/span>,scope), dbPtrPtr);<\/span>\n-<span id=\"cb31-20\"><a href=\"#cb31-20\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n-<span id=\"cb31-21\"><a href=\"#cb31-21\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_open failed: &quot;<\/span> + rc);<\/span>\n-<span id=\"cb31-22\"><a href=\"#cb31-22\"><\/a>                <span class=\"kw\">return<\/span>;<\/span>\n-<span id=\"cb31-23\"><a href=\"#cb31-23\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n-<span id=\"cb31-24\"><a href=\"#cb31-24\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;employee db opened&quot;<\/span>);<\/span>\n-<span id=\"cb31-25\"><a href=\"#cb31-25\"><\/a>            }<\/span>\n-<span id=\"cb31-26\"><a href=\"#cb31-26\"><\/a><\/span>\n-<span id=\"cb31-27\"><a href=\"#cb31-27\"><\/a>            <span class=\"co\">\/\/ sqlite3* dbPtr;<\/span><\/span>\n-<span id=\"cb31-28\"><a href=\"#cb31-28\"><\/a>            var dbPtr = MemoryAccess.<span class=\"fu\">getAddress<\/span>(dbPtrPtr);<\/span>\n-<span id=\"cb31-29\"><a href=\"#cb31-29\"><\/a><\/span>\n-<span id=\"cb31-30\"><a href=\"#cb31-30\"><\/a>            <span class=\"co\">\/\/ create a new table<\/span><\/span>\n-<span id=\"cb31-31\"><a href=\"#cb31-31\"><\/a>            var sql = <span class=\"fu\">toCString<\/span>(<\/span>\n-<span id=\"cb31-32\"><a href=\"#cb31-32\"><\/a>                <span class=\"st\">&quot;CREATE TABLE EMPLOYEE (&quot;<\/span>  +<\/span>\n-<span id=\"cb31-33\"><a href=\"#cb31-33\"><\/a>                <span class=\"st\">&quot;  ID INT PRIMARY KEY NOT NULL,&quot;<\/span> +<\/span>\n-<span id=\"cb31-34\"><a href=\"#cb31-34\"><\/a>                <span class=\"st\">&quot;  NAME TEXT NOT NULL,&quot;<\/span>    +<\/span>\n-<span id=\"cb31-35\"><a href=\"#cb31-35\"><\/a>                <span class=\"st\">&quot;  SALARY REAL NOT NULL )&quot;<\/span>, scope);<\/span>\n-<span id=\"cb31-36\"><a href=\"#cb31-36\"><\/a><\/span>\n-<span id=\"cb31-37\"><a href=\"#cb31-37\"><\/a>            rc = <span class=\"fu\">sqlite3_exec<\/span>(dbPtr, sql, NULL, NULL, errMsgPtrPtr);<\/span>\n-<span id=\"cb31-38\"><a href=\"#cb31-38\"><\/a><\/span>\n-<span id=\"cb31-39\"><a href=\"#cb31-39\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n-<span id=\"cb31-40\"><a href=\"#cb31-40\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_exec failed: &quot;<\/span> + rc);<\/span>\n-<span id=\"cb31-41\"><a href=\"#cb31-41\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;SQL error: &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr)));<\/span>\n-<span id=\"cb31-42\"><a href=\"#cb31-42\"><\/a>                <span class=\"fu\">sqlite3_free<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr));<\/span>\n-<span id=\"cb31-43\"><a href=\"#cb31-43\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n-<span id=\"cb31-44\"><a href=\"#cb31-44\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;employee table created&quot;<\/span>);<\/span>\n-<span id=\"cb31-45\"><a href=\"#cb31-45\"><\/a>            }<\/span>\n-<span id=\"cb31-46\"><a href=\"#cb31-46\"><\/a><\/span>\n-<span id=\"cb31-47\"><a href=\"#cb31-47\"><\/a>            <span class=\"co\">\/\/ insert two rows<\/span><\/span>\n-<span id=\"cb31-48\"><a href=\"#cb31-48\"><\/a>            sql = <span class=\"fu\">toCString<\/span>(<\/span>\n-<span id=\"cb31-49\"><a href=\"#cb31-49\"><\/a>                <span class=\"st\">&quot;INSERT INTO EMPLOYEE (ID,NAME,SALARY) &quot;<\/span> +<\/span>\n-<span id=\"cb31-50\"><a href=\"#cb31-50\"><\/a>                    <span class=\"st\">&quot;VALUES (134, &#39;Xyz&#39;, 200000.0); &quot;<\/span> +<\/span>\n-<span id=\"cb31-51\"><a href=\"#cb31-51\"><\/a>                <span class=\"st\">&quot;INSERT INTO EMPLOYEE (ID,NAME,SALARY) &quot;<\/span> +<\/span>\n-<span id=\"cb31-52\"><a href=\"#cb31-52\"><\/a>                    <span class=\"st\">&quot;VALUES (333, &#39;Abc&#39;, 100000.0);&quot;<\/span>, scope<\/span>\n-<span id=\"cb31-53\"><a href=\"#cb31-53\"><\/a>            );<\/span>\n-<span id=\"cb31-54\"><a href=\"#cb31-54\"><\/a>            rc = <span class=\"fu\">sqlite3_exec<\/span>(dbPtr, sql, NULL, NULL, errMsgPtrPtr);<\/span>\n-<span id=\"cb31-55\"><a href=\"#cb31-55\"><\/a><\/span>\n-<span id=\"cb31-56\"><a href=\"#cb31-56\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n-<span id=\"cb31-57\"><a href=\"#cb31-57\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_exec failed: &quot;<\/span> + rc);<\/span>\n-<span id=\"cb31-58\"><a href=\"#cb31-58\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;SQL error: &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr)));<\/span>\n-<span id=\"cb31-59\"><a href=\"#cb31-59\"><\/a>                <span class=\"fu\">sqlite3_free<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr));<\/span>\n-<span id=\"cb31-60\"><a href=\"#cb31-60\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n-<span id=\"cb31-61\"><a href=\"#cb31-61\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;rows inserted&quot;<\/span>);<\/span>\n-<span id=\"cb31-62\"><a href=\"#cb31-62\"><\/a>            }<\/span>\n-<span id=\"cb31-63\"><a href=\"#cb31-63\"><\/a><\/span>\n-<span id=\"cb31-64\"><a href=\"#cb31-64\"><\/a>            <span class=\"dt\">int<\/span>[] rowNum = <span class=\"kw\">new<\/span> <span class=\"dt\">int<\/span>[<span class=\"dv\">1<\/span>];<\/span>\n-<span id=\"cb31-65\"><a href=\"#cb31-65\"><\/a>            <span class=\"co\">\/\/ callback to print rows from SELECT query<\/span><\/span>\n-<span id=\"cb31-66\"><a href=\"#cb31-66\"><\/a>            var callback = sqlite3_exec$callback.<span class=\"fu\">allocate<\/span>((a, argc, argv, columnNames) -&gt; {<\/span>\n-<span id=\"cb31-67\"><a href=\"#cb31-67\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;Row num: &quot;<\/span> + rowNum[<span class=\"dv\">0<\/span>]++);<\/span>\n-<span id=\"cb31-68\"><a href=\"#cb31-68\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;numColumns = &quot;<\/span> + argc);<\/span>\n-<span id=\"cb31-69\"><a href=\"#cb31-69\"><\/a>                var argv_seg = <span class=\"fu\">asArrayRestricted<\/span>(argv, C_POINTER, argc);<\/span>\n-<span id=\"cb31-70\"><a href=\"#cb31-70\"><\/a>                var columnNames_seg = <span class=\"fu\">asArrayRestricted<\/span>(columnNames, C_POINTER, argc);<\/span>\n-<span id=\"cb31-71\"><a href=\"#cb31-71\"><\/a>                <span class=\"kw\">for<\/span> (<span class=\"dt\">int<\/span> i = <span class=\"dv\">0<\/span>; i &lt; argc; i++) {<\/span>\n-<span id=\"cb31-72\"><a href=\"#cb31-72\"><\/a>                     <span class=\"bu\">String<\/span> name = <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddressAtIndex<\/span>(columnNames_seg, i));<\/span>\n-<span id=\"cb31-73\"><a href=\"#cb31-73\"><\/a>                     <span class=\"bu\">String<\/span> value = <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddressAtIndex<\/span>(argv_seg, i));<\/span>\n-<span id=\"cb31-74\"><a href=\"#cb31-74\"><\/a>                     <span class=\"bu\">System<\/span>.<span class=\"fu\">out.printf<\/span>(<span class=\"st\">&quot;<\/span><span class=\"sc\">%s<\/span><span class=\"st\"> = <\/span><span class=\"sc\">%s\\n<\/span><span class=\"st\">&quot;<\/span>, name, value);<\/span>\n-<span id=\"cb31-75\"><a href=\"#cb31-75\"><\/a>                }<\/span>\n-<span id=\"cb31-76\"><a href=\"#cb31-76\"><\/a>                <span class=\"kw\">return<\/span> <span class=\"dv\">0<\/span>;<\/span>\n-<span id=\"cb31-77\"><a href=\"#cb31-77\"><\/a>            }, scope);<\/span>\n-<span id=\"cb31-78\"><a href=\"#cb31-78\"><\/a><\/span>\n-<span id=\"cb31-79\"><a href=\"#cb31-79\"><\/a>            <span class=\"co\">\/\/ select query<\/span><\/span>\n-<span id=\"cb31-80\"><a href=\"#cb31-80\"><\/a>            sql = <span class=\"fu\">toCString<\/span>(<span class=\"st\">&quot;SELECT * FROM EMPLOYEE&quot;<\/span>, scope);<\/span>\n-<span id=\"cb31-81\"><a href=\"#cb31-81\"><\/a>            rc = <span class=\"fu\">sqlite3_exec<\/span>(dbPtr, sql, callback, NULL, errMsgPtrPtr);<\/span>\n-<span id=\"cb31-82\"><a href=\"#cb31-82\"><\/a><\/span>\n-<span id=\"cb31-83\"><a href=\"#cb31-83\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n-<span id=\"cb31-84\"><a href=\"#cb31-84\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_exec failed: &quot;<\/span> + rc);<\/span>\n-<span id=\"cb31-85\"><a href=\"#cb31-85\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;SQL error: &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr)));<\/span>\n-<span id=\"cb31-86\"><a href=\"#cb31-86\"><\/a>                <span class=\"fu\">sqlite3_free<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr));<\/span>\n-<span id=\"cb31-87\"><a href=\"#cb31-87\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n-<span id=\"cb31-88\"><a href=\"#cb31-88\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;done&quot;<\/span>);<\/span>\n-<span id=\"cb31-89\"><a href=\"#cb31-89\"><\/a>            }<\/span>\n-<span id=\"cb31-90\"><a href=\"#cb31-90\"><\/a><\/span>\n-<span id=\"cb31-91\"><a href=\"#cb31-91\"><\/a>            <span class=\"fu\">sqlite3_close<\/span>(dbPtr);<\/span>\n-<span id=\"cb31-92\"><a href=\"#cb31-92\"><\/a>        }<\/span>\n-<span id=\"cb31-93\"><a href=\"#cb31-93\"><\/a>    }<\/span>\n-<span id=\"cb31-94\"><a href=\"#cb31-94\"><\/a>}<\/span><\/code><\/pre><\/div>\n+<span id=\"cb31-7\"><a href=\"#cb31-7\"><\/a><span class=\"kw\">import static<\/span><span class=\"im\"> jdk.incubator.foreign.CLinker.*;<\/span><\/span>\n+<span id=\"cb31-8\"><a href=\"#cb31-8\"><\/a><\/span>\n+<span id=\"cb31-9\"><a href=\"#cb31-9\"><\/a><span class=\"kw\">public<\/span> <span class=\"kw\">class<\/span> SqliteMain {<\/span>\n+<span id=\"cb31-10\"><a href=\"#cb31-10\"><\/a>   <span class=\"kw\">public<\/span> <span class=\"dt\">static<\/span> <span class=\"dt\">void<\/span> <span class=\"fu\">main<\/span>(<span class=\"bu\">String<\/span>[] args) <span class=\"kw\">throws<\/span> <span class=\"bu\">Exception<\/span> {<\/span>\n+<span id=\"cb31-11\"><a href=\"#cb31-11\"><\/a>        <span class=\"kw\">try<\/span> (var scope = NativeScope.<span class=\"fu\">unboundedScope<\/span>()) {<\/span>\n+<span id=\"cb31-12\"><a href=\"#cb31-12\"><\/a>            <span class=\"co\">\/\/ char** errMsgPtrPtr;<\/span><\/span>\n+<span id=\"cb31-13\"><a href=\"#cb31-13\"><\/a>            var errMsgPtrPtr = scope.<span class=\"fu\">allocate<\/span>(C_POINTER);<\/span>\n+<span id=\"cb31-14\"><a href=\"#cb31-14\"><\/a><\/span>\n+<span id=\"cb31-15\"><a href=\"#cb31-15\"><\/a>            <span class=\"co\">\/\/ sqlite3** dbPtrPtr;<\/span><\/span>\n+<span id=\"cb31-16\"><a href=\"#cb31-16\"><\/a>            var dbPtrPtr = scope.<span class=\"fu\">allocate<\/span>(C_POINTER);<\/span>\n+<span id=\"cb31-17\"><a href=\"#cb31-17\"><\/a><\/span>\n+<span id=\"cb31-18\"><a href=\"#cb31-18\"><\/a>            <span class=\"dt\">int<\/span> rc = <span class=\"fu\">sqlite3_open<\/span>(<span class=\"fu\">toCString<\/span>(<span class=\"st\">&quot;employee.db&quot;<\/span>,scope), dbPtrPtr);<\/span>\n+<span id=\"cb31-19\"><a href=\"#cb31-19\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n+<span id=\"cb31-20\"><a href=\"#cb31-20\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_open failed: &quot;<\/span> + rc);<\/span>\n+<span id=\"cb31-21\"><a href=\"#cb31-21\"><\/a>                <span class=\"kw\">return<\/span>;<\/span>\n+<span id=\"cb31-22\"><a href=\"#cb31-22\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n+<span id=\"cb31-23\"><a href=\"#cb31-23\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;employee db opened&quot;<\/span>);<\/span>\n+<span id=\"cb31-24\"><a href=\"#cb31-24\"><\/a>            }<\/span>\n+<span id=\"cb31-25\"><a href=\"#cb31-25\"><\/a><\/span>\n+<span id=\"cb31-26\"><a href=\"#cb31-26\"><\/a>            <span class=\"co\">\/\/ sqlite3* dbPtr;<\/span><\/span>\n+<span id=\"cb31-27\"><a href=\"#cb31-27\"><\/a>            var dbPtr = MemoryAccess.<span class=\"fu\">getAddress<\/span>(dbPtrPtr);<\/span>\n+<span id=\"cb31-28\"><a href=\"#cb31-28\"><\/a><\/span>\n+<span id=\"cb31-29\"><a href=\"#cb31-29\"><\/a>            <span class=\"co\">\/\/ create a new table<\/span><\/span>\n+<span id=\"cb31-30\"><a href=\"#cb31-30\"><\/a>            var sql = <span class=\"fu\">toCString<\/span>(<\/span>\n+<span id=\"cb31-31\"><a href=\"#cb31-31\"><\/a>                <span class=\"st\">&quot;CREATE TABLE EMPLOYEE (&quot;<\/span>  +<\/span>\n+<span id=\"cb31-32\"><a href=\"#cb31-32\"><\/a>                <span class=\"st\">&quot;  ID INT PRIMARY KEY NOT NULL,&quot;<\/span> +<\/span>\n+<span id=\"cb31-33\"><a href=\"#cb31-33\"><\/a>                <span class=\"st\">&quot;  NAME TEXT NOT NULL,&quot;<\/span>    +<\/span>\n+<span id=\"cb31-34\"><a href=\"#cb31-34\"><\/a>                <span class=\"st\">&quot;  SALARY REAL NOT NULL )&quot;<\/span>, scope);<\/span>\n+<span id=\"cb31-35\"><a href=\"#cb31-35\"><\/a><\/span>\n+<span id=\"cb31-36\"><a href=\"#cb31-36\"><\/a>            rc = <span class=\"fu\">sqlite3_exec<\/span>(dbPtr, sql, NULL, NULL, errMsgPtrPtr);<\/span>\n+<span id=\"cb31-37\"><a href=\"#cb31-37\"><\/a><\/span>\n+<span id=\"cb31-38\"><a href=\"#cb31-38\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n+<span id=\"cb31-39\"><a href=\"#cb31-39\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_exec failed: &quot;<\/span> + rc);<\/span>\n+<span id=\"cb31-40\"><a href=\"#cb31-40\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;SQL error: &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr)));<\/span>\n+<span id=\"cb31-41\"><a href=\"#cb31-41\"><\/a>                <span class=\"fu\">sqlite3_free<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr));<\/span>\n+<span id=\"cb31-42\"><a href=\"#cb31-42\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n+<span id=\"cb31-43\"><a href=\"#cb31-43\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;employee table created&quot;<\/span>);<\/span>\n+<span id=\"cb31-44\"><a href=\"#cb31-44\"><\/a>            }<\/span>\n+<span id=\"cb31-45\"><a href=\"#cb31-45\"><\/a><\/span>\n+<span id=\"cb31-46\"><a href=\"#cb31-46\"><\/a>            <span class=\"co\">\/\/ insert two rows<\/span><\/span>\n+<span id=\"cb31-47\"><a href=\"#cb31-47\"><\/a>            sql = <span class=\"fu\">toCString<\/span>(<\/span>\n+<span id=\"cb31-48\"><a href=\"#cb31-48\"><\/a>                <span class=\"st\">&quot;INSERT INTO EMPLOYEE (ID,NAME,SALARY) &quot;<\/span> +<\/span>\n+<span id=\"cb31-49\"><a href=\"#cb31-49\"><\/a>                    <span class=\"st\">&quot;VALUES (134, &#39;Xyz&#39;, 200000.0); &quot;<\/span> +<\/span>\n+<span id=\"cb31-50\"><a href=\"#cb31-50\"><\/a>                <span class=\"st\">&quot;INSERT INTO EMPLOYEE (ID,NAME,SALARY) &quot;<\/span> +<\/span>\n+<span id=\"cb31-51\"><a href=\"#cb31-51\"><\/a>                    <span class=\"st\">&quot;VALUES (333, &#39;Abc&#39;, 100000.0);&quot;<\/span>, scope<\/span>\n+<span id=\"cb31-52\"><a href=\"#cb31-52\"><\/a>            );<\/span>\n+<span id=\"cb31-53\"><a href=\"#cb31-53\"><\/a>            rc = <span class=\"fu\">sqlite3_exec<\/span>(dbPtr, sql, NULL, NULL, errMsgPtrPtr);<\/span>\n+<span id=\"cb31-54\"><a href=\"#cb31-54\"><\/a><\/span>\n+<span id=\"cb31-55\"><a href=\"#cb31-55\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n+<span id=\"cb31-56\"><a href=\"#cb31-56\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_exec failed: &quot;<\/span> + rc);<\/span>\n+<span id=\"cb31-57\"><a href=\"#cb31-57\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;SQL error: &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr)));<\/span>\n+<span id=\"cb31-58\"><a href=\"#cb31-58\"><\/a>                <span class=\"fu\">sqlite3_free<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr));<\/span>\n+<span id=\"cb31-59\"><a href=\"#cb31-59\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n+<span id=\"cb31-60\"><a href=\"#cb31-60\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;rows inserted&quot;<\/span>);<\/span>\n+<span id=\"cb31-61\"><a href=\"#cb31-61\"><\/a>            }<\/span>\n+<span id=\"cb31-62\"><a href=\"#cb31-62\"><\/a><\/span>\n+<span id=\"cb31-63\"><a href=\"#cb31-63\"><\/a>            <span class=\"dt\">int<\/span>[] rowNum = <span class=\"kw\">new<\/span> <span class=\"dt\">int<\/span>[<span class=\"dv\">1<\/span>];<\/span>\n+<span id=\"cb31-64\"><a href=\"#cb31-64\"><\/a>            <span class=\"co\">\/\/ callback to print rows from SELECT query<\/span><\/span>\n+<span id=\"cb31-65\"><a href=\"#cb31-65\"><\/a>            var callback = sqlite3_exec$callback.<span class=\"fu\">allocate<\/span>((a, argc, argv, columnNames) -&gt; {<\/span>\n+<span id=\"cb31-66\"><a href=\"#cb31-66\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;Row num: &quot;<\/span> + rowNum[<span class=\"dv\">0<\/span>]++);<\/span>\n+<span id=\"cb31-67\"><a href=\"#cb31-67\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;numColumns = &quot;<\/span> + argc);<\/span>\n+<span id=\"cb31-68\"><a href=\"#cb31-68\"><\/a>                var argv_seg = argv.<span class=\"fu\">asSegmentRestricted<\/span>(C_POINTER.<span class=\"fu\">byteSize<\/span>() * argc);<\/span>\n+<span id=\"cb31-69\"><a href=\"#cb31-69\"><\/a>                var columnNames_seg = columnNames.<span class=\"fu\">asSegmentRestricted<\/span>(C_POINTER.<span class=\"fu\">byteSize<\/span>() * argc);<\/span>\n+<span id=\"cb31-70\"><a href=\"#cb31-70\"><\/a>                <span class=\"kw\">for<\/span> (<span class=\"dt\">int<\/span> i = <span class=\"dv\">0<\/span>; i &lt; argc; i++) {<\/span>\n+<span id=\"cb31-71\"><a href=\"#cb31-71\"><\/a>                     <span class=\"bu\">String<\/span> name = <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddressAtIndex<\/span>(columnNames_seg, i));<\/span>\n+<span id=\"cb31-72\"><a href=\"#cb31-72\"><\/a>                     <span class=\"bu\">String<\/span> value = <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddressAtIndex<\/span>(argv_seg, i));<\/span>\n+<span id=\"cb31-73\"><a href=\"#cb31-73\"><\/a>                     <span class=\"bu\">System<\/span>.<span class=\"fu\">out.printf<\/span>(<span class=\"st\">&quot;<\/span><span class=\"sc\">%s<\/span><span class=\"st\"> = <\/span><span class=\"sc\">%s\\n<\/span><span class=\"st\">&quot;<\/span>, name, value);<\/span>\n+<span id=\"cb31-74\"><a href=\"#cb31-74\"><\/a>                }<\/span>\n+<span id=\"cb31-75\"><a href=\"#cb31-75\"><\/a>                <span class=\"kw\">return<\/span> <span class=\"dv\">0<\/span>;<\/span>\n+<span id=\"cb31-76\"><a href=\"#cb31-76\"><\/a>            }, scope);<\/span>\n+<span id=\"cb31-77\"><a href=\"#cb31-77\"><\/a><\/span>\n+<span id=\"cb31-78\"><a href=\"#cb31-78\"><\/a>            <span class=\"co\">\/\/ select query<\/span><\/span>\n+<span id=\"cb31-79\"><a href=\"#cb31-79\"><\/a>            sql = <span class=\"fu\">toCString<\/span>(<span class=\"st\">&quot;SELECT * FROM EMPLOYEE&quot;<\/span>, scope);<\/span>\n+<span id=\"cb31-80\"><a href=\"#cb31-80\"><\/a>            rc = <span class=\"fu\">sqlite3_exec<\/span>(dbPtr, sql, callback, NULL, errMsgPtrPtr);<\/span>\n+<span id=\"cb31-81\"><a href=\"#cb31-81\"><\/a><\/span>\n+<span id=\"cb31-82\"><a href=\"#cb31-82\"><\/a>            <span class=\"kw\">if<\/span> (rc != <span class=\"dv\">0<\/span>) {<\/span>\n+<span id=\"cb31-83\"><a href=\"#cb31-83\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;sqlite3_exec failed: &quot;<\/span> + rc);<\/span>\n+<span id=\"cb31-84\"><a href=\"#cb31-84\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">err<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;SQL error: &quot;<\/span> + <span class=\"fu\">toJavaStringRestricted<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr)));<\/span>\n+<span id=\"cb31-85\"><a href=\"#cb31-85\"><\/a>                <span class=\"fu\">sqlite3_free<\/span>(MemoryAccess.<span class=\"fu\">getAddress<\/span>(errMsgPtrPtr));<\/span>\n+<span id=\"cb31-86\"><a href=\"#cb31-86\"><\/a>            } <span class=\"kw\">else<\/span> {<\/span>\n+<span id=\"cb31-87\"><a href=\"#cb31-87\"><\/a>                <span class=\"bu\">System<\/span>.<span class=\"fu\">out<\/span>.<span class=\"fu\">println<\/span>(<span class=\"st\">&quot;done&quot;<\/span>);<\/span>\n+<span id=\"cb31-88\"><a href=\"#cb31-88\"><\/a>            }<\/span>\n+<span id=\"cb31-89\"><a href=\"#cb31-89\"><\/a><\/span>\n+<span id=\"cb31-90\"><a href=\"#cb31-90\"><\/a>            <span class=\"fu\">sqlite3_close<\/span>(dbPtr);<\/span>\n+<span id=\"cb31-91\"><a href=\"#cb31-91\"><\/a>        }<\/span>\n+<span id=\"cb31-92\"><a href=\"#cb31-92\"><\/a>    }<\/span>\n+<span id=\"cb31-93\"><a href=\"#cb31-93\"><\/a>}<\/span><\/code><\/pre><\/div>\n","filename":"doc\/panama_jextract.html","additions":180,"deletions":185,"binary":false,"changes":365,"status":"modified"},{"patch":"@@ -105,1 +105,0 @@\n-import static org.python.RuntimeHelper.*;\n@@ -149,1 +148,0 @@\n-import static org.unix.RuntimeHelper.*;\n@@ -195,1 +193,0 @@\n-import static org.jextract.RuntimeHelper.*;\n@@ -271,1 +268,0 @@\n-import static blas.RuntimeHelper.*;\n@@ -572,1 +568,0 @@\n-import static org.sqlite.RuntimeHelper.*;\n@@ -634,2 +629,2 @@\n-                var argv_seg = asArrayRestricted(argv, C_POINTER, argc);\n-                var columnNames_seg = asArrayRestricted(columnNames, C_POINTER, argc);\n+                var argv_seg = argv.asSegmentRestricted(C_POINTER.byteSize() * argc);\n+                var columnNames_seg = columnNames.asSegmentRestricted(C_POINTER.byteSize() * argc);\n","filename":"doc\/panama_jextract.md","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-public class RuntimeHelper {\n-\n+final class RuntimeHelper {\n+    private RuntimeHelper() {}\n@@ -54,1 +54,0 @@\n-\n@@ -56,1 +55,0 @@\n-\n@@ -75,15 +73,1 @@\n-    private static final Optional<LibraryLookup.Symbol> lookup(LibraryLookup[] LIBRARIES, String sym) {\n-        for (LibraryLookup l : LIBRARIES) {\n-            try {\n-                return Optional.of(l.lookup(sym));\n-            } catch (Throwable t) {\n-            }\n-        }\n-        try {\n-            return Optional.of(LibraryLookup.ofDefault().lookup(sym));\n-        } catch (Throwable t) {\n-            return Optional.empty();\n-        }\n-    }\n-\n-    public static final MemorySegment lookupGlobalVariable(LibraryLookup[] LIBRARIES, String name, MemoryLayout layout) {\n+    static final MemorySegment lookupGlobalVariable(LibraryLookup[] LIBRARIES, String name, MemoryLayout layout) {\n@@ -95,1 +79,1 @@\n-    public static final MemorySegment nonCloseableNonTransferableSegment(MemorySegment seg) {\n+    static final MemorySegment nonCloseableNonTransferableSegment(MemorySegment seg) {\n@@ -99,1 +83,1 @@\n-    public static final MethodHandle downcallHandle(LibraryLookup[] LIBRARIES, String name, String desc, FunctionDescriptor fdesc, boolean variadic) {\n+    static final MethodHandle downcallHandle(LibraryLookup[] LIBRARIES, String name, String desc, FunctionDescriptor fdesc, boolean variadic) {\n@@ -109,5 +93,1 @@\n-    public static final MemorySegment upcallStub(MethodHandle handle, FunctionDescriptor fdesc) {\n-        return LINKER.upcallStub(handle, fdesc);\n-    }\n-\n-    public static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, String mtypeDesc) {\n+    static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, String mtypeDesc) {\n@@ -118,1 +98,1 @@\n-            return upcallStub(handle, fdesc);\n+            return LINKER.upcallStub(handle, fdesc);\n@@ -124,1 +104,1 @@\n-    public static MemorySegment asArrayRestricted(MemoryAddress addr, MemoryLayout layout, int numElements) {\n+    static final MemorySegment asArrayRestricted(MemoryAddress addr, MemoryLayout layout, int numElements) {\n@@ -128,3 +108,13 @@\n-    public static MemorySegment asArray(MemorySegment seg, MemoryLayout layout, int numElements) {\n-        Objects.requireNonNull(seg);\n-        return seg.asSlice(0L, numElements * layout.byteSize());\n+    \/\/ Internals below this point\n+    private static final Optional<LibraryLookup.Symbol> lookup(LibraryLookup[] LIBRARIES, String sym) {\n+        for (LibraryLookup l : LIBRARIES) {\n+            try {\n+                return Optional.of(l.lookup(sym));\n+            } catch (Throwable t) {\n+            }\n+        }\n+        try {\n+            return Optional.of(LibraryLookup.ofDefault().lookup(sym));\n+        } catch (Throwable t) {\n+            return Optional.empty();\n+        }\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/libclang\/RuntimeHelper.java","additions":21,"deletions":31,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-public class RuntimeHelper {\n-\n+final class RuntimeHelper {\n@@ -25,1 +24,0 @@\n-\n@@ -27,1 +25,0 @@\n-\n@@ -29,1 +26,0 @@\n-\n@@ -48,15 +44,1 @@\n-    private static final Optional<LibraryLookup.Symbol> lookup(LibraryLookup[] LIBRARIES, String sym) {\n-        for (LibraryLookup l : LIBRARIES) {\n-            try {\n-                return Optional.of(l.lookup(sym));\n-            } catch (Throwable t) {\n-            }\n-        }\n-        try {\n-            return Optional.of(LibraryLookup.ofDefault().lookup(sym));\n-        } catch (Throwable t) {\n-            return Optional.empty();\n-        }\n-    }\n-\n-    public static final MemorySegment lookupGlobalVariable(LibraryLookup[] LIBRARIES, String name, MemoryLayout layout) {\n+    static final MemorySegment lookupGlobalVariable(LibraryLookup[] LIBRARIES, String name, MemoryLayout layout) {\n@@ -68,5 +50,1 @@\n-    public static final MemorySegment nonCloseableNonTransferableSegment(MemorySegment seg) {\n-        return seg.withAccessModes(seg.accessModes() &  ~MemorySegment.CLOSE & ~MemorySegment.HANDOFF);\n-    }\n-\n-    public static final MethodHandle downcallHandle(LibraryLookup[] LIBRARIES, String name, String desc, FunctionDescriptor fdesc, boolean variadic) {\n+    static final MethodHandle downcallHandle(LibraryLookup[] LIBRARIES, String name, String desc, FunctionDescriptor fdesc, boolean variadic) {\n@@ -82,5 +60,1 @@\n-    public static final MemorySegment upcallStub(MethodHandle handle, FunctionDescriptor fdesc) {\n-        return LINKER.upcallStub(handle, fdesc);\n-    }\n-\n-    public static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, String mtypeDesc) {\n+    static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, String mtypeDesc) {\n@@ -91,1 +65,1 @@\n-            return upcallStub(handle, fdesc);\n+            return LINKER.upcallStub(handle, fdesc);\n@@ -97,2 +71,2 @@\n-    public static final MemorySegment nonCloseableSegment(MemorySegment seg) {\n-        return seg.withAccessModes(seg.accessModes() &  ~MemorySegment.CLOSE);\n+    static final MemorySegment nonCloseableNonTransferableSegment(MemorySegment seg) {\n+        return seg.withAccessModes(seg.accessModes() &  ~MemorySegment.CLOSE & ~MemorySegment.HANDOFF);\n@@ -101,1 +75,1 @@\n-    public static MemorySegment asArrayRestricted(MemoryAddress addr, MemoryLayout layout, int numElements) {\n+    static MemorySegment asArrayRestricted(MemoryAddress addr, MemoryLayout layout, int numElements) {\n@@ -105,3 +79,17 @@\n-    public static MemorySegment asArray(MemorySegment seg, MemoryLayout layout, int numElements) {\n-        Objects.requireNonNull(seg);\n-        return seg.asSlice(0L, numElements * layout.byteSize());\n+    \/\/ Internals only below this point\n+    private static final MemorySegment nonCloseableSegment(MemorySegment seg) {\n+        return seg.withAccessModes(seg.accessModes() &  ~MemorySegment.CLOSE);\n+    }\n+\n+    private static final Optional<LibraryLookup.Symbol> lookup(LibraryLookup[] LIBRARIES, String sym) {\n+        for (LibraryLookup l : LIBRARIES) {\n+            try {\n+                return Optional.of(l.lookup(sym));\n+            } catch (Throwable t) {\n+            }\n+        }\n+        try {\n+            return Optional.of(LibraryLookup.ofDefault().lookup(sym));\n+        } catch (Throwable t) {\n+            return Optional.empty();\n+        }\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":25,"deletions":37,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            var addr = RuntimeHelper.asArrayRestricted(argv, C_POINTER, argc);\n+            var addr = argv.asSegmentRestricted(C_POINTER.byteSize() * argc);\n","filename":"test\/jdk\/tools\/jextract\/test8246341\/LibTest8246341Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import static test.jextract.test8246400.RuntimeHelper.*;\n","filename":"test\/jdk\/tools\/jextract\/test8246400\/LibTest8246400Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,71 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import org.testng.annotations.Test;\n-import jdk.incubator.foreign.CLinker;\n-import jdk.incubator.foreign.MemoryAddress;\n-import jdk.incubator.foreign.MemorySegment;\n-import static org.testng.Assert.assertEquals;\n-import static org.testng.Assert.assertTrue;\n-import test.jextract.test8253159.RuntimeHelper;\n-import static test.jextract.test8253159.test8253159_h.*;\n-\n-\/*\n- * @test id=classes\n- * @bug 8253159\n- * @summary RuntimeHelper.asArrayRestricted should create noncloseable segment\n- * @library ..\n- * @modules jdk.incubator.jextract\n- * @run driver JtregJextract -l Test8253159 -t test.jextract.test8253159 -- test8253159.h\n- * @run testng\/othervm -Dforeign.restricted=permit LibTest8253159Test\n- *\/\n-\/*\n- * @test id=sources\n- * @bug 8253159\n- * @summary RuntimeHelper.asArrayRestricted should create noncloseable segment\n- * @library ..\n- * @modules jdk.incubator.jextract\n- * @run driver JtregJextractSources -l Test8253159 -t test.jextract.test8253159 -- test8253159.h\n- * @run testng\/othervm -Dforeign.restricted=permit LibTest8253159Test\n- *\/\n-public class LibTest8253159Test {\n-    @Test\n-    public void test() {\n-        MemoryAddress addr = get_array();\n-        MemorySegment seg = RuntimeHelper.asArrayRestricted(addr, CLinker.C_INT, 6);\n-        int[] actual = seg.toIntArray();\n-        int[] expected = new int[] { 2, 3, 5, 7, 11, 13};\n-        assertEquals(actual.length, expected.length);\n-        for (int i = 0; i < actual.length; i++) {\n-            assertEquals(actual[i], expected[i]);\n-        }\n-        boolean caughtException = false;\n-        try {\n-            seg.close();\n-        } catch (UnsupportedOperationException uoe) {\n-            System.err.println(uoe);\n-            caughtException = true;\n-        }\n-        assertTrue(caughtException);\n-    }\n-}\n","filename":"test\/jdk\/tools\/jextract\/test8253159\/LibTest8253159Test.java","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"},{"patch":"@@ -1,32 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"test8253159.h\"\n-\n-static int arr[] = {\n-    2, 3, 5, 7, 11, 13\n-};\n-\n-EXPORT int* get_array() {\n-    return arr;\n-}\n","filename":"test\/jdk\/tools\/jextract\/test8253159\/libTest8253159.c","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif \/\/ __cplusplus\n-\n-#ifdef _WIN64\n-#define EXPORT __declspec(dllexport)\n-#else\n-#define EXPORT\n-#endif\n-\n-EXPORT int* get_array();\n-\n-#ifdef __cplusplus\n-}\n-#endif \/\/ __cplusplus\n","filename":"test\/jdk\/tools\/jextract\/test8253159\/test8253159.h","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -25,1 +25,0 @@\n-import test.jextract.fp.RuntimeHelper;\n","filename":"test\/jdk\/tools\/jextract\/testFunctionPointer\/LibFuncPtrTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}