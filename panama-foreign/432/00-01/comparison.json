{"files":[{"patch":"@@ -102,0 +102,6 @@\n+        builder.append(\"var mh$ = RuntimeHelper.requireNonNull(\");\n+        builder.append(methodHandleGetCallString(javaName, nativeName, mtype, desc, varargs));\n+        builder.append(\", \\\"unresolved symbol: \");\n+        builder.append(nativeName);\n+        builder.append(\"\\\");\\n\");\n+        builder.indent();\n@@ -108,5 +114,1 @@\n-        builder.append(\"Objects.requireNonNull(\");\n-        builder.append(methodHandleGetCallString(javaName, nativeName, mtype, desc, varargs));\n-        builder.append(\", \\\"no such native function: \");\n-        builder.append(javaName);\n-        builder.append(\"\\\").invokeExact(\" + String.join(\", \", pExprs) + \");\\n\");\n+        builder.append(\"mh$.invokeExact(\" + String.join(\", \", pExprs) + \");\\n\");\n@@ -115,1 +117,1 @@\n-        builder.append(\"} catch (Throwable ex) {\\n\");\n+        builder.append(\"} catch (Throwable ex$) {\\n\");\n@@ -118,1 +120,1 @@\n-        builder.append(\"throw new AssertionError(\\\"should not reach here\\\", ex);\\n\");\n+        builder.append(\"throw new AssertionError(\\\"should not reach here\\\", ex$);\\n\");\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/HeaderFileBuilder.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-            true, \"no such native function: \" + nativeName);\n+            true, \"unresolved symbol: \" + nativeName);\n@@ -138,1 +138,1 @@\n-            true, \"no such native variable: \" + nativeName);\n+            true, \"unresolved symbol: \" + nativeName);\n@@ -154,1 +154,1 @@\n-        builder.append(\".get(Objects.requireNonNull(\");\n+        builder.append(\".get(RuntimeHelper.requireNonNull(\");\n@@ -156,1 +156,1 @@\n-        builder.append(\", \\\"no such native variable: \");\n+        builder.append(\", \\\"unresolved symbol: \");\n@@ -173,1 +173,1 @@\n-        builder.append(\".set(Objects.requireNonNull(\");\n+        builder.append(\".set(RuntimeHelper.requireNonNull(\");\n@@ -175,1 +175,1 @@\n-        builder.append(\", \\\"no such native variable: \");\n+        builder.append(\", \\\"unresolved symbol: \");\n@@ -219,1 +219,1 @@\n-            builder.append(\"Objects.requireNonNull(\");\n+            builder.append(\"RuntimeHelper.requireNonNull(\");\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/JavaSourceBuilder.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,0 +29,7 @@\n+    static <T> T requireNonNull(T obj, String msg) {\n+        if (obj == null) {\n+            throw new UnsatisfiedLinkError(msg);\n+        }\n+        return obj;\n+    }\n+\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-        } catch (AssertionError ae) {\n-            assertTrue(ae.getCause().getMessage().contains(\"no such native function: func\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: func\"));\n@@ -64,2 +64,2 @@\n-        } catch (NullPointerException npe) {\n-            assertTrue(npe.getMessage().contains(\"no such native function: func\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: func\"));\n@@ -71,2 +71,2 @@\n-        } catch (NullPointerException npe) {\n-            assertTrue(npe.getMessage().contains(\"no such native variable: x\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: x\"));\n@@ -78,2 +78,2 @@\n-        } catch (NullPointerException npe) {\n-            assertTrue(npe.getMessage().contains(\"no such native variable: x\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: x\"));\n@@ -85,2 +85,2 @@\n-        } catch (NullPointerException npe) {\n-            assertTrue(npe.getMessage().contains(\"no such native variable: x\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: x\"));\n@@ -92,2 +92,2 @@\n-        } catch (NullPointerException npe) {\n-            assertTrue(npe.getMessage().contains(\"no such native variable: y\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: y\"));\n@@ -99,2 +99,2 @@\n-        } catch (NullPointerException npe) {\n-            assertTrue(npe.getMessage().contains(\"no such native variable: pt\"));\n+        } catch (UnsatisfiedLinkError ule) {\n+            assertTrue(ule.getMessage().contains(\"unresolved symbol: pt\"));\n","filename":"test\/jdk\/tools\/jextract\/test8259473\/LibTest8259473Test.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}