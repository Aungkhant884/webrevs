{"files":[{"patch":"@@ -73,3 +73,3 @@\n-                                        boolean needTransition, MethodType methodType, boolean isImr) {\n-        if (returnMoves.length > 1 != isImr) {\n-            throw new IllegalArgumentException(\"Multiple register return, but isImr was false\");\n+                                        boolean needTransition, MethodType methodType, boolean needsReturnBuffer) {\n+        if (returnMoves.length > 1 != needsReturnBuffer) {\n+            throw new IllegalArgumentException(\"Multiple register return, but needsReturnBuffer was false\");\n@@ -79,1 +79,1 @@\n-        assert (!isImr || methodType.parameterType(1) == long.class) : \"IMR address expected\";\n+        assert (!needsReturnBuffer || methodType.parameterType(1) == long.class) : \"IMR address expected\";\n@@ -88,1 +88,1 @@\n-            makeInvoker(methodType, abi, encArgMoves, encRetMoves, isImr));\n+            makeInvoker(methodType, abi, encArgMoves, encRetMoves, needsReturnBuffer));\n@@ -104,1 +104,1 @@\n-    private static native long makeInvoker(MethodType methodType, ABIDescriptorProxy abi, long[] encArgMoves, long[] encRetMoves, boolean isImr);\n+    private static native long makeInvoker(MethodType methodType, ABIDescriptorProxy abi, long[] encArgMoves, long[] encRetMoves, boolean needsReturnBuffer);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/invoke\/NativeEntryPoint.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}