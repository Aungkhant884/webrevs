{"files":[{"patch":"@@ -134,1 +134,2 @@\n-     * Looks up a symbol with the given name in the native libraries loaded by the caller's classloader.\n+     * Finds the address of a symbol with given name in one of the native libraries associated with the caller's\n+     * classloader (that is, libraries loaded using {@link System#loadLibrary} or {@link System#load}).\n@@ -142,2 +143,3 @@\n-     * @param name the symbol name.\n-     * @return the memory address associated with the library symbol (if any).\n+     * @param name the name of the symbol to be searched.\n+     * @return the address of a symbol with given name in one of the native libraries associated with the caller's\n+     *         classloader (if any).\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -120,1 +120,3 @@\n- * Here, we lookup the {@code strlen} symbol. C runtime library should have been loaded earlier using {@link System#loadLibrary(String)}.\n+ * Here, we lookup the {@code strlen} symbol; this assumes that a library containing the {@code strlen} symbol has been loaded\n+ * earlier, e.g. using {@link System#loadLibrary(String)}.\n+ *\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -419,2 +419,0 @@\n-        \/\/ FIXME: This should go away. This is temporary hack to get testing on Windows going.\n-        \/\/ After fix for 8266627, this whole section will be removed.\n@@ -423,0 +421,2 @@\n+             \/\/ FIXME: This should go away. This is temporary hack to get testing on Windows going.\n+             \/\/ After fix for 8266627, this whole section will be removed.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}