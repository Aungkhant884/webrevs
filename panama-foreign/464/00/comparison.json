{"files":[{"patch":"@@ -477,1 +477,1 @@\n-    private void warn(String msg) {\n+    static void warn(String msg) {\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/OutputFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,0 +139,8 @@\n+        try {\n+            structLayout.byteOffset(elementPaths(nativeName));\n+        } catch (UnsupportedOperationException uoe) {\n+            \/\/ bad layout - do nothing\n+            OutputFactory.warn(\"skipping '\" + className() + \".\" + nativeName + \"' : \" + uoe.toString());\n+            return;\n+        }\n+\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/StructBuilder.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import java.nio.file.Path;\n+import static org.testng.Assert.assertNotNull;\n+\n+\/*\n+ * @test\n+ * @modules jdk.incubator.jextract\n+ * @library \/test\/lib\n+ * @build JextractToolRunner\n+ * @bug 8262851\n+ * @summary jextract crashes with \"Cannot compute size of a layout which is, or depends on a sequence layout with unspecified size\"\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8262851\n+ *\/\n+public class Test8262851 extends JextractToolRunner {\n+    @Test\n+    public void test() {\n+        Path output = getOutputFilePath(\"8262851gen\");\n+        Path outputH = getInputFilePath(\"test8262851.h\");\n+        run(\"-d\", output.toString(), outputH.toString()).checkSuccess();\n+        try(Loader loader = classLoader(output)) {\n+            assertNotNull(loader.loadClass(\"test8262851_h\"));\n+            assertNotNull(loader.loadClass(\"test8262851_h$Odd\"));\n+            assertNotNull(loader.loadClass(\"test8262851_h$Odd$before\"));\n+            assertNotNull(loader.loadClass(\"test8262851_h$Odd$after\"));\n+        } finally {\n+            deleteDir(output);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/jextract\/Test8262851.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -24,5 +24,8 @@\n-struct foo {\n-   int clear_color[2];\n-   int clear_z;\n-   char clear_s;\n-   int pad:24;\n+struct Odd {\n+   struct {\n+    int size;\n+    char data[];\n+   } before;\n+   struct {\n+     int a; int b;\n+   } after;\n","filename":"test\/jdk\/tools\/jextract\/test8262851.h","additions":8,"deletions":5,"binary":false,"changes":13,"previous_filename":"test\/jdk\/tools\/jextract\/test8261578\/test8261578_2.h","status":"copied"}]}