{"files":[{"patch":"@@ -381,1 +381,1 @@\n-            MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+            MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -385,1 +385,1 @@\n-            MemorySegment segment = MemorySession.openImplicit().allocate(1);\n+            MemorySegment segment = MemorySegment.allocateNative(1L);\n","filename":"test\/jdk\/java\/foreign\/CallGeneratorHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -115,1 +115,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -136,1 +136,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -213,1 +213,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -256,1 +256,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -294,1 +294,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -333,1 +333,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n@@ -376,1 +376,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n","filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n","filename":"test\/jdk\/java\/foreign\/TestArrays.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        NATIVE(MemorySession.openImplicit().allocate(8), -1);\n+        NATIVE(MemorySegment.allocateNative(8), -1);\n","filename":"test\/jdk\/java\/foreign\/TestHeapAlignment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-        NATIVE(i -> MemorySession.openImplicit().allocate(i)),\n+        NATIVE(i -> MemorySegment.allocateNative(i)),\n","filename":"test\/jdk\/java\/foreign\/TestMismatch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-                return MemorySession.openImplicit().allocate(bytesSize, bytesAlignment);\n+                return MemorySegment.allocateNative(bytesSize, bytesAlignment);\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-            NATIVE(i -> MemorySession.openImplicit().allocate(i)),\n+            NATIVE(i -> MemorySegment.allocateNative(i)),\n","filename":"test\/jdk\/java\/foreign\/TestSegmentCopy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        MemorySession.openImplicit().allocate(size, align);\n+        MemorySegment.allocateNative(size, align);\n@@ -77,1 +77,1 @@\n-        MemorySession.openImplicit().allocate(Long.MAX_VALUE);\n+        MemorySegment.allocateNative(Long.MAX_VALUE);\n@@ -82,1 +82,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(1024 * 1024 * 8 * 2); \/\/ 2M\n+        MemorySegment segment = MemorySegment.allocateNative(1024L * 1024 * 8 * 2); \/\/ 2M\n@@ -164,1 +164,1 @@\n-        MemorySegment memorySegment = MemorySession.openImplicit().allocate(10);\n+        MemorySegment memorySegment = MemorySegment.allocateNative(10);\n@@ -171,1 +171,1 @@\n-        MemorySegment memorySegment = MemorySession.openImplicit().allocate(10);\n+        MemorySegment memorySegment = MemorySegment.allocateNative(10L);\n@@ -210,6 +210,6 @@\n-                () -> MemorySession.openImplicit().allocate(4),\n-                () -> MemorySession.openImplicit().allocate(4, 8),\n-                () -> MemorySession.openImplicit().allocate(JAVA_INT),\n-                () -> MemorySession.openImplicit().allocate(4),\n-                () -> MemorySession.openImplicit().allocate(4, 8),\n-                () -> MemorySession.openImplicit().allocate(JAVA_INT)\n+                () -> MemorySegment.allocateNative(4L),\n+                () -> MemorySegment.allocateNative(4L, 8),\n+                () -> MemorySegment.allocateNative(JAVA_INT),\n+                () -> MemorySegment.allocateNative(4L),\n+                () -> MemorySegment.allocateNative(4L, 8),\n+                () -> MemorySegment.allocateNative(JAVA_INT)\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(layout);\n+        MemorySegment segment = MemorySegment.allocateNative(layout);\n","filename":"test\/jdk\/java\/foreign\/TestSpliterator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-                MemorySegment copy = MemorySession.openImplicit().allocate(ms.byteSize());\n+                MemorySegment copy = MemorySegment.allocateNative(ms.byteSize());\n","filename":"test\/jdk\/java\/foreign\/TestUpcallBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-                MemorySegment copy = MemorySession.openImplicit().allocate(ms.byteSize());\n+                MemorySegment copy = MemorySegment.allocateNative(ms.byteSize());\n","filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(1, 2);\n+        MemorySegment segment = MemorySegment.allocateNative(1L, 2);\n","filename":"test\/jdk\/java\/foreign\/TestVarHandleCombinators.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(pointLayout);\n+                    MemorySegment struct = MemorySegment.allocateNative(pointLayout);\n@@ -304,1 +304,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(BigPoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(BigPoint_LAYOUT);\n@@ -357,1 +357,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(FloatPoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(FloatPoint_LAYOUT);\n@@ -415,1 +415,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(HugePoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(HugePoint_LAYOUT);\n@@ -687,1 +687,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(BigPoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(BigPoint_LAYOUT);\n@@ -694,1 +694,1 @@\n-                    MemorySegment struct =  MemorySession.openImplicit().allocate(BigPoint_LAYOUT);\n+                    MemorySegment struct =  MemorySegment.allocateNative(BigPoint_LAYOUT);\n@@ -708,1 +708,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(BigPoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(BigPoint_LAYOUT);\n@@ -720,1 +720,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(Point_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(Point_LAYOUT);\n@@ -726,1 +726,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(HugePoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(HugePoint_LAYOUT);\n@@ -733,1 +733,1 @@\n-                    MemorySegment struct = MemorySession.openImplicit().allocate(FloatPoint_LAYOUT);\n+                    MemorySegment struct = MemorySegment.allocateNative(FloatPoint_LAYOUT);\n@@ -778,1 +778,1 @@\n-                    MemorySegment buffer = MemorySession.openImplicit().allocate(BigPoint_LAYOUT);\n+                    MemorySegment buffer = MemorySegment.allocateNative(BigPoint_LAYOUT);\n","filename":"test\/jdk\/java\/foreign\/valist\/VaListTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}