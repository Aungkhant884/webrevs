{"files":[{"patch":"@@ -955,3 +955,4 @@\n-     * The memory segment is automatically freed some unspecified time after it is no longer referenced.\n-     * If a memory segment needs to be deterministically freed, use an appropriate memory session from which\n-     * {@linkplain MemorySession#allocate(MemoryLayout) allocation} can be made instead.\n+     * The returned memory segment is associated with a new {@linkplain MemorySession#openImplicit implicit}\n+     * memory session. As such, the native memory region associated with the returned segment is\n+     * freed <em>automatically<\/em>, some unspecified time after it is no longer referenced.\n+     * Native segments featuring deterministic deallocation can be obtained using the {@link MemorySession#allocate} method.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-     * The block of off-heap memory associated with the returned native memory segment is initialized to zero.\n+     * The off-heap memory associated with the returned native memory segment is initialized to zero.\n@@ -232,0 +232,1 @@\n+     * @see MemorySegment#allocateNative(long, long)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySession.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -465,2 +465,1 @@\n-            static final SegmentAllocator IMPLICIT_ALLOCATOR = (size, align) ->\n-                    MemorySession.openImplicit().allocate(size, align);\n+            static final SegmentAllocator IMPLICIT_ALLOCATOR = MemorySegment::allocateNative;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * MemorySegment segment = MemorySegment.allocateNative(10 * 4, MemorySession.openImplicit());\n+ * MemorySegment segment = MemorySegment.allocateNative(10 * 4);\n@@ -77,1 +77,1 @@\n- *     MemorySegment segment = MemorySegment.allocateNative(10 * 4, session);\n+ *     MemorySegment segment = session.allocate(10 * 4);\n@@ -122,1 +122,1 @@\n- *     MemorySegment cString = MemorySegment.allocateNative(5 + 1, session);\n+ *     MemorySegment cString = session.allocate(5 + 1);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                    MemorySession.openImplicit().allocate(s)\n+                    MemorySegment.allocateNative(s)\n@@ -54,1 +54,1 @@\n-                    MemorySession.openImplicit().allocate(s)\n+                    MemorySegment.allocateNative(s)\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorLoadStoreTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -489,2 +489,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -518,2 +518,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -582,2 +582,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n@@ -613,2 +613,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Byte.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Byte.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Byte.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Byte.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -489,2 +489,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -518,2 +518,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -582,2 +582,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n@@ -613,2 +613,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Double.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Double.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Double.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Double.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -489,2 +489,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -518,2 +518,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -582,2 +582,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n@@ -613,2 +613,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Float.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Float.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Float.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Float.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -489,2 +489,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -518,2 +518,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -582,2 +582,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n@@ -613,2 +613,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Integer.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Integer.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Integer.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Integer.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -489,2 +489,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -518,2 +518,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -582,2 +582,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n@@ -613,2 +613,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Long.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Long.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Long.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Long.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -482,2 +482,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -511,2 +511,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -575,2 +575,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -606,2 +606,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -489,2 +489,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -518,2 +518,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -582,2 +582,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n@@ -613,2 +613,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, Short.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), Short.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, Short.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), Short.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorLoadStoreTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -502,2 +502,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, $Boxtype$.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), $Boxtype$.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, $Boxtype$.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), $Boxtype$.SIZE);\n@@ -531,2 +531,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, $Boxtype$.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), $Boxtype$.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, $Boxtype$.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), $Boxtype$.SIZE);\n@@ -595,2 +595,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, $Boxtype$.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), $Boxtype$.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, $Boxtype$.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), $Boxtype$.SIZE);\n@@ -626,2 +626,2 @@\n-        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySession.openImplicit().allocate(i, $Boxtype$.SIZE));\n-        MemorySegment r = MemorySession.openImplicit().allocate(a.byteSize(), $Boxtype$.SIZE);\n+        MemorySegment a = toSegment(fa.apply(SPECIES.length()), i -> MemorySegment.allocateNative(i, $Boxtype$.SIZE));\n+        MemorySegment r = MemorySegment.allocateNative(a.byteSize(), $Boxtype$.SIZE);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/X-LoadStoreTest.java.template","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    static final MemorySegment point = MemorySession.openImplicit().allocate(POINT_LAYOUT);\n+    static final MemorySegment point = MemorySegment.allocateNative(POINT_LAYOUT);\n@@ -88,1 +88,1 @@\n-    static final SegmentAllocator recycling_allocator = SegmentAllocator.prefixAllocator(MemorySession.openImplicit().allocate(POINT_LAYOUT));\n+    static final SegmentAllocator recycling_allocator = SegmentAllocator.prefixAllocator(MemorySegment.allocateNative(POINT_LAYOUT));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    static final MemorySegment segment = MemorySession.openImplicit().allocate(ALLOC_SIZE);\n+    static final MemorySegment segment = MemorySegment.allocateNative(ALLOC_SIZE);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverConstant.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-        MemorySegment segment = MemorySession.openImplicit().allocate(ALLOC_SIZE, 4);\n+        MemorySegment segment = MemorySegment.allocateNative(ALLOC_SIZE, 4);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNew.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-        return MemorySession.openImplicit().allocate(ALLOC_SIZE, 4);\n+        return MemorySegment.allocateNative(ALLOC_SIZE, 4);\n@@ -127,1 +127,1 @@\n-        return MemorySession.openImplicit().allocate(ALLOC_SIZE, 4);\n+        return MemorySegment.allocateNative(ALLOC_SIZE, 4);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySessionClose.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        srcSegmentImplicit = MemorySession.openImplicit().allocate(size);\n+        srcSegmentImplicit = MemorySegment.allocateNative(size);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/TestLoadBytes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,2 +72,2 @@\n-    nativeIn = MemorySession.openImplicit().allocate(size);\n-    nativeOut = MemorySession.openImplicit().allocate(size);\n+    nativeIn = MemorySegment.allocateNative(size);\n+    nativeOut = MemorySegment.allocateNative(size);\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    srcSegment = MemorySession.openImplicit().allocate(size, SPECIES.vectorByteSize());\n-    dstSegment = MemorySession.openImplicit().allocate(size, SPECIES.vectorByteSize());\n+    srcSegment = MemorySegment.allocateNative(size, SPECIES.vectorByteSize());\n+    dstSegment = MemorySegment.allocateNative(size, SPECIES.vectorByteSize());\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,2 +92,2 @@\n-    srcSegment = MemorySession.openImplicit().allocate(size, SPECIES.vectorByteSize());\n-    dstSegment = MemorySession.openImplicit().allocate(size, SPECIES.vectorByteSize());\n+    srcSegment = MemorySegment.allocateNative(size, SPECIES.vectorByteSize());\n+    dstSegment = MemorySegment.allocateNative(size, SPECIES.vectorByteSize());\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}