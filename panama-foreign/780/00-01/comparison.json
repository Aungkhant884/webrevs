{"files":[{"patch":"@@ -267,1 +267,0 @@\n-            int regType = forHFA ? StorageType.VECTOR : StorageType.INTEGER;\n@@ -269,2 +268,10 @@\n-            List<MemoryLayout> scalarLayouts = forHFA ? TypeClass.scalarLayouts(layout) : null;\n-            int requiredStorages = forHFA ? scalarLayouts.size() : numChunks;\n+\n+            int regType = StorageType.INTEGER;\n+            List<MemoryLayout> scalarLayouts = null;\n+            int requiredStorages = numChunks;\n+            if (forHFA) {\n+                regType = StorageType.VECTOR;\n+                scalarLayouts = TypeClass.scalarLayouts(layout);\n+                requiredStorages = scalarLayouts.size();\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        scalarLayoutsR(out, gl);\n+        scalarLayoutsInternal(out, gl);\n@@ -70,1 +70,1 @@\n-    private static void scalarLayoutsR(List<MemoryLayout> out, GroupLayout gl) {\n+    private static void scalarLayoutsInternal(List<MemoryLayout> out, GroupLayout gl) {\n@@ -73,1 +73,1 @@\n-                scalarLayoutsR(out, memberGl);\n+                scalarLayoutsInternal(out, memberGl);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/TypeClass.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}