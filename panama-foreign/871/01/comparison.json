{"files":[{"patch":"@@ -84,1 +84,1 @@\n- *     linker.defaultLookup().find(\"strlen\").orElseThrow(),\n+ *     linker.defaultLookup().get(\"strlen\"),\n@@ -268,1 +268,1 @@\n- *     linker.defaultLookup().find(\"qsort\").orElseThrow(),\n+ *     linker.defaultLookup().get(\"qsort\"),\n@@ -349,1 +349,1 @@\n- *     linker.defaultLookup().find(\"malloc\").orElseThrow(),\n+ *     linker.defaultLookup().get(\"malloc\"),\n@@ -354,1 +354,1 @@\n- *     linker.defaultLookup().find(\"free\").orElseThrow(),\n+ *     linker.defaultLookup().get(\"free\"),\n@@ -464,1 +464,1 @@\n- *     linker.defaultLookup().find(\"printf\").orElseThrow(),\n+ *     linker.defaultLookup().get(\"printf\"),\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.NoSuchElementException;\n@@ -72,1 +73,1 @@\n- *     MemorySegment glGetString = libGL.find(\"glGetString\").orElseThrow();\n+ *     MemorySegment glGetString = libGL.get(\"glGetString\");\n@@ -85,1 +86,1 @@\n- * MemorySegment glGetString = libGL.find(\"glGetString\").orElseThrow();\n+ * MemorySegment glGetString = libGL.get(\"glGetString\");\n@@ -118,1 +119,1 @@\n- * MemorySegment malloc = stdlib.find(\"malloc\").orElseThrow();\n+ * MemorySegment malloc = stdlib.get(\"malloc\");\n@@ -133,0 +134,17 @@\n+    \/**\n+     * Returns the address of the symbol with the given name.\n+     * @implSpec the default implementation for this method calls {@code this.find(name).get()}.\n+     * @param name the symbol name.\n+     * @return a zero-length memory segment whose address indicates the address of the symbol.\n+     * @throws java.util.NoSuchElementException if no symbol with the given name exists.\n+     *\/\n+    default MemorySegment get(String name) {\n+        var address = this.find(name);\n+        \/\/ Note: the code below could use orElseThrow, but that would require a capturing lambda\n+        if (address.isPresent()) {\n+            return address.get();\n+        } else {\n+            throw new NoSuchElementException(\"Unable to find a symbol with name '\" + name + \"'\");\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n- *     stdlib.find(\"strlen\").orElseThrow(),\n+ *     stdlib.get(\"strlen\"),\n@@ -103,1 +103,1 @@\n- * to {@linkplain java.lang.foreign.SymbolLookup#find(java.lang.String) look up} the {@code strlen} function in the\n+ * to {@linkplain java.lang.foreign.SymbolLookup#get(java.lang.String) look up} the {@code strlen} function in the\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-                    linker.defaultLookup().find(\"strlen\").orElseThrow(),\n+                    linker.defaultLookup().get(\"strlen\"),\n@@ -179,1 +179,1 @@\n-                    linker.defaultLookup().find(\"qsort\").orElseThrow(),\n+                    linker.defaultLookup().get(\"qsort\"),\n@@ -210,1 +210,1 @@\n-                    linker.defaultLookup().find(\"malloc\").orElseThrow(),\n+                    linker.defaultLookup().get(\"malloc\"),\n@@ -215,1 +215,1 @@\n-                    linker.defaultLookup().find(\"free\").orElseThrow(),\n+                    linker.defaultLookup().get(\"free\"),\n@@ -284,1 +284,1 @@\n-                    linker.defaultLookup().find(\"printf\").orElseThrow(),\n+                    linker.defaultLookup().get(\"printf\"),\n@@ -570,1 +570,1 @@\n-                    stdlib.find(\"strlen\").orElseThrow(),\n+                    stdlib.get(\"strlen\"),\n@@ -628,1 +628,1 @@\n-                MemorySegment glGetString = libGL.find(\"glGetString\").orElseThrow();\n+                MemorySegment glGetString = libGL.get(\"glGetString\");\n@@ -635,1 +635,1 @@\n-            MemorySegment glGetString = libGL.find(\"glGetString\").orElseThrow();\n+            MemorySegment glGetString = libGL.get(\"glGetString\");\n@@ -649,1 +649,1 @@\n-            MemorySegment malloc = stdlib.find(\"malloc\").orElseThrow();\n+            MemorySegment malloc = stdlib.get(\"malloc\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/snippet-files\/Snippets.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            MemorySegment funcs = fallbackLibLookup.find(\"funcs\").orElseThrow()\n+            MemorySegment funcs = fallbackLibLookup.get(\"funcs\")\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-            LINKER.defaultLookup().find(\"free\").get(), FunctionDescriptor.ofVoid(C_POINTER));\n+            LINKER.defaultLookup().get(\"free\"), FunctionDescriptor.ofVoid(C_POINTER));\n@@ -80,1 +80,1 @@\n-            LINKER.defaultLookup().find(\"malloc\").get(), FunctionDescriptor.of(C_POINTER, ValueLayout.JAVA_LONG));\n+            LINKER.defaultLookup().get(\"malloc\"), FunctionDescriptor.of(C_POINTER, ValueLayout.JAVA_LONG));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CLayouts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            func_addr = loaderLibs.find(\"func\").orElseThrow();\n+            func_addr = loaderLibs.get(\"func\");\n@@ -121,1 +121,1 @@\n-            identity_addr = loaderLibs.find(\"identity\").orElseThrow();\n+            identity_addr = loaderLibs.get(\"identity\");\n@@ -128,1 +128,1 @@\n-        identity_struct_addr = loaderLibs.find(\"identity_struct\").orElseThrow();\n+        identity_struct_addr = loaderLibs.get(\"identity_struct\");\n@@ -133,1 +133,1 @@\n-        identity_struct_3_addr = loaderLibs.find(\"identity_struct_3\").orElseThrow();\n+        identity_struct_3_addr = loaderLibs.get(\"identity_struct_3\");\n@@ -138,1 +138,1 @@\n-        identity_memory_address_addr = loaderLibs.find(\"identity_memory_address\").orElseThrow();\n+        identity_memory_address_addr = loaderLibs.get(\"identity_memory_address\");\n@@ -143,1 +143,1 @@\n-        identity_memory_address_3_addr = loaderLibs.find(\"identity_memory_address_3\").orElseThrow();\n+        identity_memory_address_3_addr = loaderLibs.get(\"identity_memory_address_3\");\n@@ -148,1 +148,1 @@\n-        args1_addr = loaderLibs.find(\"args1\").orElseThrow();\n+        args1_addr = loaderLibs.get(\"args1\");\n@@ -153,1 +153,1 @@\n-        args2_addr = loaderLibs.find(\"args2\").orElseThrow();\n+        args2_addr = loaderLibs.get(\"args2\");\n@@ -158,1 +158,1 @@\n-        args3_addr = loaderLibs.find(\"args3\").orElseThrow();\n+        args3_addr = loaderLibs.get(\"args3\");\n@@ -163,1 +163,1 @@\n-        args4_addr = loaderLibs.find(\"args4\").orElseThrow();\n+        args4_addr = loaderLibs.get(\"args4\");\n@@ -168,1 +168,1 @@\n-        args5_addr = loaderLibs.find(\"args5\").orElseThrow();\n+        args5_addr = loaderLibs.get(\"args5\");\n@@ -173,1 +173,1 @@\n-        args10_addr = loaderLibs.find(\"args10\").orElseThrow();\n+        args10_addr = loaderLibs.get(\"args10\");\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        F_LONG_LONG = abi.downcallHandle(loaderLibs.find(\"id_long_long\").get(),\n+        F_LONG_LONG = abi.downcallHandle(loaderLibs.get(\"id_long_long\"),\n@@ -65,1 +65,1 @@\n-        F_PTR_LONG = abi.downcallHandle(loaderLibs.find(\"id_ptr_long\").get(),\n+        F_PTR_LONG = abi.downcallHandle(loaderLibs.get(\"id_ptr_long\"),\n@@ -67,1 +67,1 @@\n-        F_LONG_PTR = abi.downcallHandle(loaderLibs.find(\"id_long_ptr\").get(),\n+        F_LONG_PTR = abi.downcallHandle(loaderLibs.get(\"id_long_ptr\"),\n@@ -69,1 +69,1 @@\n-        F_PTR_PTR = abi.downcallHandle(loaderLibs.find(\"id_ptr_ptr\").get(),\n+        F_PTR_PTR = abi.downcallHandle(loaderLibs.get(\"id_ptr_ptr\"),\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/PointerInvoke.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    static MemorySegment qsort_addr = abi.defaultLookup().find(\"qsort\").get();\n+    static MemorySegment qsort_addr = abi.defaultLookup().get(\"qsort\");\n@@ -77,1 +77,1 @@\n-            native_compar = SymbolLookup.loaderLookup().find(\"compar\").orElseThrow();\n+            native_compar = SymbolLookup.loaderLookup().get(\"compar\");\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/QSort.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        STRLEN = abi.downcallHandle(abi.defaultLookup().find(\"strlen\").get(),\n+        STRLEN = abi.downcallHandle(abi.defaultLookup().get(\"strlen\"),\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/StrLenTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                SymbolLookup.loaderLookup().find(name).orElseThrow(),\n+                SymbolLookup.loaderLookup().get(name),\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/Upcalls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-                loaderLibs.find(\"distance\").get(),\n+                loaderLibs.get(\"distance\"),\n@@ -55,1 +55,1 @@\n-                loaderLibs.find(\"distance_ptrs\").get(),\n+                loaderLibs.get(\"distance_ptrs\"),\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/points\/support\/PanamaPoint.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}