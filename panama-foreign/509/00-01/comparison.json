{"files":[{"patch":"@@ -28,0 +28,7 @@\n+import static jdk.incubator.foreign.CLinker.C_INT;\n+import static jdk.incubator.foreign.CLinker.C_LONG_LONG;\n+import static jdk.incubator.foreign.CLinker.C_POINTER;\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodType;\n+import java.util.concurrent.TimeUnit;\n@@ -34,0 +41,1 @@\n+import jdk.incubator.foreign.MemorySegmentPool;\n@@ -39,3 +47,0 @@\n-import org.openjdk.jmh.annotations.Setup;\n-import org.openjdk.jmh.annotations.Param;\n-import org.openjdk.jmh.annotations.TearDown;\n@@ -45,0 +50,2 @@\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Setup;\n@@ -46,0 +53,1 @@\n+import org.openjdk.jmh.annotations.TearDown;\n@@ -48,6 +56,0 @@\n-import java.lang.invoke.MethodHandle;\n-import java.lang.invoke.MethodType;\n-import java.util.concurrent.TimeUnit;\n-\n-import static jdk.incubator.foreign.CLinker.*;\n-\n@@ -59,1 +61,2 @@\n-@Fork(value = 3, jvmArgsAppend = { \"--add-modules=jdk.incubator.foreign\", \"-Dforeign.restricted=permit\" })\n+@Fork(value = 3, jvmArgsAppend = { \"--add-modules=jdk.incubator.foreign\", \"-Dforeign.restricted=permit\",\n+\"--enable-native-access\", \"ALL-UNNAMED\"})\n@@ -67,0 +70,2 @@\n+    MemorySegmentPool memorySegmentPool = new MemorySegmentPool(ResourceScope.globalScope());\n+\n@@ -148,0 +153,23 @@\n+    @Benchmark\n+    public int panama_strlen_memsegmentpool_allocator() throws Throwable {\n+        try(ResourceScope scope = ResourceScope.newConfinedScope()) {\n+            final var allocator = memorySegmentPool.allocatorForScope(scope);\n+            return (int)STRLEN.invokeExact(CLinker.toCString(str, segmentAllocator).address());\n+        }\n+    }\n+\n+    @Benchmark\n+    public int panama_strlen_memsegmentpool_direct() throws Throwable {\n+        final var memoryPool = this.memorySegmentPool;\n+        final byte[] bytes = str.getBytes();\n+        final int len = bytes.length;\n+        final var stringSegmentEntry = memoryPool.getSegmentEntryBySize(len + 1, 1);\n+        final var stringSegment = stringSegmentEntry.value;\n+        stringSegment.copyFrom(MemorySegment.ofArray(bytes));\n+        try {\n+            return (int) STRLEN.invokeExact(CLinker.toCString(str, segmentAllocator).address());\n+        } finally {\n+            memoryPool.putSegmentEntry(stringSegmentEntry);\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/StrLenTest.java","additions":38,"deletions":10,"binary":false,"changes":48,"status":"modified"}]}