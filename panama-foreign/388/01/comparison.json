{"files":[{"patch":"@@ -371,2 +371,2 @@\n-          -i hs_err*\n-          -i replay*\n+          -i *\/hs_err*.log\n+          -i *\/replay*.log\n@@ -658,2 +658,2 @@\n-          -i hs_err*\n-          -i replay*\n+          -i *\/hs_err*.log\n+          -i *\/replay*.log\n@@ -974,2 +974,2 @@\n-          -i hs_err*\n-          -i replay*\n+          -i *\/hs_err*.log\n+          -i *\/replay*.log\n@@ -1256,2 +1256,2 @@\n-          -i hs_err*\n-          -i replay*\n+          -i *\/hs_err*.log\n+          -i *\/replay*.log\n","filename":".github\/workflows\/submit.yml","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -17,0 +17,1 @@\n+\/src\/utils\/LogCompilation\/target\/\n","filename":".gitignore","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -187,4 +187,0 @@\n-ifdef BUILD_HEADLESS_ONLY\n-  java.desktop_EXCLUDES += sun\/applet\n-endif\n-\n@@ -392,1 +388,1 @@\n-jdk.incubator.jpackage_COPY += .gif .png .txt .spec .script .prerm .preinst \\\n+jdk.jpackage_COPY += .gif .png .txt .spec .script .prerm .preinst \\\n@@ -396,1 +392,1 @@\n-jdk.incubator.jpackage_CLEAN += .properties\n+jdk.jpackage_CLEAN += .properties\n","filename":"make\/CompileJavaModules.gmk","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-    DEPS := jmods buildtools-modules, \\\n+    DEPS := jmods buildtools-modules runnable-buildjdk, \\\n@@ -471,1 +471,1 @@\n-    DEPS := buildtools-modules, \\\n+    DEPS := buildtools-modules runnable-buildjdk, \\\n@@ -482,1 +482,1 @@\n-    DEPS := buildtools-modules, \\\n+    DEPS := buildtools-modules runnable-buildjdk, \\\n@@ -493,1 +493,1 @@\n-    DEPS := buildtools-modules, \\\n+    DEPS := buildtools-modules runnable-buildjdk, \\\n@@ -1086,0 +1086,12 @@\n+# The runnable-buildjdk target guarantees that the buildjdk is done\n+# building and ready to be used. The exact set of dependencies it needs\n+# depends on what kind of buildjdk is used for the current configuration.\n+runnable-buildjdk:\n+ifeq ($(CREATE_BUILDJDK), true)\n+  ifneq ($(CREATING_BUILDJDK), true)\n+    runnable-buildjdk: create-buildjdk\n+  endif\n+else ifeq ($(EXTERNAL_BUILDJDK), false)\n+  runnable-buildjdk: exploded-image\n+endif\n+\n@@ -1189,1 +1201,1 @@\n-    exploded-image-base exploded-image \\\n+    exploded-image-base exploded-image runnable-buildjdk \\\n","filename":"make\/Main.gmk","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -666,10 +666,4 @@\n-  if test \"x$FLAGS_CPU_BITS\" = x64; then\n-    # -D_LP64=1 is only set on linux and mac. Setting on windows causes diff in\n-    # unpack200.exe.\n-    if test \"x$FLAGS_OS\" = xlinux || test \"x$FLAGS_OS\" = xmacosx; then\n-      $1_DEFINES_CPU_JDK=\"${$1_DEFINES_CPU_JDK} -D_LP64=1\"\n-    fi\n-    if test \"x$FLAGS_OS\" != xaix; then\n-      # xlc on AIX defines _LP64=1 by default and issues a warning if we redefine it.\n-      $1_DEFINES_CPU_JVM=\"${$1_DEFINES_CPU_JVM} -D_LP64=1\"\n-    fi\n+  if test \"x$FLAGS_CPU_BITS\" = x64 && test \"x$FLAGS_OS\" != xaix; then\n+    # xlc on AIX defines _LP64=1 by default and issues a warning if we redefine it.\n+    $1_DEFINES_CPU_JDK=\"${$1_DEFINES_CPU_JDK} -D_LP64=1\"\n+    $1_DEFINES_CPU_JVM=\"${$1_DEFINES_CPU_JVM} -D_LP64=1\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -309,1 +309,1 @@\n-    elif test \"x$OPENJDK_TARGET_OS-$OPENJDK_TARGET_CPU\" = \"xlinux-aarch64\"; then\n+    elif test \"x$OPENJDK_TARGET_CPU\" = \"xaarch64\"; then\n@@ -343,1 +343,1 @@\n-    elif test \"x$OPENJDK_TARGET_OS-$OPENJDK_TARGET_CPU\" = \"xlinux-aarch64\"; then\n+    elif test \"x$OPENJDK_TARGET_CPU\" = \"xaarch64\"; then\n","filename":"make\/autoconf\/jvm-features.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,3 @@\n+  elif test \"x$ENABLE_HEADLESS_ONLY\" = xtrue; then\n+    # No X11 support needed when building headless only\n+    NEEDS_LIB_X11=false\n@@ -47,2 +50,1 @@\n-    # All other instances need X11, even if building headless only, libawt still\n-    # needs X11 headers.\n+    # All other instances need X11\n","filename":"make\/autoconf\/libraries.m4","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -314,1 +314,2 @@\n-    # source files.\n+    # source files. Need to call DoubleDollar as we have java classes with '$' in\n+    # their names.\n@@ -316,1 +317,2 @@\n-        $$(eval relative_src := $$(call remove-prefixes, $$($1_SRC), $$(s))) \\\n+        $$(eval relative_src := $$(call remove-prefixes, $$($1_SRC), \\\n+            $$(call DoubleDollar, $$(s)))) \\\n","filename":"make\/common\/JavaCompilation.gmk","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -80,0 +80,2 @@\n+# Returns the module specific java header dir if it exists.\n+# Param 1 - module name\n@@ -81,1 +83,1 @@\n-  $(wildcard $(SUPPORT_OUTPUTDIR)\/headers\/$(strip $1))\n+  $(if $(strip $1),$(wildcard $(SUPPORT_OUTPUTDIR)\/headers\/$(strip $1)))\n@@ -126,1 +128,5 @@\n-    $1_OUTPUT_DIR := $$(call FindLibDirForModule, $$(MODULE))\n+    ifneq ($$(MODULE), )\n+      $1_OUTPUT_DIR := $$(call FindLibDirForModule, $$(MODULE))\n+    else\n+      $$(error Must specify OUTPUT_DIR in a MODULE free context)\n+    endif\n@@ -130,1 +136,5 @@\n-    $1_OBJECT_DIR := $$(SUPPORT_OUTPUTDIR)\/native\/$$(MODULE)\/lib$$($1_NAME)\n+    ifneq ($$(MODULE), )\n+      $1_OBJECT_DIR := $$(SUPPORT_OUTPUTDIR)\/native\/$$(MODULE)\/lib$$($1_NAME)\n+    else\n+      $$(error Must specify OBJECT_DIR in a MODULE free context)\n+    endif\n@@ -134,1 +144,5 @@\n-    $1_SRC := $$(call FindSrcDirsForLib, $$(MODULE), $$($1_NAME))\n+    ifneq ($$(MODULE), )\n+      $1_SRC := $$(call FindSrcDirsForLib, $$(MODULE), $$($1_NAME))\n+    else\n+      $$(error Must specify SRC in a MODULE free context)\n+    endif\n@@ -168,1 +182,2 @@\n-  # Always add the java header dir\n+\n+  # Add the module specific java header dir\n@@ -206,1 +221,5 @@\n-    $1_OUTPUT_DIR := $$(call FindExecutableDirForModule, $$(MODULE))\n+    ifneq ($$(MODULE), )\n+      $1_OUTPUT_DIR := $$(call FindExecutableDirForModule, $$(MODULE))\n+    else\n+      $$(error Must specify OUTPUT_DIR in a MODULE free context)\n+    endif\n@@ -210,1 +229,5 @@\n-    $1_OBJECT_DIR := $$(SUPPORT_OUTPUTDIR)\/native\/$$(MODULE)\/$$($1_NAME)\n+    ifneq ($$(MODULE), )\n+      $1_OBJECT_DIR := $$(SUPPORT_OUTPUTDIR)\/native\/$$(MODULE)\/$$($1_NAME)\n+    else\n+      $$(error Must specify OBJECT_DIR in a MODULE free context)\n+    endif\n","filename":"make\/common\/JdkNativeCompilation.gmk","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    jdk.incubator.jpackage \\\n+    jdk.jpackage \\\n@@ -148,1 +148,1 @@\n-    jdk.incubator.jpackage \\\n+    jdk.jpackage \\\n@@ -231,1 +231,1 @@\n-  MODULES_FILTER += jdk.incubator.jpackage\n+  MODULES_FILTER += jdk.jpackage\n","filename":"make\/common\/Modules.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -254,0 +254,2 @@\n+            \"--disable-jvm-feature-aot\",\n+            \"--disable-jvm-feature-graal\",\n@@ -407,1 +409,1 @@\n-            dependencies: [\"devkit\", \"gtest\", \"graphviz\", \"pandoc\", \"graalunit_lib\"],\n+            dependencies: [\"devkit\", \"gtest\", \"graphviz\", \"pandoc\"],\n@@ -409,1 +411,1 @@\n-                \"--with-zlib=system\",\n+                \"--with-zlib=system\", \"--disable-dtrace\",\n@@ -426,1 +428,1 @@\n-            dependencies: [\"devkit\", \"gtest\", \"pandoc\", \"graalunit_lib\"],\n+            dependencies: [\"devkit\", \"gtest\", \"pandoc\"],\n@@ -437,1 +439,1 @@\n-            dependencies: [\"devkit\", \"gtest\", \"pandoc\", \"graalunit_lib\"],\n+            dependencies: [\"devkit\", \"gtest\", \"pandoc\"],\n@@ -457,2 +459,0 @@\n-\t\t\"--disable-jvm-feature-graal\",\n-\t\t\"--disable-jvm-feature-aot\",\n@@ -690,1 +690,1 @@\n-            configure_args: [\n+            configure_args: concat(\n@@ -692,0 +692,1 @@\n+                versionArgs(input, common),\n@@ -694,1 +695,1 @@\n-            ],\n+            ),\n@@ -1154,9 +1155,0 @@\n-        graalunit_lib: {\n-            organization: common.organization,\n-            ext: \"zip\",\n-            revision: \"619_Apr_12_2018\",\n-            module: \"graalunit-lib\",\n-            configure_args: \"--with-graalunit-lib=\" + input.get(\"graalunit_lib\", \"install_path\"),\n-            environment_name: \"GRAALUNIT_LIB\"\n-        },\n-\n","filename":"make\/conf\/jib-profiles.js","additions":9,"deletions":17,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-tzdata2020c\n+tzdata2020d\n","filename":"make\/data\/tzdata\/VERSION","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3247,1 +3247,0 @@\n-# http:\/\/www.palestinecabinet.gov.ps\/website\/ar\/ViewDetails?ID=43948\n@@ -3249,2 +3248,29 @@\n-# From Paul Eggert (2019-04-10):\n-# For now, guess spring-ahead transitions are March's last Friday at 00:00.\n+# From Steffen Thorsen (2020-10-20):\n+# Some sources such as these say, and display on clocks, that DST ended at\n+# midnight last year...\n+# https:\/\/www.amad.ps\/ar\/post\/320006\n+#\n+# From Tim Parenti (2020-10-20):\n+# The report of the Palestinian Cabinet meeting of 2019-10-14 confirms\n+# a decision on (translated): \"The start of the winter time in Palestine, by\n+# delaying the clock by sixty minutes, starting from midnight on Friday \/\n+# Saturday corresponding to 26\/10\/2019.\"\n+# http:\/\/www.palestinecabinet.gov.ps\/portal\/meeting\/details\/43948\n+\n+# From Sharef Mustafa (2020-10-20):\n+# As per the palestinian cabinet announcement yesterday , the day light saving\n+# shall [end] on Oct 24th 2020 at 01:00AM by delaying the clock by 60 minutes.\n+# http:\/\/www.palestinecabinet.gov.ps\/portal\/Meeting\/Details\/51584\n+\n+# From Tim Parenti (2020-10-20):\n+# Predict future fall transitions at 01:00 on the Saturday preceding October's\n+# last Sunday (i.e., Sat>=24).  This is consistent with our predictions since\n+# 2016, although the time of the change differed slightly in 2019.\n+\n+# From Pierre Cashon (2020-10-20):\n+# The summer time this year started on March 28 at 00:00.\n+# https:\/\/wafa.ps\/ar_page.aspx?id=GveQNZa872839351758aGveQNZ\n+# http:\/\/www.palestinecabinet.gov.ps\/portal\/meeting\/details\/50284\n+# The winter time in 2015 started on October 23 at 01:00.\n+# https:\/\/wafa.ps\/ar_page.aspx?id=CgpCdYa670694628582aCgpCdY\n+# http:\/\/www.palestinecabinet.gov.ps\/portal\/meeting\/details\/27583\n@@ -3252,2 +3278,3 @@\n-# From Tim Parenti (2016-10-19):\n-# Predict fall transitions on October's last Saturday at 01:00 from now on.\n+# From Paul Eggert (2019-04-10):\n+# For now, guess spring-ahead transitions are at 00:00 on the Saturday\n+# preceding March's last Sunday (i.e., Sat>=24).\n@@ -3269,1 +3296,1 @@\n-Rule Palestine\t2007\tonly\t-\tSep\tThu>=8\t2:00\t0\t-\n+Rule Palestine\t2007\tonly\t-\tSep\t13\t2:00\t0\t-\n@@ -3272,1 +3299,1 @@\n-Rule Palestine\t2009\tonly\t-\tSep\tFri>=1\t1:00\t0\t-\n+Rule Palestine\t2009\tonly\t-\tSep\t 4\t1:00\t0\t-\n@@ -3281,3 +3308,4 @@\n-Rule Palestine\t2013\tonly\t-\tSep\tFri>=21\t0:00\t0\t-\n-Rule Palestine\t2014\t2015\t-\tOct\tFri>=21\t0:00\t0\t-\n-Rule Palestine\t2015\tonly\t-\tMar\tlastFri\t24:00\t1:00\tS\n+Rule Palestine\t2013\tonly\t-\tSep\t27\t0:00\t0\t-\n+Rule Palestine\t2014\tonly\t-\tOct\t24\t0:00\t0\t-\n+Rule Palestine\t2015\tonly\t-\tMar\t28\t0:00\t1:00\tS\n+Rule Palestine\t2015\tonly\t-\tOct\t23\t1:00\t0\t-\n@@ -3285,2 +3313,5 @@\n-Rule Palestine\t2016\tmax\t-\tOct\tlastSat\t1:00\t0\t-\n-Rule Palestine\t2019\tmax\t-\tMar\tlastFri\t0:00\t1:00\tS\n+Rule Palestine\t2016\t2018\t-\tOct\tSat>=24\t1:00\t0\t-\n+Rule Palestine\t2019\tonly\t-\tMar\t29\t0:00\t1:00\tS\n+Rule Palestine\t2019\tonly\t-\tOct\tSat>=24\t0:00\t0\t-\n+Rule Palestine\t2020\tmax\t-\tMar\tSat>=24\t0:00\t1:00\tS\n+Rule Palestine\t2020\tmax\t-\tOct\tSat>=24\t1:00\t0\t-\n","filename":"make\/data\/tzdata\/asia","additions":43,"deletions":12,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -1055,3 +1055,2 @@\n-# http:\/\/www.hum.aau.dk\/~poe\/tid\/tine\/DanskTid.htm says that the law\n-# [introducing standard time] was in effect from 1894-01-01....\n-# The page http:\/\/www.retsinfo.dk\/_GETDOCI_\/ACCN\/A18930008330-REGL\n+# the law [introducing standard time] was in effect from 1894-01-01....\n+# The page https:\/\/www.retsinformation.dk\/eli\/lta\/1893\/83\n@@ -1061,1 +1060,1 @@\n-# http:\/\/www.retsinfo.dk\/_GETDOCI_\/ACCN\/A19722110030-REGL\n+# https:\/\/www.retsinformation.dk\/eli\/lta\/1972\/21100\n@@ -1065,1 +1064,1 @@\n-# http:\/\/www.retsinfo.dk\/_GETDOCI_\/ACCN\/A19740022330-REGL\n+# https:\/\/www.retsinformation.dk\/eli\/lta\/1974\/223\n@@ -1077,1 +1076,1 @@\n-# http:\/\/www.retsinfo.dk\/_GETDOCI_\/ACCN\/C19801120554-REGL\n+# https:\/\/web.archive.org\/web\/20140104053304\/https:\/\/www.retsinformation.dk\/Forms\/R0710.aspx?id=60267\n","filename":"make\/data\/tzdata\/europe","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    shift-negative-value\n+    shift-negative-value misleading-indentation\n@@ -98,1 +98,1 @@\n-DISABLED_WARNINGS_microsoft := 4100 4127 4201 4244 4291 4351 \\\n+DISABLED_WARNINGS_microsoft := 4100 4127 4146 4201 4244 4291 4351 \\\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -174,0 +174,1 @@\n+JVM_PhantomReferenceRefersTo\n@@ -179,0 +180,1 @@\n+JVM_ReferenceRefersTo\n","filename":"make\/hotspot\/symbols\/symbols-unix","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    DISABLED_WARNINGS_clang := sign-compare, \\\n+    DISABLED_WARNINGS_clang := sign-compare misleading-indentation, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    BIN := $(BUILDTOOLS_OUTPUTDIR)\/create_symbols, \\\n+    BIN := $(BUILDTOOLS_OUTPUTDIR)\/create_symbols_javadoc, \\\n@@ -74,1 +74,1 @@\n-\t    -classpath $(BUILDTOOLS_OUTPUTDIR)\/create_symbols \\\n+\t    -classpath $(BUILDTOOLS_OUTPUTDIR)\/create_symbols_javadoc \\\n@@ -82,1 +82,1 @@\n-\t    -classpath $(BUILDTOOLS_OUTPUTDIR)\/create_symbols \\\n+\t    -classpath $(BUILDTOOLS_OUTPUTDIR)\/create_symbols_javadoc \\\n","filename":"make\/modules\/jdk.javadoc\/Gendata.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-      $(SUPPORT_OUTPUTDIR)\/gensrc\/$(MODULE)\/jdk\/incubator\/jpackage\/internal\/resources\/entitlements.plist\n+      $(SUPPORT_OUTPUTDIR)\/gensrc\/$(MODULE)\/jdk\/jpackage\/internal\/resources\/entitlements.plist\n","filename":"make\/modules\/jdk.jpackage\/Gensrc.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"make\/modules\/jdk.incubator.jpackage\/Gensrc.gmk","status":"renamed"},{"patch":"@@ -29,1 +29,1 @@\n-    MAIN_CLASS := jdk.incubator.jpackage.main.Main, \\\n+    MAIN_CLASS := jdk.jpackage.main.Main, \\\n","filename":"make\/modules\/jdk.jpackage\/Launcher.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"make\/modules\/jdk.incubator.jpackage\/Launcher.gmk","status":"renamed"},{"patch":"@@ -32,2 +32,2 @@\n-    $(call FindSrcDirsForComponent, jdk.incubator.jpackage, applauncher) \\\n-    $(call FindSrcDirsForComponent, jdk.incubator.jpackage, common)\n+    $(call FindSrcDirsForComponent, jdk.jpackage, applauncher) \\\n+    $(call FindSrcDirsForComponent, jdk.jpackage, common)\n@@ -45,1 +45,1 @@\n-JPACKAGE_OUTPUT_DIR := $(JDK_OUTPUTDIR)\/modules\/$(MODULE)\/jdk\/incubator\/jpackage\/internal\/resources\n+JPACKAGE_OUTPUT_DIR := $(JDK_OUTPUTDIR)\/modules\/$(MODULE)\/jdk\/jpackage\/internal\/resources\n@@ -76,1 +76,1 @@\n-      EXTRA_SRC := jdk.incubator.jpackage:common, \\\n+      EXTRA_SRC := jdk.jpackage:common, \\\n@@ -102,2 +102,2 @@\n-      $(call FindSrcDirsForComponent, jdk.incubator.jpackage, msiwrapper) \\\n-      $(call FindSrcDirsForComponent, jdk.incubator.jpackage, common)\n+      $(call FindSrcDirsForComponent, jdk.jpackage, msiwrapper) \\\n+      $(call FindSrcDirsForComponent, jdk.jpackage, common)\n","filename":"make\/modules\/jdk.jpackage\/Lib.gmk","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"make\/modules\/jdk.incubator.jpackage\/Lib.gmk","status":"renamed"},{"patch":"@@ -699,1 +699,1 @@\n-            {$OTHER,$THIS}\/support\/native\/jdk.incubator.jpackage\/* \\\n+            {$OTHER,$THIS}\/support\/native\/jdk.jpackage\/* \\\n","filename":"make\/scripts\/compare.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-class Notepad extends JPanel {\n+public class Notepad extends JPanel {\n","filename":"src\/demo\/share\/jfc\/Notepad\/Notepad.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-    guarantee(val < (1U << nbits), \"Field too big for insn\");\n+    guarantee(val < (1ULL << nbits), \"Field too big for insn\");\n@@ -448,2 +448,2 @@\n-    guarantee((_mode == base_plus_offset | _mode == base_plus_offset_reg\n-               | _mode == post | _mode == post_reg),\n+    guarantee((_mode == base_plus_offset || _mode == base_plus_offset_reg\n+               || _mode == post || _mode == post_reg),\n@@ -3223,7 +3223,0 @@\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                Register tmp,\n-                                                int offset) {\n-    ShouldNotCallThis();\n-    return RegisterOrConstant();\n-  }\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -665,5 +665,6 @@\n-#define DESCRIBE_FP_OFFSET(name)                                        \\\n-  {                                                                     \\\n-    uintptr_t *p = (uintptr_t *)fp;                                     \\\n-    printf(\"0x%016lx 0x%016lx %s\\n\", (uintptr_t)(p + frame::name##_offset), \\\n-           p[frame::name##_offset], #name);                             \\\n+#define DESCRIBE_FP_OFFSET(name)                     \\\n+  {                                                  \\\n+    uintptr_t *p = (uintptr_t *)fp;                  \\\n+    printf(INTPTR_FORMAT \" \" INTPTR_FORMAT \" %s\\n\",  \\\n+           (uintptr_t)(p + frame::name##_offset),    \\\n+           p[frame::name##_offset], #name);          \\\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), false);\n+    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::AccessKind::NORMAL);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,0 @@\n-address ShenandoahBarrierSetAssembler::_shenandoah_lrb = NULL;\n-\n@@ -230,1 +228,1 @@\n-void ShenandoahBarrierSetAssembler::load_reference_barrier_not_null(MacroAssembler* masm, Register dst, Address load_addr) {\n+void ShenandoahBarrierSetAssembler::load_reference_barrier(MacroAssembler* masm, Register dst, Address load_addr, ShenandoahBarrierSet::AccessKind kind) {\n@@ -235,1 +233,1 @@\n-  Label done;\n+  Label heap_stable, not_cset;\n@@ -241,1 +239,1 @@\n-  __ tbz(rscratch2, ShenandoahHeap::HAS_FORWARDED_BITPOS, done);\n+  __ tbz(rscratch2, ShenandoahHeap::HAS_FORWARDED_BITPOS, heap_stable);\n@@ -256,12 +254,6 @@\n-  __ far_call(RuntimeAddress(CAST_FROM_FN_PTR(address, ShenandoahBarrierSetAssembler::shenandoah_lrb())));\n-\n-  __ mov(result_dst, r0);\n-  __ pop(to_save, sp);\n-\n-  __ bind(done);\n-  __ leave();\n-}\n-\n-void ShenandoahBarrierSetAssembler::load_reference_barrier_native(MacroAssembler* masm, Register dst, Address load_addr) {\n-  if (!ShenandoahLoadRefBarrier) {\n-    return;\n+  \/\/ Test for in-cset\n+  if (kind == ShenandoahBarrierSet::AccessKind::NORMAL) {\n+    __ mov(rscratch2, ShenandoahHeap::in_cset_fast_test_addr());\n+    __ lsr(rscratch1, r0, ShenandoahHeapRegion::region_size_bytes_shift_jint());\n+    __ ldrb(rscratch2, Address(rscratch2, rscratch1));\n+    __ tbz(rscratch2, 0, not_cset);\n@@ -270,18 +262,0 @@\n-  assert(dst != rscratch2, \"need rscratch2\");\n-\n-  Label is_null;\n-  Label done;\n-\n-  __ block_comment(\"load_reference_barrier_native { \");\n-\n-  __ cbz(dst, is_null);\n-\n-  __ enter();\n-\n-  Address gc_state(rthread, in_bytes(ShenandoahThreadLocalData::gc_state_offset()));\n-  __ ldrb(rscratch2, gc_state);\n-\n-  \/\/ Check for heap in evacuation phase\n-  __ tbz(rscratch2, ShenandoahHeap::HAS_FORWARDED_BITPOS, done);\n-\n-  __ mov(rscratch2, dst);\n@@ -289,3 +263,21 @@\n-  __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native));\n-  __ lea(r1, load_addr);\n-  __ mov(r0, rscratch2);\n+  switch (kind) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      if (UseCompressedOops) {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow));\n+      } else {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier));\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      if (UseCompressedOops) {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow));\n+      } else {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n@@ -293,1 +285,1 @@\n-  __ mov(rscratch2, r0);\n+  __ mov(rscratch1, r0);\n@@ -295,1 +287,1 @@\n-  __ mov(dst, rscratch2);\n+  __ mov(r0, rscratch1);\n@@ -297,1 +289,6 @@\n-  __ bind(done);\n+  __ bind(not_cset);\n+\n+  __ mov(result_dst, r0);\n+  __ pop(to_save, sp);\n+\n+  __ bind(heap_stable);\n@@ -299,2 +296,0 @@\n-  __ bind(is_null);\n-  __ block_comment(\"} load_reference_barrier_native\");\n@@ -311,9 +306,0 @@\n-void ShenandoahBarrierSetAssembler::load_reference_barrier(MacroAssembler* masm, Register dst, Address load_addr) {\n-  if (ShenandoahLoadRefBarrier) {\n-    Label is_null;\n-    __ cbz(dst, is_null);\n-    load_reference_barrier_not_null(masm, dst, load_addr);\n-    __ bind(is_null);\n-  }\n-}\n-\n@@ -355,5 +341,2 @@\n-    if (ShenandoahBarrierSet::use_load_reference_barrier_native(decorators, type)) {\n-      load_reference_barrier_native(masm, dst, src);\n-    } else {\n-      load_reference_barrier(masm, dst, src);\n-    }\n+    ShenandoahBarrierSet::AccessKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n+    load_reference_barrier(masm, dst, src, kind);\n@@ -480,1 +463,2 @@\n-  assert_different_registers(addr, expected, new_val, tmp1, tmp2);\n+  assert_different_registers(addr, expected, tmp1, tmp2);\n+  assert_different_registers(addr, new_val,  tmp1, tmp2);\n@@ -672,4 +656,12 @@\n-  if (stub->is_native()) {\n-    __ far_call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n-  } else {\n-    __ far_call(RuntimeAddress(bs->load_reference_barrier_rt_code_blob()->code_begin()));\n+  switch (stub->kind()) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      __ far_call(RuntimeAddress(bs->load_reference_barrier_normal_rt_code_blob()->code_begin()));\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      __ far_call(RuntimeAddress(bs->load_reference_barrier_weak_rt_code_blob()->code_begin()));\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ far_call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n+      break;\n+    default:\n+      ShouldNotReachHere();\n@@ -731,1 +723,1 @@\n-void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, bool is_native) {\n+void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind) {\n@@ -738,6 +730,20 @@\n-  if (is_native) {\n-    __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native));\n-  } else if (UseCompressedOops) {\n-    __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow));\n-  } else {\n-    __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier));\n+  switch (kind) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      if (UseCompressedOops) {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow));\n+      } else {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier));\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      if (UseCompressedOops) {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow));\n+      } else {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n+      break;\n+   default:\n+      ShouldNotReachHere();\n@@ -756,64 +762,0 @@\n-\n-address ShenandoahBarrierSetAssembler::shenandoah_lrb() {\n-  assert(_shenandoah_lrb != NULL, \"need load reference barrier stub\");\n-  return _shenandoah_lrb;\n-}\n-\n-#define __ cgen->assembler()->\n-\n-\/\/ Shenandoah load reference barrier.\n-\/\/\n-\/\/ Input:\n-\/\/   r0: OOP to evacuate.  Not null.\n-\/\/   r1: load address\n-\/\/\n-\/\/ Output:\n-\/\/   r0: Pointer to evacuated OOP.\n-\/\/\n-\/\/ Trash rscratch1, rscratch2.  Preserve everything else.\n-address ShenandoahBarrierSetAssembler::generate_shenandoah_lrb(StubCodeGenerator* cgen) {\n-\n-  __ align(6);\n-  StubCodeMark mark(cgen, \"StubRoutines\", \"shenandoah_lrb\");\n-  address start = __ pc();\n-\n-  Label slow_path;\n-  __ mov(rscratch2, ShenandoahHeap::in_cset_fast_test_addr());\n-  __ lsr(rscratch1, r0, ShenandoahHeapRegion::region_size_bytes_shift_jint());\n-  __ ldrb(rscratch2, Address(rscratch2, rscratch1));\n-  __ tbnz(rscratch2, 0, slow_path);\n-  __ ret(lr);\n-\n-  __ bind(slow_path);\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-  __ push_call_clobbered_registers();\n-\n-  if (UseCompressedOops) {\n-    __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow));\n-  } else {\n-    __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier));\n-  }\n-  __ blr(lr);\n-  __ mov(rscratch1, r0);\n-  __ pop_call_clobbered_registers();\n-  __ mov(r0, rscratch1);\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(lr);\n-\n-  return start;\n-}\n-\n-#undef __\n-\n-void ShenandoahBarrierSetAssembler::barrier_stubs_init() {\n-  if (ShenandoahLoadRefBarrier) {\n-    int stub_code_size = 2048;\n-    ResourceMark rm;\n-    BufferBlob* bb = BufferBlob::create(\"shenandoah_barrier_stubs\", stub_code_size);\n-    CodeBuffer buf(bb);\n-    StubCodeGenerator cgen(&buf);\n-    _shenandoah_lrb = generate_shenandoah_lrb(&cgen);\n-  }\n-}\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":75,"deletions":133,"binary":false,"changes":208,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/shenandoah\/shenandoahBarrierSet.hpp\"\n@@ -41,2 +42,0 @@\n-  static address _shenandoah_lrb;\n-\n@@ -60,5 +59,1 @@\n-  void load_reference_barrier(MacroAssembler* masm, Register dst, Address load_addr);\n-  void load_reference_barrier_not_null(MacroAssembler* masm, Register dst, Address load_addr);\n-  void load_reference_barrier_native(MacroAssembler* masm, Register dst, Address load_addr);\n-\n-  address generate_shenandoah_lrb(StubCodeGenerator* cgen);\n+  void load_reference_barrier(MacroAssembler* masm, Register dst, Address load_addr, ShenandoahBarrierSet::AccessKind kind);\n@@ -67,1 +62,0 @@\n-  static address shenandoah_lrb();\n@@ -75,1 +69,1 @@\n-  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, bool is_native);\n+  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind);\n@@ -88,2 +82,0 @@\n-\n-  virtual void barrier_stubs_init();\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.hpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -24,2 +24,3 @@\n- #include \"jvmci\/jvmci.hpp\"\n- #include \"jvmci\/jvmciCodeInstaller.hpp\"\n+#include \"precompiled.hpp\"\n+#include \"jvmci\/jvmci.hpp\"\n+#include \"jvmci\/jvmciCodeInstaller.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/jvmciCodeInstaller_aarch64.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -937,17 +937,0 @@\n-\n-RegisterOrConstant MacroAssembler::delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                      Register tmp,\n-                                                      int offset) {\n-  intptr_t value = *delayed_value_addr;\n-  if (value != 0)\n-    return RegisterOrConstant(value + offset);\n-\n-  \/\/ load indirectly to solve generation ordering problem\n-  ldr(tmp, ExternalAddress((address) delayed_value_addr));\n-\n-  if (offset != 0)\n-    add(tmp, tmp, offset);\n-\n-  return RegisterOrConstant(tmp);\n-}\n-\n@@ -1833,1 +1816,1 @@\n-    const unsigned mask = size_in_bytes - 1;\n+    const uint64_t mask = size_in_bytes - 1;\n@@ -2897,1 +2880,1 @@\n-  const int sz = prev_ldst->size_in_bytes();\n+  const size_t sz = prev_ldst->size_in_bytes();\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1016,4 +1016,0 @@\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                Register tmp,\n-                                                int offset);\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -658,1 +658,1 @@\n-  size_t size_in_bytes() { return 1 << size(); }\n+  size_t size_in_bytes() { return 1ULL << size(); }\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1501,1 +1501,1 @@\n-    __ bang_stack_with_offset(StackOverflow::stack_shadow_zone_size());\n+    __ bang_stack_with_offset(checked_cast<int>(StackOverflow::stack_shadow_zone_size()));\n@@ -2448,1 +2448,1 @@\n-  __ mov(rscratch1, (address)0xDEADDEAD);        \/\/ Make a recognizable pattern\n+  __ mov(rscratch1, (uint64_t)0xDEADDEAD);        \/\/ Make a recognizable pattern\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1308,1 +1308,1 @@\n-  void verify_oop_array (size_t size, Register a, Register count, Register temp) {\n+  void verify_oop_array (int size, Register a, Register count, Register temp) {\n@@ -1315,1 +1315,1 @@\n-    if (size == (size_t)wordSize) {\n+    if (size == wordSize) {\n@@ -1346,1 +1346,1 @@\n-  address generate_disjoint_copy(size_t size, bool aligned, bool is_oop, address *entry,\n+  address generate_disjoint_copy(int size, bool aligned, bool is_oop, address *entry,\n@@ -1412,1 +1412,1 @@\n-  address generate_conjoint_copy(size_t size, bool aligned, bool is_oop, address nooverlap_target,\n+  address generate_conjoint_copy(int size, bool aligned, bool is_oop, address nooverlap_target,\n@@ -1663,1 +1663,1 @@\n-    const size_t size = UseCompressedOops ? sizeof (jint) : sizeof (jlong);\n+    const int size = UseCompressedOops ? sizeof (jint) : sizeof (jlong);\n@@ -1681,1 +1681,1 @@\n-    const size_t size = UseCompressedOops ? sizeof (jint) : sizeof (jlong);\n+    const int size = UseCompressedOops ? sizeof (jint) : sizeof (jlong);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1123,1 +1123,1 @@\n-    const int n_shadow_pages = StackOverflow::stack_shadow_zone_size() \/ os::vm_page_size();\n+    const int n_shadow_pages = (int)(StackOverflow::stack_shadow_zone_size() \/ os::vm_page_size());\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,14 +88,0 @@\n-\/\/ Initially added to the Assembler interface as a pure virtual:\n-\/\/   RegisterConstant delayed_value(..)\n-\/\/ for:\n-\/\/   6812678 macro assembler needs delayed binding of a few constants (for 6655638)\n-\/\/ this was subsequently modified to its present name and return type\n-RegisterOrConstant MacroAssembler::delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                      Register tmp,\n-                                                      int offset) {\n-  ShouldNotReachHere();\n-  return RegisterOrConstant(-1);\n-}\n-\n-\n-\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -225,8 +225,0 @@\n-  \/\/ Initially added to the Assembler interface as a pure virtual:\n-  \/\/   RegisterConstant delayed_value(..)\n-  \/\/ for:\n-  \/\/   6812678 macro assembler needs delayed binding of a few constants (for 6655638)\n-  \/\/ this was subsequently modified to its present name and return type\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr, Register tmp, int offset);\n-\n-\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -385,19 +385,0 @@\n-RegisterOrConstant MacroAssembler::delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                      Register tmp, int offset) {\n-  intptr_t value = *delayed_value_addr;\n-  if (value != 0) {\n-    return RegisterOrConstant(value + offset);\n-  }\n-\n-  \/\/ Load indirectly to solve generation ordering problem.\n-  \/\/ static address, no relocation\n-  int simm16_offset = load_const_optimized(tmp, delayed_value_addr, noreg, true);\n-  ld(tmp, simm16_offset, tmp); \/\/ must be aligned ((xa & 3) == 0)\n-\n-  if (offset != 0) {\n-    addi(tmp, tmp, offset);\n-  }\n-\n-  return RegisterOrConstant(tmp);\n-}\n-\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -155,6 +155,0 @@\n-  \/\/ Read runtime constant:  Issue load if constant not yet established,\n-  \/\/ else use real constant.\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                Register tmp,\n-                                                int offset);\n-\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1813,28 +1813,0 @@\n-RegisterOrConstant MacroAssembler::delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                      Register tmp,\n-                                                      int offset) {\n-  intptr_t value = *delayed_value_addr;\n-  if (value != 0) {\n-    return RegisterOrConstant(value + offset);\n-  }\n-\n-  BLOCK_COMMENT(\"delayed_value {\");\n-  \/\/ Load indirectly to solve generation ordering problem.\n-  load_absolute_address(tmp, (address) delayed_value_addr); \/\/ tmp = a;\n-  z_lg(tmp, 0, tmp);                   \/\/ tmp = *tmp;\n-\n-#ifdef ASSERT\n-  NearLabel L;\n-  compare64_and_branch(tmp, (intptr_t)0L, Assembler::bcondNotEqual, L);\n-  z_illtrap();\n-  bind(L);\n-#endif\n-\n-  if (offset != 0) {\n-    z_agfi(tmp, offset);               \/\/ tmp = tmp + offset;\n-  }\n-\n-  BLOCK_COMMENT(\"} delayed_value\");\n-  return RegisterOrConstant(tmp);\n-}\n-\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":0,"deletions":28,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -353,3 +353,0 @@\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                Register tmp,\n-                                                int offset);\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-#ifdef _LP64\n@@ -86,0 +85,1 @@\n+#ifdef _LP64\n@@ -88,0 +88,9 @@\n+#else\n+  const Register tmp1 = rcx;\n+  const Register tmp2 = rdx;\n+  __ push(tmp1);\n+  __ push(tmp2);\n+\n+  __ lea(tmp1, safepoint_pc);\n+  __ get_thread(tmp2);\n+  __ movptr(Address(tmp2, JavaThread::saved_exception_pc_offset()), tmp1);\n@@ -89,0 +98,3 @@\n+  __ pop(tmp2);\n+  __ pop(tmp1);\n+#endif \/* _LP64 *\/\n@@ -91,0 +103,1 @@\n+\n@@ -93,3 +106,0 @@\n-#else\n-  ShouldNotReachHere();\n-#endif \/* _LP64 *\/\n","filename":"src\/hotspot\/cpu\/x86\/c1_CodeStubs_x86.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -538,3 +538,1 @@\n-  code_stub->set_safepoint_offset(__ offset());\n-  __ relocate(relocInfo::poll_return_type);\n-  __ safepoint_poll(*code_stub->entry(), r15_thread, true \/* at_return *\/, true \/* in_nmethod *\/);\n+  const Register thread = r15_thread;\n@@ -542,6 +540,2 @@\n-  const Register poll_addr = rbx;\n-  assert(FrameMap::is_caller_save_register(poll_addr), \"will overwrite\");\n-  __ get_thread(poll_addr);\n-  __ movptr(poll_addr, Address(poll_addr, Thread::polling_page_offset()));\n-  __ relocate(relocInfo::poll_return_type);\n-  __ testl(rax, Address(poll_addr, 0));\n+  const Register thread = rbx;\n+  __ get_thread(thread);\n@@ -549,0 +543,3 @@\n+  code_stub->set_safepoint_offset(__ offset());\n+  __ relocate(relocInfo::poll_return_type);\n+  __ safepoint_poll(*code_stub->entry(), thread, true \/* at_return *\/, true \/* in_nmethod *\/);\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#ifdef _LP64\n@@ -43,0 +42,1 @@\n+#ifdef _LP64\n@@ -45,1 +45,0 @@\n-  __ jump(callback_addr);\n@@ -47,1 +46,11 @@\n-  ShouldNotReachHere();\n+  const Register tmp1 = rcx;\n+  const Register tmp2 = rdx;\n+  __ push(tmp1);\n+  __ push(tmp2);\n+\n+  __ lea(tmp1, safepoint_pc);\n+  __ get_thread(tmp2);\n+  __ movptr(Address(tmp2, JavaThread::saved_exception_pc_offset()), tmp1);\n+\n+  __ pop(tmp2);\n+  __ pop(tmp1);\n@@ -49,0 +58,1 @@\n+  __ jump(callback_addr);\n","filename":"src\/hotspot\/cpu\/x86\/c2_safepointPollStubTable_x86.cpp","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), false);\n+    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::AccessKind::NORMAL);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-#include \"interpreter\/interp_masm.hpp\"\n@@ -47,2 +46,0 @@\n-address ShenandoahBarrierSetAssembler::_shenandoah_lrb = NULL;\n-\n@@ -274,1 +271,1 @@\n-void ShenandoahBarrierSetAssembler::load_reference_barrier_not_null(MacroAssembler* masm, Register dst, Address src) {\n+void ShenandoahBarrierSetAssembler::load_reference_barrier(MacroAssembler* masm, Register dst, Address src, ShenandoahBarrierSet::AccessKind kind) {\n@@ -277,1 +274,1 @@\n-  Label done;\n+  Label heap_stable, not_cset;\n@@ -279,0 +276,3 @@\n+  __ block_comment(\"load_reference_barrier { \");\n+\n+  \/\/ Check if GC is active\n@@ -292,33 +292,16 @@\n-  __ jccb(Assembler::zero, done);\n-\n-  \/\/ Use rsi for src address\n-  const Register src_addr = rsi;\n-  \/\/ Setup address parameter first, if it does not clobber oop in dst\n-  bool need_addr_setup = (src_addr != dst);\n-\n-  if (need_addr_setup) {\n-    __ push(src_addr);\n-    __ lea(src_addr, src);\n-\n-    if (dst != rax) {\n-      \/\/ Move obj into rax and save rax\n-      __ push(rax);\n-      __ movptr(rax, dst);\n-    }\n-  } else {\n-    \/\/ dst == rsi\n-    __ push(rax);\n-    __ movptr(rax, dst);\n-\n-    \/\/ we can clobber it, since it is outgoing register\n-    __ lea(src_addr, src);\n-  }\n-\n-  save_xmm_registers(masm);\n-  __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, ShenandoahBarrierSetAssembler::shenandoah_lrb())));\n-  restore_xmm_registers(masm);\n-\n-  if (need_addr_setup) {\n-    if (dst != rax) {\n-      __ movptr(dst, rax);\n-      __ pop(rax);\n+  __ jcc(Assembler::zero, heap_stable);\n+\n+  Register tmp1 = noreg, tmp2 = noreg;\n+  if (kind == ShenandoahBarrierSet::AccessKind::NORMAL) {\n+    \/\/ Test for object in cset\n+    \/\/ Allocate temporary registers\n+    for (int i = 0; i < 8; i++) {\n+      Register r = as_Register(i);\n+      if (r != rsp && r != rbp && r != dst && r != src.base() && r != src.index()) {\n+        if (tmp1 == noreg) {\n+          tmp1 = r;\n+        } else {\n+          tmp2 = r;\n+          break;\n+        }\n+      }\n@@ -326,4 +309,22 @@\n-    __ pop(src_addr);\n-  } else {\n-    __ movptr(dst, rax);\n-    __ pop(rax);\n+    assert(tmp1 != noreg, \"tmp1 allocated\");\n+    assert(tmp2 != noreg, \"tmp2 allocated\");\n+    assert_different_registers(tmp1, tmp2, src.base(), src.index());\n+    assert_different_registers(tmp1, tmp2, dst);\n+\n+    __ push(tmp1);\n+    __ push(tmp2);\n+\n+    \/\/ Optimized cset-test\n+    __ movptr(tmp1, dst);\n+    __ shrptr(tmp1, ShenandoahHeapRegion::region_size_bytes_shift_jint());\n+    __ movptr(tmp2, (intptr_t) ShenandoahHeap::in_cset_fast_test_addr());\n+    __ movbool(tmp1, Address(tmp1, tmp2, Address::times_1));\n+    __ testbool(tmp1);\n+    __ jcc(Assembler::zero, not_cset);\n+  }\n+\n+  uint num_saved_regs = 4 + (dst != rax ? 1 : 0) LP64_ONLY(+4);\n+  __ subptr(rsp, num_saved_regs * wordSize);\n+  uint slot = num_saved_regs;\n+  if (dst != rax) {\n+    __ movptr(Address(rsp, (--slot) * wordSize), rax);\n@@ -331,5 +332,10 @@\n-\n-  __ bind(done);\n-\n-#ifndef _LP64\n-    __ pop(thread);\n+  __ movptr(Address(rsp, (--slot) * wordSize), rcx);\n+  __ movptr(Address(rsp, (--slot) * wordSize), rdx);\n+  __ movptr(Address(rsp, (--slot) * wordSize), rdi);\n+  __ movptr(Address(rsp, (--slot) * wordSize), rsi);\n+#ifdef _LP64\n+  __ movptr(Address(rsp, (--slot) * wordSize), r8);\n+  __ movptr(Address(rsp, (--slot) * wordSize), r9);\n+  __ movptr(Address(rsp, (--slot) * wordSize), r10);\n+  __ movptr(Address(rsp, (--slot) * wordSize), r11);\n+  \/\/ r12-r15 are callee saved in all calling conventions\n@@ -337,18 +343,1 @@\n-}\n-\n-void ShenandoahBarrierSetAssembler::load_reference_barrier_native(MacroAssembler* masm, Register dst, Address src) {\n-  if (!ShenandoahLoadRefBarrier) {\n-    return;\n-  }\n-\n-  Label done;\n-  Label not_null;\n-  Label slow_path;\n-  __ block_comment(\"load_reference_barrier_native { \");\n-\n-  \/\/ null check\n-  __ testptr(dst, dst);\n-  __ jcc(Assembler::notZero, not_null);\n-  __ jmp(done);\n-  __ bind(not_null);\n-\n+  assert(slot == 0, \"must use all slots\");\n@@ -356,0 +345,1 @@\n+  \/\/ Shuffle registers such that dst is in c_rarg0 and addr in c_rarg1.\n@@ -357,1 +347,1 @@\n-  Register thread = r15_thread;\n+  Register arg0 = c_rarg0, arg1 = c_rarg1;\n@@ -359,13 +349,1 @@\n-  Register thread = rcx;\n-  if (thread == dst) {\n-    thread = rbx;\n-  }\n-  __ push(thread);\n-  __ get_thread(thread);\n-#endif\n-  assert_different_registers(dst, thread);\n-\n-  Address gc_state(thread, in_bytes(ShenandoahThreadLocalData::gc_state_offset()));\n-  __ testb(gc_state, ShenandoahHeap::HAS_FORWARDED);\n-#ifndef _LP64\n-  __ pop(thread);\n+  Register arg0 = rdi, arg1 = rsi;\n@@ -373,6 +351,6 @@\n-  __ jccb(Assembler::notZero, slow_path);\n-  __ jmp(done);\n-  __ bind(slow_path);\n-\n-  if (dst != rax) {\n-    __ push(rax);\n+  if (dst == arg1) {\n+    __ lea(arg0, src);\n+    __ xchgptr(arg1, arg0);\n+  } else {\n+    __ lea(arg1, src);\n+    __ movptr(arg0, dst);\n@@ -380,17 +358,0 @@\n-  __ push(rcx);\n-  __ push(rdx);\n-  __ push(rdi);\n-  __ push(rsi);\n-#ifdef _LP64\n-  __ push(r8);\n-  __ push(r9);\n-  __ push(r10);\n-  __ push(r11);\n-  __ push(r12);\n-  __ push(r13);\n-  __ push(r14);\n-  __ push(r15);\n-#endif\n-\n-  assert_different_registers(dst, rsi);\n-  __ lea(rsi, src);\n@@ -399,1 +360,21 @@\n-  __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), dst, rsi);\n+  switch (kind) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      if (UseCompressedOops) {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), arg0, arg1);\n+      } else {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), arg0, arg1);\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      if (UseCompressedOops) {\n+        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow), arg0, arg1);\n+      } else {\n+        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), arg0, arg1);\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), arg0, arg1);\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n@@ -403,8 +384,4 @@\n-  __ pop(r15);\n-  __ pop(r14);\n-  __ pop(r13);\n-  __ pop(r12);\n-  __ pop(r11);\n-  __ pop(r10);\n-  __ pop(r9);\n-  __ pop(r8);\n+  __ movptr(r11, Address(rsp, (slot++) * wordSize));\n+  __ movptr(r10, Address(rsp, (slot++) * wordSize));\n+  __ movptr(r9,  Address(rsp, (slot++) * wordSize));\n+  __ movptr(r8,  Address(rsp, (slot++) * wordSize));\n@@ -412,4 +389,4 @@\n-  __ pop(rsi);\n-  __ pop(rdi);\n-  __ pop(rdx);\n-  __ pop(rcx);\n+  __ movptr(rsi, Address(rsp, (slot++) * wordSize));\n+  __ movptr(rdi, Address(rsp, (slot++) * wordSize));\n+  __ movptr(rdx, Address(rsp, (slot++) * wordSize));\n+  __ movptr(rcx, Address(rsp, (slot++) * wordSize));\n@@ -419,1 +396,1 @@\n-    __ pop(rax);\n+    __ movptr(rax, Address(rsp, (slot++) * wordSize));\n@@ -422,2 +399,17 @@\n-  __ bind(done);\n-  __ block_comment(\"load_reference_barrier_native { \");\n+  assert(slot == num_saved_regs, \"must use all slots\");\n+  __ addptr(rsp, num_saved_regs * wordSize);\n+\n+  __ bind(not_cset);\n+\n+  if  (kind == ShenandoahBarrierSet::AccessKind::NORMAL) {\n+    __ pop(tmp2);\n+    __ pop(tmp1);\n+  }\n+\n+  __ bind(heap_stable);\n+\n+  __ block_comment(\"} load_reference_barrier\");\n+\n+#ifndef _LP64\n+    __ pop(thread);\n+#endif\n@@ -467,10 +459,0 @@\n-void ShenandoahBarrierSetAssembler::load_reference_barrier(MacroAssembler* masm, Register dst, Address src) {\n-  if (ShenandoahLoadRefBarrier) {\n-    Label done;\n-    __ testptr(dst, dst);\n-    __ jcc(Assembler::zero, done);\n-    load_reference_barrier_not_null(masm, dst, src);\n-    __ bind(done);\n-  }\n-}\n-\n@@ -507,1 +489,1 @@\n-      \/\/ Use tmp1 for dst if possible, as it is not used in BarrierAssembler::load_at()\n+    \/\/ Use tmp1 for dst if possible, as it is not used in BarrierAssembler::load_at()\n@@ -520,5 +502,2 @@\n-    if (ShenandoahBarrierSet::use_load_reference_barrier_native(decorators, type)) {\n-      load_reference_barrier_native(masm, dst, src);\n-    } else {\n-      load_reference_barrier(masm, dst, src);\n-    }\n+    ShenandoahBarrierSet::AccessKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n+    load_reference_barrier(masm, dst, src, kind);\n@@ -641,1 +620,2 @@\n-  assert_different_registers(oldval, newval, tmp1, tmp2);\n+  assert_different_registers(oldval, tmp1, tmp2);\n+  assert_different_registers(newval, tmp1, tmp2);\n@@ -873,4 +853,12 @@\n-  if (stub->is_native()) {\n-    __ call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n-  } else {\n-    __ call(RuntimeAddress(bs->load_reference_barrier_rt_code_blob()->code_begin()));\n+  switch (stub->kind()) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      __ call(RuntimeAddress(bs->load_reference_barrier_normal_rt_code_blob()->code_begin()));\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      __ call(RuntimeAddress(bs->load_reference_barrier_weak_rt_code_blob()->code_begin()));\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n+      break;\n+    default:\n+      ShouldNotReachHere();\n@@ -941,1 +929,1 @@\n-void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, bool is_native) {\n+void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind) {\n@@ -950,6 +938,20 @@\n-  if (is_native) {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), c_rarg0, c_rarg1);\n-  } else if (UseCompressedOops) {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), c_rarg0, c_rarg1);\n-  } else {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), c_rarg0, c_rarg1);\n+  switch (kind) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      if (UseCompressedOops) {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), c_rarg0, c_rarg1);\n+      } else {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), c_rarg0, c_rarg1);\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      if (UseCompressedOops) {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow), c_rarg0, c_rarg1);\n+      } else {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), c_rarg0, c_rarg1);\n+      }\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), c_rarg0, c_rarg1);\n+      break;\n+    default:\n+      ShouldNotReachHere();\n@@ -960,4 +962,10 @@\n-  if (is_native) {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), rax, rbx);\n-  } else {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), rax, rbx);\n+  switch (kind) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), rax, rbx);\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), rax, rbx);\n+      break;\n+    default:\n+      ShouldNotReachHere();\n@@ -975,101 +983,0 @@\n-\n-address ShenandoahBarrierSetAssembler::shenandoah_lrb() {\n-  assert(_shenandoah_lrb != NULL, \"need load reference barrier stub\");\n-  return _shenandoah_lrb;\n-}\n-\n-#define __ cgen->assembler()->\n-\n-\/*\n- *  Incoming parameters:\n- *  rax: oop\n- *  rsi: load address\n- *\/\n-address ShenandoahBarrierSetAssembler::generate_shenandoah_lrb(StubCodeGenerator* cgen) {\n-  __ align(CodeEntryAlignment);\n-  StubCodeMark mark(cgen, \"StubRoutines\", \"shenandoah_lrb\");\n-  address start = __ pc();\n-\n-  Label slow_path;\n-\n-  \/\/ We use RDI, which also serves as argument register for slow call.\n-  \/\/ RAX always holds the src object ptr, except after the slow call,\n-  \/\/ then it holds the result. R8\/RBX is used as temporary register.\n-\n-  Register tmp1 = rdi;\n-  Register tmp2 = LP64_ONLY(r8) NOT_LP64(rbx);\n-\n-  __ push(tmp1);\n-  __ push(tmp2);\n-\n-  \/\/ Check for object being in the collection set.\n-  __ mov(tmp1, rax);\n-  __ shrptr(tmp1, ShenandoahHeapRegion::region_size_bytes_shift_jint());\n-  __ movptr(tmp2, (intptr_t) ShenandoahHeap::in_cset_fast_test_addr());\n-  __ movbool(tmp2, Address(tmp2, tmp1, Address::times_1));\n-  __ testbool(tmp2);\n-  __ jccb(Assembler::notZero, slow_path);\n-  __ pop(tmp2);\n-  __ pop(tmp1);\n-  __ ret(0);\n-\n-  __ bind(slow_path);\n-\n-  __ push(rcx);\n-  __ push(rdx);\n-  __ push(rdi);\n-#ifdef _LP64\n-  __ push(r8);\n-  __ push(r9);\n-  __ push(r10);\n-  __ push(r11);\n-  __ push(r12);\n-  __ push(r13);\n-  __ push(r14);\n-  __ push(r15);\n-#endif\n-  __ push(rbp);\n-  __ movptr(rbp, rsp);\n-  __ andptr(rsp, -StackAlignmentInBytes);\n-  __ push_FPU_state();\n-  if (UseCompressedOops) {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), rax, rsi);\n-  } else {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), rax, rsi);\n-  }\n-  __ pop_FPU_state();\n-  __ movptr(rsp, rbp);\n-  __ pop(rbp);\n-#ifdef _LP64\n-  __ pop(r15);\n-  __ pop(r14);\n-  __ pop(r13);\n-  __ pop(r12);\n-  __ pop(r11);\n-  __ pop(r10);\n-  __ pop(r9);\n-  __ pop(r8);\n-#endif\n-  __ pop(rdi);\n-  __ pop(rdx);\n-  __ pop(rcx);\n-\n-  __ pop(tmp2);\n-  __ pop(tmp1);\n-  __ ret(0);\n-\n-  return start;\n-}\n-\n-#undef __\n-\n-void ShenandoahBarrierSetAssembler::barrier_stubs_init() {\n-  if (ShenandoahLoadRefBarrier) {\n-    int stub_code_size = 4096;\n-    ResourceMark rm;\n-    BufferBlob* bb = BufferBlob::create(\"shenandoah_barrier_stubs\", stub_code_size);\n-    CodeBuffer buf(bb);\n-    StubCodeGenerator cgen(&buf);\n-    _shenandoah_lrb = generate_shenandoah_lrb(&cgen);\n-  }\n-}\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":158,"deletions":251,"binary":false,"changes":409,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+#include \"gc\/shenandoah\/shenandoahBarrierSet.hpp\"\n+\n@@ -41,2 +43,0 @@\n-  static address _shenandoah_lrb;\n-\n@@ -59,2 +59,0 @@\n-  void load_reference_barrier_not_null(MacroAssembler* masm, Register dst, Address src);\n-\n@@ -63,2 +61,0 @@\n-  address generate_shenandoah_lrb(StubCodeGenerator* cgen);\n-\n@@ -66,2 +62,0 @@\n-  static address shenandoah_lrb();\n-\n@@ -73,1 +67,1 @@\n-  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, bool is_native);\n+  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind);\n@@ -76,2 +70,1 @@\n-  void load_reference_barrier(MacroAssembler* masm, Register dst, Address src);\n-  void load_reference_barrier_native(MacroAssembler* masm, Register dst, Address src);\n+  void load_reference_barrier(MacroAssembler* masm, Register dst, Address src, ShenandoahBarrierSet::AccessKind kind);\n@@ -90,2 +83,0 @@\n-  virtual void barrier_stubs_init();\n-\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.hpp","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1962,1 +1962,1 @@\n-    MacroAssembler::_verify_oop(reg, \"broken oop\", file, line);\n+    MacroAssembler::_verify_oop_checked(reg, \"broken oop\", file, line);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -373,5 +373,0 @@\n-void MacroAssembler::set_word_if_not_zero(Register dst) {\n-  xorl(dst, dst);\n-  set_byte_if_not_zero(dst);\n-}\n-\n@@ -717,2 +712,6 @@\n-  mov64(rscratch1, src);\n-  movq(dst, rscratch1);\n+  if (is_simm32(src)) {\n+    movptr(dst, checked_cast<int32_t>(src));\n+  } else {\n+    mov64(rscratch1, src);\n+    movq(dst, rscratch1);\n+  }\n@@ -2755,1 +2754,0 @@\n-#ifdef _LP64\n@@ -2759,1 +2757,1 @@\n-    cmpq(in_nmethod ? rsp : rbp, Address(thread_reg, Thread::polling_word_offset()));\n+    cmpptr(in_nmethod ? rsp : rbp, Address(thread_reg, Thread::polling_word_offset()));\n@@ -2763,1 +2761,0 @@\n-#endif\n@@ -3926,38 +3923,0 @@\n-RegisterOrConstant MacroAssembler::delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                      Register tmp,\n-                                                      int offset) {\n-  intptr_t value = *delayed_value_addr;\n-  if (value != 0)\n-    return RegisterOrConstant(value + offset);\n-\n-  \/\/ load indirectly to solve generation ordering problem\n-  movptr(tmp, ExternalAddress((address) delayed_value_addr));\n-\n-#ifdef ASSERT\n-  { Label L;\n-    testptr(tmp, tmp);\n-    if (WizardMode) {\n-      const char* buf = NULL;\n-      {\n-        ResourceMark rm;\n-        stringStream ss;\n-        ss.print(\"DelayedValue=\" INTPTR_FORMAT, delayed_value_addr[1]);\n-        buf = code_string(ss.as_string());\n-      }\n-      jcc(Assembler::notZero, L);\n-      STOP(buf);\n-    } else {\n-      jccb(Assembler::notZero, L);\n-      hlt();\n-    }\n-    bind(L);\n-  }\n-#endif\n-\n-  if (offset != 0)\n-    addptr(tmp, offset);\n-\n-  return RegisterOrConstant(tmp);\n-}\n-\n-\n@@ -3985,1 +3944,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":7,"deletions":49,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -586,3 +586,0 @@\n-  \/\/----\n-  void set_word_if_not_zero(Register reg); \/\/ sets reg to 1 if not zero, otherwise 0\n-\n@@ -595,0 +592,11 @@\n+  void _verify_oop_checked(Register reg, const char* s, const char* file, int line) {\n+    if (VerifyOops) {\n+      _verify_oop(reg, s, file, line);\n+    }\n+  }\n+  void _verify_oop_addr_checked(Address reg, const char* s, const char* file, int line) {\n+    if (VerifyOops) {\n+      _verify_oop_addr(reg, s, file, line);\n+    }\n+  }\n+\n@@ -599,3 +607,3 @@\n-#define verify_oop(reg) _verify_oop(reg, \"broken oop \" #reg, __FILE__, __LINE__)\n-#define verify_oop_msg(reg, msg) _verify_oop(reg, \"broken oop \" #reg \", \" #msg, __FILE__, __LINE__)\n-#define verify_oop_addr(addr) _verify_oop_addr(addr, \"broken oop addr \" #addr, __FILE__, __LINE__)\n+#define verify_oop(reg) _verify_oop_checked(reg, \"broken oop \" #reg, __FILE__, __LINE__)\n+#define verify_oop_msg(reg, msg) _verify_oop_checked(reg, \"broken oop \" #reg \", \" #msg, __FILE__, __LINE__)\n+#define verify_oop_addr(addr) _verify_oop_addr_checked(addr, \"broken oop addr \" #addr, __FILE__, __LINE__)\n@@ -646,4 +654,0 @@\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                                Register tmp,\n-                                                int offset);\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -6854,1 +6854,3 @@\n-    StubRoutines::_verify_oop_subroutine_entry = generate_verify_oop();\n+    if (VerifyOops) {\n+      StubRoutines::_verify_oop_subroutine_entry = generate_verify_oop();\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1026,1 +1026,1 @@\n-    return LP64_ONLY(true) NOT_LP64(false);\n+    return true;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -656,2 +656,3 @@\n-    st->print(\"TEST   PollPage,EAX\\t! Poll Safepoint\");\n-    st->cr(); st->print(\"\\t\");\n+    st->print(\"CMPL     rsp, poll_offset[thread]  \\n\\t\"\n+              \"JA       #safepoint_stub\\t\"\n+              \"# Safepoint: poll for GC\");\n@@ -700,1 +701,1 @@\n-    Register pollReg = as_Register(EBX_enc);\n+    Register thread = as_Register(EBX_enc);\n@@ -702,4 +703,8 @@\n-    masm.get_thread(pollReg);\n-    masm.movl(pollReg, Address(pollReg, in_bytes(Thread::polling_page_offset())));\n-    masm.relocate(relocInfo::poll_return_type);\n-    masm.testl(rax, Address(pollReg, 0));\n+    __ get_thread(thread);\n+    Label dummy_label;\n+    Label* code_stub = &dummy_label;\n+    if (!C->output()->in_scratch_emit_size()) {\n+      code_stub = &C->output()->safepoint_poll_table()->add_safepoint(__ offset());\n+    }\n+    __ relocate(relocInfo::poll_return_type);\n+    __ safepoint_poll(*code_stub, thread, true \/* at_return *\/, true \/* in_nmethod *\/);\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -938,2 +938,2 @@\n-    st->print_cr(\"cmpq    poll_offset[r15_thread], rsp\\n\\t\"\n-                 \"ja      #safepoint_stub\\t\"\n+    st->print_cr(\"cmpq     rsp, poll_offset[r15_thread] \\n\\t\"\n+                 \"ja       #safepoint_stub\\t\"\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,6 +69,0 @@\n-RegisterOrConstant MacroAssembler::delayed_value_impl(\n-  intptr_t* delayed_value_addr, Register tmpl, int offset) {\n-  ShouldNotCallThis();\n-  return RegisterOrConstant();\n-}\n-\n","filename":"src\/hotspot\/cpu\/zero\/assembler_zero.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -57,3 +57,0 @@\n-  RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                        Register tmp, int offset);\n- public:\n","filename":"src\/hotspot\/cpu\/zero\/assembler_zero.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-  DO(_mdx);\n@@ -87,1 +86,0 @@\n-  istate->set_mdx(NULL);\n","filename":"src\/hotspot\/cpu\/zero\/bytecodeInterpreter_zero.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,2 @@\n-  return (intptr_t*) &(get_interpreterState()->_mdx);\n+  fatal(\"Should not call this: Zero never profiles\");\n+  return NULL; \/\/ silence compiler warnings\n","filename":"src\/hotspot\/cpu\/zero\/frame_zero.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,8 +38,0 @@\n-\n- public:\n-  RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr,\n-                                        Register  tmp,\n-                                        int       offset) {\n-    ShouldNotCallThis();\n-    return RegisterOrConstant();\n-  }\n","filename":"src\/hotspot\/cpu\/zero\/interp_masm_zero.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  guarantee(Thread::current() == thread, \"should run in the same thread\");\n+  assert(Thread::current() == thread, \"should run in the same thread\");\n","filename":"src\/hotspot\/cpu\/zero\/stack_zero.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -752,1 +752,0 @@\n-  istate->set_mdx(NULL);\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -91,1 +91,0 @@\n-define_pd_global(bool, UseOSErrorReporting, false);\n","filename":"src\/hotspot\/os\/aix\/globals_aix.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-define_pd_global(bool, UseOSErrorReporting, false);\n","filename":"src\/hotspot\/os\/bsd\/globals_bsd.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -82,1 +82,4 @@\n-          \"Use CPU_ALLOC code path in os::active_processor_count \")\n+          \"Use CPU_ALLOC code path in os::active_processor_count \")     \\\n+                                                                        \\\n+  product(bool, DumpPerfMapAtExit, false, DIAGNOSTIC,                   \\\n+          \"Write map file for Linux perf tool at exit\")\n@@ -92,1 +95,0 @@\n-define_pd_global(bool, UseOSErrorReporting, false);\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4638,0 +4638,6 @@\n+  if (DumpPerfMapAtExit && FLAG_IS_DEFAULT(UseCodeCacheFlushing)) {\n+    \/\/ Disable code cache flushing to ensure the map file written at\n+    \/\/ exit contains all nmethods generated during execution.\n+    FLAG_SET_DEFAULT(UseCodeCacheFlushing, false);\n+  }\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -454,1 +454,0 @@\n-#if defined(AIX)\n@@ -456,10 +455,39 @@\n-\/\/ Set thread signal mask (for some reason on AIX sigthreadmask() seems\n-\/\/ to be the thing to call; documentation is not terribly clear about whether\n-\/\/ pthread_sigmask also works, and if it does, whether it does the same.\n-bool set_thread_signal_mask(int how, const sigset_t* set, sigset_t* oset) {\n-  const int rc = ::pthread_sigmask(how, set, oset);\n-  \/\/ return value semantics differ slightly for error case:\n-  \/\/ pthread_sigmask returns error number, sigthreadmask -1 and sets global errno\n-  \/\/ (so, pthread_sigmask is more theadsafe for error handling)\n-  \/\/ But success is always 0.\n-  return rc == 0 ? true : false;\n+\/\/\/\/\/ Synchronous (non-deferrable) error signals (ILL, SEGV, FPE, BUS, TRAP):\n+\n+\/\/ These signals are special because they cannot be deferred and, if they\n+\/\/ happen while delivery is blocked for the receiving thread, will cause UB\n+\/\/ (in practice typically resulting in sudden process deaths or hangs, see\n+\/\/ JDK-8252533). So we must take care never to block them when we cannot be\n+\/\/ absolutely sure they won't happen. In practice, this is always.\n+\/\/\n+\/\/ Relevant Posix quote:\n+\/\/ \"The behavior of a process is undefined after it ignores a SIGFPE, SIGILL,\n+\/\/  SIGSEGV, or SIGBUS signal that was not generated by kill(), sigqueue(), or\n+\/\/  raise().\"\n+\/\/\n+\/\/ We also include SIGTRAP in that list of never-to-block-signals. While not\n+\/\/ mentioned by the Posix documentation, in our (SAPs) experience blocking it\n+\/\/ causes similar problems. Beside, during normal operation - outside of error\n+\/\/ handling - SIGTRAP may be used for implicit NULL checking, so it makes sense\n+\/\/ to never block it.\n+\/\/\n+\/\/ We deal with those signals in two ways:\n+\/\/ - we just never explicitly block them, which includes not accidentally blocking\n+\/\/   them via sa_mask when establishing signal handlers.\n+\/\/ - as an additional safety measure, at the entrance of a signal handler, we\n+\/\/   unblock them explicitly.\n+\n+static void add_error_signals_to_set(sigset_t* set) {\n+  sigaddset(set, SIGILL);\n+  sigaddset(set, SIGBUS);\n+  sigaddset(set, SIGFPE);\n+  sigaddset(set, SIGSEGV);\n+  sigaddset(set, SIGTRAP);\n+}\n+\n+static void remove_error_signals_from_set(sigset_t* set) {\n+  sigdelset(set, SIGILL);\n+  sigdelset(set, SIGBUS);\n+  sigdelset(set, SIGFPE);\n+  sigdelset(set, SIGSEGV);\n+  sigdelset(set, SIGTRAP);\n@@ -468,4 +496,3 @@\n-\/\/ Function to unblock all signals which are, according\n-\/\/ to POSIX, typical program error signals. If they happen while being blocked,\n-\/\/ they typically will bring down the process immediately.\n-bool unblock_program_error_signals() {\n+\/\/ Unblock all signals whose delivery cannot be deferred and which, if they happen\n+\/\/  while delivery is blocked, would cause crashes or hangs (JDK-8252533).\n+void PosixSignals::unblock_error_signals() {\n@@ -474,5 +501,2 @@\n-  sigaddset(&set, SIGILL);\n-  sigaddset(&set, SIGBUS);\n-  sigaddset(&set, SIGFPE);\n-  sigaddset(&set, SIGSEGV);\n-  return set_thread_signal_mask(SIG_UNBLOCK, &set, NULL);\n+  add_error_signals_to_set(&set);\n+  ::pthread_sigmask(SIG_UNBLOCK, &set, NULL);\n@@ -481,2 +505,0 @@\n-#endif\n-\n@@ -487,7 +509,1 @@\n-\/\/ TODO: reconcile the differences between Linux\/BSD vs AIX here!\n-#if defined(AIX)\n-  \/\/ Never leave program error signals blocked;\n-  \/\/ on all our platforms they would bring down the process immediately when\n-  \/\/ getting raised while being blocked.\n-  unblock_program_error_signals();\n-#endif\n+  PosixSignals::unblock_error_signals();\n@@ -507,0 +523,3 @@\n+\n+  PosixSignals::unblock_error_signals();\n+\n@@ -705,17 +724,1 @@\n-\n-#if defined(AIX)\n-  \/\/ Do not block out synchronous signals in the signal handler.\n-  \/\/ Blocking synchronous signals only makes sense if you can really\n-  \/\/ be sure that those signals won't happen during signal handling,\n-  \/\/ when the blocking applies. Normal signal handlers are lean and\n-  \/\/ do not cause signals. But our signal handlers tend to be \"risky\"\n-  \/\/ - secondary SIGSEGV, SIGILL, SIGBUS' may and do happen.\n-  \/\/ On AIX, PASE there was a case where a SIGSEGV happened, followed\n-  \/\/ by a SIGILL, which was blocked due to the signal mask. The process\n-  \/\/ just hung forever. Better to crash from a secondary signal than to hang.\n-  sigdelset(&(sigAct.sa_mask), SIGSEGV);\n-  sigdelset(&(sigAct.sa_mask), SIGBUS);\n-  sigdelset(&(sigAct.sa_mask), SIGILL);\n-  sigdelset(&(sigAct.sa_mask), SIGFPE);\n-  sigdelset(&(sigAct.sa_mask), SIGTRAP);\n-#endif\n+  remove_error_signals_from_set(&(sigAct.sa_mask));\n@@ -1102,0 +1105,1 @@\n+  remove_error_signals_from_set(&(sigAct.sa_mask));\n@@ -1306,4 +1310,0 @@\n-int PosixSignals::unblock_thread_signal_mask(const sigset_t *set) {\n-  return pthread_sigmask(SIG_UNBLOCK, set, NULL);\n-}\n-\n@@ -1473,0 +1473,1 @@\n+\n@@ -1477,0 +1478,2 @@\n+  PosixSignals::unblock_error_signals();\n+\n@@ -1570,0 +1573,1 @@\n+  remove_error_signals_from_set(&(act.sa_mask));\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":54,"deletions":50,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -47,2 +47,0 @@\n-  \/\/ unblocks the signal masks for current thread\n-  static int unblock_thread_signal_mask(const sigset_t *set);\n@@ -67,0 +65,5 @@\n+\n+  \/\/ Unblock all signals whose delivery cannot be deferred and which, if they happen\n+  \/\/  while delivery is blocked, would cause crashes or hangs (see JDK-8252533).\n+  static void unblock_error_signals();\n+\n","filename":"src\/hotspot\/os\/posix\/signals_posix.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -104,9 +104,2 @@\n-  \/\/ unmask current signal\n-  sigset_t newset;\n-  sigemptyset(&newset);\n-  sigaddset(&newset, sig);\n-  \/\/ also unmask other synchronous signals\n-  for (int i = 0; i < NUM_SIGNALS; i++) {\n-    sigaddset(&newset, SIGNALS[i]);\n-  }\n-  PosixSignals::unblock_thread_signal_mask(&newset);\n+\n+  PosixSignals::unblock_error_signals();\n@@ -142,4 +135,0 @@\n-  \/\/ install signal handlers for all synchronous program error signals\n-  sigset_t newset;\n-  sigemptyset(&newset);\n-\n@@ -149,1 +138,0 @@\n-    sigaddset(&newset, SIGNALS[i]);\n@@ -151,1 +139,0 @@\n-  PosixSignals::unblock_thread_signal_mask(&newset);\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -31,7 +31,10 @@\n-#define RUNTIME_OS_FLAGS(develop,     \\\n-                         develop_pd,  \\\n-                         product,     \\\n-                         product_pd,  \\\n-                         notproduct,  \\\n-                         range,       \\\n-                         constraint)\n+#define RUNTIME_OS_FLAGS(develop,                                         \\\n+                         develop_pd,                                      \\\n+                         product,                                         \\\n+                         product_pd,                                      \\\n+                         notproduct,                                      \\\n+                         range,                                           \\\n+                         constraint)                                      \\\n+                                                                          \\\n+product(bool, UseOSErrorReporting, false,                                 \\\n+        \"Let VM fatal error propagate to the OS (ie. WER on Windows)\")\n@@ -41,1 +44,0 @@\n-\n@@ -48,1 +50,0 @@\n-define_pd_global(bool, UseOSErrorReporting, false);  \/\/ for now.\n","filename":"src\/hotspot\/os\/windows\/globals_windows.hpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2357,1 +2357,1 @@\n-  \/\/ If UseOsErrorReporting, this will return here and save the error file\n+  \/\/ If UseOSErrorReporting, this will return here and save the error file\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-  if (sig == SIGPIPE) {\n+  if (sig == SIGPIPE || sig == SIGXFSZ) {\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,0 @@\n-  int cpu_lines = 0;\n@@ -154,1 +153,0 @@\n-          cpu_lines++;\n@@ -171,1 +169,0 @@\n-  guarantee(cpu_lines == os::processor_count(), \"core count should be consistent\");\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-  if (sig == SIGPIPE) {\n+  if (sig == SIGPIPE || sig == SIGXFSZ) {\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-  if (sig == SIGPIPE) {\n+  if (sig == SIGPIPE || sig == SIGXFSZ) {\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/os_linux_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -243,1 +243,2 @@\n-  char buf[64];\n+  char buf[128];\n+  char exc_buf[32];\n@@ -245,1 +246,7 @@\n-  sprintf(buf, \"caught unhandled signal %d\", sig);\n+  if (os::exception_name(sig, exc_buf, sizeof(exc_buf))) {\n+    bool sent_by_kill = (info != NULL && os::signal_sent_by_kill(info));\n+    snprintf(buf, sizeof(buf), \"caught unhandled signal: %s %s\",\n+             exc_buf, sent_by_kill ? \"(sent by kill)\" : \"\");\n+  } else {\n+    snprintf(buf, sizeof(buf), \"caught unhandled signal: %d\", sig);\n+  }\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/os_linux_zero.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1153,4 +1153,3 @@\n-      \/\/ fprintf(fp, \"phase->eqv( \");\n-      \/\/ fprintf(fp, \"inst%d->in(%d+%d) \/* %s *\/, inst%d->in(%d+%d) \/* %s *\/\",\n-      \/\/         left_index,  left_op_base,  left_op_index,  left_op,\n-      \/\/         right_index, right_op_base, right_op_index, right_op );\n+      \/\/ fprintf(fp, \"(inst%d->_opnds[%d]->reg(ra_,inst%d%s)  \/* %d.%s *\/ == \/* %d.%s *\/ inst%d->_opnds[%d]->reg(ra_,inst%d%s)\",\n+      \/\/         left_index, left_op_index, left_index, left_reg_index, left_index, left_op\n+      \/\/         right_index, right_op, right_index, right_op_index, right_index, right_reg_index);\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -434,16 +434,0 @@\n-  \/\/ Bootstrapping aid to cope with delayed determination of constants.\n-  \/\/ Returns a static address which will eventually contain the constant.\n-  \/\/ The value zero (NULL) stands instead of a constant which is still uncomputed.\n-  \/\/ Thus, the eventual value of the constant must not be zero.\n-  \/\/ This is fine, since this is designed for embedding object field\n-  \/\/ offsets in code which must be generated before the object class is loaded.\n-  \/\/ Field offsets are never zero, since an object's header (mark word)\n-  \/\/ is located at offset zero.\n-  RegisterOrConstant delayed_value(int(*value_fn)(), Register tmp, int offset = 0);\n-  RegisterOrConstant delayed_value(address(*value_fn)(), Register tmp, int offset = 0);\n-  virtual RegisterOrConstant delayed_value_impl(intptr_t* delayed_value_addr, Register tmp, int offset) = 0;\n-  \/\/ Last overloading is platform-dependent; look in assembler_<arch>.cpp.\n-  static intptr_t* delayed_value_addr(int(*constant_fn)());\n-  static intptr_t* delayed_value_addr(address(*constant_fn)());\n-  static void update_delayed_values();\n-\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -338,0 +338,2 @@\n+  return data_from(data_layout);\n+}\n@@ -339,0 +341,1 @@\n+ciProfileData* ciMethodData::data_from(DataLayout* data_layout) {\n@@ -379,0 +382,10 @@\n+DataLayout* ciMethodData::next_data_layout(DataLayout* current) {\n+  int current_index = dp_to_di((address)current);\n+  int next_index = current_index + current->size_in_bytes();\n+  if (out_of_bounds(next_index)) {\n+    return NULL;\n+  }\n+  DataLayout* next = data_layout_at(next_index);\n+  return next;\n+}\n+\n@@ -416,6 +429,6 @@\n-    ciProfileData* data = data_before(bci);\n-    for ( ; is_valid(data); data = next_data(data)) {\n-      if (data->bci() == bci) {\n-        set_hint_di(dp_to_di(data->dp()));\n-        return data;\n-      } else if (data->bci() > bci) {\n+    DataLayout* data_layout = data_layout_before(bci);\n+    for ( ; is_valid(data_layout); data_layout = next_data_layout(data_layout)) {\n+      if (data_layout->bci() == bci) {\n+        set_hint_di(dp_to_di((address)data_layout));\n+        return data_from(data_layout);\n+      } else if (data_layout->bci() > bci) {\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -382,1 +382,1 @@\n-  \/\/ Cached hint for data_before()\n+  \/\/ Cached hint for data_layout_before()\n@@ -448,1 +448,2 @@\n-  ciProfileData* data_before(int bci) {\n+\n+  DataLayout* data_layout_before(int bci) {\n@@ -452,4 +453,4 @@\n-    int hint = hint_di();\n-    if (data_layout_at(hint)->bci() <= bci)\n-      return data_at(hint);\n-    return first_data();\n+    DataLayout* layout = data_layout_at(hint_di());\n+    if (layout->bci() <= bci)\n+      return layout;\n+    return data_layout_at(first_di());\n@@ -458,1 +459,0 @@\n-\n@@ -472,0 +472,1 @@\n+  ciProfileData* data_from(DataLayout* data_layout);\n@@ -522,0 +523,1 @@\n+  DataLayout* next_data_layout(DataLayout* current);\n@@ -523,0 +525,1 @@\n+  bool is_valid(DataLayout* current)    { return current != NULL; }\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.hpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-  \/\/ compile <klass> <name> <signature> <entry_bci> <comp_level> inline <count> <depth> <bci> <klass> <name> <signature> ...\n+  \/\/ compile <klass> <name> <signature> <entry_bci> <comp_level> inline <count> (<depth> <bci> <klass> <name> <signature>)*\n@@ -527,1 +527,1 @@\n-  \/\/ compile <klass> <name> <signature> <entry_bci> <comp_level> inline <count> <depth> <bci> <klass> <name> <signature> ...\n+  \/\/ compile <klass> <name> <signature> <entry_bci> <comp_level> inline <count> (<depth> <bci> <klass> <name> <signature>)*\n@@ -609,2 +609,0 @@\n-  \/\/\n-  \/\/\n@@ -622,1 +620,1 @@\n-  \/\/ ciMethodData <klass> <name> <signature> <state> <current mileage> orig <length> # # ... data <length> # # ... oops <length> # ... methods <length>\n+  \/\/ ciMethodData <klass> <name> <signature> <state> <current_mileage> orig <length> <byte>* data <length> <ptr>* oops <length> (<offset> <klass>)* methods <length> (<offset> <klass> <name> <signature>)*\n@@ -697,1 +695,1 @@\n-  \/\/ ciInstanceKlass <name> <is_linked> <is_initialized> <length> tag # # # ...\n+  \/\/ ciInstanceKlass <name> <is_linked> <is_initialized> <length> tag*\n@@ -792,0 +790,2 @@\n+  \/\/ staticfield <klass> <name> <signature> <value>\n+  \/\/\n@@ -795,1 +795,1 @@\n-  \/\/ initiailizer.\n+  \/\/ initializer.\n@@ -909,0 +909,1 @@\n+  \/\/ JvmtiExport <field> <value>\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -3904,3 +3904,10 @@\n-        } else if (_major_version >= JAVA_15_VERSION) {\n-          \/\/ Check for PermittedSubclasses tag\n-          if (tag == vmSymbols::tag_permitted_subclasses()) {\n+        } else if (_major_version >= JAVA_16_VERSION) {\n+          if (tag == vmSymbols::tag_record()) {\n+            if (parsed_record_attribute) {\n+              classfile_parse_error(\"Multiple Record attributes in class file %s\", THREAD);\n+              return;\n+            }\n+            parsed_record_attribute = true;\n+            record_attribute_start = cfs->current();\n+            record_attribute_length = attribute_length;\n+          } else if (tag == vmSymbols::tag_permitted_subclasses()) {\n@@ -3921,16 +3928,0 @@\n-            cfs->skip_u1(attribute_length, CHECK);\n-\n-          } else if (_major_version >= JAVA_16_VERSION) {\n-            if (tag == vmSymbols::tag_record()) {\n-              if (parsed_record_attribute) {\n-                classfile_parse_error(\"Multiple Record attributes in class file %s\", THREAD);\n-                return;\n-              }\n-              parsed_record_attribute = true;\n-              record_attribute_start = cfs->current();\n-              record_attribute_length = attribute_length;\n-              }\n-            cfs->skip_u1(attribute_length, CHECK);\n-          } else {\n-            \/\/ Unknown attribute\n-            cfs->skip_u1(attribute_length, CHECK);\n@@ -3938,0 +3929,2 @@\n+          \/\/ Skip attribute_length for any attribute where major_verson >= JAVA_16_VERSION\n+          cfs->skip_u1(attribute_length, CHECK);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":12,"deletions":19,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"memory\/archiveUtils.hpp\"\n@@ -118,7 +119,0 @@\n-    \/\/ Check if the line is output TRACE_RESOLVE\n-    if (strncmp(_line, LambdaFormInvokers::lambda_form_invoker_tag(),\n-                strlen(LambdaFormInvokers::lambda_form_invoker_tag())) == 0) {\n-      LambdaFormInvokers::append(os::strdup((const char*)_line, mtInternal));\n-      continue;\n-    }\n-\n@@ -136,0 +130,1 @@\n+  _lambda_form_line = false;\n@@ -188,2 +183,2 @@\n-void ClassListParser::split_tokens_by_whitespace() {\n-  int start = 0;\n+void ClassListParser::split_tokens_by_whitespace(int offset) {\n+  int start = offset;\n@@ -206,0 +201,12 @@\n+int ClassListParser::split_at_tag_from_line() {\n+  _token = _line;\n+  char* ptr;\n+  if ((ptr = strchr(_line, ' ')) == NULL) {\n+    error(\"Too few items following the @ tag \\\"%s\\\" line #%d\", _line, _line_no);\n+    return 0;\n+  }\n+  *ptr++ = '\\0';\n+  while (*ptr == ' ' || *ptr == '\\t') ptr++;\n+  return (int)(ptr - _line);\n+}\n+\n@@ -208,4 +215,9 @@\n-  split_tokens_by_whitespace();\n-  if (strcmp(_indy_items->at(0), LAMBDA_PROXY_TAG) == 0) {\n-    if (_indy_items->length() < 3) {\n-      error(\"Line with @ tag has too few items \\\"%s\\\" line #%d\", _line, _line_no);\n+  int offset;\n+  if ((offset = split_at_tag_from_line()) == 0) {\n+    return false;\n+  }\n+\n+  if (strcmp(_token, LAMBDA_PROXY_TAG) == 0) {\n+    split_tokens_by_whitespace(offset);\n+    if (_indy_items->length() < 2) {\n+      error(\"Line with @ tag has too few items \\\"%s\\\" line #%d\", _token, _line_no);\n@@ -215,1 +227,5 @@\n-    _class_name = _indy_items->at(1);\n+    _class_name = _indy_items->at(0);\n+    return true;\n+  } else if (strcmp(_token, LAMBDA_FORM_TAG) == 0) {\n+    LambdaFormInvokers::append(os::strdup((const char*)(_line + offset), mtInternal));\n+    _lambda_form_line = true;\n@@ -218,1 +234,1 @@\n-    error(\"Invalid @ tag at the beginning of line \\\"%s\\\" line #%d\", _line, _line_no);\n+    error(\"Invalid @ tag at the beginning of line \\\"%s\\\" line #%d\", _token, _line_no);\n@@ -435,1 +451,1 @@\n-  int indy_info_offset = 2;\n+  int indy_info_offset = 1;\n@@ -448,1 +464,0 @@\n-\n@@ -469,2 +484,2 @@\n-           tty->print_cr(\"is_supported_invokedynamic check failed for cp_index %d\", pool_index);\n-           continue;\n+          log_debug(cds, lambda)(\"is_supported_invokedynamic check failed for cp_index %d\", pool_index);\n+          continue;\n@@ -560,0 +575,1 @@\n+        ArchiveUtils::check_for_oom(PENDING_EXCEPTION); \/\/ exit on OOM\n@@ -570,0 +586,2 @@\n+          } else {\n+            ArchiveUtils::check_for_oom(PENDING_EXCEPTION); \/\/ exit on OOM\n@@ -578,0 +596,3 @@\n+    if (HAS_PENDING_EXCEPTION) {\n+      ArchiveUtils::check_for_oom(PENDING_EXCEPTION); \/\/ exit on OOM\n+    }\n","filename":"src\/hotspot\/share\/classfile\/classListParser.cpp","additions":40,"deletions":19,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -33,1 +33,2 @@\n-#define LAMBDA_PROXY_TAG \"@lambda-proxy:\"\n+#define LAMBDA_PROXY_TAG \"@lambda-proxy\"\n+#define LAMBDA_FORM_TAG  \"@lambda-form-invoker\"\n@@ -102,0 +103,1 @@\n+  bool                _lambda_form_line;\n@@ -123,1 +125,2 @@\n-  void split_tokens_by_whitespace();\n+  void split_tokens_by_whitespace(int offset);\n+  int split_at_tag_from_line();\n@@ -165,0 +168,2 @@\n+  bool lambda_form_line() { return _lambda_form_line; }\n+\n","filename":"src\/hotspot\/share\/classfile\/classListParser.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -326,0 +326,2 @@\n+  static int component_mirror_offset() { return _component_mirror_offset; }\n+\n@@ -906,2 +908,3 @@\n-  static inline oop referent(oop ref);\n-  static inline void set_referent(oop ref, oop value);\n+  static inline oop weak_referent_no_keepalive(oop ref);\n+  static inline oop phantom_referent_no_keepalive(oop ref);\n+  static inline oop unknown_referent_no_keepalive(oop ref);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -103,2 +103,7 @@\n-oop java_lang_ref_Reference::referent(oop ref) {\n-  return ref->obj_field(_referent_offset);\n+\n+oop java_lang_ref_Reference::weak_referent_no_keepalive(oop ref) {\n+  return ref->obj_field_access<ON_WEAK_OOP_REF | AS_NO_KEEPALIVE>(_referent_offset);\n+}\n+\n+oop java_lang_ref_Reference::phantom_referent_no_keepalive(oop ref) {\n+  return ref->obj_field_access<ON_PHANTOM_OOP_REF | AS_NO_KEEPALIVE>(_referent_offset);\n@@ -107,2 +112,2 @@\n-void java_lang_ref_Reference::set_referent(oop ref, oop value) {\n-  ref->obj_field_put(_referent_offset, value);\n+oop java_lang_ref_Reference::unknown_referent_no_keepalive(oop ref) {\n+  return ref->obj_field_access<ON_UNKNOWN_OOP_REF | AS_NO_KEEPALIVE>(_referent_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -69,3 +69,1 @@\n-    char* record = _lambdaform_lines->at(i);\n-    record += strlen(lambda_form_invoker_tag()) + 1; \/\/ skip the @lambda_form_invoker prefix\n-    Handle h_line = java_lang_String::create_from_str(record, CHECK);\n+    Handle h_line = java_lang_String::create_from_str(_lambdaform_lines->at(i), CHECK);\n@@ -152,1 +150,1 @@\n-  log_info(cds)(\"Replaced class %s, old: %p  new: %p\", name, klass, result);\n+  log_info(cds, lambda)(\"Replaced class %s, old: %p  new: %p\", name, klass, result);\n","filename":"src\/hotspot\/share\/classfile\/lambdaFormInvokers.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,4 +45,0 @@\n-\n-  static const char* lambda_form_invoker_tag() {\n-    return \"@lambda-form-invoker\";\n-  }\n","filename":"src\/hotspot\/share\/classfile\/lambdaFormInvokers.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"logging\/logStream.hpp\"\n@@ -1927,0 +1928,1 @@\n+  LogTarget(Debug, cds, lambda) log;\n@@ -1928,3 +1930,4 @@\n-    DEBUG_ONLY(\n-      tty->print_cr(\"bsi check failed\");\n-      tty->print_cr(\"    bsi->arg_values().not_null() %d\", bsi->arg_values().not_null());\n+    if (log.is_enabled()) {\n+      LogStream log_stream(log);\n+      log.print(\"bsi check failed\");\n+      log.print(\"    bsi->arg_values().not_null() %d\", bsi->arg_values().not_null());\n@@ -1932,2 +1935,2 @@\n-        tty->print_cr(\"    bsi->arg_values()->is_objArray() %d\", bsi->arg_values()->is_objArray());\n-        bsi->print();\n+        log.print(\"    bsi->arg_values()->is_objArray() %d\", bsi->arg_values()->is_objArray());\n+        bsi->print_msg_on(&log_stream);\n@@ -1935,1 +1938,1 @@\n-    )\n+    }\n@@ -1941,4 +1944,4 @@\n-    DEBUG_ONLY(\n-      tty->print_cr(\"bsm check failed\");\n-      tty->print_cr(\"    bsm.is_null() %d\", bsm.is_null());\n-      tty->print_cr(\"    java_lang_invoke_DirectMethodHandle::is_instance(bsm()) %d\",\n+    if (log.is_enabled()) {\n+      log.print(\"bsm check failed\");\n+      log.print(\"    bsm.is_null() %d\", bsm.is_null());\n+      log.print(\"    java_lang_invoke_DirectMethodHandle::is_instance(bsm()) %d\",\n@@ -1946,1 +1949,1 @@\n-    )\n+    }\n@@ -1957,1 +1960,1 @@\n-    DEBUG_ONLY(\n+    if (log.is_enabled()) {\n@@ -1959,5 +1962,5 @@\n-      tty->print_cr(\"method check failed\");\n-      tty->print_cr(\"    klass_name() %s\", method->klass_name()->as_C_string());\n-      tty->print_cr(\"    name() %s\", method->name()->as_C_string());\n-      tty->print_cr(\"    signature() %s\", method->signature()->as_C_string());\n-    )\n+      log.print(\"method check failed\");\n+      log.print(\"    klass_name() %s\", method->klass_name()->as_C_string());\n+      log.print(\"    name() %s\", method->name()->as_C_string());\n+      log.print(\"    signature() %s\", method->signature()->as_C_string());\n+    }\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -1564,0 +1564,28 @@\n+#ifdef LINUX\n+void CodeCache::write_perf_map() {\n+  MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n+\n+  \/\/ Perf expects to find the map file at \/tmp\/perf-<pid>.map.\n+  char fname[32];\n+  jio_snprintf(fname, sizeof(fname), \"\/tmp\/perf-%d.map\", os::current_process_id());\n+\n+  fileStream fs(fname, \"w\");\n+  if (!fs.is_open()) {\n+    log_warning(codecache)(\"Failed to create %s for perf map\", fname);\n+    return;\n+  }\n+\n+  AllCodeBlobsIterator iter(AllCodeBlobsIterator::only_alive_and_not_unloading);\n+  while (iter.next()) {\n+    CodeBlob *cb = iter.method();\n+    ResourceMark rm;\n+    const char* method_name =\n+      cb->is_compiled() ? cb->as_compiled_method()->method()->external_name()\n+                        : cb->name();\n+    fs.print_cr(INTPTR_FORMAT \" \" INTPTR_FORMAT \" %s\",\n+                (intptr_t)cb->code_begin(), (intptr_t)cb->code_size(),\n+                method_name);\n+  }\n+}\n+#endif \/\/ LINUX\n+\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -194,0 +194,1 @@\n+  LINUX_ONLY(static void write_perf_map();)\n@@ -412,0 +413,5 @@\n+struct AllCodeBlobsFilter {\n+  static bool apply(CodeBlob* cb) { return true; }\n+  static const GrowableArray<CodeHeap*>* heaps() { return CodeCache::heaps(); }\n+};\n+\n@@ -414,0 +420,1 @@\n+typedef CodeBlobIterator<CodeBlob, AllCodeBlobsFilter> AllCodeBlobsIterator;\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2440,0 +2440,1 @@\n+  size_t heap_used = Heap_lock->owned_by_self() ? used() : used_unlocked();\n@@ -2443,1 +2444,1 @@\n-              capacity()\/K, used_unlocked()\/K);\n+              capacity()\/K, heap_used\/K);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"classfile\/javaClasses.inline.hpp\"\n@@ -60,1 +61,2 @@\n-  if (G1StringDedup::is_enabled()) {\n+  if (G1StringDedup::is_enabled() &&\n+      java_lang_String::is_instance_inlined(obj)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"classfile\/systemDictionary.hpp\"\n@@ -78,0 +79,3 @@\n+    _string_klass_or_null(G1StringDedup::is_enabled()\n+                          ? SystemDictionary::String_klass()\n+                          : nullptr),\n@@ -82,0 +86,4 @@\n+  \/\/ Verify klass comparison with _string_klass_or_null is sufficient\n+  \/\/ to determine whether dedup is enabled and the object is a String.\n+  assert(SystemDictionary::String_klass()->is_final(), \"precondition\");\n+\n@@ -513,1 +521,4 @@\n-    if (G1StringDedup::is_enabled()) {\n+    \/\/ StringDedup::is_enabled() and java_lang_String::is_instance_inline\n+    \/\/ test of the obj, combined into a single comparison, using the klass\n+    \/\/ already in hand and avoiding the null check in is_instance.\n+    if (klass == _string_klass_or_null) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+class Klass;\n@@ -86,0 +87,2 @@\n+  \/\/ Used to check whether string dedup should be applied to an object.\n+  Klass* _string_klass_or_null;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,10 +39,3 @@\n-G1ServiceThread::G1ServiceThread() :\n-    ConcurrentGCThread(),\n-    _monitor(Mutex::nonleaf,\n-             \"G1ServiceThread monitor\",\n-             true,\n-             Monitor::_safepoint_check_never),\n-    _last_periodic_gc_attempt_s(os::elapsedTime()),\n-    _vtime_accum(0) {\n-  set_name(\"G1 Service\");\n-  create_and_start();\n+G1SentinelTask::G1SentinelTask() : G1ServiceTask(\"Sentinel Task\") {\n+  set_time(max_jlong);\n+  set_next(this);\n@@ -51,6 +44,2 @@\n-void G1ServiceThread::sleep_before_next_cycle() {\n-  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n-  if (!should_terminate()) {\n-    uintx waitms = G1ConcRefinementServiceIntervalMillis;\n-    ml.wait(waitms);\n-  }\n+void G1SentinelTask::execute() {\n+  guarantee(false, \"Sentinel service task should never be executed.\");\n@@ -59,7 +48,9 @@\n-bool G1ServiceThread::should_start_periodic_gc() {\n-  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n-  \/\/ If we are currently in a concurrent mark we are going to uncommit memory soon.\n-  if (g1h->concurrent_mark()->cm_thread()->in_progress()) {\n-    log_debug(gc, periodic)(\"Concurrent cycle in progress. Skipping.\");\n-    return false;\n-  }\n+\/\/ Task handling periodic GCs\n+class G1PeriodicGCTask : public G1ServiceTask {\n+  bool should_start_periodic_gc() {\n+    G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+    \/\/ If we are currently in a concurrent mark we are going to uncommit memory soon.\n+    if (g1h->concurrent_mark()->cm_thread()->in_progress()) {\n+      log_debug(gc, periodic)(\"Concurrent cycle in progress. Skipping.\");\n+      return false;\n+    }\n@@ -67,7 +58,7 @@\n-  \/\/ Check if enough time has passed since the last GC.\n-  uintx time_since_last_gc = (uintx)g1h->time_since_last_collection().milliseconds();\n-  if ((time_since_last_gc < G1PeriodicGCInterval)) {\n-    log_debug(gc, periodic)(\"Last GC occurred \" UINTX_FORMAT \"ms before which is below threshold \" UINTX_FORMAT \"ms. Skipping.\",\n-                            time_since_last_gc, G1PeriodicGCInterval);\n-    return false;\n-  }\n+    \/\/ Check if enough time has passed since the last GC.\n+    uintx time_since_last_gc = (uintx)g1h->time_since_last_collection().milliseconds();\n+    if ((time_since_last_gc < G1PeriodicGCInterval)) {\n+      log_debug(gc, periodic)(\"Last GC occurred \" UINTX_FORMAT \"ms before which is below threshold \" UINTX_FORMAT \"ms. Skipping.\",\n+                              time_since_last_gc, G1PeriodicGCInterval);\n+      return false;\n+    }\n@@ -75,7 +66,9 @@\n-  \/\/ Check if load is lower than max.\n-  double recent_load;\n-  if ((G1PeriodicGCSystemLoadThreshold > 0.0f) &&\n-      (os::loadavg(&recent_load, 1) == -1 || recent_load > G1PeriodicGCSystemLoadThreshold)) {\n-    log_debug(gc, periodic)(\"Load %1.2f is higher than threshold %1.2f. Skipping.\",\n-                            recent_load, G1PeriodicGCSystemLoadThreshold);\n-    return false;\n+    \/\/ Check if load is lower than max.\n+    double recent_load;\n+    if ((G1PeriodicGCSystemLoadThreshold > 0.0f) &&\n+        (os::loadavg(&recent_load, 1) == -1 || recent_load > G1PeriodicGCSystemLoadThreshold)) {\n+      log_debug(gc, periodic)(\"Load %1.2f is higher than threshold %1.2f. Skipping.\",\n+                              recent_load, G1PeriodicGCSystemLoadThreshold);\n+      return false;\n+    }\n+    return true;\n@@ -84,2 +77,5 @@\n-  return true;\n-}\n+  void check_for_periodic_gc(){\n+    \/\/ If disabled, just return.\n+    if (G1PeriodicGCInterval == 0) {\n+      return;\n+    }\n@@ -87,6 +83,0 @@\n-void G1ServiceThread::check_for_periodic_gc(){\n-  \/\/ If disabled, just return.\n-  if (G1PeriodicGCInterval == 0) {\n-    return;\n-  }\n-  if ((os::elapsedTime() - _last_periodic_gc_attempt_s) > (G1PeriodicGCInterval \/ 1000.0)) {\n@@ -99,1 +89,0 @@\n-    _last_periodic_gc_attempt_s = os::elapsedTime();\n@@ -101,13 +90,2 @@\n-}\n-\n-void G1ServiceThread::run_service() {\n-  double vtime_start = os::elapsedVTime();\n-\n-  while (!should_terminate()) {\n-    sample_young_list_rs_length();\n-\n-    if (os::supports_vtime()) {\n-      _vtime_accum = (os::elapsedVTime() - vtime_start);\n-    } else {\n-      _vtime_accum = 0.0;\n-    }\n+public:\n+  G1PeriodicGCTask(const char* name) : G1ServiceTask(name) { }\n@@ -115,0 +93,1 @@\n+  virtual void execute() {\n@@ -116,2 +95,5 @@\n-\n-    sleep_before_next_cycle();\n+    \/\/ G1PeriodicGCInterval is a manageable flag and can be updated\n+    \/\/ during runtime. If no value is set, wait a second and run it\n+    \/\/ again to see if the value has been updated. Otherwise use the\n+    \/\/ real value provided.\n+    schedule(G1PeriodicGCInterval == 0 ? 1000 : G1PeriodicGCInterval);\n@@ -119,6 +101,1 @@\n-}\n-\n-void G1ServiceThread::stop_service() {\n-  MutexLocker x(&_monitor, Mutex::_no_safepoint_check_flag);\n-  _monitor.notify();\n-}\n+};\n@@ -158,4 +135,77 @@\n-void G1ServiceThread::sample_young_list_rs_length() {\n-  SuspendibleThreadSetJoiner sts;\n-  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n-  G1Policy* policy = g1h->policy();\n+\/\/ Task handling young gen remembered set sampling.\n+class G1RemSetSamplingTask : public G1ServiceTask {\n+  \/\/ Sample the current length of remembered sets for young.\n+  \/\/\n+  \/\/ At the end of the GC G1 determines the length of the young gen based on\n+  \/\/ how much time the next GC can take, and when the next GC may occur\n+  \/\/ according to the MMU.\n+  \/\/\n+  \/\/ The assumption is that a significant part of the GC is spent on scanning\n+  \/\/ the remembered sets (and many other components), so this thread constantly\n+  \/\/ reevaluates the prediction for the remembered set scanning costs, and potentially\n+  \/\/ G1Policy resizes the young gen. This may do a premature GC or even\n+  \/\/ increase the young gen size to keep pause time length goal.\n+  void sample_young_list_rs_length(){\n+    SuspendibleThreadSetJoiner sts;\n+    G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+    G1Policy* policy = g1h->policy();\n+\n+    if (policy->use_adaptive_young_list_length()) {\n+      G1YoungRemSetSamplingClosure cl(&sts);\n+\n+      G1CollectionSet* g1cs = g1h->collection_set();\n+      g1cs->iterate(&cl);\n+\n+      if (cl.is_complete()) {\n+        policy->revise_young_list_target_length_if_necessary(cl.sampled_rs_length());\n+      }\n+    }\n+  }\n+public:\n+  G1RemSetSamplingTask(const char* name) : G1ServiceTask(name) { }\n+  virtual void execute() {\n+    sample_young_list_rs_length();\n+    schedule(G1ConcRefinementServiceIntervalMillis);\n+  }\n+};\n+\n+G1ServiceThread::G1ServiceThread() :\n+    ConcurrentGCThread(),\n+    _monitor(Mutex::nonleaf,\n+             \"G1ServiceThread monitor\",\n+             true,\n+             Monitor::_safepoint_check_never),\n+    _task_queue(),\n+    _vtime_accum(0) {\n+  set_name(\"G1 Service\");\n+  create_and_start();\n+}\n+\n+void G1ServiceThread::register_task(G1ServiceTask* task, jlong delay) {\n+  guarantee(!task->is_registered(), \"Task already registered\");\n+  guarantee(task->next() == NULL, \"Task already in queue\");\n+\n+  log_debug(gc, task)(\"G1 Service Thread (%s) (register)\", task->name());\n+\n+  \/\/ Associate the task with the service thread.\n+  task->set_service_thread(this);\n+\n+  \/\/ Schedule the task to run after the given delay.\n+  schedule_task(task, delay);\n+\n+  \/\/ Notify the service thread that there is a new task, thread might\n+  \/\/ be waiting and the newly added task might be first in the list.\n+  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  ml.notify();\n+}\n+\n+void G1ServiceThread::schedule_task(G1ServiceTask* task, jlong delay_ms) {\n+  guarantee(task->is_registered(), \"Must be registered before scheduled\");\n+  guarantee(task->next() == NULL, \"Task already in queue\");\n+\n+  \/\/ Schedule task by setting the task time and adding it to queue.\n+  jlong delay = TimeHelper::millis_to_counter(delay_ms);\n+  task->set_time(os::elapsed_counter() + delay);\n+\n+  MutexLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  _task_queue.add_ordered(task);\n@@ -163,2 +213,45 @@\n-  if (policy->use_adaptive_young_list_length()) {\n-    G1YoungRemSetSamplingClosure cl(&sts);\n+  log_trace(gc, task)(\"G1 Service Thread (%s) (schedule) @%1.3fs\",\n+                      task->name(), TimeHelper::counter_to_seconds(task->time()));\n+}\n+\n+int64_t G1ServiceThread::time_to_next_task_ms() {\n+  assert(_monitor.owned_by_self(), \"Must be owner of lock\");\n+  assert(!_task_queue.is_empty(), \"Should not be called for empty list\");\n+\n+  jlong time_diff = _task_queue.peek()->time() - os::elapsed_counter();\n+  if (time_diff < 0) {\n+    \/\/ Run without sleeping.\n+    return 0;\n+  }\n+\n+  \/\/ Return sleep time in milliseconds.\n+  return (int64_t) TimeHelper::counter_to_millis(time_diff);\n+}\n+\n+void G1ServiceThread::sleep_before_next_cycle() {\n+  if (should_terminate()) {\n+    return;\n+  }\n+\n+  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  if (_task_queue.is_empty()) {\n+    \/\/ Sleep until new task is registered if no tasks available.\n+    log_trace(gc, task)(\"G1 Service Thread (wait for new tasks)\");\n+    ml.wait(0);\n+  } else {\n+    int64_t sleep_ms = time_to_next_task_ms();\n+    if (sleep_ms > 0) {\n+      log_trace(gc, task)(\"G1 Service Thread (wait) %1.3fs\", sleep_ms \/ 1000.0);\n+      ml.wait(sleep_ms);\n+    }\n+  }\n+}\n+\n+G1ServiceTask* G1ServiceThread::pop_due_task() {\n+  MutexLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  if (_task_queue.is_empty() || time_to_next_task_ms() != 0) {\n+    return NULL;\n+  }\n+\n+  return _task_queue.pop();\n+}\n@@ -166,2 +259,3 @@\n-    G1CollectionSet* g1cs = g1h->collection_set();\n-    g1cs->iterate(&cl);\n+void G1ServiceThread::run_task(G1ServiceTask* task) {\n+  double start = os::elapsedTime();\n+  double vstart = os::elapsedVTime();\n@@ -169,2 +263,24 @@\n-    if (cl.is_complete()) {\n-      policy->revise_young_list_target_length_if_necessary(cl.sampled_rs_length());\n+  log_debug(gc, task, start)(\"G1 Service Thread (%s) (run)\", task->name());\n+  task->execute();\n+\n+  double duration = os::elapsedTime() - start;\n+  double vduration = os::elapsedVTime() - vstart;\n+  log_debug(gc, task)(\"G1 Service Thread (%s) (run) %1.3fms (cpu: %1.3fms)\",\n+                      task->name(), duration * MILLIUNITS, vduration * MILLIUNITS);\n+}\n+\n+void G1ServiceThread::run_service() {\n+  double vtime_start = os::elapsedVTime();\n+\n+  \/\/ Setup the tasks handeled by the service thread and\n+  \/\/ add them to the task list.\n+  G1PeriodicGCTask gc_task(\"Periodic GC Task\");\n+  register_task(&gc_task);\n+\n+  G1RemSetSamplingTask remset_task(\"Remembered Set Sampling Task\");\n+  register_task(&remset_task);\n+\n+  while (!should_terminate()) {\n+    G1ServiceTask* task = pop_due_task();\n+    if (task != NULL) {\n+      run_task(task);\n@@ -172,0 +288,106 @@\n+\n+    if (os::supports_vtime()) {\n+      _vtime_accum = (os::elapsedVTime() - vtime_start);\n+    } else {\n+      _vtime_accum = 0.0;\n+    }\n+    sleep_before_next_cycle();\n+  }\n+}\n+\n+void G1ServiceThread::stop_service() {\n+  MonitorLocker ml(&_monitor, Mutex::_no_safepoint_check_flag);\n+  ml.notify();\n+}\n+\n+G1ServiceTask::G1ServiceTask(const char* name) :\n+  _time(),\n+  _name(name),\n+  _next(NULL),\n+  _service_thread(NULL) { }\n+\n+void G1ServiceTask::set_service_thread(G1ServiceThread* thread) {\n+  _service_thread = thread;\n+}\n+\n+bool G1ServiceTask::is_registered() {\n+  return _service_thread != NULL;\n+}\n+\n+void G1ServiceTask::schedule(jlong delay_ms) {\n+  _service_thread->schedule_task(this, delay_ms);\n+}\n+\n+const char* G1ServiceTask::name() {\n+  return _name;\n+}\n+\n+void G1ServiceTask::set_time(jlong time) {\n+  assert(_next == NULL, \"Not allowed to update time while in queue\");\n+  _time = time;\n+}\n+\n+jlong G1ServiceTask::time() {\n+  return _time;\n+}\n+\n+void G1ServiceTask::set_next(G1ServiceTask* next) {\n+  _next = next;\n+}\n+\n+G1ServiceTask* G1ServiceTask::next() {\n+  return _next;\n+}\n+\n+G1ServiceTaskQueue::G1ServiceTaskQueue() : _sentinel() { }\n+\n+G1ServiceTask* G1ServiceTaskQueue::pop() {\n+  verify_task_queue();\n+\n+  G1ServiceTask* task = _sentinel.next();\n+  _sentinel.set_next(task->next());\n+  task->set_next(NULL);\n+\n+  return task;\n+}\n+\n+G1ServiceTask* G1ServiceTaskQueue::peek() {\n+  verify_task_queue();\n+  return _sentinel.next();\n+}\n+\n+bool G1ServiceTaskQueue::is_empty() {\n+  return &_sentinel == _sentinel.next();\n+}\n+\n+void G1ServiceTaskQueue::add_ordered(G1ServiceTask* task) {\n+  assert(task != NULL, \"not a valid task\");\n+  assert(task->next() == NULL, \"invariant\");\n+  assert(task->time() != max_jlong, \"invalid time for task\");\n+\n+  G1ServiceTask* current = &_sentinel;\n+  while (task->time() >= current->next()->time()) {\n+    assert(task != current, \"Task should only be added once.\");\n+    current = current->next();\n+  }\n+\n+  \/\/ Update the links.\n+  task->set_next(current->next());\n+  current->set_next(task);\n+\n+  verify_task_queue();\n+}\n+\n+#ifdef ASSERT\n+void G1ServiceTaskQueue::verify_task_queue() {\n+  G1ServiceTask* cur = _sentinel.next();\n+\n+  assert(cur != &_sentinel, \"Should never try to verify empty queue\");\n+  while (cur != &_sentinel) {\n+    G1ServiceTask* next = cur->next();\n+    assert(cur->time() <= next->time(),\n+           \"Tasks out of order, prev: %s (%1.3fs), next: %s (%1.3fs)\",\n+           cur->name(), TimeHelper::counter_to_seconds(cur->time()), next->name(), TimeHelper::counter_to_seconds(next->time()));\n+\n+    assert(cur != next, \"Invariant\");\n+    cur = next;\n@@ -174,0 +396,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.cpp","additions":300,"deletions":77,"binary":false,"changes":377,"status":"modified"},{"patch":"@@ -31,0 +31,64 @@\n+class G1ServiceTaskQueue;\n+class G1ServiceThread;\n+\n+class G1ServiceTask : public CHeapObj<mtGC> {\n+  friend class G1ServiceTaskQueue;\n+  friend class G1ServiceThread;\n+\n+  \/\/ The next absolute time this task should be executed.\n+  jlong _time;\n+  \/\/ Name of the task.\n+  const char* _name;\n+  \/\/ Next task in the task queue.\n+  G1ServiceTask* _next;\n+  \/\/ The service thread this task is registered with.\n+  G1ServiceThread* _service_thread;\n+\n+  void set_service_thread(G1ServiceThread* thread);\n+  bool is_registered();\n+\n+public:\n+  G1ServiceTask(const char* name);\n+\n+  jlong time();\n+  const char* name();\n+  G1ServiceTask* next();\n+\n+  \/\/ Do the actual work for the task. To get added back to the\n+  \/\/ execution queue a task can call schedule(delay_ms).\n+  virtual void execute() = 0;\n+\n+protected:\n+  \/\/ Schedule the task on the associated service thread\n+  \/\/ using the provided delay in milliseconds.\n+  void schedule(jlong delay_ms);\n+\n+  \/\/ These setters are protected for use by testing and the\n+  \/\/ sentinel task only.\n+  void set_time(jlong time);\n+  void set_next(G1ServiceTask* next);\n+};\n+\n+class G1SentinelTask : public G1ServiceTask {\n+public:\n+  G1SentinelTask();\n+  virtual void execute();\n+};\n+\n+class G1ServiceTaskQueue {\n+  \/\/ The sentinel task is the entry point of this priority queue holding the\n+  \/\/ service tasks. The queue is ordered by the time the tasks are scheduled\n+  \/\/ to run. To simplify list management the sentinel task has its time set\n+  \/\/ to max_jlong, guaranteeing it to be the last task in the queue.\n+  G1SentinelTask _sentinel;\n+\n+  \/\/ Verify that the queue is ordered.\n+  void verify_task_queue() NOT_DEBUG_RETURN;\n+public:\n+  G1ServiceTaskQueue();\n+  G1ServiceTask* pop();\n+  G1ServiceTask* peek();\n+  void add_ordered(G1ServiceTask* task);\n+  bool is_empty();\n+};\n+\n@@ -36,1 +100,3 @@\n-private:\n+  friend class G1ServiceTask;\n+  \/\/ The monitor is used to ensure thread safety for the task queue\n+  \/\/ and allow other threads to signal the service thread to wake up.\n@@ -38,2 +104,1 @@\n-\n-  double _last_periodic_gc_attempt_s;\n+  G1ServiceTaskQueue _task_queue;\n@@ -43,13 +108,0 @@\n-  \/\/ Sample the current length of remembered sets for young.\n-  \/\/\n-  \/\/ At the end of the GC G1 determines the length of the young gen based on\n-  \/\/ how much time the next GC can take, and when the next GC may occur\n-  \/\/ according to the MMU.\n-  \/\/\n-  \/\/ The assumption is that a significant part of the GC is spent on scanning\n-  \/\/ the remembered sets (and many other components), so this thread constantly\n-  \/\/ reevaluates the prediction for the remembered set scanning costs, and potentially\n-  \/\/ G1Policy resizes the young gen. This may do a premature GC or even\n-  \/\/ increase the young gen size to keep pause time length goal.\n-  void sample_young_list_rs_length();\n-\n@@ -57,2 +109,0 @@\n-  void check_for_periodic_gc();\n-\n@@ -61,0 +111,4 @@\n+  \/\/ Returns the time in milliseconds until the next task is due.\n+  \/\/ Used both to determine if there are tasks ready to run and\n+  \/\/ how long to sleep when nothing is ready.\n+  int64_t time_to_next_task_ms();\n@@ -63,1 +117,5 @@\n-  bool should_start_periodic_gc();\n+  G1ServiceTask* pop_due_task();\n+  void run_task(G1ServiceTask* task);\n+\n+  \/\/ Schedule a registered task to run after the given delay.\n+  void schedule_task(G1ServiceTask* task, jlong delay);\n@@ -68,0 +126,3 @@\n+  \/\/ Register a task with the service thread and schedule it. If\n+  \/\/ no delay is specified the task is scheduled to run directly.\n+  void register_task(G1ServiceTask* task, jlong delay = 0);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.hpp","additions":80,"deletions":19,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,12 +44,5 @@\n-  if (java_lang_String::is_instance_inlined(obj)) {\n-    bool from_young = G1CollectedHeap::heap()->heap_region_containing(obj)->is_young();\n-    if (from_young && obj->age() < StringDeduplicationAgeThreshold) {\n-      \/\/ Candidate found. String is being evacuated from young to old but has not\n-      \/\/ reached the deduplication age threshold, i.e. has not previously been a\n-      \/\/ candidate during its life in the young generation.\n-      return true;\n-    }\n-  }\n-\n-  \/\/ Not a candidate\n-  return false;\n+  bool from_young = G1CollectedHeap::heap()->heap_region_containing(obj)->is_young();\n+  \/\/ Candidate if string is being evacuated from young to old but has not\n+  \/\/ reached the deduplication age threshold, i.e. has not previously been a\n+  \/\/ candidate during its life in the young generation.\n+  return from_young && (obj->age() < StringDeduplicationAgeThreshold);\n@@ -60,0 +53,1 @@\n+  assert(java_lang_String::is_instance(java_string), \"not a String\");\n@@ -66,1 +60,1 @@\n-  if (from_young && java_lang_String::is_instance_inlined(obj)) {\n+  if (from_young) {\n@@ -86,0 +80,1 @@\n+  assert(java_lang_String::is_instance(java_string), \"not a String\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1StringDedup.cpp","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -68,2 +68,2 @@\n-  static bool is_candidate_from_mark(oop obj);\n-  static bool is_candidate_from_evacuation(bool from_young, bool to_young, oop obj);\n+  static bool is_candidate_from_mark(oop java_string);\n+  static bool is_candidate_from_evacuation(bool from_young, bool to_young, oop java_string);\n@@ -78,0 +78,1 @@\n+  \/\/ Precondition for both is that java_string is a String.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1StringDedup.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -542,0 +542,65 @@\n+\/\/ The HeapBlockClaimer is used during parallel iteration over the heap,\n+\/\/ allowing workers to claim heap areas (\"blocks\"), gaining exclusive rights to these.\n+\/\/ The eden and survivor spaces are treated as single blocks as it is hard to divide\n+\/\/ these spaces.\n+\/\/ The old space is divided into fixed-size blocks.\n+class HeapBlockClaimer : public StackObj {\n+  size_t _claimed_index;\n+\n+public:\n+  static const size_t InvalidIndex = SIZE_MAX;\n+  static const size_t EdenIndex = 0;\n+  static const size_t SurvivorIndex = 1;\n+  static const size_t NumNonOldGenClaims = 2;\n+\n+  HeapBlockClaimer() : _claimed_index(EdenIndex) { }\n+  \/\/ Claim the block and get the block index.\n+  size_t claim_and_get_block() {\n+    size_t block_index;\n+    block_index = Atomic::fetch_and_add(&_claimed_index, 1u);\n+\n+    PSOldGen* old_gen = ParallelScavengeHeap::heap()->old_gen();\n+    size_t num_claims = old_gen->num_iterable_blocks() + NumNonOldGenClaims;\n+\n+    return block_index < num_claims ? block_index : InvalidIndex;\n+  }\n+};\n+\n+void ParallelScavengeHeap::object_iterate_parallel(ObjectClosure* cl,\n+                                                   HeapBlockClaimer* claimer) {\n+  size_t block_index = claimer->claim_and_get_block();\n+  \/\/ Iterate until all blocks are claimed\n+  if (block_index == HeapBlockClaimer::EdenIndex) {\n+    young_gen()->eden_space()->object_iterate(cl);\n+    block_index = claimer->claim_and_get_block();\n+  }\n+  if (block_index == HeapBlockClaimer::SurvivorIndex) {\n+    young_gen()->from_space()->object_iterate(cl);\n+    young_gen()->to_space()->object_iterate(cl);\n+    block_index = claimer->claim_and_get_block();\n+  }\n+  while (block_index != HeapBlockClaimer::InvalidIndex) {\n+    old_gen()->object_iterate_block(cl, block_index - HeapBlockClaimer::NumNonOldGenClaims);\n+    block_index = claimer->claim_and_get_block();\n+  }\n+}\n+\n+class PSScavengeParallelObjectIterator : public ParallelObjectIterator {\n+private:\n+  ParallelScavengeHeap*  _heap;\n+  HeapBlockClaimer      _claimer;\n+\n+public:\n+  PSScavengeParallelObjectIterator() :\n+      _heap(ParallelScavengeHeap::heap()),\n+      _claimer() {}\n+\n+  virtual void object_iterate(ObjectClosure* cl, uint worker_id) {\n+    _heap->object_iterate_parallel(cl, &_claimer);\n+  }\n+};\n+\n+ParallelObjectIterator* ParallelScavengeHeap::parallel_object_iterator(uint thread_num) {\n+  return new PSScavengeParallelObjectIterator();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":65,"deletions":0,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+class HeapBlockClaimer;\n@@ -210,0 +211,2 @@\n+  void object_iterate_parallel(ObjectClosure* cl, HeapBlockClaimer* claimer);\n+  virtual ParallelObjectIterator* parallel_object_iterator(uint thread_num);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -176,0 +176,32 @@\n+size_t PSOldGen::num_iterable_blocks() const {\n+  return (object_space()->used_in_bytes() + IterateBlockSize - 1) \/ IterateBlockSize;\n+}\n+\n+void PSOldGen::object_iterate_block(ObjectClosure* cl, size_t block_index) {\n+  size_t block_word_size = IterateBlockSize \/ HeapWordSize;\n+  assert((block_word_size % (ObjectStartArray::block_size)) == 0,\n+         \"Block size not a multiple of start_array block\");\n+\n+  MutableSpace *space = object_space();\n+\n+  HeapWord* begin = space->bottom() + block_index * block_word_size;\n+  HeapWord* end = MIN2(space->top(), begin + block_word_size);\n+\n+  if (!start_array()->object_starts_in_range(begin, end)) {\n+    return;\n+  }\n+\n+  \/\/ Get object starting at or reaching into this block.\n+  HeapWord* start = start_array()->object_start(begin);\n+  if (start < begin) {\n+    start += oop(start)->size();\n+  }\n+  assert(start >= begin,\n+         \"Object address\" PTR_FORMAT \" must be larger or equal to block address at \" PTR_FORMAT,\n+         p2i(start), p2i(begin));\n+  \/\/ Iterate all objects until the end.\n+  for (HeapWord* p = start; p < end; p += oop(p)->size()) {\n+    cl->do_object(oop(p));\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -55,0 +55,3 @@\n+  \/\/ Block size for parallel iteration\n+  static const size_t IterateBlockSize = 1024 * 1024;\n+\n@@ -166,0 +169,8 @@\n+  \/\/ Number of blocks to be iterated over in the used part of old gen.\n+  size_t num_iterable_blocks() const;\n+  \/\/ Iterate the objects starting in block block_index within [bottom, top) of the\n+  \/\/ old gen. The object just reaching into this block is not iterated over.\n+  \/\/ A block is an evenly sized non-overlapping part of the old gen of\n+  \/\/ IterateBlockSize bytes.\n+  void object_iterate_block(ObjectClosure* cl, size_t block_index);\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-  _referent = java_lang_ref_Reference::referent(_current_discovered);\n+  _referent = java_lang_ref_Reference::unknown_referent_no_keepalive(_current_discovered);\n@@ -1061,1 +1061,1 @@\n-  oop referent = java_lang_ref_Reference::referent(obj);\n+  oop referent = java_lang_ref_Reference::unknown_referent_no_keepalive(obj);\n@@ -1122,1 +1122,2 @@\n-    if (is_alive_non_header()->do_object_b(java_lang_ref_Reference::referent(obj))) {\n+    oop referent = java_lang_ref_Reference::unknown_referent_no_keepalive(obj);\n+    if (is_alive_non_header()->do_object_b(referent)) {\n@@ -1172,1 +1173,1 @@\n-         is_subject_to_discovery(java_lang_ref_Reference::referent(obj)))) {\n+         is_subject_to_discovery(java_lang_ref_Reference::unknown_referent_no_keepalive(obj)))) {\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -54,1 +54,3 @@\n-  _load_reference_barrier_rt_code_blob(NULL) {}\n+  _load_reference_barrier_normal_rt_code_blob(NULL),\n+  _load_reference_barrier_native_rt_code_blob(NULL),\n+  _load_reference_barrier_weak_rt_code_blob(NULL) {}\n@@ -110,1 +112,1 @@\n-LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, bool is_native) {\n+LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind) {\n@@ -112,1 +114,1 @@\n-    return load_reference_barrier_impl(gen, obj, addr, is_native);\n+    return load_reference_barrier_impl(gen, obj, addr, kind);\n@@ -118,1 +120,1 @@\n-LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, bool is_native) {\n+LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind) {\n@@ -151,1 +153,1 @@\n-  CodeStub* slow = new ShenandoahLoadReferenceBarrierStub(obj, addr, result, tmp1, tmp2, is_native);\n+  CodeStub* slow = new ShenandoahLoadReferenceBarrierStub(obj, addr, result, tmp1, tmp2, kind);\n@@ -214,2 +216,2 @@\n-    bool is_native = ShenandoahBarrierSet::use_load_reference_barrier_native(decorators, type);\n-    tmp = load_reference_barrier(gen, tmp, access.resolved_addr(), is_native);\n+    ShenandoahBarrierSet::AccessKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n+    tmp = load_reference_barrier(gen, tmp, access.resolved_addr(), kind);\n@@ -254,1 +256,1 @@\n-  const bool _is_native;\n+  const ShenandoahBarrierSet::AccessKind _kind;\n@@ -257,1 +259,1 @@\n-  C1ShenandoahLoadReferenceBarrierCodeGenClosure(bool is_native) : _is_native(is_native) {}\n+  C1ShenandoahLoadReferenceBarrierCodeGenClosure(ShenandoahBarrierSet::AccessKind kind) : _kind(kind) {}\n@@ -261,1 +263,1 @@\n-    bs->generate_c1_load_reference_barrier_runtime_stub(sasm, _is_native);\n+    bs->generate_c1_load_reference_barrier_runtime_stub(sasm, _kind);\n@@ -272,2 +274,2 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_code_gen_cl(false);\n-    _load_reference_barrier_rt_code_blob = Runtime1::generate_blob(buffer_blob, -1,\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_code_gen_cl(ShenandoahBarrierSet::AccessKind::NORMAL);\n+    _load_reference_barrier_normal_rt_code_blob = Runtime1::generate_blob(buffer_blob, -1,\n@@ -277,1 +279,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_native_code_gen_cl(true);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_native_code_gen_cl(ShenandoahBarrierSet::AccessKind::NATIVE);\n@@ -279,2 +281,7 @@\n-                                                                   \"shenandoah_load_reference_barrier_native_slow\",\n-                                                                   false, &lrb_native_code_gen_cl);\n+                                                                          \"shenandoah_load_reference_barrier_native_slow\",\n+                                                                          false, &lrb_native_code_gen_cl);\n+\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_weak_code_gen_cl(ShenandoahBarrierSet::AccessKind::WEAK);\n+    _load_reference_barrier_weak_rt_code_blob = Runtime1::generate_blob(buffer_blob, -1,\n+                                                                           \"shenandoah_load_reference_barrier_weak_slow\",\n+                                                                           false, &lrb_weak_code_gen_cl);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp","additions":22,"deletions":15,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  bool _is_native;\n+  ShenandoahBarrierSet::AccessKind _kind;\n@@ -99,2 +99,2 @@\n-  ShenandoahLoadReferenceBarrierStub(LIR_Opr obj, LIR_Opr addr, LIR_Opr result, LIR_Opr tmp1, LIR_Opr tmp2, bool is_native) :\n-          _obj(obj), _addr(addr), _result(result), _tmp1(tmp1), _tmp2(tmp2), _is_native(is_native)\n+  ShenandoahLoadReferenceBarrierStub(LIR_Opr obj, LIR_Opr addr, LIR_Opr result, LIR_Opr tmp1, LIR_Opr tmp2, ShenandoahBarrierSet::AccessKind kind) :\n+          _obj(obj), _addr(addr), _result(result), _tmp1(tmp1), _tmp2(tmp2), _kind(kind)\n@@ -114,1 +114,1 @@\n-  bool is_native() const { return _is_native; }\n+  ShenandoahBarrierSet::AccessKind kind() const { return _kind; }\n@@ -193,1 +193,1 @@\n-  CodeBlob* _load_reference_barrier_rt_code_blob;\n+  CodeBlob* _load_reference_barrier_normal_rt_code_blob;\n@@ -195,0 +195,1 @@\n+  CodeBlob* _load_reference_barrier_weak_rt_code_blob;\n@@ -198,1 +199,1 @@\n-  LIR_Opr load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, bool is_native);\n+  LIR_Opr load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind);\n@@ -201,1 +202,1 @@\n-  LIR_Opr load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, bool is_native);\n+  LIR_Opr load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind);\n@@ -213,3 +214,3 @@\n-  CodeBlob* load_reference_barrier_rt_code_blob() {\n-    assert(_load_reference_barrier_rt_code_blob != NULL, \"\");\n-    return _load_reference_barrier_rt_code_blob;\n+  CodeBlob* load_reference_barrier_normal_rt_code_blob() {\n+    assert(_load_reference_barrier_normal_rt_code_blob != NULL, \"\");\n+    return _load_reference_barrier_normal_rt_code_blob;\n@@ -222,0 +223,5 @@\n+\n+  CodeBlob* load_reference_barrier_weak_rt_code_blob() {\n+    assert(_load_reference_barrier_weak_rt_code_blob != NULL, \"\");\n+    return _load_reference_barrier_weak_rt_code_blob;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.hpp","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -308,1 +308,2 @@\n-         (entry_point == CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native));\n+         (entry_point == CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak)) ||\n+         (entry_point == CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow));\n@@ -548,3 +549,2 @@\n-    load = new ShenandoahLoadReferenceBarrierNode(NULL,\n-                                                  load,\n-                                                  ShenandoahBarrierSet::use_load_reference_barrier_native(decorators, type));\n+    ShenandoahBarrierSet::AccessKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n+    load = new ShenandoahLoadReferenceBarrierNode(NULL, load, kind);\n@@ -647,1 +647,1 @@\n-    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, false));\n+    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, ShenandoahBarrierSet::AccessKind::NORMAL));\n@@ -715,1 +715,1 @@\n-    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, false));\n+    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, ShenandoahBarrierSet::AccessKind::NORMAL));\n@@ -1063,1 +1063,1 @@\n-    \/\/ If one input is NULL, then step over the barriers (except LRB native) on the other input\n+    \/\/ If one input is NULL, then step over the barriers normal LRB barriers on the other input\n@@ -1066,1 +1066,1 @@\n-          ((ShenandoahLoadReferenceBarrierNode*)in2)->is_native())) {\n+          ((ShenandoahLoadReferenceBarrierNode*)in2)->kind() != ShenandoahBarrierSet::AccessKind::NORMAL)) {\n@@ -1071,1 +1071,1 @@\n-          ((ShenandoahLoadReferenceBarrierNode*)in1)->is_native())) {\n+          ((ShenandoahLoadReferenceBarrierNode*)in1)->kind() != ShenandoahBarrierSet::AccessKind::NORMAL)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -959,1 +959,2 @@\n-void ShenandoahBarrierC2Support::call_lrb_stub(Node*& ctrl, Node*& val, Node* load_addr, Node*& result_mem, Node* raw_mem, bool is_native, PhaseIdealLoop* phase) {\n+void ShenandoahBarrierC2Support::call_lrb_stub(Node*& ctrl, Node*& val, Node* load_addr, Node*& result_mem, Node* raw_mem,\n+                                               ShenandoahBarrierSet::AccessKind kind, PhaseIdealLoop* phase) {\n@@ -970,7 +971,22 @@\n-  address target = LP64_ONLY(UseCompressedOops) NOT_LP64(false) ?\n-          CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow) :\n-          CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier);\n-\n-  address calladdr = is_native ? CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native)\n-                               : target;\n-  const char* name = is_native ? \"load_reference_barrier_native\" : \"load_reference_barrier\";\n+  address calladdr = NULL;\n+  const char* name = NULL;\n+  switch (kind) {\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      calladdr = CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak);\n+      name = \"load_reference_barrier_native\";\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      calladdr = LP64_ONLY(UseCompressedOops) NOT_LP64(false) ?\n+                 CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow) :\n+                 CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak);\n+      name = \"load_reference_barrier_weak\";\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      calladdr = LP64_ONLY(UseCompressedOops) NOT_LP64(false) ?\n+                 CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow) :\n+                 CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier);\n+      name = \"load_reference_barrier\";\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n@@ -1341,1 +1357,1 @@\n-    if (!lrb->is_native()) {\n+    if (lrb->kind() == ShenandoahBarrierSet::AccessKind::NORMAL) {\n@@ -1392,1 +1408,1 @@\n-    call_lrb_stub(ctrl, val, addr, result_mem, raw_mem, lrb->is_native(), phase);\n+    call_lrb_stub(ctrl, val, addr, result_mem, raw_mem, lrb->kind(), phase);\n@@ -2317,1 +2333,1 @@\n-                    phi = NULL;\n+                    phi = NodeSentinel;\n@@ -2322,1 +2338,1 @@\n-            if (phi == NULL) {\n+            if (phi == NodeSentinel) {\n@@ -2331,2 +2347,5 @@\n-          assert(phi != NULL, \"\");\n-          regions.map(c->_idx, phi);\n+          if (phi != NULL) {\n+            regions.map(c->_idx, phi);\n+          } else {\n+            assert(c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n+          }\n@@ -2343,1 +2362,1 @@\n-        assert(m != NULL, \"expect memory state\");\n+        assert(m != NULL || c->Opcode() == Op_Halt, \"expect memory state\");\n@@ -2361,1 +2380,1 @@\n-    n->destruct();\n+    n->destruct(&_phase->igvn());\n@@ -2367,1 +2386,2 @@\n-      if (n->is_Phi() && n->_idx >= last && n->in(0) == c) {\n+      assert(n != NULL || c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n+      if (n != NULL && n->is_Phi() && n->_idx >= last && n->in(0) == c) {\n@@ -2376,0 +2396,1 @@\n+      assert(n != NULL || c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n@@ -2380,0 +2401,1 @@\n+          assert(c->unique_ctrl_out()->Opcode() != Op_Halt, \"expected memory state\");\n@@ -2882,2 +2904,2 @@\n-ShenandoahLoadReferenceBarrierNode::ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* obj, bool native)\n-: Node(ctrl, obj), _native(native) {\n+ShenandoahLoadReferenceBarrierNode::ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* obj, ShenandoahBarrierSet::AccessKind kind)\n+: Node(ctrl, obj), _kind(kind) {\n@@ -2887,2 +2909,2 @@\n-bool ShenandoahLoadReferenceBarrierNode::is_native() const {\n-  return _native;\n+ShenandoahBarrierSet::AccessKind ShenandoahLoadReferenceBarrierNode::kind() const {\n+  return _kind;\n@@ -2896,1 +2918,15 @@\n-  return Node::hash() + (_native ? 1 : 0);\n+  uint hash = Node::hash();\n+  switch (_kind) {\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n+      hash += 0;\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+      hash += 1;\n+      break;\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n+      hash += 2;\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n+  return hash;\n@@ -2901,1 +2937,1 @@\n-         _native == ((const ShenandoahLoadReferenceBarrierNode&)n)._native;\n+         _kind == ((const ShenandoahLoadReferenceBarrierNode&)n)._kind;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":59,"deletions":23,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shenandoah\/shenandoahBarrierSet.hpp\"\n@@ -63,1 +64,2 @@\n-  static void call_lrb_stub(Node*& ctrl, Node*& val, Node* load_addr, Node*& result_mem, Node* raw_mem, bool is_native, PhaseIdealLoop* phase);\n+  static void call_lrb_stub(Node*& ctrl, Node*& val, Node* load_addr, Node*& result_mem, Node* raw_mem,\n+                            ShenandoahBarrierSet::AccessKind kind, PhaseIdealLoop* phase);\n@@ -232,1 +234,1 @@\n-  bool _native;\n+  ShenandoahBarrierSet::AccessKind _kind;\n@@ -235,1 +237,1 @@\n-  ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* val, bool native);\n+  ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* val, ShenandoahBarrierSet::AccessKind kind);\n@@ -237,1 +239,1 @@\n-  bool is_native() const;\n+  ShenandoahBarrierSet::AccessKind kind() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -64,6 +64,0 @@\n-bool ShenandoahAggressiveHeuristics::should_process_references() {\n-  if (!can_process_references()) return false;\n-  \/\/ Randomly process refs with 50% chance.\n-  return (os::random() & 1) == 1;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-  virtual bool should_process_references();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,12 +260,0 @@\n-bool ShenandoahHeuristics::can_process_references() {\n-  if (ShenandoahRefProcFrequency == 0) return false;\n-  return true;\n-}\n-\n-bool ShenandoahHeuristics::should_process_references() {\n-  if (!can_process_references()) return false;\n-  size_t cycle = ShenandoahHeap::heap()->shenandoah_policy()->cycle_counter();\n-  \/\/ Process references every Nth GC cycle.\n-  return cycle % ShenandoahRefProcFrequency == 0;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -123,3 +123,0 @@\n-  virtual bool can_process_references();\n-  virtual bool should_process_references();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,5 +39,0 @@\n-bool ShenandoahPassiveHeuristics::should_process_references() {\n-  \/\/ Always process references, if we can.\n-  return can_process_references();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-  virtual bool should_process_references();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,2 @@\n-  msg.append(\"    %3s marked \\n\",                    ctx->is_marked(obj) ? \"\" : \"not\");\n+  msg.append(\"    %3s marked strong\\n\",              ctx->is_marked_strong(obj) ? \"\" : \"not\");\n+  msg.append(\"    %3s marked weak\\n\",                ctx->is_marked_weak(obj) ? \"\" : \"not\");\n@@ -178,0 +179,10 @@\n+void ShenandoahAsserts::assert_in_heap_or_null(void* interior_loc, oop obj, const char *file, int line) {\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n+\n+  if (obj != NULL && !heap->is_in(obj)) {\n+    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_in_heap_or_null failed\",\n+                  \"oop must point to a heap address\",\n+                  file, line);\n+  }\n+}\n+\n@@ -346,18 +357,0 @@\n-void ShenandoahAsserts::assert_rp_isalive_not_installed(const char *file, int line) {\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  ReferenceProcessor* rp = heap->ref_processor();\n-  if (rp->is_alive_non_header() != NULL) {\n-    print_rp_failure(\"Shenandoah assert_rp_isalive_not_installed failed\", rp->is_alive_non_header(),\n-                     file, line);\n-  }\n-}\n-\n-void ShenandoahAsserts::assert_rp_isalive_installed(const char *file, int line) {\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  ReferenceProcessor* rp = heap->ref_processor();\n-  if (rp->is_alive_non_header() == NULL) {\n-    print_rp_failure(\"Shenandoah assert_rp_isalive_installed failed\", rp->is_alive_non_header(),\n-                     file, line);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp","additions":12,"deletions":19,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+  static void assert_in_heap_or_null(void* interior_loc, oop obj, const char* file, int line);\n@@ -67,3 +68,0 @@\n-  static void assert_rp_isalive_not_installed(const char *file, int line);\n-  static void assert_rp_isalive_installed(const char *file, int line);\n-\n@@ -79,0 +77,2 @@\n+#define shenandoah_assert_in_heap_or_null(interior_loc, obj) \\\n+                    ShenandoahAsserts::assert_in_heap_or_null(interior_loc, obj, __FILE__, __LINE__)\n@@ -152,0 +152,1 @@\n+#define shenandoah_assert_in_heap_or_null(interior_loc, obj)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -90,11 +90,0 @@\n-bool ShenandoahBarrierSet::use_load_reference_barrier_native(DecoratorSet decorators, BasicType type) {\n-  assert(need_load_reference_barrier(decorators, type), \"Should be subset of LRB\");\n-  assert(is_reference_type(type), \"Why we here?\");\n-  \/\/ Native load reference barrier is only needed for concurrent root processing\n-  if (!ShenandoahConcurrentRoots::can_do_concurrent_roots()) {\n-    return false;\n-  }\n-\n-  return (decorators & IN_NATIVE) != 0;\n-}\n-\n@@ -112,30 +101,5 @@\n-oop ShenandoahBarrierSet::load_reference_barrier_not_null(oop obj) {\n-  if (ShenandoahLoadRefBarrier && _heap->has_forwarded_objects()) {\n-    return load_reference_barrier_impl(obj);\n-  } else {\n-    return obj;\n-  }\n-}\n-\n-oop ShenandoahBarrierSet::load_reference_barrier(oop obj) {\n-  if (obj != NULL) {\n-    return load_reference_barrier_not_null(obj);\n-  } else {\n-    return obj;\n-  }\n-}\n-\n-oop ShenandoahBarrierSet::load_reference_barrier_impl(oop obj) {\n-  assert(ShenandoahLoadRefBarrier, \"should be enabled\");\n-  if (!CompressedOops::is_null(obj)) {\n-    bool evac_in_progress = _heap->is_evacuation_in_progress();\n-    oop fwd = resolve_forwarded_not_null(obj);\n-    if (evac_in_progress &&\n-        _heap->in_collection_set(obj) &&\n-        obj == fwd) {\n-      Thread *t = Thread::current();\n-      ShenandoahEvacOOMScope oom_evac_scope(t);\n-      return _heap->evacuate_object(obj, t);\n-    } else {\n-      return fwd;\n-    }\n+ShenandoahBarrierSet::AccessKind ShenandoahBarrierSet::access_kind(DecoratorSet decorators, BasicType type) {\n+  if ((decorators & IN_NATIVE) != 0) {\n+    return AccessKind::NATIVE;\n+  } else if ((decorators & (ON_WEAK_OOP_REF | ON_PHANTOM_OOP_REF | ON_UNKNOWN_OOP_REF)) != 0) {\n+    return AccessKind::WEAK;\n@@ -143,1 +107,1 @@\n-    return obj;\n+    return AccessKind::NORMAL;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":6,"deletions":42,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -36,1 +36,11 @@\n-private:\n+public:\n+  enum class AccessKind {\n+    \/\/ Regular in-heap access on reference fields\n+    NORMAL,\n+\n+    \/\/ Off-heap reference access\n+    NATIVE,\n+\n+    \/\/ In-heap reference access on referent fields of j.l.r.Reference objects\n+    WEAK\n+  };\n@@ -38,0 +48,1 @@\n+private:\n@@ -56,1 +67,0 @@\n-  static bool use_load_reference_barrier_native(DecoratorSet decorators, BasicType type);\n@@ -58,0 +68,1 @@\n+  static AccessKind access_kind(DecoratorSet decorators, BasicType type);\n@@ -90,2 +101,1 @@\n-  oop load_reference_barrier(oop obj);\n-  oop load_reference_barrier_not_null(oop obj);\n+  inline oop load_reference_barrier(oop obj);\n@@ -96,2 +106,2 @@\n-  template <class T>\n-  inline oop load_reference_barrier_native(oop obj, T* load_addr);\n+  template <DecoratorSet decorators, class T>\n+  inline oop load_reference_barrier(oop obj, T* load_addr);\n@@ -114,2 +124,0 @@\n-  oop load_reference_barrier_impl(oop obj);\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.hpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -79,4 +79,19 @@\n-template <class T>\n-inline oop ShenandoahBarrierSet::load_reference_barrier_native(oop obj, T* load_addr) {\n-  if (CompressedOops::is_null(obj)) {\n-    return NULL;\n+inline oop ShenandoahBarrierSet::load_reference_barrier(oop obj) {\n+  if (!ShenandoahLoadRefBarrier) {\n+    return obj;\n+  }\n+  if (_heap->has_forwarded_objects() &&\n+      _heap->in_collection_set(obj)) { \/\/ Subsumes NULL-check\n+    assert(obj != NULL, \"cset check must have subsumed NULL-check\");\n+    oop fwd = resolve_forwarded_not_null(obj);\n+    \/\/ TODO: It should not be necessary to check evac-in-progress here.\n+    \/\/ We do it for mark-compact, which may have forwarded objects,\n+    \/\/ and objects in cset and gets here via runtime barriers.\n+    \/\/ We can probably fix this as soon as mark-compact has its own\n+    \/\/ marking phase.\n+    if (obj == fwd && _heap->is_evacuation_in_progress()) {\n+       Thread* t = Thread::current();\n+      ShenandoahEvacOOMScope oom_evac_scope(t);\n+      return _heap->evacuate_object(obj, t);\n+    }\n+    return fwd;\n@@ -84,0 +99,5 @@\n+  return obj;\n+}\n+\n+template <DecoratorSet decorators, class T>\n+inline oop ShenandoahBarrierSet::load_reference_barrier(oop obj, T* load_addr) {\n@@ -85,2 +105,4 @@\n-  ShenandoahMarkingContext* const marking_context = _heap->marking_context();\n-  if (_heap->is_concurrent_weak_root_in_progress() && !marking_context->is_marked(obj)) {\n+  \/\/ Prevent resurrection of unreachable non-strorg references.\n+  if (!HasDecorator<decorators, ON_STRONG_OOP_REF>::value && obj != NULL &&\n+      _heap->is_concurrent_weak_root_in_progress() &&\n+      !_heap->marking_context()->is_marked(obj)) {\n@@ -91,0 +113,2 @@\n+      \/\/ This path is sometimes (rarely) taken by GC threads.\n+      \/\/ See e.g.: https:\/\/bugs.openjdk.java.net\/browse\/JDK-8237874\n@@ -95,1 +119,1 @@\n-  oop fwd = load_reference_barrier_not_null(obj);\n+  oop fwd = load_reference_barrier(obj);\n@@ -131,2 +155,1 @@\n-  assert(value != NULL, \"checked before\");\n-  if (ShenandoahSATBBarrier && _heap->is_concurrent_mark_in_progress()) {\n+  if (value != NULL && ShenandoahSATBBarrier && _heap->is_concurrent_mark_in_progress()) {\n@@ -145,1 +168,0 @@\n-  assert(value != NULL, \"checked by caller\");\n@@ -155,1 +177,0 @@\n-  assert(value != NULL, \"checked by caller\");\n@@ -169,4 +190,2 @@\n-    value = bs->load_reference_barrier_native(value, addr);\n-    if (value != NULL) {\n-      bs->keep_alive_if_weak<decorators>(value);\n-    }\n+    value = bs->load_reference_barrier<decorators, T>(value, addr);\n+    bs->keep_alive_if_weak<decorators>(value);\n@@ -181,5 +200,3 @@\n-  if (value != NULL) {\n-    ShenandoahBarrierSet *const bs = ShenandoahBarrierSet::barrier_set();\n-    value = bs->load_reference_barrier_not_null(value);\n-    bs->keep_alive_if_weak<decorators>(value);\n-  }\n+  ShenandoahBarrierSet *const bs = ShenandoahBarrierSet::barrier_set();\n+  value = bs->load_reference_barrier<decorators, T>(value, addr);\n+  bs->keep_alive_if_weak<decorators>(value);\n@@ -192,6 +209,4 @@\n-  if (value != NULL) {\n-    ShenandoahBarrierSet *const bs = ShenandoahBarrierSet::barrier_set();\n-    value = bs->load_reference_barrier_not_null(value);\n-    bs->keep_alive_if_weak(AccessBarrierSupport::resolve_possibly_unknown_oop_ref_strength<decorators>(base, offset),\n-                           value);\n-  }\n+  ShenandoahBarrierSet *const bs = ShenandoahBarrierSet::barrier_set();\n+  DecoratorSet resolved_decorators = AccessBarrierSupport::resolve_possibly_unknown_oop_ref_strength<decorators>(base, offset);\n+  value = bs->load_reference_barrier<decorators>(value, AccessInternal::oop_field_addr<decorators>(base, offset));\n+  bs->keep_alive_if_weak(resolved_decorators, value);\n@@ -205,0 +220,1 @@\n+  shenandoah_assert_not_in_cset_if(addr, value, value != NULL && !ShenandoahHeap::heap()->cancelled_gc());\n@@ -242,4 +258,2 @@\n-  if (res != NULL) {\n-    res = ShenandoahBarrierSet::barrier_set()->load_reference_barrier_not_null(res);\n-    bs->satb_enqueue(res);\n-  }\n+  res = ShenandoahBarrierSet::barrier_set()->load_reference_barrier(res);\n+  bs->satb_enqueue(res);\n@@ -270,4 +284,2 @@\n-  if (previous != NULL) {\n-    previous = ShenandoahBarrierSet::barrier_set()->load_reference_barrier_not_null(previous);\n-    bs->satb_enqueue(previous);\n-  }\n+  previous = ShenandoahBarrierSet::barrier_set()->load_reference_barrier(previous);\n+  bs->satb_enqueue(previous);\n@@ -331,1 +343,1 @@\n-      if (ENQUEUE && !ctx->is_marked(obj)) {\n+      if (ENQUEUE && !ctx->is_marked_strong(obj)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":47,"deletions":35,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  shenandoah_assert_in_heap(NULL, p);\n+  shenandoah_assert_in_heap_or_null(NULL, p);\n@@ -48,1 +48,1 @@\n-  assert(_heap->is_in(p), \"Must be in the heap\");\n+  assert(p == NULL || _heap->is_in(p), \"Must be in the heap\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-#include \"gc\/shared\/referenceProcessor.hpp\"\n-#include \"gc\/shared\/referenceProcessorPhaseTimes.hpp\"\n@@ -43,0 +41,1 @@\n+#include \"gc\/shenandoah\/shenandoahReferenceProcessor.hpp\"\n@@ -64,1 +63,1 @@\n-    ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, NO_DEDUP>(p, _heap, _queue, _mark_context);\n+    ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, NO_DEDUP>(p, _heap, _queue, _mark_context, false);\n@@ -77,1 +76,1 @@\n-ShenandoahMarkRefsSuperClosure::ShenandoahMarkRefsSuperClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+ShenandoahMarkRefsSuperClosure::ShenandoahMarkRefsSuperClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -81,1 +80,2 @@\n-  _mark_context(_heap->marking_context())\n+  _mark_context(_heap->marking_context()),\n+  _weak(false)\n@@ -156,8 +156,2 @@\n-    ReferenceProcessor* rp;\n-    if (heap->process_references()) {\n-      rp = heap->ref_processor();\n-      shenandoah_assert_rp_isalive_installed();\n-    } else {\n-      rp = NULL;\n-    }\n-\n+    ShenandoahReferenceProcessor* rp = heap->ref_processor();\n+    assert(rp != NULL, \"need reference processor\");\n@@ -209,1 +203,1 @@\n-  ReferenceProcessor*             _rp;\n+  ShenandoahReferenceProcessor*   _rp;\n@@ -225,6 +219,1 @@\n-  _rp(NULL) {\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  if (heap->process_references()) {\n-    _rp = heap->ref_processor();\n-    shenandoah_assert_rp_isalive_installed();\n-  }\n+  _rp(ShenandoahHeap::heap()->ref_processor()) {\n@@ -256,7 +245,1 @@\n-    ReferenceProcessor* rp;\n-    if (heap->process_references()) {\n-      rp = heap->ref_processor();\n-      shenandoah_assert_rp_isalive_installed();\n-    } else {\n-      rp = NULL;\n-    }\n+    ShenandoahReferenceProcessor* rp = heap->ref_processor();\n@@ -306,1 +289,0 @@\n-\n@@ -309,0 +291,4 @@\n+  ShenandoahReferenceProcessor* ref_processor = heap->ref_processor();\n+  ref_processor->reset_thread_locals();\n+  ref_processor->set_soft_reference_policy(_heap->soft_ref_policy()->should_clear_all_soft_refs());\n+\n@@ -410,1 +396,1 @@\n-  SuspendibleThreadSetJoiner         _sts_joiner;\n+  SuspendibleThreadSetJoiner          _sts_joiner;\n@@ -412,2 +398,2 @@\n-  ShenandoahObjToScanQueueSet* const _queue_set;\n-  ReferenceProcessor* const          _rp;\n+  ShenandoahObjToScanQueueSet* const  _queue_set;\n+  ShenandoahReferenceProcessor* const _rp;\n@@ -417,1 +403,1 @@\n-                                    ReferenceProcessor* rp,\n+                                    ShenandoahReferenceProcessor* rp,\n@@ -424,1 +410,1 @@\n-                                                                     ReferenceProcessor* rp,\n+                                                                     ShenandoahReferenceProcessor* rp,\n@@ -445,13 +431,1 @@\n-  ReferenceProcessor* rp = NULL;\n-  if (_heap->process_references()) {\n-    rp = _heap->ref_processor();\n-    rp->set_active_mt_degree(nworkers);\n-\n-    \/\/ enable (\"weak\") refs discovery\n-    rp->enable_discovery(true \/*verify_no_refs*\/);\n-    rp->setup_policy(_heap->soft_ref_policy()->should_clear_all_soft_refs());\n-  }\n-\n-  shenandoah_assert_rp_isalive_not_installed();\n-  ShenandoahIsAliveSelector is_alive;\n-  ReferenceProcessorIsAliveMutator fix_isalive(_heap->ref_processor(), is_alive.is_alive_closure());\n+  ShenandoahReferenceProcessor* rp = _heap->ref_processor();\n@@ -483,4 +457,0 @@\n-    shenandoah_assert_rp_isalive_not_installed();\n-    ShenandoahIsAliveSelector is_alive;\n-    ReferenceProcessorIsAliveMutator fix_isalive(_heap->ref_processor(), is_alive.is_alive_closure());\n-\n@@ -527,5 +497,0 @@\n-  \/\/ When we're done marking everything, we process weak references.\n-  if (_heap->process_references()) {\n-    weak_refs_work(full_gc);\n-  }\n-\n@@ -537,327 +502,0 @@\n-\/\/ Weak Reference Closures\n-class ShenandoahCMDrainMarkingStackClosure: public VoidClosure {\n-  uint _worker_id;\n-  TaskTerminator* _terminator;\n-  bool _reset_terminator;\n-\n-public:\n-  ShenandoahCMDrainMarkingStackClosure(uint worker_id, TaskTerminator* t, bool reset_terminator = false):\n-    _worker_id(worker_id),\n-    _terminator(t),\n-    _reset_terminator(reset_terminator) {\n-  }\n-\n-  void do_void() {\n-    assert(ShenandoahSafepoint::is_at_shenandoah_safepoint(), \"Must be at a safepoint\");\n-\n-    ShenandoahHeap* sh = ShenandoahHeap::heap();\n-    ShenandoahConcurrentMark* scm = sh->concurrent_mark();\n-    assert(sh->process_references(), \"why else would we be here?\");\n-    ReferenceProcessor* rp = sh->ref_processor();\n-\n-    shenandoah_assert_rp_isalive_installed();\n-\n-    scm->mark_loop(_worker_id, _terminator, rp,\n-                   false,   \/\/ not cancellable\n-                   false);  \/\/ do not do strdedup\n-\n-    if (_reset_terminator) {\n-      _terminator->reset_for_reuse();\n-    }\n-  }\n-};\n-\n-class ShenandoahCMKeepAliveClosure : public OopClosure {\n-private:\n-  ShenandoahObjToScanQueue* _queue;\n-  ShenandoahHeap* _heap;\n-  ShenandoahMarkingContext* const _mark_context;\n-\n-  template <class T>\n-  inline void do_oop_work(T* p) {\n-    ShenandoahConcurrentMark::mark_through_ref<T, NONE, NO_DEDUP>(p, _heap, _queue, _mark_context);\n-  }\n-\n-public:\n-  ShenandoahCMKeepAliveClosure(ShenandoahObjToScanQueue* q) :\n-    _queue(q),\n-    _heap(ShenandoahHeap::heap()),\n-    _mark_context(_heap->marking_context()) {}\n-\n-  void do_oop(narrowOop* p) { do_oop_work(p); }\n-  void do_oop(oop* p)       { do_oop_work(p); }\n-};\n-\n-class ShenandoahCMKeepAliveUpdateClosure : public OopClosure {\n-private:\n-  ShenandoahObjToScanQueue* _queue;\n-  ShenandoahHeap* _heap;\n-  ShenandoahMarkingContext* const _mark_context;\n-\n-  template <class T>\n-  inline void do_oop_work(T* p) {\n-    ShenandoahConcurrentMark::mark_through_ref<T, SIMPLE, NO_DEDUP>(p, _heap, _queue, _mark_context);\n-  }\n-\n-public:\n-  ShenandoahCMKeepAliveUpdateClosure(ShenandoahObjToScanQueue* q) :\n-    _queue(q),\n-    _heap(ShenandoahHeap::heap()),\n-    _mark_context(_heap->marking_context()) {}\n-\n-  void do_oop(narrowOop* p) { do_oop_work(p); }\n-  void do_oop(oop* p)       { do_oop_work(p); }\n-};\n-\n-class ShenandoahWeakUpdateClosure : public OopClosure {\n-private:\n-  ShenandoahHeap* const _heap;\n-\n-  template <class T>\n-  inline void do_oop_work(T* p) {\n-    oop o = _heap->maybe_update_with_forwarded(p);\n-    shenandoah_assert_marked_except(p, o, o == NULL);\n-  }\n-\n-public:\n-  ShenandoahWeakUpdateClosure() : _heap(ShenandoahHeap::heap()) {}\n-\n-  void do_oop(narrowOop* p) { do_oop_work(p); }\n-  void do_oop(oop* p)       { do_oop_work(p); }\n-};\n-\n-class ShenandoahRefProcTaskProxy : public AbstractGangTask {\n-private:\n-  AbstractRefProcTaskExecutor::ProcessTask& _proc_task;\n-  TaskTerminator* _terminator;\n-\n-public:\n-  ShenandoahRefProcTaskProxy(AbstractRefProcTaskExecutor::ProcessTask& proc_task,\n-                             TaskTerminator* t) :\n-    AbstractGangTask(\"Shenandoah Process Weak References\"),\n-    _proc_task(proc_task),\n-    _terminator(t) {\n-  }\n-\n-  void work(uint worker_id) {\n-    Thread* current_thread = Thread::current();\n-    ResourceMark rm(current_thread);\n-    HandleMark hm(current_thread);\n-    assert(ShenandoahSafepoint::is_at_shenandoah_safepoint(), \"Must be at a safepoint\");\n-    ShenandoahHeap* heap = ShenandoahHeap::heap();\n-    ShenandoahParallelWorkerSession worker_session(worker_id);\n-    ShenandoahCMDrainMarkingStackClosure complete_gc(worker_id, _terminator);\n-    if (heap->has_forwarded_objects()) {\n-      ShenandoahForwardedIsAliveClosure is_alive;\n-      ShenandoahCMKeepAliveUpdateClosure keep_alive(heap->concurrent_mark()->get_queue(worker_id));\n-      _proc_task.work(worker_id, is_alive, keep_alive, complete_gc);\n-    } else {\n-      ShenandoahIsAliveClosure is_alive;\n-      ShenandoahCMKeepAliveClosure keep_alive(heap->concurrent_mark()->get_queue(worker_id));\n-      _proc_task.work(worker_id, is_alive, keep_alive, complete_gc);\n-    }\n-  }\n-};\n-\n-class ShenandoahRefProcTaskExecutor : public AbstractRefProcTaskExecutor {\n-private:\n-  WorkGang* _workers;\n-\n-public:\n-  ShenandoahRefProcTaskExecutor(WorkGang* workers) :\n-    _workers(workers) {\n-  }\n-\n-  \/\/ Executes a task using worker threads.\n-  void execute(ProcessTask& task, uint ergo_workers) {\n-    assert(ShenandoahSafepoint::is_at_shenandoah_safepoint(), \"Must be at a safepoint\");\n-\n-    ShenandoahHeap* heap = ShenandoahHeap::heap();\n-    ShenandoahConcurrentMark* cm = heap->concurrent_mark();\n-    ShenandoahPushWorkerQueuesScope scope(_workers, cm->task_queues(),\n-                                          ergo_workers,\n-                                          \/* do_check = *\/ false);\n-    uint nworkers = _workers->active_workers();\n-    cm->task_queues()->reserve(nworkers);\n-    TaskTerminator terminator(nworkers, cm->task_queues());\n-    ShenandoahRefProcTaskProxy proc_task_proxy(task, &terminator);\n-    _workers->run_task(&proc_task_proxy);\n-  }\n-};\n-\n-void ShenandoahConcurrentMark::weak_refs_work(bool full_gc) {\n-  assert(_heap->process_references(), \"sanity\");\n-\n-  ShenandoahPhaseTimings::Phase phase_root =\n-          full_gc ?\n-          ShenandoahPhaseTimings::full_gc_weakrefs :\n-          ShenandoahPhaseTimings::weakrefs;\n-\n-  ShenandoahGCPhase phase(phase_root);\n-\n-  ReferenceProcessor* rp = _heap->ref_processor();\n-\n-  \/\/ NOTE: We cannot shortcut on has_discovered_references() here, because\n-  \/\/ we will miss marking JNI Weak refs then, see implementation in\n-  \/\/ ReferenceProcessor::process_discovered_references.\n-  weak_refs_work_doit(full_gc);\n-\n-  rp->verify_no_references_recorded();\n-  assert(!rp->discovery_enabled(), \"Post condition\");\n-\n-}\n-\n-void ShenandoahConcurrentMark::weak_refs_work_doit(bool full_gc) {\n-  ReferenceProcessor* rp = _heap->ref_processor();\n-\n-  ShenandoahPhaseTimings::Phase phase_process =\n-          full_gc ?\n-          ShenandoahPhaseTimings::full_gc_weakrefs_process :\n-          ShenandoahPhaseTimings::weakrefs_process;\n-\n-  shenandoah_assert_rp_isalive_not_installed();\n-  ShenandoahIsAliveSelector is_alive;\n-  ReferenceProcessorIsAliveMutator fix_isalive(rp, is_alive.is_alive_closure());\n-\n-  WorkGang* workers = _heap->workers();\n-  uint nworkers = workers->active_workers();\n-\n-  rp->setup_policy(_heap->soft_ref_policy()->should_clear_all_soft_refs());\n-  rp->set_active_mt_degree(nworkers);\n-\n-  assert(task_queues()->is_empty(), \"Should be empty\");\n-\n-  \/\/ complete_gc and keep_alive closures instantiated here are only needed for\n-  \/\/ single-threaded path in RP. They share the queue 0 for tracking work, which\n-  \/\/ simplifies implementation. Since RP may decide to call complete_gc several\n-  \/\/ times, we need to be able to reuse the terminator.\n-  uint serial_worker_id = 0;\n-  TaskTerminator terminator(1, task_queues());\n-  ShenandoahCMDrainMarkingStackClosure complete_gc(serial_worker_id, &terminator, \/* reset_terminator = *\/ true);\n-\n-  ShenandoahRefProcTaskExecutor executor(workers);\n-\n-  ReferenceProcessorPhaseTimes pt(_heap->gc_timer(), rp->num_queues());\n-\n-  {\n-    \/\/ Note: Don't emit JFR event for this phase, to avoid overflow nesting phase level.\n-    \/\/ Reference Processor emits 2 levels JFR event, that can get us over the JFR\n-    \/\/ event nesting level limits, in case of degenerated GC gets upgraded to\n-    \/\/ full GC.\n-    ShenandoahTimingsTracker phase_timing(phase_process);\n-\n-    if (_heap->has_forwarded_objects()) {\n-      ShenandoahCMKeepAliveUpdateClosure keep_alive(get_queue(serial_worker_id));\n-      const ReferenceProcessorStats& stats =\n-        rp->process_discovered_references(is_alive.is_alive_closure(), &keep_alive,\n-                                          &complete_gc, &executor,\n-                                          &pt);\n-       _heap->tracer()->report_gc_reference_stats(stats);\n-    } else {\n-      ShenandoahCMKeepAliveClosure keep_alive(get_queue(serial_worker_id));\n-      const ReferenceProcessorStats& stats =\n-        rp->process_discovered_references(is_alive.is_alive_closure(), &keep_alive,\n-                                          &complete_gc, &executor,\n-                                          &pt);\n-      _heap->tracer()->report_gc_reference_stats(stats);\n-    }\n-\n-    pt.print_all_references();\n-\n-    assert(task_queues()->is_empty(), \"Should be empty\");\n-  }\n-}\n-\n-class ShenandoahCancelledGCYieldClosure : public YieldClosure {\n-private:\n-  ShenandoahHeap* const _heap;\n-public:\n-  ShenandoahCancelledGCYieldClosure() : _heap(ShenandoahHeap::heap()) {};\n-  virtual bool should_return() { return _heap->cancelled_gc(); }\n-};\n-\n-class ShenandoahPrecleanCompleteGCClosure : public VoidClosure {\n-public:\n-  void do_void() {\n-    ShenandoahHeap* sh = ShenandoahHeap::heap();\n-    ShenandoahConcurrentMark* scm = sh->concurrent_mark();\n-    assert(sh->process_references(), \"why else would we be here?\");\n-    TaskTerminator terminator(1, scm->task_queues());\n-\n-    ReferenceProcessor* rp = sh->ref_processor();\n-    shenandoah_assert_rp_isalive_installed();\n-\n-    scm->mark_loop(0, &terminator, rp,\n-                   false, \/\/ not cancellable\n-                   false); \/\/ do not do strdedup\n-  }\n-};\n-\n-class ShenandoahPrecleanTask : public AbstractGangTask {\n-private:\n-  ReferenceProcessor* _rp;\n-\n-public:\n-  ShenandoahPrecleanTask(ReferenceProcessor* rp) :\n-          AbstractGangTask(\"Shenandoah Precleaning\"),\n-          _rp(rp) {}\n-\n-  void work(uint worker_id) {\n-    assert(worker_id == 0, \"The code below is single-threaded, only one worker is expected\");\n-    ShenandoahParallelWorkerSession worker_session(worker_id);\n-\n-    ShenandoahHeap* sh = ShenandoahHeap::heap();\n-    assert(!sh->has_forwarded_objects(), \"No forwarded objects expected here\");\n-\n-    ShenandoahObjToScanQueue* q = sh->concurrent_mark()->get_queue(worker_id);\n-\n-    ShenandoahCancelledGCYieldClosure yield;\n-    ShenandoahPrecleanCompleteGCClosure complete_gc;\n-\n-    ShenandoahIsAliveClosure is_alive;\n-    ShenandoahCMKeepAliveClosure keep_alive(q);\n-    ResourceMark rm;\n-    _rp->preclean_discovered_references(&is_alive, &keep_alive,\n-                                        &complete_gc, &yield,\n-                                        NULL);\n-  }\n-};\n-\n-void ShenandoahConcurrentMark::preclean_weak_refs() {\n-  \/\/ Pre-cleaning weak references before diving into STW makes sense at the\n-  \/\/ end of concurrent mark. This will filter out the references which referents\n-  \/\/ are alive. Note that ReferenceProcessor already filters out these on reference\n-  \/\/ discovery, and the bulk of work is done here. This phase processes leftovers\n-  \/\/ that missed the initial filtering, i.e. when referent was marked alive after\n-  \/\/ reference was discovered by RP.\n-\n-  assert(_heap->process_references(), \"sanity\");\n-\n-  \/\/ Shortcut if no references were discovered to avoid winding up threads.\n-  ReferenceProcessor* rp = _heap->ref_processor();\n-  if (!rp->has_discovered_references()) {\n-    return;\n-  }\n-\n-  assert(task_queues()->is_empty(), \"Should be empty\");\n-\n-  ReferenceProcessorMTDiscoveryMutator fix_mt_discovery(rp, false);\n-\n-  shenandoah_assert_rp_isalive_not_installed();\n-  ShenandoahIsAliveSelector is_alive;\n-  ReferenceProcessorIsAliveMutator fix_isalive(rp, is_alive.is_alive_closure());\n-\n-  \/\/ Execute precleaning in the worker thread: it will give us GCLABs, String dedup\n-  \/\/ queues and other goodies. When upstream ReferenceProcessor starts supporting\n-  \/\/ parallel precleans, we can extend this to more threads.\n-  WorkGang* workers = _heap->workers();\n-  uint nworkers = workers->active_workers();\n-  assert(nworkers == 1, \"This code uses only a single worker\");\n-  task_queues()->reserve(nworkers);\n-\n-  ShenandoahPrecleanTask task(rp);\n-  workers->run_task(&task);\n-\n-  assert(task_queues()->is_empty(), \"Should be empty\");\n-}\n-\n@@ -879,1 +517,1 @@\n-void ShenandoahConcurrentMark::mark_loop_prework(uint w, TaskTerminator *t, ReferenceProcessor *rp,\n+void ShenandoahConcurrentMark::mark_loop_prework(uint w, TaskTerminator *t, ShenandoahReferenceProcessor* rp,\n@@ -937,0 +575,2 @@\n+  _heap->ref_processor()->set_mark_closure(worker_id, cl);\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":23,"deletions":383,"binary":false,"changes":406,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+class ShenandoahReferenceProcessor;\n@@ -52,1 +53,1 @@\n-  inline void do_chunked_array_start(ShenandoahObjToScanQueue* q, T* cl, oop array);\n+  inline void do_chunked_array_start(ShenandoahObjToScanQueue* q, T* cl, oop array, bool weak);\n@@ -55,1 +56,1 @@\n-  inline void do_chunked_array(ShenandoahObjToScanQueue* q, T* cl, oop array, int chunk, int pow);\n+  inline void do_chunked_array(ShenandoahObjToScanQueue* q, T* cl, oop array, int chunk, int pow, bool weak);\n@@ -63,1 +64,1 @@\n-  void mark_loop_prework(uint worker_id, TaskTerminator *terminator, ReferenceProcessor *rp, bool strdedup);\n+  void mark_loop_prework(uint worker_id, TaskTerminator *terminator, ShenandoahReferenceProcessor* rp, bool strdedup);\n@@ -66,1 +67,1 @@\n-  void mark_loop(uint worker_id, TaskTerminator* terminator, ReferenceProcessor *rp,\n+  void mark_loop(uint worker_id, TaskTerminator* terminator, ShenandoahReferenceProcessor* rp,\n@@ -76,1 +77,1 @@\n-  static inline void mark_through_ref(T* p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context);\n+  static inline void mark_through_ref(T* p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context, bool weak);\n@@ -85,9 +86,0 @@\n-\/\/ ---------- Weak references\n-\/\/\n-private:\n-  void weak_refs_work(bool full_gc);\n-  void weak_refs_work_doit(bool full_gc);\n-\n-public:\n-  void preclean_weak_refs();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.hpp","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2015, 2020, Red Hat, Inc. All rights reserved.\n@@ -48,0 +48,4 @@\n+  \/\/ Are we in weak subgraph scan?\n+  bool weak = task->is_weak();\n+  cl->set_weak(weak);\n+\n@@ -55,1 +59,1 @@\n-      do_chunked_array_start<T>(q, cl, obj);\n+      do_chunked_array_start<T>(q, cl, obj, weak);\n@@ -64,1 +68,5 @@\n-    count_liveness(live_data, obj);\n+    \/\/ Avoid double-counting objects that are visited twice due to upgrade\n+    \/\/ from final- to strong mark.\n+    if (task->count_liveness()) {\n+      count_liveness(live_data, obj);\n+    }\n@@ -67,1 +75,1 @@\n-    do_chunked_array<T>(q, cl, obj, task->chunk(), task->pow());\n+    do_chunked_array<T>(q, cl, obj, task->chunk(), task->pow(), weak);\n@@ -101,1 +109,1 @@\n-inline void ShenandoahConcurrentMark::do_chunked_array_start(ShenandoahObjToScanQueue* q, T* cl, oop obj) {\n+inline void ShenandoahConcurrentMark::do_chunked_array_start(ShenandoahObjToScanQueue* q, T* cl, oop obj, bool weak) {\n@@ -132,1 +140,1 @@\n-      bool pushed = q->push(ShenandoahMarkTask(array, 1, pow));\n+      bool pushed = q->push(ShenandoahMarkTask(array, true, weak, 1, pow));\n@@ -145,1 +153,1 @@\n-        bool pushed = q->push(ShenandoahMarkTask(array, left_chunk, pow));\n+        bool pushed = q->push(ShenandoahMarkTask(array, true, weak, left_chunk, pow));\n@@ -163,1 +171,1 @@\n-inline void ShenandoahConcurrentMark::do_chunked_array(ShenandoahObjToScanQueue* q, T* cl, oop obj, int chunk, int pow) {\n+inline void ShenandoahConcurrentMark::do_chunked_array(ShenandoahObjToScanQueue* q, T* cl, oop obj, int chunk, int pow, bool weak) {\n@@ -174,1 +182,1 @@\n-    bool pushed = q->push(ShenandoahMarkTask(array, chunk - 1, pow));\n+    bool pushed = q->push(ShenandoahMarkTask(array, true, weak, chunk - 1, pow));\n@@ -218,1 +226,1 @@\n-      ShenandoahConcurrentMark::mark_through_ref<oop, NONE, STRING_DEDUP>(p, _heap, _queue, _mark_context);\n+      ShenandoahConcurrentMark::mark_through_ref<oop, NONE, STRING_DEDUP>(p, _heap, _queue, _mark_context, false);\n@@ -224,1 +232,1 @@\n-inline void ShenandoahConcurrentMark::mark_through_ref(T *p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context) {\n+inline void ShenandoahConcurrentMark::mark_through_ref(T *p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context, bool weak) {\n@@ -255,2 +263,9 @@\n-      if (mark_context->mark(obj)) {\n-        bool pushed = q->push(ShenandoahMarkTask(obj));\n+      bool skip_live = false;\n+      bool marked;\n+      if (weak) {\n+        marked = mark_context->mark_weak(obj);\n+      } else {\n+        marked = mark_context->mark_strong(obj, \/* was_upgraded = *\/ skip_live);\n+      }\n+      if (marked) {\n+        bool pushed = q->push(ShenandoahMarkTask(obj, skip_live, weak));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.inline.hpp","additions":28,"deletions":13,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -144,1 +144,0 @@\n-        heap->set_process_references(heuristics->can_process_references());\n@@ -161,1 +160,0 @@\n-        heap->set_process_references(heuristics->can_process_references());\n@@ -175,1 +173,0 @@\n-      heap->set_process_references(heuristics->should_process_references());\n@@ -407,3 +404,0 @@\n-  \/\/ If not cancelled, can try to concurrently pre-clean\n-  heap->entry_preclean();\n-\n@@ -415,0 +409,1 @@\n+    heap->entry_weak_refs();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+#include \"gc\/shenandoah\/shenandoahReferenceProcessor.hpp\"\n@@ -209,1 +210,1 @@\n-  _bitmap_size = MarkBitMap::compute_size(heap_rs.size());\n+  _bitmap_size = ShenandoahMarkBitMap::compute_size(heap_rs.size());\n@@ -212,1 +213,1 @@\n-  size_t bitmap_bytes_per_region = reg_size_bytes \/ MarkBitMap::heap_map_factor();\n+  size_t bitmap_bytes_per_region = reg_size_bytes \/ ShenandoahMarkBitMap::heap_map_factor();\n@@ -396,3 +397,0 @@\n-  _ref_proc_mt_processing = ParallelRefProcEnabled && (ParallelGCThreads > 1);\n-  _ref_proc_mt_discovery = _max_workers > 1;\n-\n@@ -478,1 +476,1 @@\n-  _ref_processor(NULL),\n+  _ref_processor(new ShenandoahReferenceProcessor(MAX2(_max_workers, 1U))),\n@@ -618,2 +616,0 @@\n-  ref_processing_init();\n-\n@@ -1794,7 +1790,3 @@\n-    if (process_references()) {\n-      \/\/ Abandon reference processing right away: pre-cleaning must have failed.\n-      ReferenceProcessor *rp = ref_processor();\n-      rp->disable_discovery();\n-      rp->abandon_partial_discovery();\n-      rp->verify_no_references_recorded();\n-    }\n+    \/\/ Abandon reference processing right away: pre-cleaning must have failed.\n+    ShenandoahReferenceProcessor* rp = ref_processor();\n+    rp->abandon_partial_discovery();\n@@ -2007,0 +1999,9 @@\n+void ShenandoahHeap::op_weak_refs() {\n+  \/\/ Concurrent weak refs processing\n+  {\n+    ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_weak_refs_work);\n+    ShenandoahGCWorkerPhase worker_phase(ShenandoahPhaseTimings::conc_weak_refs_work);\n+    ref_processor()->process_references(workers(), true \/* concurrent *\/);\n+  }\n+}\n+\n@@ -2080,7 +2081,0 @@\n-void ShenandoahHeap::op_preclean() {\n-  if (ShenandoahPacing) {\n-    pacer()->setup_for_preclean();\n-  }\n-  concurrent_mark()->preclean_weak_refs();\n-}\n-\n@@ -2128,1 +2122,0 @@\n-      set_process_references(heuristics()->can_process_references());\n@@ -2153,0 +2146,6 @@\n+      {\n+        ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_weak_refs_work);\n+        ShenandoahGCWorkerPhase worker_phase(ShenandoahPhaseTimings::conc_weak_refs_work);\n+        ref_processor()->process_references(workers(), false \/* concurrent *\/);\n+      }\n+\n@@ -2313,16 +2312,0 @@\n-void ShenandoahHeap::ref_processing_init() {\n-  assert(_max_workers > 0, \"Sanity\");\n-\n-  _ref_processor =\n-    new ReferenceProcessor(&_subject_to_discovery,  \/\/ is_subject_to_discovery\n-                           _ref_proc_mt_processing, \/\/ MT processing\n-                           _max_workers,            \/\/ Degree of MT processing\n-                           _ref_proc_mt_discovery,  \/\/ MT discovery\n-                           _max_workers,            \/\/ Degree of MT discovery\n-                           false,                   \/\/ Reference discovery is not atomic\n-                           NULL,                    \/\/ No closure, should be installed before use\n-                           true);                   \/\/ Scale worker threads\n-\n-  shenandoah_assert_rp_isalive_not_installed();\n-}\n-\n@@ -2436,1 +2419,1 @@\n-      cleaning_task(timing_phase, &is_alive, &keep_alive, num_workers, !ShenandoahConcurrentRoots::should_do_concurrent_class_unloading());\n+      cleaning_task(timing_phase, &is_alive, &keep_alive, num_workers, is_stw_gc_in_progress());\n@@ -2443,1 +2426,1 @@\n-      cleaning_task(timing_phase, &is_alive, &verify_cl, num_workers, !ShenandoahConcurrentRoots::should_do_concurrent_class_unloading());\n+      cleaning_task(timing_phase, &is_alive, &verify_cl, num_workers, is_stw_gc_in_progress());\n@@ -2446,1 +2429,1 @@\n-      cleaning_task(timing_phase, &is_alive, &do_nothing_cl, num_workers, !ShenandoahConcurrentRoots::should_do_concurrent_class_unloading());\n+      cleaning_task(timing_phase, &is_alive, &do_nothing_cl, num_workers, is_stw_gc_in_progress());\n@@ -2464,4 +2447,0 @@\n-void ShenandoahHeap::set_process_references(bool pr) {\n-  _process_references.set_cond(pr);\n-}\n-\n@@ -2472,4 +2451,0 @@\n-bool ShenandoahHeap::process_references() const {\n-  return _process_references.is_set();\n-}\n-\n@@ -3070,0 +3045,13 @@\n+void ShenandoahHeap::entry_weak_refs() {\n+  static const char* msg = \"Concurrent weak references\";\n+  ShenandoahConcurrentPhase gc_phase(msg, ShenandoahPhaseTimings::conc_weak_refs);\n+  EventMark em(\"%s\", msg);\n+\n+  ShenandoahWorkerScope scope(workers(),\n+                              ShenandoahWorkerPolicy::calc_workers_for_conc_refs_processing(),\n+                              \"concurrent weak references\");\n+\n+  try_inject_alloc_failure();\n+  op_weak_refs();\n+}\n+\n@@ -3156,16 +3144,0 @@\n-void ShenandoahHeap::entry_preclean() {\n-  if (ShenandoahPreclean && process_references()) {\n-    static const char* msg = \"Concurrent precleaning\";\n-    ShenandoahConcurrentPhase gc_phase(msg, ShenandoahPhaseTimings::conc_preclean);\n-    EventMark em(\"%s\", msg);\n-\n-    ShenandoahWorkerScope scope(workers(),\n-                                ShenandoahWorkerPolicy::calc_workers_for_conc_preclean(),\n-                                \"concurrent preclean\",\n-                                \/* check_workers = *\/ false);\n-\n-    try_inject_alloc_failure();\n-    op_preclean();\n-  }\n-}\n-\n@@ -3248,1 +3220,0 @@\n-  bool proc_refs = process_references();\n@@ -3251,5 +3222,1 @@\n-  if (proc_refs && unload_cls) {\n-    return \"Pause Init Mark (process weakrefs) (unload classes)\";\n-  } else if (proc_refs) {\n-    return \"Pause Init Mark (process weakrefs)\";\n-  } else if (unload_cls) {\n+  if (unload_cls) {\n@@ -3265,1 +3232,0 @@\n-  bool proc_refs = process_references();\n@@ -3268,5 +3234,1 @@\n-  if (proc_refs && unload_cls) {\n-    return \"Pause Final Mark (process weakrefs) (unload classes)\";\n-  } else if (proc_refs) {\n-    return \"Pause Final Mark (process weakrefs)\";\n-  } else if (unload_cls) {\n+  if (unload_cls) {\n@@ -3282,1 +3244,0 @@\n-  bool proc_refs = process_references();\n@@ -3285,5 +3246,1 @@\n-  if (proc_refs && unload_cls) {\n-    return \"Concurrent marking (process weakrefs) (unload classes)\";\n-  } else if (proc_refs) {\n-    return \"Concurrent marking (process weakrefs)\";\n-  } else if (unload_cls) {\n+  if (unload_cls) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":41,"deletions":84,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-class ReferenceProcessor;\n@@ -63,1 +62,1 @@\n-class ShenandoahObjToScanQueueSet;\n+class ShenandoahReferenceProcessor;\n@@ -393,1 +392,1 @@\n-  void entry_preclean();\n+  void entry_weak_refs();\n@@ -418,1 +417,1 @@\n-  void op_preclean();\n+  void op_weak_refs();\n@@ -497,7 +496,1 @@\n-  AlwaysTrueClosure    _subject_to_discovery;\n-  ReferenceProcessor*  _ref_processor;\n-  ShenandoahSharedFlag _process_references;\n-  bool                 _ref_proc_mt_discovery;\n-  bool                 _ref_proc_mt_processing;\n-\n-  void ref_processing_init();\n+  ShenandoahReferenceProcessor* const _ref_processor;\n@@ -506,5 +499,1 @@\n-  ReferenceProcessor* ref_processor() { return _ref_processor; }\n-  bool ref_processor_mt_discovery()   { return _ref_proc_mt_discovery;  }\n-  bool ref_processor_mt_processing()  { return _ref_proc_mt_processing; }\n-  void set_process_references(bool pr);\n-  bool process_references() const;\n+  ShenandoahReferenceProcessor* ref_processor() { return _ref_processor; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -404,1 +404,0 @@\n-  MarkBitMap* mark_bit_map = ctx->mark_bit_map();\n@@ -416,1 +415,1 @@\n-  HeapWord* cb = mark_bit_map->get_next_marked_addr(start, end);\n+  HeapWord* cb = ctx->get_next_marked_addr(start, end);\n@@ -443,1 +442,1 @@\n-          cb = mark_bit_map->get_next_marked_addr(cb, limit_bitmap);\n+          cb = ctx->get_next_marked_addr(cb, limit_bitmap);\n@@ -466,1 +465,1 @@\n-        cb = mark_bit_map->get_next_marked_addr(cb, limit_bitmap);\n+        cb = ctx->get_next_marked_addr(cb, limit_bitmap);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -60,4 +60,0 @@\n-\n-  log_info(gc, init)(\"Reference Processing: %s discovery, %s processing\",\n-                     heap->ref_processor_mt_discovery() ? \"Parallel\" : \"Serial\",\n-                     heap->ref_processor_mt_processing() ? \"Parallel\" : \"Serial\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahInitLogger.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Red Hat, Inc. and\/or its affiliates.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/shenandoah\/shenandoahMarkBitMap.inline.hpp\"\n+#include \"gc\/shenandoah\/shenandoahHeap.inline.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+ShenandoahMarkBitMap::ShenandoahMarkBitMap(MemRegion heap, MemRegion storage) :\n+  _shift(LogMinObjAlignment),\n+  _covered(heap),\n+  _map((BitMap::bm_word_t*) storage.start()),\n+  _size((heap.word_size() * 2) >> _shift) {\n+}\n+\n+size_t ShenandoahMarkBitMap::compute_size(size_t heap_size) {\n+  return ReservedSpace::allocation_align_size_up(heap_size \/ mark_distance());\n+}\n+\n+size_t ShenandoahMarkBitMap::mark_distance() {\n+  return MinObjAlignmentInBytes * BitsPerByte \/ 2;\n+}\n+\n+HeapWord* ShenandoahMarkBitMap::get_next_marked_addr(const HeapWord* addr,\n+                                                     const HeapWord* limit) const {\n+  assert(limit != NULL, \"limit must not be NULL\");\n+  \/\/ Round addr up to a possible object boundary to be safe.\n+  size_t const addr_offset = address_to_index(align_up(addr, HeapWordSize << LogMinObjAlignment));\n+  size_t const limit_offset = address_to_index(limit);\n+  size_t const nextOffset = get_next_one_offset(addr_offset, limit_offset);\n+  return index_to_address(nextOffset);\n+}\n+\n+void ShenandoahMarkBitMap::clear_range_within_word(idx_t beg, idx_t end) {\n+  \/\/ With a valid range (beg <= end), this test ensures that end != 0, as\n+  \/\/ required by inverted_bit_mask_for_range.  Also avoids an unnecessary write.\n+  if (beg != end) {\n+    bm_word_t mask = inverted_bit_mask_for_range(beg, end);\n+    *word_addr(beg) &= mask;\n+  }\n+}\n+\n+void ShenandoahMarkBitMap::clear_range(idx_t beg, idx_t end) {\n+  verify_range(beg, end);\n+\n+  idx_t beg_full_word = to_words_align_up(beg);\n+  idx_t end_full_word = to_words_align_down(end);\n+\n+  if (beg_full_word < end_full_word) {\n+    \/\/ The range includes at least one full word.\n+    clear_range_within_word(beg, bit_index(beg_full_word));\n+    clear_range_of_words(beg_full_word, end_full_word);\n+    clear_range_within_word(bit_index(end_full_word), end);\n+  } else {\n+    \/\/ The range spans at most 2 partial words.\n+    idx_t boundary = MIN2(bit_index(beg_full_word), end);\n+    clear_range_within_word(beg, boundary);\n+    clear_range_within_word(boundary, end);\n+  }\n+}\n+\n+bool ShenandoahMarkBitMap::is_small_range_of_words(idx_t beg_full_word, idx_t end_full_word) {\n+  \/\/ There is little point to call large version on small ranges.\n+  \/\/ Need to check carefully, keeping potential idx_t over\/underflow in mind,\n+  \/\/ because beg_full_word > end_full_word can occur when beg and end are in\n+  \/\/ the same word.\n+  \/\/ The threshold should be at least one word.\n+  STATIC_ASSERT(small_range_words >= 1);\n+  return beg_full_word + small_range_words >= end_full_word;\n+}\n+\n+\n+void ShenandoahMarkBitMap::clear_large_range(idx_t beg, idx_t end) {\n+  verify_range(beg, end);\n+\n+  idx_t beg_full_word = to_words_align_up(beg);\n+  idx_t end_full_word = to_words_align_down(end);\n+\n+  if (is_small_range_of_words(beg_full_word, end_full_word)) {\n+    clear_range(beg, end);\n+    return;\n+  }\n+\n+  \/\/ The range includes at least one full word.\n+  clear_range_within_word(beg, bit_index(beg_full_word));\n+  clear_large_range_of_words(beg_full_word, end_full_word);\n+  clear_range_within_word(bit_index(end_full_word), end);\n+}\n+\n+void ShenandoahMarkBitMap::clear_range_large(MemRegion mr) {\n+  MemRegion intersection = mr.intersection(_covered);\n+  assert(!intersection.is_empty(),\n+         \"Given range from \" PTR_FORMAT \" to \" PTR_FORMAT \" is completely outside the heap\",\n+          p2i(mr.start()), p2i(mr.end()));\n+  \/\/ convert address range into offset range\n+  size_t beg = address_to_index(intersection.start());\n+  size_t end = address_to_index(intersection.end());\n+  clear_large_range(beg, end);\n+}\n+\n+#ifdef ASSERT\n+void ShenandoahMarkBitMap::check_mark(HeapWord* addr) const {\n+  assert(ShenandoahHeap::heap()->is_in(addr),\n+         \"Trying to access bitmap \" PTR_FORMAT \" for address \" PTR_FORMAT \" not in the heap.\",\n+         p2i(this), p2i(addr));\n+}\n+\n+void ShenandoahMarkBitMap::verify_index(idx_t bit) const {\n+  assert(bit < _size,\n+         \"BitMap index out of bounds: \" SIZE_FORMAT \" >= \" SIZE_FORMAT,\n+         bit, _size);\n+}\n+\n+void ShenandoahMarkBitMap::verify_limit(idx_t bit) const {\n+  assert(bit <= _size,\n+         \"BitMap limit out of bounds: \" SIZE_FORMAT \" > \" SIZE_FORMAT,\n+         bit, _size);\n+}\n+\n+void ShenandoahMarkBitMap::verify_range(idx_t beg, idx_t end) const {\n+  assert(beg <= end,\n+         \"BitMap range error: \" SIZE_FORMAT \" > \" SIZE_FORMAT, beg, end);\n+  verify_limit(end);\n+}\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkBitMap.cpp","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -0,0 +1,181 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Red Hat, Inc. and\/or its affiliates.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_VM_GC_SHENANDOAH_SHENANDOAHMARKBITMAP_HPP\n+#define SHARE_VM_GC_SHENANDOAH_SHENANDOAHMARKBITMAP_HPP\n+\n+#include \"memory\/memRegion.hpp\"\n+#include \"runtime\/atomic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+class ShenandoahMarkBitMap {\n+public:\n+  typedef size_t idx_t;         \/\/ Type used for bit and word indices.\n+  typedef uintptr_t bm_word_t;  \/\/ Element type of array that represents the\n+                                \/\/ bitmap, with BitsPerWord bits per element.\n+\n+private:\n+  \/\/ Values for get_next_bit_impl flip parameter.\n+  static const bm_word_t find_ones_flip = 0;\n+  static const bm_word_t find_zeros_flip = ~(bm_word_t)0;\n+\n+  int const _shift;\n+  MemRegion _covered;\n+\n+  bm_word_t* _map;     \/\/ First word in bitmap\n+  idx_t      _size;    \/\/ Size of bitmap (in bits)\n+\n+  \/\/ Threshold for performing small range operation, even when large range\n+  \/\/ operation was requested. Measured in words.\n+  static const size_t small_range_words = 32;\n+\n+  static bool is_small_range_of_words(idx_t beg_full_word, idx_t end_full_word);\n+\n+  inline size_t address_to_index(const HeapWord* addr) const;\n+  inline HeapWord* index_to_address(size_t offset) const;\n+\n+  void check_mark(HeapWord* addr) const NOT_DEBUG_RETURN;\n+\n+  \/\/ Return a mask that will select the specified bit, when applied to the word\n+  \/\/ containing the bit.\n+  static bm_word_t bit_mask(idx_t bit) { return (bm_word_t)1 << bit_in_word(bit); }\n+\n+  \/\/ Return the bit number of the first bit in the specified word.\n+  static idx_t bit_index(idx_t word)  { return word << LogBitsPerWord; }\n+\n+  \/\/ Return the position of bit within the word that contains it (e.g., if\n+  \/\/ bitmap words are 32 bits, return a number 0 <= n <= 31).\n+  static idx_t bit_in_word(idx_t bit) { return bit & (BitsPerWord - 1); }\n+\n+  bm_word_t* map()                 { return _map; }\n+  const bm_word_t* map() const     { return _map; }\n+  bm_word_t map(idx_t word) const { return _map[word]; }\n+\n+  \/\/ Return a pointer to the word containing the specified bit.\n+  bm_word_t* word_addr(idx_t bit) {\n+    return map() + to_words_align_down(bit);\n+  }\n+\n+  const bm_word_t* word_addr(idx_t bit) const {\n+    return map() + to_words_align_down(bit);\n+  }\n+\n+  static inline const bm_word_t load_word_ordered(const volatile bm_word_t* const addr, atomic_memory_order memory_order);\n+\n+  bool at(idx_t index) const {\n+    verify_index(index);\n+    return (*word_addr(index) & bit_mask(index)) != 0;\n+  }\n+\n+  \/\/ Assumes relevant validity checking for bit has already been done.\n+  static idx_t raw_to_words_align_up(idx_t bit) {\n+    return raw_to_words_align_down(bit + (BitsPerWord - 1));\n+  }\n+\n+  \/\/ Assumes relevant validity checking for bit has already been done.\n+  static idx_t raw_to_words_align_down(idx_t bit) {\n+    return bit >> LogBitsPerWord;\n+  }\n+\n+  \/\/ Word-aligns bit and converts it to a word offset.\n+  \/\/ precondition: bit <= size()\n+  idx_t to_words_align_up(idx_t bit) const {\n+    verify_limit(bit);\n+    return raw_to_words_align_up(bit);\n+  }\n+\n+  \/\/ Word-aligns bit and converts it to a word offset.\n+  \/\/ precondition: bit <= size()\n+  inline idx_t to_words_align_down(idx_t bit) const {\n+    verify_limit(bit);\n+    return raw_to_words_align_down(bit);\n+  }\n+\n+  \/\/ Helper for get_next_{zero,one}_bit variants.\n+  \/\/ - flip designates whether searching for 1s or 0s.  Must be one of\n+  \/\/   find_{zeros,ones}_flip.\n+  \/\/ - aligned_right is true if r_index is a priori on a bm_word_t boundary.\n+  template<bm_word_t flip, bool aligned_right>\n+  inline idx_t get_next_bit_impl(idx_t l_index, idx_t r_index) const;\n+\n+  inline idx_t get_next_one_offset (idx_t l_index, idx_t r_index) const;\n+\n+  void clear_large_range (idx_t beg, idx_t end);\n+\n+  \/\/ Verify bit is less than size().\n+  void verify_index(idx_t bit) const NOT_DEBUG_RETURN;\n+  \/\/ Verify bit is not greater than size().\n+  void verify_limit(idx_t bit) const NOT_DEBUG_RETURN;\n+  \/\/ Verify [beg,end) is a valid range, e.g. beg <= end <= size().\n+  void verify_range(idx_t beg, idx_t end) const NOT_DEBUG_RETURN;\n+\n+public:\n+  static size_t compute_size(size_t heap_size);\n+  \/\/ Returns the amount of bytes on the heap between two marks in the bitmap.\n+  static size_t mark_distance();\n+  \/\/ Returns how many bytes (or bits) of the heap a single byte (or bit) of the\n+  \/\/ mark bitmap corresponds to. This is the same as the mark distance above.\n+  static size_t heap_map_factor() {\n+    return mark_distance();\n+  }\n+\n+  ShenandoahMarkBitMap(MemRegion heap, MemRegion storage);\n+\n+  \/\/ Mark word as 'strong' if it hasn't been marked strong yet.\n+  \/\/ Return true if the word has been marked strong, false if it has already been\n+  \/\/ marked strong or if another thread has beat us by marking it\n+  \/\/ strong.\n+  \/\/ Words that have been marked final before or by a concurrent thread will be\n+  \/\/ upgraded to strong. In this case, this method also returns true.\n+  inline bool mark_strong(HeapWord* w, bool& was_upgraded);\n+\n+  \/\/ Mark word as 'weak' if it hasn't been marked weak or strong yet.\n+  \/\/ Return true if the word has been marked weak, false if it has already been\n+  \/\/ marked strong or weak or if another thread has beat us by marking it\n+  \/\/ strong or weak.\n+  inline bool mark_weak(HeapWord* heap_addr);\n+\n+  inline bool is_marked(HeapWord* addr) const;\n+  inline bool is_marked_strong(HeapWord* w)  const;\n+  inline bool is_marked_weak(HeapWord* addr) const;\n+\n+  \/\/ Return the address corresponding to the next marked bit at or after\n+  \/\/ \"addr\", and before \"limit\", if \"limit\" is non-NULL.  If there is no\n+  \/\/ such bit, returns \"limit\" if that is non-NULL, or else \"endWord()\".\n+  HeapWord* get_next_marked_addr(const HeapWord* addr,\n+                                 const HeapWord* limit) const;\n+\n+  bm_word_t inverted_bit_mask_for_range(idx_t beg, idx_t end) const;\n+  void  clear_range_within_word    (idx_t beg, idx_t end);\n+  void clear_range (idx_t beg, idx_t end);\n+  void clear_range_large(MemRegion mr);\n+\n+  void clear_range_of_words(idx_t beg, idx_t end);\n+  void clear_large_range_of_words(idx_t beg, idx_t end);\n+  static void clear_range_of_words(bm_word_t* map, idx_t beg, idx_t end);\n+\n+};\n+\n+#endif \/\/ SHARE_VM_GC_SHENANDOAH_SHENANDOAHMARKBITMAP_HPP\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkBitMap.hpp","additions":181,"deletions":0,"binary":false,"changes":181,"status":"added"},{"patch":"@@ -0,0 +1,219 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Red Hat, Inc. and\/or its affiliates.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_VM_GC_SHENANDOAH_SHENANDOAHMARKBITMAP_INLINE_HPP\n+#define SHARE_VM_GC_SHENANDOAH_SHENANDOAHMARKBITMAP_INLINE_HPP\n+\n+#include \"gc\/shenandoah\/shenandoahMarkBitMap.hpp\"\n+#include \"runtime\/atomic.hpp\"\n+#include \"utilities\/count_trailing_zeros.hpp\"\n+\n+inline size_t ShenandoahMarkBitMap::address_to_index(const HeapWord* addr) const {\n+  return (pointer_delta(addr, _covered.start()) << 1) >> _shift;\n+}\n+\n+inline HeapWord* ShenandoahMarkBitMap::index_to_address(size_t offset) const {\n+  return _covered.start() + ((offset >> 1) << _shift);\n+}\n+\n+inline bool ShenandoahMarkBitMap::mark_strong(HeapWord* heap_addr, bool& was_upgraded) {\n+  check_mark(heap_addr);\n+\n+  idx_t bit = address_to_index(heap_addr);\n+  verify_index(bit);\n+  volatile bm_word_t* const addr = word_addr(bit);\n+  const bm_word_t mask = bit_mask(bit);\n+  const bm_word_t mask_weak = (bm_word_t)1 << (bit_in_word(bit) + 1);\n+  bm_word_t old_val = load_word_ordered(addr, memory_order_conservative);\n+\n+  do {\n+    const bm_word_t new_val = old_val | mask;\n+    if (new_val == old_val) {\n+      assert(!was_upgraded, \"Should be false already\");\n+      return false;     \/\/ Someone else beat us to it.\n+    }\n+    const bm_word_t cur_val = Atomic::cmpxchg(addr, old_val, new_val, memory_order_conservative);\n+    if (cur_val == old_val) {\n+      was_upgraded = (cur_val & mask_weak) != 0;\n+      return true;      \/\/ Success.\n+    }\n+    old_val = cur_val;  \/\/ The value changed, try again.\n+  } while (true);\n+}\n+\n+inline bool ShenandoahMarkBitMap::mark_weak(HeapWord* heap_addr) {\n+  check_mark(heap_addr);\n+\n+  idx_t bit = address_to_index(heap_addr);\n+  verify_index(bit);\n+  volatile bm_word_t* const addr = word_addr(bit);\n+  const bm_word_t mask_weak = (bm_word_t)1 << (bit_in_word(bit) + 1);\n+  const bm_word_t mask_strong = (bm_word_t)1 << bit_in_word(bit);\n+  bm_word_t old_val = load_word_ordered(addr, memory_order_conservative);\n+\n+  do {\n+    if ((old_val & mask_strong) != 0) {\n+      return false;     \/\/ Already marked strong\n+    }\n+    const bm_word_t new_val = old_val | mask_weak;\n+    if (new_val == old_val) {\n+      return false;     \/\/ Someone else beat us to it.\n+    }\n+    const bm_word_t cur_val = Atomic::cmpxchg(addr, old_val, new_val, memory_order_conservative);\n+    if (cur_val == old_val) {\n+      return true;      \/\/ Success.\n+    }\n+    old_val = cur_val;  \/\/ The value changed, try again.\n+  } while (true);\n+}\n+\n+inline bool ShenandoahMarkBitMap::is_marked_strong(HeapWord* addr)  const {\n+  check_mark(addr);\n+  return at(address_to_index(addr));\n+}\n+\n+inline bool ShenandoahMarkBitMap::is_marked_weak(HeapWord* addr) const {\n+  check_mark(addr);\n+  return at(address_to_index(addr) + 1);\n+}\n+\n+inline bool ShenandoahMarkBitMap::is_marked(HeapWord* addr) const {\n+  check_mark(addr);\n+  idx_t index = address_to_index(addr);\n+  verify_index(index);\n+  bm_word_t mask = (bm_word_t)3 << bit_in_word(index);\n+  return (*word_addr(index) & mask) != 0;\n+}\n+\n+inline const ShenandoahMarkBitMap::bm_word_t ShenandoahMarkBitMap::load_word_ordered(const volatile bm_word_t* const addr, atomic_memory_order memory_order) {\n+  if (memory_order == memory_order_relaxed || memory_order == memory_order_release) {\n+    return Atomic::load(addr);\n+  } else {\n+    assert(memory_order == memory_order_acq_rel ||\n+           memory_order == memory_order_acquire ||\n+           memory_order == memory_order_conservative,\n+           \"unexpected memory ordering\");\n+    return Atomic::load_acquire(addr);\n+  }\n+}\n+\n+template<ShenandoahMarkBitMap::bm_word_t flip, bool aligned_right>\n+inline ShenandoahMarkBitMap::idx_t ShenandoahMarkBitMap::get_next_bit_impl(idx_t l_index, idx_t r_index) const {\n+  STATIC_ASSERT(flip == find_ones_flip || flip == find_zeros_flip);\n+  verify_range(l_index, r_index);\n+  assert(!aligned_right || is_aligned(r_index, BitsPerWord), \"r_index not aligned\");\n+\n+  \/\/ The first word often contains an interesting bit, either due to\n+  \/\/ density or because of features of the calling algorithm.  So it's\n+  \/\/ important to examine that first word with a minimum of fuss,\n+  \/\/ minimizing setup time for later words that will be wasted if the\n+  \/\/ first word is indeed interesting.\n+\n+  \/\/ The benefit from aligned_right being true is relatively small.\n+  \/\/ It saves an operation in the setup for the word search loop.\n+  \/\/ It also eliminates the range check on the final result.\n+  \/\/ However, callers often have a comparison with r_index, and\n+  \/\/ inlining often allows the two comparisons to be combined; it is\n+  \/\/ important when !aligned_right that return paths either return\n+  \/\/ r_index or a value dominated by a comparison with r_index.\n+  \/\/ aligned_right is still helpful when the caller doesn't have a\n+  \/\/ range check because features of the calling algorithm guarantee\n+  \/\/ an interesting bit will be present.\n+\n+  if (l_index < r_index) {\n+    \/\/ Get the word containing l_index, and shift out low bits.\n+    idx_t index = to_words_align_down(l_index);\n+    bm_word_t cword = (map(index) ^ flip) >> bit_in_word(l_index);\n+    if ((cword & 1) != 0) {\n+      \/\/ The first bit is similarly often interesting. When it matters\n+      \/\/ (density or features of the calling algorithm make it likely\n+      \/\/ the first bit is set), going straight to the next clause compares\n+      \/\/ poorly with doing this check first; count_trailing_zeros can be\n+      \/\/ relatively expensive, plus there is the additional range check.\n+      \/\/ But when the first bit isn't set, the cost of having tested for\n+      \/\/ it is relatively small compared to the rest of the search.\n+      return l_index;\n+    } else if (cword != 0) {\n+      \/\/ Flipped and shifted first word is non-zero.\n+      idx_t result = l_index + count_trailing_zeros(cword);\n+      if (aligned_right || (result < r_index)) return result;\n+      \/\/ Result is beyond range bound; return r_index.\n+    } else {\n+      \/\/ Flipped and shifted first word is zero.  Word search through\n+      \/\/ aligned up r_index for a non-zero flipped word.\n+      idx_t limit = aligned_right\n+                    ? to_words_align_down(r_index) \/\/ Miniscule savings when aligned.\n+                    : to_words_align_up(r_index);\n+      while (++index < limit) {\n+        cword = map(index) ^ flip;\n+        if (cword != 0) {\n+          idx_t result = bit_index(index) + count_trailing_zeros(cword);\n+          if (aligned_right || (result < r_index)) return result;\n+          \/\/ Result is beyond range bound; return r_index.\n+          assert((index + 1) == limit, \"invariant\");\n+          break;\n+        }\n+      }\n+      \/\/ No bits in range; return r_index.\n+    }\n+  }\n+  return r_index;\n+}\n+\n+inline ShenandoahMarkBitMap::idx_t ShenandoahMarkBitMap::get_next_one_offset(idx_t l_offset, idx_t r_offset) const {\n+  return get_next_bit_impl<find_ones_flip, false>(l_offset, r_offset);\n+}\n+\n+\/\/ Returns a bit mask for a range of bits [beg, end) within a single word.  Each\n+\/\/ bit in the mask is 0 if the bit is in the range, 1 if not in the range.  The\n+\/\/ returned mask can be used directly to clear the range, or inverted to set the\n+\/\/ range.  Note:  end must not be 0.\n+inline ShenandoahMarkBitMap::bm_word_t\n+ShenandoahMarkBitMap::inverted_bit_mask_for_range(idx_t beg, idx_t end) const {\n+  assert(end != 0, \"does not work when end == 0\");\n+  assert(beg == end || to_words_align_down(beg) == to_words_align_down(end - 1),\n+         \"must be a single-word range\");\n+  bm_word_t mask = bit_mask(beg) - 1;   \/\/ low (right) bits\n+  if (bit_in_word(end) != 0) {\n+    mask |= ~(bit_mask(end) - 1);       \/\/ high (left) bits\n+  }\n+  return mask;\n+}\n+\n+inline void ShenandoahMarkBitMap::clear_range_of_words(bm_word_t* map, idx_t beg, idx_t end) {\n+  for (idx_t i = beg; i < end; ++i) map[i] = 0;\n+}\n+\n+inline void ShenandoahMarkBitMap::clear_large_range_of_words(idx_t beg, idx_t end) {\n+  assert(beg <= end, \"underflow\");\n+  memset(_map + beg, 0, (end - beg) * sizeof(bm_word_t));\n+}\n+\n+inline void ShenandoahMarkBitMap::clear_range_of_words(idx_t beg, idx_t end) {\n+  clear_range_of_words(_map, beg, end);\n+}\n+\n+\n+#endif \/\/ SHARE_VM_GC_SHENANDOAH_SHENANDOAHMARKBITMAP_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkBitMap.inline.hpp","additions":219,"deletions":0,"binary":false,"changes":219,"status":"added"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"gc\/shenandoah\/shenandoahReferenceProcessor.hpp\"\n@@ -132,2 +133,1 @@\n-    ReferenceProcessor* rp = heap->ref_processor();\n-    rp->disable_discovery();\n+    ShenandoahReferenceProcessor* rp = heap->ref_processor();\n@@ -135,1 +135,0 @@\n-    rp->verify_no_references_recorded();\n@@ -244,1 +243,0 @@\n-  heap->set_process_references(heap->heuristics()->can_process_references());\n@@ -247,1 +245,1 @@\n-  ReferenceProcessor* rp = heap->ref_processor();\n+  ShenandoahReferenceProcessor* rp = heap->ref_processor();\n@@ -249,3 +247,1 @@\n-  rp->enable_discovery(true \/*verify_no_refs*\/);\n-  rp->setup_policy(true); \/\/ forcefully purge all soft references\n-  rp->set_active_mt_degree(heap->workers()->active_workers());\n+  rp->set_soft_reference_policy(true); \/\/ forcefully purge all soft references\n@@ -256,0 +252,1 @@\n+  rp->process_references(heap->workers(), false \/* concurrent *\/);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkCompact.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+  _mark_bit_map(heap_region, bitmap_region),\n@@ -36,1 +37,0 @@\n-  _mark_bit_map.initialize(heap_region, bitmap_region);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n-#include \"gc\/shared\/markBitMap.hpp\"\n+#include \"gc\/shenandoah\/shenandoahMarkBitMap.hpp\"\n+#include \"gc\/shenandoah\/shenandoahSharedVariables.hpp\"\n@@ -38,1 +39,1 @@\n-  MarkBitMap _mark_bit_map;\n+  ShenandoahMarkBitMap _mark_bit_map;\n@@ -54,1 +55,2 @@\n-  inline bool mark(oop obj);\n+  inline bool mark_strong(oop obj, bool& was_upgraded);\n+  inline bool mark_weak(oop obj);\n@@ -56,1 +58,6 @@\n-  inline bool is_marked(oop obj) const;\n+  \/\/ Simple versions of marking accessors, to be used outside of marking (e.g. no possible concurrent updates)\n+  inline bool is_marked(oop) const;\n+  inline bool is_marked_strong(oop obj) const;\n+  inline bool is_marked_weak(oop obj) const;\n+\n+  inline HeapWord* get_next_marked_addr(HeapWord* addr, HeapWord* limit) const;\n@@ -61,2 +68,0 @@\n-  inline MarkBitMap* mark_bit_map();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.hpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shenandoah\/shenandoahMarkBitMap.inline.hpp\"\n@@ -30,2 +31,3 @@\n-inline MarkBitMap* ShenandoahMarkingContext::mark_bit_map() {\n-  return &_mark_bit_map;\n+inline bool ShenandoahMarkingContext::mark_strong(oop obj, bool& was_upgraded) {\n+  shenandoah_assert_not_forwarded(NULL, obj);\n+  return (! allocated_after_mark_start(obj)) && _mark_bit_map.mark_strong(cast_from_oop<HeapWord*>(obj), was_upgraded);\n@@ -34,1 +36,1 @@\n-inline bool ShenandoahMarkingContext::mark(oop obj) {\n+inline bool ShenandoahMarkingContext::mark_weak(oop obj) {\n@@ -36,1 +38,1 @@\n-  return (! allocated_after_mark_start(obj)) && _mark_bit_map.par_mark(obj);\n+  return (! allocated_after_mark_start(obj)) && _mark_bit_map.mark_weak(cast_from_oop<HeapWord *>(obj));\n@@ -40,1 +42,13 @@\n-  return allocated_after_mark_start(obj) || _mark_bit_map.is_marked(obj);\n+  return allocated_after_mark_start(obj) || _mark_bit_map.is_marked(cast_from_oop<HeapWord *>(obj));\n+}\n+\n+inline bool ShenandoahMarkingContext::is_marked_strong(oop obj) const {\n+  return allocated_after_mark_start(obj) || _mark_bit_map.is_marked_strong(cast_from_oop<HeapWord*>(obj));\n+}\n+\n+inline bool ShenandoahMarkingContext::is_marked_weak(oop obj) const {\n+  return allocated_after_mark_start(obj) || _mark_bit_map.is_marked_weak(cast_from_oop<HeapWord *>(obj));\n+}\n+\n+inline HeapWord* ShenandoahMarkingContext::get_next_marked_addr(HeapWord* start, HeapWord* limit) const {\n+  return _mark_bit_map.get_next_marked_addr(start, limit);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.inline.hpp","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+  bool _weak;\n@@ -58,1 +59,9 @@\n-  ShenandoahMarkRefsSuperClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp);\n+  ShenandoahMarkRefsSuperClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp);\n+\n+  bool is_weak() const {\n+    return _weak;\n+  }\n+\n+  void set_weak(bool weak) {\n+    _weak = weak;\n+  }\n@@ -67,1 +76,1 @@\n-  ShenandoahMarkUpdateRefsClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkUpdateRefsClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -81,1 +90,1 @@\n-  ShenandoahMarkUpdateRefsDedupClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkUpdateRefsDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -95,1 +104,1 @@\n-  ShenandoahMarkUpdateRefsMetadataClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkUpdateRefsMetadataClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -109,1 +118,1 @@\n-  ShenandoahMarkUpdateRefsMetadataDedupClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkUpdateRefsMetadataDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -123,1 +132,1 @@\n-  ShenandoahMarkRefsClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkRefsClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -137,1 +146,1 @@\n-  ShenandoahMarkRefsDedupClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkRefsDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -151,1 +160,1 @@\n-  ShenandoahMarkResolveRefsClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkResolveRefsClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -165,1 +174,1 @@\n-  ShenandoahMarkRefsMetadataClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkRefsMetadataClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n@@ -179,1 +188,1 @@\n-  ShenandoahMarkRefsMetadataDedupClosure(ShenandoahObjToScanQueue* q, ReferenceProcessor* rp) :\n+  ShenandoahMarkRefsMetadataDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOopClosures.hpp","additions":19,"deletions":10,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, STRING_DEDUP>(p, _heap, _queue, _mark_context);\n+  ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, STRING_DEDUP>(p, _heap, _queue, _mark_context, _weak);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOopClosures.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,10 +156,0 @@\n-void ShenandoahPacer::setup_for_preclean() {\n-  assert(ShenandoahPacing, \"Only be here when pacing is enabled\");\n-\n-  size_t initial = _heap->max_capacity();\n-  restart_with(initial, 1.0);\n-\n-  log_info(gc, ergo)(\"Pacer for Precleaning. Non-Taxable: \" SIZE_FORMAT \"%s\",\n-                     byte_size_in_proper_unit(initial), proper_unit_for_byte_size(initial));\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -82,1 +82,0 @@\n-  void setup_for_preclean();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -116,0 +116,1 @@\n+    case conc_weak_refs_work:\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,2 +63,0 @@\n-  f(conc_preclean,                                  \"Concurrent Precleaning\")          \\\n-                                                                                       \\\n@@ -85,0 +83,3 @@\n+  f(conc_weak_refs,                                 \"Concurrent Weak References\")      \\\n+  f(conc_weak_refs_work,                            \"  Process\")                       \\\n+  SHENANDOAH_PAR_PHASE_DO(conc_weak_refs_work_,     \"    CWRF: \", f)                   \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,593 @@\n+\/*\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Red Hat, Inc. and\/or its affiliates.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"classfile\/javaClasses.hpp\"\n+#include \"gc\/shenandoah\/shenandoahOopClosures.hpp\"\n+#include \"gc\/shenandoah\/shenandoahReferenceProcessor.hpp\"\n+#include \"gc\/shenandoah\/shenandoahThreadLocalData.hpp\"\n+#include \"gc\/shenandoah\/shenandoahUtils.hpp\"\n+#include \"runtime\/atomic.hpp\"\n+#include \"logging\/log.hpp\"\n+\n+static ReferenceType reference_type(oop reference) {\n+  return InstanceKlass::cast(reference->klass())->reference_type();\n+}\n+\n+static const char* reference_type_name(ReferenceType type) {\n+  switch (type) {\n+    case REF_SOFT:\n+      return \"Soft\";\n+\n+    case REF_WEAK:\n+      return \"Weak\";\n+\n+    case REF_FINAL:\n+      return \"Final\";\n+\n+    case REF_PHANTOM:\n+      return \"Phantom\";\n+\n+    default:\n+      ShouldNotReachHere();\n+      return NULL;\n+  }\n+}\n+\n+template <typename T>\n+static void set_oop_field(T* field, oop value);\n+\n+template <>\n+void set_oop_field<oop>(oop* field, oop value) {\n+  *field = value;\n+}\n+\n+template <>\n+void set_oop_field<narrowOop>(narrowOop* field, oop value) {\n+  *field = CompressedOops::encode(value);\n+}\n+\n+static oop lrb(oop obj) {\n+  if (obj != NULL && ShenandoahHeap::heap()->marking_context()->is_marked(obj)) {\n+    return ShenandoahBarrierSet::barrier_set()->load_reference_barrier(obj);\n+  } else {\n+    return obj;\n+  }\n+}\n+\n+template <typename T>\n+static volatile T* reference_referent_addr(oop reference) {\n+  return (volatile T*)java_lang_ref_Reference::referent_addr_raw(reference);\n+}\n+\n+template <typename T>\n+static oop reference_referent(oop reference) {\n+  T heap_oop = Atomic::load(reference_referent_addr<T>(reference));\n+  return CompressedOops::decode(heap_oop);\n+}\n+\n+static void reference_set_referent(oop reference, oop referent) {\n+  java_lang_ref_Reference::set_referent_raw(reference, referent);\n+}\n+\n+template <typename T>\n+static T* reference_discovered_addr(oop reference) {\n+  return reinterpret_cast<T*>(java_lang_ref_Reference::discovered_addr_raw(reference));\n+}\n+\n+template <typename T>\n+static oop reference_discovered(oop reference) {\n+  T heap_oop = *reference_discovered_addr<T>(reference);\n+  return lrb(CompressedOops::decode(heap_oop));\n+}\n+\n+template <typename T>\n+static void reference_set_discovered(oop reference, oop discovered);\n+\n+template <>\n+void reference_set_discovered<oop>(oop reference, oop discovered) {\n+  *reference_discovered_addr<oop>(reference) = discovered;\n+}\n+\n+template <>\n+void reference_set_discovered<narrowOop>(oop reference, oop discovered) {\n+  *reference_discovered_addr<narrowOop>(reference) = CompressedOops::encode(discovered);\n+}\n+\n+template<typename T>\n+static bool reference_cas_discovered(oop reference, oop discovered);\n+\n+template<>\n+bool reference_cas_discovered<narrowOop>(oop reference, oop discovered) {\n+  volatile narrowOop* addr = reinterpret_cast<volatile narrowOop*>(java_lang_ref_Reference::discovered_addr_raw(reference));\n+  narrowOop compare = CompressedOops::encode(NULL);\n+  narrowOop exchange = CompressedOops::encode(discovered);\n+  return Atomic::cmpxchg(addr, compare, exchange) == compare;\n+}\n+\n+template<>\n+bool reference_cas_discovered<oop>(oop reference, oop discovered) {\n+  volatile oop* addr = reinterpret_cast<volatile oop*>(java_lang_ref_Reference::discovered_addr_raw(reference));\n+  return Atomic::cmpxchg(addr, oop(NULL), discovered) == NULL;\n+}\n+\n+template <typename T>\n+static T* reference_next_addr(oop reference) {\n+  return reinterpret_cast<T*>(java_lang_ref_Reference::next_addr_raw(reference));\n+}\n+\n+template <typename T>\n+static oop reference_next(oop reference) {\n+  T heap_oop = RawAccess<>::oop_load(reference_next_addr<T>(reference));\n+  return lrb(CompressedOops::decode(heap_oop));\n+}\n+\n+static void reference_set_next(oop reference, oop next) {\n+  java_lang_ref_Reference::set_next_raw(reference, next);\n+}\n+\n+static void soft_reference_update_clock() {\n+  const jlong now = os::javaTimeNanos() \/ NANOSECS_PER_MILLISEC;\n+  java_lang_ref_SoftReference::set_clock(now);\n+}\n+\n+ShenandoahRefProcThreadLocal::ShenandoahRefProcThreadLocal() :\n+  _discovered_list(NULL),\n+  _encountered_count(),\n+  _discovered_count(),\n+  _enqueued_count() {\n+}\n+\n+void ShenandoahRefProcThreadLocal::reset() {\n+  _discovered_list = NULL;\n+  _mark_closure = NULL;\n+  for (uint i = 0; i < reference_type_count; i++) {\n+    _encountered_count[i] = 0;\n+    _discovered_count[i] = 0;\n+    _enqueued_count[i] = 0;\n+  }\n+}\n+\n+template <typename T>\n+T* ShenandoahRefProcThreadLocal::discovered_list_addr() {\n+  return reinterpret_cast<T*>(&_discovered_list);\n+}\n+\n+template <>\n+oop ShenandoahRefProcThreadLocal::discovered_list_head<oop>() const {\n+  return *reinterpret_cast<const oop*>(&_discovered_list);\n+}\n+\n+template <>\n+oop ShenandoahRefProcThreadLocal::discovered_list_head<narrowOop>() const {\n+  return CompressedOops::decode(*reinterpret_cast<const narrowOop*>(&_discovered_list));\n+}\n+\n+template <>\n+void ShenandoahRefProcThreadLocal::set_discovered_list_head<narrowOop>(oop head) {\n+  *discovered_list_addr<narrowOop>() = CompressedOops::encode(head);\n+}\n+\n+template <>\n+void ShenandoahRefProcThreadLocal::set_discovered_list_head<oop>(oop head) {\n+  *discovered_list_addr<oop>() = head;\n+}\n+\n+ShenandoahReferenceProcessor::ShenandoahReferenceProcessor(uint max_workers) :\n+  _soft_reference_policy(NULL),\n+  _ref_proc_thread_locals(NEW_C_HEAP_ARRAY(ShenandoahRefProcThreadLocal, max_workers, mtGC)),\n+  _pending_list(NULL),\n+  _pending_list_tail(&_pending_list),\n+  _iterate_discovered_list_id(0U) {\n+  for (size_t i = 0; i < max_workers; i++) {\n+    _ref_proc_thread_locals[i].reset();\n+  }\n+}\n+\n+void ShenandoahReferenceProcessor::reset_thread_locals() {\n+  uint max_workers = ShenandoahHeap::heap()->max_workers();\n+  for (uint i = 0; i < max_workers; i++) {\n+    _ref_proc_thread_locals[i].reset();\n+  }\n+}\n+\n+void ShenandoahReferenceProcessor::set_mark_closure(uint worker_id, ShenandoahMarkRefsSuperClosure* mark_closure) {\n+  _ref_proc_thread_locals[worker_id].set_mark_closure(mark_closure);\n+}\n+\n+void ShenandoahReferenceProcessor::set_soft_reference_policy(bool clear) {\n+  static AlwaysClearPolicy always_clear_policy;\n+  static LRUMaxHeapPolicy lru_max_heap_policy;\n+\n+  if (clear) {\n+    log_info(gc, ref)(\"Clearing All SoftReferences\");\n+    _soft_reference_policy = &always_clear_policy;\n+  } else {\n+    _soft_reference_policy = &lru_max_heap_policy;\n+  }\n+\n+  _soft_reference_policy->setup();\n+}\n+\n+template <typename T>\n+bool ShenandoahReferenceProcessor::is_inactive(oop reference, oop referent, ReferenceType type) const {\n+  if (type == REF_FINAL) {\n+    \/\/ A FinalReference is inactive if its next field is non-null. An application can't\n+    \/\/ call enqueue() or clear() on a FinalReference.\n+    return reference_next<T>(reference) != NULL;\n+  } else {\n+    \/\/ A non-FinalReference is inactive if the referent is null. The referent can only\n+    \/\/ be null if the application called Reference.enqueue() or Reference.clear().\n+    return referent == NULL;\n+  }\n+}\n+\n+bool ShenandoahReferenceProcessor::is_strongly_live(oop referent) const {\n+  return ShenandoahHeap::heap()->marking_context()->is_marked_strong(referent);\n+}\n+\n+bool ShenandoahReferenceProcessor::is_softly_live(oop reference, ReferenceType type) const {\n+  if (type != REF_SOFT) {\n+    \/\/ Not a SoftReference\n+    return false;\n+  }\n+\n+  \/\/ Ask SoftReference policy\n+  const jlong clock = java_lang_ref_SoftReference::clock();\n+  assert(clock != 0, \"Clock not initialized\");\n+  assert(_soft_reference_policy != NULL, \"Policy not initialized\");\n+  return !_soft_reference_policy->should_clear_reference(reference, clock);\n+}\n+\n+template <typename T>\n+bool ShenandoahReferenceProcessor::should_discover(oop reference, ReferenceType type) const {\n+  T* referent_addr = (T*) java_lang_ref_Reference::referent_addr_raw(reference);\n+  T heap_oop = RawAccess<>::oop_load(referent_addr);\n+  oop referent = CompressedOops::decode_not_null(heap_oop);\n+\n+  if (is_inactive<T>(reference, referent, type)) {\n+    log_trace(gc,ref)(\"Reference inactive: \" PTR_FORMAT, p2i(reference));\n+    return false;\n+  }\n+\n+  if (is_strongly_live(referent)) {\n+    log_trace(gc,ref)(\"Reference strongly live: \" PTR_FORMAT, p2i(reference));\n+    return false;\n+  }\n+\n+  if (is_softly_live(reference, type)) {\n+    log_trace(gc,ref)(\"Reference softly live: \" PTR_FORMAT, p2i(reference));\n+    return false;\n+  }\n+\n+  return true;\n+}\n+\n+template <typename T>\n+bool ShenandoahReferenceProcessor::should_drop(oop reference, ReferenceType type) const {\n+  const oop referent = reference_referent<T>(reference);\n+  if (referent == NULL) {\n+    \/\/ Reference has been cleared, by a call to Reference.enqueue()\n+    \/\/ or Reference.clear() from the application, which means we\n+    \/\/ should drop the reference.\n+    return true;\n+  }\n+\n+  \/\/ Check if the referent is still alive, in which case we should\n+  \/\/ drop the reference.\n+  if (type == REF_PHANTOM) {\n+    return ShenandoahHeap::heap()->complete_marking_context()->is_marked(referent);\n+  } else {\n+    return ShenandoahHeap::heap()->complete_marking_context()->is_marked_strong(referent);\n+  }\n+}\n+\n+template <typename T>\n+void ShenandoahReferenceProcessor::make_inactive(oop reference, ReferenceType type) const {\n+  if (type == REF_FINAL) {\n+    \/\/ Don't clear referent. It is needed by the Finalizer thread to make the call\n+    \/\/ to finalize(). A FinalReference is instead made inactive by self-looping the\n+    \/\/ next field. An application can't call FinalReference.enqueue(), so there is\n+    \/\/ no race to worry about when setting the next field.\n+    assert(reference_next<T>(reference) == NULL, \"Already inactive\");\n+    assert(ShenandoahHeap::heap()->marking_context()->is_marked(reference_referent<T>(reference)), \"only make inactive final refs with alive referents\");\n+    reference_set_next(reference, reference);\n+  } else {\n+    \/\/ Clear referent\n+    reference_set_referent(reference, NULL);\n+  }\n+}\n+\n+template <typename T>\n+bool ShenandoahReferenceProcessor::discover(oop reference, ReferenceType type, uint worker_id) {\n+  if (!should_discover<T>(reference, type)) {\n+    \/\/ Not discovered\n+    return false;\n+  }\n+\n+  if (reference_discovered<T>(reference) != NULL) {\n+    \/\/ Already discovered. This can happen if the reference is marked finalizable first, and then strong,\n+    \/\/ in which case it will be seen 2x by marking.\n+    log_trace(gc,ref)(\"Reference already discovered: \" PTR_FORMAT, p2i(reference));\n+    return true;\n+  }\n+\n+  if (type == REF_FINAL) {\n+    ShenandoahMarkRefsSuperClosure* cl = _ref_proc_thread_locals[worker_id].mark_closure();\n+    bool weak = cl->is_weak();\n+    cl->set_weak(true);\n+    if (UseCompressedOops) {\n+      cl->do_oop(reinterpret_cast<narrowOop*>(java_lang_ref_Reference::referent_addr_raw(reference)));\n+    } else {\n+      cl->do_oop(reinterpret_cast<oop*>(java_lang_ref_Reference::referent_addr_raw(reference)));\n+    }\n+    cl->set_weak(weak);\n+  }\n+\n+  \/\/ Add reference to discovered list\n+  assert(worker_id != ShenandoahThreadLocalData::INVALID_WORKER_ID, \"need valid worker ID\");\n+  ShenandoahRefProcThreadLocal& refproc_data = _ref_proc_thread_locals[worker_id];\n+  oop discovered_head = refproc_data.discovered_list_head<T>();\n+  if (discovered_head == NULL) {\n+    \/\/ Self-loop tail of list. We distinguish discovered from not-discovered references by looking at their\n+    \/\/ discovered field: if it is NULL, then it is not-yet discovered, otherwise it is discovered\n+    discovered_head = reference;\n+  }\n+  if (reference_cas_discovered<T>(reference, discovered_head)) {\n+    refproc_data.set_discovered_list_head<T>(reference);\n+    assert(refproc_data.discovered_list_head<T>() == reference, \"reference must be new discovered head\");\n+    log_trace(gc, ref)(\"Discovered Reference: \" PTR_FORMAT \" (%s)\", p2i(reference), reference_type_name(type));\n+    _ref_proc_thread_locals[worker_id].inc_discovered(type);\n+  }\n+  return true;\n+}\n+\n+bool ShenandoahReferenceProcessor::discover_reference(oop reference, ReferenceType type) {\n+  if (!RegisterReferences) {\n+    \/\/ Reference processing disabled\n+    return false;\n+  }\n+\n+  log_trace(gc, ref)(\"Encountered Reference: \" PTR_FORMAT \" (%s)\", p2i(reference), reference_type_name(type));\n+  uint worker_id = ShenandoahThreadLocalData::worker_id(Thread::current());\n+  _ref_proc_thread_locals->inc_encountered(type);\n+\n+  if (UseCompressedOops) {\n+    return discover<narrowOop>(reference, type, worker_id);\n+  } else {\n+    return discover<oop>(reference, type, worker_id);\n+  }\n+}\n+\n+template <typename T>\n+oop ShenandoahReferenceProcessor::drop(oop reference, ReferenceType type) {\n+  log_trace(gc, ref)(\"Dropped Reference: \" PTR_FORMAT \" (%s)\", p2i(reference), reference_type_name(type));\n+\n+  assert(reference_referent<T>(reference) == NULL ||\n+         ShenandoahHeap::heap()->marking_context()->is_marked(reference_referent<T>(reference)), \"only drop references with alive referents\");\n+\n+  \/\/ Unlink and return next in list\n+  oop next = reference_discovered<T>(reference);\n+  reference_set_discovered<T>(reference, NULL);\n+  return next;\n+}\n+\n+template <typename T>\n+T* ShenandoahReferenceProcessor::keep(oop reference, ReferenceType type, uint worker_id) {\n+  log_trace(gc, ref)(\"Enqueued Reference: \" PTR_FORMAT \" (%s)\", p2i(reference), reference_type_name(type));\n+\n+  \/\/ Update statistics\n+  _ref_proc_thread_locals[worker_id].inc_enqueued(type);\n+\n+  \/\/ Make reference inactive\n+  make_inactive<T>(reference, type);\n+\n+  \/\/ Return next in list\n+  return reference_discovered_addr<T>(reference);\n+}\n+\n+template <typename T>\n+void ShenandoahReferenceProcessor::process_references(ShenandoahRefProcThreadLocal& refproc_data, uint worker_id) {;\n+  log_trace(gc, ref)(\"Processing discovered list #%u : \" PTR_FORMAT, worker_id, p2i(refproc_data.discovered_list_head<T>()));\n+  T* list = refproc_data.discovered_list_addr<T>();\n+  \/\/ The list head is basically a GC root, we need to resolve and update it,\n+  \/\/ otherwise we will later swap a from-space ref into Universe::pending_list().\n+  if (!CompressedOops::is_null(*list)) {\n+    oop first_resolved = lrb(CompressedOops::decode_not_null(*list));\n+    set_oop_field(list, first_resolved);\n+  }\n+  T* p = list;\n+  while (true) {\n+    const oop reference = lrb(CompressedOops::decode(*p));\n+    if (reference == NULL) {\n+      break;\n+    }\n+    log_trace(gc, ref)(\"Processing reference: \" PTR_FORMAT, p2i(reference));\n+    const ReferenceType type = reference_type(reference);\n+\n+    if (should_drop<T>(reference, type)) {\n+      set_oop_field(p, drop<T>(reference, type));\n+    } else {\n+      p = keep<T>(reference, type, worker_id);\n+    }\n+\n+    const oop discovered = lrb(reference_discovered<T>(reference));\n+    if (reference == discovered) {\n+      \/\/ Reset terminating self-loop to NULL\n+      reference_set_discovered<T>(reference, oop(NULL));\n+      break;\n+    }\n+  }\n+\n+  \/\/ Prepend discovered references to internal pending list\n+  if (!CompressedOops::is_null(*list)) {\n+    oop head = lrb(CompressedOops::decode_not_null(*list));\n+    shenandoah_assert_not_in_cset_except(&head, head, ShenandoahHeap::heap()->cancelled_gc() || !ShenandoahLoadRefBarrier);\n+    oop prev = Atomic::xchg(&_pending_list, head);\n+    RawAccess<>::oop_store(p, prev);\n+    if (prev == NULL) {\n+      \/\/ First to prepend to list, record tail\n+      _pending_list_tail = reinterpret_cast<void*>(p);\n+    }\n+\n+    \/\/ Clear discovered list\n+    set_oop_field(list, oop(NULL));\n+  }\n+}\n+\n+void ShenandoahReferenceProcessor::work() {\n+  \/\/ Process discovered references\n+  uint max_workers = ShenandoahHeap::heap()->max_workers();\n+  uint worker_id = Atomic::add(&_iterate_discovered_list_id, 1U) - 1;\n+  while (worker_id < max_workers) {\n+    if (UseCompressedOops) {\n+      process_references<narrowOop>(_ref_proc_thread_locals[worker_id], worker_id);\n+    } else {\n+      process_references<oop>(_ref_proc_thread_locals[worker_id], worker_id);\n+    }\n+    worker_id = Atomic::add(&_iterate_discovered_list_id, 1U) - 1;\n+  }\n+}\n+\n+class ShenandoahReferenceProcessorTask : public AbstractGangTask {\n+private:\n+  ShenandoahReferenceProcessor* const _reference_processor;\n+\n+public:\n+  ShenandoahReferenceProcessorTask(ShenandoahReferenceProcessor* reference_processor) :\n+    AbstractGangTask(\"ShenandoahReferenceProcessorTask\"),\n+    _reference_processor(reference_processor) {\n+  }\n+\n+  virtual void work(uint worker_id) {\n+    ShenandoahConcurrentWorkerSession worker_session(worker_id);\n+    _reference_processor->work();\n+  }\n+};\n+\n+void ShenandoahReferenceProcessor::process_references(WorkGang* workers, bool concurrent) {\n+\n+  Atomic::release_store_fence(&_iterate_discovered_list_id, 0U);\n+\n+  \/\/ Process discovered lists\n+  ShenandoahReferenceProcessorTask task(this);\n+  workers->run_task(&task);\n+\n+  \/\/ Update SoftReference clock\n+  soft_reference_update_clock();\n+\n+  \/\/ Collect, log and trace statistics\n+  collect_statistics();\n+\n+  enqueue_references(concurrent);\n+}\n+\n+void ShenandoahReferenceProcessor::enqueue_references_locked() {\n+  \/\/ Prepend internal pending list to external pending list\n+  shenandoah_assert_not_in_cset_except(&_pending_list, _pending_list, ShenandoahHeap::heap()->cancelled_gc() || !ShenandoahLoadRefBarrier);\n+  if (UseCompressedOops) {\n+    *reinterpret_cast<narrowOop*>(_pending_list_tail) = CompressedOops::encode(Universe::swap_reference_pending_list(_pending_list));\n+  } else {\n+    *reinterpret_cast<oop*>(_pending_list_tail) = Universe::swap_reference_pending_list(_pending_list);\n+  }\n+}\n+\n+void ShenandoahReferenceProcessor::enqueue_references(bool concurrent) {\n+  if (_pending_list == NULL) {\n+    \/\/ Nothing to enqueue\n+    return;\n+  }\n+\n+  if (!concurrent) {\n+    \/\/ When called from mark-compact or degen-GC, the locking is done by the VMOperation,\n+    enqueue_references_locked();\n+  } else {\n+    \/\/ Heap_lock protects external pending list\n+    MonitorLocker ml(Heap_lock, Mutex::_no_safepoint_check_flag);\n+\n+    enqueue_references_locked();\n+\n+    \/\/ Notify ReferenceHandler thread\n+    ml.notify_all();\n+  }\n+\n+  \/\/ Reset internal pending list\n+  _pending_list = NULL;\n+  _pending_list_tail = &_pending_list;\n+}\n+\n+template<typename T>\n+void ShenandoahReferenceProcessor::clean_discovered_list(T* list) {\n+  T discovered = *list;\n+  while (!CompressedOops::is_null(discovered)) {\n+    oop discovered_ref = CompressedOops::decode_not_null(discovered);\n+    set_oop_field<T>(list, oop(NULL));\n+    list = reference_discovered_addr<T>(discovered_ref);\n+    discovered = *list;\n+  }\n+}\n+\n+void ShenandoahReferenceProcessor::abandon_partial_discovery() {\n+  uint max_workers = ShenandoahHeap::heap()->max_workers();\n+  for (uint index = 0; index < max_workers; index++) {\n+    if (UseCompressedOops) {\n+      clean_discovered_list<narrowOop>(_ref_proc_thread_locals[index].discovered_list_addr<narrowOop>());\n+    } else {\n+      clean_discovered_list<oop>(_ref_proc_thread_locals[index].discovered_list_addr<oop>());\n+    }\n+  }\n+  if (_pending_list != NULL) {\n+    oop pending = _pending_list;\n+    _pending_list = NULL;\n+    if (UseCompressedOops) {\n+      narrowOop* list = reference_discovered_addr<narrowOop>(pending);\n+      clean_discovered_list<narrowOop>(list);\n+    } else {\n+      oop* list = reference_discovered_addr<oop>(pending);\n+      clean_discovered_list<oop>(list);\n+    }\n+  }\n+  _pending_list_tail = &_pending_list;\n+}\n+\n+void ShenandoahReferenceProcessor::collect_statistics() {\n+  Counters encountered = {};\n+  Counters discovered = {};\n+  Counters enqueued = {};\n+  uint max_workers = ShenandoahHeap::heap()->max_workers();\n+  for (uint i = 0; i < max_workers; i++) {\n+    for (size_t type = 0; type < reference_type_count; type++) {\n+      encountered[type] += _ref_proc_thread_locals[i].encountered((ReferenceType)type);\n+      discovered[type] += _ref_proc_thread_locals[i].discovered((ReferenceType)type);\n+      enqueued[type] += _ref_proc_thread_locals[i].enqueued((ReferenceType)type);\n+    }\n+  }\n+  log_info(gc,ref)(\"Encountered references: Soft: \" SIZE_FORMAT \", Weak: \" SIZE_FORMAT \", Final: \" SIZE_FORMAT \", Phantom: \" SIZE_FORMAT,\n+                   encountered[REF_SOFT], encountered[REF_WEAK], encountered[REF_FINAL], encountered[REF_PHANTOM]);\n+  log_info(gc,ref)(\"Discovered  references: Soft: \" SIZE_FORMAT \", Weak: \" SIZE_FORMAT \", Final: \" SIZE_FORMAT \", Phantom: \" SIZE_FORMAT,\n+                   discovered[REF_SOFT], discovered[REF_WEAK], discovered[REF_FINAL], discovered[REF_PHANTOM]);\n+  log_info(gc,ref)(\"Enqueued    references: Soft: \" SIZE_FORMAT \", Weak: \" SIZE_FORMAT \", Final: \" SIZE_FORMAT \", Phantom: \" SIZE_FORMAT,\n+                   enqueued[REF_SOFT], enqueued[REF_WEAK], enqueued[REF_FINAL], enqueued[REF_PHANTOM]);\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":593,"deletions":0,"binary":false,"changes":593,"status":"added"},{"patch":"@@ -0,0 +1,186 @@\n+\/*\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Red Hat, Inc. and\/or its affiliates.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_VM_GC_SHENANDOAH_SHENANDOAHREFERENCEPROCESSOR_HPP\n+#define SHARE_VM_GC_SHENANDOAH_SHENANDOAHREFERENCEPROCESSOR_HPP\n+\n+#include \"gc\/shared\/referenceDiscoverer.hpp\"\n+#include \"memory\/allocation.hpp\"\n+\n+class ShenandoahMarkRefsSuperClosure;\n+class WorkGang;\n+\n+static const size_t reference_type_count = REF_PHANTOM + 1;\n+typedef size_t Counters[reference_type_count];\n+\n+\/*\n+ * Shenandoah concurrent reference processing\n+ *\n+ * Concurrent reference processing is made up of two main phases:\n+ * 1. Concurrent reference marking: Discover all j.l.r.Reference objects and determine reachability of all live objects.\n+ * 2. Concurrent reference processing: For all discoved j.l.r.References, determine whether to keep them alive or clean\n+ *    them. Also, clean and enqueue relevant references concurrently.\n+ *\n+ * Concurrent reference marking:\n+ * The goal here is to establish the kind of reachability for all objects on the heap. We distinguish two kinds of\n+ * reachability:\n+ * - An object is 'strongly reachable' if it can be found by searching transitively from GC roots.\n+ * - An object is 'finalizably reachable' if it is not strongly reachable, but can be found by searching\n+ *   from the referents of FinalReferences.\n+ *\n+ * These reachabilities are implemented in shenandoahMarkBitMap.*\n+ * Conceptually, marking starts with a strong wavefront at the GC roots. Whenever a Reference object is encountered,\n+ * it may be discovered by the ShenandoahReferenceProcessor. If it is discovered, it\n+ * gets added to the discovered list, and that wavefront stops there, except when it's a FinalReference, in which\n+ * case the wavefront switches to finalizable marking and marks through the referent. When a Reference is not\n+ * discovered, e.g. if it's a SoftReference that is not eligible for discovery, then marking continues as if the\n+ * Reference was a regular object. Whenever a strong wavefront encounters an object that is already marked\n+ * finalizable, then the object's reachability is upgraded to strong.\n+ *\n+ * Concurrent reference processing:\n+ * This happens after the concurrent marking phase and the final marking pause, when reachability for all objects\n+ * has been established.\n+ * The discovered list is scanned and for each reference is decided what to do:\n+ * - If the referent is reachable (finalizable for PhantomReference, strong for all others), then the Reference\n+ *   is dropped from the discovered list and otherwise ignored\n+ * - Otherwise its referent becomes cleared and the Reference added to the pending list, from which it will later\n+ *   be processed (e.g. enqueued in its ReferenceQueue) by the Java ReferenceHandler thread.\n+ *\n+ * In order to prevent resurrection by Java threads calling Reference.get() concurrently while we are clearing\n+ * referents, we employ a special barrier, the native LRB, which returns NULL when the referent is unreachable.\n+ *\/\n+\n+class ShenandoahRefProcThreadLocal : public CHeapObj<mtGC> {\n+private:\n+  void* _discovered_list;\n+  ShenandoahMarkRefsSuperClosure* _mark_closure;\n+  Counters _encountered_count;\n+  Counters _discovered_count;\n+  Counters _enqueued_count;\n+\n+public:\n+  ShenandoahRefProcThreadLocal();\n+\n+  ShenandoahRefProcThreadLocal(const ShenandoahRefProcThreadLocal&) = delete; \/\/ non construction-copyable\n+  ShenandoahRefProcThreadLocal& operator=(const ShenandoahRefProcThreadLocal&) = delete; \/\/ non copyable\n+\n+  void reset();\n+\n+  ShenandoahMarkRefsSuperClosure* mark_closure() const {\n+    return _mark_closure;\n+  }\n+\n+  void set_mark_closure(ShenandoahMarkRefsSuperClosure* mark_closure) {\n+    _mark_closure = mark_closure;\n+  }\n+\n+  template<typename T>\n+  T* discovered_list_addr();\n+  template<typename T>\n+  oop discovered_list_head() const;\n+  template<typename T>\n+  void set_discovered_list_head(oop head);\n+\n+  size_t encountered(ReferenceType type) const {\n+    return _encountered_count[type];\n+  }\n+  size_t discovered(ReferenceType type) const {\n+    return _discovered_count[type];\n+  }\n+  size_t enqueued(ReferenceType type) const {\n+    return _enqueued_count[type];\n+  }\n+\n+  void inc_encountered(ReferenceType type) {\n+    _encountered_count[type]++;\n+  }\n+  void inc_discovered(ReferenceType type) {\n+    _discovered_count[type]++;\n+  }\n+  void inc_enqueued(ReferenceType type) {\n+    _enqueued_count[type]++;\n+  }\n+};\n+\n+class ShenandoahReferenceProcessor : public ReferenceDiscoverer {\n+private:\n+  ReferencePolicy* _soft_reference_policy;\n+\n+  ShenandoahRefProcThreadLocal* _ref_proc_thread_locals;\n+\n+  oop _pending_list;\n+  void* _pending_list_tail; \/\/ T*\n+\n+  volatile uint _iterate_discovered_list_id;\n+\n+  template <typename T>\n+  bool is_inactive(oop reference, oop referent, ReferenceType type) const;\n+  bool is_strongly_live(oop referent) const;\n+  bool is_softly_live(oop reference, ReferenceType type) const;\n+\n+  template <typename T>\n+  bool should_discover(oop reference, ReferenceType type) const;\n+  template <typename T>\n+  bool should_drop(oop reference, ReferenceType type) const;\n+\n+  template <typename T>\n+  void make_inactive(oop reference, ReferenceType type) const;\n+\n+  template <typename T>\n+  bool discover(oop reference, ReferenceType type, uint worker_id);\n+\n+  template <typename T>\n+  oop drop(oop reference, ReferenceType type);\n+  template <typename T>\n+  T* keep(oop reference, ReferenceType type, uint worker_id);\n+\n+  template <typename T>\n+  void process_references(ShenandoahRefProcThreadLocal& refproc_data, uint worker_id);\n+  void enqueue_references_locked();\n+  void enqueue_references(bool concurrent);\n+\n+  void collect_statistics();\n+\n+  template<typename T>\n+  void clean_discovered_list(T* list);\n+\n+public:\n+  ShenandoahReferenceProcessor(uint max_workers);\n+\n+  void reset_thread_locals();\n+  void set_mark_closure(uint worker_id, ShenandoahMarkRefsSuperClosure* mark_closure);\n+\n+  void set_soft_reference_policy(bool clear);\n+\n+  bool discover_reference(oop obj, ReferenceType type) override;\n+\n+  void process_references(WorkGang* workers, bool concurrent);\n+\n+  void work();\n+\n+  void abandon_partial_discovery();\n+};\n+\n+#endif \/\/ SHARE_VM_GC_SHENANDOAH_SHENANDOAHREFERENCEPROCESSOR_HPP\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.hpp","additions":186,"deletions":0,"binary":false,"changes":186,"status":"added"},{"patch":"@@ -203,1 +203,0 @@\n-  ShenandoahConcurrentStringDedupRoots     _dedup_roots;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -152,1 +152,0 @@\n-  _dedup_roots(phase),\n@@ -183,1 +182,0 @@\n-    AlwaysTrueClosure always_true;\n@@ -185,1 +183,0 @@\n-    _dedup_roots.oops_do(&always_true, oops, worker_id);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.inline.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -139,7 +139,0 @@\n-  AlwaysTrueClosure always_true;\n-  WeakProcessor::weak_oops_do(&always_true, oops);\n-\n-  if (ShenandoahStringDedup::is_enabled()) {\n-    ShenandoahStringDedup::oops_do_slow(oops);\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -69,2 +69,6 @@\n-JRT_LEAF(oopDesc*, ShenandoahRuntime::load_reference_barrier_native(oopDesc * src, oop* load_addr))\n-  return (oopDesc*) ShenandoahBarrierSet::barrier_set()->load_reference_barrier_native(oop(src), load_addr);\n+JRT_LEAF(oopDesc*, ShenandoahRuntime::load_reference_barrier_weak(oopDesc * src, oop* load_addr))\n+  return (oopDesc*) ShenandoahBarrierSet::barrier_set()->load_reference_barrier<ON_UNKNOWN_OOP_REF, oop>(oop(src), load_addr);\n+JRT_END\n+\n+JRT_LEAF(oopDesc*, ShenandoahRuntime::load_reference_barrier_weak_narrow(oopDesc * src, narrowOop* load_addr))\n+  return (oopDesc*) ShenandoahBarrierSet::barrier_set()->load_reference_barrier<ON_UNKNOWN_OOP_REF, narrowOop>(oop(src), load_addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,2 @@\n-  static oopDesc* load_reference_barrier_native(oopDesc* src, oop* load_addr);\n+  static oopDesc* load_reference_barrier_weak(oopDesc* src, oop* load_addr);\n+  static oopDesc* load_reference_barrier_weak_narrow(oopDesc* src, narrowOop* load_addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-\/\/    |---------oop---------|-pow-|--chunk---|\n+\/\/    |xx-------oop---------|-pow-|--chunk---|\n@@ -82,0 +82,4 @@\n+\/\/ Lower bits of oop are reserved to handle \"skip_live\" and \"strong\" properties. Since this encoding\n+\/\/ stores uncompressed oops, those bits are always available. These bits default to zero for \"skip_live\"\n+\/\/ and \"weak\". This aligns with their frequent values: strong\/counted-live references.\n+\/\/\n@@ -148,1 +152,3 @@\n-  static const uintptr_t oop_extract_mask       = right_n_bits(oop_bits);\n+  static const uintptr_t oop_extract_mask       = right_n_bits(oop_bits) - 3;\n+  static const uintptr_t skip_live_extract_mask = 1 << 0;\n+  static const uintptr_t weak_extract_mask      = 1 << 1;\n@@ -172,1 +178,9 @@\n-  inline uintptr_t encode_oop(oop obj) const {\n+  inline bool decode_weak(uintptr_t val) const {\n+    return (val & weak_extract_mask) != 0;\n+  }\n+\n+  inline bool decode_cnt_live(uintptr_t val) const {\n+    return (val & skip_live_extract_mask) == 0;\n+  }\n+\n+  inline uintptr_t encode_oop(oop obj, bool skip_live, bool weak) const {\n@@ -174,1 +188,8 @@\n-    return cast_from_oop<uintptr_t>(obj);\n+    uintptr_t encoded = cast_from_oop<uintptr_t>(obj);\n+    if (skip_live) {\n+      encoded |= skip_live_extract_mask;\n+    }\n+    if (weak) {\n+      encoded |= weak_extract_mask;\n+    }\n+    return encoded;\n@@ -186,4 +207,6 @@\n-  ShenandoahMarkTask(oop o = NULL) {\n-    uintptr_t enc = encode_oop(o);\n-    assert(decode_oop(enc) == o,    \"oop encoding should work: \" PTR_FORMAT, p2i(o));\n-    assert(decode_not_chunked(enc), \"task should not be chunked\");\n+  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool weak = false) {\n+    uintptr_t enc = encode_oop(o, skip_live, weak);\n+    assert(decode_oop(enc) == o,     \"oop encoding should work: \" PTR_FORMAT, p2i(o));\n+    assert(decode_cnt_live(enc) == !skip_live, \"skip_live encoding should work\");\n+    assert(decode_weak(enc) == weak, \"weak encoding should work\");\n+    assert(decode_not_chunked(enc),  \"task should not be chunked\");\n@@ -193,2 +216,2 @@\n-  ShenandoahMarkTask(oop o, int chunk, int pow) {\n-    uintptr_t enc_oop = encode_oop(o);\n+  ShenandoahMarkTask(oop o, bool skip_live, bool weak, int chunk, int pow) {\n+    uintptr_t enc_oop = encode_oop(o, skip_live, weak);\n@@ -199,0 +222,2 @@\n+    assert(decode_cnt_live(enc) == !skip_live, \"skip_live should be true for chunked tasks\");\n+    assert(decode_weak(enc) == weak,   \"weak encoding should work\");\n@@ -213,0 +238,2 @@\n+  inline bool is_weak()        const { return decode_weak(_obj);        }\n+  inline bool count_liveness() const { return decode_cnt_live(_obj);    }\n@@ -228,4 +255,5 @@\n-  enum {\n-    chunk_bits  = 10,\n-    pow_bits    = 5,\n-  };\n+  static const uint8_t chunk_bits  = 10;\n+  static const uint8_t pow_bits    = 5;\n+\n+  static const int chunk_max       = nth_bit(chunk_bits) - 1;\n+  static const int pow_max         = nth_bit(pow_bits) - 1;\n@@ -234,0 +262,2 @@\n+  bool _skip_live;\n+  bool _weak;\n@@ -238,4 +268,4 @@\n-  ShenandoahMarkTask(oop o = NULL, int chunk = 0, int pow = 0):\n-    _obj(o), _chunk(chunk), _pow(pow) {\n-    assert(0 <= chunk && chunk < nth_bit(chunk_bits), \"chunk is sane: %d\", chunk);\n-    assert(0 <= pow && pow < nth_bit(pow_bits), \"pow is sane: %d\", pow);\n+  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool weak = false, int chunk = 0, int pow = 0):\n+    _obj(o), _skip_live(skip_live), _weak(weak), _chunk(chunk), _pow(pow) {\n+    assert(0 <= chunk && chunk <= chunk_max, \"chunk is in range: %d\", chunk);\n+    assert(0 <= pow && pow <= pow_max, \"pow is in range: %d\", pow);\n@@ -250,0 +280,2 @@\n+  inline bool is_weak()        const { return _weak; }\n+  inline bool count_liveness() const { return !_skip_live; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.hpp","additions":50,"deletions":18,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-class VM_ShenandoahFinalMarkStartEvac: public VM_ShenandoahReferenceOperation {\n+class VM_ShenandoahFinalMarkStartEvac: public VM_ShenandoahOperation {\n@@ -64,1 +64,1 @@\n-  VM_ShenandoahFinalMarkStartEvac() : VM_ShenandoahReferenceOperation() {};\n+  VM_ShenandoahFinalMarkStartEvac() : VM_ShenandoahOperation() {};\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVMOperations.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,11 @@\n+static bool is_instance_ref_klass(Klass* k) {\n+  return k->is_instance_klass() && InstanceKlass::cast(k)->reference_type() != REF_NONE;\n+}\n+\n+class ShenandoahIgnoreReferenceDiscoverer : public ReferenceDiscoverer {\n+public:\n+  virtual bool discover_reference(oop obj, ReferenceType type) {\n+    return true;\n+  }\n+};\n+\n@@ -71,1 +82,6 @@\n-    _loc(NULL) { }\n+    _loc(NULL) {\n+    if (options._verify_marked == ShenandoahVerifier::_verify_marked_complete_except_references ||\n+        options._verify_marked == ShenandoahVerifier::_verify_marked_disable) {\n+      set_ref_discoverer_internal(new ShenandoahIgnoreReferenceDiscoverer());\n+    }\n+  }\n@@ -85,1 +101,3 @@\n-\n+      if (is_instance_ref_klass(obj->klass())) {\n+        obj = ShenandoahForwarding::get_forwardee(obj);\n+      }\n@@ -211,0 +229,4 @@\n+      case ShenandoahVerifier::_verify_marked_complete_except_references:\n+        check(ShenandoahAsserts::_safe_all, obj, _heap->complete_marking_context()->is_marked(obj),\n+              \"Must be marked in complete bitmap, except j.l.r.Reference referents\");\n+        break;\n@@ -529,2 +551,2 @@\n-    MarkBitMap* mark_bit_map = _heap->complete_marking_context()->mark_bit_map();\n-    HeapWord* tams = _heap->complete_marking_context()->top_at_mark_start(r);\n+    ShenandoahMarkingContext* ctx = _heap->complete_marking_context();\n+    HeapWord* tams = ctx->top_at_mark_start(r);\n@@ -535,1 +557,1 @@\n-      HeapWord* addr = mark_bit_map->get_next_marked_addr(start, tams);\n+      HeapWord* addr = ctx->get_next_marked_addr(start, tams);\n@@ -541,1 +563,1 @@\n-          addr = mark_bit_map->get_next_marked_addr(addr, tams);\n+          addr = ctx->get_next_marked_addr(addr, tams);\n@@ -569,3 +591,4 @@\n-    cl.verify_oops_from(obj);\n-    (*processed)++;\n-\n+    if (!is_instance_ref_klass(obj->klass())) {\n+      cl.verify_oops_from(obj);\n+      (*processed)++;\n+    }\n@@ -721,1 +744,1 @@\n-  if (ShenandoahVerifyLevel >= 4 && marked == _verify_marked_complete) {\n+  if (ShenandoahVerifyLevel >= 4 && (marked == _verify_marked_complete || marked == _verify_marked_complete_except_references)) {\n@@ -796,1 +819,1 @@\n-          _verify_marked_complete,     \/\/ bitmaps as precise as we can get\n+          _verify_marked_complete_except_references, \/\/ bitmaps as precise as we can get, except dangling j.l.r.Refs\n@@ -800,1 +823,1 @@\n-          _verify_gcstate_stable,       \/\/ mark should have stabilized the heap\n+          _verify_gcstate_stable,      \/\/ mark should have stabilized the heap\n@@ -813,6 +836,6 @@\n-          _verify_forwarded_none,    \/\/ no forwarded references\n-          _verify_marked_complete,   \/\/ walk over marked objects too\n-          _verify_cset_disable,      \/\/ non-forwarded references to cset expected\n-          _verify_liveness_complete, \/\/ liveness data must be complete here\n-          _verify_regions_disable,   \/\/ trash regions not yet recycled\n-          _verify_gcstate_stable,    \/\/ mark should have stabilized the heap\n+          _verify_forwarded_none,                    \/\/ no forwarded references\n+          _verify_marked_complete_except_references, \/\/ walk over marked objects too\n+          _verify_cset_disable,                      \/\/ non-forwarded references to cset expected\n+          _verify_liveness_complete,                 \/\/ liveness data must be complete here\n+          _verify_regions_disable,                   \/\/ trash regions not yet recycled\n+          _verify_gcstate_stable,                    \/\/ mark should have stabilized the heap\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":41,"deletions":18,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -68,1 +68,5 @@\n-    _verify_marked_complete\n+    _verify_marked_complete,\n+\n+    \/\/ Objects should be marked in \"complete\" bitmap, except j.l.r.Reference referents, which\n+    \/\/ may be dangling after marking but before conc-weakrefs-processing.\n+    _verify_marked_complete_except_references\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+uint ShenandoahWorkerPolicy::_prev_conc_refs_proc  = 0;\n@@ -66,0 +67,10 @@\n+\/\/ Calculate workers for concurrent refs processing\n+uint ShenandoahWorkerPolicy::calc_workers_for_conc_refs_processing() {\n+  uint active_workers = (_prev_conc_refs_proc == 0) ? ConcGCThreads : _prev_conc_refs_proc;\n+  _prev_conc_refs_proc =\n+    WorkerPolicy::calc_active_conc_workers(ConcGCThreads,\n+                                           active_workers,\n+                                           Threads::number_of_non_daemon_threads());\n+  return _prev_conc_refs_proc;\n+}\n+\n@@ -70,3 +81,3 @@\n-    WorkerPolicy::calc_active_conc_workers(ConcGCThreads,\n-                                           active_workers,\n-                                           Threads::number_of_non_daemon_threads());\n+          WorkerPolicy::calc_active_conc_workers(ConcGCThreads,\n+                                                 active_workers,\n+                                                 Threads::number_of_non_daemon_threads());\n@@ -126,5 +137,0 @@\n-uint ShenandoahWorkerPolicy::calc_workers_for_conc_preclean() {\n-  \/\/ Precleaning is single-threaded\n-  return 1;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkerPolicy.cpp","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+  static uint _prev_conc_refs_proc;\n@@ -56,0 +57,3 @@\n+  \/\/ Calculate workers for concurrent refs processing\n+  static uint calc_workers_for_conc_refs_processing();\n+\n@@ -71,3 +75,0 @@\n-  \/\/ Calculate workers for concurrent precleaning\n-  static uint calc_workers_for_conc_preclean();\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkerPolicy.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -79,7 +79,0 @@\n-  product(uintx, ShenandoahRefProcFrequency, 5, EXPERIMENTAL,               \\\n-          \"Process process weak (soft, phantom, finalizers) references \"    \\\n-          \"every Nth cycle. Normally affects concurrent GC cycles only, \"   \\\n-          \"as degenerated and full GCs would try to process references \"    \\\n-          \"regardless. Set to zero to disable reference processing \"        \\\n-          \"completely.\")                                                    \\\n-                                                                            \\\n@@ -316,5 +309,0 @@\n-  product(bool, ShenandoahPreclean, true, DIAGNOSTIC,                       \\\n-          \"Do concurrent preclean phase before final mark: process \"        \\\n-          \"definitely alive references to avoid dealing with them during \"  \\\n-          \"pause.\")                                                         \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-  ZNMethod::nmethod_oops_do(nm, &cl);\n+  ZNMethod::nmethod_oops_do_inner(nm, &cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSetNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"runtime\/atomic.hpp\"\n@@ -39,3 +40,2 @@\n-  char* const addr = _top;\n-  _top += size;\n-  assert(_top <= _end, \"Allocation should never fail\");\n+  char* const addr = Atomic::fetch_and_add(&_top, size);\n+  assert(addr + size <= _end, \"Allocation should never fail\");\n","filename":"src\/hotspot\/share\/gc\/z\/zForwardingAllocator.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,48 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/z\/zForwarding.inline.hpp\"\n-#include \"gc\/z\/zForwardingTable.inline.hpp\"\n-#include \"gc\/z\/zGlobals.hpp\"\n-#include \"gc\/z\/zGranuleMap.inline.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-ZForwardingTable::ZForwardingTable() :\n-    _map(ZAddressOffsetMax) {}\n-\n-void ZForwardingTable::insert(ZForwarding* forwarding) {\n-  const uintptr_t offset = forwarding->start();\n-  const size_t size = forwarding->size();\n-\n-  assert(_map.get(offset) == NULL, \"Invalid entry\");\n-  _map.put(offset, size, forwarding);\n-}\n-\n-void ZForwardingTable::remove(ZForwarding* forwarding) {\n-  const uintptr_t offset = forwarding->start();\n-  const size_t size = forwarding->size();\n-\n-  assert(_map.get(offset) == forwarding, \"Invalid entry\");\n-  _map.put(offset, size, NULL);\n-}\n","filename":"src\/hotspot\/share\/gc\/z\/zForwardingTable.cpp","additions":0,"deletions":48,"binary":false,"changes":48,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"gc\/z\/zForwarding.inline.hpp\"\n@@ -29,0 +30,1 @@\n+#include \"gc\/z\/zGlobals.hpp\"\n@@ -30,0 +32,4 @@\n+#include \"utilities\/debug.hpp\"\n+\n+inline ZForwardingTable::ZForwardingTable() :\n+    _map(ZAddressOffsetMax) {}\n@@ -36,0 +42,16 @@\n+inline void ZForwardingTable::insert(ZForwarding* forwarding) {\n+  const uintptr_t offset = forwarding->start();\n+  const size_t size = forwarding->size();\n+\n+  assert(_map.get(offset) == NULL, \"Invalid entry\");\n+  _map.put(offset, size, forwarding);\n+}\n+\n+inline void ZForwardingTable::remove(ZForwarding* forwarding) {\n+  const uintptr_t offset = forwarding->start();\n+  const size_t size = forwarding->size();\n+\n+  assert(_map.get(offset) == forwarding, \"Invalid entry\");\n+  _map.put(offset, size, NULL);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zForwardingTable.inline.hpp","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/z\/zArray.inline.hpp\"\n@@ -68,1 +69,1 @@\n-    _relocation_set(),\n+    _relocation_set(&_workers),\n@@ -223,0 +224,11 @@\n+void ZHeap::free_pages(const ZArray<ZPage*>* pages, bool reclaimed) {\n+  \/\/ Remove page table entries\n+  ZArrayIterator<ZPage*> iter(pages);\n+  for (ZPage* page; iter.next(&page);) {\n+    _page_table.remove(page);\n+  }\n+\n+  \/\/ Free pages\n+  _page_allocator.free_pages(pages, reclaimed);\n+}\n+\n@@ -352,0 +364,10 @@\n+void ZHeap::free_garbage_pages(ZRelocationSetSelector* selector, int bulk) {\n+  \/\/ Freeing garbage pages in bulk is an optimization to avoid grabbing\n+  \/\/ the page allocator lock, and trying to satisfy stalled allocations\n+  \/\/ too frequently.\n+  if (selector->should_free_garbage_pages(bulk)) {\n+    free_pages(selector->garbage_pages(), true \/* reclaimed *\/);\n+    selector->clear_garbage_pages();\n+  }\n+}\n+\n@@ -372,2 +394,2 @@\n-      \/\/ Reclaim page immediately\n-      free_page(page, true \/* reclaimed *\/);\n+      \/\/ Reclaim garbage pages in bulk\n+      free_garbage_pages(&selector, 64 \/* bulk *\/);\n@@ -377,0 +399,3 @@\n+  \/\/ Reclaim remaining garbage pages\n+  free_garbage_pages(&selector, 0 \/* bulk *\/);\n+\n@@ -380,2 +405,5 @@\n-  \/\/ Select pages to relocate\n-  selector.select(&_relocation_set);\n+  \/\/ Select relocation set\n+  selector.select();\n+\n+  \/\/ Install relocation set\n+  _relocation_set.install(&selector);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":33,"deletions":5,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/z\/zArray.hpp\"\n@@ -43,0 +44,1 @@\n+class ZRelocationSetSelector;\n@@ -66,0 +68,2 @@\n+  void free_garbage_pages(ZRelocationSetSelector* selector, int bulk);\n+\n@@ -113,0 +117,1 @@\n+  void free_pages(const ZArray<ZPage*>* pages, bool reclaimed);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/shared\/barrierSetNMethod.hpp\"\n@@ -32,0 +33,1 @@\n+#include \"gc\/z\/zNMethod.hpp\"\n@@ -95,2 +97,2 @@\n-template <bool Concurrent, bool Weak>\n-class ZHeapIteratorRootOopClosure : public ZRootsIteratorClosure {\n+template <bool Weak>\n+class ZHeapIteratorRootOopClosure : public OopClosure {\n@@ -105,5 +107,1 @@\n-    if (Concurrent) {\n-      return NativeAccess<AS_NO_KEEPALIVE>::oop_load(p);\n-    }\n-\n-    return RawAccess<>::oop_load(p);\n+    return NativeAccess<AS_NO_KEEPALIVE>::oop_load(p);\n@@ -124,16 +122,0 @@\n-\n-  virtual void do_thread(Thread* thread) {\n-    CodeBlobToOopClosure code_cl(this, false \/* fix_oop_relocations *\/);\n-    thread->oops_do(this, &code_cl);\n-  }\n-\n-  virtual ZNMethodEntry nmethod_entry() const {\n-    if (ClassUnloading) {\n-      \/\/ All encountered nmethods should have been \"entered\" during stack walking\n-      return ZNMethodEntry::VerifyDisarmed;\n-    } else {\n-      \/\/ All nmethods are considered roots and will be visited.\n-      \/\/ Make sure that the unvisited gets fixed and disarmed before proceeding.\n-      return ZNMethodEntry::PreBarrier;\n-    }\n-  }\n@@ -183,1 +165,1 @@\n-    _concurrent_roots(),\n+    _concurrent_roots(ClassLoaderData::_claim_other),\n@@ -258,4 +240,64 @@\n-template <bool Concurrent, bool Weak, typename RootsIterator>\n-void ZHeapIterator::push_roots(const ZHeapIteratorContext& context, RootsIterator& iter) {\n-  ZHeapIteratorRootOopClosure<Concurrent, Weak> cl(context);\n-  iter.oops_do(&cl);\n+typedef ClaimingCLDToOopClosure<ClassLoaderData::_claim_other> ZHeapIteratorCLDCLosure;\n+\n+class ZHeapIteratorNMethodClosure : public NMethodClosure {\n+private:\n+  OopClosure* const        _cl;\n+  BarrierSetNMethod* const _bs_nm;\n+\n+public:\n+  ZHeapIteratorNMethodClosure(OopClosure* cl) :\n+      _cl(cl),\n+      _bs_nm(BarrierSet::barrier_set()->barrier_set_nmethod()) {}\n+\n+  virtual void do_nmethod(nmethod* nm) {\n+    \/\/ If ClassUnloading is turned off, all nmethods are considered strong,\n+    \/\/ not only those on the call stacks. The heap iteration might happen\n+    \/\/ before the concurrent processign of the code cache, make sure that\n+    \/\/ all nmethods have been processed before visiting the oops.\n+    _bs_nm->nmethod_entry_barrier(nm);\n+\n+    ZNMethod::nmethod_oops_do(nm, _cl);\n+  }\n+};\n+\n+class ZHeapIteratorThreadClosure : public ThreadClosure {\n+private:\n+  OopClosure* const        _cl;\n+  CodeBlobToNMethodClosure _cb_cl;\n+\n+public:\n+  ZHeapIteratorThreadClosure(OopClosure* cl, NMethodClosure* nm_cl) :\n+      _cl(cl),\n+      _cb_cl(nm_cl) {}\n+\n+  void do_thread(Thread* thread) {\n+    thread->oops_do(_cl, &_cb_cl);\n+  }\n+};\n+\n+void ZHeapIterator::push_strong_roots(const ZHeapIteratorContext& context) {\n+  ZHeapIteratorRootOopClosure<false \/* Weak *\/> cl(context);\n+  ZHeapIteratorCLDCLosure cld_cl(&cl);\n+  ZHeapIteratorNMethodClosure nm_cl(&cl);\n+  ZHeapIteratorThreadClosure thread_cl(&cl, &nm_cl);\n+\n+  _concurrent_roots.apply(&cl,\n+                          &cld_cl,\n+                          &thread_cl,\n+                          &nm_cl);\n+}\n+\n+void ZHeapIterator::push_weak_roots(const ZHeapIteratorContext& context) {\n+  ZHeapIteratorRootOopClosure<true  \/* Weak *\/> cl(context);\n+  _concurrent_weak_roots.apply(&cl);\n+\n+  AlwaysTrueClosure is_alive;\n+  _weak_roots.apply(&is_alive, &cl);\n+}\n+\n+template <bool VisitWeaks>\n+void ZHeapIterator::push_roots(const ZHeapIteratorContext& context) {\n+  push_strong_roots(context);\n+  if (VisitWeaks) {\n+    push_weak_roots(context);\n+  }\n@@ -346,8 +388,3 @@\n-void ZHeapIterator::object_iterate_inner(const ZHeapIteratorContext& context, ObjectClosure* cl) {\n-  push_roots<true  \/* Concurrent *\/, false \/* Weak *\/>(context, _concurrent_roots);\n-  if (VisitWeaks) {\n-    push_roots<false \/* Concurrent *\/, true  \/* Weak *\/>(context, _weak_roots);\n-    push_roots<true  \/* Concurrent *\/, true  \/* Weak *\/>(context, _concurrent_weak_roots);\n-  }\n-\n-  drain_and_steal<VisitWeaks>(context, cl);\n+void ZHeapIterator::object_iterate_inner(const ZHeapIteratorContext& context, ObjectClosure* object_cl) {\n+  push_roots<VisitWeaks>(context);\n+  drain_and_steal<VisitWeaks>(context, object_cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.cpp","additions":73,"deletions":36,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -49,10 +49,10 @@\n-  const bool                         _visit_weaks;\n-  ZStatTimerDisable                  _timer_disable;\n-  ZHeapIteratorBitMaps               _bitmaps;\n-  ZLock                              _bitmaps_lock;\n-  ZHeapIteratorQueues                _queues;\n-  ZHeapIteratorArrayQueues           _array_queues;\n-  ZConcurrentRootsIteratorClaimOther _concurrent_roots;\n-  ZWeakRootsIterator                 _weak_roots;\n-  ZConcurrentWeakRootsIterator       _concurrent_weak_roots;\n-  TaskTerminator                     _terminator;\n+  const bool                   _visit_weaks;\n+  ZStatTimerDisable            _timer_disable;\n+  ZHeapIteratorBitMaps         _bitmaps;\n+  ZLock                        _bitmaps_lock;\n+  ZHeapIteratorQueues          _queues;\n+  ZHeapIteratorArrayQueues     _array_queues;\n+  ZConcurrentRootsIterator     _concurrent_roots;\n+  ZWeakRootsIterator           _weak_roots;\n+  ZConcurrentWeakRootsIterator _concurrent_weak_roots;\n+  TaskTerminator               _terminator;\n@@ -64,2 +64,5 @@\n-  template <bool Concurrent, bool Weak, typename RootsIterator>\n-  void push_roots(const ZHeapIteratorContext& context, RootsIterator& iter);\n+  void push_strong_roots(const ZHeapIteratorContext& context);\n+  void push_weak_roots(const ZHeapIteratorContext& context);\n+\n+  template <bool VisitWeaks>\n+  void push_roots(const ZHeapIteratorContext& context);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.hpp","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"code\/nmethod.hpp\"\n@@ -28,0 +29,1 @@\n+#include \"gc\/z\/zLock.inline.hpp\"\n@@ -32,0 +34,1 @@\n+#include \"gc\/z\/zNMethod.hpp\"\n@@ -575,4 +578,3 @@\n-class ZMarkConcurrentRootsIteratorClosure : public ZRootsIteratorClosure {\n-public:\n-  ZMarkConcurrentRootsIteratorClosure() {\n-    ZThreadLocalAllocBuffer::reset_statistics();\n+class ZMarkOopClosure : public OopClosure {\n+  virtual void do_oop(oop* p) {\n+    ZBarrier::mark_barrier_on_oop_field(p, false \/* finalizable *\/);\n@@ -581,2 +583,2 @@\n-  ~ZMarkConcurrentRootsIteratorClosure() {\n-    ZThreadLocalAllocBuffer::publish_statistics();\n+  virtual void do_oop(narrowOop* p) {\n+    ShouldNotReachHere();\n@@ -584,0 +586,1 @@\n+};\n@@ -585,4 +588,3 @@\n-  virtual ZNMethodEntry nmethod_entry() const {\n-    \/\/ Only apply closure to armed nmethods, and then disarm them.\n-    return ZNMethodEntry::Disarm;\n-  }\n+class ZMarkThreadClosure : public ThreadClosure {\n+private:\n+  OopClosure* const _cl;\n@@ -590,0 +592,8 @@\n+public:\n+  ZMarkThreadClosure(OopClosure* cl) :\n+      _cl(cl) {\n+    ZThreadLocalAllocBuffer::reset_statistics();\n+  }\n+  ~ZMarkThreadClosure() {\n+    ZThreadLocalAllocBuffer::publish_statistics();\n+  }\n@@ -592,1 +602,1 @@\n-    StackWatermarkSet::finish_processing(jt, this, StackWatermarkKind::gc);\n+    StackWatermarkSet::finish_processing(jt, _cl, StackWatermarkKind::gc);\n@@ -595,0 +605,1 @@\n+};\n@@ -596,3 +607,3 @@\n-  virtual void do_oop(oop* p) {\n-    ZBarrier::mark_barrier_on_oop_field(p, false \/* finalizable *\/);\n-  }\n+class ZMarkNMethodClosure : public NMethodClosure {\n+private:\n+  OopClosure* const _cl;\n@@ -600,2 +611,14 @@\n-  virtual void do_oop(narrowOop* p) {\n-    ShouldNotReachHere();\n+public:\n+  ZMarkNMethodClosure(OopClosure* cl) :\n+      _cl(cl) {}\n+\n+  virtual void do_nmethod(nmethod* nm) {\n+    ZLocker<ZReentrantLock> locker(ZNMethod::lock_for_nmethod(nm));\n+    if (!nm->is_alive()) {\n+      return;\n+    }\n+\n+    if (ZNMethod::is_armed(nm)) {\n+      ZNMethod::nmethod_oops_do_inner(nm, _cl);\n+      ZNMethod::disarm(nm);\n+    }\n@@ -605,0 +628,2 @@\n+typedef ClaimingCLDToOopClosure<ClassLoaderData::_claim_strong> ZMarkCLDClosure;\n+\n@@ -607,4 +632,8 @@\n-  ZMark* const                        _mark;\n-  SuspendibleThreadSetJoiner          _sts_joiner;\n-  ZConcurrentRootsIteratorClaimStrong _roots;\n-  ZMarkConcurrentRootsIteratorClosure _cl;\n+  ZMark* const               _mark;\n+  SuspendibleThreadSetJoiner _sts_joiner;\n+  ZConcurrentRootsIterator   _roots;\n+\n+  ZMarkOopClosure            _cl;\n+  ZMarkCLDClosure            _cld_cl;\n+  ZMarkThreadClosure         _thread_cl;\n+  ZMarkNMethodClosure        _nm_cl;\n@@ -617,2 +646,5 @@\n-      _roots(),\n-      _cl() {\n+      _roots(ClassLoaderData::_claim_strong),\n+      _cl(),\n+      _cld_cl(&_cl),\n+      _thread_cl(&_cl),\n+      _nm_cl(&_cl) {\n@@ -627,1 +659,4 @@\n-    _roots.oops_do(&_cl);\n+    _roots.apply(&_cl,\n+                 &_cld_cl,\n+                 &_thread_cl,\n+                 &_nm_cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":58,"deletions":23,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -207,0 +207,9 @@\n+  ZLocker<ZReentrantLock> locker(ZNMethod::lock_for_nmethod(nm));\n+  if (!nm->is_alive()) {\n+    return;\n+  }\n+\n+  ZNMethod::nmethod_oops_do_inner(nm, cl);\n+}\n+\n+void ZNMethod::nmethod_oops_do_inner(nmethod* nm, OopClosure* cl) {\n@@ -237,42 +246,1 @@\n-class ZNMethodToOopsDoClosure : public NMethodClosure {\n-private:\n-  OopClosure* const        _cl;\n-  const ZNMethodEntry      _entry;\n-  BarrierSetNMethod* const _bs_nm;\n-\n-public:\n-  ZNMethodToOopsDoClosure(OopClosure* cl, ZNMethodEntry entry) :\n-      _cl(cl),\n-      _entry(entry),\n-      _bs_nm(BarrierSet::barrier_set()->barrier_set_nmethod()) {}\n-\n-  virtual void do_nmethod(nmethod* nm) {\n-    if (_entry == ZNMethodEntry::PreBarrier) {\n-      \/\/ Apply entry barrier before proceeding with closure\n-      _bs_nm->nmethod_entry_barrier(nm);\n-    }\n-\n-    ZLocker<ZReentrantLock> locker(ZNMethod::lock_for_nmethod(nm));\n-    if (!nm->is_alive()) {\n-      return;\n-    }\n-\n-    if (_entry == ZNMethodEntry::Disarm) {\n-      \/\/ Apply closure and disarm only armed nmethods\n-      if (ZNMethod::is_armed(nm)) {\n-        ZNMethod::nmethod_oops_do(nm, _cl);\n-        ZNMethod::disarm(nm);\n-      }\n-      return;\n-    }\n-\n-    if (_entry == ZNMethodEntry::VerifyDisarmed) {\n-      \/\/ Only verify\n-      assert(!ZNMethod::is_armed(nm), \"Must be disarmed\");\n-    }\n-\n-    ZNMethod::nmethod_oops_do(nm, _cl);\n-  }\n-};\n-\n-void ZNMethod::oops_do_begin() {\n+void ZNMethod::nmethods_do_begin() {\n@@ -282,1 +250,1 @@\n-void ZNMethod::oops_do_end() {\n+void ZNMethod::nmethods_do_end() {\n@@ -286,3 +254,2 @@\n-void ZNMethod::oops_do(OopClosure* cl, ZNMethodEntry entry) {\n-  ZNMethodToOopsDoClosure nmethod_cl(cl, entry);\n-  ZNMethodTable::nmethods_do(&nmethod_cl);\n+void ZNMethod::nmethods_do(NMethodClosure* cl) {\n+  ZNMethodTable::nmethods_do(cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.cpp","additions":13,"deletions":46,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-class OopClosure;\n+class NMethodClosure;\n@@ -34,7 +34,0 @@\n-enum class ZNMethodEntry {\n-  PreBarrier,\n-  Disarm,\n-  VerifyDisarmed,\n-  None\n-};\n-\n@@ -59,0 +52,1 @@\n+  static void nmethod_oops_do_inner(nmethod* nm, OopClosure* cl);\n@@ -60,3 +54,3 @@\n-  static void oops_do_begin();\n-  static void oops_do_end();\n-  static void oops_do(OopClosure* cl, ZNMethodEntry entry);\n+  static void nmethods_do_begin();\n+  static void nmethods_do_end();\n+  static void nmethods_do(NMethodClosure* cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.hpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-class ZPhantomKeepAliveOopClosure : public ZRootsIteratorClosure {\n+class ZPhantomKeepAliveOopClosure : public OopClosure {\n@@ -60,2 +60,0 @@\n-\n-  virtual ZNMethodEntry nmethod_entry() const;\n@@ -63,2 +61,1 @@\n-\n-class ZPhantomCleanOopClosure : public ZRootsIteratorClosure {\n+class ZPhantomCleanOopClosure : public OopClosure {\n@@ -68,2 +65,0 @@\n-\n-  virtual ZNMethodEntry nmethod_entry() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zOopClosures.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -83,5 +83,0 @@\n-inline ZNMethodEntry ZPhantomKeepAliveOopClosure::nmethod_entry() const {\n-  ShouldNotReachHere();\n-  return ZNMethodEntry::None;\n-}\n-\n@@ -112,5 +107,0 @@\n-inline ZNMethodEntry ZPhantomCleanOopClosure::nmethod_entry() const {\n-  ShouldNotReachHere();\n-  return ZNMethodEntry::None;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zOopClosures.inline.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"gc\/z\/zArray.inline.hpp\"\n@@ -751,0 +752,13 @@\n+void ZPageAllocator::free_pages(const ZArray<ZPage*>* pages, bool reclaimed) {\n+  ZLocker<ZLock> locker(&_lock);\n+\n+  \/\/ Free pages\n+  ZArrayIterator<ZPage*> iter(pages);\n+  for (ZPage* page; iter.next(&page);) {\n+    free_page_inner(page, reclaimed);\n+  }\n+\n+  \/\/ Try satisfy stalled allocations\n+  satisfy_stalled();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/z\/zArray.hpp\"\n@@ -127,0 +128,1 @@\n+  void free_pages(const ZArray<ZPage*>* pages, bool reclaimed);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"prims\/jvmtiTagMap.hpp\"\n@@ -41,0 +42,1 @@\n+static const ZStatSubPhase ZSubPhasePauseRootsJVMTITagMap(\"Pause Roots JVMTITagMap\");\n@@ -70,2 +72,4 @@\n-    \/\/ export weak roots to rehash the JVMTI tag map\n-    ZRelocateRoots::oops_do(&_cl);\n+    \/\/ tag map to rehash the entries with the new oop addresses.\n+    ZStatTimer timer(ZSubPhasePauseRootsJVMTITagMap);\n+    AlwaysTrueClosure always_alive;\n+    JvmtiTagMap::weak_oops_do(&always_alive, &_cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"gc\/z\/zArray.inline.hpp\"\n@@ -28,0 +29,1 @@\n+#include \"gc\/z\/zRelocationSetSelector.inline.hpp\"\n@@ -29,1 +31,3 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"gc\/z\/zTask.hpp\"\n+#include \"gc\/z\/zWorkers.hpp\"\n+#include \"runtime\/atomic.hpp\"\n@@ -32,4 +36,15 @@\n-ZRelocationSet::ZRelocationSet() :\n-    _allocator(),\n-    _forwardings(NULL),\n-    _nforwardings(0) {}\n+class ZRelocationSetInstallTask : public ZTask {\n+private:\n+  ZForwardingAllocator* const    _allocator;\n+  ZForwarding**                  _forwardings;\n+  const size_t                   _nforwardings;\n+  ZArrayParallelIterator<ZPage*> _small_iter;\n+  ZArrayParallelIterator<ZPage*> _medium_iter;\n+  volatile size_t                _small_next;\n+  volatile size_t                _medium_next;\n+\n+  void install(ZForwarding* forwarding, volatile size_t* next) {\n+    const size_t index = Atomic::fetch_and_add(next, 1u);\n+    assert(index < _nforwardings, \"Invalid index\");\n+    _forwardings[index] = forwarding;\n+  }\n@@ -37,5 +52,3 @@\n-void ZRelocationSet::populate(ZPage* const* small, size_t nsmall,\n-                              ZPage* const* medium, size_t nmedium,\n-                              size_t forwarding_entries) {\n-  \/\/ Set relocation set length\n-  _nforwardings = nsmall + nmedium;\n+  void install_small(ZForwarding* forwarding) {\n+    install(forwarding, &_small_next);\n+  }\n@@ -43,6 +56,3 @@\n-  \/\/ Initialize forwarding allocator to have room for the\n-  \/\/ relocation set, all forwardings, and all forwarding entries.\n-  const size_t relocation_set_size = _nforwardings * sizeof(ZForwarding*);\n-  const size_t forwardings_size = _nforwardings * sizeof(ZForwarding);\n-  const size_t forwarding_entries_size = forwarding_entries * sizeof(ZForwardingEntry);\n-  _allocator.reset(relocation_set_size + forwardings_size + forwarding_entries_size);\n+  void install_medium(ZForwarding* forwarding) {\n+    install(forwarding, &_medium_next);\n+  }\n@@ -50,2 +60,10 @@\n-  \/\/ Allocate relocation set\n-  _forwardings = new (_allocator.alloc(relocation_set_size)) ZForwarding*[_nforwardings];\n+public:\n+  ZRelocationSetInstallTask(ZForwardingAllocator* allocator, const ZRelocationSetSelector* selector) :\n+      ZTask(\"ZRelocationSetInstallTask\"),\n+      _allocator(allocator),\n+      _forwardings(NULL),\n+      _nforwardings(selector->small()->length() + selector->medium()->length()),\n+      _small_iter(selector->small()),\n+      _medium_iter(selector->medium()),\n+      _small_next(selector->medium()->length()),\n+      _medium_next(0) {\n@@ -53,2 +71,6 @@\n-  \/\/ Populate relocation set array\n-  size_t j = 0;\n+    \/\/ Reset the allocator to have room for the relocation\n+    \/\/ set, all forwardings, and all forwarding entries.\n+    const size_t relocation_set_size = _nforwardings * sizeof(ZForwarding*);\n+    const size_t forwardings_size = _nforwardings * sizeof(ZForwarding);\n+    const size_t forwarding_entries_size = selector->forwarding_entries() * sizeof(ZForwardingEntry);\n+    _allocator->reset(relocation_set_size + forwardings_size + forwarding_entries_size);\n@@ -56,3 +78,2 @@\n-  \/\/ Populate medium pages\n-  for (size_t i = 0; i < nmedium; i++) {\n-    _forwardings[j++] = ZForwarding::alloc(&_allocator, medium[i]);\n+    \/\/ Allocate relocation set\n+    _forwardings = new (_allocator->alloc(relocation_set_size)) ZForwarding*[_nforwardings];\n@@ -61,3 +82,16 @@\n-  \/\/ Populate small pages\n-  for (size_t i = 0; i < nsmall; i++) {\n-    _forwardings[j++] = ZForwarding::alloc(&_allocator, small[i]);\n+  ~ZRelocationSetInstallTask() {\n+    assert(_allocator->is_full(), \"Should be full\");\n+  }\n+\n+  virtual void work() {\n+    \/\/ Allocate and install forwardings for small pages\n+    for (ZPage* page; _small_iter.next(&page);) {\n+      ZForwarding* const forwarding = ZForwarding::alloc(_allocator, page);\n+      install_small(forwarding);\n+    }\n+\n+    \/\/ Allocate and install forwardings for medium pages\n+    for (ZPage* page; _medium_iter.next(&page);) {\n+      ZForwarding* const forwarding = ZForwarding::alloc(_allocator, page);\n+      install_medium(forwarding);\n+    }\n@@ -66,1 +100,22 @@\n-  assert(_allocator.is_full(), \"Should be full\");\n+  ZForwarding** forwardings() const {\n+    return _forwardings;\n+  }\n+\n+  size_t nforwardings() const {\n+    return _nforwardings;\n+  }\n+};\n+\n+ZRelocationSet::ZRelocationSet(ZWorkers* workers) :\n+    _workers(workers),\n+    _allocator(),\n+    _forwardings(NULL),\n+    _nforwardings(0) {}\n+\n+void ZRelocationSet::install(const ZRelocationSetSelector* selector) {\n+  \/\/ Install relocation set\n+  ZRelocationSetInstallTask task(&_allocator, selector);\n+  _workers->run_concurrent(&task);\n+\n+  _forwardings = task.forwardings();\n+  _nforwardings = task.nforwardings();\n@@ -69,1 +124,1 @@\n-  ZStatRelocation::set_at_populate_relocation_set(_allocator.size());\n+  ZStatRelocation::set_at_install_relocation_set(_allocator.size());\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSet.cpp","additions":83,"deletions":28,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -32,1 +31,2 @@\n-class ZPage;\n+class ZRelocationSetSelector;\n+class ZWorkers;\n@@ -38,0 +38,1 @@\n+  ZWorkers*            _workers;\n@@ -43,1 +44,1 @@\n-  ZRelocationSet();\n+  ZRelocationSet(ZWorkers* workers);\n@@ -45,3 +46,1 @@\n-  void populate(ZPage* const* small, size_t nsmall,\n-                ZPage* const* medium, size_t nmedium,\n-                size_t forwarding_entries);\n+  void install(const ZRelocationSetSelector* selector);\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSet.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/z\/zRelocationSet.hpp\"\n@@ -55,2 +54,0 @@\n-    _sorted_pages(NULL),\n-    _nselected(0),\n@@ -60,29 +57,0 @@\n-ZRelocationSetSelectorGroup::~ZRelocationSetSelectorGroup() {\n-  FREE_C_HEAP_ARRAY(ZPage*, _sorted_pages);\n-}\n-\n-void ZRelocationSetSelectorGroup::register_live_page(ZPage* page) {\n-  const uint8_t type = page->type();\n-  const size_t size = page->size();\n-  const size_t live = page->live_bytes();\n-  const size_t garbage = size - live;\n-\n-  if (garbage > _fragmentation_limit) {\n-    _registered_pages.append(page);\n-  }\n-\n-  _stats._npages++;\n-  _stats._total += size;\n-  _stats._live += live;\n-  _stats._garbage += garbage;\n-}\n-\n-void ZRelocationSetSelectorGroup::register_garbage_page(ZPage* page) {\n-  const size_t size = page->size();\n-\n-  _stats._npages++;\n-  _stats._total += size;\n-  _stats._garbage += size;\n-  _stats._empty += size;\n-}\n-\n@@ -105,1 +73,0 @@\n-  const size_t npages = _registered_pages.length();\n@@ -108,6 +75,1 @@\n-  size_t partitions[npartitions];\n-\n-  \/\/ Allocate destination array\n-  assert(_sorted_pages == NULL, \"Already initialized\");\n-  _sorted_pages = NEW_C_HEAP_ARRAY(ZPage*, npages, mtGC);\n-  debug_only(memset(_sorted_pages, 0, npages * sizeof(ZPage*)));\n+  int partitions[npartitions] = { \/* zero initialize *\/ };\n@@ -116,1 +78,0 @@\n-  memset(partitions, 0, sizeof(partitions));\n@@ -124,1 +85,1 @@\n-  size_t finger = 0;\n+  int finger = 0;\n@@ -126,1 +87,1 @@\n-    const size_t slots = partitions[i];\n+    const int slots = partitions[i];\n@@ -131,0 +92,4 @@\n+  \/\/ Allocate destination array\n+  const int npages = _registered_pages.length();\n+  ZArray<ZPage*> sorted_pages(npages, npages, NULL);\n+\n@@ -135,3 +100,3 @@\n-    const size_t finger = partitions[index]++;\n-    assert(_sorted_pages[finger] == NULL, \"Invalid finger\");\n-    _sorted_pages[finger] = page;\n+    const int finger = partitions[index]++;\n+    assert(sorted_pages.at(finger) == NULL, \"Invalid finger\");\n+    sorted_pages.at_put(finger, page);\n@@ -139,0 +104,2 @@\n+\n+  _registered_pages.swap(&sorted_pages);\n@@ -145,3 +112,3 @@\n-  const size_t npages = _registered_pages.length();\n-  size_t selected_from = 0;\n-  size_t selected_to = 0;\n+  const int npages = _registered_pages.length();\n+  int selected_from = 0;\n+  int selected_to = 0;\n@@ -154,1 +121,1 @@\n-  for (size_t from = 1; from <= npages; from++) {\n+  for (int from = 1; from <= npages; from++) {\n@@ -156,1 +123,1 @@\n-    ZPage* const page = _sorted_pages[from - 1];\n+    ZPage* const page = _registered_pages.at(from - 1);\n@@ -164,1 +131,1 @@\n-    const size_t to = ceil((double)(from_live_bytes) \/ (double)(_page_size - _object_size_limit));\n+    const int to = ceil((double)(from_live_bytes) \/ (double)(_page_size - _object_size_limit));\n@@ -170,2 +137,2 @@\n-    const size_t diff_from = from - selected_from;\n-    const size_t diff_to = to - selected_to;\n+    const int diff_from = from - selected_from;\n+    const int diff_to = to - selected_to;\n@@ -179,1 +146,1 @@\n-    log_trace(gc, reloc)(\"Candidate Relocation Set (%s Pages): \" SIZE_FORMAT \"->\" SIZE_FORMAT \", \"\n+    log_trace(gc, reloc)(\"Candidate Relocation Set (%s Pages): %d->%d, \"\n@@ -186,1 +153,1 @@\n-  _nselected = selected_from;\n+  _registered_pages.trunc_to(selected_from);\n@@ -193,4 +160,2 @@\n-  log_trace(gc, reloc)(\"Relocation Set (%s Pages): \" SIZE_FORMAT \"->\" SIZE_FORMAT \", \"\n-                       SIZE_FORMAT \" skipped, \" SIZE_FORMAT \" forwarding entries\",\n-                       _name, selected_from, selected_to, npages - selected_from,\n-                       selected_forwarding_entries);\n+  log_trace(gc, reloc)(\"Relocation Set (%s Pages): %d->%d, %d skipped, \" SIZE_FORMAT \" forwarding entries\",\n+                       _name, selected_from, selected_to, npages - selected_from, selected_forwarding_entries);\n@@ -218,25 +183,2 @@\n-    _large(\"Large\", ZPageTypeLarge, 0 \/* page_size *\/, 0 \/* object_size_limit *\/) {}\n-\n-void ZRelocationSetSelector::register_live_page(ZPage* page) {\n-  const uint8_t type = page->type();\n-\n-  if (type == ZPageTypeSmall) {\n-    _small.register_live_page(page);\n-  } else if (type == ZPageTypeMedium) {\n-    _medium.register_live_page(page);\n-  } else {\n-    _large.register_live_page(page);\n-  }\n-}\n-\n-void ZRelocationSetSelector::register_garbage_page(ZPage* page) {\n-  const uint8_t type = page->type();\n-\n-  if (type == ZPageTypeSmall) {\n-    _small.register_garbage_page(page);\n-  } else if (type == ZPageTypeMedium) {\n-    _medium.register_garbage_page(page);\n-  } else {\n-    _large.register_garbage_page(page);\n-  }\n-}\n+    _large(\"Large\", ZPageTypeLarge, 0 \/* page_size *\/, 0 \/* object_size_limit *\/),\n+    _garbage_pages() {}\n@@ -244,1 +186,1 @@\n-void ZRelocationSetSelector::select(ZRelocationSet* relocation_set) {\n+void ZRelocationSetSelector::select() {\n@@ -258,5 +200,0 @@\n-  \/\/ Populate relocation set\n-  relocation_set->populate(_small.selected(), _small.nselected(),\n-                           _medium.selected(), _medium.nselected(),\n-                           forwarding_entries());\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSetSelector.cpp","additions":27,"deletions":90,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-class ZRelocationSet;\n@@ -79,2 +78,0 @@\n-  ZPage**                          _sorted_pages;\n-  size_t                           _nselected;\n@@ -94,1 +91,0 @@\n-  ~ZRelocationSetSelectorGroup();\n@@ -100,2 +96,1 @@\n-  ZPage* const* selected() const;\n-  size_t nselected() const;\n+  const ZArray<ZPage*>* selected() const;\n@@ -112,0 +107,1 @@\n+  ZArray<ZPage*>              _garbage_pages;\n@@ -113,1 +109,0 @@\n-  size_t forwarding_entries() const;\n@@ -124,1 +119,10 @@\n-  void select(ZRelocationSet* relocation_set);\n+\n+  bool should_free_garbage_pages(int bulk) const;\n+  const ZArray<ZPage*>* garbage_pages() const;\n+  void clear_garbage_pages();\n+\n+  void select();\n+\n+  const ZArray<ZPage*>* small() const;\n+  const ZArray<ZPage*>* medium() const;\n+  size_t forwarding_entries() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSetSelector.hpp","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+#include \"gc\/z\/zArray.inline.hpp\"\n+#include \"gc\/z\/zPage.inline.hpp\"\n@@ -69,2 +71,14 @@\n-inline ZPage* const* ZRelocationSetSelectorGroup::selected() const {\n-  return _sorted_pages;\n+inline void ZRelocationSetSelectorGroup::register_live_page(ZPage* page) {\n+  const uint8_t type = page->type();\n+  const size_t size = page->size();\n+  const size_t live = page->live_bytes();\n+  const size_t garbage = size - live;\n+\n+  if (garbage > _fragmentation_limit) {\n+    _registered_pages.append(page);\n+  }\n+\n+  _stats._npages++;\n+  _stats._total += size;\n+  _stats._live += live;\n+  _stats._garbage += garbage;\n@@ -73,2 +87,11 @@\n-inline size_t ZRelocationSetSelectorGroup::nselected() const {\n-  return _nselected;\n+inline void ZRelocationSetSelectorGroup::register_garbage_page(ZPage* page) {\n+  const size_t size = page->size();\n+\n+  _stats._npages++;\n+  _stats._total += size;\n+  _stats._garbage += size;\n+  _stats._empty += size;\n+}\n+\n+inline const ZArray<ZPage*>* ZRelocationSetSelectorGroup::selected() const {\n+  return &_registered_pages;\n@@ -85,2 +108,36 @@\n-inline size_t ZRelocationSetSelector::forwarding_entries() const {\n-  return _small.forwarding_entries() + _medium.forwarding_entries();\n+inline void ZRelocationSetSelector::register_live_page(ZPage* page) {\n+  const uint8_t type = page->type();\n+\n+  if (type == ZPageTypeSmall) {\n+    _small.register_live_page(page);\n+  } else if (type == ZPageTypeMedium) {\n+    _medium.register_live_page(page);\n+  } else {\n+    _large.register_live_page(page);\n+  }\n+}\n+\n+inline void ZRelocationSetSelector::register_garbage_page(ZPage* page) {\n+  const uint8_t type = page->type();\n+\n+  if (type == ZPageTypeSmall) {\n+    _small.register_garbage_page(page);\n+  } else if (type == ZPageTypeMedium) {\n+    _medium.register_garbage_page(page);\n+  } else {\n+    _large.register_garbage_page(page);\n+  }\n+\n+  _garbage_pages.append(page);\n+}\n+\n+inline bool ZRelocationSetSelector::should_free_garbage_pages(int bulk) const {\n+  return _garbage_pages.length() >= bulk && _garbage_pages.is_nonempty();\n+}\n+\n+inline const ZArray<ZPage*>* ZRelocationSetSelector::garbage_pages() const {\n+  return &_garbage_pages;\n+}\n+\n+inline void ZRelocationSetSelector::clear_garbage_pages() {\n+  return _garbage_pages.clear();\n@@ -105,0 +162,12 @@\n+inline const ZArray<ZPage*>* ZRelocationSetSelector::small() const {\n+  return _small.selected();\n+}\n+\n+inline const ZArray<ZPage*>* ZRelocationSetSelector::medium() const {\n+  return _medium.selected();\n+}\n+\n+inline size_t ZRelocationSetSelector::forwarding_entries() const {\n+  return _small.forwarding_entries() + _medium.forwarding_entries();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocationSetSelector.inline.hpp","additions":75,"deletions":6,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"classfile\/classLoaderDataGraph.hpp\"\n@@ -31,1 +32,1 @@\n-#include \"prims\/jvmtiExport.hpp\"\n+#include \"prims\/jvmtiTagMap.hpp\"\n@@ -37,1 +38,0 @@\n-static const ZStatSubPhase ZSubPhasePauseRootsJVMTIWeakExport(\"Pause Roots JVMTIWeakExport\");\n@@ -42,1 +42,1 @@\n-static const ZStatSubPhase ZSubPhasePauseWeakRootsJVMTIWeakExport(\"Pause Weak Roots JVMTIWeakExport\");\n+static const ZStatSubPhase ZSubPhasePauseWeakRootsJVMTITagMap(\"Pause Weak Roots JVMTITagMap\");\n@@ -45,7 +45,3 @@\n-template <typename T, void (T::*F)(ZRootsIteratorClosure*)>\n-ZParallelOopsDo<T, F>::ZParallelOopsDo(T* iter) :\n-    _iter(iter),\n-    _completed(false) {}\n-\n-template <typename T, void (T::*F)(ZRootsIteratorClosure*)>\n-void ZParallelOopsDo<T, F>::oops_do(ZRootsIteratorClosure* cl) {\n+template <typename Iterator>\n+template <typename ClosureType>\n+void ZParallelApply<Iterator>::apply(ClosureType* cl) {\n@@ -53,1 +49,1 @@\n-    (_iter->*F)(cl);\n+    _iter.apply(cl);\n@@ -60,7 +56,2 @@\n-template <typename T, void (T::*F)(BoolObjectClosure*, ZRootsIteratorClosure*)>\n-ZSerialWeakOopsDo<T, F>::ZSerialWeakOopsDo(T* iter) :\n-    _iter(iter),\n-    _claimed(false) {}\n-\n-template <typename T, void (T::*F)(BoolObjectClosure*, ZRootsIteratorClosure*)>\n-void ZSerialWeakOopsDo<T, F>::weak_oops_do(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl) {\n+template <typename Iterator>\n+void ZSerialWeakApply<Iterator>::apply(BoolObjectClosure* is_alive, OopClosure* cl) {\n@@ -68,1 +59,1 @@\n-    (_iter->*F)(is_alive, cl);\n+    _iter.apply(is_alive, cl);\n@@ -72,0 +63,13 @@\n+ZStrongOopStorageSetIterator::ZStrongOopStorageSetIterator() :\n+    _iter() {}\n+\n+void ZStrongOopStorageSetIterator::apply(OopClosure* cl) {\n+  ZStatTimer timer(ZSubPhaseConcurrentRootsOopStorageSet);\n+  _iter.oops_do(cl);\n+}\n+\n+void ZStrongCLDsIterator::apply(CLDClosure* cl) {\n+  ZStatTimer timer(ZSubPhaseConcurrentRootsClassLoaderDataGraph);\n+  ClassLoaderDataGraph::always_strong_cld_do(cl);\n+}\n+\n@@ -80,1 +84,8 @@\n-void ZJavaThreadsIterator::threads_do(ThreadClosure* cl) {\n+void ZJavaThreadsIterator::apply(ThreadClosure* cl) {\n+  ZStatTimer timer(ZSubPhaseConcurrentRootsJavaThreads);\n+\n+  \/\/ The resource mark is needed because interpreter oop maps are\n+  \/\/ not reused in concurrent mode. Instead, they are temporary and\n+  \/\/ resource allocated.\n+  ResourceMark                 _rm;\n+\n@@ -86,15 +97,1 @@\n-void ZRelocateRoots::oops_do(OopClosure* cl) {\n-  ZStatTimer timer(ZSubPhasePauseRootsJVMTIWeakExport);\n-  AlwaysTrueClosure always_alive;\n-  JvmtiExport::weak_oops_do(&always_alive, cl);\n-}\n-\n-ZConcurrentRootsIterator::ZConcurrentRootsIterator(int cld_claim) :\n-    _oop_storage_set_iter(),\n-    _java_threads_iter(),\n-    _cld_claim(cld_claim),\n-    _oop_storage_set(this),\n-    _class_loader_data_graph(this),\n-    _java_threads(this),\n-    _code_cache(this) {\n-  ClassLoaderDataGraph::clear_claimed_marks(cld_claim);\n+ZNMethodsIterator::ZNMethodsIterator() {\n@@ -102,1 +99,1 @@\n-    ZNMethodTable::nmethods_do_begin();\n+    ZNMethod::nmethods_do_begin();\n@@ -106,1 +103,1 @@\n-ZConcurrentRootsIterator::~ZConcurrentRootsIterator() {\n+ZNMethodsIterator::~ZNMethodsIterator() {\n@@ -108,1 +105,1 @@\n-    ZNMethodTable::nmethods_do_end();\n+    ZNMethod::nmethods_do_end();\n@@ -112,12 +109,1 @@\n-void ZConcurrentRootsIterator::do_oop_storage_set(ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhaseConcurrentRootsOopStorageSet);\n-  _oop_storage_set_iter.oops_do(cl);\n-}\n-\n-void ZConcurrentRootsIterator::do_class_loader_data_graph(ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhaseConcurrentRootsClassLoaderDataGraph);\n-  CLDToOopClosure cld_cl(cl, _cld_claim);\n-  ClassLoaderDataGraph::always_strong_cld_do(&cld_cl);\n-}\n-\n-void ZConcurrentRootsIterator::do_code_cache(ZRootsIteratorClosure* cl) {\n+void ZNMethodsIterator::apply(NMethodClosure* cl) {\n@@ -125,1 +111,1 @@\n-  ZNMethod::oops_do(cl, cl->nmethod_entry());\n+  ZNMethod::nmethods_do(cl);\n@@ -128,14 +114,3 @@\n-class ZConcurrentRootsIteratorThreadClosure : public ThreadClosure {\n-private:\n-  \/\/ The resource mark is needed because interpreter oop maps are\n-  \/\/ not reused in concurrent mode. Instead, they are temporary and\n-  \/\/ resource allocated.\n-  ResourceMark                 _rm;\n-  ZRootsIteratorClosure* const _cl;\n-\n-public:\n-  ZConcurrentRootsIteratorThreadClosure(ZRootsIteratorClosure* cl) :\n-      _cl(cl) {}\n-\n-  virtual void do_thread(Thread* thread) {\n-    _cl->do_thread(thread);\n+ZConcurrentRootsIterator::ZConcurrentRootsIterator(int cld_claim) {\n+  if (cld_claim != ClassLoaderData::_claim_none) {\n+    ClassLoaderDataGraph::clear_claimed_marks(cld_claim);\n@@ -143,6 +118,0 @@\n-};\n-\n-void ZConcurrentRootsIterator::do_java_threads(ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhaseConcurrentRootsJavaThreads);\n-  ZConcurrentRootsIteratorThreadClosure thread_cl(cl);\n-  _java_threads_iter.threads_do(&thread_cl);\n@@ -151,4 +120,7 @@\n-void ZConcurrentRootsIterator::oops_do(ZRootsIteratorClosure* cl) {\n-  _oop_storage_set.oops_do(cl);\n-  _class_loader_data_graph.oops_do(cl);\n-  _java_threads.oops_do(cl);\n+void ZConcurrentRootsIterator::apply(OopClosure* cl,\n+                                     CLDClosure* cld_cl,\n+                                     ThreadClosure* thread_cl,\n+                                     NMethodClosure* nm_cl) {\n+  _oop_storage_set.apply(cl);\n+  _class_loader_data_graph.apply(cld_cl);\n+  _java_threads.apply(thread_cl);\n@@ -156,1 +128,1 @@\n-    _code_cache.oops_do(cl);\n+    _nmethods.apply(nm_cl);\n@@ -161,1 +133,1 @@\n-    _jvmti_weak_export(this) {\n+    _jvmti_tag_map() {\n@@ -165,3 +137,2 @@\n-void ZWeakRootsIterator::do_jvmti_weak_export(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhasePauseWeakRootsJVMTIWeakExport);\n-  JvmtiExport::weak_oops_do(is_alive, cl);\n+void ZWeakRootsIterator::apply(BoolObjectClosure* is_alive, OopClosure* cl) {\n+  _jvmti_tag_map.apply(is_alive, cl);\n@@ -170,2 +141,3 @@\n-void ZWeakRootsIterator::weak_oops_do(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl) {\n-  _jvmti_weak_export.weak_oops_do(is_alive, cl);\n+void ZJVMTITagMapIterator::apply(BoolObjectClosure* is_alive, OopClosure* cl) {\n+  ZStatTimer timer(ZSubPhasePauseWeakRootsJVMTITagMap);\n+  JvmtiTagMap::weak_oops_do(is_alive, cl);\n@@ -174,4 +146,2 @@\n-void ZWeakRootsIterator::oops_do(ZRootsIteratorClosure* cl) {\n-  AlwaysTrueClosure always_alive;\n-  weak_oops_do(&always_alive, cl);\n-}\n+ZWeakOopStorageSetIterator::ZWeakOopStorageSetIterator() :\n+    _iter() {}\n@@ -179,3 +149,3 @@\n-ZConcurrentWeakRootsIterator::ZConcurrentWeakRootsIterator() :\n-    _oop_storage_set_iter(),\n-    _oop_storage_set(this) {\n+void ZWeakOopStorageSetIterator::apply(OopClosure* cl) {\n+  ZStatTimer timer(ZSubPhaseConcurrentWeakRootsOopStorageSet);\n+  _iter.oops_do(cl);\n@@ -184,2 +154,2 @@\n-void ZConcurrentWeakRootsIterator::report_num_dead() {\n-  _oop_storage_set_iter.report_num_dead();\n+void ZWeakOopStorageSetIterator::report_num_dead() {\n+  _iter.report_num_dead();\n@@ -188,3 +158,2 @@\n-void ZConcurrentWeakRootsIterator::do_oop_storage_set(ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhaseConcurrentWeakRootsOopStorageSet);\n-  _oop_storage_set_iter.oops_do(cl);\n+void ZConcurrentWeakRootsIterator::report_num_dead() {\n+  _oop_storage_set.iter().report_num_dead();\n@@ -193,2 +162,2 @@\n-void ZConcurrentWeakRootsIterator::oops_do(ZRootsIteratorClosure* cl) {\n-  _oop_storage_set.oops_do(cl);\n+void ZConcurrentWeakRootsIterator::apply(OopClosure* cl) {\n+  _oop_storage_set.apply(cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.cpp","additions":65,"deletions":96,"binary":false,"changes":161,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"classfile\/classLoaderDataGraph.hpp\"\n@@ -29,2 +28,1 @@\n-#include \"gc\/z\/zNMethod.hpp\"\n-#include \"memory\/allocation.hpp\"\n+#include \"logging\/log.hpp\"\n@@ -34,7 +32,2 @@\n-class ZRootsIteratorClosure;\n-\n-typedef OopStorageSetStrongParState<true \/* concurrent *\/, false \/* is_const *\/> ZOopStorageSetStrongIterator;\n-typedef OopStorageSetWeakParState<true \/* concurrent *\/, false \/* is_const *\/> ZOopStorageSetWeakIterator;\n-\n-template <typename T, void (T::*F)(ZRootsIteratorClosure*)>\n-class ZParallelOopsDo {\n+template <typename Iterator>\n+class ZParallelApply {\n@@ -42,1 +35,1 @@\n-  T* const      _iter;\n+  Iterator      _iter;\n@@ -46,2 +39,10 @@\n-  ZParallelOopsDo(T* iter);\n-  void oops_do(ZRootsIteratorClosure* cl);\n+  ZParallelApply() :\n+      _iter(),\n+      _completed(false) {}\n+\n+  template <typename ClosureType>\n+  void apply(ClosureType* cl);\n+\n+  Iterator& iter() {\n+    return _iter;\n+  }\n@@ -50,2 +51,2 @@\n-template <typename T, void (T::*F)(BoolObjectClosure*, ZRootsIteratorClosure*)>\n-class ZSerialWeakOopsDo {\n+template <typename Iterator>\n+class ZSerialWeakApply {\n@@ -53,1 +54,1 @@\n-  T* const      _iter;\n+  Iterator      _iter;\n@@ -57,2 +58,5 @@\n-  ZSerialWeakOopsDo(T* iter);\n-  void weak_oops_do(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl);\n+  ZSerialWeakApply() :\n+      _iter(),\n+      _claimed(false) {}\n+\n+  void apply(BoolObjectClosure* is_alive, OopClosure* cl);\n@@ -61,1 +65,3 @@\n-class ZRootsIteratorClosure : public OopClosure {\n+class ZStrongOopStorageSetIterator {\n+  OopStorageSetStrongParState<true \/* concurrent *\/, false \/* is_const *\/> _iter;\n+\n@@ -63,1 +69,1 @@\n-  virtual void do_thread(Thread* thread) {}\n+  ZStrongOopStorageSetIterator();\n@@ -65,1 +71,6 @@\n-  virtual ZNMethodEntry nmethod_entry() const = 0;\n+  void apply(OopClosure* cl);\n+};\n+\n+class ZStrongCLDsIterator {\n+public:\n+  void apply(CLDClosure* cl);\n@@ -78,1 +89,1 @@\n-  void threads_do(ThreadClosure* cl);\n+  void apply(ThreadClosure* cl);\n@@ -81,1 +92,1 @@\n-class ZRelocateRoots : public AllStatic {\n+class ZNMethodsIterator {\n@@ -83,1 +94,4 @@\n-  static void oops_do(OopClosure* cl);\n+  ZNMethodsIterator();\n+  ~ZNMethodsIterator();\n+\n+  void apply(NMethodClosure* cl);\n@@ -88,13 +102,4 @@\n-  ZOopStorageSetStrongIterator _oop_storage_set_iter;\n-  ZJavaThreadsIterator         _java_threads_iter;\n-  const int                    _cld_claim;\n-\n-  void do_oop_storage_set(ZRootsIteratorClosure* cl);\n-  void do_java_threads(ZRootsIteratorClosure* cl);\n-  void do_class_loader_data_graph(ZRootsIteratorClosure* cl);\n-  void do_code_cache(ZRootsIteratorClosure* cl);\n-\n-  ZParallelOopsDo<ZConcurrentRootsIterator, &ZConcurrentRootsIterator::do_oop_storage_set>         _oop_storage_set;\n-  ZParallelOopsDo<ZConcurrentRootsIterator, &ZConcurrentRootsIterator::do_class_loader_data_graph> _class_loader_data_graph;\n-  ZParallelOopsDo<ZConcurrentRootsIterator, &ZConcurrentRootsIterator::do_java_threads>            _java_threads;\n-  ZParallelOopsDo<ZConcurrentRootsIterator, &ZConcurrentRootsIterator::do_code_cache>              _code_cache;\n+  ZParallelApply<ZStrongOopStorageSetIterator> _oop_storage_set;\n+  ZParallelApply<ZStrongCLDsIterator>          _class_loader_data_graph;\n+  ZParallelApply<ZJavaThreadsIterator>         _java_threads;\n+  ZParallelApply<ZNMethodsIterator>            _nmethods;\n@@ -104,1 +109,0 @@\n-  ~ZConcurrentRootsIterator();\n@@ -106,1 +110,4 @@\n-  void oops_do(ZRootsIteratorClosure* cl);\n+  void apply(OopClosure* cl,\n+             CLDClosure* cld_cl,\n+             ThreadClosure* thread_cl,\n+             NMethodClosure* nm_cl);\n@@ -109,5 +116,3 @@\n-class ZConcurrentRootsIteratorClaimStrong : public ZConcurrentRootsIterator {\n-public:\n-  ZConcurrentRootsIteratorClaimStrong() :\n-      ZConcurrentRootsIterator(ClassLoaderData::_claim_strong) {}\n-};\n+class ZWeakOopStorageSetIterator {\n+private:\n+  OopStorageSetWeakParState<true \/* concurrent *\/, false \/* is_const *\/> _iter;\n@@ -115,1 +120,0 @@\n-class ZConcurrentRootsIteratorClaimOther : public ZConcurrentRootsIterator {\n@@ -117,2 +121,5 @@\n-  ZConcurrentRootsIteratorClaimOther() :\n-      ZConcurrentRootsIterator(ClassLoaderData::_claim_other) {}\n+  ZWeakOopStorageSetIterator();\n+\n+  void apply(OopClosure* cl);\n+\n+  void report_num_dead();\n@@ -121,1 +128,1 @@\n-class ZConcurrentRootsIteratorClaimNone : public ZConcurrentRootsIterator {\n+class ZJVMTITagMapIterator {\n@@ -123,2 +130,1 @@\n-  ZConcurrentRootsIteratorClaimNone() :\n-      ZConcurrentRootsIterator(ClassLoaderData::_claim_none) {}\n+  void apply(BoolObjectClosure* is_alive, OopClosure* cl);\n@@ -129,3 +135,1 @@\n-  void do_jvmti_weak_export(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl);\n-\n-  ZSerialWeakOopsDo<ZWeakRootsIterator, &ZWeakRootsIterator::do_jvmti_weak_export> _jvmti_weak_export;\n+  ZSerialWeakApply<ZJVMTITagMapIterator> _jvmti_tag_map;\n@@ -136,2 +140,1 @@\n-  void weak_oops_do(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl);\n-  void oops_do(ZRootsIteratorClosure* cl);\n+  void apply(BoolObjectClosure* is_alive, OopClosure* cl);\n@@ -142,5 +145,1 @@\n-  ZOopStorageSetWeakIterator _oop_storage_set_iter;\n-\n-  void do_oop_storage_set(ZRootsIteratorClosure* cl);\n-\n-  ZParallelOopsDo<ZConcurrentWeakRootsIterator, &ZConcurrentWeakRootsIterator::do_oop_storage_set> _oop_storage_set;\n+  ZParallelApply<ZWeakOopStorageSetIterator> _oop_storage_set;\n@@ -149,3 +148,1 @@\n-  ZConcurrentWeakRootsIterator();\n-\n-  void oops_do(ZRootsIteratorClosure* cl);\n+  void apply(OopClosure* cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.hpp","additions":60,"deletions":63,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -1150,1 +1150,1 @@\n-void ZStatRelocation::set_at_populate_relocation_set(size_t forwarding_usage) {\n+void ZStatRelocation::set_at_install_relocation_set(size_t forwarding_usage) {\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -433,1 +433,1 @@\n-  static void set_at_populate_relocation_set(size_t forwarding_usage);\n+  static void set_at_install_relocation_set(size_t forwarding_usage);\n","filename":"src\/hotspot\/share\/gc\/z\/zStat.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    ZNMethod::nmethod_oops_do(nm, &cl);\n+    ZNMethod::nmethod_oops_do_inner(nm, &cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/z\/zNMethod.hpp\"\n@@ -69,1 +70,1 @@\n-class ZVerifyRootClosure : public ZRootsIteratorClosure {\n+class ZVerifyRootClosure : public OopClosure {\n@@ -92,2 +93,0 @@\n-  virtual void do_thread(Thread* thread);\n-\n@@ -97,5 +96,0 @@\n-\n-  virtual ZNMethodEntry nmethod_entry() const {\n-    \/\/ Verification performs its own verification\n-    return ZNMethodEntry::None;\n-  }\n@@ -184,12 +178,0 @@\n-void ZVerifyRootClosure::do_thread(Thread* thread) {\n-  thread->oops_do_no_frames(this, NULL);\n-\n-  JavaThread* const jt = thread->as_Java_thread();\n-  if (!jt->has_last_Java_frame()) {\n-    return;\n-  }\n-\n-  ZVerifyStack verify_stack(this, jt);\n-  verify_stack.verify_frames();\n-}\n-\n@@ -224,4 +206,1 @@\n-template <typename RootsIterator>\n-void ZVerify::roots(bool verify_fixed) {\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Must be at a safepoint\");\n-  assert(!ZResurrection::is_blocked(), \"Invalid phase\");\n+typedef ClaimingCLDToOopClosure<ClassLoaderData::_claim_none> ZVerifyCLDClosure;\n@@ -229,4 +208,18 @@\n-  if (ZVerifyRoots) {\n-    ZVerifyRootClosure cl(verify_fixed);\n-    RootsIterator iter;\n-    iter.oops_do(&cl);\n+class ZVerifyThreadClosure : public ThreadClosure {\n+private:\n+  ZVerifyRootClosure* const _cl;\n+\n+public:\n+  ZVerifyThreadClosure(ZVerifyRootClosure* cl) :\n+      _cl(cl) {}\n+\n+  virtual void do_thread(Thread* thread) {\n+    thread->oops_do_no_frames(_cl, NULL);\n+\n+    JavaThread* const jt = thread->as_Java_thread();\n+    if (!jt->has_last_Java_frame()) {\n+      return;\n+    }\n+\n+    ZVerifyStack verify_stack(_cl, jt);\n+    verify_stack.verify_frames();\n@@ -234,1 +227,1 @@\n-}\n+};\n@@ -236,3 +229,24 @@\n-void ZVerify::roots_weak() {\n-  roots<ZWeakRootsIterator>(true \/* verify_fixed *\/);\n-}\n+class ZVerifyNMethodClosure : public NMethodClosure {\n+private:\n+  OopClosure* const        _cl;\n+  BarrierSetNMethod* const _bs_nm;\n+  const bool               _verify_fixed;\n+\n+  bool trust_nmethod_state() const {\n+    \/\/ The root iterator will visit non-processed\n+    \/\/ nmethods class unloading is turned off.\n+    return ClassUnloading || _verify_fixed;\n+  }\n+\n+public:\n+  ZVerifyNMethodClosure(OopClosure* cl, bool verify_fixed) :\n+      _cl(cl),\n+      _bs_nm(BarrierSet::barrier_set()->barrier_set_nmethod()),\n+      _verify_fixed(verify_fixed) {}\n+\n+  virtual void do_nmethod(nmethod* nm) {\n+    assert(!trust_nmethod_state() || !_bs_nm->is_armed(nm), \"Should not encounter any armed nmethods\");\n+\n+    ZNMethod::nmethod_oops_do(nm, _cl);\n+  }\n+};\n@@ -241,1 +255,17 @@\n-  roots<ZConcurrentRootsIteratorClaimNone>(verify_fixed);\n+  ZVerifyRootClosure cl(verify_fixed);\n+  ZVerifyCLDClosure cld_cl(&cl);\n+  ZVerifyThreadClosure thread_cl(&cl);\n+  ZVerifyNMethodClosure nm_cl(&cl, verify_fixed);\n+\n+  ZConcurrentRootsIterator iter(ClassLoaderData::_claim_none);\n+  iter.apply(&cl,\n+             &cld_cl,\n+             &thread_cl,\n+             &nm_cl);\n+}\n+\n+void ZVerify::roots_weak() {\n+  AlwaysTrueClosure is_alive;\n+  ZVerifyRootClosure cl(true \/* verify_fixed *\/);\n+  ZWeakRootsIterator iter;\n+  iter.apply(&is_alive, &cl);\n@@ -245,1 +275,3 @@\n-  roots<ZConcurrentWeakRootsIterator>(true \/* verify_fixed *\/);\n+  ZVerifyRootClosure cl(true \/* verify_fixed *\/);\n+  ZConcurrentWeakRootsIterator iter;\n+  iter.apply(&cl);\n@@ -249,4 +281,9 @@\n-  roots_concurrent_strong(verify_concurrent_strong);\n-  if (verify_weaks) {\n-    roots_weak();\n-    roots_concurrent_weak();\n+  assert(SafepointSynchronize::is_at_safepoint(), \"Must be at a safepoint\");\n+  assert(!ZResurrection::is_blocked(), \"Invalid phase\");\n+\n+  if (ZVerifyRoots) {\n+    roots_concurrent_strong(verify_concurrent_strong);\n+    if (verify_weaks) {\n+      roots_weak();\n+      roots_concurrent_weak();\n+    }\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.cpp","additions":75,"deletions":38,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -34,3 +34,0 @@\n-  template <typename RootsIterator> static void roots(bool verify_fixed);\n-\n-  static void roots_weak();\n@@ -38,0 +35,1 @@\n+  static void roots_weak();\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    _weak_roots.weak_oops_do(&is_alive, &keep_alive);\n+    _weak_roots.apply(&is_alive, &keep_alive);\n@@ -50,1 +50,1 @@\n-  _workers->run_parallel(&task);\n+  _workers->run_serial(&task);\n@@ -68,1 +68,1 @@\n-    _concurrent_weak_roots.oops_do(&cl);\n+    _concurrent_weak_roots.apply(&cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zWeakRootsProcessor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -332,0 +332,9 @@\n+\n+JNIEXPORT jboolean JNICALL\n+JVM_ReferenceRefersTo(JNIEnv *env, jobject ref, jobject o);\n+\n+\/*\n+ * java.lang.ref.PhantomReference\n+ *\/\n+JNIEXPORT jboolean JNICALL\n+JVM_PhantomReferenceRefersTo(JNIEnv *env, jobject ref, jobject o);\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1272,1 +1272,4 @@\n-JRT_ENTRY(void, InterpreterRuntime::post_method_exit(JavaThread *thread))\n+\/\/ This is a JRT_BLOCK_ENTRY because we have to stash away the return oop\n+\/\/ before transitioning to VM, and restore it after transitioning back\n+\/\/ to Java. The return oop at the top-of-stack, is not walked by the GC.\n+JRT_BLOCK_ENTRY(void, InterpreterRuntime::post_method_exit(JavaThread *thread))\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"interpreter\/zero\/bytecodeInterpreterProfiling.hpp\"\n@@ -136,11 +135,17 @@\n-#define DO_UPDATE_INSTRUCTION_COUNT(opcode)                                                          \\\n-{                                                                                                    \\\n-    BytecodeCounter::_counter_value++;                                                               \\\n-    BytecodeHistogram::_counters[(Bytecodes::Code)opcode]++;                                         \\\n-    if (StopInterpreterAt && StopInterpreterAt == BytecodeCounter::_counter_value) os::breakpoint(); \\\n-    if (TraceBytecodes) {                                                                            \\\n-      CALL_VM((void)InterpreterRuntime::trace_bytecode(THREAD, 0,                    \\\n-                                        topOfStack[Interpreter::expr_index_at(1)],   \\\n-                                        topOfStack[Interpreter::expr_index_at(2)]),  \\\n-                                        handle_exception);                           \\\n-    }                                                                                \\\n+#define DO_UPDATE_INSTRUCTION_COUNT(opcode)                                            \\\n+{                                                                                      \\\n+    if (PrintBytecodeHistogram) {                                                      \\\n+      BytecodeHistogram::_counters[(Bytecodes::Code)opcode]++;                         \\\n+    }                                                                                  \\\n+    if (CountBytecodes || TraceBytecodes || StopInterpreterAt > 0) {                   \\\n+      BytecodeCounter::_counter_value++;                                               \\\n+      if (StopInterpreterAt == BytecodeCounter::_counter_value) {                      \\\n+        os::breakpoint();                                                              \\\n+      }                                                                                \\\n+      if (TraceBytecodes) {                                                            \\\n+        CALL_VM((void)InterpreterRuntime::trace_bytecode(THREAD, 0,                    \\\n+                                          topOfStack[Interpreter::expr_index_at(1)],   \\\n+                                          topOfStack[Interpreter::expr_index_at(2)]),  \\\n+                                          handle_exception);                           \\\n+      }                                                                                \\\n+    }                                                                                  \\\n@@ -419,2 +424,0 @@\n-  static int _compiling;  \/\/ (UseCompiler || CountCompiledCalls)\n-\n@@ -549,1 +552,2 @@\n-  const uint mdo_last_branch_taken_count = 0;\n+  assert(!UseCompiler, \"Zero does not support compilers\");\n+  assert(!CountCompiledCalls, \"Zero does not support counting compiled calls\");\n@@ -554,1 +558,0 @@\n-      _compiling = (UseCompiler || CountCompiledCalls);\n@@ -565,5 +568,0 @@\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-        SAFEPOINT;\n-      }\n@@ -692,6 +690,0 @@\n-      if (_compiling) {\n-        \/\/ Set MDX back to the ProfileData of the invoke bytecode that will be\n-        \/\/ restarted.\n-        SET_MDX(NULL);\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -719,5 +711,0 @@\n-\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -731,5 +718,0 @@\n-\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -758,5 +740,0 @@\n-\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -1061,3 +1038,0 @@\n-                  \/\/ Profile ret.\n-                  BI_PROFILE_UPDATE_RET(\/*bci=*\/((int)(intptr_t)(LOCALS_ADDR(reg))));\n-                  \/\/ Now, update the pc.\n@@ -1373,2 +1347,1 @@\n-          const bool cmp = (STACK_INT(-2) comparison STACK_INT(-1));         \\\n-          int skip = cmp                                                     \\\n+          int skip = (STACK_INT(-2) comparison STACK_INT(-1))                \\\n@@ -1377,2 +1350,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1384,2 +1355,1 @@\n-          const bool cmp = (STACK_INT(-1) comparison 0);                     \\\n-          int skip = cmp                                                     \\\n+          int skip = (STACK_INT(-1) comparison 0)                            \\\n@@ -1388,2 +1358,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1398,2 +1366,1 @@\n-          const bool cmp = (STACK_OBJECT(-2) comparison STACK_OBJECT(-1));   \\\n-          int skip = cmp                                                     \\\n+          int skip = (STACK_OBJECT(-2) comparison STACK_OBJECT(-1))          \\\n@@ -1402,2 +1369,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1411,2 +1376,1 @@\n-          const bool cmp = (!(STACK_OBJECT(-1) == NULL));                    \\\n-          int skip = cmp                                                     \\\n+          int skip = (!(STACK_OBJECT(-1) == NULL))                           \\\n@@ -1415,2 +1379,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1424,2 +1386,1 @@\n-          const bool cmp = ((STACK_OBJECT(-1) == NULL));                     \\\n-          int skip = cmp                                                     \\\n+          int skip = ((STACK_OBJECT(-1) == NULL))                            \\\n@@ -1428,2 +1389,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1453,1 +1412,0 @@\n-            key = -1;\n@@ -1458,2 +1416,0 @@\n-          \/\/ Profile switch.\n-          BI_PROFILE_UPDATE_SWITCH(\/*switch_index=*\/key);\n@@ -1473,3 +1429,0 @@\n-          \/\/ Remember index.\n-          int      index = -1;\n-          int      newindex = 0;\n@@ -1481,1 +1434,0 @@\n-              index = newindex;\n@@ -1484,1 +1436,0 @@\n-            newindex += 1;\n@@ -1486,2 +1437,0 @@\n-          \/\/ Profile switch.\n-          BI_PROFILE_UPDATE_SWITCH(\/*switch_index=*\/index);\n@@ -1653,2 +1602,0 @@\n-              \/\/ Decrement counter if subtype check failed.\n-              BI_PROFILE_SUBTYPECHECK_FAILED(rhsKlass);\n@@ -1657,5 +1604,0 @@\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/false, rhsKlass);\n-          } else {\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/true, NULL);\n@@ -2172,2 +2114,0 @@\n-              \/\/ Decrement counter at checkcast.\n-              BI_PROFILE_SUBTYPECHECK_FAILED(objKlass);\n@@ -2179,5 +2119,0 @@\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/false, objKlass);\n-          } else {\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/true, NULL);\n@@ -2190,2 +2125,0 @@\n-            \/\/ Profile instanceof with null_seen and receiver.\n-            BI_PROFILE_UPDATE_INSTANCEOF(\/*null_seen=*\/true, NULL);\n@@ -2210,2 +2143,0 @@\n-              \/\/ Decrement counter at checkcast.\n-              BI_PROFILE_SUBTYPECHECK_FAILED(objKlass);\n@@ -2213,2 +2144,0 @@\n-            \/\/ Profile instanceof with null_seen and receiver.\n-            BI_PROFILE_UPDATE_INSTANCEOF(\/*null_seen=*\/false, objKlass);\n@@ -2269,0 +2198,1 @@\n+          case JVM_CONSTANT_DynamicInError:\n@@ -2310,0 +2240,1 @@\n+          case JVM_CONSTANT_DynamicInError:\n@@ -2389,3 +2320,0 @@\n-        \/\/ Invokedynamic has got a call counter, just like an invokestatic -> increment!\n-        BI_PROFILE_UPDATE_CALL();\n-\n@@ -2420,3 +2348,0 @@\n-        \/\/ Invokehandle has got a call counter, just like a final call -> increment!\n-        BI_PROFILE_UPDATE_FINALCALL();\n-\n@@ -2448,2 +2373,0 @@\n-            \/\/ Profile 'special case of invokeinterface' final call.\n-            BI_PROFILE_UPDATE_FINALCALL();\n@@ -2458,2 +2381,0 @@\n-            \/\/ Profile 'special case of invokeinterface' virtual call.\n-            BI_PROFILE_UPDATE_VIRTUALCALL(rcvrKlass);\n@@ -2546,3 +2467,0 @@\n-        \/\/ Profile virtual call.\n-        BI_PROFILE_UPDATE_VIRTUALCALL(rcvr->klass());\n-\n@@ -2582,2 +2500,0 @@\n-              \/\/ Profile final call.\n-              BI_PROFILE_UPDATE_FINALCALL();\n@@ -2613,2 +2529,0 @@\n-              \/\/ Profile virtual call.\n-              BI_PROFILE_UPDATE_VIRTUALCALL(rcvrKlass);\n@@ -2621,3 +2535,0 @@\n-\n-            \/\/ Profile call.\n-            BI_PROFILE_UPDATE_CALL();\n@@ -2678,2 +2589,0 @@\n-          \/\/ Profile jump.\n-          BI_PROFILE_UPDATE_JUMP();\n@@ -2696,2 +2605,0 @@\n-          \/\/ Profile jump.\n-          BI_PROFILE_UPDATE_JUMP();\n@@ -2707,3 +2614,0 @@\n-          \/\/ Profile ret.\n-          BI_PROFILE_UPDATE_RET(\/*bci=*\/((int)(intptr_t)(LOCALS_ADDR(pc[1]))));\n-          \/\/ Now, update the pc.\n@@ -2792,3 +2696,0 @@\n-\n-      \/\/ Update profiling data.\n-      BI_PROFILE_ALIGN_TO_CURRENT_BCI();\n@@ -2905,1 +2806,3 @@\n-    THREAD->clear_pending_exception();\n+    if (THREAD->has_pending_exception()) {\n+      THREAD->clear_pending_exception();\n+    }\n@@ -3149,138 +3052,0 @@\n-\/\/ Inline static functions for Java Stack and Local manipulation\n-\n-\/\/ The implementations are platform dependent. We have to worry about alignment\n-\/\/ issues on some machines which can change on the same platform depending on\n-\/\/ whether it is an LP64 machine also.\n-address BytecodeInterpreter::stack_slot(intptr_t *tos, int offset) {\n-  return (address) tos[Interpreter::expr_index_at(-offset)];\n-}\n-\n-jint BytecodeInterpreter::stack_int(intptr_t *tos, int offset) {\n-  return *((jint*) &tos[Interpreter::expr_index_at(-offset)]);\n-}\n-\n-jfloat BytecodeInterpreter::stack_float(intptr_t *tos, int offset) {\n-  return *((jfloat *) &tos[Interpreter::expr_index_at(-offset)]);\n-}\n-\n-oop BytecodeInterpreter::stack_object(intptr_t *tos, int offset) {\n-  return cast_to_oop(tos [Interpreter::expr_index_at(-offset)]);\n-}\n-\n-jdouble BytecodeInterpreter::stack_double(intptr_t *tos, int offset) {\n-  return ((VMJavaVal64*) &tos[Interpreter::expr_index_at(-offset)])->d;\n-}\n-\n-jlong BytecodeInterpreter::stack_long(intptr_t *tos, int offset) {\n-  return ((VMJavaVal64 *) &tos[Interpreter::expr_index_at(-offset)])->l;\n-}\n-\n-\/\/ only used for value types\n-void BytecodeInterpreter::set_stack_slot(intptr_t *tos, address value,\n-                                                        int offset) {\n-  *((address *)&tos[Interpreter::expr_index_at(-offset)]) = value;\n-}\n-\n-void BytecodeInterpreter::set_stack_int(intptr_t *tos, int value,\n-                                                       int offset) {\n-  *((jint *)&tos[Interpreter::expr_index_at(-offset)]) = value;\n-}\n-\n-void BytecodeInterpreter::set_stack_float(intptr_t *tos, jfloat value,\n-                                                         int offset) {\n-  *((jfloat *)&tos[Interpreter::expr_index_at(-offset)]) = value;\n-}\n-\n-void BytecodeInterpreter::set_stack_object(intptr_t *tos, oop value,\n-                                                          int offset) {\n-  *((oop *)&tos[Interpreter::expr_index_at(-offset)]) = value;\n-}\n-\n-\/\/ needs to be platform dep for the 32 bit platforms.\n-void BytecodeInterpreter::set_stack_double(intptr_t *tos, jdouble value,\n-                                                          int offset) {\n-  ((VMJavaVal64*)&tos[Interpreter::expr_index_at(-offset)])->d = value;\n-}\n-\n-void BytecodeInterpreter::set_stack_double_from_addr(intptr_t *tos,\n-                                              address addr, int offset) {\n-  (((VMJavaVal64*)&tos[Interpreter::expr_index_at(-offset)])->d =\n-                        ((VMJavaVal64*)addr)->d);\n-}\n-\n-void BytecodeInterpreter::set_stack_long(intptr_t *tos, jlong value,\n-                                                        int offset) {\n-  ((VMJavaVal64*)&tos[Interpreter::expr_index_at(-offset+1)])->l = 0xdeedbeeb;\n-  ((VMJavaVal64*)&tos[Interpreter::expr_index_at(-offset)])->l = value;\n-}\n-\n-void BytecodeInterpreter::set_stack_long_from_addr(intptr_t *tos,\n-                                            address addr, int offset) {\n-  ((VMJavaVal64*)&tos[Interpreter::expr_index_at(-offset+1)])->l = 0xdeedbeeb;\n-  ((VMJavaVal64*)&tos[Interpreter::expr_index_at(-offset)])->l =\n-                        ((VMJavaVal64*)addr)->l;\n-}\n-\n-\/\/ Locals\n-\n-address BytecodeInterpreter::locals_slot(intptr_t* locals, int offset) {\n-  return (address)locals[Interpreter::local_index_at(-offset)];\n-}\n-jint BytecodeInterpreter::locals_int(intptr_t* locals, int offset) {\n-  return (jint)locals[Interpreter::local_index_at(-offset)];\n-}\n-jfloat BytecodeInterpreter::locals_float(intptr_t* locals, int offset) {\n-  return (jfloat)locals[Interpreter::local_index_at(-offset)];\n-}\n-oop BytecodeInterpreter::locals_object(intptr_t* locals, int offset) {\n-  return cast_to_oop(locals[Interpreter::local_index_at(-offset)]);\n-}\n-jdouble BytecodeInterpreter::locals_double(intptr_t* locals, int offset) {\n-  return ((VMJavaVal64*)&locals[Interpreter::local_index_at(-(offset+1))])->d;\n-}\n-jlong BytecodeInterpreter::locals_long(intptr_t* locals, int offset) {\n-  return ((VMJavaVal64*)&locals[Interpreter::local_index_at(-(offset+1))])->l;\n-}\n-\n-\/\/ Returns the address of locals value.\n-address BytecodeInterpreter::locals_long_at(intptr_t* locals, int offset) {\n-  return ((address)&locals[Interpreter::local_index_at(-(offset+1))]);\n-}\n-address BytecodeInterpreter::locals_double_at(intptr_t* locals, int offset) {\n-  return ((address)&locals[Interpreter::local_index_at(-(offset+1))]);\n-}\n-\n-\/\/ Used for local value or returnAddress\n-void BytecodeInterpreter::set_locals_slot(intptr_t *locals,\n-                                   address value, int offset) {\n-  *((address*)&locals[Interpreter::local_index_at(-offset)]) = value;\n-}\n-void BytecodeInterpreter::set_locals_int(intptr_t *locals,\n-                                   jint value, int offset) {\n-  *((jint *)&locals[Interpreter::local_index_at(-offset)]) = value;\n-}\n-void BytecodeInterpreter::set_locals_float(intptr_t *locals,\n-                                   jfloat value, int offset) {\n-  *((jfloat *)&locals[Interpreter::local_index_at(-offset)]) = value;\n-}\n-void BytecodeInterpreter::set_locals_object(intptr_t *locals,\n-                                   oop value, int offset) {\n-  *((oop *)&locals[Interpreter::local_index_at(-offset)]) = value;\n-}\n-void BytecodeInterpreter::set_locals_double(intptr_t *locals,\n-                                   jdouble value, int offset) {\n-  ((VMJavaVal64*)&locals[Interpreter::local_index_at(-(offset+1))])->d = value;\n-}\n-void BytecodeInterpreter::set_locals_long(intptr_t *locals,\n-                                   jlong value, int offset) {\n-  ((VMJavaVal64*)&locals[Interpreter::local_index_at(-(offset+1))])->l = value;\n-}\n-void BytecodeInterpreter::set_locals_double_from_addr(intptr_t *locals,\n-                                   address addr, int offset) {\n-  ((VMJavaVal64*)&locals[Interpreter::local_index_at(-(offset+1))])->d = ((VMJavaVal64*)addr)->d;\n-}\n-void BytecodeInterpreter::set_locals_long_from_addr(intptr_t *locals,\n-                                   address addr, int offset) {\n-  ((VMJavaVal64*)&locals[Interpreter::local_index_at(-(offset+1))])->l = ((VMJavaVal64*)addr)->l;\n-}\n-\n@@ -3293,1 +3058,0 @@\n-\n@@ -3303,0 +3067,1 @@\n+\n@@ -3386,1 +3151,0 @@\n-  tty->print_cr(\"mdx: \" INTPTR_FORMAT, (uintptr_t) this->_mdx);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":30,"deletions":266,"binary":false,"changes":296,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"oops\/methodData.hpp\"\n@@ -113,1 +112,0 @@\n-    DataLayout*           _mdx;           \/\/ compiler profiling data for current bytecode\n@@ -191,2 +189,0 @@\n-inline DataLayout* mdx() { return _mdx; }\n-inline void set_mdx(DataLayout *new_mdx) { _mdx = new_mdx; }\n@@ -516,46 +512,0 @@\n-static void End_Of_Interpreter(void);\n-\n-\/\/ Inline static functions for Java Stack and Local manipulation\n-\n-static address stack_slot(intptr_t *tos, int offset);\n-static jint stack_int(intptr_t *tos, int offset);\n-static jfloat stack_float(intptr_t *tos, int offset);\n-static oop stack_object(intptr_t *tos, int offset);\n-static jdouble stack_double(intptr_t *tos, int offset);\n-static jlong stack_long(intptr_t *tos, int offset);\n-\n-\/\/ only used for value types\n-static void set_stack_slot(intptr_t *tos, address value, int offset);\n-static void set_stack_int(intptr_t *tos, int value, int offset);\n-static void set_stack_float(intptr_t *tos, jfloat value, int offset);\n-static void set_stack_object(intptr_t *tos, oop value, int offset);\n-\n-\/\/ needs to be platform dep for the 32 bit platforms.\n-static void set_stack_double(intptr_t *tos, jdouble value, int offset);\n-static void set_stack_long(intptr_t *tos, jlong value, int offset);\n-\n-static void set_stack_double_from_addr(intptr_t *tos, address addr, int offset);\n-static void set_stack_long_from_addr(intptr_t *tos, address addr, int offset);\n-\n-\/\/ Locals\n-\n-static address locals_slot(intptr_t* locals, int offset);\n-static jint locals_int(intptr_t* locals, int offset);\n-static jfloat locals_float(intptr_t* locals, int offset);\n-static oop locals_object(intptr_t* locals, int offset);\n-static jdouble locals_double(intptr_t* locals, int offset);\n-static jlong locals_long(intptr_t* locals, int offset);\n-\n-static address locals_long_at(intptr_t* locals, int offset);\n-static address locals_double_at(intptr_t* locals, int offset);\n-\n-static void set_locals_slot(intptr_t *locals, address value, int offset);\n-static void set_locals_int(intptr_t *locals, jint value, int offset);\n-static void set_locals_float(intptr_t *locals, jfloat value, int offset);\n-static void set_locals_object(intptr_t *locals, oop value, int offset);\n-static void set_locals_double(intptr_t *locals, jdouble value, int offset);\n-static void set_locals_long(intptr_t *locals, jlong value, int offset);\n-static void set_locals_double_from_addr(intptr_t *locals,\n-                                   address addr, int offset);\n-static void set_locals_long_from_addr(intptr_t *locals,\n-                                   address addr, int offset);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.hpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2014 SAP SE. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ This file defines a set of macros which are used by the c++-interpreter\n-\/\/ for updating a method's methodData object.\n-\n-\n-#ifndef SHARE_INTERPRETER_BYTECODEINTERPRETERPROFILING_HPP\n-#define SHARE_INTERPRETER_BYTECODEINTERPRETERPROFILING_HPP\n-\n-\/\/ Empty dummy implementations if profiling code is switched off. \/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-#define SET_MDX(mdx)\n-\n-#define BI_PROFILE_GET_OR_CREATE_METHOD_DATA(exception_handler)                \\\n-  if (ProfileInterpreter) {                                                    \\\n-    ShouldNotReachHere();                                                      \\\n-  }\n-\n-#define BI_PROFILE_ALIGN_TO_CURRENT_BCI()\n-\n-#define BI_PROFILE_UPDATE_JUMP()\n-#define BI_PROFILE_UPDATE_BRANCH(is_taken)\n-#define BI_PROFILE_UPDATE_RET(bci)\n-#define BI_PROFILE_SUBTYPECHECK_FAILED(receiver)\n-#define BI_PROFILE_UPDATE_CHECKCAST(null_seen, receiver)\n-#define BI_PROFILE_UPDATE_INSTANCEOF(null_seen, receiver)\n-#define BI_PROFILE_UPDATE_CALL()\n-#define BI_PROFILE_UPDATE_FINALCALL()\n-#define BI_PROFILE_UPDATE_VIRTUALCALL(receiver)\n-#define BI_PROFILE_UPDATE_SWITCH(switch_index)\n-\n-#endif \/\/ SHARE_INTERPRETER_BYTECODEINTERPRETERPROFILING_HPP\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreterProfiling.hpp","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1998,0 +1998,8 @@\n+\n+  if (displacement == java_lang_Class::component_mirror_offset() && java_lang_Class::is_instance(obj()) &&\n+      !java_lang_Class::as_Klass(obj())->is_array_klass()) {\n+    \/\/ Class.componentType for non-array classes can transiently contain an int[] that's\n+    \/\/ used for locking so always return null to mimic Class.getComponentType()\n+    return JVMCIENV->get_jobject(JVMCIENV->get_JavaConstant_NULL_POINTER());\n+  }\n+\n@@ -2223,0 +2231,7 @@\n+  if (displacement == java_lang_Class::component_mirror_offset() && java_lang_Class::is_instance(xobj()) &&\n+      !java_lang_Class::as_Klass(xobj())->is_array_klass()) {\n+    \/\/ Class.componentType for non-array classes can transiently contain an int[] that's\n+    \/\/ used for locking so always return null to mimic Class.getComponentType()\n+    return JVMCIENV->get_jobject(JVMCIENV->get_JavaConstant_NULL_POINTER());\n+  }\n+\n@@ -2283,0 +2298,1 @@\n+      guarantee(pure_name != NULL, \"Illegal native method name encountered\");\n@@ -2293,0 +2309,1 @@\n+        guarantee(long_name != NULL, \"Illegal native method name encountered\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -113,3 +113,1 @@\n-  for (size_t i = _n_outputs; i > 0; i--) {\n-    disable_output(i - 1);\n-  }\n+  disable_outputs();\n@@ -275,3 +273,2 @@\n-void LogConfiguration::disable_output(size_t idx) {\n-  assert(idx < _n_outputs, \"invalid index: \" SIZE_FORMAT \" (_n_outputs: \" SIZE_FORMAT \")\", idx, _n_outputs);\n-  LogOutput* out = _outputs[idx];\n+void LogConfiguration::disable_outputs() {\n+  size_t idx = _n_outputs;\n@@ -279,1 +276,1 @@\n-  \/\/ Remove the output from all tagsets.\n+  \/\/ Remove all outputs from all tagsets.\n@@ -281,2 +278,1 @@\n-    ts->set_output_level(out, LogLevel::Off);\n-    ts->update_decorators();\n+    ts->disable_outputs();\n@@ -285,5 +281,8 @@\n-  \/\/ Delete the output unless stdout or stderr (idx 0 or 1)\n-  if (idx > 1) {\n-    delete_output(idx);\n-  } else {\n-    out->set_config_string(\"all=off\");\n+  while (idx > 0) {\n+    LogOutput* out = _outputs[--idx];\n+    \/\/ Delete the output unless stdout or stderr (idx 0 or 1)\n+    if (idx > 1) {\n+      delete_output(idx);\n+    } else {\n+      out->set_config_string(\"all=off\");\n+    }\n@@ -295,2 +294,4 @@\n-  for (size_t i = _n_outputs; i > 0; i--) {\n-    disable_output(i - 1);\n+  disable_outputs();\n+  \/\/ Update the decorators on all tagsets to get rid of unused decorators\n+  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+    ts->update_decorators();\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -72,2 +72,2 @@\n-  \/\/ Disable all logging to the specified output and then delete it (unless it is stdout\/stderr).\n-  static void disable_output(size_t idx);\n+  \/\/ Disable all logging to all outputs. All outputs except stdout\/stderr will be deleted.\n+  static void disable_outputs();\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,3 @@\n-    _tagset->vwrite(_level, fmt, args);\n+    if (is_enabled()) {\n+      _tagset->vwrite(_level, fmt, args);\n+    }\n","filename":"src\/hotspot\/share\/logging\/logHandle.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,0 +71,19 @@\n+void LogOutputList::clear() {\n+\n+  \/\/ Grab the linked list\n+  LogOutputNode* cur = _level_start[LogLevel::Last];\n+\n+  \/\/ Clear _level_start\n+  for (uint level = LogLevel::First; level < LogLevel::Count; level++) {\n+    _level_start[level] = NULL;\n+  }\n+\n+  \/\/ Delete all nodes from the linked list\n+  wait_until_no_readers();\n+  while (cur != NULL) {\n+    LogOutputNode* next = cur->_next;\n+    delete cur;\n+    cur = next;\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/logging\/logOutputList.cpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+  \/\/ Removes all outputs. Equivalent of set_output_level(out, Off)\n+  \/\/ for all outputs.\n+  void clear();\n+\n","filename":"src\/hotspot\/share\/logging\/logOutputList.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+  NOT_PRODUCT(LOG_TAG(generate)) \\\n@@ -83,0 +84,1 @@\n+  NOT_PRODUCT(LOG_TAG(heapsampling)) \\\n@@ -96,0 +98,1 @@\n+  LOG_TAG(lambda) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -101,0 +101,4 @@\n+  void disable_outputs() {\n+    _output_list.clear();\n+  }\n+\n","filename":"src\/hotspot\/share\/logging\/logTagSet.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -322,0 +322,9 @@\n+\n+void ArchiveUtils::check_for_oom(oop exception) {\n+  assert(exception != nullptr, \"Sanity check\");\n+  if (exception->is_a(SystemDictionary::OutOfMemoryError_klass())) {\n+    vm_direct_exit(-1,\n+      err_msg(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+              SIZE_FORMAT \"M\", MaxHeapSize\/M));\n+  }\n+}\n","filename":"src\/hotspot\/share\/memory\/archiveUtils.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -246,0 +246,1 @@\n+  static void check_for_oom(oop exception) NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/memory\/archiveUtils.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -773,1 +773,2 @@\n-    int hops_expected = (int)(((end-beg-1)+(free_sentinel-2))\/(free_sentinel-1));\n+    int hops_expected\n+      = checked_cast<int>(((end-beg-1)+(free_sentinel-2))\/(free_sentinel-1));\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -209,1 +209,3 @@\n-    vm_exit(1);\n+    vm_direct_exit(-1,\n+      err_msg(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+              SIZE_FORMAT \"M\", MaxHeapSize\/M));\n@@ -262,9 +264,0 @@\n-  if (!is_heap_object_archiving_allowed()) {\n-    log_info(cds)(\n-      \"Archived java heap is not supported as UseG1GC, \"\n-      \"UseCompressedOops and UseCompressedClassPointers are required.\"\n-      \"Current settings: UseG1GC=%s, UseCompressedOops=%s, UseCompressedClassPointers=%s.\",\n-      BOOL_TO_STR(UseG1GC), BOOL_TO_STR(UseCompressedOops),\n-      BOOL_TO_STR(UseCompressedClassPointers));\n-    return;\n-  }\n@@ -737,1 +730,1 @@\n-    vm_exit(1);\n+    vm_direct_exit(1);\n@@ -747,1 +740,1 @@\n-    vm_exit(1);\n+    vm_direct_exit(1);\n@@ -783,1 +776,1 @@\n-        vm_exit(1);\n+        vm_direct_exit(1);\n@@ -1038,1 +1031,7 @@\n-    assert(k != NULL && !HAS_PENDING_EXCEPTION, \"class must exist\");\n+    if (HAS_PENDING_EXCEPTION) {\n+      ResourceMark rm(THREAD);\n+      ArchiveUtils::check_for_oom(PENDING_EXCEPTION); \/\/ exit on OOM\n+      log_info(cds)(\"%s: %s\", PENDING_EXCEPTION->klass()->external_name(),\n+                    java_lang_String::as_utf8_string(java_lang_Throwable::message(PENDING_EXCEPTION)));\n+      vm_direct_exit(-1, \"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n+    }\n@@ -1055,0 +1054,1 @@\n+  assert(is_heap_object_archiving_allowed(), \"Sanity check\");\n@@ -1056,1 +1056,0 @@\n-\n@@ -1071,2 +1070,4 @@\n-  _dumped_interned_strings = new (ResourceObj::C_HEAP, mtClass)DumpedInternedStrings();\n-  init_subgraph_entry_fields(THREAD);\n+  if (is_heap_object_archiving_allowed()) {\n+    _dumped_interned_strings = new (ResourceObj::C_HEAP, mtClass)DumpedInternedStrings();\n+    init_subgraph_entry_fields(THREAD);\n+  }\n","filename":"src\/hotspot\/share\/memory\/heapShared.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"classfile\/classLoaderDataGraph.hpp\"\n@@ -66,0 +67,7 @@\n+\n+void CodeBlobToNMethodClosure::do_code_blob(CodeBlob* cb) {\n+  nmethod* nm = cb->as_nmethod_or_null();\n+  if (nm != NULL) {\n+    _nm_cl->do_nmethod(nm);\n+  }\n+}\n","filename":"src\/hotspot\/share\/memory\/iterator.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -146,0 +146,6 @@\n+template <int claim>\n+class ClaimingCLDToOopClosure : public CLDToOopClosure {\n+public:\n+  ClaimingCLDToOopClosure(OopClosure* cl) : CLDToOopClosure(cl, claim) {}\n+};\n+\n@@ -258,0 +264,9 @@\n+class CodeBlobToNMethodClosure : public CodeBlobClosure {\n+  NMethodClosure* const _nm_cl;\n+\n+ public:\n+  CodeBlobToNMethodClosure(NMethodClosure* nm_cl) : _nm_cl(nm_cl) {}\n+\n+  virtual void do_code_blob(CodeBlob* cb);\n+};\n+\n","filename":"src\/hotspot\/share\/memory\/iterator.hpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1099,0 +1099,3 @@\n+    if (parser.lambda_form_line()) {\n+      continue;\n+    }\n@@ -1166,0 +1169,9 @@\n+  if(!HeapShared::is_heap_object_archiving_allowed()) {\n+    log_info(cds)(\n+      \"Archived java heap is not supported as UseG1GC, \"\n+      \"UseCompressedOops and UseCompressedClassPointers are required.\"\n+      \"Current settings: UseG1GC=%s, UseCompressedOops=%s, UseCompressedClassPointers=%s.\",\n+      BOOL_TO_STR(UseG1GC), BOOL_TO_STR(UseCompressedOops),\n+      BOOL_TO_STR(UseCompressedClassPointers));\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-  oop referent = java_lang_ref_Reference::referent(obj);\n+  oop referent = java_lang_ref_Reference::unknown_referent_no_keepalive(obj);\n","filename":"src\/hotspot\/share\/oops\/instanceRefKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1102,0 +1102,34 @@\n+int DataLayout::cell_count() {\n+  switch (tag()) {\n+  case DataLayout::no_tag:\n+  default:\n+    ShouldNotReachHere();\n+    return 0;\n+  case DataLayout::bit_data_tag:\n+    return BitData::static_cell_count();\n+  case DataLayout::counter_data_tag:\n+    return CounterData::static_cell_count();\n+  case DataLayout::jump_data_tag:\n+    return JumpData::static_cell_count();\n+  case DataLayout::receiver_type_data_tag:\n+    return ReceiverTypeData::static_cell_count();\n+  case DataLayout::virtual_call_data_tag:\n+    return VirtualCallData::static_cell_count();\n+  case DataLayout::ret_data_tag:\n+    return RetData::static_cell_count();\n+  case DataLayout::branch_data_tag:\n+    return BranchData::static_cell_count();\n+  case DataLayout::multi_branch_data_tag:\n+    return ((new MultiBranchData(this))->cell_count());\n+  case DataLayout::arg_info_data_tag:\n+    return ((new ArgInfoData(this))->cell_count());\n+  case DataLayout::call_type_data_tag:\n+    return ((new CallTypeData(this))->cell_count());\n+  case DataLayout::virtual_call_type_data_tag:\n+    return ((new VirtualCallTypeData(this))->cell_count());\n+  case DataLayout::parameters_type_data_tag:\n+    return ((new ParametersTypeData(this))->cell_count());\n+  case DataLayout::speculative_trap_data_tag:\n+    return SpeculativeTrapData::static_cell_count();\n+  }\n+}\n@@ -1145,0 +1179,10 @@\n+DataLayout* MethodData::next_data_layout(DataLayout* current) const {\n+  int current_index = dp_to_di((address)current);\n+  int next_index = current_index + current->size_in_bytes();\n+  if (out_of_bounds(next_index)) {\n+    return NULL;\n+  }\n+  DataLayout* next = data_layout_at(next_index);\n+  return next;\n+}\n+\n@@ -1317,3 +1361,3 @@\n-  ProfileData* data = data_before(bci);\n-  ProfileData* prev = NULL;\n-  for ( ; is_valid(data); data = next_data(data)) {\n+  DataLayout* data = data_layout_before(bci);\n+  DataLayout* prev = NULL;\n+  for ( ; is_valid(data); data = next_data_layout(data)) {\n@@ -1321,3 +1365,3 @@\n-      if (data->bci() == bci)  set_hint_di(dp_to_di(data->dp()));\n-      else if (prev != NULL)   set_hint_di(dp_to_di(prev->dp()));\n-      return data->dp();\n+      if (data->bci() == bci)  set_hint_di(dp_to_di((address)data));\n+      else if (prev != NULL)   set_hint_di(dp_to_di((address)prev));\n+      return (address)data;\n@@ -1332,2 +1376,2 @@\n-  ProfileData* data = data_before(bci);\n-  for ( ; is_valid(data); data = next_data(data)) {\n+  DataLayout* data = data_layout_before(bci);\n+  for ( ; is_valid(data); data = next_data_layout(data)) {\n@@ -1335,2 +1379,2 @@\n-      set_hint_di(dp_to_di(data->dp()));\n-      return data;\n+      set_hint_di(dp_to_di((address)data));\n+      return data->data_in();\n@@ -1789,6 +1833,0 @@\n-  for (ProfileData* data = first_data();\n-       is_valid(data);\n-       data = next_data(data)) {\n-    data->clean_weak_method_links();\n-  }\n-\n@@ -1799,14 +1837,0 @@\n-\n-#ifdef ASSERT\n-void MethodData::verify_clean_weak_method_links() {\n-  ResourceMark rm;\n-  for (ProfileData* data = first_data();\n-       is_valid(data);\n-       data = next_data(data)) {\n-    data->verify_clean_weak_method_links();\n-  }\n-\n-  CleanExtraDataMethodClosure cl;\n-  verify_extra_data_clean(&cl);\n-}\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":54,"deletions":30,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -239,0 +239,7 @@\n+  int size_in_bytes() {\n+    int cells = cell_count();\n+    assert(cells >= 0, \"invalid number of cells\");\n+    return DataLayout::compute_size_in_bytes(cells);\n+  }\n+  int cell_count();\n+\n@@ -241,4 +248,0 @@\n-\n-  \/\/ Redefinition support\n-  void clean_weak_method_links();\n-  DEBUG_ONLY(void verify_clean_weak_method_links();)\n@@ -458,4 +461,0 @@\n-  \/\/ Redefinition support\n-  virtual void clean_weak_method_links() {}\n-  DEBUG_ONLY(virtual void verify_clean_weak_method_links() {})\n-\n@@ -2064,1 +2063,2 @@\n-  ProfileData* data_before(int bci) {\n+\n+  DataLayout* data_layout_before(int bci) {\n@@ -2068,4 +2068,4 @@\n-    int hint = hint_di();\n-    if (data_layout_at(hint)->bci() <= bci)\n-      return data_at(hint);\n-    return first_data();\n+    DataLayout* layout = data_layout_at(hint_di());\n+    if (layout->bci() <= bci)\n+      return layout;\n+    return data_layout_at(first_di());\n@@ -2254,0 +2254,1 @@\n+  DataLayout*  next_data_layout(DataLayout* current) const;\n@@ -2255,0 +2256,1 @@\n+  bool is_valid(DataLayout*  current) const { return current != NULL; }\n@@ -2418,1 +2420,0 @@\n-  DEBUG_ONLY(void verify_clean_weak_method_links();)\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-  if( in(1)->Opcode() == Op_SubI && phase->eqv(in(1)->in(2),in(2)) ) {\n+  if (in(1)->Opcode() == Op_SubI && in(1)->in(2) == in(2)) {\n@@ -333,2 +333,1 @@\n-  }\n-  else if( in(2)->Opcode() == Op_SubI && phase->eqv(in(2)->in(2),in(1)) ) {\n+  } else if (in(2)->Opcode() == Op_SubI && in(2)->in(2) == in(1)) {\n@@ -448,1 +447,1 @@\n-  if( in(1)->Opcode() == Op_SubL && phase->eqv(in(1)->in(2),in(2)) ) {\n+  if (in(1)->Opcode() == Op_SubL && in(1)->in(2) == in(2)) {\n@@ -450,2 +449,1 @@\n-  }\n-  else if( in(2)->Opcode() == Op_SubL && phase->eqv(in(2)->in(2),in(1)) ) {\n+  } else if (in(2)->Opcode() == Op_SubL && in(2)->in(2) == in(1)) {\n@@ -739,1 +737,1 @@\n-  if (phase->eqv(in(1), in(2))) {\n+  if (in(1) == in(2)) {\n@@ -826,1 +824,1 @@\n-  if (phase->eqv(in(1), in(2))) {\n+  if (in(1) == in(2)) {\n@@ -1081,1 +1079,1 @@\n-    if (phase->eqv(x,y) && tx != NULL &&\n+    if (x == y && tx != NULL &&\n@@ -1089,1 +1087,1 @@\n-    if (phase->eqv(x,y) && tx != NULL &&\n+    if (x == y && tx != NULL &&\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-  MergeMemNode* mem = MergeMemNode::make(in_mem);\n+  MergeMemNode* mem = phase->transform(MergeMemNode::make(in_mem))->as_MergeMem();\n@@ -370,1 +370,1 @@\n-                                        MergeMemNode* mm,\n+                                        Node* mem,\n@@ -382,1 +382,1 @@\n-    mm = mm->clone()->as_MergeMem();\n+    MergeMemNode* mm = MergeMemNode::make(mem);\n@@ -395,1 +395,1 @@\n-    } else if(can_reshape) {\n+    } else if (can_reshape) {\n@@ -408,1 +408,1 @@\n-                                         MergeMemNode* mm,\n+                                         Node* mem,\n@@ -420,1 +420,1 @@\n-    mm = mm->clone()->as_MergeMem();\n+    MergeMemNode* mm = MergeMemNode::make(mem);\n@@ -435,1 +435,1 @@\n-    } else if(can_reshape) {\n+    } else if (can_reshape) {\n@@ -567,5 +567,1 @@\n-\n-  Node *in_mem = in(TypeFunc::Memory);\n-  if (!in_mem->is_MergeMem()) {\n-    in_mem = MergeMemNode::make(in_mem);\n-  }\n+  Node* in_mem = in(TypeFunc::Memory);\n@@ -583,1 +579,1 @@\n-                                         in_mem->as_MergeMem(),\n+                                         in_mem,\n@@ -589,1 +585,1 @@\n-                                           in_mem->as_MergeMem(),\n+                                           in_mem,\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-                           MergeMemNode* mm,\n+                           Node* mem,\n@@ -108,1 +108,1 @@\n-                            MergeMemNode* mm,\n+                            Node* mem,\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1314,2 +1314,6 @@\n-  if( phase->type(in(0)) == Type::TOP ) return Type::TOP;\n-  if( phase->eqv( in(0), this ) ) return Type::TOP; \/\/ Dead infinite loop\n+  if (phase->type(in(0)) == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  if (in(0) == this) {\n+    return Type::TOP; \/\/ Dead infinite loop\n+  }\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -347,1 +347,1 @@\n-      assert(phase->eqv(phi->in(0), this), \"sanity check phi\");\n+      assert(phi->in(0) == this, \"sanity check phi\");\n@@ -386,1 +386,1 @@\n-        if (phase->eqv(m, this)) {\n+        if (m == this) {\n@@ -571,1 +571,1 @@\n-            assert( igvn->eqv(n->in(0), this), \"\" );\n+            assert(n->in(0) == this, \"\");\n@@ -622,1 +622,1 @@\n-        assert(!igvn->eqv(parent_ctrl, this), \"Close dead loop\");\n+        assert(parent_ctrl != this, \"Close dead loop\");\n@@ -644,1 +644,1 @@\n-          assert( !igvn->eqv(n, this), \"Must be removed from DefUse edges\");\n+          assert(n != this, \"Must be removed from DefUse edges\");\n@@ -657,1 +657,1 @@\n-          assert( igvn->eqv(n->in(0), this), \"Expect RegionNode to be control parent\");\n+          assert(n->in(0) == this, \"Expect RegionNode to be control parent\");\n@@ -662,1 +662,1 @@\n-          assert( !igvn->eqv(n->in(k), this), \"All uses of RegionNode should be gone\");\n+          assert(n->in(k) != this, \"All uses of RegionNode should be gone\");\n@@ -2081,1 +2081,1 @@\n-    assert(opt == NULL || phase->eqv(opt, this), \"do not elide phi\");\n+    assert(opt == NULL || opt == this, \"do not elide phi\");\n@@ -2197,1 +2197,1 @@\n-        saw_self = saw_self || phase->eqv(n->base_memory(), this);\n+        saw_self = saw_self || (n->base_memory() == this);\n@@ -2305,6 +2305,1 @@\n-        if (igvn) { \/\/ Unhook.\n-          igvn->hash_delete(hook);\n-          for (uint i = 1; i < hook->req(); i++) {\n-            hook->set_req(i, NULL);\n-          }\n-        }\n+        hook->destruct(igvn);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -1133,2 +1133,1 @@\n-  if (_modified_nodes != NULL && !_inlining_incrementally &&\n-      n->outcnt() != 0 && !n->is_Con()) {\n+  if (_modified_nodes != NULL && !_inlining_incrementally && !n->is_Con()) {\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -406,2 +406,1 @@\n-    hook->del_req(0);  \/\/ Just yank bogus edge\n-    hook->destruct();\n+    hook->destruct(phase);\n","filename":"src\/hotspot\/share\/opto\/convertnode.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -329,8 +329,1 @@\n-  PhaseIterGVN* igvn = phase->is_IterGVN();\n-  if (igvn != NULL) {\n-    igvn->remove_dead_node(hook);\n-  } else {\n-    for (int i = 0; i < 4; i++) {\n-      hook->set_req(i, NULL);\n-    }\n-  }\n+  hook->destruct(phase);\n@@ -508,1 +501,1 @@\n-  if( phase->eqv( in(1), in(2) ) )\n+  if (in(1) == in(2)) {\n@@ -510,0 +503,1 @@\n+  }\n@@ -613,1 +607,1 @@\n-  if( phase->eqv( in(1), in(2) ) )\n+  if (in(1) == in(2)) {\n@@ -615,0 +609,1 @@\n+  }\n@@ -688,3 +683,4 @@\n-  if( phase->eqv( in(1), in(2) ) && t1->base() == Type::FloatCon)\n-    if (!g_isnan(t1->getf()) && g_isfinite(t1->getf()) && t1->getf() != 0.0) \/\/ could be negative ZERO or NaN\n-      return TypeF::ONE;\n+  if (in(1) == in(2) && t1->base() == Type::FloatCon &&\n+      !g_isnan(t1->getf()) && g_isfinite(t1->getf()) && t1->getf() != 0.0) { \/\/ could be negative ZERO or NaN\n+    return TypeF::ONE;\n+  }\n@@ -776,3 +772,4 @@\n-  if( phase->eqv( in(1), in(2) ) && t1->base() == Type::DoubleCon)\n-    if (!g_isnan(t1->getd()) && g_isfinite(t1->getd()) && t1->getd() != 0.0) \/\/ could be negative ZERO or NaN\n-      return TypeD::ONE;\n+  if (in(1) == in(2) && t1->base() == Type::DoubleCon &&\n+      !g_isnan(t1->getd()) && g_isfinite(t1->getd()) && t1->getd() != 0.0) { \/\/ could be negative ZERO or NaN\n+    return TypeD::ONE;\n+  }\n@@ -915,5 +912,1 @@\n-      if (can_reshape) {\n-        phase->is_IterGVN()->remove_dead_node(hook);\n-      } else {\n-        hook->set_req(0, NULL);   \/\/ Just yank bogus edge during Parse phase\n-      }\n+      hook->destruct(phase);\n@@ -971,5 +964,1 @@\n-  if (can_reshape) {\n-    phase->is_IterGVN()->remove_dead_node(hook);\n-  } else {\n-    hook->set_req(0, NULL);       \/\/ Just yank bogus edge during Parse phase\n-  }\n+  hook->destruct(phase);\n@@ -993,1 +982,3 @@\n-  if( phase->eqv( in(1), in(2) ) ) return TypeInt::ZERO;\n+  if (in(1) == in(2)) {\n+    return TypeInt::ZERO;\n+  }\n@@ -1088,5 +1079,1 @@\n-      if (can_reshape) {\n-        phase->is_IterGVN()->remove_dead_node(hook);\n-      } else {\n-        hook->set_req(0, NULL);   \/\/ Just yank bogus edge during Parse phase\n-      }\n+      hook->destruct(phase);\n@@ -1144,5 +1131,1 @@\n-  if (can_reshape) {\n-    phase->is_IterGVN()->remove_dead_node(hook);\n-  } else {\n-    hook->set_req(0, NULL);       \/\/ Just yank bogus edge during Parse phase\n-  }\n+  hook->destruct(phase);\n@@ -1166,1 +1149,3 @@\n-  if( phase->eqv( in(1), in(2) ) ) return TypeLong::ZERO;\n+  if (in(1) == in(2)) {\n+    return TypeLong::ZERO;\n+  }\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":23,"deletions":38,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -1002,2 +1002,1 @@\n-    hook->del_req(0); \/\/ Just yank bogus edge\n-    hook->destruct();\n+    hook->destruct(igvn);\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -433,1 +433,1 @@\n-    tmp->destruct();\n+    tmp->destruct(NULL);\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -730,1 +730,1 @@\n-      mul->destruct();\n+      mul->destruct(&_igvn);\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1403,2 +1403,0 @@\n-  Node *hook = new Node(6);\n-\n@@ -1694,3 +1692,0 @@\n-  \/\/ Free up intermediate goo\n-  _igvn.remove_dead_node(hook);\n-\n@@ -2659,1 +2654,1 @@\n-        p->destruct();          \/\/ Recover useless new node\n+        p->destruct(&igvn);     \/\/ Recover useless new node\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-    MergeMemNode* mergemen = MergeMemNode::make(mem);\n+    MergeMemNode* mergemen = _igvn.transform(MergeMemNode::make(mem))->as_MergeMem();\n@@ -372,1 +372,1 @@\n-      MergeMemNode* mergemen = MergeMemNode::make(mem);\n+      MergeMemNode* mergemen = _igvn.transform(MergeMemNode::make(mem))->as_MergeMem();\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1077,1 +1077,1 @@\n-      if (!phase->eqv(st_adr, ld_adr)) {\n+      if (st_adr != ld_adr) {\n@@ -1526,1 +1526,1 @@\n-  if (!phase->eqv(this, this->Identity(phase))) {\n+  if (this != Identity(phase)) {\n@@ -2740,1 +2740,1 @@\n-        if (prev_val != NULL && phase->eqv(prev_val, val)) {\n+        if (prev_val != NULL && prev_val == val) {\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,3 +81,3 @@\n-  assert( !phase->eqv(in(Condition), this) &&\n-         !phase->eqv(in(IfFalse), this) &&\n-         !phase->eqv(in(IfTrue), this), \"dead loop in CMoveNode::Ideal\" );\n+  assert(in(Condition) != this &&\n+         in(IfFalse) != this &&\n+         in(IfTrue) != this, \"dead loop in CMoveNode::Ideal\" );\n@@ -101,5 +101,3 @@\n-  if( (phase->eqv(cmp->in(1),f) &&\n-       phase->eqv(cmp->in(2),t)) ||\n-     \/\/ Swapped Cmp is OK\n-     (phase->eqv(cmp->in(2),f) &&\n-      phase->eqv(cmp->in(1),t)) ) {\n+  if ((cmp->in(1) == f && cmp->in(2) == t) ||\n+      \/\/ Swapped Cmp is OK\n+      (cmp->in(2) == f && cmp->in(1) == t)) {\n@@ -125,6 +123,10 @@\n-  if( phase->eqv(in(IfFalse),in(IfTrue)) ) \/\/ C-moving identical inputs?\n-  return in(IfFalse);         \/\/ Then it doesn't matter\n-  if( phase->type(in(Condition)) == TypeInt::ZERO )\n-  return in(IfFalse);         \/\/ Always pick left(false) input\n-  if( phase->type(in(Condition)) == TypeInt::ONE )\n-  return in(IfTrue);          \/\/ Always pick right(true) input\n+  \/\/ C-moving identical inputs?\n+  if (in(IfFalse) == in(IfTrue)) {\n+    return in(IfFalse); \/\/ Then it doesn't matter\n+  }\n+  if (phase->type(in(Condition)) == TypeInt::ZERO) {\n+    return in(IfFalse); \/\/ Always pick left(false) input\n+  }\n+  if (phase->type(in(Condition)) == TypeInt::ONE) {\n+    return in(IfTrue);  \/\/ Always pick right(true) input\n+  }\n","filename":"src\/hotspot\/share\/opto\/movenode.cpp","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -90,5 +90,5 @@\n-    int   op1 = mul1->Opcode();\n-    if( phase->eqv( mul1, this ) || phase->eqv( in(2), this ) ||\n-        ( ( op1 == mul_opcode() || op1 == add_opcode() ) &&\n-          ( phase->eqv( mul1->in(1), this ) || phase->eqv( mul1->in(2), this ) ||\n-            phase->eqv( mul1->in(1), mul1 ) || phase->eqv( mul1->in(2), mul1 ) ) ) )\n+    int op1 = mul1->Opcode();\n+    if ((mul1 == this) || (in(2) == this) ||\n+        ((op1 == mul_opcode() || op1 == add_opcode()) &&\n+         ((mul1->in(1) == this) || (mul1->in(2) == this) ||\n+          (mul1->in(1) == mul1) || (mul1->in(2) == mul1)))) {\n@@ -96,0 +96,1 @@\n+    }\n@@ -439,1 +440,3 @@\n-  if (phase->eqv(in(1), in(2))) return in(1);\n+  if (in(1) == in(2)) {\n+    return in(1);\n+  }\n@@ -561,1 +564,3 @@\n-  if (phase->eqv(in(1), in(2))) return in(1);\n+  if (in(1) == in(2)) {\n+    return in(1);\n+  }\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -584,2 +584,5 @@\n-void Node::destruct() {\n-  Compile* compile = Compile::current();\n+void Node::destruct(PhaseValues* phase) {\n+  Compile* compile = (phase != NULL) ? phase->C : Compile::current();\n+  if (phase != NULL && phase->is_IterGVN()) {\n+    phase->is_IterGVN()->_worklist.remove(this);\n+  }\n@@ -1402,1 +1405,0 @@\n-      igvn->C->remove_modified_node(dead);\n@@ -1438,0 +1440,1 @@\n+      igvn->C->remove_modified_node(dead);\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-  void destruct();\n+  void destruct(PhaseValues* phase);\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -752,1 +752,1 @@\n-    x->destruct();              \/\/ Hit, destroy duplicate constant\n+    x->destruct(this);          \/\/ Hit, destroy duplicate constant\n@@ -1072,1 +1072,1 @@\n-    if (n->outcnt() != 0 && !n->is_Con() && !_worklist.member(n)) {\n+    if (!n->is_Con() && !_worklist.member(n)) {\n@@ -1074,1 +1074,1 @@\n-      assert(false, \"modified node is not on IGVN._worklist\");\n+      fatal(\"modified node is not on IGVN._worklist\");\n@@ -1086,1 +1086,1 @@\n-    if (n->outcnt() != 0 && !n->is_Con()) { \/\/ skip dead and Con nodes\n+    if (!n->is_Con()) { \/\/ skip Con nodes\n@@ -1088,1 +1088,1 @@\n-      assert(false, \"modified node was not processed by IGVN.transform_old()\");\n+      fatal(\"modified node was not processed by IGVN.transform_old()\");\n@@ -1475,2 +1475,1 @@\n-  _worklist.remove(temp);   \/\/ this can be necessary\n-  temp->destruct();         \/\/ reuse the _idx of this little guy\n+  temp->destruct(this);     \/\/ reuse the _idx of this little guy\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -285,5 +285,0 @@\n-  \/\/ Return whether two Nodes are equivalent.\n-  \/\/ Must not be recursive, since the recursive version is built from this.\n-  \/\/ For pessimistic optimizations this is simply pointer equivalence.\n-  bool eqv(const Node* n1, const Node* n2) const { return n1 == n2; }\n-\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-        phi_post->destruct();\n+        phi_post->destruct(&_igvn);\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,2 +64,2 @@\n-  if( in(1)->Opcode() == Op_AddI ) {\n-    if( phase->eqv(in(1)->in(2),in(2)) )\n+  if (in(1)->Opcode() == Op_AddI) {\n+    if (in(1)->in(2) == in(2)) {\n@@ -67,1 +67,2 @@\n-    if (phase->eqv(in(1)->in(1),in(2)))\n+    }\n+    if (in(1)->in(1) == in(2)) {\n@@ -69,0 +70,1 @@\n+    }\n@@ -75,2 +77,1 @@\n-    if( in(1)->in(2)->Opcode() == Op_Opaque2 &&\n-        phase->eqv(in(1)->in(2)->in(1),in(2)) )\n+    if (in(1)->in(2)->Opcode() == Op_Opaque2 && in(1)->in(2)->in(1) == in(2)) {\n@@ -78,0 +79,1 @@\n+    }\n@@ -157,4 +159,4 @@\n-  if( phase->eqv( in1, this ) || phase->eqv( in2, this ) ||\n-      ( ( op1 == Op_AddI || op1 == Op_SubI ) &&\n-        ( phase->eqv( in1->in(1), this ) || phase->eqv( in1->in(2), this ) ||\n-          phase->eqv( in1->in(1), in1  ) || phase->eqv( in1->in(2), in1 ) ) ) )\n+  if ((in1 == this) || (in2 == this) ||\n+      ((op1 == Op_AddI || op1 == Op_SubI) &&\n+       ((in1->in(1) == this) || (in1->in(2) == this) ||\n+        (in1->in(1) == in1)  || (in1->in(2) == in1)))) {\n@@ -162,0 +164,1 @@\n+  }\n@@ -203,3 +206,3 @@\n-  if( ( op2 == Op_AddI || op2 == Op_SubI ) &&\n-      ( phase->eqv( in2->in(1), this ) || phase->eqv( in2->in(2), this ) ||\n-        phase->eqv( in2->in(1), in2  ) || phase->eqv( in2->in(2), in2  ) ) )\n+  if ((op2 == Op_AddI || op2 == Op_SubI) &&\n+      ((in2->in(1) == this) || (in2->in(2) == this) ||\n+       (in2->in(1) == in2)  || (in2->in(2) == in2))) {\n@@ -207,0 +210,1 @@\n+  }\n@@ -210,3 +214,3 @@\n-  if( op2 == Op_AddI &&\n-      phase->eqv( in1, in2->in(1) ) )\n-    return new SubINode( phase->intcon(0),in2->in(2));\n+  if (op2 == Op_AddI && in1 == in2->in(1)) {\n+    return new SubINode(phase->intcon(0), in2->in(2));\n+  }\n@@ -214,3 +218,3 @@\n-  if( op1 == Op_SubI &&\n-      phase->eqv( in1->in(1), in2 ) )\n-    return new SubINode( phase->intcon(0),in1->in(2));\n+  if (op1 == Op_SubI && in1->in(1) == in2) {\n+    return new SubINode(phase->intcon(0), in1->in(2));\n+  }\n@@ -218,3 +222,3 @@\n-  if( op2 == Op_AddI &&\n-      phase->eqv( in1, in2->in(2) ) )\n-    return new SubINode( phase->intcon(0),in2->in(1));\n+  if (op2 == Op_AddI && in1 == in2->in(2)) {\n+    return new SubINode(phase->intcon(0), in2->in(1));\n+  }\n@@ -299,4 +303,4 @@\n-  if( phase->eqv( in1, this ) || phase->eqv( in2, this ) ||\n-      ( ( op1 == Op_AddL || op1 == Op_SubL ) &&\n-        ( phase->eqv( in1->in(1), this ) || phase->eqv( in1->in(2), this ) ||\n-          phase->eqv( in1->in(1), in1  ) || phase->eqv( in1->in(2), in1  ) ) ) )\n+  if ((in1 == this) || (in2 == this) ||\n+      ((op1 == Op_AddL || op1 == Op_SubL) &&\n+       ((in1->in(1) == this) || (in1->in(2) == this) ||\n+        (in1->in(1) == in1)  || (in1->in(2) == in1)))) {\n@@ -304,0 +308,1 @@\n+  }\n@@ -343,3 +348,3 @@\n-  if( ( op2 == Op_AddL || op2 == Op_SubL ) &&\n-      ( phase->eqv( in2->in(1), this ) || phase->eqv( in2->in(2), this ) ||\n-        phase->eqv( in2->in(1), in2  ) || phase->eqv( in2->in(2), in2  ) ) )\n+  if ((op2 == Op_AddL || op2 == Op_SubL) &&\n+      ((in2->in(1) == this) || (in2->in(2) == this) ||\n+       (in2->in(1) == in2)  || (in2->in(2) == in2))) {\n@@ -347,0 +352,1 @@\n+  }\n@@ -350,3 +356,3 @@\n-  if( op2 == Op_AddL &&\n-      phase->eqv( in1, in2->in(1) ) )\n-    return new SubLNode( phase->makecon(TypeLong::ZERO), in2->in(2));\n+  if (op2 == Op_AddL && in1 == in2->in(1)) {\n+    return new SubLNode(phase->makecon(TypeLong::ZERO), in2->in(2));\n+  }\n@@ -354,3 +360,3 @@\n-  if( op2 == Op_AddL &&\n-      phase->eqv( in1, in2->in(2) ) )\n-    return new SubLNode( phase->makecon(TypeLong::ZERO),in2->in(1));\n+  if (op2 == Op_AddL && in1 == in2->in(2)) {\n+    return new SubLNode(phase->makecon(TypeLong::ZERO), in2->in(1));\n+  }\n@@ -424,2 +430,2 @@\n-  if( (t1->is_finite() && t2->is_finite()) ) {\n-    if( phase->eqv(in1, in2) ) return add_id();\n+  if (t1->is_finite() && t2->is_finite() && in1 == in2) {\n+    return add_id();\n@@ -448,1 +454,2 @@\n-  if( IdealizedNumerics && !phase->C->method()->is_strict() ) {\n+  if (IdealizedNumerics && !phase->C->method()->is_strict() &&\n+      in(2)->is_Add() && in(1) == in(2)->in(1)) {\n@@ -450,3 +457,1 @@\n-    if( in(2)->is_Add() &&\n-        phase->eqv(in(1),in(2)->in(1) ) )\n-      return new SubFNode( phase->makecon(TypeF::ZERO),in(2)->in(2));\n+    return new SubFNode(phase->makecon(TypeF::ZERO), in(2)->in(2));\n@@ -491,1 +496,2 @@\n-  if( IdealizedNumerics && !phase->C->method()->is_strict() ) {\n+  if (IdealizedNumerics && !phase->C->method()->is_strict() &&\n+      in(2)->is_Add() && in(1) == in(2)->in(1)) {\n@@ -493,3 +499,1 @@\n-    if( in(2)->is_Add() &&\n-        phase->eqv(in(1),in(2)->in(1) ) )\n-      return new SubDNode( phase->makecon(TypeD::ZERO),in(2)->in(2));\n+    return new SubDNode(phase->makecon(TypeD::ZERO), in(2)->in(2));\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":48,"deletions":44,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/classListParser.hpp\"\n@@ -35,1 +36,0 @@\n-#include \"classfile\/lambdaFormInvokers.hpp\"\n@@ -3442,0 +3442,18 @@\n+JVM_ENTRY(jboolean, JVM_ReferenceRefersTo(JNIEnv* env, jobject ref, jobject o))\n+  JVMWrapper(\"JVM_ReferenceRefersTo\");\n+  oop ref_oop = JNIHandles::resolve_non_null(ref);\n+  oop referent = java_lang_ref_Reference::weak_referent_no_keepalive(ref_oop);\n+  return referent == JNIHandles::resolve(o);\n+JVM_END\n+\n+\n+\/\/ java.lang.ref.PhantomReference \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n+\n+JVM_ENTRY(jboolean, JVM_PhantomReferenceRefersTo(JNIEnv* env, jobject ref, jobject o))\n+  JVMWrapper(\"JVM_PhantomReferenceRefersTo\");\n+  oop ref_oop = JNIHandles::resolve_non_null(ref);\n+  oop referent = java_lang_ref_Reference::phantom_referent_no_keepalive(ref_oop);\n+  return referent == JNIHandles::resolve(o);\n+JVM_END\n+\n@@ -3886,1 +3904,1 @@\n-    w.stream()->print_cr(\"%s %s\", LambdaFormInvokers::lambda_form_invoker_tag(), c_line);\n+    w.stream()->print_cr(\"%s %s\", LAMBDA_FORM_TAG, c_line);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1563,1 +1563,1 @@\n-void JvmtiExport::post_method_exit(JavaThread *thread, Method* method, frame current_frame) {\n+void JvmtiExport::post_method_exit(JavaThread* thread, Method* method, frame current_frame) {\n@@ -1567,5 +1567,0 @@\n-  EVT_TRIG_TRACE(JVMTI_EVENT_METHOD_EXIT, (\"[%s] Trg Method Exit triggered %s.%s\",\n-                     JvmtiTrace::safe_get_thread_name(thread),\n-                     (mh() == NULL) ? \"NULL\" : mh()->klass_name()->as_C_string(),\n-                     (mh() == NULL) ? \"NULL\" : mh()->name()->as_C_string() ));\n-\n@@ -1573,0 +1568,1 @@\n+\n@@ -1581,1 +1577,3 @@\n-\n+  Handle result;\n+  jvalue value;\n+  value.j = 0L;\n@@ -1584,4 +1582,0 @@\n-    Handle result;\n-    jvalue value;\n-    value.j = 0L;\n-\n@@ -1597,0 +1591,1 @@\n+        value.l = JNIHandles::make_local(thread, result());\n@@ -1599,0 +1594,1 @@\n+  }\n@@ -1600,0 +1596,25 @@\n+  \/\/ Deferred transition to VM, so we can stash away the return oop before GC\n+  \/\/ Note that this transition is not needed when throwing an exception, because\n+  \/\/ there is no oop to retain.\n+  JRT_BLOCK\n+    post_method_exit_inner(thread, mh, state, exception_exit, current_frame, value);\n+  JRT_BLOCK_END\n+\n+  if (result.not_null() && !mh->is_native()) {\n+    \/\/ We have to restore the oop on the stack for interpreter frames\n+    *(oop*)current_frame.interpreter_frame_tos_address() = result();\n+  }\n+}\n+\n+void JvmtiExport::post_method_exit_inner(JavaThread* thread,\n+                                         methodHandle& mh,\n+                                         JvmtiThreadState *state,\n+                                         bool exception_exit,\n+                                         frame current_frame,\n+                                         jvalue& value) {\n+  EVT_TRIG_TRACE(JVMTI_EVENT_METHOD_EXIT, (\"[%s] Trg Method Exit triggered %s.%s\",\n+                                           JvmtiTrace::safe_get_thread_name(thread),\n+                                           (mh() == NULL) ? \"NULL\" : mh()->klass_name()->as_C_string(),\n+                                           (mh() == NULL) ? \"NULL\" : mh()->name()->as_C_string() ));\n+\n+  if (state->is_enabled(JVMTI_EVENT_METHOD_EXIT)) {\n@@ -1610,3 +1631,0 @@\n-        if (result.not_null()) {\n-          value.l = JNIHandles::make_local(thread, result());\n-        }\n@@ -1804,1 +1822,3 @@\n-        JvmtiExport::post_method_exit(thread, method, thread->last_frame());\n+        jvalue no_value;\n+        no_value.j = 0L;\n+        JvmtiExport::post_method_exit_inner(thread, mh, state, true, thread->last_frame(), no_value);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":35,"deletions":15,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -196,0 +196,7 @@\n+  static void post_method_exit_inner(JavaThread* thread,\n+                                     methodHandle& mh,\n+                                     JvmtiThreadState *state,\n+                                     bool exception_exit,\n+                                     frame current_frame,\n+                                     jvalue& value);\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3216,0 +3216,5 @@\n+#ifdef ZERO\n+  \/\/ Zero always runs in interpreted mode\n+  set_mode_flags(_int);\n+#endif\n+\n@@ -3282,0 +3287,19 @@\n+#if !INCLUDE_AOT\n+  UNSUPPORTED_OPTION(UseAOT);\n+  UNSUPPORTED_OPTION(PrintAOT);\n+  UNSUPPORTED_OPTION(UseAOTStrictLoading);\n+  UNSUPPORTED_OPTION_NULL(AOTLibrary);\n+\n+  UNSUPPORTED_OPTION_INIT(Tier3AOTInvocationThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier3AOTMinInvocationThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier3AOTCompileThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier3AOTBackEdgeThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier0AOTInvocationThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier0AOTMinInvocationThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier0AOTCompileThreshold, 0);\n+  UNSUPPORTED_OPTION_INIT(Tier0AOTBackEdgeThreshold, 0);\n+#ifndef PRODUCT\n+  UNSUPPORTED_OPTION(PrintAOTStatistics);\n+#endif\n+#endif\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -687,0 +687,9 @@\n+\/\/ Initialize options not supported in this release, with a warning\n+\/\/ if they were explicitly requested on the command-line\n+#define UNSUPPORTED_OPTION_INIT(opt, value)              \\\n+do {                                                     \\\n+  if (FLAG_IS_CMDLINE(opt)) {                            \\\n+    warning(\"-XX flag \" #opt \" not supported in this VM\"); \\\n+  }                                                      \\\n+  FLAG_SET_DEFAULT(opt, value);                          \\\n+} while(0)\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -535,3 +535,0 @@\n-  product_pd(bool, UseOSErrorReporting,                                     \\\n-          \"Let VM fatal error propagate to the OS (ie. WER on Windows)\")    \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -481,0 +481,6 @@\n+#ifdef LINUX\n+  if (DumpPerfMapAtExit) {\n+    CodeCache::write_perf_map();\n+  }\n+#endif\n+\n@@ -575,0 +581,7 @@\n+void vm_direct_exit(int code, const char* message) {\n+  if (message != nullptr) {\n+    tty->print_cr(\"%s\", message);\n+  }\n+  vm_direct_exit(code);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+extern void vm_direct_exit(int code, const char* message);\n","filename":"src\/hotspot\/share\/runtime\/java.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-           \"This lock should %s have a safepoint check for Java threads: %s\",\n-           _safepoint_check_required ? \"always\" : \"never\", name());\n+           \"This lock should never have a safepoint check for Java threads: %s\",\n+           name());\n@@ -68,2 +68,2 @@\n-         \"This lock should %s have a safepoint check for Java threads: %s\",\n-         _safepoint_check_required ? \"always\" : \"never\", name());\n+         \"This lock should always have a safepoint check for Java threads: %s\",\n+         name());\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -102,4 +102,2 @@\n-  enum {\n-    _allow_vm_block_flag        = true,\n-    _as_suspend_equivalent_flag = true\n-  };\n+  static const bool _allow_vm_block_flag        = true;\n+  static const bool _as_suspend_equivalent_flag = true;\n@@ -127,1 +125,1 @@\n-  enum SafepointCheckFlag {\n+  enum class SafepointCheckFlag {\n@@ -131,0 +129,5 @@\n+  \/\/ Bring the enumerator names into class scope.\n+  static const SafepointCheckFlag _safepoint_check_flag =\n+    SafepointCheckFlag::_safepoint_check_flag;\n+  static const SafepointCheckFlag _no_safepoint_check_flag =\n+    SafepointCheckFlag::_no_safepoint_check_flag;\n@@ -132,1 +135,1 @@\n-  enum SafepointCheckRequired {\n+  enum class SafepointCheckRequired {\n@@ -141,0 +144,7 @@\n+  \/\/ Bring the enumerator names into class scope.\n+  static const SafepointCheckRequired _safepoint_check_never =\n+    SafepointCheckRequired::_safepoint_check_never;\n+  static const SafepointCheckRequired _safepoint_check_sometimes =\n+    SafepointCheckRequired::_safepoint_check_sometimes;\n+  static const SafepointCheckRequired _safepoint_check_always =\n+    SafepointCheckRequired::_safepoint_check_always;\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-    _no_safepoint_check(flag) {\n+    _no_safepoint_check(flag == Mutex::_no_safepoint_check_flag) {\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1005,2 +1005,8 @@\n-    ::strftime(buf, buflen, \"%Z\", &tz);\n-    st->print(\"Time: %s %s\", timestring, buf);\n+    wchar_t w_buf[80];\n+    size_t n = ::wcsftime(w_buf, 80, L\"%Z\", &tz);\n+    if (n > 0) {\n+      ::wcstombs(buf, w_buf, buflen);\n+      st->print(\"Time: %s %s\", timestring, buf);\n+    } else {\n+      st->print(\"Time: %s\", timestring);\n+    }\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-#include \"gc\/shenandoah\/shenandoahBarrierSet.hpp\"\n+#include \"gc\/shenandoah\/shenandoahBarrierSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/stackValue.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,2 +114,0 @@\n-address StubRoutines::_zero_aligned_words = CAST_FROM_FN_PTR(address, Copy::zero_to_words);\n-\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -210,3 +210,0 @@\n-  \/\/ zero heap space aligned to jlong (8 bytes)\n-  static address _zero_aligned_words;\n-\n@@ -445,2 +442,0 @@\n-  static address zero_aligned_words()  { return _zero_aligned_words; }\n-\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logTag.hpp\"\n@@ -37,2 +39,262 @@\n-\/\/ Ordering here is important: _log_table first, _log_table_initialized second.\n-double ThreadHeapSampler::_log_table[1 << ThreadHeapSampler::FastLogNumBits] = {};\n+\/\/ Statics for the fast log\n+static const int FastLogNumBits = 10;\n+static const int FastLogCount = 1 << FastLogNumBits;\n+static const int FastLogMask = FastLogCount - 1;\n+static const double log_table[FastLogCount] = {\n+  0.000704269011247, 0.002111776479852, 0.003517912108602, 0.004922678569045,\n+  0.006326078524934, 0.007728114632254, 0.009128789539256, 0.010528105886485,\n+  0.011926066306808, 0.013322673425448, 0.014717929860010, 0.016111838220512,\n+  0.017504401109415, 0.018895621121649, 0.020285500844648, 0.021674042858370,\n+  0.023061249735335, 0.024447124040647, 0.025831668332026, 0.027214885159835,\n+  0.028596777067108, 0.029977346589579, 0.031356596255709, 0.032734528586714,\n+  0.034111146096593, 0.035486451292154, 0.036860446673046, 0.038233134731779,\n+  0.039604517953758, 0.040974598817306, 0.042343379793691, 0.043710863347156,\n+  0.045077051934941, 0.046441948007312, 0.047805554007589, 0.049167872372170,\n+  0.050528905530555, 0.051888655905378, 0.053247125912426, 0.054604317960672,\n+  0.055960234452294, 0.057314877782703, 0.058668250340571, 0.060020354507853,\n+  0.061371192659811, 0.062720767165044, 0.064069080385509, 0.065416134676548,\n+  0.066761932386908, 0.068106475858773, 0.069449767427783, 0.070791809423061,\n+  0.072132604167234, 0.073472153976460, 0.074810461160454, 0.076147528022505,\n+  0.077483356859507, 0.078817949961979, 0.080151309614087, 0.081483438093674,\n+  0.082814337672274, 0.084144010615144, 0.085472459181283, 0.086799685623453,\n+  0.088125692188207, 0.089450481115907, 0.090774054640751, 0.092096414990791,\n+  0.093417564387961, 0.094737505048093, 0.096056239180946, 0.097373768990222,\n+  0.098690096673594, 0.100005224422721, 0.101319154423276, 0.102631888854968,\n+  0.103943429891557, 0.105253779700883, 0.106562940444883, 0.107870914279614,\n+  0.109177703355275, 0.110483309816226, 0.111787735801012, 0.113090983442381,\n+  0.114393054867307, 0.115693952197011, 0.116993677546981, 0.118292233026990,\n+  0.119589620741122, 0.120885842787790, 0.122180901259752, 0.123474798244141,\n+  0.124767535822473, 0.126059116070680, 0.127349541059119, 0.128638812852598,\n+  0.129926933510393, 0.131213905086272, 0.132499729628509, 0.133784409179907,\n+  0.135067945777817, 0.136350341454156, 0.137631598235428, 0.138911718142743,\n+  0.140190703191836, 0.141468555393084, 0.142745276751529, 0.144020869266892,\n+  0.145295334933597, 0.146568675740786, 0.147840893672337, 0.149111990706888,\n+  0.150381968817848, 0.151650829973421, 0.152918576136622, 0.154185209265297,\n+  0.155450731312137, 0.156715144224702, 0.157978449945432, 0.159240650411673,\n+  0.160501747555687, 0.161761743304675, 0.163020639580794, 0.164278438301170,\n+  0.165535141377924, 0.166790750718180, 0.168045268224090, 0.169298695792846,\n+  0.170551035316700, 0.171802288682983, 0.173052457774115, 0.174301544467631,\n+  0.175549550636190, 0.176796478147599, 0.178042328864822, 0.179287104646004,\n+  0.180530807344482, 0.181773438808808, 0.183015000882756, 0.184255495405349,\n+  0.185494924210866, 0.186733289128866, 0.187970591984199, 0.189206834597024,\n+  0.190442018782825, 0.191676146352428, 0.192909219112013, 0.194141238863136,\n+  0.195372207402739, 0.196602126523170, 0.197830998012197, 0.199058823653021,\n+  0.200285605224298, 0.201511344500146, 0.202736043250167, 0.203959703239463,\n+  0.205182326228643, 0.206403913973847, 0.207624468226758, 0.208843990734615,\n+  0.210062483240231, 0.211279947482008, 0.212496385193948, 0.213711798105673,\n+  0.214926187942435, 0.216139556425135, 0.217351905270334, 0.218563236190271,\n+  0.219773550892874, 0.220982851081777, 0.222191138456332, 0.223398414711628,\n+  0.224604681538499, 0.225809940623543, 0.227014193649133, 0.228217442293435,\n+  0.229419688230416, 0.230620933129866, 0.231821178657404, 0.233020426474497,\n+  0.234218678238471, 0.235415935602526, 0.236612200215751, 0.237807473723136,\n+  0.239001757765583, 0.240195053979925, 0.241387363998937, 0.242578689451346,\n+  0.243769031961852, 0.244958393151134, 0.246146774635865, 0.247334178028729,\n+  0.248520604938429, 0.249706056969705, 0.250890535723341, 0.252074042796184,\n+  0.253256579781154, 0.254438148267256, 0.255618749839596, 0.256798386079390,\n+  0.257977058563978, 0.259154768866840, 0.260331518557602, 0.261507309202055,\n+  0.262682142362165, 0.263856019596082, 0.265028942458160, 0.266200912498961,\n+  0.267371931265274, 0.268542000300123, 0.269711121142782, 0.270879295328784,\n+  0.272046524389938, 0.273212809854334, 0.274378153246363, 0.275542556086722,\n+  0.276706019892431, 0.277868546176841, 0.279030136449649, 0.280190792216907,\n+  0.281350514981036, 0.282509306240837, 0.283667167491501, 0.284824100224623,\n+  0.285980105928212, 0.287135186086704, 0.288289342180970, 0.289442575688332,\n+  0.290594888082571, 0.291746280833939, 0.292896755409173, 0.294046313271500,\n+  0.295194955880655, 0.296342684692889, 0.297489501160979, 0.298635406734241,\n+  0.299780402858540, 0.300924490976300, 0.302067672526519, 0.303209948944775,\n+  0.304351321663238, 0.305491792110684, 0.306631361712501, 0.307770031890703,\n+  0.308907804063939, 0.310044679647506, 0.311180660053355, 0.312315746690106,\n+  0.313449940963058, 0.314583244274195, 0.315715658022202, 0.316847183602472,\n+  0.317977822407119, 0.319107575824984, 0.320236445241649, 0.321364432039446,\n+  0.322491537597468, 0.323617763291577, 0.324743110494416, 0.325867580575418,\n+  0.326991174900817, 0.328113894833656, 0.329235741733800, 0.330356716957943,\n+  0.331476821859620, 0.332596057789214, 0.333714426093970, 0.334831928118000,\n+  0.335948565202297, 0.337064338684741, 0.338179249900111, 0.339293300180094,\n+  0.340406490853295, 0.341518823245243, 0.342630298678407, 0.343740918472201,\n+  0.344850683942991, 0.345959596404112, 0.347067657165871, 0.348174867535556,\n+  0.349281228817452, 0.350386742312842, 0.351491409320021, 0.352595231134304,\n+  0.353698209048035, 0.354800344350596, 0.355901638328417, 0.357002092264984,\n+  0.358101707440847, 0.359200485133632, 0.360298426618046, 0.361395533165889,\n+  0.362491806046063, 0.363587246524577, 0.364681855864560, 0.365775635326268,\n+  0.366868586167093, 0.367960709641570, 0.369052007001388, 0.370142479495399,\n+  0.371232128369622, 0.372320954867259, 0.373408960228696, 0.374496145691516,\n+  0.375582512490507, 0.376668061857668, 0.377752795022220, 0.378836713210614,\n+  0.379919817646538, 0.381002109550926, 0.382083590141966, 0.383164260635110,\n+  0.384244122243078, 0.385323176175872, 0.386401423640778, 0.387478865842379,\n+  0.388555503982561, 0.389631339260521, 0.390706372872775, 0.391780606013166,\n+  0.392854039872873, 0.393926675640417, 0.394998514501672, 0.396069557639868,\n+  0.397139806235604, 0.398209261466852, 0.399277924508967, 0.400345796534695,\n+  0.401412878714178, 0.402479172214964, 0.403544678202014, 0.404609397837712,\n+  0.405673332281866, 0.406736482691724, 0.407798850221975, 0.408860436024760,\n+  0.409921241249679, 0.410981267043796, 0.412040514551651, 0.413098984915263,\n+  0.414156679274141, 0.415213598765286, 0.416269744523207, 0.417325117679919,\n+  0.418379719364956, 0.419433550705378, 0.420486612825775, 0.421538906848277,\n+  0.422590433892561, 0.423641195075856, 0.424691191512953, 0.425740424316211,\n+  0.426788894595561, 0.427836603458520, 0.428883552010191, 0.429929741353273,\n+  0.430975172588069, 0.432019846812492, 0.433063765122069, 0.434106928609955,\n+  0.435149338366930, 0.436190995481417, 0.437231901039479, 0.438272056124831,\n+  0.439311461818846, 0.440350119200562, 0.441388029346687, 0.442425193331607,\n+  0.443461612227394, 0.444497287103809, 0.445532219028312, 0.446566409066067,\n+  0.447599858279950, 0.448632567730552, 0.449664538476192, 0.450695771572915,\n+  0.451726268074506, 0.452756029032494, 0.453785055496155, 0.454813348512524,\n+  0.455840909126398, 0.456867738380343, 0.457893837314700, 0.458919206967592,\n+  0.459943848374931, 0.460967762570422, 0.461990950585571, 0.463013413449693,\n+  0.464035152189912, 0.465056167831175, 0.466076461396253, 0.467096033905747,\n+  0.468114886378099, 0.469133019829591, 0.470150435274359, 0.471167133724392,\n+  0.472183116189541, 0.473198383677527, 0.474212937193944, 0.475226777742266,\n+  0.476239906323851, 0.477252323937953, 0.478264031581720, 0.479275030250205,\n+  0.480285320936372, 0.481294904631098, 0.482303782323183, 0.483311954999353,\n+  0.484319423644267, 0.485326189240524, 0.486332252768664, 0.487337615207182,\n+  0.488342277532524, 0.489346240719100, 0.490349505739287, 0.491352073563435,\n+  0.492353945159870, 0.493355121494907, 0.494355603532845, 0.495355392235982,\n+  0.496354488564616, 0.497352893477049, 0.498350607929600, 0.499347632876599,\n+  0.500343969270403, 0.501339618061397, 0.502334580197997, 0.503328856626662,\n+  0.504322448291891, 0.505315356136237, 0.506307581100306, 0.507299124122766,\n+  0.508289986140348, 0.509280168087859, 0.510269670898178, 0.511258495502268,\n+  0.512246642829179, 0.513234113806053, 0.514220909358129, 0.515207030408751,\n+  0.516192477879367, 0.517177252689541, 0.518161355756956, 0.519144787997414,\n+  0.520127550324851, 0.521109643651332, 0.522091068887064, 0.523071826940395,\n+  0.524051918717823, 0.525031345124000, 0.526010107061737, 0.526988205432007,\n+  0.527965641133954, 0.528942415064895, 0.529918528120324, 0.530893981193921,\n+  0.531868775177554, 0.532842910961282, 0.533816389433366, 0.534789211480267,\n+  0.535761377986656, 0.536732889835414, 0.537703747907644, 0.538673953082668,\n+  0.539643506238036, 0.540612408249530, 0.541580659991169, 0.542548262335212,\n+  0.543515216152167, 0.544481522310791, 0.545447181678094, 0.546412195119352,\n+  0.547376563498101, 0.548340287676148, 0.549303368513575, 0.550265806868740,\n+  0.551227603598288, 0.552188759557150, 0.553149275598548, 0.554109152574003,\n+  0.555068391333337, 0.556026992724677, 0.556984957594463, 0.557942286787447,\n+  0.558898981146702, 0.559855041513625, 0.560810468727941, 0.561765263627707,\n+  0.562719427049319, 0.563672959827513, 0.564625862795372, 0.565578136784329,\n+  0.566529782624171, 0.567480801143044, 0.568431193167460, 0.569380959522294,\n+  0.570330101030798, 0.571278618514596, 0.572226512793695, 0.573173784686486,\n+  0.574120435009748, 0.575066464578656, 0.576011874206780, 0.576956664706092,\n+  0.577900836886970, 0.578844391558203, 0.579787329526992, 0.580729651598958,\n+  0.581671358578144, 0.582612451267020, 0.583552930466485, 0.584492796975875,\n+  0.585432051592962, 0.586370695113965, 0.587308728333545, 0.588246152044817,\n+  0.589182967039351, 0.590119174107175, 0.591054774036780, 0.591989767615125,\n+  0.592924155627638, 0.593857938858223, 0.594791118089265, 0.595723694101627,\n+  0.596655667674663, 0.597587039586216, 0.598517810612622, 0.599447981528719,\n+  0.600377553107844, 0.601306526121841, 0.602234901341064, 0.603162679534382,\n+  0.604089861469180, 0.605016447911364, 0.605942439625368, 0.606867837374152,\n+  0.607792641919210, 0.608716854020573, 0.609640474436812, 0.610563503925040,\n+  0.611485943240922, 0.612407793138670, 0.613329054371054, 0.614249727689401,\n+  0.615169813843603, 0.616089313582115, 0.617008227651965, 0.617926556798751,\n+  0.618844301766652, 0.619761463298424, 0.620678042135410, 0.621594039017540,\n+  0.622509454683335, 0.623424289869911, 0.624338545312985, 0.625252221746873,\n+  0.626165319904499, 0.627077840517394, 0.627989784315704, 0.628901152028190,\n+  0.629811944382234, 0.630722162103839, 0.631631805917638, 0.632540876546891,\n+  0.633449374713493, 0.634357301137976, 0.635264656539513, 0.636171441635921,\n+  0.637077657143663, 0.637983303777853, 0.638888382252261, 0.639792893279312,\n+  0.640696837570094, 0.641600215834357, 0.642503028780520, 0.643405277115674,\n+  0.644306961545581, 0.645208082774684, 0.646108641506103, 0.647008638441647,\n+  0.647908074281808, 0.648806949725770, 0.649705265471412, 0.650603022215310,\n+  0.651500220652738, 0.652396861477678, 0.653292945382815, 0.654188473059545,\n+  0.655083445197979, 0.655977862486942, 0.656871725613981, 0.657765035265364,\n+  0.658657792126085, 0.659549996879870, 0.660441650209173, 0.661332752795187,\n+  0.662223305317840, 0.663113308455806, 0.664002762886501, 0.664891669286088,\n+  0.665780028329483, 0.666667840690356, 0.667555107041132, 0.668441828052998,\n+  0.669328004395903, 0.670213636738564, 0.671098725748465, 0.671983272091864,\n+  0.672867276433793, 0.673750739438063, 0.674633661767266, 0.675516044082778,\n+  0.676397887044763, 0.677279191312175, 0.678159957542760, 0.679040186393061,\n+  0.679919878518420, 0.680799034572981, 0.681677655209692, 0.682555741080310,\n+  0.683433292835402, 0.684310311124349, 0.685186796595348, 0.686062749895414,\n+  0.686938171670387, 0.687813062564931, 0.688687423222536, 0.689561254285525,\n+  0.690434556395054, 0.691307330191115, 0.692179576312539, 0.693051295396999,\n+  0.693922488081015, 0.694793154999950, 0.695663296788022, 0.696532914078300,\n+  0.697402007502708, 0.698270577692031, 0.699138625275914, 0.700006150882866,\n+  0.700873155140263, 0.701739638674351, 0.702605602110248, 0.703471046071947,\n+  0.704335971182319, 0.705200378063116, 0.706064267334970, 0.706927639617403,\n+  0.707790495528823, 0.708652835686530, 0.709514660706716, 0.710375971204471,\n+  0.711236767793784, 0.712097051087546, 0.712956821697550, 0.713816080234498,\n+  0.714674827308002, 0.715533063526583, 0.716390789497679, 0.717248005827646,\n+  0.718104713121757, 0.718960911984210, 0.719816603018127, 0.720671786825556,\n+  0.721526464007477, 0.722380635163802, 0.723234300893377, 0.724087461793988,\n+  0.724940118462359, 0.725792271494157, 0.726643921483994, 0.727495069025431,\n+  0.728345714710977, 0.729195859132094, 0.730045502879201, 0.730894646541672,\n+  0.731743290707842, 0.732591435965008, 0.733439082899433, 0.734286232096346,\n+  0.735132884139946, 0.735979039613404, 0.736824699098865, 0.737669863177453,\n+  0.738514532429268, 0.739358707433394, 0.740202388767900, 0.741045577009838,\n+  0.741888272735251, 0.742730476519174, 0.743572188935634, 0.744413410557655,\n+  0.745254141957257, 0.746094383705463, 0.746934136372297, 0.747773400526791,\n+  0.748612176736981, 0.749450465569916, 0.750288267591654, 0.751125583367269,\n+  0.751962413460854, 0.752798758435516, 0.753634618853387, 0.754469995275621,\n+  0.755304888262399, 0.756139298372928, 0.756973226165448, 0.757806672197228,\n+  0.758639637024576, 0.759472121202833, 0.760304125286382, 0.761135649828646,\n+  0.761966695382092, 0.762797262498232, 0.763627351727628, 0.764456963619890,\n+  0.765286098723682, 0.766114757586723, 0.766942940755785, 0.767770648776705,\n+  0.768597882194375, 0.769424641552754, 0.770250927394865, 0.771076740262799,\n+  0.771902080697716, 0.772726949239850, 0.773551346428504, 0.774375272802063,\n+  0.775198728897986, 0.776021715252813, 0.776844232402167, 0.777666280880755,\n+  0.778487861222371, 0.779308973959898, 0.780129619625307, 0.780949798749665,\n+  0.781769511863131, 0.782588759494964, 0.783407542173518, 0.784225860426252,\n+  0.785043714779724, 0.785861105759600, 0.786678033890652, 0.787494499696761,\n+  0.788310503700919, 0.789126046425230, 0.789941128390916, 0.790755750118313,\n+  0.791569912126878, 0.792383614935189, 0.793196859060945, 0.794009645020972,\n+  0.794821973331222, 0.795633844506778, 0.796445259061850, 0.797256217509785,\n+  0.798066720363063, 0.798876768133299, 0.799686361331250, 0.800495500466812,\n+  0.801304186049023, 0.802112418586066, 0.802920198585270, 0.803727526553114,\n+  0.804534402995225, 0.805340828416384, 0.806146803320525, 0.806952328210736,\n+  0.807757403589267, 0.808562029957525, 0.809366207816078, 0.810169937664658,\n+  0.810973220002164, 0.811776055326660, 0.812578444135380, 0.813380386924727,\n+  0.814181884190280, 0.814982936426790, 0.815783544128185, 0.816583707787570,\n+  0.817383427897233, 0.818182704948640, 0.818981539432443, 0.819779931838480,\n+  0.820577882655774, 0.821375392372539, 0.822172461476178, 0.822969090453287,\n+  0.823765279789659, 0.824561029970280, 0.825356341479334, 0.826151214800207,\n+  0.826945650415485, 0.827739648806957, 0.828533210455617, 0.829326335841667,\n+  0.830119025444515, 0.830911279742782, 0.831703099214300, 0.832494484336112,\n+  0.833285435584481, 0.834075953434884, 0.834866038362018, 0.835655690839800,\n+  0.836444911341368, 0.837233700339087, 0.838022058304546, 0.838809985708559,\n+  0.839597483021174, 0.840384550711666, 0.841171189248543, 0.841957399099547,\n+  0.842743180731658, 0.843528534611089, 0.844313461203296, 0.845097960972975,\n+  0.845882034384061, 0.846665681899738, 0.847448903982432, 0.848231701093818,\n+  0.849014073694819, 0.849796022245609, 0.850577547205614, 0.851358649033513,\n+  0.852139328187243, 0.852919585123995, 0.853699420300221, 0.854478834171630,\n+  0.855257827193196, 0.856036399819156, 0.856814552503010, 0.857592285697526,\n+  0.858369599854740, 0.859146495425959, 0.859922972861758, 0.860699032611988,\n+  0.861474675125773, 0.862249900851513, 0.863024710236886, 0.863799103728850,\n+  0.864573081773641, 0.865346644816780, 0.866119793303070, 0.866892527676600,\n+  0.867664848380745, 0.868436755858169, 0.869208250550826, 0.869979332899962,\n+  0.870750003346114, 0.871520262329114, 0.872290110288090, 0.873059547661470,\n+  0.873828574886976, 0.874597192401634, 0.875365400641771, 0.876133200043017,\n+  0.876900591040306, 0.877667574067881, 0.878434149559290, 0.879200317947393,\n+  0.879966079664357, 0.880731435141664, 0.881496384810110, 0.882260929099804,\n+  0.883025068440173, 0.883788803259962, 0.884552133987234, 0.885315061049376,\n+  0.886077584873094, 0.886839705884419, 0.887601424508708, 0.888362741170644,\n+  0.889123656294237, 0.889884170302829, 0.890644283619089, 0.891403996665022,\n+  0.892163309861966, 0.892922223630591, 0.893680738390908, 0.894438854562262,\n+  0.895196572563340, 0.895953892812168, 0.896710815726115, 0.897467341721893,\n+  0.898223471215558, 0.898979204622514, 0.899734542357511, 0.900489484834649,\n+  0.901244032467376, 0.901998185668496, 0.902751944850161, 0.903505310423880,\n+  0.904258282800518, 0.905010862390296, 0.905763049602793, 0.906514844846950,\n+  0.907266248531065, 0.908017261062803, 0.908767882849189, 0.909518114296615,\n+  0.910267955810839, 0.911017407796985, 0.911766470659550, 0.912515144802397,\n+  0.913263430628762, 0.914011328541254, 0.914758838941858, 0.915505962231931,\n+  0.916252698812210, 0.916999049082807, 0.917745013443216, 0.918490592292311,\n+  0.919235786028347, 0.919980595048962, 0.920725019751180, 0.921469060531410,\n+  0.922212717785448, 0.922955991908478, 0.923698883295072, 0.924441392339197,\n+  0.925183519434208, 0.925925264972856, 0.926666629347283, 0.927407612949032,\n+  0.928148216169037, 0.928888439397636, 0.929628283024562, 0.930367747438952,\n+  0.931106833029342, 0.931845540183673, 0.932583869289291, 0.933321820732945,\n+  0.934059394900794, 0.934796592178403, 0.935533412950747, 0.936269857602210,\n+  0.937005926516589, 0.937741620077096, 0.938476938666352, 0.939211882666397,\n+  0.939946452458687, 0.940680648424094, 0.941414470942911, 0.942147920394849,\n+  0.942880997159041, 0.943613701614043, 0.944346034137834, 0.945077995107817,\n+  0.945809584900821, 0.946540803893103, 0.947271652460349, 0.948002130977671,\n+  0.948732239819614, 0.949461979360154, 0.950191349972701, 0.950920352030097,\n+  0.951648985904620, 0.952377251967984, 0.953105150591341, 0.953832682145281,\n+  0.954559846999833, 0.955286645524468, 0.956013078088099, 0.956739145059080,\n+  0.957464846805211, 0.958190183693738, 0.958915156091350, 0.959639764364186,\n+  0.960364008877834, 0.961087889997331, 0.961811408087163, 0.962534563511272,\n+  0.963257356633048, 0.963979787815339, 0.964701857420447, 0.965423565810129,\n+  0.966144913345602, 0.966865900387539, 0.967586527296073, 0.968306794430798,\n+  0.969026702150771, 0.969746250814509, 0.970465440779995, 0.971184272404677,\n+  0.971902746045467, 0.972620862058745, 0.973338620800360, 0.974056022625630,\n+  0.974773067889342, 0.975489756945754, 0.976206090148598, 0.976922067851080,\n+  0.977637690405876, 0.978352958165143, 0.979067871480510, 0.979782430703087,\n+  0.980496636183459, 0.981210488271695, 0.981923987317340, 0.982637133669424,\n+  0.983349927676458, 0.984062369686437, 0.984774460046841, 0.985486199104635,\n+  0.986197587206273, 0.986908624697693, 0.987619311924326, 0.988329649231088,\n+  0.989039636962390, 0.989749275462133, 0.990458565073711, 0.991167506140010,\n+  0.991876099003415, 0.992584344005802, 0.993292241488548, 0.993999791792523,\n+  0.994706995258101, 0.995413852225151, 0.996120363033046, 0.996826528020659,\n+  0.997532347526366, 0.998237821888046, 0.998942951443085, 0.999647736528371,\n+};\n@@ -40,2 +302,7 @@\n-\/\/ Force initialization of the log_table.\n-bool ThreadHeapSampler::_log_table_initialized = init_log_table();\n+#ifndef PRODUCT\n+static double log_table_value(int i) {\n+  return (log(1.0 + static_cast<double>(i + 0.5) \/ FastLogCount) \/ log(2.0));\n+}\n+\n+\/\/ Ensure initialization checks only happen once during bootstrap\n+static volatile bool log_table_checked = false;\n@@ -43,4 +310,25 @@\n-bool ThreadHeapSampler::init_log_table() {\n-  for (int i = 0; i < (1 << FastLogNumBits); i++) {\n-    _log_table[i] = (log(1.0 + static_cast<double>(i+0.5) \/ (1 << FastLogNumBits))\n-                    \/ log(2.0));\n+\/\/ Sanity check all log_table values or print it out if running\n+\/\/ -Xlog:heapsampling+generate::none\n+static void verify_or_generate_log_table() {\n+  log_table_checked = true;\n+  assert(is_power_of_2(FastLogCount) && FastLogCount >= 4, \"table size should be power of two and at least 4\");\n+  if (log_is_enabled(Info,heapsampling,generate)) {\n+    log_info(heapsampling,generate)(\"FastLogCount = %d\", FastLogCount);\n+    log_info(heapsampling,generate)(\"static const double log_table[FastLogCount] = {\");\n+    int i = 0;\n+    for (; i < FastLogCount; i += 4) {\n+      double v1 = log_table_value(i);\n+      double v2 = log_table_value(i + 1);\n+      double v3 = log_table_value(i + 2);\n+      double v4 = log_table_value(i + 3);\n+      log_info(heapsampling,generate)(\"  %.15f, %.15f, %.15f, %.15f,\", v1, v2, v3, v4);\n+    }\n+    log_info(heapsampling,generate)(\"};\");\n+    assert(i == FastLogCount, \"post-loop invariant\");\n+  } else {\n+    \/\/ sanity check log_table - disabled when generating\n+    for (int i = 0; i < FastLogCount; i++) {\n+    assert(abs(log_table_value(i) - log_table[i]) < 0.0001,\n+      \"log_table deviates too much at index: %d %.15f %.15f\",\n+      i, log_table_value(i), log_table[i]);\n+    }\n@@ -48,1 +336,0 @@\n-  return true;\n@@ -50,0 +337,1 @@\n+#endif\n@@ -74,3 +362,1 @@\n-\n-  assert(_log_table_initialized, \"log table should be initialized\");\n-  return exponent + _log_table[y];\n+  return exponent + log_table[y];\n@@ -116,0 +402,5 @@\n+#ifndef PRODUCT\n+  if (!log_table_checked) {\n+    verify_or_generate_log_table();\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.cpp","additions":304,"deletions":13,"binary":false,"changes":317,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,4 +33,0 @@\n-  \/\/ Statics for the fast log\n-  static const int FastLogNumBits = 10;\n-  static const int FastLogMask = (1 << FastLogNumBits) - 1;\n-\n@@ -40,1 +36,0 @@\n-  static bool _log_table_initialized;\n@@ -42,1 +37,0 @@\n-  static double _log_table[1<<FastLogNumBits];  \/\/ Constant\n@@ -49,1 +43,0 @@\n-  static bool init_log_table();\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1969,2 +1969,2 @@\n-  declare_toplevel_type(BreakpointInfo)                                   \\\n-  declare_toplevel_type(BreakpointInfo*)                                  \\\n+  JVMTI_ONLY(declare_toplevel_type(BreakpointInfo))                       \\\n+  JVMTI_ONLY(declare_toplevel_type(BreakpointInfo*))                      \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,0 +113,3 @@\n+#ifdef LINUX\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<PerfMapDCmd>(full_export, true, false));\n+#endif \/\/ LINUX\n@@ -304,0 +307,1 @@\n+#if INCLUDE_JVMTI\n@@ -363,0 +367,1 @@\n+#endif \/\/ INCLUDE_JVMTI\n@@ -896,0 +901,6 @@\n+#ifdef LINUX\n+void PerfMapDCmd::execute(DCmdSource source, TRAPS) {\n+  CodeCache::write_perf_map();\n+}\n+#endif \/\/ LINUX\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -580,0 +580,23 @@\n+#ifdef LINUX\n+class PerfMapDCmd : public DCmd {\n+public:\n+  PerfMapDCmd(outputStream* output, bool heap) : DCmd(output, heap) {}\n+  static const char* name() {\n+    return \"Compiler.perfmap\";\n+  }\n+  static const char* description() {\n+    return \"Write map file for Linux perf tool.\";\n+  }\n+  static const char* impact() {\n+    return \"Low\";\n+  }\n+  static const JavaPermission permission() {\n+    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n+                        \"monitor\", NULL};\n+    return p;\n+  }\n+  static int num_arguments() { return 0; }\n+  virtual void execute(DCmdSource source, TRAPS);\n+};\n+#endif \/\/ LINUX\n+\n@@ -601,1 +624,0 @@\n-\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -449,0 +449,15 @@\n+\/\/ In many places we've added C-style casts to silence compiler\n+\/\/ warnings, for example when truncating a size_t to an int when we\n+\/\/ know the size_t is a small struct. Such casts are risky because\n+\/\/ they effectively disable useful compiler warnings. We can make our\n+\/\/ lives safer with this function, which ensures that any cast is\n+\/\/ reversible without loss of information. It doesn't check\n+\/\/ everything: it isn't intended to make sure that pointer types are\n+\/\/ compatible, for example.\n+template <typename T2, typename T1>\n+T2 checked_cast(T1 thing) {\n+  T2 result = static_cast<T2>(thing);\n+  assert(static_cast<T1>(result) == thing, \"must be\");\n+  return result;\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1324,13 +1324,0 @@\n-void VMError::report_and_die(const char* message, const char* detail_fmt, ...)\n-{\n-  va_list detail_args;\n-  va_start(detail_args, detail_fmt);\n-  report_and_die(INTERNAL_ERROR, message, detail_fmt, detail_args, NULL, NULL, NULL, NULL, NULL, 0, 0);\n-  va_end(detail_args);\n-}\n-\n-void VMError::report_and_die(const char* message)\n-{\n-  report_and_die(message, \"%s\", \"\");\n-}\n-\n@@ -1436,1 +1423,2 @@\n-    \/\/ If UseOsErrorReporting we call this for each level of the call stack\n+#if defined(_WINDOWS)\n+    \/\/ If UseOSErrorReporting we call this for each level of the call stack\n@@ -1440,0 +1428,1 @@\n+#endif\n@@ -1629,1 +1618,1 @@\n-  if (!UseOSErrorReporting) {\n+  if (WINDOWS_ONLY(!UseOSErrorReporting) NOT_WINDOWS(true)) {\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -121,1 +121,0 @@\n-  static void report_and_die(const char* message, const char* detail_fmt, ...) ATTRIBUTE_PRINTF(2, 3);\n@@ -164,2 +163,0 @@\n-  static void report_and_die(const char* message);\n-\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -419,0 +419,3 @@\n+                if (nread < buf.length) {\n+                    buf = Arrays.copyOfRange(buf, 0, nread);\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStream.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1031,1 +1031,1 @@\n-     * sb.subSequence(begin,&nbsp;end)}<\/pre>\n+     * sb.subSequence(begin, end)}<\/pre>\n@@ -1036,1 +1036,1 @@\n-     * sb.substring(begin,&nbsp;end)}<\/pre>\n+     * sb.substring(begin, end)}<\/pre>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+import static java.lang.invoke.LambdaForm.BasicType.V_TYPE;\n@@ -5208,0 +5209,22 @@\n+    \/**\n+     * Drop the return value of the target handle (if any).\n+     * The returned method handle will have a {@code void} return type.\n+     *\n+     * @param target the method handle to adapt\n+     * @return a possibly adapted method handle\n+     * @throws NullPointerException if {@code target} is null\n+     * @since 16\n+     *\/\n+    public static MethodHandle dropReturn(MethodHandle target) {\n+        Objects.requireNonNull(target);\n+        MethodType oldType = target.type();\n+        Class<?> oldReturnType = oldType.returnType();\n+        if (oldReturnType == void.class)\n+            return target;\n+        MethodType newType = oldType.changeReturnType(void.class);\n+        BoundMethodHandle result = target.rebind();\n+        LambdaForm lform = result.editor().filterReturnForm(V_TYPE, true);\n+        result = result.copyWith(newType, lform);\n+        return result;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n- * <h3> Root modules <\/h3>\n+ * <h3><a id=\"root-modules\"><\/a> Root modules <\/h3>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,8 @@\n+    \/* Override the implementation of Reference.refersTo.\n+     * Phantom references are weaker than finalization, so the referent\n+     * access needs to be handled differently for garbage collectors that\n+     * do reference processing concurrently.\n+     *\/\n+    @Override\n+    native final boolean refersTo0(Object o);\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/PhantomReference.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -328,0 +328,8 @@\n+     * @apiNote\n+     * This method returns a strong reference to the referent. This may cause\n+     * the garbage collector to treat it as strongly reachable until some later\n+     * collection cycle.  The {@link #refersTo(Object) refersTo} method can be\n+     * used to avoid such strengthening when testing whether some object is\n+     * the referent of a reference object; that is, use {@code ref.refersTo(obj)}\n+     * rather than {@code ref.get() == obj}.\n+     *\n@@ -330,0 +338,1 @@\n+     * @see refersTo\n@@ -336,0 +345,17 @@\n+    \/**\n+     * Tests if the referent of this reference object is {@code obj}.\n+     * Using a {@code null} {@code obj} returns {@code true} if the\n+     * reference object has been cleared.\n+     *\n+     * @param  obj the object to compare with this reference object's referent\n+     * @return {@code true} if {@code obj} is the referent of this reference object\n+     * @since 16\n+     *\/\n+    public final boolean refersTo(T obj) {\n+        return refersTo0(obj);\n+    }\n+\n+    \/* Implementation of refersTo(), overridden for phantom references.\n+     *\/\n+    native boolean refersTo0(Object o);\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -412,0 +412,10 @@\n+    public $Type$Buffer put(int index, $Type$Buffer src, int offset, int length) {\n+#if[rw]\n+        checkSegment();\n+        super.put(index, src, offset, length);\n+        return this;\n+#else[rw]\n+        throw new ReadOnlyBufferException();\n+#end[rw]\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Direct-X-Buffer.java.template","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -250,0 +250,10 @@\n+    public $Type$Buffer put(int index, $Type$Buffer src, int offset, int length) {\n+#if[rw]\n+        checkSegment();\n+        super.put(index, src, offset, length);\n+        return this;\n+#else[rw]\n+        throw new ReadOnlyBufferException();\n+#end[rw]\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -959,0 +959,70 @@\n+        putBuffer(pos, src, srcPos, n);\n+\n+        position(pos + n);\n+        src.position(srcPos + n);\n+\n+        return this;\n+    }\n+\n+    \/**\n+     * Absolute bulk <i>put<\/i> method&nbsp;&nbsp;<i>(optional operation)<\/i>.\n+     *\n+     * <p> This method transfers {@code length} $type$s into this buffer from\n+     * the given source buffer, starting at the given {@code offset} in the\n+     * source buffer and the given {@code index} in this buffer. The positions\n+     * of both buffers are unchanged.\n+     *\n+     * <p> In other words, an invocation of this method of the form\n+     * <code>dst.put(index,&nbsp;src,&nbsp;offset,&nbsp;length)<\/code>\n+     * has exactly the same effect as the loop\n+     *\n+     * <pre>{@code\n+     * for (int i = offset, j = index; i < offset + length; i++, j++)\n+     *     dst.put(j, src.get(i));\n+     * }<\/pre>\n+     *\n+     * except that it first checks the consistency of the supplied parameters\n+     * and it is potentially much more efficient.  If this buffer and\n+     * the source buffer share the same backing array or memory, then the\n+     * result will be as if the source elements were first copied to an\n+     * intermediate location before being written into this buffer.\n+     *\n+     * @param index\n+     *        The index in this buffer at which the first $type$ will be\n+     *        written; must be non-negative and less than {@code limit()}\n+     *\n+     * @param src\n+     *        The buffer from which $type$s are to be read\n+     *\n+     * @param offset\n+     *        The index within the source buffer of the first $type$ to be\n+     *        read; must be non-negative and less than {@code src.limit()}\n+     *\n+     * @param length\n+     *        The number of $type$s to be read from the given buffer;\n+     *        must be non-negative and no larger than the smaller of\n+     *        {@code limit() - index} and {@code src.limit() - offset}\n+     *\n+     * @return This buffer\n+     *\n+     * @throws IndexOutOfBoundsException\n+     *         If the preconditions on the {@code index}, {@code offset}, and\n+     *         {@code length} parameters do not hold\n+     *\n+     * @throws ReadOnlyBufferException\n+     *         If this buffer is read-only\n+     *\n+     * @since 16\n+     *\/\n+    public $Type$Buffer put(int index, $Type$Buffer src, int offset, int length) {\n+        Objects.checkFromIndexSize(index, length, limit());\n+        Objects.checkFromIndexSize(offset, length, src.limit());\n+        if (isReadOnly())\n+            throw new ReadOnlyBufferException();\n+\n+        putBuffer(index, src, offset, length);\n+\n+        return this;\n+    }\n+\n+    void putBuffer(int pos, $Type$Buffer src, int srcPos, int n) {\n@@ -1002,3 +1072,0 @@\n-\n-            position(pos + n);\n-            src.position(srcPos + n);\n@@ -1008,2 +1075,3 @@\n-            for (int i = 0; i < n; i++)\n-                put(src.get());\n+            int posMax = pos + n;\n+            for (int i = pos, j = srcPos; i < posMax; i++, j++)\n+                put(i, src.get(j));\n@@ -1012,2 +1080,0 @@\n-\n-        return this;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":73,"deletions":7,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -1338,12 +1338,0 @@\n-        private static final int hashN(byte[] a, int off, int len) {\n-            int h = 1;\n-            while (len-- > 0) {\n-                h = 31 * h + a[off++];\n-            }\n-            return h;\n-        }\n-\n-        private static final int hash_append(int hash, byte b) {\n-            return hash * 31 + b;\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-        PATTERN_MATCHING_IN_INSTANCEOF,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/PreviewFeature.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4593,1 +4593,1 @@\n-                      levelStart + \" is out of range 0 to \" +\n+                      objectStart + \" is out of range 0 to \" +\n@@ -4598,2 +4598,2 @@\n-                      levelStart + \" is out of range 0 to \" +\n-                      (objects.length - objectStart));\n+                      count + \" is less than zero, or objectStart + count\" +\n+                      \" is beyond objects length \" + objects.length);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/text\/BidiBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-        jdk.incubator.jpackage;\n+        jdk.jpackage;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,3 +31,0 @@\n-import java.security.interfaces.EdECPrivateKey;\n-import java.security.spec.InvalidParameterSpecException;\n-import java.security.spec.PSSParameterSpec;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -263,2 +263,0 @@\n-\n-\n@@ -506,1 +504,4 @@\n-     * name and the encryption algorithm name inside a PKCS7 SignerInfo.\n+     * and the encryption algorithm inside a PKCS7 SignerInfo.\n+     *\n+     * The digest algorithm is in the form \"DIG\", and the encryption\n+     * algorithm can be in any of the 3 forms:\n@@ -508,4 +509,7 @@\n-     * For old style PKCS7 files where we use RSA, DSA, EC as encAlgId\n-     * a DIGESTwithENC algorithm is returned. For new style RSASSA-PSS\n-     * and EdDSA encryption, this method ensures digAlgId is compatible\n-     * with the algorithm.\n+     * 1. Old style key algorithm like RSA, DSA, EC, this method returns\n+     *    DIGwithKEY.\n+     * 2. New style signature algorithm in the form of HASHwithKEY, this\n+     *    method returns DIGwithKEY. Please note this is not HASHwithKEY.\n+     * 3. Modern signature algorithm like RSASSA-PSS and EdDSA, this method\n+     *    returns the signature algorithm itself but ensures digAlgId is\n+     *    compatible with the algorithm as described in RFC 4056 and 8419.\n@@ -514,1 +518,1 @@\n-     * @param encAlgId the encryption or signature algorithm\n+     * @param encAlgId the encryption algorithm\n@@ -521,3 +525,0 @@\n-        if (encAlg.contains(\"with\")) {\n-            return encAlg;\n-        }\n@@ -550,0 +551,5 @@\n+                String keyAlg = SignatureUtil.extractKeyAlgFromDwithE(encAlg);\n+                if (keyAlg == null) {\n+                    \/\/ The encAlg used to be only the key alg\n+                    keyAlg = encAlg;\n+                }\n@@ -553,2 +559,2 @@\n-                if (encAlg.equals(\"EC\")) encAlg = \"ECDSA\";\n-                return digAlg + \"with\" + encAlg;\n+                if (keyAlg.equals(\"EC\")) keyAlg = \"ECDSA\";\n+                return digAlg + \"with\" + keyAlg;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -82,42 +83,4 @@\n- * Currently these PBE algorithms are used by default:\n- *  - PBEWithSHA1AndDESede to encrypt private keys, iteration count 50000.\n- *  - PBEWithSHA1AndRC2_40 to encrypt certificates, iteration count 50000.\n- *\n- * The default Mac algorithm is  HmacPBESHA1, iteration count 100000.\n- *\n- * Supported encryption of various implementations :\n- *\n- * Software and mode.     Certificate encryption  Private key encryption\n- * ---------------------------------------------------------------------\n- * MSIE4 (domestic            40 bit RC2.            40 bit RC2\n- * and xport versions)\n- * PKCS#12 export.\n- *\n- * MSIE4, 5 (domestic         40 bit RC2,            40 bit RC2,\n- * and export versions)       3 key triple DES       3 key triple DES\n- * PKCS#12 import.\n- *\n- * MSIE5                      40 bit RC2             3 key triple DES,\n- * PKCS#12 export.                                   with SHA1 (168 bits)\n- *\n- * Netscape Communicator      40 bit RC2             3 key triple DES,\n- * (domestic and export                              with SHA1 (168 bits)\n- * versions) PKCS#12 export\n- *\n- * Netscape Communicator      40 bit ciphers only    All.\n- * (export version)\n- * PKCS#12 import.\n- *\n- * Netscape Communicator      All.                   All.\n- * (domestic or fortified\n- * version) PKCS#12 import.\n- *\n- * OpenSSL PKCS#12 code.      All.                   All.\n- * ---------------------------------------------------------------------\n- *\n- * NOTE: PKCS12 KeyStore supports PrivateKeyEntry and TrustedCertficateEntry.\n- * PKCS#12 is mainly used to deliver private keys with their associated\n- * certificate chain and aliases. In a PKCS12 keystore, entries are\n- * identified by the alias, and a localKeyId is required to match the\n- * private key with the certificate. Trusted certificate entries are identified\n- * by the presence of an trustedKeyUsage attribute.\n+ * NOTE: In a PKCS12 keystore, entries are identified by the alias, and\n+ * a localKeyId is required to match the private key with the certificate.\n+ * Trusted certificate entries are identified by the presence of an\n+ * trustedKeyUsage attribute.\n@@ -133,0 +96,26 @@\n+    \/\/ Hardcoded defaults. They should be the same with commented out\n+    \/\/ lines inside the java.security file.\n+    private static final String DEFAULT_CERT_PBE_ALGORITHM\n+            = \"PBEWithHmacSHA256AndAES_256\";\n+    private static final String DEFAULT_KEY_PBE_ALGORITHM\n+            = \"PBEWithHmacSHA256AndAES_256\";\n+    private static final String DEFAULT_MAC_ALGORITHM = \"HmacPBESHA256\";\n+    private static final int DEFAULT_CERT_PBE_ITERATION_COUNT = 10000;\n+    private static final int DEFAULT_KEY_PBE_ITERATION_COUNT = 10000;\n+    private static final int DEFAULT_MAC_ITERATION_COUNT = 10000;\n+\n+    \/\/ Legacy settings. Used when \"keystore.pkcs12.legacy\" is set.\n+    private static final String LEGACY_CERT_PBE_ALGORITHM\n+            = \"PBEWithSHA1AndRC2_40\";\n+    private static final String LEGACY_KEY_PBE_ALGORITHM\n+            = \"PBEWithSHA1AndDESede\";\n+    private static final String LEGACY_MAC_ALGORITHM = \"HmacPBESHA1\";\n+    private static final int LEGACY_PBE_ITERATION_COUNT = 50000;\n+    private static final int LEGACY_MAC_ITERATION_COUNT = 100000;\n+\n+    \/\/ Big switch. When this system property is set. Legacy settings\n+    \/\/ are used no matter what other keystore.pkcs12.* properties are set.\n+    \/\/ Note: This is only a system property, there's no same-name\n+    \/\/ security property defined.\n+    private static final String USE_LEGACY_PROP = \"keystore.pkcs12.legacy\";\n+\n@@ -848,3 +837,0 @@\n-     * NOTE: By default, pbeWithSHAAnd3-KeyTripleDES-CBC algorithmID is\n-     *       used to derive the key and IV.\n-     *\n@@ -1869,3 +1855,0 @@\n-     * NOTE: Currently pbeWithSHAAnd40BiteRC2-CBC algorithmID is used\n-     *       to derive the key and IV.\n-     *\n@@ -2643,1 +2626,8 @@\n-    \/\/ 8076190: Customizing the generation of a PKCS12 keystore\n+    \/\/ The following methods are related to customizing\n+    \/\/ the generation of a PKCS12 keystore or private\/secret\n+    \/\/ key entries.\n+\n+    private static boolean useLegacy() {\n+        return GetPropertyAction.privilegedGetProperty(\n+                USE_LEGACY_PROP) != null;\n+    }\n@@ -2646,0 +2636,3 @@\n+        if (useLegacy()) {\n+            return LEGACY_CERT_PBE_ALGORITHM;\n+        }\n@@ -2649,1 +2642,1 @@\n-                ? result : \"PBEWithSHA1AndRC2_40\";\n+                ? result : DEFAULT_CERT_PBE_ALGORITHM;\n@@ -2653,0 +2646,3 @@\n+        if (useLegacy()) {\n+            return LEGACY_PBE_ITERATION_COUNT;\n+        }\n@@ -2656,1 +2652,2 @@\n-                ? string2IC(\"certPbeIterationCount\", result) : 50000;\n+                ? string2IC(\"certPbeIterationCount\", result)\n+                : DEFAULT_CERT_PBE_ITERATION_COUNT;\n@@ -2662,0 +2659,3 @@\n+        if (useLegacy()) {\n+            return LEGACY_KEY_PBE_ALGORITHM;\n+        }\n@@ -2683,1 +2683,1 @@\n-                ? result : \"PBEWithSHA1AndDESede\";\n+                ? result : DEFAULT_KEY_PBE_ALGORITHM;\n@@ -2687,0 +2687,3 @@\n+        if (useLegacy()) {\n+            return LEGACY_PBE_ITERATION_COUNT;\n+        }\n@@ -2690,1 +2693,2 @@\n-                ? string2IC(\"keyPbeIterationCount\", result) : 50000;\n+                ? string2IC(\"keyPbeIterationCount\", result)\n+                : DEFAULT_KEY_PBE_ITERATION_COUNT;\n@@ -2694,0 +2698,3 @@\n+        if (useLegacy()) {\n+            return LEGACY_MAC_ALGORITHM;\n+        }\n@@ -2697,1 +2704,1 @@\n-                ? result : \"HmacPBESHA1\";\n+                ? result : DEFAULT_MAC_ALGORITHM;\n@@ -2701,0 +2708,3 @@\n+        if (useLegacy()) {\n+            return LEGACY_MAC_ITERATION_COUNT;\n+        }\n@@ -2704,1 +2714,2 @@\n-                ? string2IC(\"macIterationCount\", result) : 100000;\n+                ? string2IC(\"macIterationCount\", result)\n+                : DEFAULT_MAC_ITERATION_COUNT;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":66,"deletions":55,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,2 +268,1 @@\n-        int buckets = (int)(maxSize \/ LOAD_FACTOR) + 1;\n-        cacheMap = new LinkedHashMap<>(buckets, LOAD_FACTOR, true);\n+        cacheMap = new LinkedHashMap<>(1, LOAD_FACTOR, true);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Cache.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -285,0 +285,26 @@\n+    \/**\n+     * Extracts the key algorithm name from a signature\n+     * algorithm name in either the \"DIGESTwithENCRYPTION\" or the\n+     * \"DIGESTwithENCRYPTIONandWHATEVER\" format.\n+     *\n+     * @return the key algorithm name, or null if the input\n+     *      is not in either of the formats.\n+     *\/\n+    public static String extractKeyAlgFromDwithE(String signatureAlgorithm) {\n+        signatureAlgorithm = signatureAlgorithm.toUpperCase(Locale.ENGLISH);\n+        int with = signatureAlgorithm.indexOf(\"WITH\");\n+        String keyAlgorithm = null;\n+        if (with > 0) {\n+            int and = signatureAlgorithm.indexOf(\"AND\", with + 4);\n+            if (and > 0) {\n+                keyAlgorithm = signatureAlgorithm.substring(with + 4, and);\n+            } else {\n+                keyAlgorithm = signatureAlgorithm.substring(with + 4);\n+            }\n+            if (keyAlgorithm.equalsIgnoreCase(\"ECDSA\")) {\n+                keyAlgorithm = \"EC\";\n+            }\n+        }\n+        return keyAlgorithm;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureUtil.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -576,2 +576,6 @@\n-                    \/\/ \"last\", it works for now.\n-                    if (dom < 0 || dom >= 24) {\n+                    \/\/ \"last\", it works for now. From tzdata2020d this hacking\n+                    \/\/ will not work for Asia\/Gaza and Asia\/Hebron which follow\n+                    \/\/ Palestine DST rules.\n+                    if (dom < 0 || dom >= 24 &&\n+                                   !(zoneId.equals(\"Asia\/Gaza\") ||\n+                                     zoneId.equals(\"Asia\/Hebron\"))) {\n@@ -599,1 +603,3 @@\n-                    if (dom < 0 || dom >= 24) {\n+                    if (dom < 0 || dom >= 24 &&\n+                                   !(zoneId.equals(\"Asia\/Gaza\") ||\n+                                     zoneId.equals(\"Asia\/Hebron\"))) {\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1147,2 +1147,2 @@\n-# is not encrypted. The default value is \"PBEWithSHA1AndRC2_40\".\n-#keystore.pkcs12.certProtectionAlgorithm = PBEWithSHA1AndRC2_40\n+# is not encrypted. The default value is \"PBEWithHmacSHA256AndAES_256\".\n+#keystore.pkcs12.certProtectionAlgorithm = PBEWithHmacSHA256AndAES_256\n@@ -1151,2 +1151,2 @@\n-# This value must be a positive integer. The default value is 50000.\n-#keystore.pkcs12.certPbeIterationCount = 50000\n+# This value must be a positive integer. The default value is 10000.\n+#keystore.pkcs12.certPbeIterationCount = 10000\n@@ -1157,2 +1157,2 @@\n-# The default value is \"PBEWithSHA1AndDESede\".\n-#keystore.pkcs12.keyProtectionAlgorithm = PBEWithSHA1AndDESede\n+# The default value is \"PBEWithHmacSHA256AndAES_256\".\n+#keystore.pkcs12.keyProtectionAlgorithm = PBEWithHmacSHA256AndAES_256\n@@ -1162,2 +1162,2 @@\n-# is 50000.\n-#keystore.pkcs12.keyPbeIterationCount = 50000\n+# is 10000.\n+#keystore.pkcs12.keyPbeIterationCount = 10000\n@@ -1168,2 +1168,2 @@\n-# no Mac is generated. The default value is \"HmacPBESHA1\".\n-#keystore.pkcs12.macAlgorithm = HmacPBESHA1\n+# no Mac is generated. The default value is \"HmacPBESHA256\".\n+#keystore.pkcs12.macAlgorithm = HmacPBESHA256\n@@ -1172,2 +1172,2 @@\n-# positive integer. The default value is 100000.\n-#keystore.pkcs12.macIterationCount = 100000\n+# positive integer. The default value is 10000.\n+#keystore.pkcs12.macIterationCount = 10000\n@@ -1311,1 +1311,1 @@\n-#jdk.security.allowNonCaAnchor=true\n\\ No newline at end of file\n+#jdk.security.allowNonCaAnchor=true\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-.\\\"t\n@@ -11,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -23,0 +22,1 @@\n+.\\\"t\n@@ -25,1 +25,1 @@\n-.TH \"JAVA\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JAVA\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n@@ -184,1 +184,1 @@\n-(\\f[CB]15\\f[R]) and a limited number of previous releases, detailed in the\n+(\\f[CB]16\\f[R]) and a limited number of previous releases, detailed in the\n@@ -4092,8 +4092,0 @@\n-.TP\n-.B \\f[CB]\\-XX:+UseParallelOldGC\\f[R]\n-Enables the use of the parallel garbage collector for full GCs.\n-By default, this option is disabled.\n-Enabling it automatically enables the \\f[CB]\\-XX:+UseParallelGC\\f[R]\n-option.\n-.RS\n-.RE\n@@ -4109,16 +4101,5 @@\n-.B \\f[CB]\\-XX:+FailOverToOldVerifier\\f[R]\n-Enables automatic failover to the old verifier when the new type checker\n-fails.\n-By default, this option is disabled and it\\[aq]s ignored (that is,\n-treated as disabled) for classes with a recent bytecode version.\n-You can enable it only for classes with older versions of the bytecode.\n-.RS\n-.RE\n-.TP\n-.B \\f[CB]\\-XX:+UseConcMarkSweepGC\\f[R]\n-Enables the use of the CMS garbage collector for the old generation.\n-CMS is an alternative to the default garbage collector (G1), which also\n-focuses on meeting application latency requirements.\n-By default, this option is disabled and the collector is selected\n-automatically based on the configuration of the machine and type of the\n-JVM.\n+.B \\f[CB]\\-XX:+UseParallelOldGC\\f[R]\n+Enables the use of the parallel garbage collector for full GCs.\n+By default, this option is disabled.\n+Enabling it automatically enables the \\f[CB]\\-XX:+UseParallelGC\\f[R]\n+option.\n@@ -4131,0 +4112,3 @@\n+\\f[B]Java Platform, Standard Edition Tools Reference, Release 15\\f[R]\n+[https:\/\/docs.oracle.com\/en\/java\/javase\/15\/docs\/specs\/man\/java.html]\n+.IP \\[bu] 2\n","filename":"src\/java.base\/share\/man\/java.1","additions":12,"deletions":28,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-.\\\"t\n@@ -11,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -23,0 +22,1 @@\n+.\\\"t\n@@ -25,1 +25,1 @@\n-.TH \"KEYTOOL\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"KEYTOOL\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n@@ -983,0 +983,22 @@\n+{\\f[CB]\\-keystore\\f[R] \\f[I]keystore\\f[R]}: Keystore name\n+.IP \\[bu] 2\n+{\\f[CB]\\-trustcacerts\\f[R]}: Trust certificates from cacerts\n+.IP \\[bu] 2\n+[\\f[CB]\\-storepass\\f[R] \\f[I]arg\\f[R]]: Keystore password\n+.IP \\[bu] 2\n+{\\f[CB]\\-storetype\\f[R] \\f[I]type\\f[R]}: Keystore type\n+.IP \\[bu] 2\n+{\\f[CB]\\-providername\\f[R] \\f[I]name\\f[R]}: Provider name\n+.IP \\[bu] 2\n+{\\f[CB]\\-addprovider\\f[R] \\f[I]name\\f[R] [\\f[CB]\\-providerarg\\f[R]\n+\\f[I]arg\\f[R]]}: Add security provider by name (such as SunPKCS11) with\n+an optional configure argument.\n+.IP \\[bu] 2\n+{\\f[CB]\\-providerclass\\f[R] \\f[I]class\\f[R] [\\f[CB]\\-providerarg\\f[R]\n+\\f[I]arg\\f[R]]}: Add security provider by fully qualified class name with\n+an optional configure argument.\n+.IP \\[bu] 2\n+{\\f[CB]\\-providerpath\\f[R] \\f[I]list\\f[R]}: Provider classpath\n+.IP \\[bu] 2\n+{\\f[CB]\\-protected\\f[R]}: Password is provided through protected mechanism\n+.IP \\[bu] 2\n@@ -1015,1 +1037,5 @@\n-This option can be used independently of a keystore.\n+This command can be used independently of a keystore.\n+This command does not check for the weakness of a certificate\\[aq]s\n+signature algorithm if it is a trusted certificate in the user keystore\n+(specified by \\f[CB]\\-keystore\\f[R]) or in the \\f[CB]cacerts\\f[R] keystore\n+(if \\f[CB]\\-trustcacerts\\f[R] is specified).\n@@ -1041,0 +1067,22 @@\n+{\\f[CB]\\-keystore\\f[R] \\f[I]keystore\\f[R]}: Keystore name\n+.IP \\[bu] 2\n+{\\f[CB]\\-trustcacerts\\f[R]}: Trust certificates from cacerts\n+.IP \\[bu] 2\n+[\\f[CB]\\-storepass\\f[R] \\f[I]arg\\f[R]]: Keystore password\n+.IP \\[bu] 2\n+{\\f[CB]\\-storetype\\f[R] \\f[I]type\\f[R]}: Keystore type\n+.IP \\[bu] 2\n+{\\f[CB]\\-providername\\f[R] \\f[I]name\\f[R]}: Provider name\n+.IP \\[bu] 2\n+{\\f[CB]\\-addprovider\\f[R] \\f[I]name\\f[R] [\\f[CB]\\-providerarg\\f[R]\n+\\f[I]arg\\f[R]]}: Add security provider by name (such as SunPKCS11) with\n+an optional configure argument.\n+.IP \\[bu] 2\n+{\\f[CB]\\-providerclass\\f[R] \\f[I]class\\f[R] [\\f[CB]\\-providerarg\\f[R]\n+\\f[I]arg\\f[R]]}: Add security provider by fully qualified class name with\n+an optional configure argument.\n+.IP \\[bu] 2\n+{\\f[CB]\\-providerpath\\f[R] \\f[I]list\\f[R]}: Provider classpath\n+.IP \\[bu] 2\n+{\\f[CB]\\-protected\\f[R]}: Password is provided through protected mechanism\n+.IP \\[bu] 2\n@@ -1051,1 +1099,5 @@\n-This option can be used independently of a keystore.\n+This command can be used independently of a keystore.\n+This command attempts to verify the CRL using a certificate from the\n+user keystore (specified by \\f[CB]\\-keystore\\f[R]) or the \\f[CB]cacerts\\f[R]\n+keystore (if \\f[CB]\\-trustcacerts\\f[R] is specified), and will print out a\n+warning if it cannot be verified.\n@@ -1482,2 +1534,1 @@\n-\\ \\ \\ \\ 2048\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"RSA\")\n-\\ \\ \\ \\ 2048\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"DSA\")\n+\\ \\ \\ \\ 2048\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"RSA\",\\ \"DSA\",\\ or\\ \"RSASSA\\-PSS\")\n@@ -1485,0 +1536,1 @@\n+\\ \\ \\ \\ 255\\ (when\\ using\\ \\-genkeypair\\ and\\ \\-keyalg\\ is\\ \"EdDSA\")\n@@ -1567,0 +1619,46 @@\n+T{\n+RSASSA\\-PSS\n+T}@T{\n+<= 3072\n+T}@T{\n+RSASSA\\-PSS (with SHA\\-256)\n+T}\n+T{\n+T}@T{\n+<= 7680\n+T}@T{\n+RSASSA\\-PSS (with SHA\\-384)\n+T}\n+T{\n+T}@T{\n+> 7680\n+T}@T{\n+RSASSA\\-PSS (with SHA\\-512)\n+T}\n+T{\n+EdDSA\n+T}@T{\n+255\n+T}@T{\n+Ed25519\n+T}\n+T{\n+T}@T{\n+448\n+T}@T{\n+Ed448\n+T}\n+T{\n+Ed25519\n+T}@T{\n+255\n+T}@T{\n+Ed25519\n+T}\n+T{\n+Ed448\n+T}@T{\n+448\n+T}@T{\n+Ed448\n+T}\n@@ -1568,0 +1666,13 @@\n+.IP \\[bu] 2\n+An RSASSA\\-PSS signature algorithm uses a \\f[CB]MessageDigest\\f[R]\n+algorithm as its hash and MGF1 algorithms.\n+.IP \\[bu] 2\n+EdDSA supports 2 key sizes: Ed25519 and Ed448.\n+When generating an EdDSA key pair using \\f[CB]\\-keyalg\\ EdDSA\\f[R], a user\n+can specify \\f[CB]\\-keysize\\ 255\\f[R] or \\f[CB]\\-keysize\\ 448\\f[R] to\n+generate Ed25519 or Ed448 key pairs.\n+When no \\f[CB]\\-keysize\\f[R] is specified, an Ed25519 key pair is\n+generated.\n+A user can also directly specify \\f[CB]\\-keyalg\\ Ed25519\\f[R] or\n+\\f[CB]\\-keyalg\\ Ed448\\f[R] to generate a key pair with the expected key\n+size.\n","filename":"src\/java.base\/share\/man\/keytool.1","additions":118,"deletions":7,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jvm.h\"\n+#include \"java_lang_ref_PhantomReference.h\"\n+\n+JNIEXPORT jboolean JNICALL\n+Java_java_lang_ref_PhantomReference_refersTo0(JNIEnv *env, jobject ref, jobject o)\n+{\n+    return JVM_PhantomReferenceRefersTo(env, ref, o);\n+}\n","filename":"src\/java.base\/share\/native\/libjava\/PhantomReference.c","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,6 @@\n+\n+JNIEXPORT jboolean JNICALL\n+Java_java_lang_ref_Reference_refersTo0(JNIEnv *env, jobject ref, jobject o)\n+{\n+    return JVM_ReferenceRefersTo(env, ref, o);\n+}\n","filename":"src\/java.base\/share\/native\/libjava\/Reference.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -260,0 +260,1 @@\n+        Objects.requireNonNull(first);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -355,1 +355,8 @@\n-        return (name.asByteArray()[0] == '.');\n+\n+        byte[] path;\n+        if (name.isEmpty()) { \/\/ corner case for empty paths\n+            path = name.getFileSystem().defaultDirectory();\n+        } else {\n+            path = name.asByteArray();\n+        }\n+        return path[0] == '.';\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-    private boolean isEmpty() {\n+    boolean isEmpty() {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,0 +214,1 @@\n+        Objects.requireNonNull(first);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileSystem.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,11 +124,2 @@\n-     * {@preview Associated with pattern matching for {@code\n-     * instanceof}, a preview feature of the Java language.\n-     *\n-     *           This enum constant is associated with <i>pattern\n-     *           matching for {@code instanceof}<\/i>, a preview\n-     *           feature of the Java language. Preview features\n-     *           may be removed in a future release, or upgraded to permanent\n-     *           features of the Java language.}\n-     *\n-     * A binding variable in a pattern .\n-     * @since 14\n+     * A binding variable in a pattern.\n+     * @since 16\n@@ -136,2 +127,0 @@\n-    @jdk.internal.PreviewFeature(feature=jdk.internal.PreviewFeature.Feature.PATTERN_MATCHING_IN_INSTANCEOF,\n-                                 essentialAPI=false)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ElementKind.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-     * Returns a package given its fully qualified name if the package is unique in the environment.\n-     * If running with modules, all modules in the modules graph are searched for matching packages.\n+     * Returns a package given its fully qualified name if the package is uniquely\n+     * determinable in the environment.\n@@ -57,2 +57,21 @@\n-     * @param name  fully qualified package name, or an empty string for an unnamed package\n-     * @return the specified package, or {@code null} if it cannot be uniquely found\n+     * If running with modules, packages of the given name are searched in a\n+     * two-stage process:\n+     * <ul>\n+     *     <li>find non-empty packages with the given name returned by\n+     *         {@link #getPackageElement(ModuleElement, CharSequence)},\n+     *         where the provided ModuleSymbol is any\n+     *         <a href=\"..\/..\/..\/..\/..\/java.base\/java\/lang\/module\/package-summary.html#root-modules\">root module<\/a>,\n+     *     <\/li>\n+     *     <li>if the above yields an empty list, search\n+     *         {@link #getAllModuleElements() all modules} for observable\n+     *         packages with the given name\n+     *     <\/li>\n+     * <\/ul>\n+     *\n+     * If this process leads to a list with a single element,\n+     * the single element is returned, otherwise null is returned.\n+     *\n+     * @param name fully qualified package name,\n+     *             or an empty string for an unnamed package\n+     * @return the specified package,\n+     *         or {@code null} if no package can be uniquely determined.\n@@ -122,3 +141,2 @@\n-     * Returns a type element given its canonical name if the type element is unique in the environment.\n-     * If running with modules, all modules in the modules graph are searched for matching\n-     * type elements.\n+     * Returns a type element given its canonical name if the type element is uniquely\n+     * determinable in the environment.\n@@ -126,2 +144,20 @@\n-     * @param name  the canonical name\n-     * @return the named type element, or {@code null} if it cannot be uniquely found\n+     * If running with modules, type elements of the given name are\n+     * searched in a two-stage process:\n+     * <ul>\n+     *     <li>find type elements with the given name returned by\n+     *         {@link #getTypeElement(ModuleElement, CharSequence)},\n+     *         where the provided ModuleSymbol is any\n+     *         <a href=\"..\/..\/..\/..\/..\/java.base\/java\/lang\/module\/package-summary.html#root-modules\">root module<\/a>,\n+     *     <\/li>\n+     *     <li>if the above yields an empty list, search\n+     *         {@link #getAllModuleElements() all modules} for observable\n+     *         type elements with the given name\n+     *     <\/li>\n+     * <\/ul>\n+     *\n+     * If this process leads to a list with a single element,\n+     * the single element is returned, otherwise null is returned.\n+     *\n+     * @param name the canonical name\n+     * @return the named type element,\n+     *         or {@code null} if no type element can be uniquely determined.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":45,"deletions":9,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -337,0 +337,1 @@\n+            NSLog(@\"Apple AWT Startup Exception callstack: %@\", [e callStackSymbols]);\n","filename":"src\/java.desktop\/macosx\/native\/libosxapp\/NSApplicationAWT.m","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n- * <a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+ * <a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n@@ -7654,1 +7654,1 @@\n-     *<a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+     *<a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n@@ -7722,1 +7722,1 @@\n-     *<a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+     *<a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n@@ -7889,1 +7889,1 @@\n-     *<a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+     *<a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Component.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n- * <a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+ * <a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Container.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- * <a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+ * <a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/DefaultFocusTraversalPolicy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * <a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+ * <a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/DefaultKeyboardFocusManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * <a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+ * <a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/FocusTraversalPolicy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,1 @@\n- * <a href=\"..\/..\/java\/awt\/doc-files\/FocusSpec.html\">Focus Specification<\/a>\n+ * <a href=\"doc-files\/FocusSpec.html\">Focus Specification<\/a>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/KeyboardFocusManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-<a href=\"..\/Toolkit.html#getDesktopProperty(java.lang.String)\">\n-<code>Toolkit.getDesktopProperty<\/code><\/a> method.\n+{@link java.awt.Toolkit#getDesktopProperty(java.lang.String)\n+Toolkit.getDesktopProperty} method.\n@@ -89,1 +89,1 @@\n-<a href=\"..\/Graphics2D.html\"> <code>Graphics2D<\/code><\/a> methods.\n+{@link java.awt.Graphics2D Graphics2D} methods.\n@@ -91,1 +91,1 @@\n-<a href=\"..\/..\/..\/javax\/swing\/JComponent.html\"> Swing components<\/a> which\n+{@link javax.swing.JComponent Swing components} which\n@@ -100,3 +100,2 @@\n-The return value is a\n-<a href=\"..\/..\/util\/Map.html\"> Map<\/a> of\n-<a href=\"..\/RenderingHints.html\"> <code>RenderingHints<\/code><\/a> which\n+The return value is a {@link java.util.Map Map} of\n+{@link java.awt.RenderingHints RenderingHints} which\n@@ -119,2 +118,1 @@\n-using a <a href=\"..\/..\/beans\/PropertyChangeListener.html\">\n-<code>PropertyChangeListener<\/code><\/a> :\n+using a {@link java.beans.PropertyChangeListener PropertyChangeListener}:\n@@ -137,1 +135,1 @@\n-<a href=\"..\/font\/FontRenderContext.html\"> <code>FontRenderContext<\/code><\/a>\n+{@link java.awt.font.FontRenderContext FontRenderContext}\n@@ -140,1 +138,1 @@\n-A <a href=\"..\/FontMetrics.html\"> <code>FontMetrics<\/code><\/a>\n+A {@link java.awt.FontMetrics FontMetrics}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/doc-files\/DesktopProperties.html","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n-Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-TIFF images are read by an <a href=\"..\/..\/ImageReader.html\">ImageReader<\/a>\n+TIFF images are read by an {@link javax.imageio.ImageReader ImageReader}\n@@ -77,1 +77,1 @@\n-<a href=\"..\/..\/plugins\/tiff\/TIFFImageReadParam.html\">TIFFImageReadParam<\/a>.\n+{@link javax.imageio.plugins.tiff.TIFFImageReadParam TIFFImageReadParam}.\n@@ -93,1 +93,1 @@\n-user-supplied <a href=\"..\/..\/ImageTypeSpecifier.html\">ImageTypeSpecifier<\/a>,\n+user-supplied {@link javax.imageio.ImageTypeSpecifier ImageTypeSpecifier},\n@@ -161,2 +161,2 @@\n-(<a href=\"..\/..\/plugins\/tiff\/BaselineTIFFTagSet.html\">\n-BaselineTIFFTagSet<\/a>.TAG_ICC_PROFILE, tag number 34675),\n+({@link javax.imageio.plugins.tiff.BaselineTIFFTagSet BaselineTIFFTagSet}.\n+TAG_ICC_PROFILE, tag number 34675),\n@@ -177,4 +177,2 @@\n-<li>Create an <a href=\"..\/..\/..\/..\/java\/awt\/color\/ICC_ColorSpace.html\">\n-ICC_ColorSpace<\/a> from an\n-<a href=\"..\/..\/..\/..\/java\/awt\/color\/ICC_Profile.html\">\n-ICC_Profile<\/a> created from the ICC profile field data\n+<li>Create an {@link java.awt.color.ICC_ColorSpace ICC_ColorSpace} from an\n+{@link java.awt.color.ICC_Profile ICC_Profile} created from the ICC profile field data\n@@ -185,1 +183,1 @@\n-<li>Create a compatible <a href=\"..\/..\/ImageReadParam.html\">ImageReadParam<\/a>\n+<li>Create a compatible {@link javax.imageio.ImageReadParam ImageReadParam}\n@@ -209,1 +207,1 @@\n-informed of which <a href=\"..\/..\/plugins\/tiff\/TIFFTag.html\">TIFFTag<\/a>s to\n+informed of which {@link javax.imageio.plugins.tiff.TIFFTag TIFFTag}s to\n@@ -224,1 +222,1 @@\n-<p>Use of a <a href=\"..\/..\/plugins\/tiff\/TIFFDirectory.html\">TIFFDirectory<\/a>\n+<p>Use of a {@link javax.imageio.plugins.tiff.TIFFDirectory TIFFDirectory}\n@@ -484,1 +482,1 @@\n-TIFF images are written by a <a href=\"..\/..\/ImageWriter.html\">ImageWriter<\/a> which may be\n+TIFF images are written by a {@link javax.imageio.ImageWriter ImageWriter} which may be\n@@ -486,1 +484,1 @@\n-<a href=\"..\/..\/ImageWriteParam.html\">ImageWriteParam<\/a>.  For an <code>ImageWriteParam<\/code> returned\n+{@link javax.imageio.ImageWriteParam ImageWriteParam}.  For an <code>ImageWriteParam<\/code> returned\n@@ -634,1 +632,1 @@\n-<a href=\"..\/IIOMetadata.html\">IIOMetadata<\/a> instance supplied to the writer,\n+{@link javax.imageio.metadata.IIOMetadata IIOMetadata} instance supplied to the writer,\n@@ -636,1 +634,1 @@\n-<li>the <a href=\"..\/..\/..\/..\/java\/awt\/color\/ColorSpace.html\">ColorSpace<\/a>\n+<li>the {@link java.awt.color.ColorSpace ColorSpace}\n@@ -751,1 +749,1 @@\n-instance of <a href=\"..\/..\/plugins\/tiff\/TIFFField.html\">TIFFField<\/a>. For each\n+instance of {@link javax.imageio.plugins.tiff.TIFFField TIFFField}. For each\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/metadata\/doc-files\/tiff_metadata.html","additions":16,"deletions":18,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,3 +159,3 @@\n- * See <a href=\"..\/..\/java\/lang\/package-summary.html#charenc\">character\n- * encodings<\/a> for more information on the character encodings supported on\n- * the Java platform.\n+ * See <a href=\"..\/..\/..\/java.base\/java\/lang\/package-summary.html#charenc\">\n+ * character encodings<\/a> for more information on the character encodings\n+ * supported on the Java platform.\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/DocFlavor.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n- *   <tr valign=\"top\">\n+ *   <tr style=\"vertical-align:top\">\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLDocument.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1923,1 +1923,1 @@\n-     * <th scope=\"row\" valign=\"top\">{@code <logger>.level}<\/th>\n+     * <th scope=\"row\" style=\"vertical-align:top\">{@code <logger>.level}<\/th>\n@@ -1944,1 +1944,1 @@\n-     * <th scope=\"row\" valign=\"top\">{@code <logger>.useParentHandlers}<\/th>\n+     * <th scope=\"row\" style=\"vertical-align:top\">{@code <logger>.useParentHandlers}<\/th>\n@@ -1958,1 +1958,1 @@\n-     * <th scope=\"row\" valign=\"top\">{@code <logger>.handlers}<\/th>\n+     * <th scope=\"row\" style=\"vertical-align:top\">{@code <logger>.handlers}<\/th>\n@@ -1982,1 +1982,1 @@\n-     * <th scope=\"row\" valign=\"top\">{@code <handler-name>.*}<\/th>\n+     * <th scope=\"row\" style=\"vertical-align:top\">{@code <handler-name>.*}<\/th>\n@@ -1994,1 +1994,1 @@\n-     * <th scope=\"row\" valign=\"top\">{@code config} and any other property<\/th>\n+     * <th scope=\"row\" style=\"vertical-align:top\">{@code config} and any other property<\/th>\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/LogManager.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n- * {@code java.util.prefs.PreferencesFactory} is defined, then it is\n+ * {@systemProperty java.util.prefs.PreferencesFactory} is defined, then it is\n","filename":"src\/java.prefs\/share\/classes\/java\/util\/prefs\/Preferences.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"RMID\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"RMID\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.rmi\/share\/man\/rmid.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"RMIREGISTRY\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"RMIREGISTRY\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.rmi\/share\/man\/rmiregistry.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JRUNSCRIPT\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JRUNSCRIPT\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/java.scripting\/share\/man\/jrunscript.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JAOTC\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JAOTC\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.aot\/share\/man\/jaotc.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import javax.lang.model.element.Name;\n-\n@@ -31,8 +29,0 @@\n- * {@preview Associated with pattern matching for instanceof, a preview feature of\n- *           the Java language.\n- *\n- *           This interface is associated with <i>pattern matching for instanceof<\/i>, a preview\n- *           feature of the Java language. Preview features\n- *           may be removed in a future release, or upgraded to permanent\n- *           features of the Java language.}\n- *\n@@ -41,1 +31,1 @@\n- * @since 14\n+ * @since 16\n@@ -46,2 +36,2 @@\n-     * Returns the type of the bind variable.\n-     * @return the type\n+     * Returns the binding variable.\n+     * @return the binding variable\n@@ -49,7 +39,1 @@\n-    Tree getType();\n-\n-    \/**\n-     * A binding variable name.\n-     * @return the name of the binding variable\n-     *\/\n-    Name getBinding();\n+    VariableTree getVariable();\n@@ -58,1 +42,0 @@\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/BindingPatternTree.java","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+     * @see #getPattern()\n@@ -56,8 +57,0 @@\n-     * {@preview Associated with pattern matching for instanceof, a preview feature of\n-     *           the Java language.\n-     *\n-     *           This method is associated with <i>pattern matching for instanceof<\/i>, a preview\n-     *           feature of the Java language. Preview features\n-     *           may be removed in a future release, or upgraded to permanent\n-     *           features of the Java language.}\n-     *\n@@ -80,1 +73,1 @@\n-     * @since 14\n+     * @since 16\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/InstanceOfTree.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,8 +29,0 @@\n- * {@preview Associated with pattern matching for instanceof, a preview feature of\n- *           the Java language.\n- *\n- *           This interface is associated with <i>pattern matching for instanceof<\/i>, a preview\n- *           feature of the Java language. Preview features\n- *           may be removed in a future release, or upgraded to permanent\n- *           features of the Java language.}\n- *\n@@ -38,1 +30,1 @@\n- * statements.\n+ * patterns.\n@@ -40,1 +32,1 @@\n- * @since 14\n+ * @since 16\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/PatternTree.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -223,8 +223,0 @@\n-         * {@preview Associated with pattern matching for instanceof, a preview feature of\n-         *           the Java language.\n-         *\n-         *           This enum constant is associated with <i>pattern matching for instanceof<\/i>, a preview\n-         *           feature of the Java language. Preview features\n-         *           may be removed in a future release, or upgraded to permanent\n-         *           features of the Java language.}\n-         *\n@@ -233,1 +225,1 @@\n-         * @since 14\n+         * @since 16\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/Tree.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -261,8 +261,0 @@\n-     * {@preview Associated with pattern matching for instanceof, a preview feature of\n-     *           the Java language.\n-     *\n-     *           This method is associated with <i>pattern matching for instanceof<\/i>, a preview\n-     *           feature of the Java language. Preview features\n-     *           may be removed in a future release, or upgraded to permanent\n-     *           features of the Java language.}\n-     *\n@@ -273,1 +265,1 @@\n-     * @since 14\n+     * @since 16\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/TreeVisitor.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-        return scan(node.getType(), p);\n+        return scan(node.getVariable(), p);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/TreeScanner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,3 +168,1 @@\n-        if (feature == Feature.PATTERN_MATCHING_IN_INSTANCEOF ||\n-            feature == Feature.REIFIABLE_TYPES_INSTANCEOF ||\n-            feature == Feature.SEALED_CLASSES)\n+        if (feature == Feature.SEALED_CLASSES)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1788,0 +1788,2 @@\n+        private final boolean isVarargs;\n+\n@@ -1795,0 +1797,6 @@\n+            \/* it is better to store the original information for this one, instead of relying\n+             * on the info in the type of the symbol. This is because on the presence of APs\n+             * the symbol will be blown out and we won't be able to know if the original\n+             * record component was declared varargs or not.\n+             *\/\n+            this.isVarargs = type.hasTag(TypeTag.ARRAY) && ((ArrayType)type).isVarargs();\n@@ -1800,1 +1808,1 @@\n-            return type.hasTag(TypeTag.ARRAY) && ((ArrayType)type).isVarargs();\n+            return isVarargs;\n@@ -1850,1 +1858,1 @@\n-            super(Flags.FINAL | Flags.HASINIT | Flags.MATCH_BINDING, name, type, owner);\n+            super(Flags.HASINIT | Flags.MATCH_BINDING, name, type, owner);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -954,1 +954,0 @@\n-                case BINDING_PATTERN:\n@@ -956,1 +955,1 @@\n-                    VarSymbol v = frame.hasTag(Tag.BINDINGPATTERN) ? ((JCBindingPattern) frame).symbol : ((JCVariableDecl) frame).sym;\n+                    VarSymbol v = ((JCVariableDecl) frame).sym;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -311,2 +311,0 @@\n-            } else if ((v.flags() & MATCH_BINDING) != 0) {\n-                log.error(pos, Errors.PatternBindingMayNotBeAssigned(v));\n@@ -3936,0 +3934,4 @@\n+            if (types.isSubtype(exprtype, clazztype) &&\n+                !exprtype.isErroneous() && !clazztype.isErroneous()) {\n+                log.error(tree.pos(), Errors.InstanceofPatternNoSubtype(clazztype, exprtype));\n+            }\n@@ -3937,1 +3939,1 @@\n-            typeTree = pattern.vartype;\n+            typeTree = pattern.var.vartype;\n@@ -3939,1 +3941,1 @@\n-                clazztype = chk.checkClassOrArrayType(pattern.vartype.pos(), clazztype);\n+                clazztype = chk.checkClassOrArrayType(pattern.var.vartype.pos(), clazztype);\n@@ -3965,1 +3967,3 @@\n-                log.error(typeTree.pos(), Errors.IllegalGenericTypeForInstof);\n+                log.error(DiagnosticFlag.SOURCE_LEVEL, tree.pos(),\n+                          Feature.REIFIABLE_TYPES_INSTANCEOF.error(this.sourceName));\n+                allowReifiableTypesInInstanceof = true;\n@@ -3978,6 +3982,8 @@\n-        tree.type = attribTree(tree.vartype, env, varInfo);\n-        VarSymbol v = tree.symbol = new BindingSymbol(tree.name, tree.vartype.type, env.info.scope.owner);\n-        if (chk.checkUnique(tree.pos(), v, env.info.scope)) {\n-            chk.checkTransparentVar(tree.pos(), v, env.info.scope);\n-        }\n-        annotate.queueScanTreeAndTypeAnnotate(tree.vartype, env, v, tree.pos());\n+        tree.type = tree.var.type = attribTree(tree.var.vartype, env, varInfo);\n+        BindingSymbol v = new BindingSymbol(tree.var.name, tree.var.vartype.type, env.info.scope.owner);\n+        v.pos = tree.pos;\n+        tree.var.sym = v;\n+        if (chk.checkUnique(tree.var.pos(), v, env.info.scope)) {\n+            chk.checkTransparentVar(tree.var.pos(), v, env.info.scope);\n+        }\n+        annotate.queueScanTreeAndTypeAnnotate(tree.var.vartype, env, v, tree.var.pos());\n@@ -3986,1 +3992,1 @@\n-        matchBindings = new MatchBindings(List.of(tree.symbol), List.nil());\n+        matchBindings = new MatchBindings(List.of(v), List.nil());\n@@ -5736,3 +5742,3 @@\n-            if (that.symbol == null) {\n-                that.symbol = new BindingSymbol(that.name, that.type, syms.noSymbol);\n-                that.symbol.adr = 0;\n+            if (that.var.sym == null) {\n+                that.var.sym = new BindingSymbol(that.var.name, that.var.type, syms.noSymbol);\n+                that.var.sym.adr = 0;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":21,"deletions":15,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1878,1 +1878,2 @@\n-                !inits.isMember(sym.adr)) {\n+                !inits.isMember(sym.adr) &&\n+                (sym.flags_field & CLASH) == 0) {\n@@ -2761,0 +2762,6 @@\n+        @Override\n+        public void visitBindingPattern(JCBindingPattern tree) {\n+            super.visitBindingPattern(tree);\n+            initParam(tree.var);\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -151,0 +151,1 @@\n+                    v2.flags_field |= CLASH;\n@@ -169,0 +170,1 @@\n+                        v.flags_field |= CLASH;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/MatchBindingsComputer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-            VarSymbol pattSym = patt.symbol;\n+            VarSymbol pattSym = patt.var.sym;\n@@ -163,1 +163,1 @@\n-                    patt.symbol.owner);\n+                    patt.var.sym.owner);\n@@ -169,1 +169,1 @@\n-            VarSymbol bindingVar = bindingContext.bindingDeclared(patt.symbol);\n+            VarSymbol bindingVar = bindingContext.bindingDeclared((BindingSymbol) patt.var.sym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -571,3 +571,1 @@\n-        if (tree.vartype != null) {\n-            tree.vartype = translate(tree.vartype, null);\n-        }\n+        tree.var = translate(tree.var, null);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -260,3 +260,1 @@\n-        result =\n-                scan(tree.vartype, that.vartype)\n-                        && tree.name == that.name;\n+        result = scan(tree.var, that.var);\n@@ -266,1 +264,0 @@\n-        equiv.put(tree.symbol, that.symbol);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TreeDiffer.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -109,6 +109,0 @@\n-    @Override\n-    public void visitBindingPattern(JCTree.JCBindingPattern tree) {\n-        symbolHashes.computeIfAbsent(tree.symbol, k -> symbolHashes.size());\n-        super.visitBindingPattern(tree);\n-    }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TreeHasher.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Arrays;\n@@ -201,0 +202,1 @@\n+            Set<ModuleSymbol> allModules = new HashSet<>(modules.allModules());\n@@ -202,2 +204,1 @@\n-            for (ModuleSymbol msym : modules.allModules()) {\n-                S sym = nameToSymbol(msym, nameStr, clazz);\n+            allModules.removeAll(modules.getRootModules());\n@@ -205,2 +206,3 @@\n-                if (sym == null)\n-                    continue;\n+            for (Set<ModuleSymbol> modules : Arrays.asList(modules.getRootModules(), allModules)) {\n+                for (ModuleSymbol msym : modules) {\n+                    S sym = nameToSymbol(msym, nameStr, clazz);\n@@ -208,9 +210,5 @@\n-                if (clazz == ClassSymbol.class) {\n-                    \/\/ Always include classes\n-                    found.add(sym);\n-                } else if (clazz == PackageSymbol.class) {\n-                    \/\/ In module mode, ignore the \"spurious\" empty packages that \"enclose\" module-specific packages.\n-                    \/\/ For example, if a module contains classes or package info in package p.q.r, it will also appear\n-                    \/\/ to have additional packages p.q and p, even though these packages have no content other\n-                    \/\/ than the subpackage.  We don't want those empty packages showing up in searches for p or p.q.\n-                    if (!sym.members().isEmpty() || ((PackageSymbol) sym).package_info != null) {\n+                    if (sym == null)\n+                        continue;\n+\n+                    if (clazz == ClassSymbol.class) {\n+                        \/\/ Always include classes\n@@ -218,0 +216,8 @@\n+                    } else if (clazz == PackageSymbol.class) {\n+                        \/\/ In module mode, ignore the \"spurious\" empty packages that \"enclose\" module-specific packages.\n+                        \/\/ For example, if a module contains classes or package info in package p.q.r, it will also appear\n+                        \/\/ to have additional packages p.q and p, even though these packages have no content other\n+                        \/\/ than the subpackage.  We don't want those empty packages showing up in searches for p or p.q.\n+                        if (!sym.members().isEmpty() || ((PackageSymbol) sym).package_info != null) {\n+                            found.add(sym);\n+                        }\n@@ -220,1 +226,0 @@\n-            }\n@@ -222,10 +227,14 @@\n-            if (found.size() == 1) {\n-                return Optional.of(found.iterator().next());\n-            } else if (found.size() > 1) {\n-                \/\/more than one element found, produce a note:\n-                if (alreadyWarnedDuplicates.add(methodName + \":\" + nameStr)) {\n-                    String moduleNames = found.stream()\n-                                              .map(s -> s.packge().modle)\n-                                              .map(m -> m.toString())\n-                                              .collect(Collectors.joining(\", \"));\n-                    log.note(Notes.MultipleElements(methodName, nameStr, moduleNames));\n+                if (found.size() == 1) {\n+                    return Optional.of(found.iterator().next());\n+                } else if (found.size() > 1) {\n+                    \/\/more than one element found, produce a note:\n+                    if (alreadyWarnedDuplicates.add(methodName + \":\" + nameStr)) {\n+                        String moduleNames = found.stream()\n+                                                  .map(s -> s.packge().modle)\n+                                                  .map(m -> m.toString())\n+                                                  .collect(Collectors.joining(\", \"));\n+                        log.note(Notes.MultipleElements(methodName, nameStr, moduleNames));\n+                    }\n+                    return Optional.empty();\n+                } else {\n+                    \/\/not found, try another option\n@@ -233,4 +242,0 @@\n-                return Optional.empty();\n-            } else {\n-                \/\/not found:\n-                return Optional.empty();\n@@ -238,0 +243,1 @@\n+            return Optional.empty();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java","additions":34,"deletions":28,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -935,1 +935,3 @@\n-                JCTree pattern = parseType();\n+                int typePos = token.pos;\n+                JCExpression type = parseType();\n+                JCTree pattern;\n@@ -938,1 +940,7 @@\n-                    pattern = toP(F.at(token.pos).BindingPattern(ident(), pattern));\n+                    JCModifiers mods = F.at(Position.NOPOS).Modifiers(0);\n+                    JCVariableDecl var = toP(F.at(token.pos).VarDef(mods, ident(), type, null));\n+                    TreeInfo.getStartPos(var);\n+                    pattern = toP(F.at(typePos).BindingPattern(var));\n+                    TreeInfo.getStartPos(pattern);\n+                } else {\n+                    pattern = type;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -548,4 +548,0 @@\n-# 0: symbol\n-compiler.err.pattern.binding.may.not.be.assigned=\\\n-    pattern binding {0} may not be assigned\n-\n@@ -623,3 +619,0 @@\n-compiler.err.illegal.generic.type.for.instof=\\\n-    illegal generic type for instanceof\n-\n@@ -1421,0 +1414,4 @@\n+# 0: type, 1: type\n+compiler.err.instanceof.pattern.no.subtype=\\\n+    pattern type {0} is a subtype of expression type {1}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2167,1 +2167,1 @@\n-        public JCTree getType() { return pattern instanceof JCPattern ? pattern.hasTag(BINDINGPATTERN) ? ((JCBindingPattern) pattern).vartype : null : pattern; }\n+        public JCTree getType() { return pattern instanceof JCPattern ? pattern.hasTag(BINDINGPATTERN) ? ((JCBindingPattern) pattern).var.vartype : null : pattern; }\n@@ -2191,3 +2191,0 @@\n-        public JCExpression constExpression() {\n-            return null;\n-        }\n@@ -2198,9 +2195,1 @@\n-        public Name name;\n-        public BindingSymbol symbol;\n-        public JCTree vartype;\n-\n-        protected JCBindingPattern(Name name, BindingSymbol symbol, JCTree vartype) {\n-            this.name = name;\n-            this.symbol = symbol;\n-            this.vartype = vartype;\n-        }\n+        public JCVariableDecl var;\n@@ -2208,3 +2197,2 @@\n-        @DefinedBy(Api.COMPILER_TREE)\n-        public Name getBinding() {\n-            return name;\n+        protected JCBindingPattern(JCVariableDecl var) {\n+            this.var = var;\n@@ -2214,2 +2202,2 @@\n-        public Tree getType() {\n-            return vartype;\n+        public VariableTree getVariable() {\n+            return var;\n@@ -3214,1 +3202,1 @@\n-        JCBindingPattern BindingPattern(Name name, JCTree vartype);\n+        JCBindingPattern BindingPattern(JCVariableDecl var);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -898,3 +898,1 @@\n-            printExpr(patt.vartype);\n-            print(\" \");\n-            print(patt.name);\n+            printExpr(patt.var);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/Pretty.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -496,2 +496,2 @@\n-        JCTree vartype = copy(t.vartype, p);\n-        return M.at(t.pos).BindingPattern(t.name, vartype);\n+        JCVariableDecl var = copy(t.var, p);\n+        return M.at(t.pos).BindingPattern(var);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeCopier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import com.sun.tools.javac.code.Symbol.VarSymbol;\n@@ -538,1 +539,1 @@\n-                return getStartPos(node.vartype);\n+                return getStartPos(node.var);\n@@ -929,2 +930,0 @@\n-        case BINDINGPATTERN:\n-            return ((JCBindingPattern) node).symbol;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -479,2 +479,2 @@\n-    public JCBindingPattern BindingPattern(Name name, JCTree vartype) {\n-        JCBindingPattern tree = new JCBindingPattern(name, null, vartype);\n+    public JCBindingPattern BindingPattern(JCVariableDecl var) {\n+        JCBindingPattern tree = new JCBindingPattern(var);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -307,2 +307,1 @@\n-        if (tree.vartype != null)\n-            scan(tree.vartype);\n+        scan(tree.var);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeScanner.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-        tree.vartype = translate(tree.vartype);\n+        tree.var = translate(tree.var);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeTranslator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JAVAC\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JAVAC\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.compiler\/share\/man\/javac.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"SERIALVER\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"SERIALVER\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.compiler\/share\/man\/serialver.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JHSDB\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JHSDB\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.hotspot.agent\/share\/man\/jhsdb.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        return username;\n+        return String.format(\"%s:%s\", realm, username);\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpPrincipal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-provides jdk.incubator.jpackage.internal.Bundler with\n-    jdk.incubator.jpackage.internal.LinuxAppBundler,\n-    jdk.incubator.jpackage.internal.LinuxDebBundler,\n-    jdk.incubator.jpackage.internal.LinuxRpmBundler;\n-\n","filename":"src\/jdk.incubator.jpackage\/linux\/classes\/module-info.java.extra","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-provides jdk.incubator.jpackage.internal.Bundler with\n-    jdk.incubator.jpackage.internal.MacAppBundler,\n-    jdk.incubator.jpackage.internal.MacAppStoreBundler,\n-    jdk.incubator.jpackage.internal.MacDmgBundler,\n-    jdk.incubator.jpackage.internal.MacPkgBundler;\n-\n","filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/module-info.java.extra","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,106 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.incubator.jpackage.internal;\n-\n-import java.nio.file.Path;\n-import java.text.MessageFormat;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Optional;\n-import java.util.stream.Collectors;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n-\n-final class FileAssociation {\n-    void verify() {\n-        if (extensions.isEmpty()) {\n-            Log.error(I18N.getString(\n-                    \"message.creating-association-with-null-extension\"));\n-        }\n-    }\n-\n-    static void verify(List<FileAssociation> associations) throws ConfigException {\n-        \/\/ only one mime type per association, at least one file extension\n-        int assocIdx = 0;\n-        for (var assoc : associations) {\n-            ++assocIdx;\n-            if (assoc.mimeTypes.isEmpty()) {\n-                String msgKey = \"error.no-content-types-for-file-association\";\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n-                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n-            }\n-\n-            if (assoc.mimeTypes.size() > 1) {\n-                String msgKey = \"error.too-many-content-types-for-file-association\";\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n-                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n-            }\n-\n-            assoc.verify();\n-        }\n-    }\n-\n-    static List<FileAssociation> fetchFrom(Map<String, ? super Object> params) {\n-        String launcherName = APP_NAME.fetchFrom(params);\n-\n-        return FILE_ASSOCIATIONS.fetchFrom(params).stream().filter(\n-                Objects::nonNull).map(fa -> {\n-                    FileAssociation assoc = new FileAssociation();\n-\n-                    assoc.launcherPath = Path.of(launcherName);\n-                    assoc.description = Optional.ofNullable(\n-                            FA_DESCRIPTION.fetchFrom(fa))\n-                            .orElse(launcherName + \" association\");\n-                    assoc.extensions = Optional.ofNullable(\n-                            FA_EXTENSIONS.fetchFrom(fa))\n-                            .orElse(Collections.emptyList());\n-                    assoc.mimeTypes = Optional.ofNullable(\n-                            FA_CONTENT_TYPE.fetchFrom(fa))\n-                            .orElse(Collections.emptyList());\n-\n-                    Path icon = FA_ICON.fetchFrom(fa);\n-                    if (icon != null) {\n-                        assoc.iconPath = icon;\n-                    }\n-\n-                    return assoc;\n-                }).collect(Collectors.toList());\n-    }\n-\n-    Path launcherPath;\n-    Path iconPath;\n-    List<String> mimeTypes;\n-    List<String> extensions;\n-    String description;\n-}\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/FileAssociation.java","additions":0,"deletions":106,"binary":false,"changes":106,"status":"deleted"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.incubator.jpackage.internal;\n-\n-import java.util.ResourceBundle;\n-\n-class I18N {\n-\n-    static String getString(String key) {\n-        if (PLATFORM.containsKey(key)) {\n-            return PLATFORM.getString(key);\n-        }\n-        return SHARED.getString(key);\n-    }\n-\n-    private static final ResourceBundle SHARED = ResourceBundle.getBundle(\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n-\n-    private static final ResourceBundle PLATFORM;\n-\n-    static {\n-        if (Platform.isLinux()) {\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.incubator.jpackage.internal.resources.LinuxResources\");\n-        } else if (Platform.isWindows()) {\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.incubator.jpackage.internal.resources.WinResources\");\n-        } else if (Platform.isMac()) {\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.incubator.jpackage.internal.resources.MacResources\");\n-        } else {\n-            throw new IllegalStateException(\"Unknwon platform\");\n-        }\n-    }\n-}\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/I18N.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * Defines the Java Packaging tool, jpackage.\n- *\n- * <p>jpackage is a tool for generating self-contained application bundles.\n- *\n- * <p> This module provides the equivalent of command-line access to <em>jpackage<\/em>\n- * via the {@link java.util.spi.ToolProvider ToolProvider} SPI.\n- * Instances of the tool can be obtained by calling\n- * {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst}\n- * or the {@link java.util.ServiceLoader service loader} with the name\n- * {@code \"jpackage\"}.\n- *\n- * @implNote The {@code jpackage} tool is not thread-safe. An application\n- * should not call either of the\n- * {@link java.util.spi.ToolProvider ToolProvider} {@code run} methods\n- * concurrently, even with separate {@code \"jpackage\"} {@code ToolProvider}\n- * instances, or undefined behavior may result.\n- *\n- *\n- * @moduleGraph\n- * @since 14\n- *\/\n-\n-module jdk.incubator.jpackage {\n-    requires jdk.jlink;\n-\n-    requires java.desktop;\n-\n-    uses jdk.incubator.jpackage.internal.Bundler;\n-    uses jdk.incubator.jpackage.internal.Bundlers;\n-\n-    provides jdk.incubator.jpackage.internal.Bundlers with\n-        jdk.incubator.jpackage.internal.BasicBundlers;\n-\n-    provides java.util.spi.ToolProvider\n-        with jdk.incubator.jpackage.internal.JPackageToolProvider;\n-}\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/module-info.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-provides jdk.incubator.jpackage.internal.Bundler with\n-    jdk.incubator.jpackage.internal.WinAppBundler,\n-    jdk.incubator.jpackage.internal.WinExeBundler,\n-    jdk.incubator.jpackage.internal.WinMsiBundler;\n-\n","filename":"src\/jdk.incubator.jpackage\/windows\/classes\/module-info.java.extra","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,221 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"JniUtils.h\"\n-#include \"FileUtils.h\"\n-#include \"ErrorHandling.h\"\n-\n-#pragma comment(lib, \"advapi32\")\n-\n-namespace {\n-\n-std::wstring GetLongPath(const std::wstring& path) {\n-    const std::wstring cleanPath = FileUtils::removeTrailingSlash(path);\n-    if (cleanPath.size() != path.size()) {\n-        return GetLongPath(cleanPath);\n-    }\n-\n-    enum { BUFFER_SIZE = 4096 };\n-\n-    std::wstring result;\n-\n-    TCHAR *pBuffer = new TCHAR[BUFFER_SIZE];\n-    if (pBuffer != NULL) {\n-        DWORD dwResult = GetLongPathName(path.c_str(), pBuffer, BUFFER_SIZE);\n-        if (dwResult > 0 && dwResult < BUFFER_SIZE) {\n-            result = std::wstring(pBuffer);\n-        } else {\n-            delete [] pBuffer;\n-            pBuffer = new TCHAR[dwResult];\n-            if (pBuffer != NULL) {\n-                DWORD dwResult2 =\n-                        GetLongPathName(path.c_str(), pBuffer, dwResult);\n-                if (dwResult2 == (dwResult - 1)) {\n-                    result = std::wstring(pBuffer);\n-                }\n-            }\n-        }\n-\n-        if (pBuffer != NULL) {\n-            delete [] pBuffer;\n-        }\n-    }\n-\n-    return result;\n-}\n-\n-} \/\/ namespace\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-#undef jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE\n-#define jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE 1L\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    readDwordValue\n-     * Signature: (ILjava\/lang\/String;Ljava\/lang\/String;I)I\n-     *\/\n-    JNIEXPORT jint JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_readDwordValue(\n-            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey,\n-            jstring jValue, jint defaultValue) {\n-        jint jResult = defaultValue;\n-\n-        JP_TRY;\n-\n-        if (key != jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n-            JP_THROW(\"Inavlid Windows registry key id\");\n-        }\n-\n-        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n-        const std::wstring value = jni::toUnicodeString(pEnv, jValue);\n-\n-        HKEY hSubKey = NULL;\n-        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n-                KEY_QUERY_VALUE, &hSubKey);\n-        if (status == ERROR_SUCCESS) {\n-            DWORD dwValue = 0;\n-            DWORD cbData = sizeof (DWORD);\n-            status = RegQueryValueEx(hSubKey, value.c_str(), NULL, NULL,\n-                    (LPBYTE) & dwValue, &cbData);\n-            if (status == ERROR_SUCCESS) {\n-                jResult = (jint) dwValue;\n-            }\n-\n-            RegCloseKey(hSubKey);\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return jResult;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    openRegistryKey\n-     * Signature: (ILjava\/lang\/String;)J\n-     *\/\n-    JNIEXPORT jlong JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_openRegistryKey(\n-            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey) {\n-\n-        JP_TRY;\n-\n-        if (key != jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n-            JP_THROW(\"Inavlid Windows registry key id\");\n-        }\n-\n-        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n-        HKEY hSubKey = NULL;\n-        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n-                KEY_QUERY_VALUE, &hSubKey);\n-        if (status == ERROR_SUCCESS) {\n-            return (jlong)hSubKey;\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return 0;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    enumRegistryValue\n-     * Signature: (JI)Ljava\/lang\/String;\n-     *\/\n-    JNIEXPORT jstring JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_enumRegistryValue(\n-            JNIEnv *pEnv, jclass c, jlong lKey, jint jIndex) {\n-\n-        JP_TRY;\n-\n-        \/\/ Max value name size per MSDN plus NULL\n-        enum { VALUE_NAME_SIZE = 16384 };\n-\n-        HKEY hKey = (HKEY)lKey;\n-        TCHAR valueName[VALUE_NAME_SIZE] = {0}; \/\/ Max size per MSDN plus NULL\n-        DWORD cchValueName = VALUE_NAME_SIZE;\n-        LSTATUS status = RegEnumValue(hKey, (DWORD)jIndex, valueName,\n-                &cchValueName, NULL, NULL, NULL, NULL);\n-        if (status == ERROR_SUCCESS) {\n-            size_t chLength = 0;\n-            if (StringCchLength(valueName, VALUE_NAME_SIZE, &chLength)\n-                    == S_OK) {\n-                return jni::toJString(pEnv, std::wstring(valueName, chLength));\n-            }\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return NULL;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    closeRegistryKey\n-     * Signature: (J)V\n-     *\/\n-    JNIEXPORT void JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_closeRegistryKey(\n-            JNIEnv *pEnc, jclass c, jlong lKey) {\n-        HKEY hKey = (HKEY)lKey;\n-        RegCloseKey(hKey);\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    comparePaths\n-     * Signature: (Ljava\/lang\/String;Ljava\/lang\/String;)Z\n-     *\/\n-     JNIEXPORT jboolean JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_comparePaths(\n-            JNIEnv *pEnv, jclass c, jstring jPath1, jstring jPath2) {\n-\n-         JP_TRY;\n-\n-         std::wstring path1 = jni::toUnicodeString(pEnv, jPath1);\n-         std::wstring path2 = jni::toUnicodeString(pEnv, jPath2);\n-\n-         path1 = GetLongPath(path1);\n-         path2 = GetLongPath(path2);\n-\n-         if (path1.empty() || path2.empty()) {\n-             return JNI_FALSE;\n-         }\n-\n-         if (tstrings::equals(path1, path2, tstrings::IGNORE_CASE)) {\n-             return JNI_TRUE;\n-         }\n-\n-         JP_CATCH_ALL;\n-\n-         return JNI_FALSE;\n-     }\n-\n-#ifdef __cplusplus\n-}\n-#endif\n","filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/WindowsRegistry.cpp","additions":0,"deletions":221,"binary":false,"changes":221,"status":"deleted"},{"patch":"@@ -1,155 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"ResourceEditor.h\"\n-#include \"ErrorHandling.h\"\n-#include \"IconSwap.h\"\n-#include \"VersionInfo.h\"\n-#include \"JniUtils.h\"\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    lockResource\n-     * Signature: (Ljava\/lang\/String;)J\n-     *\/\n-    JNIEXPORT jlong JNICALL\n-        Java_jdk_incubator_jpackage_internal_ExecutableRebrander_lockResource(\n-            JNIEnv *pEnv, jclass c, jstring jExecutable) {\n-\n-        JP_TRY;\n-\n-        const std::wstring executable = jni::toUnicodeString(pEnv, jExecutable);\n-\n-        return reinterpret_cast<jlong>(\n-                ResourceEditor::FileLock(executable).ownHandle(false).get());\n-\n-        JP_CATCH_ALL;\n-\n-        return 0;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    unlockResource\n-     * Signature: (J;)V\n-     *\/\n-    JNIEXPORT void JNICALL\n-        Java_jdk_incubator_jpackage_internal_ExecutableRebrander_unlockResource(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock) {\n-\n-        JP_TRY;\n-        ResourceEditor::FileLock(\n-                reinterpret_cast<HANDLE>(jResourceLock)).ownHandle(true);\n-        JP_CATCH_ALL;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    iconSwap\n-     * Signature: (J;Ljava\/lang\/String;)I\n-     *\/\n-    JNIEXPORT jint JNICALL\n-            Java_jdk_incubator_jpackage_internal_ExecutableRebrander_iconSwap(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jIconTarget) {\n-\n-        JP_TRY;\n-\n-        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n-\n-        const std::wstring iconTarget = jni::toUnicodeString(pEnv, jIconTarget);\n-\n-        if (ChangeIcon(lock.get(), iconTarget)) {\n-            return 0;\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return 1;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    versionSwap\n-     * Signature: (J;[Ljava\/lang\/String;)I\n-     *\/\n-    JNIEXPORT jint JNICALL\n-            Java_jdk_incubator_jpackage_internal_ExecutableRebrander_versionSwap(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock,\n-            jobjectArray jExecutableProperties) {\n-\n-        JP_TRY;\n-\n-        const tstring_array props = jni::toUnicodeStringArray(pEnv,\n-                jExecutableProperties);\n-\n-        VersionInfo vi;\n-\n-        tstring_array::const_iterator it = props.begin();\n-        tstring_array::const_iterator end = props.end();\n-        for (; it != end; ++it) {\n-            const tstring name = *it;\n-            const tstring value = *++it;\n-            vi.setProperty(name, value);\n-        }\n-\n-        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n-        vi.apply(lock);\n-\n-        return 0;\n-\n-        JP_CATCH_ALL;\n-\n-        return 1;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WinExeBundler\n-     * Method:    embedMSI\n-     * Signature: (J;Ljava\/lang\/String;)I\n-     *\/\n-    JNIEXPORT jint JNICALL Java_jdk_incubator_jpackage_internal_WinExeBundler_embedMSI(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jmsiPath) {\n-\n-        JP_TRY;\n-\n-        const std::wstring msiPath = jni::toUnicodeString(pEnv, jmsiPath);\n-\n-        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n-        ResourceEditor().id(L\"msi\").type(RT_RCDATA).apply(lock, msiPath);\n-\n-        return 0;\n-\n-        JP_CATCH_ALL;\n-\n-        return 1;\n-    }\n-\n-#ifdef __cplusplus\n-}\n-#endif\n","filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/jpackage.cpp","additions":0,"deletions":155,"binary":false,"changes":155,"status":"deleted"},{"patch":"@@ -125,1 +125,5 @@\n-        return new AArch64HotSpotRegisterConfig(target, config.useCompressedOops);\n+        \/\/ ARMv8 defines r18 as being available to the platform ABI. Windows\n+        \/\/ and Darwin use it for such. Linux doesn't assign it and thus r18 can\n+        \/\/ be used as an additional register.\n+        boolean canUsePlatformRegister = config.linuxOs;\n+        return new AArch64HotSpotRegisterConfig(target, config.useCompressedOops, canUsePlatformRegister);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotJVMCIBackendFactory.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import static jdk.vm.ci.aarch64.AArch64.r18;\n@@ -125,0 +126,6 @@\n+    \/**\n+     * The platform ABI can use r18 to carry inter-procedural state (e.g. thread\n+     * context). If not defined as such by the platform ABI, it can be used as\n+     * additional temporary register.\n+     *\/\n+    public static final Register platformRegister = r18;\n@@ -131,1 +138,1 @@\n-    private static RegisterArray initAllocatable(Architecture arch, boolean reserveForHeapBase) {\n+    private static RegisterArray initAllocatable(Architecture arch, boolean reserveForHeapBase, boolean canUsePlatformRegister) {\n@@ -133,1 +140,1 @@\n-        Register[] registers = new Register[allRegisters.size() - reservedRegisters.size() - (reserveForHeapBase ? 1 : 0)];\n+        Register[] registers = new Register[allRegisters.size() - reservedRegisters.size() - (reserveForHeapBase ? 1 : 0) - (!canUsePlatformRegister ? 1 : 0)];\n@@ -142,0 +149,3 @@\n+            if (!canUsePlatformRegister && reg.equals(platformRegister)) {\n+                continue;\n+            }\n@@ -155,2 +165,2 @@\n-    public AArch64HotSpotRegisterConfig(TargetDescription target, boolean useCompressedOops) {\n-        this(target, initAllocatable(target.arch, useCompressedOops));\n+    public AArch64HotSpotRegisterConfig(TargetDescription target, boolean useCompressedOops, boolean canUsePlatformRegister) {\n+        this(target, initAllocatable(target.arch, useCompressedOops, canUsePlatformRegister));\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotRegisterConfig.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -407,0 +407,8 @@\n+        if (obj instanceof Class && field.getName().equals(\"componentType\")) {\n+            Class<?> clazz = (Class<?>) obj;\n+            if (!clazz.isArray()) {\n+                \/\/ Class.componentType for non-array classes can transiently contain an int[] that's\n+                \/\/ used for locking so always return null to mimic Class.getComponentType()\n+                return JavaConstant.NULL_POINTER;\n+            }\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotJDKReflection.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import sun.security.tools.jarsigner.TimestampedSigner;\n@@ -125,1 +124,0 @@\n-        boolean directsign = false;\n@@ -361,4 +359,0 @@\n-         * <li>\"directsign\": \"true\" if the signature is calculated on the\n-         * content directly, \"false\" if it's calculated on signed attributes\n-         * which itself is calculated from the content and stored in the\n-         * signer's SignerInfo. Default \"false\".\n@@ -398,3 +392,0 @@\n-                case \"directsign\":\n-                    this.directsign = parseBoolean(\"directsign\", value);\n-                    break;\n@@ -513,1 +504,0 @@\n-    private final boolean directsign;\n@@ -564,3 +554,6 @@\n-        this.directsign = this.altSigner != null\n-                ? true\n-                : builder.directsign;\n+        \/\/ altSigner cannot support modern algorithms like RSASSA-PSS and EdDSA\n+        if (altSigner != null\n+                && !sigalg.toUpperCase(Locale.ENGLISH).contains(\"WITH\")) {\n+            throw new IllegalArgumentException(\n+                    \"Customized ContentSigner is not supported for \" + sigalg);\n+        }\n@@ -669,2 +662,0 @@\n-            case \"directsign\":\n-                return Boolean.toString(directsign);\n@@ -858,14 +849,1 @@\n-        \/\/ Use new method if directSign is false or it's a modern\n-        \/\/ algorithm not supported by existing ContentSigner.\n-        \/\/ Make this always true after we remove ContentSigner.\n-        boolean useNewMethod = !directsign\n-                || !sigalg.toUpperCase(Locale.ENGLISH).contains(\"WITH\");\n-\n-        \/\/ For newer sigalg without \"with\", always use the new PKCS7\n-        \/\/ generateToken method. Otherwise, use deprecated ContentSigner.\n-        if (useNewMethod) {\n-            if (altSigner != null) {\n-                throw new IllegalArgumentException(directsign\n-                        ? (\"Customized ContentSigner is not supported for \" + sigalg)\n-                        : \"Customized ContentSigner does not support authenticated attributes\");\n-            }\n+        if (altSigner == null) {\n@@ -892,1 +870,1 @@\n-                    content, internalsf, directsign, timestamper);\n+                    content, internalsf, false, timestamper);\n@@ -904,3 +882,1 @@\n-            ContentSigner signingMechanism = (altSigner != null)\n-                    ? loadSigningMechanism(altSigner, altSignerPath)\n-                    : new TimestampedSigner();\n+            ContentSigner signingMechanism = loadSigningMechanism(altSigner, altSignerPath);\n","filename":"src\/jdk.jartool\/share\/classes\/jdk\/security\/jarsigner\/JarSigner.java","additions":9,"deletions":33,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -166,1 +166,0 @@\n-    boolean directSign = false; \/\/ sign SF directly or thru signedAttrs\n@@ -476,2 +475,0 @@\n-            } else if (collator.compare(flags, \"-directsign\") ==0) {\n-                directSign = true;\n@@ -666,3 +663,0 @@\n-        System.out.println(rb.getString\n-                (\".directsign.sign.the.SF.file.directly.no.signerinfo.signedattributes\"));\n-        System.out.println();\n@@ -1776,1 +1770,0 @@\n-        builder.setProperty(\"directsign\", Boolean.toString(directSign));\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -104,2 +104,0 @@\n-        {\".directsign.sign.the.SF.file.directly.no.signerinfo.signedattributes\",\n-                \"[-directsign]               sign the .SF file directly (no SignerInfo signedAttributes)\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,113 +0,0 @@\n-\/*\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.security.tools.jarsigner;\n-\n-import java.io.IOException;\n-import java.net.URI;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.cert.CertificateException;\n-import java.security.cert.X509Certificate;\n-\n-import com.sun.jarsigner.*;\n-import sun.security.pkcs.PKCS7;\n-\n-\/**\n- * This class implements a content signing service.\n- * It generates a timestamped signature for a given content according to\n- * <a href=\"http:\/\/www.ietf.org\/rfc\/rfc3161.txt\">RFC 3161<\/a>.\n- * The signature along with a trusted timestamp and the signer's certificate\n- * are all packaged into a standard PKCS #7 Signed Data message.\n- *\n- * @author Vincent Ryan\n- *\/\n-@Deprecated(since=\"16\", forRemoval=true)\n-@SuppressWarnings(\"removal\")\n-public final class TimestampedSigner extends ContentSigner {\n-\n-    \/**\n-     * Instantiates a content signer that supports timestamped signatures.\n-     *\/\n-    public TimestampedSigner() {\n-    }\n-\n-    \/**\n-     * Generates a PKCS #7 signed data message that includes a signature\n-     * timestamp.\n-     * This method is used when a signature has already been generated.\n-     * The signature, a signature timestamp, the signer's certificate chain,\n-     * and optionally the content that was signed, are packaged into a PKCS #7\n-     * signed data message.\n-     *\n-     * @param params The non-null input parameters.\n-     * @param omitContent true if the content should be omitted from the\n-     *        signed data message. Otherwise the content is included.\n-     * @param applyTimestamp true if the signature should be timestamped.\n-     *        Otherwise timestamping is not performed.\n-     * @return A PKCS #7 signed data message including a signature timestamp.\n-     * @throws NoSuchAlgorithmException The exception is thrown if the signature\n-     *         algorithm is unrecognised.\n-     * @throws CertificateException The exception is thrown if an error occurs\n-     *         while processing the signer's certificate or the TSA's\n-     *         certificate.\n-     * @throws IOException The exception is thrown if an error occurs while\n-     *         generating the signature timestamp or while generating the signed\n-     *         data message.\n-     * @throws NullPointerException The exception is thrown if parameters is\n-     *         null.\n-     *\/\n-    public byte[] generateSignedData(ContentSignerParameters params,\n-        boolean omitContent, boolean applyTimestamp)\n-            throws NoSuchAlgorithmException, CertificateException, IOException {\n-\n-        if (params == null) {\n-            throw new NullPointerException();\n-        }\n-\n-        X509Certificate[] signerChain = params.getSignerCertificateChain();\n-        byte[] signature = params.getSignature();\n-\n-        \/\/ Include or exclude content\n-        byte[] content = (omitContent == true) ? null : params.getContent();\n-\n-        URI tsaURI = null;\n-        if (applyTimestamp) {\n-            tsaURI = params.getTimestampingAuthority();\n-            if (tsaURI == null) {\n-                \/\/ Examine TSA cert\n-                tsaURI = PKCS7.getTimestampingURI(\n-                    params.getTimestampingAuthorityCertificate());\n-                if (tsaURI == null) {\n-                    throw new CertificateException(\n-                        \"Subject Information Access extension not found\");\n-                }\n-            }\n-        }\n-        return PKCS7.generateSignedData(signature, signerChain, content,\n-                                        params.getSignatureAlgorithm(), tsaURI,\n-                                        params.getTSAPolicyID(),\n-                                        params.getTSADigestAlg());\n-    }\n-}\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/TimestampedSigner.java","additions":0,"deletions":113,"binary":false,"changes":113,"status":"deleted"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JAR\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JAR\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-.\\\"t\n@@ -11,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -23,0 +22,1 @@\n+.\\\"t\n@@ -25,1 +25,1 @@\n-.TH \"JARSIGNER\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JARSIGNER\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n@@ -293,2 +293,2 @@\n-the following algorithms files depending on the type and size of the\n-private key:\n+the following algorithms and block file extensions depending on the type\n+and size of the private key:\n@@ -298,1 +298,1 @@\n-l l l.\n+l l l l.\n@@ -305,0 +305,2 @@\n+T}@T{\n+block file extension\n@@ -313,0 +315,2 @@\n+T}@T{\n+\\&.DSA\n@@ -320,0 +324,2 @@\n+T}@T{\n+\\&.RSA\n@@ -326,0 +332,1 @@\n+T}@T{\n@@ -332,0 +339,1 @@\n+T}@T{\n@@ -339,0 +347,2 @@\n+T}@T{\n+\\&.EC\n@@ -345,0 +355,1 @@\n+T}@T{\n@@ -351,0 +362,40 @@\n+T}@T{\n+T}\n+T{\n+RSASSA\\-PSS\n+T}@T{\n+<= 3072\n+T}@T{\n+RSASSA\\-PSS (with SHA\\-256)\n+T}@T{\n+\\&.RSA\n+T}\n+T{\n+T}@T{\n+<= 7680\n+T}@T{\n+RSASSA\\-PSS (with SHA\\-384)\n+T}@T{\n+T}\n+T{\n+T}@T{\n+> 7680\n+T}@T{\n+RSASSA\\-PSS (with SHA\\-512)\n+T}@T{\n+T}\n+T{\n+EdDSA\n+T}@T{\n+255\n+T}@T{\n+Ed25519\n+T}@T{\n+\\&.EC\n+T}\n+T{\n+T}@T{\n+448\n+T}@T{\n+Ed448\n+T}@T{\n@@ -353,0 +404,7 @@\n+.IP \\[bu] 2\n+If an RSASSA\\-PSS key is encoded with parameters, then jarsigner will\n+use the same parameters in the signature.\n+Otherwise, jarsigner will use parameters that are determined by the size\n+of the key as specified in the table above.\n+For example, an 3072\\-bit RSASSA\\-PSS key will use RSASSA\\-PSS as the\n+signature algorithm and SHA\\-256 as the hash and MGF1 algorithms.\n@@ -396,1 +454,2 @@\n-are named \\f[CB]MKSIGN.SF\\f[R] and \\f[CB]MKSIGN.DSA\\f[R]\n+are named \\f[CB]MKSIGN.SF\\f[R] and \\f[CB]MKSIGN.RSA\\f[R].\n+In this document, we assume the signer always uses an RSA key.\n@@ -399,3 +458,3 @@\n-base file name for the \\f[CB]\\&.SF\\f[R] and \\f[CB]\\&.DSA\\f[R] files is the\n-first 8 characters of the alias name specified on the command line, all\n-converted to uppercase.\n+base file name for the \\f[CB]\\&.SF\\f[R] and the signature block files is\n+the first 8 characters of the alias name specified on the command line,\n+all converted to uppercase.\n@@ -445,1 +504,2 @@\n-\\f[CB]\\&.EC\\f[R], depending on the digest algorithm used.\n+\\f[CB]\\&.EC\\f[R], depending on the key algorithm used.\n+See the table in \\f[B]Supported Algorithms\\f[R].\n@@ -471,3 +531,3 @@\n-block (\\f[CB]\\&.DSA\\f[R]) file was generated using the private key\n-corresponding to the public key whose certificate (or certificate chain)\n-also appears in the \\f[CB]\\&.DSA\\f[R] file.\n+block file was generated using the private key corresponding to the\n+public key whose certificate (or certificate chain) also appears in the\n+signature block file.\n@@ -546,1 +606,1 @@\n-\\f[CB]\\&.SF\\f[R] and \\f[CB]\\&.DSA\\f[R] files in the resulting JAR file, one\n+\\f[CB]\\&.SF\\f[R] and signature block files in the resulting JAR file, one\n@@ -554,1 +614,1 @@\n-SUSAN.DSA\n+SUSAN.RSA\n@@ -556,1 +616,1 @@\n-KEVIN.DSA\n+KEVIN.RSA\n@@ -704,1 +764,1 @@\n-and \\f[CB]\\&.DSA\\f[R] files.\n+and signature block files.\n@@ -706,2 +766,2 @@\n-\\f[CB]\\&.SF\\f[R] and \\f[CB]\\&.DSA\\f[R] files are named \\f[CB]DUKESIGN.SF\\f[R]\n-and \\f[CB]DUKESIGN.DSA\\f[R], and placed in the \\f[CB]META\\-INF\\f[R]\n+\\f[CB]\\&.SF\\f[R] and signature block files are named \\f[CB]DUKESIGN.SF\\f[R]\n+and \\f[CB]DUKESIGN.RSA\\f[R], and placed in the \\f[CB]META\\-INF\\f[R]\n@@ -715,1 +775,1 @@\n-\\f[CB]\\&.SF\\f[R] and \\f[CB]\\&.DSA\\f[R] file names.\n+\\f[CB]\\&.SF\\f[R] and signature block file names.\n@@ -718,1 +778,1 @@\n-base file name for the \\f[CB]\\&.SF\\f[R] and \\f[CB]\\&.DSA\\f[R] files is the\n+base file name for the \\f[CB]\\&.SF\\f[R] and signature block files is the\n@@ -807,1 +867,1 @@\n-the \\f[CB]\\&.DSA\\f[R] file) that certifies the signer\\[aq]s public key,\n+the signature block file) that certifies the signer\\[aq]s public key,\n@@ -888,3 +948,3 @@\n-In the past, the \\f[CB]\\&.DSA\\f[R] (signature block) file generated when a\n-JAR file was signed included a complete encoded copy of the\n-\\f[CB]\\&.SF\\f[R] file (signature file) also generated.\n+In the past, the signature block file generated when a JAR file was\n+signed included a complete encoded copy of the \\f[CB]\\&.SF\\f[R] file\n+(signature file) also generated.\n@@ -892,1 +952,1 @@\n-To reduce the overall size of the output JAR file, the \\f[CB]\\&.DSA\\f[R]\n+To reduce the overall size of the output JAR file, the signature block\n@@ -903,0 +963,9 @@\n+.B \\f[CB]\\-directsign\\f[R]\n+By default, jarsigner stores the hash of the \\f[CB]\\&.SF\\f[R] file and\n+possibly other information in a SignerInfo signedAttributes field, and\n+then calculates the signature on this field.\n+If this option is set, no SignerInfo signedAttributes field is generated\n+and the signature is calculated on the \\f[CB]\\&.SF\\f[R] file directly.\n+.RS\n+.RE\n+.TP\n@@ -1216,0 +1285,9 @@\n+.B extraAttributesDetected\n+The POSIX file permissions and\/or symlink attributes are detected during\n+signing or verifying a JAR file.\n+The \\f[CB]jarsigner\\f[R] tool preserves these attributes in the newly\n+signed file but warns that these attributes are unsigned and not\n+protected by the signature.\n+.RS\n+.RE\n+.TP\n@@ -1254,1 +1332,1 @@\n-generated \\f[CB]\\&.SF\\f[R] and \\f[CB]\\&.DSA\\f[R] files to be placed in the\n+generated \\f[CB]\\&.SF\\f[R] and signature block files to be placed in the\n@@ -1256,1 +1334,1 @@\n-They are named \\f[CB]JANE.SF\\f[R] and \\f[CB]JANE.DSA\\f[R].\n+They are named \\f[CB]JANE.SF\\f[R] and \\f[CB]JANE.RSA\\f[R].\n","filename":"src\/jdk.jartool\/share\/man\/jarsigner.1","additions":107,"deletions":29,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-    protected Navigation navBar;\n-\n@@ -60,26 +58,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.OVERVIEW, path);\n-    }\n-\n-    \/**\n-     * Adds the top text (from the -top option), the upper\n-     * navigation bar, and then the title (from the\"-header\"\n-     * option), at the top of page.\n-     *\n-     * @param header the documentation tree to which the navigation bar header will be added\n-     *\/\n-    protected void addNavigationBarHeader(Content header) {\n-        addTop(header);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        header.add(navBar.getContent(Navigation.Position.TOP));\n-    }\n-\n-    \/**\n-     * Adds the lower navigation bar and the bottom text\n-     * (from the -bottom option) at the bottom of page.\n-     *\n-     * @param footer the documentation tree to which the navigation bar footer will be added\n-     *\/\n-    protected void addNavigationBarFooter(Content footer) {\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n@@ -126,2 +98,0 @@\n-        Content header = new ContentBuilder();\n-        addNavigationBarHeader(header);\n@@ -131,2 +101,0 @@\n-        Content footer = HtmlTree.FOOTER();\n-        addNavigationBarFooter(footer);\n@@ -134,1 +102,1 @@\n-                .setHeader(header)\n+                .setHeader(getHeader(PageMode.OVERVIEW))\n@@ -136,1 +104,1 @@\n-                .setFooter(footer));\n+                .setFooter(getFooter()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractOverviewIndexWriter.java","additions":2,"deletions":34,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import com.sun.source.doctree.DocTree;\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -96,5 +96,0 @@\n-        Content header = new ContentBuilder();\n-        addTop(header);\n-        Navigation navBar = new Navigation(null, configuration, PageMode.ALL_CLASSES, path);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        header.add(navBar.getContent(Navigation.Position.TOP));\n@@ -105,4 +100,0 @@\n-        Content footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n@@ -111,1 +102,1 @@\n-                .setHeader(header)\n+                .setHeader(getHeader(PageMode.ALL_CLASSES))\n@@ -113,1 +104,1 @@\n-                .setFooter(footer));\n+                .setFooter(getFooter()));\n@@ -168,1 +159,1 @@\n-            List<? extends DocTree> tags = utils.getDeprecatedTrees(klass);\n+            List<? extends DeprecatedTree> tags = utils.getDeprecatedTrees(klass);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -77,5 +77,0 @@\n-        Content headerContent = new ContentBuilder();\n-        Navigation navBar = new Navigation(null, configuration, PageMode.ALL_PACKAGES, path);\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -88,4 +83,0 @@\n-        Content footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n@@ -94,1 +85,1 @@\n-                .setHeader(headerContent)\n+                .setHeader(getHeader(PageMode.ALL_PACKAGES))\n@@ -97,1 +88,1 @@\n-                .setFooter(footer));\n+                .setFooter(getFooter()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllPackagesIndexWriter.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -97,1 +97,0 @@\n-    private final Navigation navBar;\n@@ -150,1 +149,0 @@\n-        this.navBar = new Navigation(typeElement, configuration, PageMode.USE, path);\n@@ -230,5 +228,1 @@\n-        HtmlTree footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n-        bodyContents.setFooter(footer);\n+        bodyContents.setFooter(getFooter());\n@@ -428,11 +422,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        Content mdleLinkContent = getModuleLink(utils.elementUtils.getModuleOf(typeElement),\n-                contents.moduleLabel);\n-        navBar.setNavLinkModule(mdleLinkContent);\n-        Content classLinkContent = getLink(new LinkInfoImpl(\n-                configuration, LinkInfoImpl.Kind.CLASS_USE_HEADER, typeElement)\n-                .label(resources.getText(\"doclet.Class\")));\n-        navBar.setNavLinkClass(classLinkContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -446,1 +429,1 @@\n-        bodyContents.setHeader(headerContent).addMainContent(div);\n+        bodyContents.setHeader(getHeader(PageMode.USE, typeElement)).addMainContent(div);\n@@ -449,0 +432,12 @@\n+\n+    @Override\n+    protected Navigation getNavBar(PageMode pageMode, Element element) {\n+        Content mdleLinkContent = getModuleLink(utils.elementUtils.getModuleOf(typeElement),\n+                contents.moduleLabel);\n+        Content classLinkContent = getLink(new LinkInfoImpl(\n+                configuration, LinkInfoImpl.Kind.CLASS_USE_HEADER, typeElement)\n+                .label(resources.getText(\"doclet.Class\")));\n+        return super.getNavBar(pageMode, element)\n+                .setNavLinkModule(mdleLinkContent)\n+                .setNavLinkClass(classLinkContent);\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -92,2 +93,0 @@\n-    private final Navigation navBar;\n-\n@@ -105,1 +104,0 @@\n-        this.navBar = new Navigation(typeElement, configuration, PageMode.CLASS, path);\n@@ -111,8 +109,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(typeElement),\n-                contents.moduleLabel);\n-        navBar.setNavLinkModule(linkContent);\n-        navBar.setMemberSummaryBuilder(configuration.getBuilderFactory().getMemberSummaryBuilder(this));\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -148,1 +138,1 @@\n-        bodyContents.setHeader(headerContent)\n+        bodyContents.setHeader(getHeader(PageMode.CLASS, typeElement))\n@@ -159,0 +149,9 @@\n+    @Override\n+    protected Navigation getNavBar(PageMode pageMode, Element element) {\n+        Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(element),\n+                contents.moduleLabel);\n+        return super.getNavBar(pageMode, element)\n+                .setNavLinkModule(linkContent)\n+                .setMemberSummaryBuilder(configuration.getBuilderFactory().getMemberSummaryBuilder(this));\n+    }\n+\n@@ -162,5 +161,1 @@\n-        Content htmlTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        htmlTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(htmlTree);\n-        bodyContents.setFooter(htmlTree);\n+        bodyContents.setFooter(getFooter());\n@@ -510,1 +505,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(typeElement, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(typeElement);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -76,2 +76,0 @@\n-    private final Navigation navBar;\n-\n@@ -91,1 +89,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.CONSTANT_VALUES, path);\n@@ -99,5 +96,1 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n-        bodyContents.setHeader(headerContent);\n+        bodyContents.setHeader(getHeader(PageMode.CONSTANT_VALUES));\n@@ -274,5 +267,1 @@\n-        Content htmlTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        htmlTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(htmlTree);\n-        bodyContents.setFooter(htmlTree);\n+        bodyContents.setFooter(getFooter());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -209,2 +210,0 @@\n-    private final Navigation navBar;\n-\n@@ -220,1 +219,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.DEPRECATED, path);\n@@ -297,5 +295,1 @@\n-        HtmlTree htmlTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        htmlTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(htmlTree);\n-        bodyContents.setFooter(htmlTree);\n+        bodyContents.setFooter(getFooter());\n@@ -358,5 +352,1 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n-        bodyContents.setHeader(headerContent);\n+        bodyContents.setHeader(getHeader(PageMode.DEPRECATED));\n@@ -400,1 +390,1 @@\n-                List<? extends DocTree> tags = utils.getDeprecatedTrees(e);\n+                List<? extends DeprecatedTree> tags = utils.getDeprecatedTrees(e);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -67,1 +67,0 @@\n-    private Navigation navBar;\n@@ -199,1 +198,3 @@\n-        HtmlDocletWriter docletWriter = new DocFileWriter(configuration, dfilePath, element);\n+        PackageElement pkg = dfElement.getPackageElement();\n+\n+        HtmlDocletWriter docletWriter = new DocFileWriter(configuration, dfilePath, element, pkg);\n@@ -207,11 +208,0 @@\n-        PackageElement pkg = dfElement.getPackageElement();\n-        this.navBar = new Navigation(element, configuration, PageMode.DOC_FILE, docletWriter.path);\n-        Content headerContent = new ContentBuilder();\n-        docletWriter.addTop(headerContent);\n-        Content mdleLinkContent = docletWriter.getModuleLink(utils.elementUtils.getModuleOf(pkg),\n-                docletWriter.contents.moduleLabel);\n-        navBar.setNavLinkModule(mdleLinkContent);\n-        Content pkgLinkContent = docletWriter.getPackageLink(pkg, docletWriter.contents.packageLabel);\n-        navBar.setNavLinkPackage(pkgLinkContent);\n-        navBar.setUserHeader(docletWriter.getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -223,4 +213,0 @@\n-        navBar.setUserFooter(docletWriter.getUserHeaderFooter(false));\n-        Content footer = HtmlTree.FOOTER();\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        docletWriter.addBottom(footer);\n@@ -228,1 +214,1 @@\n-                .setHeader(headerContent)\n+                .setHeader(docletWriter.getHeader(PageMode.DOC_FILE, element))\n@@ -230,1 +216,1 @@\n-                .setFooter(footer));\n+                .setFooter(docletWriter.getFooter()));\n@@ -294,0 +280,1 @@\n+        private final PackageElement pkg;\n@@ -298,3 +285,4 @@\n-         * @param configuration the configuration of this doclet.\n-         * @param path          the file to be generated.\n-         * @param e             the anchoring element.\n+         * @param configuration the configuration of this doclet\n+         * @param path          the file to be generated\n+         * @param e             the anchoring element\n+         * @param pkg           the package containing the doc file\n@@ -302,1 +290,1 @@\n-        public DocFileWriter(HtmlConfiguration configuration, DocPath path, Element e) {\n+        public DocFileWriter(HtmlConfiguration configuration, DocPath path, Element e, PackageElement pkg) {\n@@ -311,0 +299,11 @@\n+            this.pkg = pkg;\n+        }\n+\n+        @Override\n+        protected Navigation getNavBar(PageMode pageMode, Element element) {\n+            Content mdleLinkContent = getModuleLink(utils.elementUtils.getModuleOf(element),\n+                    contents.moduleLabel);\n+            Content pkgLinkContent = getPackageLink(pkg, contents.packageLabel);\n+            return super.getNavBar(pageMode, element)\n+                    .setNavLinkModule(mdleLinkContent)\n+                    .setNavLinkPackage(pkgLinkContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandlerImpl.java","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -54,2 +54,0 @@\n-    private final Navigation navBar;\n-\n@@ -70,1 +68,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.HELP, path);\n@@ -96,4 +93,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -102,4 +95,0 @@\n-        HtmlTree footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n@@ -107,1 +96,1 @@\n-                .setHeader(headerContent)\n+                .setHeader(getHeader(PageMode.HELP))\n@@ -109,1 +98,1 @@\n-                .setFooter(footer));\n+                .setFooter(getFooter()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -489,1 +490,2 @@\n-     * Get user specified header and the footer.\n+     * Returns a {@code <header>} element, containing the user \"top\" text, if any,\n+     * amd the main navigation bar.\n@@ -491,2 +493,3 @@\n-     * @param header if true print the user provided header else print the\n-     * user provided footer.\n+     * @param pageMode the pageMode used to configure the navigation bar\n+     *\n+     * @return the {@code <header>} element\n@@ -494,13 +497,17 @@\n-    public Content getUserHeaderFooter(boolean header) {\n-        String content;\n-        if (header) {\n-            content = replaceDocRootDir(options.header());\n-        } else {\n-            if (options.footer().length() != 0) {\n-                content = replaceDocRootDir(options.footer());\n-            } else {\n-                content = replaceDocRootDir(options.header());\n-            }\n-        }\n-        Content rawContent = new RawHtml(content);\n-        return rawContent;\n+    protected HtmlTree getHeader(Navigation.PageMode pageMode) {\n+        return getHeader(pageMode, null);\n+    }\n+\n+    \/**\n+     * Returns a {@code <header>} element, containing the user \"top\" text, if any,\n+     * amd the main navigation bar.\n+     *\n+     * @param pageMode the page mode used to configure the navigation bar\n+     * @param element  the element used to configure the navigation bar\n+     *\n+     * @return the {@code <header>} element\n+     *\/\n+    protected HtmlTree getHeader(Navigation.PageMode pageMode, Element element) {\n+        return HtmlTree.HEADER()\n+                .add(new RawHtml(replaceDocRootDir(options.top())))\n+                .add(getNavBar(pageMode, element).getContent());\n@@ -510,1 +517,3 @@\n-     * Adds the user specified top.\n+     * Returns a basic navigation bar for a kind of page and element.\n+     *\n+     * @apiNote the result may be further configured by overriding this method\n@@ -512,1 +521,3 @@\n-     * @param htmlTree the content tree to which user specified top will be added\n+     * @param pageMode the page mode\n+     * @param element  the defining element for the navigation bar, or {@code null} if none\n+     * @return the basic navigation bar\n@@ -514,3 +525,3 @@\n-    public void addTop(Content htmlTree) {\n-        Content top = new RawHtml(replaceDocRootDir(options.top()));\n-        htmlTree.add(top);\n+    protected Navigation getNavBar(Navigation.PageMode pageMode, Element element) {\n+        return new Navigation(element, configuration, pageMode, path)\n+                .setUserHeader(new RawHtml(replaceDocRootDir(options.header())));\n@@ -520,1 +531,2 @@\n-     * Adds the user specified bottom.\n+     * Returns a {@code <footer>} element containing the user's \"bottom\" text,\n+     * or {@code null} if there is no such text.\n@@ -522,1 +534,1 @@\n-     * @param htmlTree the content tree to which user specified bottom will be added\n+     * @return the {@code <footer>} element or {@code null}.\n@@ -524,5 +536,9 @@\n-    public void addBottom(Content htmlTree) {\n-        Content bottom = new RawHtml(replaceDocRootDir(options.bottom()));\n-        Content small = HtmlTree.SMALL(bottom);\n-        Content p = HtmlTree.P(HtmlStyle.legalCopy, small);\n-        htmlTree.add(p);\n+    public HtmlTree getFooter() {\n+        String bottom = options.bottom();\n+        return (bottom == null || bottom.isEmpty())\n+                ? null\n+                : HtmlTree.FOOTER()\n+                    .add(new HtmlTree(TagName.HR))\n+                    .add(HtmlTree.P(HtmlStyle.legalCopy,\n+                            HtmlTree.SMALL(\n+                                    new RawHtml(replaceDocRootDir(bottom)))));\n@@ -1170,1 +1186,1 @@\n-    public void addInlineDeprecatedComment(Element e, DocTree tag, Content htmltree) {\n+    public void addInlineDeprecatedComment(Element e, DeprecatedTree tag, Content htmltree) {\n@@ -1196,1 +1212,1 @@\n-    public void addSummaryDeprecatedComment(Element element, DocTree tag, Content htmltree) {\n+    public void addSummaryDeprecatedComment(Element element, DeprecatedTree tag, Content htmltree) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":46,"deletions":30,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -114,6 +114,0 @@\n-\n-    \/**\n-     * Argument for command-line option {@code -footer}.\n-     *\/\n-    private String footer = \"\";\n-\n@@ -238,1 +232,1 @@\n-                        footer = args.get(0);\n+                        messages.warning(\"doclet.footer_specified\");\n@@ -502,1 +496,0 @@\n-        utils.checkJavaScriptInOption(\"-footer\", footer);\n@@ -596,7 +589,0 @@\n-    \/**\n-     * Argument for command-line option {@code -footer}.\n-     *\/\n-    String footer() {\n-        return footer;\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlOptions.java","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import com.sun.source.doctree.SerialTree;\n@@ -168,1 +169,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(field, DocTree.Kind.SERIAL);\n+        List<? extends SerialTree> tags = utils.getSerialTrees(field);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-import com.sun.source.doctree.DocTree;\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -126,5 +126,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        Navigation navBar = new Navigation(null, configuration, PageMode.INDEX, path);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -137,4 +132,0 @@\n-        HtmlTree footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n@@ -142,1 +133,1 @@\n-                .setHeader(headerContent)\n+                .setHeader(getHeader(PageMode.INDEX))\n@@ -147,1 +138,1 @@\n-                .setFooter(footer));\n+                .setFooter(getFooter()));\n@@ -303,1 +294,0 @@\n-        List<? extends DocTree> tags;\n@@ -309,1 +299,1 @@\n-            tags = utils.getBlockTags(element, DocTree.Kind.DEPRECATED);\n+            List<? extends DeprecatedTree> tags = utils.getDeprecatedTrees(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,6 +46,0 @@\n-    \/**\n-     * Marker to identify start of bottom navigation bar.\n-     *\/\n-    public static final Comment START_OF_BOTTOM_NAVBAR =\n-            new Comment(\"======= START OF BOTTOM NAVBAR ======\");\n-\n@@ -58,6 +52,0 @@\n-    \/**\n-     * Marker to identify end of bottom navigation bar.\n-     *\/\n-    public static final Comment END_OF_BOTTOM_NAVBAR =\n-            new Comment(\"======== END OF BOTTOM NAVBAR =======\");\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MarkerComments.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -162,2 +163,0 @@\n-    private final Navigation navBar;\n-\n@@ -176,1 +175,0 @@\n-        this.navBar = new Navigation(mdle, configuration, PageMode.MODULE, path);\n@@ -188,9 +186,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setDisplaySummaryModuleDescLink(!utils.getFullBody(mdle).isEmpty() && !options.noComment());\n-        navBar.setDisplaySummaryModulesLink(display(requires) || display(indirectModules));\n-        navBar.setDisplaySummaryPackagesLink(display(packages) || display(indirectPackages)\n-                || display(indirectOpenPackages));\n-        navBar.setDisplaySummaryServicesLink(displayServices(uses, usesTrees) || displayServices(provides.keySet(), providesTrees));\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -210,1 +199,1 @@\n-        bodyContents.setHeader(headerContent)\n+        bodyContents.setHeader(getHeader(PageMode.MODULE, mdle))\n@@ -215,0 +204,10 @@\n+    @Override\n+    protected Navigation getNavBar(PageMode pageMode, Element element) {\n+        return super.getNavBar(pageMode, element)\n+                .setDisplaySummaryModuleDescLink(!utils.getFullBody(mdle).isEmpty() && !options.noComment())\n+                .setDisplaySummaryModulesLink(display(requires) || display(indirectModules))\n+                .setDisplaySummaryPackagesLink(display(packages) || display(indirectPackages)\n+                        || display(indirectOpenPackages))\n+                .setDisplaySummaryServicesLink(displayServices(uses, usesTrees) || displayServices(provides.keySet(), providesTrees));\n+    }\n+\n@@ -372,1 +371,1 @@\n-        utils.getBlockTags(mdle, DocTree.Kind.PROVIDES).forEach(tree -> {\n+        utils.getProvidesTrees(mdle).forEach(tree -> {\n@@ -379,1 +378,1 @@\n-        utils.getBlockTags(mdle, DocTree.Kind.USES).forEach(tree -> {\n+        utils.getUsesTrees(mdle).forEach(tree -> {\n@@ -805,1 +804,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(mdle, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(mdle);\n@@ -842,5 +841,1 @@\n-        Content htmlTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        htmlTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(htmlTree);\n-        bodyContents.setFooter(htmlTree);\n+        bodyContents.setFooter(getFooter());\n@@ -863,1 +858,0 @@\n-        List<? extends DocTree> deprs;\n@@ -865,1 +859,1 @@\n-            deprs = utils.getDeprecatedTrees(pkg);\n+            List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(pkg);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-    private Content userFooter;\n@@ -107,21 +106,0 @@\n-    enum Position {\n-        BOTTOM(MarkerComments.START_OF_BOTTOM_NAVBAR, MarkerComments.END_OF_BOTTOM_NAVBAR),\n-        TOP(MarkerComments.START_OF_TOP_NAVBAR, MarkerComments.END_OF_TOP_NAVBAR);\n-\n-        final Content startOfNav;\n-        final Content endOfNav;\n-\n-        Position(Content startOfNav, Content endOfNav) {\n-            this.startOfNav = startOfNav;\n-            this.endOfNav = endOfNav;\n-        }\n-\n-        Content startOfNav() {\n-            return startOfNav;\n-        }\n-\n-        Content endOfNav() {\n-            return endOfNav;\n-        }\n-    }\n-\n@@ -195,5 +173,0 @@\n-    public Navigation setUserFooter(Content userFooter) {\n-        this.userFooter = userFooter;\n-        return this;\n-    }\n-\n@@ -201,1 +174,1 @@\n-     * Add the links for the main navigation.\n+     * Adds the links for the main navigation.\n@@ -359,1 +332,1 @@\n-     * Add the summary links to the sub-navigation.\n+     * Adds the summary links to the sub-navigation.\n@@ -439,1 +412,1 @@\n-     * Add the navigation summary link.\n+     * Adds the navigation summary link.\n@@ -464,1 +437,1 @@\n-     * Add the navigation Type summary link.\n+     * Adds the navigation Type summary link.\n@@ -554,1 +527,1 @@\n-     * Add the navigation Type summary link.\n+     * Adds the navigation Type summary link.\n@@ -601,1 +574,1 @@\n-     * Add the detail links to sub-navigation.\n+     * Adds the detail links to sub-navigation.\n@@ -643,1 +616,1 @@\n-     * Add the navigation Type detail link.\n+     * Adds the navigation Type detail link.\n@@ -692,1 +665,1 @@\n-     * Add the navigation Annotation Type detail link.\n+     * Adds the navigation Annotation Type detail link.\n@@ -726,1 +699,1 @@\n-     * Add the navigation Annotation Type detail link.\n+     * Adds the navigation Annotation Type detail link.\n@@ -909,1 +882,1 @@\n-     * Get the navigation content.\n+     * Returns the navigation content.\n@@ -911,2 +884,1 @@\n-     * @param posn the position for the navigation bar\n-     * @return the navigation contents\n+     * @return the navigation content\n@@ -914,1 +886,1 @@\n-    public Content getContent(Position posn) {\n+    public Content getContent() {\n@@ -922,31 +894,9 @@\n-        SectionName navListSection;\n-        Content aboutContent;\n-        boolean addSearch;\n-        switch (posn) {\n-            case TOP:\n-                tree.add(Position.TOP.startOfNav());\n-                navDiv.setStyle(HtmlStyle.topNav)\n-                        .setId(SectionName.NAVBAR_TOP.getName())\n-                        .add(HtmlTree.DIV(HtmlStyle.skipNav,\n-                                links.createLink(SectionName.SKIP_NAVBAR_TOP, skipNavLinks,\n-                                        skipNavLinks.toString(), \"\")));\n-                navListSection = SectionName.NAVBAR_TOP_FIRSTROW;\n-                aboutContent = userHeader;\n-                addSearch = options.createIndex();\n-                break;\n-\n-            case BOTTOM:\n-                tree.add(Position.BOTTOM.startOfNav());\n-                navDiv.setStyle(HtmlStyle.bottomNav)\n-                        .setId(SectionName.NAVBAR_BOTTOM.getName())\n-                        .add(HtmlTree.DIV(HtmlStyle.skipNav,\n-                                links.createLink(SectionName.SKIP_NAVBAR_BOTTOM, skipNavLinks,\n-                                        skipNavLinks.toString(), \"\")));\n-                navListSection = SectionName.NAVBAR_BOTTOM_FIRSTROW;\n-                aboutContent = userFooter;\n-                addSearch = false;\n-                break;\n-\n-            default:\n-                throw new Error();\n-        }\n+        tree.add(MarkerComments.START_OF_TOP_NAVBAR);\n+        navDiv.setStyle(HtmlStyle.topNav)\n+                .setId(SectionName.NAVBAR_TOP.getName())\n+                .add(HtmlTree.DIV(HtmlStyle.skipNav,\n+                        links.createLink(SectionName.SKIP_NAVBAR_TOP, skipNavLinks,\n+                                skipNavLinks.toString(), \"\")));\n+        SectionName navListSection = SectionName.NAVBAR_TOP_FIRSTROW;\n+        Content aboutContent = userHeader;\n+        boolean addSearch = options.createIndex();\n@@ -982,6 +932,3 @@\n-        switch (posn) {\n-            case TOP:\n-                tree.add(Position.TOP.endOfNav());\n-                tree.add(HtmlTree.SPAN(HtmlStyle.skipNav, EMPTY_COMMENT)\n-                        .setId(SectionName.SKIP_NAVBAR_TOP.getName()));\n-                break;\n+        tree.add(MarkerComments.END_OF_TOP_NAVBAR);\n+        tree.add(HtmlTree.SPAN(HtmlStyle.skipNav, EMPTY_COMMENT)\n+                .setId(SectionName.SKIP_NAVBAR_TOP.getName()));\n@@ -989,5 +936,0 @@\n-            case BOTTOM:\n-                tree.add(Position.BOTTOM.endOfNav());\n-                tree.add(HtmlTree.SPAN(HtmlStyle.skipNav, EMPTY_COMMENT)\n-                        .setId(SectionName.SKIP_NAVBAR_BOTTOM.getName()));\n-        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":24,"deletions":82,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import javax.lang.model.element.Element;\n@@ -59,2 +60,0 @@\n-    private final Navigation navBar;\n-\n@@ -73,1 +72,0 @@\n-        this.navBar = new Navigation(packageElement, configuration, PageMode.TREE, path);\n@@ -115,5 +113,1 @@\n-        HtmlTree footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n-        bodyContents.setFooter(footer);\n+        bodyContents.setFooter(getFooter());\n@@ -133,2 +127,6 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n+        bodyContents.setHeader(getHeader(PageMode.TREE, packageElement));\n+        return bodyTree;\n+    }\n+\n+    @Override\n+    protected Navigation getNavBar(PageMode pageMode, Element element) {\n@@ -137,5 +135,2 @@\n-        navBar.setNavLinkModule(linkContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n-        bodyContents.setHeader(headerContent);\n-        return bodyTree;\n+        return super.getNavBar(pageMode, element)\n+                .setNavLinkModule(linkContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import javax.lang.model.element.Element;\n@@ -64,1 +65,0 @@\n-    private final Navigation navBar;\n@@ -102,1 +102,0 @@\n-        this.navBar = new Navigation(packageElement, configuration, PageMode.USE, path);\n@@ -134,5 +133,1 @@\n-        HtmlTree footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n-        bodyContents.setFooter(footer);\n+        bodyContents.setFooter(getFooter());\n@@ -239,7 +234,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(packageElement),\n-                contents.moduleLabel);\n-        navBar.setNavLinkModule(linkContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -253,1 +241,1 @@\n-        bodyContents.setHeader(headerContent)\n+        bodyContents.setHeader(getHeader(PageMode.USE, packageElement))\n@@ -257,0 +245,8 @@\n+\n+    @Override\n+    protected Navigation getNavBar(PageMode pageMode, Element element) {\n+        Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(element),\n+                contents.moduleLabel);\n+        return super.getNavBar(pageMode, element)\n+                .setNavLinkModule(linkContent);\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import javax.lang.model.element.Element;\n@@ -35,0 +36,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -76,2 +78,0 @@\n-    private final Navigation navBar;\n-\n@@ -96,1 +96,0 @@\n-        this.navBar = new Navigation(packageElement, configuration, PageMode.PACKAGE, path);\n@@ -102,7 +101,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(packageElement),\n-                contents.moduleLabel);\n-        navBar.setNavLinkModule(linkContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -129,1 +121,1 @@\n-        bodyContents.setHeader(headerContent)\n+        bodyContents.setHeader(getHeader(PageMode.PACKAGE, packageElement))\n@@ -139,0 +131,8 @@\n+    @Override\n+    protected Navigation getNavBar(PageMode pageMode, Element element) {\n+        Content linkContent = getModuleLink(utils.elementUtils.getModuleOf(packageElement),\n+                contents.moduleLabel);\n+        return super.getNavBar(pageMode, element)\n+                .setNavLinkModule(linkContent);\n+    }\n+\n@@ -145,1 +145,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(packageElement, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(packageElement);\n@@ -226,1 +226,1 @@\n-                    List<? extends DocTree> tags = utils.getDeprecatedTrees(klass);\n+                    List<? extends DeprecatedTree> tags = utils.getDeprecatedTrees(klass);\n@@ -263,5 +263,1 @@\n-        Content htmlTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        htmlTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(htmlTree);\n-        bodyContents.setFooter(htmlTree);\n+        bodyContents.setFooter(getFooter());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -58,2 +58,0 @@\n-    private final Navigation navBar;\n-\n@@ -66,1 +64,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.SERIALIZED_FORM, path);\n@@ -79,4 +76,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -87,1 +80,1 @@\n-        bodyContents.setHeader(headerContent)\n+        bodyContents.setHeader(getHeader(PageMode.SERIALIZED_FORM))\n@@ -244,5 +237,1 @@\n-        Content htmlTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        htmlTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(htmlTree);\n-        bodyContents.setFooter(htmlTree);\n+        bodyContents.setFooter(getFooter());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriterImpl.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -111,1 +112,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(member, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(member);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,2 +66,0 @@\n-    private final Navigation navBar;\n-\n@@ -81,1 +79,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.SYSTEM_PROPERTIES, path);\n@@ -111,4 +108,0 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n@@ -117,4 +110,0 @@\n-        Content footer = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footer.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footer);\n@@ -122,1 +111,1 @@\n-                .setHeader(headerContent)\n+                .setHeader(getHeader(PageMode.SYSTEM_PROPERTIES))\n@@ -127,1 +116,1 @@\n-                .setFooter(footer));\n+                .setFooter(getFooter()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SystemPropertiesWriter.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -42,0 +43,1 @@\n+import com.sun.source.doctree.LiteralTree;\n@@ -43,0 +45,2 @@\n+import com.sun.source.doctree.ReturnTree;\n+import com.sun.source.doctree.SeeTree;\n@@ -44,0 +48,1 @@\n+import com.sun.source.doctree.ThrowsTree;\n@@ -112,1 +117,1 @@\n-    protected Content indexTagOutput(Element element, DocTree tag) {\n+    protected Content indexTagOutput(Element element, IndexTree tag) {\n@@ -114,1 +119,0 @@\n-        IndexTree itt = (IndexTree) tag;\n@@ -116,1 +120,1 @@\n-        String tagText = ch.getText(itt.getSearchTerm());\n+        String tagText = ch.getText(tag.getSearchTerm());\n@@ -121,1 +125,1 @@\n-        String desc = ch.getText(itt.getDescription());\n+        String desc = ch.getText(tag.getDescription());\n@@ -140,1 +144,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(element, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(element);\n@@ -174,1 +178,1 @@\n-    protected Content literalTagOutput(Element element, DocTree tag) {\n+    protected Content literalTagOutput(Element element, LiteralTree tag) {\n@@ -194,1 +198,1 @@\n-    public Content paramTagOutput(Element element, DocTree paramTag, String paramName) {\n+    public Content paramTagOutput(Element element, ParamTree paramTag, String paramName) {\n@@ -199,1 +203,1 @@\n-                && (paramTag instanceof ParamTree) && !((ParamTree) paramTag).isTypeParameter();\n+                && !paramTag.isTypeParameter();\n@@ -209,1 +213,1 @@\n-    public Content returnTagOutput(Element element, DocTree returnTag) {\n+    public Content returnTagOutput(Element element, ReturnTree returnTag) {\n@@ -218,1 +222,1 @@\n-    public Content seeTagOutput(Element holder, List<? extends DocTree> seeTags) {\n+    public Content seeTagOutput(Element holder, List<? extends SeeTree> seeTags) {\n@@ -282,3 +286,2 @@\n-    protected Content systemPropertyTagOutput(Element element, DocTree tag) {\n-        SystemPropertyTree itt = (SystemPropertyTree) tag;\n-        String tagText = itt.getPropertyName().toString();\n+    protected Content systemPropertyTagOutput(Element element, SystemPropertyTree tag) {\n+        String tagText = tag.getPropertyName().toString();\n@@ -295,1 +298,1 @@\n-    public Content throwsTagOutput(Element element, DocTree throwsTag, TypeMirror substituteType) {\n+    public Content throwsTagOutput(Element element, ThrowsTree throwsTag, TypeMirror substituteType) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -69,2 +69,0 @@\n-    private final Navigation navBar;\n-\n@@ -84,1 +82,0 @@\n-        this.navBar = new Navigation(null, configuration, PageMode.TREE, path);\n@@ -121,4 +118,0 @@\n-        HtmlTree footerTree = HtmlTree.FOOTER();\n-        navBar.setUserFooter(getUserHeaderFooter(false));\n-        footerTree.add(navBar.getContent(Navigation.Position.BOTTOM));\n-        addBottom(footerTree);\n@@ -127,1 +120,1 @@\n-                .setFooter(footerTree));\n+                .setFooter(getFooter()));\n@@ -178,5 +171,1 @@\n-        Content headerContent = new ContentBuilder();\n-        addTop(headerContent);\n-        navBar.setUserHeader(getUserHeaderFooter(true));\n-        headerContent.add(navBar.getContent(Navigation.Position.TOP));\n-        bodyContents.setHeader(headerContent);\n+        bodyContents.setHeader(getHeader(PageMode.TREE));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TreeWriter.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.Objects;\n@@ -50,2 +51,2 @@\n-    private Content header = HtmlTree.EMPTY;\n-    private Content footer = HtmlTree.EMPTY;\n+    private HtmlTree header = null;\n+    private HtmlTree footer = null;\n@@ -58,2 +59,2 @@\n-    public BodyContents setHeader(Content header) {\n-        this.header = header;\n+    public BodyContents setHeader(HtmlTree header) {\n+        this.header = Objects.requireNonNull(header);\n@@ -63,1 +64,1 @@\n-    public BodyContents setFooter(Content footer) {\n+    public BodyContents setFooter(HtmlTree footer) {\n@@ -91,3 +92,4 @@\n-        HtmlTree flexHeader = HtmlTree.HEADER()\n-                .setStyle(HtmlStyle.flexHeader)\n-                .add(header);\n+        if (header == null)\n+            throw new NullPointerException();\n+\n+        HtmlTree flexHeader = header.addStyle(HtmlStyle.flexHeader);\n@@ -97,1 +99,1 @@\n-                .add(footer);\n+                .add(footer == null ? HtmlTree.EMPTY : footer);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/BodyContents.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -100,5 +100,0 @@\n-    \/**\n-     * The class for the overall {@code div} element containing the {@code footer} element for the page.\n-     *\/\n-    bottomNav,\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -494,1 +494,1 @@\n-# L10N: do not localize the option names --no-frames\n+# L10N: do not localize the option name --no-frames\n@@ -498,0 +498,5 @@\n+\n+# L10N: do not localize the option name -footer\n+doclet.footer_specified=\\\n+    The -footer option is no longer supported and will be ignored.\\n\\\n+    It may be removed in a future release.\n\\ No newline at end of file\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import com.sun.source.doctree.SinceTree;\n@@ -338,1 +339,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(property, Kind.SINCE);\n+        List<? extends SinceTree> tags = utils.getBlockTags(property, Kind.SINCE, SinceTree.class);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import com.sun.source.doctree.DocTree;\n@@ -41,0 +40,1 @@\n+import com.sun.source.doctree.SerialTree;\n@@ -475,4 +475,1 @@\n-        for (DocTree dt : utils.getSerialFieldTrees(field)) {\n-            SerialFieldTree st = (SerialFieldTree) dt;\n-            tags.add(st);\n-        }\n+        tags.addAll(utils.getSerialFieldTrees(field));\n@@ -577,1 +574,1 @@\n-        List<? extends DocTree> serial = utils.getSerialTrees(element);\n+        List<? extends SerialTree> serial = utils.getSerialTrees(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/SerializedFormBuilder.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -155,13 +155,0 @@\n-.bottom-nav {\n-    margin-top:10px;\n-    background-color:#4D7A97;\n-    color:#FFFFFF;\n-    float:left;\n-    padding:0;\n-    width:100%;\n-    clear:right;\n-    height:2.8em;\n-    padding-top:10px;\n-    overflow:hidden;\n-    font-size:12px;\n-}\n@@ -210,1 +197,1 @@\n-.top-nav a:link, .top-nav a:active, .top-nav a:visited, .bottom-nav a:link, .bottom-nav a:active, .bottom-nav a:visited {\n+.top-nav a:link, .top-nav a:active, .top-nav a:visited {\n@@ -215,1 +202,1 @@\n-.top-nav a:hover, .bottom-nav a:hover {\n+.top-nav a:hover {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/stylesheet.css","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import com.sun.source.doctree.IndexTree;\n@@ -49,1 +50,1 @@\n-        return writer.indexTagOutput(element, tag);\n+        return writer.indexTagOutput(element, (IndexTree) tag);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/IndexTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import com.sun.source.doctree.LiteralTree;\n@@ -55,1 +56,1 @@\n-        return writer.literalTagOutput(e, tag);\n+        return writer.literalTagOutput(e, (LiteralTree) tag);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/LiteralTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-            TagletWriter writer, List<? extends Element> formalParameters, List<? extends DocTree> paramTags) {\n+            TagletWriter writer, List<? extends Element> formalParameters, List<? extends ParamTree> paramTags) {\n@@ -213,1 +213,1 @@\n-                            inheritedDoc.holderTag,\n+                            (ParamTree) inheritedDoc.holderTag,\n@@ -243,1 +243,1 @@\n-            List<? extends DocTree> paramTags, Map<String, String> rankMap, TagletWriter writer,\n+            List<? extends ParamTree> paramTags, Map<String, String> rankMap, TagletWriter writer,\n@@ -249,1 +249,1 @@\n-            for (DocTree dt : paramTags) {\n+            for (ParamTree dt : paramTags) {\n@@ -297,1 +297,1 @@\n-            TagletWriter writer, DocTree paramTag, String name,\n+            TagletWriter writer, ParamTree paramTag, String name,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import com.sun.source.doctree.ReturnTree;\n@@ -61,1 +62,1 @@\n-        List<? extends DocTree> tags = input.utils.getBlockTags(input.element, DocTree.Kind.RETURN);\n+        List<? extends ReturnTree> tags = input.utils.getReturnTrees(input.element);\n@@ -77,1 +78,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(holder, DocTree.Kind.RETURN);\n+        List<? extends ReturnTree> tags = utils.getReturnTrees(holder);\n@@ -97,1 +98,1 @@\n-        return !ntags.isEmpty() ? writer.returnTagOutput(holder, ntags.get(0)) : null;\n+        return !ntags.isEmpty() ? writer.returnTagOutput(holder, (ReturnTree) ntags.get(0)) : null;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import com.sun.source.doctree.SeeTree;\n@@ -57,1 +58,1 @@\n-        List<? extends DocTree> tags = input.utils.getSeeTrees(input.element);\n+        List<? extends SeeTree> tags = input.utils.getSeeTrees(input.element);\n@@ -71,1 +72,1 @@\n-        List<? extends DocTree> tags = utils.getSeeTrees(holder);\n+        List<? extends SeeTree> tags = utils.getSeeTrees(holder);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.source.doctree.SystemPropertyTree;\n@@ -53,1 +54,1 @@\n-        return writer.systemPropertyTagOutput(element, tag);\n+        return writer.systemPropertyTagOutput(element, (SystemPropertyTree) tag);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SystemPropertyTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,7 @@\n+import com.sun.source.doctree.IndexTree;\n+import com.sun.source.doctree.LiteralTree;\n+import com.sun.source.doctree.ParamTree;\n+import com.sun.source.doctree.ReturnTree;\n+import com.sun.source.doctree.SeeTree;\n+import com.sun.source.doctree.SystemPropertyTree;\n+import com.sun.source.doctree.ThrowsTree;\n@@ -88,1 +95,1 @@\n-    protected abstract Content indexTagOutput(Element element, DocTree tag);\n+    protected abstract Content indexTagOutput(Element element, IndexTree tag);\n@@ -114,1 +121,1 @@\n-    protected abstract Content literalTagOutput(Element element, DocTree tag);\n+    protected abstract Content literalTagOutput(Element element, LiteralTree tag);\n@@ -136,1 +143,1 @@\n-    protected abstract Content paramTagOutput(Element element, DocTree paramTag, String paramName);\n+    protected abstract Content paramTagOutput(Element element, ParamTree paramTag, String paramName);\n@@ -146,1 +153,1 @@\n-    protected abstract Content returnTagOutput(Element element, DocTree returnTag);\n+    protected abstract Content returnTagOutput(Element element, ReturnTree returnTag);\n@@ -156,1 +163,1 @@\n-    protected abstract Content seeTagOutput(Element element, List<? extends DocTree> seeTags);\n+    protected abstract Content seeTagOutput(Element element, List<? extends SeeTree> seeTags);\n@@ -177,1 +184,1 @@\n-    protected abstract Content systemPropertyTagOutput(Element element, DocTree systemPropertyTag);\n+    protected abstract Content systemPropertyTagOutput(Element element, SystemPropertyTree systemPropertyTag);\n@@ -195,1 +202,1 @@\n-    protected abstract Content throwsTagOutput(Element element, DocTree throwsTag, TypeMirror substituteType);\n+    protected abstract Content throwsTagOutput(Element element, ThrowsTree throwsTag, TypeMirror substituteType);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.stream.Collectors;\n@@ -46,0 +47,1 @@\n+import com.sun.source.doctree.ThrowsTree;\n@@ -75,1 +77,2 @@\n-            exception = ch.getException(input.docTreeInfo.docTree);\n+            exception = input.docTreeInfo.docTree instanceof ThrowsTree\n+                    ? ch.getException((ThrowsTree) input.docTreeInfo.docTree) : null;\n@@ -83,2 +86,2 @@\n-        for (DocTree dt : input.utils.getThrowsTrees(input.element)) {\n-            Element exc = ch.getException(dt);\n+        for (ThrowsTree tt : input.utils.getThrowsTrees(input.element)) {\n+            Element exc = ch.getException(tt);\n@@ -88,1 +91,1 @@\n-                output.holderTag = dt;\n+                output.holderTag = tt;\n@@ -90,1 +93,1 @@\n-                output.tagList.add(dt);\n+                output.tagList.add(tt);\n@@ -94,1 +97,1 @@\n-                output.tagList.add(dt);\n+                output.tagList.add(tt);\n@@ -132,1 +135,1 @@\n-            Map<List<? extends DocTree>, ExecutableElement> declaredExceptionTags = new LinkedHashMap<>();\n+            Map<List<? extends ThrowsTree>, ExecutableElement> declaredExceptionTags = new LinkedHashMap<>();\n@@ -146,1 +149,4 @@\n-                    declaredExceptionTags.put(inheritedDoc.tagList, (ExecutableElement)inheritedDoc.holder);\n+                    List<? extends ThrowsTree> inheritedTags = inheritedDoc.tagList.stream()\n+                            .map(t -> (ThrowsTree) t)\n+                            .collect(Collectors.toList());\n+                    declaredExceptionTags.put(inheritedTags, (ExecutableElement) inheritedDoc.holder);\n@@ -164,1 +170,1 @@\n-        Map<List<? extends DocTree>, ExecutableElement> tagsMap = new LinkedHashMap<>();\n+        Map<List<? extends ThrowsTree>, ExecutableElement> tagsMap = new LinkedHashMap<>();\n@@ -186,1 +192,1 @@\n-    protected Content throwsTagsOutput(Map<List<? extends DocTree>, ExecutableElement> throwTags,\n+    protected Content throwsTagsOutput(Map<List<? extends ThrowsTree>, ExecutableElement> throwTags,\n@@ -192,1 +198,1 @@\n-            for (Entry<List<? extends DocTree>, ExecutableElement> entry : throwTags.entrySet()) {\n+            for (Entry<List<? extends ThrowsTree>, ExecutableElement> entry : throwTags.entrySet()) {\n@@ -195,1 +201,1 @@\n-                for (DocTree dt : entry.getKey()) {\n+                for (ThrowsTree dt : entry.getKey()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -203,7 +203,2 @@\n-    public Element getException(DocTree dtree) {\n-        if (dtree.getKind() == THROWS || dtree.getKind() == EXCEPTION) {\n-            ThrowsTree tt = (ThrowsTree)dtree;\n-            ReferenceTree exceptionName = tt.getExceptionName();\n-            return getElement(exceptionName);\n-        }\n-        return null;\n+    public Element getException(ThrowsTree tt) {\n+        return getElement(tt.getExceptionName());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -99,0 +100,6 @@\n+import com.sun.source.doctree.ProvidesTree;\n+import com.sun.source.doctree.ReturnTree;\n+import com.sun.source.doctree.SeeTree;\n+import com.sun.source.doctree.SerialDataTree;\n+import com.sun.source.doctree.SerialFieldTree;\n+import com.sun.source.doctree.SerialTree;\n@@ -101,0 +108,1 @@\n+import com.sun.source.doctree.ThrowsTree;\n@@ -102,0 +110,1 @@\n+import com.sun.source.doctree.UsesTree;\n@@ -948,2 +957,2 @@\n-    public List<? extends DocTree> getSerialDataTrees(ExecutableElement member) {\n-        return getBlockTags(member, SERIAL_DATA);\n+    public List<? extends SerialDataTree> getSerialDataTrees(ExecutableElement member) {\n+        return getBlockTags(member, SERIAL_DATA, SerialDataTree.class);\n@@ -2594,0 +2603,8 @@\n+    public <T extends DocTree> List<? extends T> getBlockTags(Element element, Predicate<DocTree> filter, Class<T> tClass) {\n+        return getBlockTags(element).stream()\n+                .filter(t -> t.getKind() != ERRONEOUS)\n+                .filter(filter)\n+                .map(t -> tClass.cast(t))\n+                .collect(Collectors.toList());\n+    }\n+\n@@ -2598,0 +2615,4 @@\n+    public <T extends DocTree> List<? extends T> getBlockTags(Element element, DocTree.Kind kind, Class<T> tClass) {\n+        return getBlockTags(element, t -> t.getKind() == kind, tClass);\n+    }\n+\n@@ -2783,2 +2804,2 @@\n-    public List<? extends DocTree> getDeprecatedTrees(Element element) {\n-        return getBlockTags(element, DEPRECATED);\n+    public List<? extends DeprecatedTree> getDeprecatedTrees(Element element) {\n+        return getBlockTags(element, DEPRECATED, DeprecatedTree.class);\n@@ -2787,2 +2808,2 @@\n-    public List<? extends DocTree> getProvidesTrees(Element element) {\n-        return getBlockTags(element, PROVIDES);\n+    public List<? extends ProvidesTree> getProvidesTrees(Element element) {\n+        return getBlockTags(element, PROVIDES, ProvidesTree.class);\n@@ -2791,2 +2812,2 @@\n-    public List<? extends DocTree> getSeeTrees(Element element) {\n-        return getBlockTags(element, SEE);\n+    public List<? extends SeeTree> getSeeTrees(Element element) {\n+        return getBlockTags(element, SEE, SeeTree.class);\n@@ -2795,2 +2816,2 @@\n-    public List<? extends DocTree> getSerialTrees(Element element) {\n-        return getBlockTags(element, SERIAL);\n+    public List<? extends SerialTree> getSerialTrees(Element element) {\n+        return getBlockTags(element, SERIAL, SerialTree.class);\n@@ -2799,2 +2820,2 @@\n-    public List<? extends DocTree> getSerialFieldTrees(VariableElement field) {\n-        return getBlockTags(field, DocTree.Kind.SERIAL_FIELD);\n+    public List<? extends SerialFieldTree> getSerialFieldTrees(VariableElement field) {\n+        return getBlockTags(field, DocTree.Kind.SERIAL_FIELD, SerialFieldTree.class);\n@@ -2803,2 +2824,4 @@\n-    public List<? extends DocTree> getThrowsTrees(Element element) {\n-        return getBlockTags(element, DocTree.Kind.EXCEPTION, DocTree.Kind.THROWS);\n+    public List<? extends ThrowsTree> getThrowsTrees(Element element) {\n+        return getBlockTags(element,\n+                t -> switch (t.getKind()) { case EXCEPTION, THROWS -> true; default -> false; },\n+                ThrowsTree.class);\n@@ -2816,8 +2839,3 @@\n-        List<ParamTree> out = new ArrayList<>();\n-        for (DocTree dt : getBlockTags(element, PARAM)) {\n-            ParamTree pt = (ParamTree) dt;\n-            if (pt.isTypeParameter() == isTypeParameters) {\n-                out.add(pt);\n-            }\n-        }\n-        return out;\n+        return getBlockTags(element,\n+                t -> t.getKind() == PARAM && ((ParamTree) t).isTypeParameter() == isTypeParameters,\n+                ParamTree.class);\n@@ -2826,2 +2844,2 @@\n-    public  List<? extends DocTree> getReturnTrees(Element element) {\n-        return new ArrayList<>(getBlockTags(element, RETURN));\n+    public  List<? extends ReturnTree> getReturnTrees(Element element) {\n+        return new ArrayList<>(getBlockTags(element, RETURN, ReturnTree.class));\n@@ -2830,2 +2848,2 @@\n-    public List<? extends DocTree> getUsesTrees(Element element) {\n-        return getBlockTags(element, USES);\n+    public List<? extends UsesTree> getUsesTrees(Element element) {\n+        return getBlockTags(element, USES, UsesTree.class);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":44,"deletions":26,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JAVADOC\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JAVADOC\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.javadoc\/share\/man\/javadoc.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JCMD\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JCMD\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JINFO\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JINFO\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jinfo.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JMAP\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JMAP\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jmap.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JPS\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JPS\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jps.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JSTACK\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JSTACK\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jcmd\/share\/man\/jstack.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JSTAT\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JSTAT\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n@@ -227,1 +227,1 @@\n-\\f[CB]Bytes\\f[R]: Number of KB loaded.\n+\\f[CB]Bytes\\f[R]: Number of KB unloaded.\n","filename":"src\/jdk.jcmd\/share\/man\/jstat.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JCONSOLE\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JCONSOLE\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jconsole\/share\/man\/jconsole.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JAVAP\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JAVAP\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/javap.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JDEPRSCAN\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JDEPRSCAN\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/jdeprscan.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JDEPS\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JDEPS\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdeps\/share\/man\/jdeps.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1995, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JDB\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JDB\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jdi\/share\/man\/jdb.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,0 +87,3 @@\n+#ifdef DEBUG_THREADNAME\n+    char name[256];\n+#endif\n@@ -352,0 +355,16 @@\n+#ifdef DEBUG_THREADNAME\n+        {\n+            \/* Set the thread name *\/\n+            jvmtiThreadInfo info;\n+            jvmtiError error;\n+\n+            memset(&info, 0, sizeof(info));\n+            error = JVMTI_FUNC_PTR(gdata->jvmti,GetThreadInfo)\n+                    (gdata->jvmti, node->thread, &info);\n+            if (info.name != NULL) {\n+                strncpy(node->name, info.name, sizeof(node->name) - 1);\n+                jvmtiDeallocate(info.name);\n+            }\n+        }\n+#endif\n+\n@@ -839,0 +858,1 @@\n+            jvmtiDeallocate(threads);\n@@ -1518,16 +1538,3 @@\n-        if (canSuspendResumeThreadLists()) {\n-            error = commonSuspendList(env, count, threads);\n-            if (error != JVMTI_ERROR_NONE) {\n-                goto err;\n-            }\n-        } else {\n-\n-            int i;\n-\n-            for (i = 0; i < count; i++) {\n-                error = commonSuspend(env, threads[i], JNI_FALSE);\n-\n-                if (error != JVMTI_ERROR_NONE) {\n-                    goto err;\n-                }\n-            }\n+        error = commonSuspendList(env, count, threads);\n+        if (error != JVMTI_ERROR_NONE) {\n+            goto err;\n@@ -1552,1 +1559,2 @@\n-    err: ;\n+    err:\n+        jvmtiDeallocate(threads);\n@@ -1591,6 +1599,1 @@\n-    if (canSuspendResumeThreadLists()) {\n-        error = commonResumeList(env);\n-    } else {\n-        error = enumerateOverThreadList(env, &runningThreads,\n-                                        resumeHelper, NULL);\n-    }\n+    error = commonResumeList(env);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":27,"deletions":24,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -702,1 +702,1 @@\n-    error = FUNC_PTR(gdata->jvmti,GetMethodDeclaringClass)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,GetMethodDeclaringClass)\n@@ -707,1 +707,1 @@\n-\/* Returns a local ref to the declaring class for a method, or NULL. *\/\n+\/* Returns the start and end locations of the specified method. *\/\n@@ -730,1 +730,1 @@\n-    error = FUNC_PTR(gdata->jvmti,GetMethodName)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,GetMethodName)\n@@ -965,10 +965,0 @@\n-jboolean\n-canSuspendResumeThreadLists(void)\n-{\n-    jvmtiError error;\n-    jvmtiCapabilities cap;\n-\n-    error = jvmtiGetCapabilities(&cap);\n-    return (error == JVMTI_ERROR_NONE && cap.can_suspend);\n-}\n-\n@@ -1021,10 +1011,3 @@\n-    while (JNI_TRUE) {\n-        error = FUNC_PTR(gdata->jvmti,RawMonitorEnter)\n-                        (gdata->jvmti, monitor);\n-        error = ignore_vm_death(error);\n-        if (error == JVMTI_ERROR_INTERRUPT) {\n-            handleInterrupt();\n-        } else {\n-            break;\n-        }\n-    }\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,RawMonitorEnter)\n+            (gdata->jvmti, monitor);\n+    error = ignore_vm_death(error);\n@@ -1041,1 +1024,1 @@\n-    error = FUNC_PTR(gdata->jvmti,RawMonitorExit)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,RawMonitorExit)\n@@ -1053,1 +1036,1 @@\n-    error = FUNC_PTR(gdata->jvmti,RawMonitorWait)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,RawMonitorWait)\n@@ -1098,1 +1081,1 @@\n-    error = FUNC_PTR(gdata->jvmti,RawMonitorWait)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,RawMonitorWait)\n@@ -1116,1 +1099,1 @@\n-    error = FUNC_PTR(gdata->jvmti,RawMonitorNotify)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,RawMonitorNotify)\n@@ -1129,1 +1112,1 @@\n-    error = FUNC_PTR(gdata->jvmti,RawMonitorNotifyAll)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,RawMonitorNotifyAll)\n@@ -1143,1 +1126,1 @@\n-    error = FUNC_PTR(gdata->jvmti,CreateRawMonitor)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,CreateRawMonitor)\n@@ -1156,1 +1139,1 @@\n-    error = FUNC_PTR(gdata->jvmti,DestroyRawMonitor)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,DestroyRawMonitor)\n@@ -1215,1 +1198,1 @@\n-    error = FUNC_PTR(gdata->jvmti,GetClassSignature)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,GetClassSignature)\n@@ -1787,1 +1770,1 @@\n-    error = FUNC_PTR(gdata->jvmti,Allocate)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,Allocate)\n@@ -1802,1 +1785,1 @@\n-    error = FUNC_PTR(gdata->jvmti,Deallocate)\n+    error = JVMTI_FUNC_PTR(gdata->jvmti,Deallocate)\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":16,"deletions":33,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -340,1 +340,0 @@\n-jboolean canSuspendResumeThreadLists(void);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JFR\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JFR\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jfr\/share\/man\/jfr.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JLINK\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JLINK\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jlink\/share\/man\/jlink.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JMOD\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JMOD\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jlink\/share\/man\/jmod.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -49,10 +49,10 @@\n-import jdk.incubator.jpackage.internal.Arguments.CLIOptions;\n-import static jdk.incubator.jpackage.internal.LinuxAppImageBuilder.DEFAULT_ICON;\n-import static jdk.incubator.jpackage.internal.LinuxAppImageBuilder.ICON_PNG;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import jdk.jpackage.internal.Arguments.CLIOptions;\n+import static jdk.jpackage.internal.LinuxAppImageBuilder.DEFAULT_ICON;\n+import static jdk.jpackage.internal.LinuxAppImageBuilder.ICON_PNG;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/DesktopIntegration.java","additions":11,"deletions":11,"binary":false,"changes":22,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/DesktopIntegration.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -156,1 +156,1 @@\n-    \/\/ ldd: warning: you do not have execution permission for `\/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt_headless.so'\n+    \/\/ ldd: warning: you do not have execution permission for `\/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt_headless.so'\n@@ -158,1 +158,1 @@\n-    \/\/  libawt.so => \/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt.so (0x00007f4e00c75000)\n+    \/\/  libawt.so => \/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt.so (0x00007f4e00c75000)\n@@ -160,1 +160,1 @@\n-    \/\/  libjava.so => \/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libjava.so (0x00007f4e00c41000)\n+    \/\/  libjava.so => \/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libjava.so (0x00007f4e00c41000)\n@@ -166,1 +166,1 @@\n-    \/\/  libverify.so => \/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libverify.so (0x00007f4e00c2e000)\n+    \/\/  libverify.so => \/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libverify.so (0x00007f4e00c2e000)\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LibProvidersLookup.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LibProvidersLookup.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxAppBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxAppBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -35,3 +35,3 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxAppImageBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -48,7 +48,7 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxDebBundler.java","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxDebBundler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -43,7 +43,7 @@\n-import static jdk.incubator.jpackage.internal.DesktopIntegration.*;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.DesktopIntegration.*;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackageBundler.java","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxPackageBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -40,6 +40,6 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxRpmBundler.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxRpmBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/PackageProperty.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/PackageProperty.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/LinuxResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/LinuxResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/LinuxResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/java32.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/java32.png","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.control","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.control","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.copyright","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.copyright","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.desktop","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.desktop","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.postinst","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.postinst","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.postrm","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.postrm","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.preinst","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.preinst","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.prerm","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.prerm","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.spec","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.spec","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/utils.sh","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/utils.sh","status":"renamed"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+provides jdk.jpackage.internal.Bundler with\n+    jdk.jpackage.internal.LinuxAppBundler,\n+    jdk.jpackage.internal.LinuxDebBundler,\n+    jdk.jpackage.internal.LinuxRpmBundler;\n+\n","filename":"src\/jdk.jpackage\/linux\/classes\/module-info.java.extra","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Executor.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Executor.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Executor.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Executor.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/LinuxLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/LinuxLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Package.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Package.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Package.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Package.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/common\/LinuxSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/common\/LinuxSysInfo.cpp","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/CFBundleVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/CFBundleVersion.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -32,5 +32,5 @@\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n+import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppBundler.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacAppBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -52,17 +52,17 @@\n-import static jdk.incubator.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n+import static jdk.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n@@ -73,1 +73,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":19,"deletions":19,"binary":false,"changes":38,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -38,5 +38,5 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.DEFAULT_ICNS_ICON;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n+import static jdk.jpackage.internal.MacAppBundler.DEFAULT_ICNS_ICON;\n+import static jdk.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n@@ -47,1 +47,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppStoreBundler.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacAppStoreBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -39,4 +39,4 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacBaseInstallerBundler.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacBaseInstallerBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacCertificate.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacCertificate.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -40,3 +40,3 @@\n-import static jdk.incubator.jpackage.internal.MacAppImageBuilder.ICON_ICNS;\n-import static jdk.incubator.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.MacAppImageBuilder.ICON_ICNS;\n+import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n@@ -44,5 +44,5 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n@@ -53,1 +53,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgBundler.java","additions":10,"deletions":10,"binary":false,"changes":20,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacDmgBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -43,10 +43,10 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n-import static jdk.incubator.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n+import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n@@ -57,1 +57,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":12,"deletions":12,"binary":false,"changes":24,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacPkgBundler.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/DMGsetup.scpt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/DMGsetup.scpt","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/Info-lite.plist.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/Info-lite.plist.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MacResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MacResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/Runtime-Info.plist.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/Runtime-Info.plist.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/background_dmg.tiff","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/background_dmg.tiff","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/background_pkg.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/background_pkg.png","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/java.icns","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/java.icns","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/lic_template.plist","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/lic_template.plist","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/postinstall.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/postinstall.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/preinstall.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/preinstall.template","status":"renamed"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+provides jdk.jpackage.internal.Bundler with\n+    jdk.jpackage.internal.MacAppBundler,\n+    jdk.jpackage.internal.MacAppStoreBundler,\n+    jdk.jpackage.internal.MacDmgBundler,\n+    jdk.jpackage.internal.MacPkgBundler;\n+\n","filename":"src\/jdk.jpackage\/macosx\/classes\/module-info.java.extra","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/native\/common\/MacSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/native\/common\/MacSysInfo.cpp","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -32,5 +32,5 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.SOURCE_DIR;\n-import jdk.incubator.jpackage.internal.resources.ResourceLocator;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.SOURCE_DIR;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractAppImageBuilder.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AbstractAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AbstractBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -32,2 +32,2 @@\n-import jdk.incubator.jpackage.internal.Arguments.CLIOptions;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import jdk.jpackage.internal.Arguments.CLIOptions;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AddLauncherArguments.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AddLauncherArguments.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -35,4 +35,4 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageBundler.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AppImageBundler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -46,3 +46,3 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AppImageFile.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ApplicationLayout.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -60,1 +60,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n+            \"jdk.jpackage.internal.resources.MainResources\");\n@@ -618,1 +618,1 @@\n-    private jdk.incubator.jpackage.internal.Bundler getPlatformBundler() {\n+    private jdk.jpackage.internal.Bundler getPlatformBundler() {\n@@ -623,1 +623,1 @@\n-        for (jdk.incubator.jpackage.internal.Bundler bundler :\n+        for (jdk.jpackage.internal.Bundler bundler :\n@@ -654,1 +654,1 @@\n-        jdk.incubator.jpackage.internal.Bundler bundler = getPlatformBundler();\n+        jdk.jpackage.internal.Bundler bundler = getPlatformBundler();\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Arguments.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BasicBundlers.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/BasicBundlers.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -30,1 +30,1 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BundleParams.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/BundleParams.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Bundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Bundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BundlerParamInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/BundlerParamInfo.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Bundlers.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Bundlers.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -41,1 +41,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.HelpResources\");\n+            \"jdk.jpackage.internal.resources.HelpResources\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CLIHelp.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/CLIHelp.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -35,5 +35,5 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.JAVA_OPTIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ARGUMENTS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.JAVA_OPTIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ARGUMENTS;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CfgFile.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/CfgFile.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ConfigException.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ConfigException.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DeployParams.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/DeployParams.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DottedVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/DottedVersion.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Executor.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Executor.java","status":"renamed"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.text.MessageFormat;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n+\n+final class FileAssociation {\n+    void verify() {\n+        if (extensions.isEmpty()) {\n+            Log.error(I18N.getString(\n+                    \"message.creating-association-with-null-extension\"));\n+        }\n+    }\n+\n+    static void verify(List<FileAssociation> associations) throws ConfigException {\n+        \/\/ only one mime type per association, at least one file extension\n+        int assocIdx = 0;\n+        for (var assoc : associations) {\n+            ++assocIdx;\n+            if (assoc.mimeTypes.isEmpty()) {\n+                String msgKey = \"error.no-content-types-for-file-association\";\n+                throw new ConfigException(\n+                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n+                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n+            }\n+\n+            if (assoc.mimeTypes.size() > 1) {\n+                String msgKey = \"error.too-many-content-types-for-file-association\";\n+                throw new ConfigException(\n+                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n+                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n+            }\n+\n+            assoc.verify();\n+        }\n+    }\n+\n+    static List<FileAssociation> fetchFrom(Map<String, ? super Object> params) {\n+        String launcherName = APP_NAME.fetchFrom(params);\n+\n+        return FILE_ASSOCIATIONS.fetchFrom(params).stream().filter(\n+                Objects::nonNull).map(fa -> {\n+                    FileAssociation assoc = new FileAssociation();\n+\n+                    assoc.launcherPath = Path.of(launcherName);\n+                    assoc.description = Optional.ofNullable(\n+                            FA_DESCRIPTION.fetchFrom(fa))\n+                            .orElse(launcherName + \" association\");\n+                    assoc.extensions = Optional.ofNullable(\n+                            FA_EXTENSIONS.fetchFrom(fa))\n+                            .orElse(Collections.emptyList());\n+                    assoc.mimeTypes = Optional.ofNullable(\n+                            FA_CONTENT_TYPE.fetchFrom(fa))\n+                            .orElse(Collections.emptyList());\n+\n+                    Path icon = FA_ICON.fetchFrom(fa);\n+                    if (icon != null) {\n+                        assoc.iconPath = icon;\n+                    }\n+\n+                    return assoc;\n+                }).collect(Collectors.toList());\n+    }\n+\n+    Path launcherPath;\n+    Path iconPath;\n+    List<String> mimeTypes;\n+    List<String> extensions;\n+    String description;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FileAssociation.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.ResourceBundle;\n+\n+class I18N {\n+\n+    static String getString(String key) {\n+        if (PLATFORM.containsKey(key)) {\n+            return PLATFORM.getString(key);\n+        }\n+        return SHARED.getString(key);\n+    }\n+\n+    private static final ResourceBundle SHARED = ResourceBundle.getBundle(\n+            \"jdk.jpackage.internal.resources.MainResources\");\n+\n+    private static final ResourceBundle PLATFORM;\n+\n+    static {\n+        if (Platform.isLinux()) {\n+            PLATFORM = ResourceBundle.getBundle(\n+                    \"jdk.jpackage.internal.resources.LinuxResources\");\n+        } else if (Platform.isWindows()) {\n+            PLATFORM = ResourceBundle.getBundle(\n+                    \"jdk.jpackage.internal.resources.WinResources\");\n+        } else if (Platform.isMac()) {\n+            PLATFORM = ResourceBundle.getBundle(\n+                    \"jdk.jpackage.internal.resources.MacResources\");\n+        } else {\n+            throw new IllegalStateException(\"Unknwon platform\");\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/I18N.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/IOUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/IOUtils.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JLinkBundlerHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/JLinkBundlerHelper.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -46,1 +46,1 @@\n-            return new jdk.incubator.jpackage.main.Main().execute(out, err, args);\n+            return new jdk.jpackage.main.Main().execute(out, err, args);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JPackageToolProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/JPackageToolProvider.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -49,1 +49,1 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherData.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/LauncherData.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Log.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Log.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -45,2 +45,2 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-import jdk.incubator.jpackage.internal.resources.ResourceLocator;\n+import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n@@ -55,1 +55,1 @@\n- * in {@code jdk.incubator.jpackage.internal.resources} package that provides the default\n+ * in {@code jdk.jpackage.internal.resources} package that provides the default\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/OverridableResource.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -34,1 +34,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n+            \"jdk.jpackage.internal.resources.MainResources\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackagerException.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/PackagerException.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PathGroup.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/PathGroup.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Platform.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Platform.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PlatformPackage.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/PlatformPackage.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/RetryExecutor.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/RetryExecutor.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -34,3 +34,3 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ScriptRunner.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ScriptRunner.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -238,1 +238,1 @@\n-                            return Files.createTempDirectory(\"jdk.incubator.jpackage\");\n+                            return Files.createTempDirectory(\"jdk.jpackage\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/StandardBundlerParam.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ToolValidator.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ToolValidator.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -29,1 +29,1 @@\n-import jdk.incubator.jpackage.internal.Arguments.CLIOptions;\n+import jdk.jpackage.internal.Arguments.CLIOptions;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ValidOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ValidOptions.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/HelpResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/HelpResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/HelpResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MainResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MainResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MainResources_zh_CN.properties","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal.resources;\n+package jdk.jpackage.internal.resources;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/ResourceLocator.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/ResourceLocator.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.main;\n+package jdk.jpackage.main;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/CommandLine.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/main\/CommandLine.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.main;\n+package jdk.jpackage.main;\n@@ -28,3 +28,3 @@\n-import jdk.incubator.jpackage.internal.Arguments;\n-import jdk.incubator.jpackage.internal.Log;\n-import jdk.incubator.jpackage.internal.CLIHelp;\n+import jdk.jpackage.internal.Arguments;\n+import jdk.jpackage.internal.Log;\n+import jdk.jpackage.internal.CLIHelp;\n@@ -40,1 +40,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n+            \"jdk.jpackage.internal.resources.MainResources\");\n@@ -52,1 +52,1 @@\n-        int status = new jdk.incubator.jpackage.main.Main().execute(args);\n+        int status = new jdk.jpackage.main.Main().execute(args);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/Main.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/main\/Main.java","status":"renamed"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Defines the Java Packaging tool, jpackage.\n+ *\n+ * <p>jpackage is a tool for generating self-contained application bundles.\n+ *\n+ * <p> This module provides the equivalent of command-line access to <em>jpackage<\/em>\n+ * via the {@link java.util.spi.ToolProvider ToolProvider} SPI.\n+ * Instances of the tool can be obtained by calling\n+ * {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst}\n+ * or the {@link java.util.ServiceLoader service loader} with the name\n+ * {@code \"jpackage\"}.\n+ *\n+ * @implNote The {@code jpackage} tool is not thread-safe. An application\n+ * should not call either of the\n+ * {@link java.util.spi.ToolProvider ToolProvider} {@code run} methods\n+ * concurrently, even with separate {@code \"jpackage\"} {@code ToolProvider}\n+ * instances, or undefined behavior may result.\n+ *\n+ *\n+ * @moduleGraph\n+ * @since 16\n+ *\/\n+\n+module jdk.jpackage {\n+    requires jdk.jlink;\n+\n+    requires java.desktop;\n+\n+    uses jdk.jpackage.internal.Bundler;\n+    uses jdk.jpackage.internal.Bundlers;\n+\n+    provides jdk.jpackage.internal.Bundlers with\n+        jdk.jpackage.internal.BasicBundlers;\n+\n+    provides java.util.spi.ToolProvider\n+        with jdk.jpackage.internal.JPackageToolProvider;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/module-info.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JPACKAGE\" \"1\" \"2019\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JPACKAGE\" \"1\" \"2019\" \"JDK 16\" \"JDK Commands\"\n@@ -155,3 +155,2 @@\n-.B \\f[CB]\\-\\-bind\\-services\\f[R]\n-Pass on \\-\\-bind\\-services option to jlink (which will link in service\n-provider modules and their dependences).\n+.B \\f[CB]\\-\\-jlink\\-options\\f[R] <jlink options>\n+A space separated list of options to pass to jlink\n@@ -159,0 +158,5 @@\n+.PP\n+If not specified, defaults to \"\\-\\-strip\\-native\\-commands\n+\\-\\-strip\\-debug \\-\\-no\\-man\\-pages \\-\\-no\\-header\\-files\"\n+.PP\n+This option can be used multiple times.\n","filename":"src\/jdk.jpackage\/share\/man\/jpackage.1","additions":10,"deletions":6,"binary":false,"changes":16,"previous_filename":"src\/jdk.incubator.jpackage\/share\/man\/jpackage.1","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/AppLauncher.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/CfgFile.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/CfgFile.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/CfgFile.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/CfgFile.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/JvmLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/JvmLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/JvmLauncher.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/JvmLauncher.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Dll.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Dll.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/ErrorHandling.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/ErrorHandling.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/ErrorHandling.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/ErrorHandling.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/FileUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/FileUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/FileUtils.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/FileUtils.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Log.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Log.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Log.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Log.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/SourceCodePos.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/SourceCodePos.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/SysInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/SysInfo.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Toolbox.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Toolbox.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/kludge_c++11.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/kludge_c++11.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/tstrings.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/tstrings.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/tstrings.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/tstrings.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/PlatformLogEvent.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/PlatformLogEvent.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/PlatformLogEvent.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/PlatformLogEvent.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixDll.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixDll.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixFileUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixFileUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixSysInfo.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixSysInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixSysInfo.h","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -41,7 +41,7 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n@@ -52,1 +52,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.WinResources\");\n+            \"jdk.jpackage.internal.resources.WinResources\");\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/ExecutableRebrander.java","additions":9,"deletions":9,"binary":false,"changes":18,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/ExecutableRebrander.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/MsiVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/MsiVersion.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinAppBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WinAppBundler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinExeBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WinExeBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -57,9 +57,9 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n@@ -87,1 +87,1 @@\n- * jdk.incubator.jpackage.internal.resources package. It is parametrized with the\n+ * jdk.jpackage.internal.resources package. It is parametrized with the\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiBundler.java","additions":11,"deletions":11,"binary":false,"changes":22,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WinMsiBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -37,3 +37,3 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n@@ -43,1 +43,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.WinResources\");\n+            \"jdk.jpackage.internal.resources.WinResources\");\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsAppImageBuilder.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WindowsAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsDefender.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WindowsDefender.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsRegistry.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WindowsRegistry.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WixPipeline.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -51,6 +51,6 @@\n-import jdk.incubator.jpackage.internal.IOUtils.XmlConsumer;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.WinMsiBundler.MSI_SYSTEM_WIDE;\n+import jdk.jpackage.internal.IOUtils.XmlConsumer;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.WinMsiBundler.MSI_SYSTEM_WIDE;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixSourcesBuilder.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WixSourcesBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixTool.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WixTool.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_en.wxl","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MsiInstallerStrings_en.wxl","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_ja.wxl","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MsiInstallerStrings_ja.wxl","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_zh_CN.wxl","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MsiInstallerStrings_zh_CN.wxl","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinInstaller.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinInstaller.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinLauncher.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinLauncher.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/java48.ico","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/java48.ico","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/main.wxs","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/main.wxs","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/overrides.wxi","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/overrides.wxi","status":"renamed"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+provides jdk.jpackage.internal.Bundler with\n+    jdk.jpackage.internal.WinAppBundler,\n+    jdk.jpackage.internal.WinExeBundler,\n+    jdk.jpackage.internal.WinMsiBundler;\n+\n","filename":"src\/jdk.jpackage\/windows\/classes\/module-info.java.extra","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/applauncher\/WinLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/applauncher\/WinLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/PlatformLogEvent.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/PlatformLogEvent.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/PlatformLogEvent.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/PlatformLogEvent.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/UniqueHandle.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/UniqueHandle.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinDll.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinDll.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinErrorHandling.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinErrorHandling.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinErrorHandling.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinErrorHandling.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinFileUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinFileUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinFileUtils.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinFileUtils.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinSysInfo.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinSysInfo.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/IconSwap.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/IconSwap.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/IconSwap.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/IconSwap.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/JniUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/JniUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/JniUtils.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/JniUtils.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/ResourceEditor.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/ResourceEditor.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/ResourceEditor.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/ResourceEditor.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/VersionInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/VersionInfo.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/VersionInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/VersionInfo.h","status":"renamed"},{"patch":"@@ -0,0 +1,221 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"JniUtils.h\"\n+#include \"FileUtils.h\"\n+#include \"ErrorHandling.h\"\n+\n+#pragma comment(lib, \"advapi32\")\n+\n+namespace {\n+\n+std::wstring GetLongPath(const std::wstring& path) {\n+    const std::wstring cleanPath = FileUtils::removeTrailingSlash(path);\n+    if (cleanPath.size() != path.size()) {\n+        return GetLongPath(cleanPath);\n+    }\n+\n+    enum { BUFFER_SIZE = 4096 };\n+\n+    std::wstring result;\n+\n+    TCHAR *pBuffer = new TCHAR[BUFFER_SIZE];\n+    if (pBuffer != NULL) {\n+        DWORD dwResult = GetLongPathName(path.c_str(), pBuffer, BUFFER_SIZE);\n+        if (dwResult > 0 && dwResult < BUFFER_SIZE) {\n+            result = std::wstring(pBuffer);\n+        } else {\n+            delete [] pBuffer;\n+            pBuffer = new TCHAR[dwResult];\n+            if (pBuffer != NULL) {\n+                DWORD dwResult2 =\n+                        GetLongPathName(path.c_str(), pBuffer, dwResult);\n+                if (dwResult2 == (dwResult - 1)) {\n+                    result = std::wstring(pBuffer);\n+                }\n+            }\n+        }\n+\n+        if (pBuffer != NULL) {\n+            delete [] pBuffer;\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+} \/\/ namespace\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+#undef jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE\n+#define jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE 1L\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    readDwordValue\n+     * Signature: (ILjava\/lang\/String;Ljava\/lang\/String;I)I\n+     *\/\n+    JNIEXPORT jint JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_readDwordValue(\n+            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey,\n+            jstring jValue, jint defaultValue) {\n+        jint jResult = defaultValue;\n+\n+        JP_TRY;\n+\n+        if (key != jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n+            JP_THROW(\"Inavlid Windows registry key id\");\n+        }\n+\n+        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n+        const std::wstring value = jni::toUnicodeString(pEnv, jValue);\n+\n+        HKEY hSubKey = NULL;\n+        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n+                KEY_QUERY_VALUE, &hSubKey);\n+        if (status == ERROR_SUCCESS) {\n+            DWORD dwValue = 0;\n+            DWORD cbData = sizeof (DWORD);\n+            status = RegQueryValueEx(hSubKey, value.c_str(), NULL, NULL,\n+                    (LPBYTE) & dwValue, &cbData);\n+            if (status == ERROR_SUCCESS) {\n+                jResult = (jint) dwValue;\n+            }\n+\n+            RegCloseKey(hSubKey);\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return jResult;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    openRegistryKey\n+     * Signature: (ILjava\/lang\/String;)J\n+     *\/\n+    JNIEXPORT jlong JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_openRegistryKey(\n+            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey) {\n+\n+        JP_TRY;\n+\n+        if (key != jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n+            JP_THROW(\"Inavlid Windows registry key id\");\n+        }\n+\n+        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n+        HKEY hSubKey = NULL;\n+        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n+                KEY_QUERY_VALUE, &hSubKey);\n+        if (status == ERROR_SUCCESS) {\n+            return (jlong)hSubKey;\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return 0;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    enumRegistryValue\n+     * Signature: (JI)Ljava\/lang\/String;\n+     *\/\n+    JNIEXPORT jstring JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_enumRegistryValue(\n+            JNIEnv *pEnv, jclass c, jlong lKey, jint jIndex) {\n+\n+        JP_TRY;\n+\n+        \/\/ Max value name size per MSDN plus NULL\n+        enum { VALUE_NAME_SIZE = 16384 };\n+\n+        HKEY hKey = (HKEY)lKey;\n+        TCHAR valueName[VALUE_NAME_SIZE] = {0}; \/\/ Max size per MSDN plus NULL\n+        DWORD cchValueName = VALUE_NAME_SIZE;\n+        LSTATUS status = RegEnumValue(hKey, (DWORD)jIndex, valueName,\n+                &cchValueName, NULL, NULL, NULL, NULL);\n+        if (status == ERROR_SUCCESS) {\n+            size_t chLength = 0;\n+            if (StringCchLength(valueName, VALUE_NAME_SIZE, &chLength)\n+                    == S_OK) {\n+                return jni::toJString(pEnv, std::wstring(valueName, chLength));\n+            }\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return NULL;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    closeRegistryKey\n+     * Signature: (J)V\n+     *\/\n+    JNIEXPORT void JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_closeRegistryKey(\n+            JNIEnv *pEnc, jclass c, jlong lKey) {\n+        HKEY hKey = (HKEY)lKey;\n+        RegCloseKey(hKey);\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    comparePaths\n+     * Signature: (Ljava\/lang\/String;Ljava\/lang\/String;)Z\n+     *\/\n+     JNIEXPORT jboolean JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_comparePaths(\n+            JNIEnv *pEnv, jclass c, jstring jPath1, jstring jPath2) {\n+\n+         JP_TRY;\n+\n+         std::wstring path1 = jni::toUnicodeString(pEnv, jPath1);\n+         std::wstring path2 = jni::toUnicodeString(pEnv, jPath2);\n+\n+         path1 = GetLongPath(path1);\n+         path2 = GetLongPath(path2);\n+\n+         if (path1.empty() || path2.empty()) {\n+             return JNI_FALSE;\n+         }\n+\n+         if (tstrings::equals(path1, path2, tstrings::IGNORE_CASE)) {\n+             return JNI_TRUE;\n+         }\n+\n+         JP_CATCH_ALL;\n+\n+         return JNI_FALSE;\n+     }\n+\n+#ifdef __cplusplus\n+}\n+#endif\n","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/WindowsRegistry.cpp","additions":221,"deletions":0,"binary":false,"changes":221,"status":"added"},{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"ResourceEditor.h\"\n+#include \"ErrorHandling.h\"\n+#include \"IconSwap.h\"\n+#include \"VersionInfo.h\"\n+#include \"JniUtils.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    lockResource\n+     * Signature: (Ljava\/lang\/String;)J\n+     *\/\n+    JNIEXPORT jlong JNICALL\n+        Java_jdk_jpackage_internal_ExecutableRebrander_lockResource(\n+            JNIEnv *pEnv, jclass c, jstring jExecutable) {\n+\n+        JP_TRY;\n+\n+        const std::wstring executable = jni::toUnicodeString(pEnv, jExecutable);\n+\n+        return reinterpret_cast<jlong>(\n+                ResourceEditor::FileLock(executable).ownHandle(false).get());\n+\n+        JP_CATCH_ALL;\n+\n+        return 0;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    unlockResource\n+     * Signature: (J;)V\n+     *\/\n+    JNIEXPORT void JNICALL\n+        Java_jdk_jpackage_internal_ExecutableRebrander_unlockResource(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock) {\n+\n+        JP_TRY;\n+        ResourceEditor::FileLock(\n+                reinterpret_cast<HANDLE>(jResourceLock)).ownHandle(true);\n+        JP_CATCH_ALL;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    iconSwap\n+     * Signature: (J;Ljava\/lang\/String;)I\n+     *\/\n+    JNIEXPORT jint JNICALL\n+            Java_jdk_jpackage_internal_ExecutableRebrander_iconSwap(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jIconTarget) {\n+\n+        JP_TRY;\n+\n+        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n+\n+        const std::wstring iconTarget = jni::toUnicodeString(pEnv, jIconTarget);\n+\n+        if (ChangeIcon(lock.get(), iconTarget)) {\n+            return 0;\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return 1;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    versionSwap\n+     * Signature: (J;[Ljava\/lang\/String;)I\n+     *\/\n+    JNIEXPORT jint JNICALL\n+            Java_jdk_jpackage_internal_ExecutableRebrander_versionSwap(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock,\n+            jobjectArray jExecutableProperties) {\n+\n+        JP_TRY;\n+\n+        const tstring_array props = jni::toUnicodeStringArray(pEnv,\n+                jExecutableProperties);\n+\n+        VersionInfo vi;\n+\n+        tstring_array::const_iterator it = props.begin();\n+        tstring_array::const_iterator end = props.end();\n+        for (; it != end; ++it) {\n+            const tstring name = *it;\n+            const tstring value = *++it;\n+            vi.setProperty(name, value);\n+        }\n+\n+        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n+        vi.apply(lock);\n+\n+        return 0;\n+\n+        JP_CATCH_ALL;\n+\n+        return 1;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WinExeBundler\n+     * Method:    embedMSI\n+     * Signature: (J;Ljava\/lang\/String;)I\n+     *\/\n+    JNIEXPORT jint JNICALL Java_jdk_jpackage_internal_WinExeBundler_embedMSI(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jmsiPath) {\n+\n+        JP_TRY;\n+\n+        const std::wstring msiPath = jni::toUnicodeString(pEnv, jmsiPath);\n+\n+        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n+        ResourceEditor().id(L\"msi\").type(RT_RCDATA).apply(lock, msiPath);\n+\n+        return 0;\n+\n+        JP_CATCH_ALL;\n+\n+        return 1;\n+    }\n+\n+#ifdef __cplusplus\n+}\n+#endif\n","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/jpackage.cpp","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libwixhelper\/libwixhelper.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libwixhelper\/libwixhelper.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Executor.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Executor.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Executor.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Executor.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/MsiWrapper.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/MsiWrapper.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Resources.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Resources.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Resources.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Resources.h","status":"renamed"},{"patch":"@@ -836,0 +836,1 @@\n+        in.getHistory().resetIndex();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-.\\\"t\n@@ -11,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -23,0 +22,1 @@\n+.\\\"t\n@@ -25,1 +25,1 @@\n-.TH \"JSHELL\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JSHELL\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jshell\/share\/man\/jshell.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-.\\\" FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+.\\\" FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n@@ -24,1 +24,1 @@\n-.TH \"JSTATD\" \"1\" \"2020\" \"JDK 15\" \"JDK Commands\"\n+.TH \"JSTATD\" \"1\" \"2020\" \"JDK 16\" \"JDK Commands\"\n","filename":"src\/jdk.jstatd\/share\/man\/jstatd.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -639,1 +639,0 @@\n-    @SuppressWarnings(\"preview\")\n@@ -649,1 +648,1 @@\n-            throw new UnsupportedOperationException(\"can't get field offset on a record (preview): \" + f);\n+            throw new UnsupportedOperationException(\"can't get field offset on a record class: \" + f);\n@@ -672,1 +671,0 @@\n-    @SuppressWarnings(\"preview\")\n@@ -682,1 +680,1 @@\n-            throw new UnsupportedOperationException(\"can't get field offset on a record (preview): \" + f);\n+            throw new UnsupportedOperationException(\"can't get field offset on a record class: \" + f);\n@@ -698,1 +696,0 @@\n-    @SuppressWarnings(\"preview\")\n@@ -708,1 +705,1 @@\n-            throw new UnsupportedOperationException(\"can't get base address on a record (preview): \" + f);\n+            throw new UnsupportedOperationException(\"can't get base address on a record class: \" + f);\n","filename":"src\/jdk.unsupported\/share\/classes\/sun\/misc\/Unsafe.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2910,0 +2910,4 @@\n+            \/\/ Note that Section 4.5, Extensible data fields, of the PKWARE ZIP File\n+            \/\/ Format Specification does not mandate a specific order for the\n+            \/\/ data in the extra field, therefore Zip FS cannot assume the data\n+            \/\/ is written in the same order by Zip libraries as Zip FS.\n@@ -2915,0 +2919,1 @@\n+            boolean hasZip64LocOffset = false;\n@@ -2958,1 +2963,1 @@\n-                    \/\/ spec says the Extened timestamp in cen only has mtime\n+                    \/\/ spec says the Extended timestamp in cen only has mtime\n@@ -2968,38 +2973,9 @@\n-                    byte[] buf = new byte[LOCHDR];\n-                    if (zipfs.readFullyAt(buf, 0, buf.length , locoff)\n-                        != buf.length)\n-                        throw new ZipException(\"loc: reading failed\");\n-                    if (!locSigAt(buf, 0))\n-                        throw new ZipException(\"loc: wrong sig ->\"\n-                                           + Long.toString(getSig(buf, 0), 16));\n-                    int locElen = LOCEXT(buf);\n-                    if (locElen < 9)    \/\/ EXTT is at least 9 bytes\n-                        break;\n-                    int locNlen = LOCNAM(buf);\n-                    buf = new byte[locElen];\n-                    if (zipfs.readFullyAt(buf, 0, buf.length , locoff + LOCHDR + locNlen)\n-                        != buf.length)\n-                        throw new ZipException(\"loc extra: reading failed\");\n-                    int locPos = 0;\n-                    while (locPos + 4 < buf.length) {\n-                        int locTag = SH(buf, locPos);\n-                        int locSZ  = SH(buf, locPos + 2);\n-                        locPos += 4;\n-                        if (locTag  != EXTID_EXTT) {\n-                            locPos += locSZ;\n-                             continue;\n-                        }\n-                        int end = locPos + locSZ - 4;\n-                        int flag = CH(buf, locPos++);\n-                        if ((flag & 0x1) != 0 && locPos <= end) {\n-                            mtime = unixToJavaTime(LG(buf, locPos));\n-                            locPos += 4;\n-                        }\n-                        if ((flag & 0x2) != 0 && locPos <= end) {\n-                            atime = unixToJavaTime(LG(buf, locPos));\n-                            locPos += 4;\n-                        }\n-                        if ((flag & 0x4) != 0 && locPos <= end) {\n-                            ctime = unixToJavaTime(LG(buf, locPos));\n-                        }\n-                        break;\n+                    \/\/ If the LOC offset is 0xFFFFFFFF, then we need to read the\n+                    \/\/ LOC offset from the EXTID_ZIP64 extra data. Therefore\n+                    \/\/ wait until all of the CEN extra data fields have been processed\n+                    \/\/ prior to reading the LOC extra data field in order to obtain\n+                    \/\/ the Info-ZIP Extended Timestamp.\n+                    if (locoff != ZIP64_MINVAL) {\n+                        readLocEXTT(zipfs);\n+                    } else {\n+                        hasZip64LocOffset = true;\n@@ -3014,0 +2990,7 @@\n+\n+            \/\/ We need to read the LOC extra data and the LOC offset was obtained\n+            \/\/ from the EXTID_ZIP64 field.\n+            if (hasZip64LocOffset) {\n+                readLocEXTT(zipfs);\n+            }\n+\n@@ -3020,0 +3003,47 @@\n+        \/**\n+         * Read the LOC extra field to obtain the Info-ZIP Extended Timestamp fields\n+         * @param zipfs The Zip FS to use\n+         * @throws IOException If an error occurs\n+         *\/\n+        private void readLocEXTT(ZipFileSystem zipfs) throws IOException {\n+            byte[] buf = new byte[LOCHDR];\n+            if (zipfs.readFullyAt(buf, 0, buf.length , locoff)\n+                != buf.length)\n+                throw new ZipException(\"loc: reading failed\");\n+            if (!locSigAt(buf, 0))\n+                throw new ZipException(\"R\"\n+                                   + Long.toString(getSig(buf, 0), 16));\n+            int locElen = LOCEXT(buf);\n+            if (locElen < 9)    \/\/ EXTT is at least 9 bytes\n+                return;\n+            int locNlen = LOCNAM(buf);\n+            buf = new byte[locElen];\n+            if (zipfs.readFullyAt(buf, 0, buf.length , locoff + LOCHDR + locNlen)\n+                != buf.length)\n+                throw new ZipException(\"loc extra: reading failed\");\n+            int locPos = 0;\n+            while (locPos + 4 < buf.length) {\n+                int locTag = SH(buf, locPos);\n+                int locSZ  = SH(buf, locPos + 2);\n+                locPos += 4;\n+                if (locTag  != EXTID_EXTT) {\n+                    locPos += locSZ;\n+                     continue;\n+                }\n+                int end = locPos + locSZ - 4;\n+                int flag = CH(buf, locPos++);\n+                if ((flag & 0x1) != 0 && locPos <= end) {\n+                    mtime = unixToJavaTime(LG(buf, locPos));\n+                    locPos += 4;\n+                }\n+                if ((flag & 0x2) != 0 && locPos <= end) {\n+                    atime = unixToJavaTime(LG(buf, locPos));\n+                    locPos += 4;\n+                }\n+                if ((flag & 0x4) != 0 && locPos <= end) {\n+                    ctime = unixToJavaTime(LG(buf, locPos));\n+                }\n+                break;\n+            }\n+        }\n+\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":69,"deletions":39,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -224,0 +224,9 @@\n+\n+            String codeSize = \"\";\n+            if (nmethod != null) {\n+                long nmethodSize = nmethod.getInstSize();\n+                if (nmethodSize > 0) {\n+                    codeSize = \"(code size: \" + nmethodSize + \")\";\n+                }\n+            }\n+\n@@ -225,1 +234,1 @@\n-            stream.print(getMethod().decodeFlags(bc) + \" \" + getCompiler() + \" \" + getMethod().format(bc));\n+            stream.print(getMethod().decodeFlags(bc) + \" \" + getCompiler() + \" \" + getMethod().format(bc) + codeSize);\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/Compilation.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,0 +98,3 @@\n+            } else if (a.equals(\"-z\")) {\n+                sort = LogParser.sortByNMethodSize;\n+                index++;\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogCompilation.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -384,0 +384,49 @@\n+    static Comparator<LogEvent> sortByNMethodSize = new Comparator<LogEvent>() {\n+\n+        public int compare(LogEvent a, LogEvent b) {\n+            Compilation c1 = a.getCompilation();\n+            Compilation c2 = b.getCompilation();\n+            if ((c1 != null && c2 == null)) {\n+                return -1;\n+            } else if (c1 == null && c2 != null) {\n+                return 1;\n+            } else if (c1 == null && c2 == null) {\n+                return 0;\n+            }\n+\n+            if (c1.getNMethod() != null && c2.getNMethod() == null) {\n+                return -1;\n+            } else if (c1.getNMethod() == null && c2.getNMethod() != null) {\n+                return 1;\n+            } else if (c1.getNMethod() == null && c2.getNMethod() == null) {\n+                return 0;\n+            }\n+\n+            assert c1.getNMethod() != null && c2.getNMethod() != null : \"Neither should be null here\";\n+\n+            long c1Size = c1.getNMethod().getInstSize();\n+            long c2Size = c2.getNMethod().getInstSize();\n+\n+            if (c1Size == 0 && c2Size == 0) {\n+                return 0;\n+            }\n+\n+            if (c1Size > c2Size) {\n+                return -1;\n+            } else if (c1Size < c2Size) {\n+                return 1;\n+            }\n+\n+            return 0;\n+        }\n+\n+        public boolean equals(Object other) {\n+            return false;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return 7;\n+        }\n+  };\n+\n@@ -1122,0 +1171,7 @@\n+            String iOffset = atts.getValue(\"insts_offset\");\n+            String sOffset = atts.getValue(\"stub_offset\");\n+            if (iOffset != null && sOffset != null) {\n+                long insts_offset = parseLong(iOffset);\n+                long stub_offset = parseLong(sOffset);\n+                nm.setInstSize(stub_offset - insts_offset);\n+            }\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,5 @@\n+    \/**\n+     * The nmethod's insts size in bytes.\n+     *\/\n+    private long instSize;\n+\n@@ -82,0 +87,8 @@\n+    public long getInstSize() {\n+        return instSize;\n+    }\n+\n+    public void setInstSize(long size) {\n+        this.instSize = size;\n+    }\n+\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/NMethod.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,9 @@\n+\n+    @Test\n+    public void testDashz() throws Exception {\n+        String[] args = {\"-z\",\n+            logFile\n+        };\n+\n+        LogCompilation.main(args);\n+    }\n","filename":"src\/utils\/LogCompilation\/src\/test\/java\/com\/sun\/hotspot\/tools\/compiler\/TestLogCompilation.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,183 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/g1\/g1ServiceThread.hpp\"\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"utilities\/autoRestore.hpp\"\n+#include \"unittest.hpp\"\n+\n+class CheckTask : public G1ServiceTask {\n+  int _execution_count;\n+  bool _reschedule;\n+\n+public:\n+  CheckTask(const char* name) :\n+      G1ServiceTask(name),\n+      _execution_count(0),\n+      _reschedule(true) { }\n+  virtual void execute() {\n+    _execution_count++;\n+    if (_reschedule) {\n+      schedule(100);\n+    }\n+  }\n+\n+  int execution_count() { return _execution_count;}\n+  void set_reschedule(bool reschedule) { _reschedule = reschedule; }\n+};\n+\n+static void stop_service_thread(G1ServiceThread* thread) {\n+  ThreadInVMfromNative tvn(JavaThread::current());\n+  thread->stop();\n+}\n+\n+\/\/ Test that a task that is added during runtime gets run.\n+TEST_VM(G1ServiceThread, test_add) {\n+  \/\/ Create thread and let it start.\n+  G1ServiceThread* st = new G1ServiceThread();\n+  os::naked_short_sleep(500);\n+\n+  CheckTask ct(\"AddAndRun\");\n+  st->register_task(&ct);\n+\n+  \/\/ Give CheckTask time to run.\n+  os::naked_short_sleep(500);\n+  stop_service_thread(st);\n+\n+  ASSERT_GT(ct.execution_count(), 0);\n+}\n+\n+\/\/ Test that a task that is added while the service thread is\n+\/\/ waiting gets run in a timely manner.\n+TEST_VM(G1ServiceThread, test_add_while_waiting) {\n+  \/\/ Make sure default tasks use long intervals so that the service thread\n+  \/\/ is doing a long wait for the next execution.\n+  AutoModifyRestore<uintx> f1(G1PeriodicGCInterval, 100000);\n+  AutoModifyRestore<uintx> f2(G1ConcRefinementServiceIntervalMillis, 100000);\n+\n+  \/\/ Create thread and let it start.\n+  G1ServiceThread* st = new G1ServiceThread();\n+  os::naked_short_sleep(500);\n+\n+  \/\/ Register a new task that should run right away.\n+  CheckTask ct(\"AddWhileWaiting\");\n+  st->register_task(&ct);\n+\n+  \/\/ Give CheckTask time to run.\n+  os::naked_short_sleep(500);\n+  stop_service_thread(st);\n+\n+  ASSERT_GT(ct.execution_count(), 0);\n+}\n+\n+\/\/ Test that a task with negative timeout is not rescheduled.\n+TEST_VM(G1ServiceThread, test_add_run_once) {\n+  \/\/ Create thread and let it start.\n+  G1ServiceThread* st = new G1ServiceThread();\n+  os::naked_short_sleep(500);\n+\n+  \/\/ Set reschedule to false to only run once.\n+  CheckTask ct(\"AddRunOnce\");\n+  ct.set_reschedule(false);\n+  st->register_task(&ct);\n+\n+  \/\/ Give CheckTask time to run.\n+  os::naked_short_sleep(500);\n+  stop_service_thread(st);\n+\n+  \/\/ Should be exactly 1 since negative timeout should\n+  \/\/ prevent rescheduling.\n+  ASSERT_EQ(ct.execution_count(), 1);\n+}\n+\n+class TestTask : public G1ServiceTask {\n+  jlong _delay_ms;\n+public:\n+  TestTask(jlong delay) :\n+      G1ServiceTask(\"TestTask\"),\n+      _delay_ms(delay) {\n+    set_time(delay);\n+  }\n+  virtual void execute() {}\n+  void update_time(jlong now, int multiplier) {\n+    set_time(now + (_delay_ms * multiplier));\n+  }\n+};\n+\n+TEST_VM(G1ServiceTaskQueue, add_ordered) {\n+  G1ServiceTaskQueue queue;\n+\n+  int num_test_tasks = 5;\n+  for (int i = 1; i <= num_test_tasks; i++) {\n+    \/\/ Create tasks with different timeout.\n+    TestTask* task = new TestTask(100 * i);\n+    queue.add_ordered(task);\n+  }\n+\n+  \/\/ Now fake a run-loop, that reschedules the tasks using a\n+  \/\/ random multiplier.\n+  for (jlong now = 0; now < 1000000; now++) {\n+    \/\/ Random multiplier is at least 1 to ensure progress.\n+    int multiplier = 1 + os::random() % 10;\n+    while (queue.peek()->time() < now) {\n+      TestTask* task = (TestTask*) queue.pop();\n+      \/\/ Update delay multiplier.\n+      task->execute();\n+      task->update_time(now, multiplier);\n+      \/\/ All additions will verify that the queue is sorted.\n+      queue.add_ordered(task);\n+    }\n+  }\n+\n+  while (!queue.is_empty()) {\n+    G1ServiceTask* task = queue.pop();\n+    delete task;\n+  }\n+}\n+\n+#ifdef ASSERT\n+TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, pop_empty,\n+    \"Should never try to verify empty queue\") {\n+  G1ServiceTaskQueue queue;\n+  queue.pop();\n+}\n+\n+TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, peek_empty,\n+    \"Should never try to verify empty queue\") {\n+  G1ServiceTaskQueue queue;\n+  queue.peek();\n+}\n+\n+TEST_VM_ASSERT_MSG(G1ServiceTaskQueue, set_time_in_queue,\n+    \"Not allowed to update time while in queue\") {\n+  G1ServiceTaskQueue queue;\n+  TestTask a(100);\n+  queue.add_ordered(&a);\n+  \/\/ Not allowed to update time while in queue.\n+  a.update_time(500, 1);\n+}\n+\n+#endif\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1ServiceThread.cpp","additions":183,"deletions":0,"binary":false,"changes":183,"status":"added"},{"patch":"@@ -328,0 +328,1 @@\n+ -runtime\/cds\/appcds\/javaldr\/ExceptionDuringDumpAtObjectsInitPhase.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @modules jdk.internal.vm.compiler\n@@ -44,0 +45,17 @@\n+ *\/\n+\n+\/**\n+ * @test\n+ * @requires vm.jvmci & vm.compMode == \"Xmixed\"\n+ * @library \/test\/lib \/\n+ * @library ..\/common\/patches\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.base\/jdk.internal.org.objectweb.asm\n+ *          java.base\/jdk.internal.org.objectweb.asm.tree\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.hotspot\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.code\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.runtime\n+ *\n+ * @build jdk.internal.vm.ci\/jdk.vm.ci.hotspot.CompilerToVMHelper sun.hotspot.WhiteBox\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/IsCompilableTest.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,299 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc;\n+\n+\/* @test\n+ * @requires vm.gc != \"Epsilon\"\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @modules java.base\n+ * @run main ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm\n+ *      -Xbootclasspath\/a:.\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *      gc.TestReferenceRefersTo\n+ *\/\n+\n+import java.lang.ref.PhantomReference;\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.WeakReference;\n+import sun.hotspot.WhiteBox;\n+\n+public class TestReferenceRefersTo {\n+    private static final WhiteBox WB = WhiteBox.getWhiteBox();\n+\n+    private static final class TestObject {\n+        public final int value;\n+\n+        public TestObject(int value) {\n+            this.value = value;\n+        }\n+    }\n+\n+    private static volatile TestObject testObjectNone = null;\n+    private static volatile TestObject testObject1 = null;\n+    private static volatile TestObject testObject2 = null;\n+    private static volatile TestObject testObject3 = null;\n+    private static volatile TestObject testObject4 = null;\n+\n+    private static ReferenceQueue<TestObject> queue = null;\n+\n+    private static PhantomReference<TestObject> testPhantom1 = null;\n+\n+    private static WeakReference<TestObject> testWeak2 = null;\n+    private static WeakReference<TestObject> testWeak3 = null;\n+    private static WeakReference<TestObject> testWeak4 = null;\n+\n+    private static void setup() {\n+        testObjectNone = new TestObject(0);\n+        testObject1 = new TestObject(1);\n+        testObject2 = new TestObject(2);\n+        testObject3 = new TestObject(3);\n+        testObject4 = new TestObject(4);\n+\n+        queue = new ReferenceQueue<TestObject>();\n+\n+        testPhantom1 = new PhantomReference<TestObject>(testObject1, queue);\n+\n+        testWeak2 = new WeakReference<TestObject>(testObject2, queue);\n+        testWeak3 = new WeakReference<TestObject>(testObject3, queue);\n+        testWeak4 = new WeakReference<TestObject>(testObject4, queue);\n+    }\n+\n+    private static void gcUntilOld(Object o) throws Exception {\n+        if (!WB.isObjectInOldGen(o)) {\n+            WB.fullGC();\n+            if (!WB.isObjectInOldGen(o)) {\n+                fail(\"object not promoted by full gc\");\n+            }\n+        }\n+    }\n+\n+    private static void gcUntilOld() throws Exception {\n+        gcUntilOld(testObjectNone);\n+        gcUntilOld(testObject1);\n+        gcUntilOld(testObject2);\n+        gcUntilOld(testObject3);\n+        gcUntilOld(testObject4);\n+\n+        gcUntilOld(testPhantom1);\n+\n+        gcUntilOld(testWeak2);\n+        gcUntilOld(testWeak3);\n+        gcUntilOld(testWeak4);\n+    }\n+\n+    private static void progress(String msg) {\n+        System.out.println(msg);\n+    }\n+\n+    private static void fail(String msg) throws Exception {\n+        throw new RuntimeException(msg);\n+    }\n+\n+    private static void expectCleared(Reference<TestObject> ref,\n+                                      String which) throws Exception {\n+        expectNotValue(ref, testObjectNone, which);\n+        if (!ref.refersTo(null)) {\n+            fail(\"expected \" + which + \" to be cleared\");\n+        }\n+    }\n+\n+    private static void expectNotCleared(Reference<TestObject> ref,\n+                                         String which) throws Exception {\n+        expectNotValue(ref, testObjectNone, which);\n+        if (ref.refersTo(null)) {\n+            fail(\"expected \" + which + \" to not be cleared\");\n+        }\n+    }\n+\n+    private static void expectValue(Reference<TestObject> ref,\n+                                    TestObject value,\n+                                    String which) throws Exception {\n+        expectNotValue(ref, testObjectNone, which);\n+        expectNotCleared(ref, which);\n+        if (!ref.refersTo(value)) {\n+            fail(which + \" doesn't refer to expected value\");\n+        }\n+    }\n+\n+    private static void expectNotValue(Reference<TestObject> ref,\n+                                       TestObject value,\n+                                       String which) throws Exception {\n+        if (ref.refersTo(value)) {\n+            fail(which + \" refers to unexpected value\");\n+        }\n+    }\n+\n+    private static void checkInitialStates() throws Exception {\n+        expectValue(testPhantom1, testObject1, \"testPhantom1\");\n+        expectValue(testWeak2, testObject2, \"testWeak2\");\n+        expectValue(testWeak3, testObject3, \"testWeak3\");\n+        expectValue(testWeak4, testObject4, \"testWeak4\");\n+    }\n+\n+    private static void discardStrongReferences() {\n+        \/\/ testObjectNone not dropped\n+        testObject1 = null;\n+        testObject2 = null;\n+        \/\/ testObject3 not dropped\n+        testObject4 = null;\n+    }\n+\n+    private static void testConcurrentCollection() throws Exception {\n+        progress(\"setup concurrent collection test\");\n+        setup();\n+        progress(\"gcUntilOld\");\n+        gcUntilOld();\n+\n+        progress(\"acquire control of concurrent cycles\");\n+        WB.concurrentGCAcquireControl();\n+        try {\n+            progress(\"check initial states\");\n+            checkInitialStates();\n+\n+            progress(\"discard strong references\");\n+            discardStrongReferences();\n+\n+            progress(\"run GC to before marking completed\");\n+            WB.concurrentGCRunTo(WB.BEFORE_MARKING_COMPLETED);\n+\n+            progress(\"fetch test objects, possibly keeping some alive\");\n+            expectNotCleared(testPhantom1, \"testPhantom1\");\n+            expectNotCleared(testWeak2, \"testWeak2\");\n+            expectValue(testWeak3, testObject3, \"testWeak3\");\n+\n+            \/\/ For some collectors, calling get() will keep testObject4 alive.\n+            if (testWeak4.get() == null) {\n+                fail(\"testWeak4 unexpectedly == null\");\n+            }\n+\n+            progress(\"finish collection\");\n+            WB.concurrentGCRunToIdle();\n+\n+            progress(\"verify expected clears\");\n+            expectCleared(testPhantom1, \"testPhantom1\");\n+            expectCleared(testWeak2, \"testWeak2\");\n+            expectValue(testWeak3, testObject3, \"testWeak3\");\n+            \/\/ This is true for all currently supported concurrent collectors.\n+            expectNotCleared(testWeak4, \"testWeak4\");\n+\n+            progress(\"verify get returns expected values\");\n+            if (testWeak2.get() != null) {\n+                fail(\"testWeak2.get() != null\");\n+            }\n+\n+            TestObject obj3 = testWeak3.get();\n+            if (obj3 == null) {\n+                fail(\"testWeak3.get() returned null\");\n+            } else if (obj3.value != 3) {\n+                fail(\"testWeak3.get().value is \" + obj3.value);\n+            }\n+\n+            TestObject obj4 = testWeak4.get();\n+            if (obj4 == null) {\n+                fail(\"testWeak4.get() returned null\");\n+            } else if (obj4.value != 4) {\n+                fail(\"testWeak4.get().value is \" + obj4.value);\n+            }\n+\n+            progress(\"verify queue entries\");\n+            long timeout = 60000; \/\/ 1 minute of milliseconds.\n+            while (true) {\n+                Reference<? extends TestObject> ref = queue.remove(timeout);\n+                if (ref == null) {\n+                    break;\n+                } else if (ref == testPhantom1) {\n+                    testPhantom1 = null;\n+                } else if (ref == testWeak2) {\n+                    testWeak2 = null;\n+                } else if (ref == testWeak3) {\n+                    testWeak3 = null;\n+                } else if (ref == testWeak4) {\n+                    testWeak4 = null;\n+                } else {\n+                    fail(\"unexpected reference in queue\");\n+                }\n+            }\n+            if (testPhantom1 != null) {\n+                fail(\"testPhantom1 not notified\");\n+            } else if (testWeak2 != null) {\n+                fail(\"testWeak2 not notified\");\n+            } else if (testWeak3 == null) {\n+                fail(\"testWeak3 notified\");\n+            } else if (testWeak4 == null) {\n+                if (obj4 != null) {\n+                    fail(\"testWeak4 notified\");\n+                }\n+            }\n+\n+        } finally {\n+            progress(\"release control of concurrent cycles\");\n+            WB.concurrentGCReleaseControl();\n+        }\n+        progress(\"finished concurrent collection test\");\n+    }\n+\n+    private static void testSimpleCollection() throws Exception {\n+        progress(\"setup simple collection test\");\n+        setup();\n+        progress(\"gcUntilOld\");\n+        gcUntilOld();\n+\n+        progress(\"check initial states\");\n+        checkInitialStates();\n+\n+        progress(\"discard strong references\");\n+        TestObject tw4 = testWeak4.get(); \/\/ Keep testObject4 alive.\n+        discardStrongReferences();\n+\n+        progress(\"collect garbage\");\n+        WB.fullGC();\n+\n+        progress(\"verify expected clears\");\n+        expectCleared(testPhantom1, \"testPhantom1\");\n+        expectCleared(testWeak2, \"testWeak2\");\n+        expectValue(testWeak3, testObject3, \"testWeak3\");\n+        expectNotCleared(testWeak4, \"testWeak4\");\n+\n+        progress(\"verify get returns expected values\");\n+        if (testWeak2.get() != null) {\n+            fail(\"testWeak2.get() != null\");\n+        } else if (testWeak3.get() != testObject3) {\n+            fail(\"testWeak3.get() is not expected value\");\n+        } else if (testWeak4.get() != tw4) {\n+            fail(\"testWeak4.get() is not expected value\");\n+        }\n+\n+        progress(\"finished simple collection test\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        if (WB.supportsConcurrentGCBreakpoints()) {\n+            testConcurrentCollection();\n+        }\n+        testSimpleCollection();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/TestReferenceRefersTo.java","additions":299,"deletions":0,"binary":false,"changes":299,"status":"added"},{"patch":"@@ -31,0 +31,1 @@\n+ * @requires vm.gc != \"Shenandoah\"\n","filename":"test\/hotspot\/jtreg\/gc\/TestSoftReferencesBehaviorOnOOME.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8255400\n+ * @summary C2 failures after JDK-8255000\n+ * @requires vm.gc.Shenandoah\n+ * @modules java.base\/jdk.internal.misc:+open\n+ *\n+ * @run main\/othervm -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:+UseShenandoahGC TestBarrierExpansionDeadMemPhi\n+ *\n+ *\n+ *\/\n+\n+import jdk.internal.misc.Unsafe;\n+import java.util.Arrays;\n+import java.lang.reflect.Field;\n+\n+public class TestBarrierExpansionDeadMemPhi {\n+\n+    static final jdk.internal.misc.Unsafe UNSAFE = Unsafe.getUnsafe();\n+\n+    static final long F_OFFSET;\n+\n+    static class A {\n+        int f;\n+    }\n+\n+    static {\n+        try {\n+            Field fField = A.class.getDeclaredField(\"f\");\n+            F_OFFSET = UNSAFE.objectFieldOffset(fField);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    static int test(Object[] array) {\n+        int f = 0;\n+        for (int i = 0; i < 100; i++) {\n+            f += UNSAFE.getInt(array[i], F_OFFSET);\n+        }\n+        return f;\n+    }\n+\n+    static public void main(String[] args) {\n+        Object[] array = new Object[100];\n+        Arrays.fill(array, new A());\n+\n+        for (int i = 0; i < 20000; i++) {\n+            test(array);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/TestBarrierExpansionDeadMemPhi.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -63,1 +63,1 @@\n-    output_detail.shouldMatch(\"# +SIGFPE.*\");\n+    output_detail.shouldMatch(\"#.+SIGFPE.*\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SecondaryErrorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @modules jdk.internal.vm.compiler\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationGraalTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,1 +45,2 @@\n-                        \"@lambda-proxy: WrongBSM 7\"));\n+                        \"@lambda-proxy WrongBSM 7\"),\n+        \"-Xlog:cds+lambda=debug\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/BadBSM.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            OutputAnalyzer output = TestCommon.dump(appJar, appClasses);\n+            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds+lambda=debug\");\n@@ -66,1 +66,1 @@\n-            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds\");\n+            OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:cds\", \"-Xlog:cds+lambda=debug\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassListFormatBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,0 +108,7 @@\n+        \/\/ 10. The line with incorrect (less) number of items.\n+        dumpShouldFail(\n+            \"TESTCASE 10: With incorrect @lambda-form-invoker tag\",\n+            appJar, classlist(\n+                \"Hello\",\n+                \"@lambda-form-invoker-xxx [LF_RESOLVE] java.lang.invoke.DirectMethodHandle$Holder invokeStatic\"),\n+                \"Invalid @ tag at the beginning of line \\\"@lambda-form-invoker-xxx\\\" line #2\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassListWithLF.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n+                        \"@lambda-proxy LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n@@ -52,1 +52,1 @@\n-                        \"@lambda-proxy: LambHello\"));\n+                        \"@lambda-proxy LambHello\"));\n@@ -54,1 +54,1 @@\n-       .shouldContain(\"Line with @ tag has too few items \\\"@lambda-proxy:\\\" line #2\")\n+       .shouldContain(\"Line with @ tag has too few items \\\"@lambda-proxy\\\" line #2\")\n@@ -61,1 +61,1 @@\n-                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()Z\"));\n+                        \"@lambda-proxy LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()Z\"));\n@@ -68,1 +68,1 @@\n-                        \"@lambda-proxy:  LambHello run  ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n+                        \"@lambda-proxy  LambHello run  ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n@@ -74,1 +74,1 @@\n-                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V \"));\n+                        \"@lambda-proxy LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V \"));\n@@ -76,0 +76,7 @@\n+\n+    \/\/ 6. Error on invalid @lambda-proxy tag\n+    out = TestCommon.dump(appJar,\n+        TestCommon.list(\"LambHello\",\n+                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n+    out.shouldContain(\"Invalid @ tag at the beginning of line \\\"@lambda-proxy:\\\" line #2\")\n+       .shouldHaveExitValue(1);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaProxyClasslist.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Out of memory When dumping the CDS archive\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ * @requires vm.cds.archived.java.heap\n+ * @requires vm.jvmti\n+ * @run driver ExceptionDuringDumpAtObjectsInitPhase\n+ *\/\n+\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class ExceptionDuringDumpAtObjectsInitPhase {\n+    public static String appClasses[] = {\n+        Hello.class.getName(),\n+    };\n+    public static String agentClasses[] = {\n+        GCDuringDumpTransformer.class.getName(),\n+        GCDuringDumpTransformer.MyCleaner.class.getName(),\n+    };\n+\n+    public static void main(String[] args) throws Throwable {\n+        String agentJar =\n+            ClassFileInstaller.writeJar(\"GCDuringDumpTransformer.jar\",\n+                                        ClassFileInstaller.Manifest.fromSourceFile(\"GCDuringDumpTransformer.mf\"),\n+                                        agentClasses);\n+\n+        String appJar =\n+            ClassFileInstaller.writeJar(\"GCDuringDumpApp.jar\", appClasses);\n+\n+        String gcLog = Boolean.getBoolean(\"test.cds.verbose.gc\") ?\n+            \"-Xlog:gc*=info,gc+region=trace,gc+alloc+region=debug\" : \"-showversion\";\n+\n+        \/\/ 1. Test with exception\n+        System.out.println(\"1. Exception during dump\");\n+        TestCommon.dump(appJar,\n+                        TestCommon.list(Hello.class.getName()),\n+                        \"-XX:+UnlockDiagnosticVMOptions\",\n+                        \"-XX:+AllowArchivingWithJavaAgent\",\n+                        \"-javaagent:\" + agentJar,\n+                        \"-Xlog:cds,class+load\",\n+                        \"-Xmx32m\",\n+                        \"-Dtest.with.exception=true\",\n+                        gcLog).shouldNotHaveExitValue(0)\n+                              .shouldContain(\"Preload Error: Failed to load jdk\/internal\/math\/FDBigInteger\")\n+                              .shouldContain(\"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n+\n+        \/\/ 2. Test with OOM\n+        System.out.println(\"2. OOM during dump\");\n+        TestCommon.dump(appJar,\n+                        TestCommon.list(Hello.class.getName()),\n+                        \"-XX:+UnlockDiagnosticVMOptions\",\n+                        \"-XX:+AllowArchivingWithJavaAgent\",\n+                        \"-javaagent:\" + agentJar,\n+                        \"-Dtest.with.oom=true\",\n+                        \"-Xlog:cds,class+load\",\n+                        \"-Xmx12M\",\n+                        gcLog).shouldNotHaveExitValue(0)\n+                              .shouldContain(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/javaldr\/ExceptionDuringDumpAtObjectsInitPhase.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -29,0 +29,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -33,0 +35,4 @@\n+    static boolean TEST_WITH_EXCEPTION = Boolean.getBoolean(\"test.with.exception\");\n+    static boolean TEST_WITH_OOM = Boolean.getBoolean(\"test.with.oom\");\n+    static List<byte[]> waste = new ArrayList();\n+\n@@ -48,0 +54,16 @@\n+        \/\/ jdk\/internal\/math\/FDBigInteger is loaded as part of archived heap.\n+        if (name.equals(\"jdk\/internal\/math\/FDBigInteger\")) {\n+            System.out.println(\"Transforming class jdk\/internal\/math\/FDBigInteger\");\n+            if (TEST_WITH_EXCEPTION) {\n+              System.out.println(\"Return bad buffer for \" + name);\n+              return new byte[] {1, 2, 3, 4, 5, 6, 7, 8};\n+            }\n+            if (TEST_WITH_OOM) {\n+                \/\/ fill until OOM\n+                System.out.println(\"Fill objects until OOM\");\n+                for (;;) {\n+                    waste.add(new byte[64*1024]);\n+                }\n+            }\n+        }\n+\n@@ -63,1 +85,0 @@\n-\n@@ -71,0 +92,2 @@\n+        System.out.println(\"ClassFileTransformer.premain() is called: TEST_WITH_EXCEPTION = \" + TEST_WITH_EXCEPTION);\n+        System.out.println(\"ClassFileTransformer.premain() is called: TEST_WITH_OOM = \" + TEST_WITH_OOM);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/javaldr\/GCDuringDumpTransformer.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+            \"-Dtest.src=\" + TEST_SRC,\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/NewModuleFinderTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Arm Limited. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test PerfMapTest\n+ * @bug 8254723\n+ * @requires os.family == \"linux\"\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.compiler\n+ *          java.management\n+ *          jdk.internal.jvmstat\/sun.jvmstat.monitor\n+ * @run testng\/othervm PerfMapTest\n+ * @summary Test of diagnostic command Compiler.perfmap\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import org.testng.Assert;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.dcmd.CommandExecutor;\n+import jdk.test.lib.dcmd.JMXExecutor;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+\/**\n+ * Call jcmd Compiler.perfmap and check the output file has the expected\n+ * format.\n+ *\/\n+public class PerfMapTest {\n+\n+    static final Pattern LINE_PATTERN =\n+        Pattern.compile(\"^((?:0x)?\\\\p{XDigit}+)\\\\s+((?:0x)?\\\\p{XDigit}+)\\\\s+(.*)$\");\n+\n+    public void run(CommandExecutor executor) {\n+        OutputAnalyzer output = executor.execute(\"Compiler.perfmap\");\n+\n+        output.stderrShouldBeEmpty();\n+        output.stdoutShouldBeEmpty();\n+\n+        final long pid = ProcessHandle.current().pid();\n+        final Path path = Paths.get(String.format(\"\/tmp\/perf-%d.map\", pid));\n+\n+        Assert.assertTrue(Files.exists(path));\n+\n+        \/\/ Sanity check the file contents\n+        try {\n+            for (String entry : Files.readAllLines(path)) {\n+                Matcher m = LINE_PATTERN.matcher(entry);\n+                Assert.assertTrue(m.matches(), \"Invalid file format: \" + entry);\n+            }\n+        } catch (IOException e) {\n+            Assert.fail(e.toString());\n+        }\n+    }\n+\n+    @Test\n+    public void jmx() {\n+        run(new JMXExecutor());\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/PerfMapTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -29,2 +29,0 @@\n-\n-com\/sun\/jdi\/EATests.java#id0 8255072 generic-all\n","filename":"test\/jdk\/ProblemList-zgc.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -257,1 +257,0 @@\n-java\/awt\/image\/DrawImage\/IncorrectUnmanagedImageRotatedClip.java 8196087 windows-all\n@@ -264,1 +263,0 @@\n-sun\/awt\/shell\/FileSystemViewMemoryLeak.java 8241806 windows-all\n@@ -744,1 +742,0 @@\n-javax\/swing\/JColorChooser\/Test6541987.java 8143021 windows-all,linux-all,macosx-all\n@@ -749,1 +746,0 @@\n-javax\/swing\/JFileChooser\/8041694\/bug8041694.java 8196302 windows-all,macosx-all\n@@ -751,1 +747,0 @@\n-javax\/swing\/Action\/8133039\/bug8133039.java 8196089 windows-all,macosx-all\n@@ -765,1 +760,0 @@\n-javax\/swing\/text\/CSSBorder\/6796710\/bug6796710.java 8196099 windows-all\n@@ -772,1 +766,0 @@\n-javax\/swing\/JFileChooser\/8021253\/bug8021253.java 8169954 windows-all,linux-all,macosx-all\n@@ -786,3 +779,0 @@\n-javax\/swing\/text\/View\/8014863\/bug8014863.java 8233561 macosx-all\n-javax\/swing\/text\/StyledEditorKit\/4506788\/bug4506788.java 8233562 macosx-all\n-javax\/swing\/text\/JTextComponent\/6361367\/bug6361367.java 8233569 macosx-all\n@@ -794,1 +784,0 @@\n-javax\/swing\/JMenuItem\/ActionListenerCalledTwice\/ActionListenerCalledTwiceTest.java 8233637 macosx-all\n@@ -796,1 +785,0 @@\n-javax\/swing\/JMenuItem\/4171437\/bug4171437.java 8233641 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-        \/\/ For the same reason as the *.dll above, the jdk.incubator.jpackage module\n+        \/\/ For the same reason as the *.dll above, the jdk.jpackage module\n@@ -176,1 +176,1 @@\n-                .filter(f -> !f.matches(\".*jdk\\\\.incubator\\\\.jpackage.*\\\\.h.*\"))\n+                .filter(f -> !f.matches(\".*jdk\\\\.jpackage.*\\\\.h.*\"))\n","filename":"test\/jdk\/build\/AbsPathsInImage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n- * @requires ((vm.compMode == \"Xmixed\") & vm.jvmci)\n+ * @requires ((vm.compMode == \"Xmixed\") & vm.graal.enabled)\n@@ -150,0 +150,1 @@\n+import sun.hotspot.gc.GC;\n@@ -300,0 +301,1 @@\n+        public final boolean ZGCIsSelected;\n@@ -312,0 +314,2 @@\n+            val = testCaseBaseTargetClass.getValue(testCaseBaseTargetClass.fieldByName(\"ZGCIsSelected\"));\n+            ZGCIsSelected = ((PrimitiveValue) val).booleanValue();\n@@ -777,4 +781,5 @@\n-    public static final boolean UseJVMCICompiler     = unbox(WB.getBooleanVMFlag(\"UseJVMCICompiler\"), false); \/\/ read by debugger\n-    public static final boolean DoEscapeAnalysis     = unbox(WB.getBooleanVMFlag(\"DoEscapeAnalysis\"), UseJVMCICompiler);\n-    public static final boolean EliminateAllocations = unbox(WB.getBooleanVMFlag(\"EliminateAllocations\"), UseJVMCICompiler); \/\/ read by debugger\n-    public static final boolean DeoptimizeObjectsALot   = WB.getBooleanVMFlag(\"DeoptimizeObjectsALot\");                      \/\/ read by debugger\n+    \/\/ Some of the fields are only read by the debugger\n+    public static final boolean UseJVMCICompiler = unbox(WB.getBooleanVMFlag(\"UseJVMCICompiler\"), false);\n+    public static final boolean DoEscapeAnalysis = unbox(WB.getBooleanVMFlag(\"DoEscapeAnalysis\"), UseJVMCICompiler);\n+    public static final boolean EliminateAllocations = unbox(WB.getBooleanVMFlag(\"EliminateAllocations\"), UseJVMCICompiler);\n+    public static final boolean DeoptimizeObjectsALot = WB.getBooleanVMFlag(\"DeoptimizeObjectsALot\");\n@@ -783,0 +788,1 @@\n+    public static final boolean ZGCIsSelected = GC.Z.isSelected();\n@@ -1082,1 +1088,1 @@\n-            this.array = new long[size];\n+            this.array = size > 0 ? new long[size] : null;\n@@ -1092,1 +1098,1 @@\n-        while(size > 0) {\n+        while(true) {\n@@ -1098,0 +1104,1 @@\n+                if (size == 0) break;\n@@ -2606,4 +2613,2 @@\n-        Asserts.assertTrue(coughtOom || !env.targetVMOptions.EliminateAllocations,\n-                           \"PopFrame should have triggered an OOM exception in target\");\n-        String expectedTopFrame =\n-                env.targetVMOptions.EliminateAllocations ? \"dontinline_consume_all_memory_brkpt\" : \"dontinline_testMethod\";\n+        Asserts.assertTrue(coughtOom, \"PopFrame should have triggered an OOM exception in target\");\n+        String expectedTopFrame = \"dontinline_consume_all_memory_brkpt\";\n@@ -2618,1 +2623,6 @@\n-        return super.shouldSkip() || env.targetVMOptions.DeoptimizeObjectsALot || env.targetVMOptions.UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !env.targetVMOptions.EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                env.targetVMOptions.ZGCIsSelected ||\n+                env.targetVMOptions.DeoptimizeObjectsALot ||\n+                env.targetVMOptions.UseJVMCICompiler;\n@@ -2658,1 +2668,6 @@\n-        return super.shouldSkip() || DeoptimizeObjectsALot || UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                ZGCIsSelected ||\n+                DeoptimizeObjectsALot ||\n+                UseJVMCICompiler;\n@@ -2697,4 +2712,2 @@\n-        Asserts.assertTrue(coughtOom || !env.targetVMOptions.EliminateAllocations,\n-                           \"PopFrame should have triggered an OOM exception in target\");\n-        String expectedTopFrame =\n-                env.targetVMOptions.EliminateAllocations ? \"inlinedCallForcedToReturn\" : \"dontinline_testMethod\";\n+        Asserts.assertTrue(coughtOom, \"PopFrame should have triggered an OOM exception in target\");\n+        String expectedTopFrame = \"inlinedCallForcedToReturn\";\n@@ -2708,1 +2721,6 @@\n-        return super.shouldSkip() || env.targetVMOptions.DeoptimizeObjectsALot || env.targetVMOptions.UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !env.targetVMOptions.EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                env.targetVMOptions.ZGCIsSelected ||\n+                env.targetVMOptions.DeoptimizeObjectsALot ||\n+                env.targetVMOptions.UseJVMCICompiler;\n@@ -2764,1 +2782,6 @@\n-        return super.shouldSkip() || DeoptimizeObjectsALot || UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                ZGCIsSelected ||\n+                DeoptimizeObjectsALot ||\n+                UseJVMCICompiler;\n@@ -2951,6 +2974,4 @@\n-        if (env.targetVMOptions.EliminateAllocations) {\n-            printStack(thread);\n-            Asserts.assertTrue(coughtOom, \"ForceEarlyReturn should have triggered an OOM exception in target\");\n-            msg(\"ForceEarlyReturn(2)\");\n-            thread.forceEarlyReturn(env.vm().mirrorOf(43));\n-        }\n+        Asserts.assertTrue(coughtOom, \"ForceEarlyReturn should have triggered an OOM exception in target\");\n+        printStack(thread);\n+        msg(\"ForceEarlyReturn(2)\");\n+        thread.forceEarlyReturn(env.vm().mirrorOf(43));\n@@ -2967,1 +2988,6 @@\n-        return super.shouldSkip() || env.targetVMOptions.DeoptimizeObjectsALot || env.targetVMOptions.UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !env.targetVMOptions.EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                env.targetVMOptions.ZGCIsSelected ||\n+                env.targetVMOptions.DeoptimizeObjectsALot ||\n+                env.targetVMOptions.UseJVMCICompiler;\n@@ -3024,1 +3050,6 @@\n-        return super.shouldSkip() || DeoptimizeObjectsALot || UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                ZGCIsSelected ||\n+                DeoptimizeObjectsALot ||\n+                UseJVMCICompiler;\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":58,"deletions":27,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    public void TestGetters() {\n+    public void testGetters() {\n@@ -41,0 +41,1 @@\n+\n@@ -43,0 +44,3 @@\n+        assertEquals(principal.getName(), \"123:test\");\n+        assertEquals(principal.toString(), principal.getName());\n+        assertEquals((\"test\"+\"123\").hashCode(), principal.hashCode());\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpPrincipalTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,3 @@\n- * @author Sergey Bylokhov\n+ * @run main\/othervm -Dsun.java2d.uiScale=1 IncorrectUnmanagedImageRotatedClip\n+ * @run main\/othervm -Dsun.java2d.uiScale=2 IncorrectUnmanagedImageRotatedClip\n+ * @run main\/othervm -Dsun.java2d.uiScale=3 IncorrectUnmanagedImageRotatedClip\n","filename":"test\/jdk\/java\/awt\/image\/DrawImage\/IncorrectUnmanagedImageRotatedClip.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @bug 8080835 8139206\n+ * @bug 8080835 8139206 8254742\n@@ -47,0 +47,1 @@\n+        test();\n@@ -138,0 +139,13 @@\n+    static void test() throws IOException {\n+        final int chunkSize = 8192;\n+        int size = (10 + generator.nextInt(11))*chunkSize;\n+\n+        byte[] buf = new byte[size];\n+        generator.nextBytes(buf);\n+        InputStream s = new ThrottledByteArrayInputStream(buf);\n+\n+        byte[] b = s.readNBytes(size);\n+\n+        check(Arrays.equals(b, buf), \"Arrays not equal\");\n+    }\n+\n@@ -153,1 +167,0 @@\n-\n@@ -160,0 +173,22 @@\n+\n+    static class ThrottledByteArrayInputStream extends ByteArrayInputStream {\n+        private int count = 0;\n+\n+        ThrottledByteArrayInputStream(byte[] buf) {\n+            super(buf);\n+        }\n+\n+        @Override\n+        \/\/\n+        \/\/ Sometimes return zero or a smaller count than requested.\n+        \/\/\n+        public int read(byte[] buf, int off, int len) {\n+            if (generator.nextBoolean()) {\n+                return 0;\n+            } else if (++count \/ 3 == 0) {\n+                len \/= 3;\n+            }\n+\n+            return super.read(buf, off, len);\n+        }\n+    }\n","filename":"test\/jdk\/java\/io\/InputStream\/ReadNBytes.java","additions":38,"deletions":3,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255398\n+ * @run testng TestDropReturn\n+ *\/\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+\n+import static java.lang.invoke.MethodType.methodType;\n+import static org.testng.Assert.assertEquals;\n+\n+public class TestDropReturn {\n+\n+    @Test(dataProvider = \"dropReturnCases\")\n+    public void testDropReturn(Class<?> cls, Object testValue) throws Throwable {\n+        MethodHandle mh = MethodHandles.identity(cls);\n+        assertEquals(mh.type(), methodType(cls, cls));\n+        Object x = mh.invoke(testValue);\n+        assertEquals(x, testValue);\n+\n+        mh = MethodHandles.dropReturn(mh);\n+        assertEquals(mh.type(), methodType(void.class, cls));\n+        mh.invoke(testValue); \/\/ should at least work\n+    }\n+\n+    @DataProvider\n+    public static Object[][] dropReturnCases() {\n+        return new Object[][]{\n+            { boolean.class, true         },\n+            { byte.class,    (byte) 10    },\n+            { char.class,    'x'          },\n+            { short.class,   (short) 10   },\n+            { int.class,     10           },\n+            { long.class,    10L          },\n+            { float.class,   10F          },\n+            { double.class,  10D          },\n+            { Object.class,  new Object() },\n+            { String.class,  \"ABCD\"       },\n+        };\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandles\/TestDropReturn.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -34,1 +34,1 @@\n- * @run testng\/othervm --enable-preview BasicTest\n+ * @run testng\/othervm BasicTest\n@@ -80,2 +80,1 @@\n-        compileSources(SRC_DIR, CLASSES_DIR,\n-                \"--enable-preview\", \"-source\", String.valueOf(Runtime.version().feature()));\n+        compileSources(SRC_DIR, CLASSES_DIR);\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/BasicTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8188055\n+ * @summary Basic functional test of Reference.refersTo.\n+ *\/\n+\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.PhantomReference;\n+import java.lang.ref.SoftReference;\n+import java.lang.ref.WeakReference;\n+\n+public class ReferenceRefersTo {\n+    private static final void fail(String msg) throws Exception {\n+        throw new RuntimeException(msg);\n+    }\n+\n+    private static final <T extends Reference> void test(T ref,\n+                                                         Object expectedValue,\n+                                                         Object unexpectedValue,\n+                                                         String kind) throws Exception {\n+        if ((expectedValue != null) && ref.refersTo(null)) {\n+            fail(kind + \"refers to null\");\n+        }\n+        if (!ref.refersTo(expectedValue)) {\n+            fail(kind + \" doesn't refer to expected value\");\n+        }\n+        if (ref.refersTo(unexpectedValue)) {\n+            fail(kind + \" refers to unexpected value\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        var queue = new ReferenceQueue<Object>();\n+\n+        var obj0 = new Object();\n+        var obj1 = new Object();\n+        var obj2 = new Object();\n+        var obj3 = new Object();\n+\n+        var pref = new PhantomReference(obj0, queue);\n+        var wref = new WeakReference(obj1);\n+        var sref = new SoftReference(obj2);\n+\n+        test(pref, obj0, obj3, \"phantom\");\n+        test(wref, obj1, obj3, \"weak\");\n+        test(sref, obj2, obj3, \"soft\");\n+\n+        pref.clear();\n+        wref.clear();\n+        sref.clear();\n+\n+        test(pref, null, obj3, \"phantom\");\n+        test(wref, null, obj3, \"weak\");\n+        test(sref, null, obj3, \"soft\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/ref\/ReferenceRefersTo.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -52,1 +52,1 @@\n- * @bug 8245121\n+ * @bug 8219014 8245121\n@@ -145,0 +145,1 @@\n+        MethodHandle asReadOnlyBuffer;\n@@ -148,0 +149,1 @@\n+        MethodHandle putBufAbs;\n@@ -171,0 +173,3 @@\n+\n+                asReadOnlyBuffer = lookup.findVirtual(bufferType,\n+                        \"asReadOnlyBuffer\", MethodType.methodType(bufferType));\n@@ -180,0 +185,4 @@\n+\n+                putBufAbs = lookup.findVirtual(bufferType, \"put\",\n+                    MethodType.methodType(bufferType, int.class, bufferType,\n+                        int.class, int.class));\n@@ -182,0 +191,1 @@\n+\n@@ -242,0 +252,19 @@\n+        Buffer asReadOnlyBuffer(Buffer buf) throws Throwable {\n+            try {\n+                return (Buffer)asReadOnlyBuffer.invoke(buf);\n+            } catch (Exception e) {\n+                throw new AssertionError(e);\n+            }\n+        }\n+\n+        void put(Buffer src, int srcOff, Buffer dst, int dstOff, int length)\n+            throws Throwable {\n+            try {\n+                putBufAbs.invoke(dst, dstOff, src, srcOff, length);\n+            } catch (ReadOnlyBufferException ro) {\n+                throw ro;\n+            } catch (Exception e) {\n+                throw new AssertionError(e);\n+            }\n+        }\n+\n@@ -297,0 +326,34 @@\n+    private static void expectThrows(Class<?> exClass, Assert.ThrowingRunnable r) {\n+        try {\n+            r.run();\n+        } catch(Throwable e) {\n+            if (e.getClass() != exClass && e.getCause().getClass() != exClass) {\n+                throw new RuntimeException(\"Expected \" + exClass +\n+                \"; got \" + e.getCause().getClass(), e);\n+            }\n+        }\n+    }\n+\n+    @Test(dataProvider = \"proxies\")\n+    public static void testExceptions(BufferProxy bp) throws Throwable {\n+        int cap = 27;\n+        Buffer buf = bp.create(cap);\n+\n+        expectThrows(IndexOutOfBoundsException.class,\n+            () -> bp.put(buf, -1, buf, 0, 1));\n+        expectThrows(IndexOutOfBoundsException.class,\n+            () -> bp.put(buf, 0, buf, -1, 1));\n+        expectThrows(IndexOutOfBoundsException.class,\n+            () -> bp.put(buf, 1, buf, 0, cap));\n+        expectThrows(IndexOutOfBoundsException.class,\n+            () -> bp.put(buf, 0, buf, 1, cap));\n+        expectThrows(IndexOutOfBoundsException.class,\n+            () -> bp.put(buf, 0, buf, 0, cap + 1));\n+        expectThrows(IndexOutOfBoundsException.class,\n+            () -> bp.put(buf, 0, buf, 0, Integer.MAX_VALUE));\n+\n+        Buffer rob = buf.isReadOnly() ? buf : bp.asReadOnlyBuffer(buf);\n+        expectThrows(ReadOnlyBufferException.class,\n+            () -> bp.put(buf, 0, rob, 0, cap));\n+    }\n+\n@@ -314,2 +377,0 @@\n-            } else {\n-                bp.copy(lower, 0, lowerCopy, 0, lowerLength);\n@@ -317,0 +378,1 @@\n+            bp.copy(lower, 0, lowerCopy, 0, lowerLength);\n@@ -320,0 +382,2 @@\n+            Buffer middleCopy = bp.create(lowerLength);\n+            bp.copy(middle, 0, middleCopy, 0, lowerLength);\n@@ -321,7 +385,1 @@\n-            if (middle.isReadOnly()) {\n-                Assert.expectThrows(ReadOnlyBufferException.class,\n-                    () -> bp.put(lower, middle));\n-                break;\n-            } else {\n-                bp.put(lower, middle);\n-            }\n+            bp.put(lower, middle);\n@@ -330,0 +388,10 @@\n+            Assert.assertTrue(bp.equals(lowerCopy, middle),\n+                String.format(\"%d %s %d %d %d %d%n\", SEED,\n+                    buf.getClass().getName(), cap,\n+                    lowerOffset, lowerLength, middleOffset));\n+\n+            bp.copy(lowerCopy, 0, buf, lowerOffset, lowerLength);\n+            bp.copy(middleCopy, 0, buf, middleOffset, lowerLength);\n+\n+            bp.put(buf, lowerOffset, buf, middleOffset, lowerLength);\n+\n@@ -364,2 +432,0 @@\n-            } else {\n-                bp.put(src, buf);\n@@ -368,0 +434,4 @@\n+            Buffer backup = bp.create(slim - spos);\n+            bp.copy(buf, pos, backup, 0, backup.capacity());\n+            bp.put(src, buf);\n+\n@@ -371,0 +441,14 @@\n+            Assert.assertTrue(bp.equals(src, buf),\n+                String.format(\"%d %s %d %d %d %s %d %d %d%n\", SEED,\n+                    buf.getClass().getName(), cap, pos, lim,\n+                    src.getClass().getName(), scap, spos, slim));\n+\n+            src.clear();\n+            buf.clear();\n+            bp.copy(backup, 0, buf, pos, backup.capacity());\n+            bp.put(src, spos, buf, pos, backup.capacity());\n+            src.position(spos);\n+            src.limit(slim);\n+            buf.position(pos);\n+            buf.limit(lim);\n+\n","filename":"test\/jdk\/java\/nio\/Buffer\/BulkPutBuffer.java","additions":96,"deletions":12,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 8005566 8032220 8215467\n+ * @bug 4313887 6838333 8005566 8032220 8215467 8255576\n@@ -90,0 +90,3 @@\n+        \/\/ passing an empty path must not throw any runtime exception\n+        assertTrue(!isHidden(Path.of(\"\")));\n+\n","filename":"test\/jdk\/java\/nio\/file\/Files\/Misc.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 6925932 7006126 8037945 8072495 8140449\n+ * @bug 4313887 6838333 6925932 7006126 8037945 8072495 8140449 8254876\n@@ -2045,0 +2045,12 @@\n+        try {\n+            Path.of(null, \"foo\");\n+            throw new RuntimeException(\"NullPointerException not thrown\");\n+        } catch (NullPointerException npe) {\n+        }\n+\n+        try {\n+            Path.of(\"foo\", null);\n+            throw new RuntimeException(\"NullPointerException not thrown\");\n+        } catch (NullPointerException npe) {\n+        }\n+\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1249,0 +1249,5 @@\n+            if (!e.getMessage().equals(\n+                            \"Value levelStart -1 is out of range 0 to \" + (llen - 1))) {\n+                errorHandling(\"reorderVisually() should throw an IAE\" +\n+                        \" mentioning levelStart is beyond the levels range. Message: \" + e.getMessage());\n+            }\n@@ -1261,0 +1266,5 @@\n+            if (!e.getMessage().equals(\n+                    \"Value levelStart \" + llen + \" is out of range 0 to \" + (llen - 1))) {\n+                errorHandling(\"reorderVisually() should throw an IAE\" +\n+                        \" mentioning levelStart is beyond the levels range. Message: \" + e.getMessage());\n+            }\n@@ -1281,0 +1291,5 @@\n+            if (!e.getMessage().equals(\n+                    \"Value objectStart -1 is out of range 0 to \" + (olen - 1))) {\n+                errorHandling(\"reorderVisually() should throw an IAE\" +\n+                        \" mentioning objectStart is beyond the objects range. Message: \" + e.getMessage());\n+            }\n@@ -1293,0 +1308,5 @@\n+            if (!e.getMessage().equals(\n+                    \"Value objectStart 6 is out of range 0 to \" + (olen - 1))) {\n+                errorHandling(\"reorderVisually() should throw an IAE\" +\n+                        \" mentioning objectStart is beyond the objects range. Message: \" + e.getMessage());\n+            }\n@@ -1301,0 +1321,6 @@\n+            if (!e.getMessage().equals(\n+                    \"Value count -1 is less than zero, or objectStart + count \" +\n+                    \"is beyond objects length \" + olen)) {\n+                errorHandling(\"reorderVisually() should throw an IAE\" +\n+                        \" mentioning objectStart\/count is beyond the objects range. Message: \" + e.getMessage());\n+            }\n@@ -1313,0 +1339,6 @@\n+            if (!e.getMessage().equals(\n+                    \"Value count \" + (count + 1) + \" is less than zero, or objectStart + count \" +\n+                    \"is beyond objects length \" + olen)) {\n+                errorHandling(\"reorderVisually() should throw an IAE\" +\n+                        \" mentioning objectStart\/count is beyond the objects range. Message: \" + e.getMessage());\n+            }\n","filename":"test\/jdk\/java\/text\/Bidi\/BidiConformance.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n@@ -47,4 +49,1 @@\n-        File temp1 = File.createTempFile(\"imageio\", \".tmp\");\n-        temp1.deleteOnExit();\n-        ImageOutputStream fios = ImageIO.createImageOutputStream(temp1);\n-\n+        File temp1 = File.createTempFile(\"StreamFlush_fis_\", \".tmp\");\n@@ -52,3 +51,12 @@\n-        File temp2 = File.createTempFile(\"imageio\", \".tmp\");\n-        temp2.deleteOnExit();\n-        FileOutputStream fos2 = new FileOutputStream(temp2);\n+        File temp2 = File.createTempFile(\"StreamFlush_bos_\", \".tmp\");\n+        try (ImageOutputStream fios = ImageIO.createImageOutputStream(temp1);\n+             FileOutputStream fos2 = new FileOutputStream(temp2)) {\n+            test(temp1, fios, temp2, fos2);\n+        } finally {\n+            Files.delete(Paths.get(temp1.getAbsolutePath()));\n+            Files.delete(Paths.get(temp2.getAbsolutePath()));\n+        }\n+    }\n+\n+    private static void test(File temp1, ImageOutputStream fios, File temp2,\n+                             FileOutputStream fos2) throws IOException {\n","filename":"test\/jdk\/javax\/imageio\/stream\/StreamFlush.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        robot.setAutoDelay(50);\n+        robot.setAutoDelay(100);\n@@ -133,0 +133,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/Action\/8133039\/bug8133039.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+    private static JFrame frame;\n@@ -46,17 +47,25 @@\n-    public static void main(String[] args) throws AWTException {\n-        robot = new Robot();\n-        \/\/ test escape after selection\n-        start();\n-        click(KeyEvent.VK_ESCAPE);\n-        robot.waitForIdle();\n-        \/\/ test double escape after editing\n-        start();\n-        click(KeyEvent.VK_1);\n-        click(KeyEvent.VK_0);\n-        click(KeyEvent.VK_ESCAPE);\n-        click(KeyEvent.VK_ESCAPE);\n-        robot.waitForIdle();\n-        \/\/ all windows should be closed\n-        for (Window window : Window.getWindows()) {\n-            if (window.isVisible()) {\n-                throw new Error(\"found visible window: \" + window.getName());\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n+            \/\/ test escape after selection\n+            start();\n+            click(KeyEvent.VK_ESCAPE);\n+            robot.waitForIdle();\n+            \/\/ test double escape after editing\n+            start();\n+            click(KeyEvent.VK_1);\n+            click(KeyEvent.VK_0);\n+            click(KeyEvent.VK_ESCAPE);\n+            click(KeyEvent.VK_ESCAPE);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            \/\/ all windows should be closed\n+            for (Window window : Window.getWindows()) {\n+                if (window.isVisible()) {\n+                    throw new Error(\"found visible window: \" + window.getName());\n+                }\n+            }\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(frame::dispose);\n@@ -88,1 +97,2 @@\n-        JFrame frame = new JFrame(title);\n+        frame = new JFrame(title);\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test6541987.java","additions":28,"deletions":18,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    private static JFrame frame;\n@@ -52,0 +53,3 @@\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -53,8 +57,5 @@\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(50);\n-\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    createAndShowGUI();\n+                }\n+            });\n@@ -62,1 +63,2 @@\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -64,5 +66,5 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                fileChooser.setSelectedFile(file);\n-            }\n-        });\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    fileChooser.setSelectedFile(file);\n+                }\n+            });\n@@ -70,1 +72,1 @@\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n@@ -72,3 +74,3 @@\n-        robot.keyPress(KeyEvent.VK_ENTER);\n-        robot.keyRelease(KeyEvent.VK_ENTER);\n-        robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            robot.waitForIdle();\n@@ -76,2 +78,7 @@\n-        if (!defaultKeyPressed) {\n-            throw new RuntimeException(\"Default button is not pressed\");\n+            if (!defaultKeyPressed) {\n+                throw new RuntimeException(\"Default button is not pressed\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(frame::dispose);\n+            }\n@@ -85,1 +92,1 @@\n-        final JFrame frame = new JFrame(\"Test\");\n+        frame = new JFrame(\"Test\");\n@@ -100,0 +107,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8021253\/bug8021253.java","additions":29,"deletions":21,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+            robot.setAutoDelay(100);\n@@ -86,1 +87,0 @@\n-            robot.setAutoDelay(50);\n@@ -91,0 +91,1 @@\n+            robot.waitForIdle();\n@@ -93,0 +94,1 @@\n+            robot.waitForIdle();\n@@ -95,0 +97,1 @@\n+            robot.waitForIdle();\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8041694\/bug8041694.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,0 +47,2 @@\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -53,2 +55,0 @@\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(50);\n@@ -56,0 +56,1 @@\n+            robot.delay(1000);\n@@ -61,1 +62,0 @@\n-            Thread.sleep(1000);\n@@ -112,0 +112,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/4171437\/bug4171437.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -71,2 +73,2 @@\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(100);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -102,0 +104,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/ActionListenerCalledTwice\/ActionListenerCalledTwiceTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+\n+import javax.swing.JSpinner;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+import static javax.swing.UIManager.getInstalledLookAndFeels;\n+\n+\/**\n+ * @test\n+ * @bug 7124397\n+ * @summary Verifies that JSpinner can be serialized\/deserialized correctly.\n+ *\/\n+public final class SerializationTest {\n+\n+    public static void main(String[] argv) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf : getInstalledLookAndFeels()) {\n+            EventQueue.invokeAndWait(() -> setLookAndFeel(laf));\n+            EventQueue.invokeAndWait(() -> {\n+                JSpinner spinner = new JSpinner();\n+                JSpinner firstCopy = (JSpinner) createCopy(spinner);\n+                JSpinner secondCopy = (JSpinner) createCopy(firstCopy);\n+            });\n+        }\n+    }\n+\n+    private static Object createCopy(Serializable objectToCopy) {\n+        try {\n+            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+            ObjectOutputStream oos = new ObjectOutputStream(baos);\n+            oos.writeObject(objectToCopy);\n+            InputStream bais = new ByteArrayInputStream(baos.toByteArray());\n+            ObjectInputStream ois = new ObjectInputStream(bais);\n+            return ois.readObject();\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/SerializationTest.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-   @run main bug6796710\n+ * @run main\/othervm -Dsun.java2d.uiScale=1 bug6796710\n@@ -34,1 +34,3 @@\n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n@@ -36,1 +38,10 @@\n-import javax.swing.*;\n+import java.io.File;\n+\n+import javax.imageio.ImageIO;\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n@@ -92,0 +103,1 @@\n+                frame.setLocationRelativeTo(null);\n@@ -116,1 +128,4 @@\n-        if (!Util.compareBufferedImages(bufferedImage, getPnBottomImage())) {\n+        BufferedImage pnBottomImage = getPnBottomImage();\n+        if (!Util.compareBufferedImages(bufferedImage, pnBottomImage)) {\n+            ImageIO.write(bufferedImage, \"png\", new File(\"bufferedImage.png\"));\n+            ImageIO.write(pnBottomImage, \"png\", new File(\"pnBottomImage.png\"));\n","filename":"test\/jdk\/javax\/swing\/text\/CSSBorder\/6796710\/bug6796710.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-        robot.setAutoDelay(250);\n+        robot.setAutoDelay(100);\n","filename":"test\/jdk\/javax\/swing\/text\/JTextComponent\/6361367\/bug6361367.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,0 +68,1 @@\n+            robot.setAutoDelay(100);\n@@ -81,1 +82,0 @@\n-        robot.setAutoDelay(50);\n","filename":"test\/jdk\/javax\/swing\/text\/StyledEditorKit\/4506788\/bug4506788.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        robot.setAutoDelay(50);\n+        robot.setAutoDelay(100);\n@@ -155,0 +155,1 @@\n+                frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/text\/View\/8014863\/bug8014863.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,213 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.*;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.*;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.zip.ZipFile;\n+\n+import static java.lang.String.format;\n+\n+\/**\n+ * @test\n+ * @bug 8255380\n+ * @summary Test that Zip FS can access the LOC offset from the Zip64 extra field\n+ * @modules jdk.zipfs\n+ * @requires (os.family == \"linux\") | (os.family == \"mac\")\n+ * @run testng\/manual TestLocOffsetFromZip64EF\n+ *\/\n+public class TestLocOffsetFromZip64EF {\n+\n+    private static final String ZIP_FILE_NAME = \"LargeZipTest.zip\";\n+    \/\/ File that will be created with a size greater than 0xFFFFFFFF\n+    private static final String LARGE_FILE_NAME = \"LargeZipEntry.txt\";\n+    \/\/ File that will be created with a size less than 0xFFFFFFFF\n+    private static final String SMALL_FILE_NAME = \"SmallZipEntry.txt\";\n+    \/\/ The size (4GB) of the large file to be created\n+    private static final long LARGE_FILE_SIZE = 4L * 1024L * 1024L * 1024L;\n+\n+    \/**\n+     * Create the files used by this test\n+     * @throws IOException if an error occurs\n+     *\/\n+    @BeforeClass\n+    public void setUp() throws IOException {\n+        System.out.println(\"In setup\");\n+        cleanup();\n+        createFiles();\n+        createZipWithZip64Ext();\n+    }\n+\n+    \/**\n+     * Delete files used by this test\n+     * @throws IOException if an error occurs\n+     *\/\n+    @AfterClass\n+    public void cleanup() throws IOException {\n+        System.out.println(\"In cleanup\");\n+        Files.deleteIfExists(Path.of(ZIP_FILE_NAME));\n+        Files.deleteIfExists(Path.of(LARGE_FILE_NAME));\n+        Files.deleteIfExists(Path.of(SMALL_FILE_NAME));\n+    }\n+\n+    \/**\n+     * Create a Zip file that will result in the an Zip64 Extra (EXT) header\n+     * being added to the CEN entry in order to find the LOC offset for\n+     * SMALL_FILE_NAME.\n+     *\/\n+    public static void createZipWithZip64Ext() {\n+        System.out.println(\"Executing zip...\");\n+        List<String> commands = List.of(\"zip\", \"-0\", ZIP_FILE_NAME,\n+                LARGE_FILE_NAME, SMALL_FILE_NAME);\n+        Result rc = run(new ProcessBuilder(commands));\n+        rc.assertSuccess();\n+    }\n+\n+    \/**\n+     * Navigate through the Zip file entries using Zip FS\n+     * @throws IOException if an error occurs\n+     *\/\n+    @Test\n+    public void walkZipFSTest() throws IOException {\n+        try (FileSystem fs =\n+                     FileSystems.newFileSystem(Paths.get(ZIP_FILE_NAME), Map.of(\"zipinfo-time\", \"False\"))) {\n+            for (Path root : fs.getRootDirectories()) {\n+                Files.walkFileTree(root, new SimpleFileVisitor<>() {\n+                    @Override\n+                    public FileVisitResult visitFile(Path file, BasicFileAttributes\n+                            attrs) throws IOException {\n+                        System.out.println(Files.readAttributes(file,\n+                                BasicFileAttributes.class).toString());\n+                        return FileVisitResult.CONTINUE;\n+                    }\n+                });\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Navigate through the Zip file entries using ZipFile\n+     * @throws IOException if an error occurs\n+     *\/\n+    @Test\n+    public void walkZipFileTest() throws IOException {\n+        try (ZipFile zip = new ZipFile(ZIP_FILE_NAME)) {\n+            zip.stream().forEach(z -> System.out.printf(\"%s, %s, %s%n\",\n+                    z.getName(), z.getMethod(), z.getLastModifiedTime()));\n+        }\n+    }\n+\n+    \/**\n+     * Create the files that will be added to the ZIP file\n+     * @throws IOException if there is a problem  creating the files\n+     *\/\n+    private static void createFiles() throws IOException {\n+        try (RandomAccessFile file = new RandomAccessFile(LARGE_FILE_NAME, \"rw\")\n+        ) {\n+            System.out.printf(\"Creating %s%n\", LARGE_FILE_NAME);\n+            file.setLength(LARGE_FILE_SIZE);\n+            System.out.printf(\"Creating %s%n\", SMALL_FILE_NAME);\n+            Files.writeString(Path.of(SMALL_FILE_NAME), \"Hello\");\n+        }\n+    }\n+\n+    \/**\n+     * Utility method to execute a ProcessBuilder command\n+     * @param pb ProcessBuilder to execute\n+     * @return The Result(s) from the ProcessBuilder execution\n+     *\/\n+    private static Result run(ProcessBuilder pb) {\n+        Process p;\n+        System.out.printf(\"Running: %s%n\", pb.command());\n+        try {\n+            p = pb.start();\n+        } catch (IOException e) {\n+            throw new RuntimeException(\n+                    format(\"Couldn't start process '%s'\", pb.command()), e);\n+        }\n+\n+        String output;\n+        try {\n+            output = toString(p.getInputStream(), p.getErrorStream());\n+        } catch (IOException e) {\n+            throw new RuntimeException(\n+                    format(\"Couldn't read process output '%s'\", pb.command()), e);\n+        }\n+\n+        try {\n+            p.waitFor();\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(\n+                    format(\"Process hasn't finished '%s'\", pb.command()), e);\n+        }\n+        return new Result(p.exitValue(), output);\n+    }\n+\n+    \/**\n+     * Utility Method for combining the output from a ProcessBuilder invocation\n+     * @param in1 ProccessBuilder.getInputStream\n+     * @param in2 ProcessBuilder.getErrorStream\n+     * @return The ProcessBuilder output\n+     * @throws IOException if an error occurs\n+     *\/\n+    static String toString(InputStream in1, InputStream in2) throws IOException {\n+        try (ByteArrayOutputStream dst = new ByteArrayOutputStream();\n+             InputStream concatenated = new SequenceInputStream(in1, in2)) {\n+            concatenated.transferTo(dst);\n+            return new String(dst.toByteArray(), StandardCharsets.UTF_8);\n+        }\n+    }\n+\n+    \/**\n+     * Utility class used to hold the results from  a ProcessBuilder execution\n+     *\/\n+    static class Result {\n+        final int ec;\n+        final String output;\n+\n+        private Result(int ec, String output) {\n+            this.ec = ec;\n+            this.output = output;\n+        }\n+        Result assertSuccess() {\n+            assertTrue(ec == 0, \"Expected ec 0, got: \", ec, \" , output [\", output, \"]\");\n+            return this;\n+        }\n+    }\n+    static void assertTrue(boolean cond, Object ... failedArgs) {\n+        if (cond)\n+            return;\n+        StringBuilder sb = new StringBuilder();\n+        for (Object o : failedArgs)\n+            sb.append(o);\n+        Assert.fail(sb.toString());\n+    }\n+}\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java","additions":213,"deletions":0,"binary":false,"changes":213,"status":"added"},{"patch":"@@ -78,1 +78,1 @@\n-        byte[] d0 = sign(jsb.setProperty(\"directsign\", \"false\"));\n+        byte[] d0 = sign(jsb);\n@@ -82,5 +82,0 @@\n-        \/\/ There is no SignedAttributes\n-        byte[] d1 = sign(jsb.setProperty(\"directsign\", \"true\"));\n-        Asserts.assertFalse(DerUtils.innerDerValue(d1, \"10403\")\n-                .isContextSpecific((byte)0));\n-\n","filename":"test\/jdk\/jdk\/security\/jarsigner\/Properties.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8056174 8242068\n+ * @bug 8056174 8242068 8255536\n@@ -73,0 +73,3 @@\n+        sun.security.tools.keytool.Main.main(\n+                (\"-keystore ks -storepass changeit -keypass changeit -dname\" +\n+                        \" CN=Ed25519 -alias e -genkeypair -keyalg Ed25519\").split(\" \"));\n@@ -130,2 +133,0 @@\n-        iae(()->b1.setProperty(\"directsign\", \"OK\"));\n-        npe(()->b1.setProperty(\"directsign\", null));\n@@ -149,1 +150,0 @@\n-        assertTrue(js2.getProperty(\"directsign\").equals(\"false\"));\n@@ -166,1 +166,0 @@\n-                .setProperty(\"directsign\", \"true\")\n@@ -179,1 +178,0 @@\n-        assertTrue(js3.getProperty(\"directsign\").equals(\"true\"));\n@@ -211,0 +209,8 @@\n+\n+        \/\/ altsigner does not support modern algorithms\n+        JarSigner.Builder b4 = new JarSigner.Builder(\n+                (PrivateKey)ks.getKey(\"e\", pass),\n+                CertificateFactory.getInstance(\"X.509\")\n+                        .generateCertPath(Arrays.asList(ks.getCertificateChain(\"e\"))));\n+        b4.setProperty(\"altsigner\", \"MyContentSigner\");\n+        iae(() -> b4.build());\n","filename":"test\/jdk\/jdk\/security\/jarsigner\/Spec.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main\/othervm  -Xmx8m FileSystemViewMemoryLeak\n+ * @run main\/othervm\/timeout=320 -Xmx8m FileSystemViewMemoryLeak\n@@ -34,0 +34,2 @@\n+import java.util.concurrent.TimeUnit;\n+\n@@ -42,0 +44,3 @@\n+    \/\/ Will run the test no more than 300 seconds\n+    static long endtime = System.nanoTime() + TimeUnit.SECONDS.toNanos(300);\n+\n@@ -55,0 +60,4 @@\n+            if (isComplete()) {\n+                System.out.println(\"Time is over\");\n+                return;\n+            }\n@@ -80,0 +89,4 @@\n+\n+    private static boolean isComplete() {\n+        return endtime - System.nanoTime() < 0;\n+    }\n","filename":"test\/jdk\/sun\/awt\/shell\/FileSystemViewMemoryLeak.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    private static final int DEFAULT_ITERS = 10 * 1000;\n+    private static final int DEFAULT_ITERS = 5 * 1000;\n","filename":"test\/jdk\/sun\/nio\/ch\/TestMaxCachedBufferSize.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8223063\n+ * @bug 8223063 8153005\n@@ -51,1 +51,5 @@\n-        SecurityTools.keytool(\"-genkeypair -storetype pkcs12 -keystore ks\"\n+        \/\/ Using the old algorithms to make sure the file is recognized\n+        \/\/ by the certutil command on old versions of Windows.\n+        SecurityTools.keytool(\n+                \"-J-Dkeystore.pkcs12.legacy\"\n+                + \" -genkeypair -storetype pkcs12 -keystore ks\"\n","filename":"test\/jdk\/sun\/security\/mscapi\/VeryLongAlias.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255494\n+ * @summary Make sure the signature algorithm to verify a PKCS7 block is\n+ *      DIGwithENC instead of HASHwithENC.\n+ * @modules java.base\/sun.security.pkcs\n+ *          java.base\/sun.security.tools.keytool\n+ *          java.base\/sun.security.x509\n+ *\/\n+\n+import sun.security.pkcs.PKCS7;\n+import sun.security.tools.keytool.CertAndKeyGen;\n+import sun.security.x509.X500Name;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.security.cert.X509Certificate;\n+\n+public class TwoHash {\n+    public static void main(String[] args) throws Exception {\n+\n+        byte[] content = \"Hello You fool I love you\".getBytes();\n+\n+        CertAndKeyGen cak = new CertAndKeyGen(\"EC\", \"SHA512withECDSA\");\n+        cak.generate(\"secp256r1\");\n+        byte[] signature = PKCS7.generateNewSignedData(\n+                \"SHA256withECDSA\",\n+                null,\n+                cak.getPrivateKey(),\n+                new X509Certificate[] {cak.getSelfCertificate(new X500Name(\"CN=Me\"), 1000)},\n+                content,\n+                false,\n+                true, \/\/ direct sign, so that RFC 6211 check is not possible\n+                null);\n+\n+        \/\/ The original signature should verify.\n+        if (new PKCS7(signature).verify(content) == null) {\n+            throw new RuntimeException(\"Should be verified\");\n+        }\n+\n+        \/\/ Modify the SHA256withECDSA signature algorithm (OID encoded as\n+        \/\/ \"06 08 2A 86 48 CE 3D 04 03 02\") to SHA384withECDSA (OID encoded as\n+        \/\/ \"06 08 2A 86 48 CE 3D 04 03 03\"). ISO_8859_1 charset is chosen\n+        \/\/ because it's a strictly one byte per char encoding.\n+        String s = new String(signature, StandardCharsets.ISO_8859_1);\n+        String s1 = s.replace(\n+                \"\\u0006\\u0008\\u002A\\u0086\\u0048\\u00CE\\u003D\\u0004\\u0003\\u0002\",\n+                \"\\u0006\\u0008\\u002A\\u0086\\u0048\\u00CE\\u003D\\u0004\\u0003\\u0003\");\n+        byte[] modified = s1.getBytes(StandardCharsets.ISO_8859_1);\n+\n+        \/\/ The modified signature should still verify because the HASH\n+        \/\/ part of signature algorithm is ignored.\n+        if (new PKCS7(modified).verify(content) == null) {\n+            throw new RuntimeException(\"Should be verified\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs7\/TwoHash.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -25,1 +25,1 @@\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.util.KnownOIDs;\n@@ -31,0 +31,1 @@\n+import java.util.Map;\n@@ -33,4 +34,1 @@\n-import static sun.security.pkcs.ContentInfo.DATA_OID;\n-import static sun.security.pkcs.ContentInfo.ENCRYPTED_DATA_OID;\n-import sun.security.util.ObjectIdentifier;\n-import sun.security.util.KnownOIDs;\n+import static sun.security.util.KnownOIDs.*;\n@@ -40,1 +38,1 @@\n- * @bug 8076190 8242151\n+ * @bug 8076190 8242151 8153005\n@@ -44,1 +42,3 @@\n- * @summary Checks the preferences order of pkcs12 params\n+ * @summary Checks the preferences order of pkcs12 params, whether it's\n+ *          a system property or a security property, whether the name has\n+ *          \"pkcs12\" or \"PKCS12\", whether the legacy property is set.\n@@ -51,5 +51,29 @@\n-        \/\/ with storepass\n-        test(c++, \"-\", \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 50000,\n-                oid(KnownOIDs.SHA_1), 100000);\n+        \/\/ default\n+        test(c++,\n+                Map.of(),\n+                Map.of(),\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                SHA_256, 10000);\n+\n+        \/\/ legacy settings\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.legacy\", \"\"),\n+                Map.of(),\n+                PBEWithSHA1AndRC2_40, 50000,\n+                PBEWithSHA1AndDESede, 50000,\n+                SHA_1, 100000);\n+\n+        \/\/ legacy override everything else\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.legacy\", \"\",\n+                        \"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithHmacSHA256AndAES_128\",\n+                        \"keystore.pkcs12.certPbeIterationCount\", 3000,\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithHmacSHA256AndAES_128\",\n+                        \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n+                        \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA384\",\n+                        \"keystore.pkcs12.macIterationCount\", 2000),\n+                Map.of(),\n+                PBEWithSHA1AndRC2_40, 50000,\n+                PBEWithSHA1AndDESede, 50000,\n+                SHA_1, 100000);\n@@ -58,6 +82,7 @@\n-        test(c++, \"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n-                \"keystore.pkcs12.macAlgorithm\", \"NONE\",\n-                \"-\", \"-\",\n-                null, 0,\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 50000,\n-                null, 0);\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n+                        \"keystore.pkcs12.macAlgorithm\", \"NONE\"),\n+                Map.of(),\n+                null,\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                null);\n@@ -66,7 +91,7 @@\n-        test(c++, \"-\",\n-                \"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n-                \"keystore.pkcs12.macAlgorithm\", \"NONE\",\n-                \"-\",\n-                null, 0,\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 50000,\n-                null, 0);\n+        test(c++,\n+                Map.of(),\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n+                        \"keystore.pkcs12.macAlgorithm\", \"NONE\"),\n+                null,\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                null);\n@@ -75,9 +100,8 @@\n-        test(c++, \"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n-                \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n-                \"-\",\n-                \"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n-                \"keystore.pkcs12.macAlgorithm\", \"NONE\",\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 50000,\n-                oid(KnownOIDs.SHA_256), 100000);\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n+                        \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\"),\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n+                        \"keystore.pkcs12.macAlgorithm\", \"NONE\"),\n+                PBEWithSHA1AndDESede, 10000,\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                SHA_256, 10000);\n@@ -86,11 +110,10 @@\n-        test(c++, \"keystore.pkcs12.certProtectionAlgorithm\", \"\",\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"\",\n-                \"keystore.pkcs12.macAlgorithm\", \"\",\n-                \"-\",\n-                \"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"keystore.pkcs12.macAlgorithm\", \"NONE\",\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 50000,\n-                oid(KnownOIDs.SHA_1), 100000);\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"\",\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"\",\n+                        \"keystore.pkcs12.macAlgorithm\", \"\"),\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"NONE\",\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n+                        \"keystore.pkcs12.macAlgorithm\", \"NONE\"),\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                SHA_256, 10000);\n@@ -99,10 +122,11 @@\n-        test(c++, \"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n-                \"keystore.pkcs12.certPbeIterationCount\", 3000,\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n-                \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n-                \"keystore.pkcs12.macIterationCount\", 2000,\n-                \"-\", \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 3000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 4000,\n-                oid(KnownOIDs.SHA_256), 2000);\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n+                        \"keystore.pkcs12.certPbeIterationCount\", 3000,\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n+                        \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n+                        \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n+                        \"keystore.pkcs12.macIterationCount\", 2000),\n+                Map.of(),\n+                PBEWithSHA1AndDESede, 3000,\n+                PBEWithSHA1AndRC2_40, 4000,\n+                SHA_256, 2000);\n@@ -111,11 +135,11 @@\n-        test(c++, \"-\",\n-                \"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n-                \"keystore.pkcs12.certPbeIterationCount\", 3000,\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n-                \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n-                \"keystore.pkcs12.macIterationCount\", 2000,\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 3000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 4000,\n-                oid(KnownOIDs.SHA_256), 2000);\n+        test(c++,\n+                Map.of(),\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n+                        \"keystore.pkcs12.certPbeIterationCount\", 3000,\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n+                        \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n+                        \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n+                        \"keystore.pkcs12.macIterationCount\", 2000),\n+                PBEWithSHA1AndDESede, 3000,\n+                PBEWithSHA1AndRC2_40, 4000,\n+                SHA_256, 2000);\n@@ -124,17 +148,16 @@\n-        test(c++, \"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n-                \"keystore.pkcs12.certPbeIterationCount\", 13000,\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"keystore.pkcs12.keyPbeIterationCount\", 14000,\n-                \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n-                \"keystore.pkcs12.macIterationCount\", 12000,\n-                \"-\",\n-                \"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"keystore.pkcs12.certPbeIterationCount\", 3000,\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n-                \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n-                \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA1\",\n-                \"keystore.pkcs12.macIterationCount\", 2000,\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndDESede), 13000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 14000,\n-                oid(KnownOIDs.SHA_256), 12000);\n+        test(c++,\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n+                        \"keystore.pkcs12.certPbeIterationCount\", 13000,\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n+                        \"keystore.pkcs12.keyPbeIterationCount\", 14000,\n+                        \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA256\",\n+                        \"keystore.pkcs12.macIterationCount\", 12000),\n+                Map.of(\"keystore.pkcs12.certProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n+                        \"keystore.pkcs12.certPbeIterationCount\", 3000,\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndDESede\",\n+                        \"keystore.pkcs12.keyPbeIterationCount\", 4000,\n+                        \"keystore.pkcs12.macAlgorithm\", \"HmacPBESHA1\",\n+                        \"keystore.pkcs12.macIterationCount\", 2000),\n+                PBEWithSHA1AndDESede, 13000,\n+                PBEWithSHA1AndRC2_40, 14000,\n+                SHA_256, 12000);\n@@ -145,13 +168,0 @@\n-        test(c++, \"-\",\n-                \"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_128), 50000,\n-                oid(KnownOIDs.SHA_1), 100000);\n-        test(c++, \"-\",\n-                \"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.SHA_1), 100000);\n@@ -159,8 +169,5 @@\n-                \"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC4_128\",\n-                \"-\",\n-                \"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC4_128), 50000,\n-                oid(KnownOIDs.SHA_1), 100000);\n+                Map.of(),\n+                Map.of(\"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\"),\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                PBEWithSHA1AndRC2_128, 10000,\n+                SHA_256, 10000);\n@@ -168,13 +175,21 @@\n-                \"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC4_128\",\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC4_40\",\n-                \"-\",\n-                \"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n-                \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\",\n-                \"-\",\n-                oid(KnownOIDs.PBEWithSHA1AndRC2_40), 50000,\n-                oid(KnownOIDs.PBEWithSHA1AndRC4_40), 50000,\n-                oid(KnownOIDs.SHA_1), 100000);\n-    }\n-\n-    private static ObjectIdentifier oid(KnownOIDs o) {\n-        return ObjectIdentifier.of(o);\n+                Map.of(),\n+                Map.of(\"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\"),\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                PBEWithSHA1AndRC2_40, 10000,\n+                SHA_256, 10000);\n+        test(c++,\n+                Map.of(\"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC4_128\"),\n+                Map.of(\"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\"),\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                PBEWithSHA1AndRC4_128, 10000,\n+                SHA_256, 10000);\n+        test(c++,\n+                Map.of(\"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC4_128\",\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC4_40\"),\n+                Map.of(\"keystore.PKCS12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_128\",\n+                        \"keystore.pkcs12.keyProtectionAlgorithm\", \"PBEWithSHA1AndRC2_40\"),\n+                PBES2, HmacSHA256, AES_256$CBC$NoPadding, 10000,\n+                PBEWithSHA1AndRC4_40, 10000,\n+                SHA_256, 10000);\n@@ -186,3 +201,4 @@\n-     * @param args an array containing system properties and values, \"-\",\n-     *             security properties and values, \"-\", expected certPbeAlg,\n-     *             certPbeIC, keyPbeAlg, keyPbeIc, macAlg, macIC.\n+     * @param sysProps system properties\n+     * @param secProps security properties\n+     * @param args     an array expected certPbeAlg (sub algs), certPbeIC,\n+     *                 keyPbeAlg (sub algs), keyPbeIc, macAlg, macIC.\n@@ -190,2 +206,4 @@\n-    static void test(int n, Object... args) throws Exception {\n-        boolean isSysProp = true;\n+    static void test(int n, Map<String, ?> sysProps,\n+                     Map<String, ?> secProps,\n+                     Object... args) throws Exception {\n+\n@@ -195,0 +213,5 @@\n+\n+        for (var p : sysProps.entrySet()) {\n+            cmd += \" -J-D\" + p.getKey() + \"=\" + p.getValue();\n+        }\n+\n@@ -196,7 +219,23 @@\n-        for (int i = 0; i < args.length; i++) {\n-            if (isSysProp) {\n-                if (args[i].equals(\"-\")) {\n-                    isSysProp = false;\n-                } else {\n-                    cmd += \" -J-D\" + args[i] + \"=\" + args[++i];\n-                }\n+        for (var p : secProps.entrySet()) {\n+            jsConf.add(p.getKey() + \"=\" + p.getValue());\n+        }\n+        Files.write(Path.of(n + \".conf\"), jsConf);\n+        System.out.println(\"--------- test starts ----------\");\n+        System.out.println(jsConf);\n+        SecurityTools.keytool(cmd).shouldHaveExitValue(0);\n+\n+        int i = 0;\n+        byte[] data = Files.readAllBytes(Path.of(\"ks\" + n));\n+\n+        \/\/ cert pbe alg + ic\n+        KnownOIDs certAlg = (KnownOIDs)args[i++];\n+        if (certAlg == null) {\n+            checkAlg(data, \"110c10\", Data);\n+        } else {\n+            checkAlg(data, \"110c10\", EncryptedData);\n+            checkAlg(data, \"110c110110\", certAlg);\n+            if (certAlg == PBES2) {\n+                checkAlg(data, \"110c11011100\", PBKDF2WithHmacSHA1);\n+                checkAlg(data, \"110c1101110130\", args[i++]);\n+                checkAlg(data, \"110c11011110\", args[i++]);\n+                checkInt(data, \"110c110111011\", (int) args[i++]);\n@@ -204,31 +243,1 @@\n-                if (args[i] == \"-\") {\n-                    Files.write(Path.of(n + \".conf\"), jsConf);\n-                    System.out.println(\"--------- test starts ----------\");\n-                    System.out.println(jsConf);\n-                    SecurityTools.keytool(cmd).shouldHaveExitValue(0);\n-\n-                    byte[] data = Files.readAllBytes(Path.of(\"ks\" + n));\n-\n-                    \/\/ cert pbe alg + ic\n-                    if (args[i+1] == null) {\n-                        checkAlg(data, \"110c10\", DATA_OID);\n-                    } else {\n-                        checkAlg(data, \"110c10\", ENCRYPTED_DATA_OID);\n-                        checkAlg(data, \"110c110110\", (ObjectIdentifier)args[i+1]);\n-                        checkInt(data, \"110c1101111\", (int)args[i+2]);\n-                    }\n-\n-                    \/\/ key pbe alg + ic\n-                    checkAlg(data, \"110c010c01000\", (ObjectIdentifier)args[i+3]);\n-                    checkInt(data, \"110c010c010011\", (int)args[i+4]);\n-\n-                    \/\/ mac alg + ic\n-                    if (args[i+5] == null) {\n-                        shouldNotExist(data, \"2\");\n-                    } else {\n-                        checkAlg(data, \"2000\", (ObjectIdentifier)args[i+5]);\n-                        checkInt(data, \"22\", (int)args[i+6]);\n-                    }\n-                } else {\n-                    jsConf.add(args[i] + \"=\" + args[++i]);\n-                }\n+                checkInt(data, \"110c1101111\", (int) args[i++]);\n@@ -237,0 +246,21 @@\n+\n+        \/\/ key pbe alg + ic\n+        KnownOIDs keyAlg = (KnownOIDs)args[i++];\n+        checkAlg(data, \"110c010c01000\", keyAlg);\n+        if (keyAlg == PBES2) {\n+            checkAlg(data, \"110c010c0100100\", PBKDF2WithHmacSHA1);\n+            checkAlg(data, \"110c010c010010130\", args[i++]);\n+            checkAlg(data, \"110c010c0100110\", args[i++]);\n+            checkInt(data, \"110c010c01001011\", (int) args[i++]);\n+        } else {\n+            checkInt(data, \"110c010c010011\", (int) args[i++]);\n+        }\n+\n+        \/\/ mac alg + ic\n+        KnownOIDs macAlg = (KnownOIDs)args[i++];\n+        if (macAlg == null) {\n+            shouldNotExist(data, \"2\");\n+        } else {\n+            checkAlg(data, \"2000\", macAlg);\n+            checkInt(data, \"22\", (int) args[i++]);\n+        }\n","filename":"test\/jdk\/sun\/security\/pkcs12\/ParamsPreferences.java","additions":190,"deletions":160,"binary":false,"changes":350,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8076190 8242151\n+ * @bug 8076190 8242151 8153005\n@@ -44,0 +44,1 @@\n+import java.nio.file.DirectoryStream;\n@@ -51,2 +52,1 @@\n-import sun.security.util.ObjectIdentifier;\n-import sun.security.util.KnownOIDs;\n+import static sun.security.util.KnownOIDs.*;\n@@ -60,9 +60,12 @@\n-        Files.newDirectoryStream(Path.of(System.getProperty(\"test.src\"), \"params\"))\n-                .forEach(p -> {\n-                    try (InputStream is = Files.newInputStream(p);\n-                         OutputStream os = Files.newOutputStream(p.getFileName())){\n-                        Base64.getMimeDecoder().wrap(is).transferTo(os);\n-                    } catch (IOException e) {\n-                        throw new UncheckedIOException(e);\n-                    }\n-                });\n+        try (DirectoryStream<Path> stream = Files.newDirectoryStream(\n+                Path.of(System.getProperty(\"test.src\"), \"params\"),\n+                p -> !p.getFileName().toString().equals(\"README\"))) {\n+            stream.forEach(p -> {\n+                try (InputStream is = Files.newInputStream(p);\n+                     OutputStream os = Files.newOutputStream(p.getFileName())) {\n+                    Base64.getMimeDecoder().wrap(is).transferTo(os);\n+                } catch (IOException e) {\n+                    throw new UncheckedIOException(e);\n+                }\n+            });\n+        }\n@@ -103,0 +106,1 @@\n+\n@@ -104,4 +108,4 @@\n-        checkInt(data, \"22\", 100000); \/\/ Mac ic\n-        checkAlg(data, \"2000\", oid(KnownOIDs.SHA_1)); \/\/ Mac alg\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ key alg\n-        checkInt(data, \"110c010c010011\", 50000); \/\/ key ic\n+        checkInt(data, \"22\", 10000); \/\/ Mac ic\n+        checkAlg(data, \"2000\", SHA_256); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBES2); \/\/ key alg\n+        checkInt(data, \"110c010c01001011\", 10000); \/\/ key ic\n@@ -109,3 +113,1 @@\n-        checkAlg(data, \"110c110110\", oid(KnownOIDs.PBEWithSHA1AndRC2_40)); \/\/ cert alg\n-        checkInt(data, \"110c1101111\", 50000); \/\/ cert ic\n-\n+        checkAlg(data, \"110c110110\", PBES2); \/\/ cert alg\n@@ -116,0 +118,12 @@\n+        \/\/ Import it into a new keystore with legacy algorithms\n+        keytool(\"-importkeystore -srckeystore ksnormal -srcstorepass changeit \"\n+                + \"-destkeystore kslegacyimp -deststorepass changeit \"\n+                + \"-J-Dkeystore.pkcs12.legacy\");\n+        data = Files.readAllBytes(Path.of(\"kslegacyimp\"));\n+        checkInt(data, \"22\", 100000); \/\/ Mac ic\n+        checkAlg(data, \"2000\", SHA_1); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBEWithSHA1AndDESede); \/\/ key alg\n+        checkInt(data, \"110c010c010011\", 50000); \/\/ key ic\n+        checkAlg(data, \"110c110110\", PBEWithSHA1AndRC2_40); \/\/ cert alg\n+        checkInt(data, \"110c1101111\", 50000); \/\/ cert ic\n+\n@@ -122,6 +136,6 @@\n-        checkInt(data, \"22\", 100000); \/\/ Mac ic\n-        checkAlg(data, \"2000\", oid(KnownOIDs.SHA_1)); \/\/ Mac alg\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ key alg\n-        checkInt(data, \"110c010c010011\", 50000); \/\/ key ic\n-        checkAlg(data, \"110c010c11000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ new key alg\n-        checkInt(data, \"110c010c110011\", 50000); \/\/ new key ic\n+        checkInt(data, \"22\", 10000); \/\/ Mac ic\n+        checkAlg(data, \"2000\", SHA_256); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBES2); \/\/ key alg\n+        checkInt(data, \"110c010c01001011\", 10000); \/\/ key ic\n+        checkAlg(data, \"110c010c11000\", PBES2); \/\/ new key alg\n+        checkInt(data, \"110c010c11001011\", 10000); \/\/ new key ic\n@@ -129,2 +143,1 @@\n-        checkAlg(data, \"110c110110\", oid(KnownOIDs.PBEWithSHA1AndRC2_40)); \/\/ cert alg\n-        checkInt(data, \"110c1101111\", 50000); \/\/ cert ic\n+        checkAlg(data, \"110c110110\", PBES2); \/\/ cert alg\n@@ -142,2 +155,2 @@\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndRC4_128));\n-        checkInt(data, \"110c010c010011\", 50000);\n+        checkAlg(data, \"110c010c01000\", PBEWithSHA1AndRC4_128);\n+        checkInt(data, \"110c010c010011\", 10000);\n@@ -154,4 +167,4 @@\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndRC4_128));\n-        checkInt(data, \"110c010c010011\", 50000);\n-        checkAlg(data, \"110c010c11000\", oid(KnownOIDs.PBEWithSHA1AndDESede));\n-        checkInt(data, \"110c010c110011\", 50000);\n+        checkAlg(data, \"110c010c01000\", PBEWithSHA1AndRC4_128);\n+        checkInt(data, \"110c010c010011\", 10000);\n+        checkAlg(data, \"110c010c11000\", PBES2);\n+        checkInt(data, \"110c010c11001011\", 10000);\n@@ -169,5 +182,5 @@\n-        checkAlg(data, \"2000\", oid(KnownOIDs.SHA_1)); \/\/ Mac alg\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ key alg\n-        checkInt(data, \"110c010c010011\", 7777); \/\/ key ic\n-        checkAlg(data, \"110c110110\", oid(KnownOIDs.PBEWithSHA1AndRC2_40)); \/\/ cert alg\n-        checkInt(data, \"110c1101111\", 6666); \/\/ cert ic\n+        checkAlg(data, \"2000\", SHA_256); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBES2); \/\/ key alg\n+        checkInt(data, \"110c010c01001011\", 7777); \/\/ key ic\n+        checkAlg(data, \"110c110110\", PBES2); \/\/ cert alg\n+        checkInt(data, \"110c110111011\", 6666); \/\/ cert ic\n@@ -188,7 +201,7 @@\n-        checkAlg(data, \"2000\", oid(KnownOIDs.SHA_1)); \/\/ Mac alg\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ key alg\n-        checkInt(data, \"110c010c010011\", 7777); \/\/ key ic\n-        checkAlg(data, \"110c010c11000\", oid(KnownOIDs.PBEWithSHA1AndRC4_128)); \/\/ new key alg\n-        checkInt(data, \"110c010c110011\", 50000); \/\/ new key ic\n-        checkAlg(data, \"110c110110\", oid(KnownOIDs.PBEWithSHA1AndRC2_40)); \/\/ cert alg\n-        checkInt(data, \"110c1101111\", 6666); \/\/ cert ic\n+        checkAlg(data, \"2000\", SHA_256); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBES2); \/\/ key alg\n+        checkInt(data, \"110c010c01001011\", 7777); \/\/ key ic\n+        checkAlg(data, \"110c010c11000\", PBEWithSHA1AndRC4_128); \/\/ new key alg\n+        checkInt(data, \"110c010c110011\", 10000); \/\/ new key ic\n+        checkAlg(data, \"110c110110\", PBES2); \/\/ cert alg\n+        checkInt(data, \"110c110111011\", 6666); \/\/ cert ic\n@@ -204,6 +217,6 @@\n-        checkInt(data, \"22\", 100000); \/\/ Mac ic\n-        checkAlg(data, \"2000\", oid(KnownOIDs.SHA_1)); \/\/ Mac alg\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ key alg\n-        checkInt(data, \"110c010c010011\", 50000); \/\/ key ic\n-        checkAlg(data, \"110c010c11000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ new key alg\n-        checkInt(data, \"110c010c110011\", 50000); \/\/ new key ic\n+        checkInt(data, \"22\", 10000); \/\/ Mac ic\n+        checkAlg(data, \"2000\", SHA_256); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBES2); \/\/ key alg\n+        checkInt(data, \"110c010c01001011\", 10000); \/\/ key ic\n+        checkAlg(data, \"110c010c11000\", PBES2); \/\/ new key alg\n+        checkInt(data, \"110c010c11001011\", 10000); \/\/ new key ic\n@@ -211,2 +224,2 @@\n-        checkAlg(data, \"110c110110\", oid(KnownOIDs.PBEWithSHA1AndRC2_40)); \/\/ cert alg\n-        checkInt(data, \"110c1101111\", 50000); \/\/ cert ic\n+        checkAlg(data, \"110c110110\", PBES2); \/\/ cert alg\n+        checkInt(data, \"110c110111011\", 10000); \/\/ cert ic\n@@ -221,4 +234,4 @@\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndRC4_128));\n-        checkInt(data, \"110c010c010011\", 50000);\n-        checkAlg(data, \"110c010c11000\", oid(KnownOIDs.PBEWithSHA1AndDESede));\n-        checkInt(data, \"110c010c110011\", 50000);\n+        checkAlg(data, \"110c010c01000\", PBEWithSHA1AndRC4_128);\n+        checkInt(data, \"110c010c010011\", 10000);\n+        checkAlg(data, \"110c010c11000\", PBES2);\n+        checkInt(data, \"110c010c11001011\", 10000);\n@@ -234,7 +247,7 @@\n-        checkAlg(data, \"2000\", oid(KnownOIDs.SHA_1)); \/\/ Mac alg\n-        checkAlg(data, \"110c010c01000\", oid(KnownOIDs.PBEWithSHA1AndDESede)); \/\/ key alg\n-        checkInt(data, \"110c010c010011\", 7777); \/\/ key ic\n-        checkAlg(data, \"110c010c11000\", oid(KnownOIDs.PBEWithSHA1AndRC4_128)); \/\/ new key alg\n-        checkInt(data, \"110c010c110011\", 50000); \/\/ new key ic\n-        checkAlg(data, \"110c110110\", oid(KnownOIDs.PBEWithSHA1AndRC2_40)); \/\/ cert alg\n-        checkInt(data, \"110c1101111\", 6666); \/\/ cert ic\n+        checkAlg(data, \"2000\", SHA_256); \/\/ Mac alg\n+        checkAlg(data, \"110c010c01000\", PBES2); \/\/ key alg\n+        checkInt(data, \"110c010c01001011\", 7777); \/\/ key ic\n+        checkAlg(data, \"110c010c11000\", PBEWithSHA1AndRC4_128); \/\/ new key alg\n+        checkInt(data, \"110c010c110011\", 10000); \/\/ new key ic\n+        checkAlg(data, \"110c110110\", PBES2); \/\/ cert alg\n+        checkInt(data, \"110c110111011\", 6666); \/\/ cert ic\n@@ -437,4 +450,0 @@\n-    private static ObjectIdentifier oid(KnownOIDs o) {\n-        return ObjectIdentifier.of(o);\n-    }\n-\n","filename":"test\/jdk\/sun\/security\/pkcs12\/ParamsTest.java","additions":77,"deletions":68,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+Do not use OpenSSL 3.0.0. The default algorithms for pkcs12 are changed.\n@@ -3,0 +4,1 @@\n+(\n@@ -5,1 +7,1 @@\n-keytool -keystore ks -genkeypair -storepass changeit -alias a -dname CN=A\n+keytool -keystore ks -keyalg ec -genkeypair -storepass changeit -alias a -dname CN=A\n@@ -20,0 +22,1 @@\n+)\n@@ -26,4 +29,4 @@\n-openssl pkcs12 -in ks2 -passin pass:changeit -info -nokeys -nocerts 2> t2 || exit 20\n-grep \"MAC:sha1 Iteration 100000\" t2 || exit 21\n-grep \"Shrouded Keybag: pbeWithSHA1And3-KeyTripleDES-CBC, Iteration 50000\" t2 || exit 23\n-grep \"PKCS7 Encrypted data: pbeWithSHA1And40BitRC2-CBC, Iteration 50000\" t2 || exit 24\n+openssl pkcs12 -in ksnormal -passin pass:changeit -info -nokeys -nocerts 2> t2 || exit 20\n+grep \"MAC: sha256, Iteration 10000\" t2 || exit 21\n+grep \"Shrouded Keybag: PBES2, PBKDF2, AES-256-CBC, Iteration 10000, PRF hmacWithSHA256\" t2 || exit 23\n+grep \"PKCS7 Encrypted data: PBES2, PBKDF2, AES-256-CBC, Iteration 10000, PRF hmacWithSHA256\" t2 || exit 24\n@@ -31,1 +34,1 @@\n-openssl pkcs12 -in ks22 -passin pass:changeit -info -nokeys -nocerts 2> t22 || exit 25\n+openssl pkcs12 -in ksnormaldup -passin pass:changeit -info -nokeys -nocerts 2> t22 || exit 25\n@@ -34,1 +37,1 @@\n-openssl pkcs12 -in ks3 -passin pass:changeit -info -nokeys -nocerts && exit 30\n+openssl pkcs12 -in ksnopass -passin pass:changeit -info -nokeys -nocerts && exit 30\n@@ -36,1 +39,1 @@\n-openssl pkcs12 -in ks3 -passin pass:changeit -info -nokeys -nocerts -nomacver 2> t3 || exit 31\n+openssl pkcs12 -in ksnopass -passin pass:changeit -info -nokeys -nocerts -nomacver 2> t3 || exit 31\n@@ -38,2 +41,2 @@\n-grep \"Shrouded Keybag: pbeWithSHA1And3-KeyTripleDES-CBC, Iteration 50000\" t3 || exit 34\n-grep \"Shrouded Keybag: pbeWithSHA1And128BitRC4, Iteration 50000\" t3 || exit 35\n+grep \"Shrouded Keybag: PBES2, PBKDF2, AES-256-CBC, Iteration 10000, PRF hmacWithSHA256\" t3 || exit 34\n+grep \"Shrouded Keybag: pbeWithSHA1And128BitRC4, Iteration 10000\" t3 || exit 35\n@@ -41,1 +44,1 @@\n-openssl pkcs12 -in ks33 -passin pass:changeit -info -nokeys -nocerts -nomacver 2> t33 || exit 36\n+openssl pkcs12 -in ksnopassdup -passin pass:changeit -info -nokeys -nocerts -nomacver 2> t33 || exit 36\n@@ -44,5 +47,5 @@\n-openssl pkcs12 -in ks4 -passin pass:changeit -info -nokeys -nocerts 2> t4 || exit 40\n-grep \"MAC:sha1 Iteration 5555\" t4 || exit 41\n-grep \"Shrouded Keybag: pbeWithSHA1And3-KeyTripleDES-CBC, Iteration 7777\" t4 || exit 43\n-grep \"Shrouded Keybag: pbeWithSHA1And128BitRC4, Iteration 50000\" t4 || exit 44\n-grep \"PKCS7 Encrypted data: pbeWithSHA1And40BitRC2-CBC, Iteration 6666\" t4 || exit 45\n+openssl pkcs12 -in ksnewic -passin pass:changeit -info -nokeys -nocerts 2> t4 || exit 40\n+grep \"MAC: sha256, Iteration 5555\" t4 || exit 41\n+grep \"Shrouded Keybag: PBES2, PBKDF2, AES-256-CBC, Iteration 7777, PRF hmacWithSHA256\" t4 || exit 43\n+grep \"Shrouded Keybag: pbeWithSHA1And128BitRC4, Iteration 10000\" t4 || exit 44\n+grep \"PKCS7 Encrypted data: PBES2, PBKDF2, AES-256-CBC, Iteration 6666, PRF hmacWithSHA256\" t4 || exit 45\n@@ -50,1 +53,1 @@\n-openssl pkcs12 -in ks44 -passin pass:changeit -info -nokeys -nocerts 2> t44 || exit 46\n+openssl pkcs12 -in ksnewicdup -passin pass:changeit -info -nokeys -nocerts 2> t44 || exit 46\n","filename":"test\/jdk\/sun\/security\/pkcs12\/params\/README","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -111,4 +111,3 @@\n-            ObjectIdentifier oid = oid(expected);\n-            DerUtils.checkAlg(crt, \"020\", oid);     \/\/ tbsCertificate.signature\n-            DerUtils.checkAlg(crt, \"0600\", oid);    \/\/ tbsCertificate.subjectPublicKeyInfo.algorithm\n-            DerUtils.checkAlg(crt, \"10\", oid);      \/\/ signatureAlgorithm\n+            DerUtils.checkAlg(crt, \"020\", expected);     \/\/ tbsCertificate.signature\n+            DerUtils.checkAlg(crt, \"0600\", expected);    \/\/ tbsCertificate.subjectPublicKeyInfo.algorithm\n+            DerUtils.checkAlg(crt, \"10\", expected);      \/\/ signatureAlgorithm\n@@ -182,2 +181,2 @@\n-        DerUtils.checkAlg(crt, \"020\", oid(sigAlg));  \/\/ tbsCertificate.signature\n-        DerUtils.checkAlg(crt, \"0600\", oid(keyAlg)); \/\/ tbsCertificate.subjectPublicKeyInfo.algorithm\n+        DerUtils.checkAlg(crt, \"020\", sigAlg);  \/\/ tbsCertificate.signature\n+        DerUtils.checkAlg(crt, \"0600\", keyAlg); \/\/ tbsCertificate.subjectPublicKeyInfo.algorithm\n@@ -189,2 +188,2 @@\n-        DerUtils.checkAlg(req, \"10\", oid(sigAlg));   \/\/ signatureAlgorithm\n-        DerUtils.checkAlg(req, \"0200\", oid(keyAlg)); \/\/ certificationRequestInfo.subjectPKInfo.algorithm\n+        DerUtils.checkAlg(req, \"10\", sigAlg);   \/\/ signatureAlgorithm\n+        DerUtils.checkAlg(req, \"0200\", keyAlg); \/\/ certificationRequestInfo.subjectPKInfo.algorithm\n@@ -193,1 +192,1 @@\n-        DerUtils.checkAlg(crl, \"000\", oid(sigAlg));  \/\/ tbsCertList.signature\n+        DerUtils.checkAlg(crl, \"000\", sigAlg);  \/\/ tbsCertList.signature\n@@ -203,1 +202,1 @@\n-            DerUtils.checkAlg(p7, \"104020\", oid(expDigAlg));\n+            DerUtils.checkAlg(p7, \"104020\", expDigAlg);\n@@ -207,1 +206,1 @@\n-                DerUtils.checkAlg(p7, \"104040\", oid(expEncAlg));\n+                DerUtils.checkAlg(p7, \"104040\", expEncAlg);\n@@ -209,1 +208,1 @@\n-                DerUtils.checkAlg(p7, \"104030\", oid(expEncAlg));\n+                DerUtils.checkAlg(p7, \"104030\", expEncAlg);\n@@ -219,8 +218,0 @@\n-    static ObjectIdentifier oid(String name) {\n-        return ObjectIdentifier.of(KnownOIDs.findMatch(name));\n-    }\n-\n-    static ObjectIdentifier oid(KnownOIDs ko) {\n-        return ObjectIdentifier.of(ko);\n-    }\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/GenerateAll.java","additions":11,"deletions":20,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.ApplicationLayout;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/AdditionalLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.jpackage.internal.IOUtils;\n+import jdk.jpackage.internal.IOUtils;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/FileAssociations.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.ApplicationLayout;\n@@ -838,9 +838,0 @@\n-    public static Stream<String> filterOutput(Stream<String> jpackageOutput) {\n-        \/\/ Skip \"WARNING: Using incubator ...\" first line of output\n-        return jpackageOutput.skip(1);\n-    }\n-\n-    public static List<String> filterOutput(List<String> jpackageOutput) {\n-        return filterOutput(jpackageOutput.stream()).collect(Collectors.toList());\n-    }\n-\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                \"classes\/jdk\/incubator\/jpackage\/internal\/resources\", components[1]));\n+                \"classes\/jdk\/jpackage\/internal\/resources\", components[1]));\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherIconVerifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import jdk.incubator.jpackage.internal.IOUtils;\n+import jdk.jpackage.internal.IOUtils;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LinuxHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.ApplicationLayout;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-            TKit.isWindows() ? \"jdk.incubator.jpackage.internal.WinMsiBundler\" : null),\n+            TKit.isWindows() ? \"jdk.jpackage.internal.WinMsiBundler\" : null),\n@@ -40,1 +40,1 @@\n-            TKit.isWindows() ? \"jdk.incubator.jpackage.internal.WinMsiBundler\" : null),\n+            TKit.isWindows() ? \"jdk.jpackage.internal.WinMsiBundler\" : null),\n@@ -42,1 +42,1 @@\n-            TKit.isLinux() ? \"jdk.incubator.jpackage.internal.LinuxDebBundler\" : null),\n+            TKit.isLinux() ? \"jdk.jpackage.internal.LinuxDebBundler\" : null),\n@@ -44,3 +44,3 @@\n-            TKit.isLinux() ? \"jdk.incubator.jpackage.internal.LinuxRpmBundler\" : null),\n-    MAC_DMG(\".dmg\", TKit.isOSX() ? \"jdk.incubator.jpackage.internal.MacDmgBundler\" : null),\n-    MAC_PKG(\".pkg\", TKit.isOSX() ? \"jdk.incubator.jpackage.internal.MacPkgBundler\" : null),\n+            TKit.isLinux() ? \"jdk.jpackage.internal.LinuxRpmBundler\" : null),\n+    MAC_DMG(\".dmg\", TKit.isOSX() ? \"jdk.jpackage.internal.MacDmgBundler\" : null),\n+    MAC_PKG(\".pkg\", TKit.isOSX() ? \"jdk.jpackage.internal.MacPkgBundler\" : null),\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageType.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        return TEST_SRC_ROOT.resolve(\"..\/..\/..\/..\/src\/jdk.incubator.jpackage\").normalize().toAbsolutePath();\n+        return TEST_SRC_ROOT.resolve(\"..\/..\/..\/..\/src\/jdk.jpackage\").normalize().toAbsolutePath();\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/AppImageFileTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/AppImageFileTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/ApplicationLayoutTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/ApplicationLayoutTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/CompareDottedVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/CompareDottedVersionTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/DeployParamsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/DeployParamsTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/DottedVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/DottedVersionTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/InvalidDottedVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/InvalidDottedVersionTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -36,1 +36,1 @@\n-import jdk.incubator.jpackage.internal.resources.ResourceLocator;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/OverridableResourceTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/OverridableResourceTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/PathGroupTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/PathGroupTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -112,1 +112,1 @@\n-            \"jdk.incubator.jpackage.internal.CFBundleVersion\");\n+            \"jdk.jpackage.internal.CFBundleVersion\");\n@@ -114,1 +114,1 @@\n-            \"jdk.incubator.jpackage.internal.MsiVersion\");\n+            \"jdk.jpackage.internal.MsiVersion\");\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/PlatformVersionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/PlatformVersionTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/ToolValidatorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/ToolValidatorTest.java","status":"renamed"},{"patch":"@@ -30,1 +30,1 @@\n- * @modules jdk.incubator.jpackage\n+ * @modules jdk.jpackage\n","filename":"test\/jdk\/tools\/jpackage\/junit\/junit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -20,4 +20,4 @@\n-  --add-modules jdk.incubator.jpackage \\\n-  --patch-module jdk.incubator.jpackage=\"${TESTSRC}${PS}${TESTCLASSES}\" \\\n-  --add-reads jdk.incubator.jpackage=ALL-UNNAMED \\\n-  --add-exports jdk.incubator.jpackage\/jdk.incubator.jpackage.internal=ALL-UNNAMED \\\n+  --add-modules jdk.jpackage \\\n+  --patch-module jdk.jpackage=\"${TESTSRC}${PS}${TESTCLASSES}\" \\\n+  --add-reads jdk.jpackage=ALL-UNNAMED \\\n+  --add-exports jdk.jpackage\/jdk.jpackage.internal=ALL-UNNAMED \\\n","filename":"test\/jdk\/tools\/jpackage\/junit\/run_junit.sh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/AppCategoryTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LicenseTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LinuxBundleNameTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LinuxResourceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/MaintainerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/PackageDepsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/ReleaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -75,1 +75,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/ShortcutHintTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/jdk\/jpackage\/tests\/UsrTreeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacFileAssociationsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacPropertiesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/NameWithSpaceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/SigningAppImageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/SigningPackageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-import jdk.incubator.jpackage.internal.MacCertificate;\n+import jdk.jpackage.internal.MacCertificate;\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/base\/SigningCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -66,1 +66,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/AddLauncherTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppImagePackageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/ArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.ApplicationLayout;\n@@ -42,1 +42,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/EmptyFolderPackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.ApplicationLayout;\n@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/EmptyFolderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -77,1 +77,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/FileAssociationsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/IconTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -73,1 +73,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/InstallDirTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -84,1 +84,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/LicenseTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/MultiLauncherTwoPhaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -74,1 +74,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/RuntimePackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/SimplePackageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.AppImageFile;\n@@ -39,1 +39,1 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.AppImageFile;\n@@ -47,1 +47,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/AppVersionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/BasicTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/CookedRuntimeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ErrorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -95,1 +95,1 @@\n-                    new String[]{\"jdk.incubator.jpackage\"},\n+                    new String[]{\"jdk.jpackage\"},\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JLinkOptionsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -52,1 +52,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JavaOptionsEqualsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JavaOptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MainClassTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.AppImageFile;\n@@ -54,1 +54,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -65,1 +65,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest3.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MultipleJarAppTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/NonExistentTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/UnicodeArgsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinConsoleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinDirChooserTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinL10nTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinMenuGroupTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinMenuTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinPerUserInstallTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinResourceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.jpackage.internal.IOUtils;\n+import jdk.jpackage.internal.IOUtils;\n@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinScriptTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinShortcutTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -68,1 +68,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinUpgradeUUIDTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,8 +59,0 @@\n-                    <\/span>\"\"\",\n-                \/\/ Bottom navbar <a href>\n-                \"\"\"\n-                    <a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links<\/a>\"\"\",\n-                \/\/ Bottom navbar <span id>\n-                \"\"\"\n-                    <span class=\"skip-nav\" id=\"skip.navbar.bottom\">\n-                    <!--   -->\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/AccessSkipNav\/AccessSkipNav.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -74,12 +74,1 @@\n-                \/\/ check bottom navbar\n-                \"\"\"\n-                    <a href=\"..\/..\/module-summary.html\">Module<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/package-summary.html\">Package<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/overview-tree.html\">Tree<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/deprecated-list.html\">Deprecated<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/index-all.html\">Index<\/a>\"\"\",\n-                \"phi-FOOTER-phi\",\n+                \/\/ check footer\n@@ -122,12 +111,1 @@\n-                \/\/ check bottom navbar\n-                \"\"\"\n-                    <a href=\"..\/..\/module-summary.html\">Module<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/package-summary.html\">Package<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/overview-tree.html\">Tree<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/deprecated-list.html\">Deprecated<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/index-all.html\">Index<\/a>\"\"\",\n-                \"phi-FOOTER-phi\",\n+                \/\/ check footer\n@@ -154,12 +132,1 @@\n-                \/\/ check bottom navbar\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/..\/module-summary.html\">Module<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/package-summary.html\">Package<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/..\/..\/overview-tree.html\">Tree<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/..\/..\/deprecated-list.html\">Deprecated<\/a>\"\"\",\n-                \"\"\"\n-                    <a href=\"..\/..\/..\/..\/..\/index-all.html\">Index<\/a>\"\"\",\n-                \"phi-FOOTER-phi\",\n+                \/\/ check footer\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCopyFiles\/TestCopyFiles.java","additions":3,"deletions":36,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+                \"-bottom\", \"bottom text\",\n@@ -85,2 +86,4 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\"\"\");\n+                    <footer role=\"contentinfo\"> \"\"\",\n+                \"\"\"\n+                    bottom text\"\"\"\n+        );\n@@ -98,0 +101,1 @@\n+                \"-bottom\", \"bottom text\",\n@@ -112,2 +116,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -134,0 +139,1 @@\n+                \"-bottom\", \"bottom text\",\n@@ -147,2 +153,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\"\"\"\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlLandmarkRegions\/TestHtmlLandmarkRegions.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+                \"-bottom\", \"bottom text\",\n@@ -63,0 +64,1 @@\n+                \"-bottom\", \"bottom text\",\n@@ -86,3 +88,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -110,3 +112,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -150,3 +152,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\" );\n@@ -171,3 +173,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -200,3 +202,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -221,3 +223,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -244,3 +246,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -280,3 +282,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -300,3 +302,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -338,3 +340,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -388,3 +390,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -429,3 +431,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -461,3 +463,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -488,3 +490,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -515,3 +517,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -553,3 +555,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n@@ -582,3 +584,3 @@\n-                    <footer role=\"contentinfo\">\n-                    <nav role=\"navigation\">\n-                    <!-- ======= START OF BOTTOM NAVBAR ====== -->\"\"\");\n+                    <footer role=\"contentinfo\">\"\"\",\n+                \"\"\"\n+                    bottom text\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlVersion\/TestHtmlVersion.java","additions":53,"deletions":51,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    public void testHeaderFooter() {\n+    public void testHeader() {\n@@ -50,1 +50,0 @@\n-                \"-footer\", \"Test footer\",\n@@ -57,3 +56,1 @@\n-                    <div class=\"about-language\">Test header<\/div>\"\"\",\n-                \"\"\"\n-                    <div class=\"about-language\">Test footer<\/div>\"\"\");\n+                    <div class=\"about-language\">Test header<\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOptions\/TestOptions.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,0 @@\n-        FTR(\"-footer\", \"lorem #COMMENT ipsum\", \"package p; public class C { }\"),\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/TestScriptInComment.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8178077\n+ * @bug 8178077 8232856\n@@ -80,0 +80,12 @@\n+    public void testReRun() throws Exception {\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(\"System.err.println(\\\"RAN\\\");\\n\");\n+            waitOutput(out, \"RAN.*\" + PROMPT);\n+            inputSink.write(\"\/!\\n\");\n+            waitOutput(out, \"RAN.*\" + PROMPT);\n+            inputSink.write(UP);\n+            inputSink.write(\"\\n\");\n+            waitOutput(out, \"RAN.*\" + PROMPT);\n+        });\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/HistoryUITest.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"","filename":"test\/langtools\/tools\/javac\/T4881267-old.out","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/langtools\/test\/TEST.ROOT","status":"copied"},{"patch":"@@ -1,1 +1,1 @@\n-T4881267.java:10:34: compiler.err.illegal.generic.type.for.instof\n+T4881267.java:10:21: compiler.err.instanceof.reifiable.not.safe: java.lang.Object, T\n","filename":"test\/langtools\/tools\/javac\/T4881267.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -402,1 +402,1 @@\n-                     *       String data = \"test\";\n+                     *       Object data = \"test\";\n@@ -409,1 +409,1 @@\n-                    \"    String data = \\\"test\\\";\\n\" +\n+                    \"    Object data = \\\"test\\\";\\n\" +\n@@ -458,1 +458,1 @@\n-                    \"    String data = \\\"test\\\";\\n\" +\n+                    \"    Object data = \\\"test\\\";\\n\" +\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/CombinationsTargetTest2.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -164,1 +164,0 @@\n-compiler.err.feature.not.supported.in.source                  # Generated for using diamond before source 7\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.feature.not.supported.in.source.plural\n+\/\/ key: compiler.misc.feature.reifiable.types.instanceof\n+\/\/ options: -source 15 -Xlint:-options\n+\n+import java.util.*;\n+\n+class FeatureReifiableTypesInstanceof {\n+    List o;\n+    boolean b = (o instanceof List<String>);\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/FeatureReifiableTypesInstanceof.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.instanceof.pattern.no.subtype\n+\n+class InstanceofPatternNoSubtype {\n+    boolean test(Object o) {\n+        return o instanceof Object obj;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/InstanceofPatternNoSubtype.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,3 +25,0 @@\n-\/\/ key: compiler.note.preview.filename\n-\/\/ key: compiler.note.preview.recompile\n-\/\/ options: --enable-preview -source ${jdk.version}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/InstanceofReifiableNotSafe.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.illegal.generic.type.for.instof\n-\n-import java.util.*;\n-\n-class IllegalInstanceof {\n-    List o;\n-    boolean b = (o instanceof List<String>);\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/InvalidInstanceof.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,3 +25,0 @@\n-\/\/ key: compiler.note.preview.filename\n-\/\/ key: compiler.note.preview.recompile\n-\/\/ options: --enable-preview -source ${jdk.version}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/MatchBindingExists.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.pattern.binding.may.not.be.assigned\n-\/\/ key: compiler.note.preview.filename\n-\/\/ key: compiler.note.preview.recompile\n-\/\/ options: --enable-preview -source ${jdk.version}\n-\n-class ResourceMayNotBeAssigned {\n-    void m(Object o) {\n-        if (o instanceof String s) {\n-            s = \"\";\n-        }\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/PatternBindingMayNotBeAssigned.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,2 +25,2 @@\n-\/\/ key: compiler.warn.preview.feature.use\n-\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n+\/\/ key: compiler.err.feature.not.supported.in.source\n+\/\/ options: -source 15 -Xlint:-options\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/PatternMatchingInstanceof.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.misc.feature.reifiable.types.instanceof\n-\/\/ key: compiler.warn.preview.feature.use.plural\n-\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n-\n-class PatternMatchingInstanceof {\n-    boolean m(I<String> i) {\n-        return i instanceof C<String>;\n-    }\n-    interface I<T> {}\n-    class C<T> implements I<T> {}\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ReifiableTypesInstanceof.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,1 +1,1 @@\n-InstanceOf2.java:12:48: compiler.err.illegal.generic.type.for.instof\n+InstanceOf2.java:12:29: compiler.err.instanceof.reifiable.not.safe: java.lang.Class<compiler.misc.type.captureof: 1, ? extends InstanceOf2>, java.lang.Class<InstanceOf2>\n","filename":"test\/langtools\/tools\/javac\/generics\/InstanceOf2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=InstanceOf3.out -XDrawDiagnostics  InstanceOf3.java\n+ * @compile\/fail\/ref=InstanceOf3.out -XDrawDiagnostics -source 15 -Xlint:-options InstanceOf3.java\n","filename":"test\/langtools\/tools\/javac\/generics\/InstanceOf3.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-InstanceOf3.java:12:48: compiler.err.illegal.generic.type.for.instof\n+InstanceOf3.java:12:32: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.reifiable.types.instanceof), 15, 16\n","filename":"test\/langtools\/tools\/javac\/generics\/InstanceOf3.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,5 @@\n+BadTest.java:19:50: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<Cell<java.lang.String>>)\n+BadTest.java:23:48: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<java.lang.String>)\n+BadTest.java:24:54: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<Cell<java.lang.String>>)\n+BadTest.java:26:38: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.reifiable.types.instanceof), 15, 16\n+4 errors\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest-old.out","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile\/fail\/ref=BadTest-old.out -XDrawDiagnostics -source 15 -Xlint:-options BadTest.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,4 +1,4 @@\n-BadTest.java:18:50: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<Cell<java.lang.String>>)\n-BadTest.java:22:48: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<java.lang.String>)\n-BadTest.java:23:54: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<Cell<java.lang.String>>)\n-BadTest.java:25:53: compiler.err.illegal.generic.type.for.instof\n+BadTest.java:19:50: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<Cell<java.lang.String>>)\n+BadTest.java:23:48: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<java.lang.String>)\n+BadTest.java:24:54: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<Cell<java.lang.String>>)\n+BadTest.java:26:35: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: List<java.lang.Object>, List<java.lang.String>)\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest.out","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8133884 8162711 8133896 8172158 8172262 8173636 8175119 8189747\n+ * @bug 8133884 8162711 8133896 8172158 8172262 8173636 8175119 8189747 8236842\n@@ -49,0 +49,1 @@\n+import java.util.Iterator;\n@@ -56,1 +57,0 @@\n-import java.util.regex.Pattern;\n@@ -83,2 +83,0 @@\n-import javax.tools.JavaFileManager;\n-import javax.tools.JavaFileManager.Location;\n@@ -87,1 +85,0 @@\n-import javax.tools.StandardLocation;\n@@ -1302,0 +1299,434 @@\n+    @Test\n+    public void testUnboundLookupNew(Path base) throws Exception {\n+        Path moduleSrc = base.resolve(\"module-src\");\n+        Path m1 = moduleSrc.resolve(\"m1x\");\n+        Path m2 = moduleSrc.resolve(\"m2x\");\n+        Path m3 = moduleSrc.resolve(\"m3x\");\n+        Path m4 = moduleSrc.resolve(\"m4x\");\n+\n+        Path src = base.resolve(\"src\");\n+\n+        Path classes = base.resolve(\"classes\");\n+        Path srcClasses = base.resolve(\"src-classes\");\n+\n+        Files.createDirectories(classes);\n+        Files.createDirectories(srcClasses);\n+        Files.createDirectories(moduleSrc);\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { exports api; }\",\n+                              \"package test; public class Test { }\",\n+                              \"package api; public class API {}\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; }\",\n+                              \"package test; public class Test { }\",\n+                              \"package api.impl; public class Impl { }\");\n+\n+            new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString())\n+                .outdir(classes)\n+                .files(findJavaFiles(moduleSrc))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> log = new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString(),\n+                         \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                         \"-processor\", UnboundLookupNew.class.getName(),\n+                         \"-AlookupClass=+test.Test\",\n+                         \"-AlookupPackage=+test,+api\",\n+                         \"-XDrawDiagnostics\")\n+                .outdir(classes)\n+                .files(findJavaFiles(m2))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> expected = Arrays.asList(\"- compiler.note.proc.messager: test.Test found in module: m2x\",\n+                                                  \"- compiler.note.proc.messager: test found in module: m2x\",\n+                                                  \"- compiler.note.proc.messager: api found in module: m1x\",\n+                                                  \"- compiler.note.proc.messager: test.Test found in module: m2x\",\n+                                                  \"- compiler.note.proc.messager: test found in module: m2x\",\n+                                                  \"- compiler.note.proc.messager: api found in module: m1x\"\n+                                                 );\n+\n+            if (!expected.equals(log)) {\n+                throw new AssertionError(\"Expected output not found: \" + log);\n+            }\n+        }\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { exports test; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; }\",\n+                              \"package test; public class Test { }\");\n+\n+            List<String> log = new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString(),\n+                         \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                         \"-processor\", UnboundLookupNew.class.getName(),\n+                         \"-AlookupClass=+test.Test\",\n+                         \"-AlookupPackage=+test\",\n+                         \"-XDrawDiagnostics\",\n+                         \"-XDshould-stop.at=FLOW\")\n+                .outdir(classes)\n+                .files(findJavaFiles(m2))\n+                .run(Task.Expect.FAIL)\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> expected = Arrays.asList(\n+                    \"Test.java:1:1: compiler.err.package.in.other.module: m1x\",\n+                    \"- compiler.note.proc.messager: test.Test found in module: m2x\",\n+                    \"- compiler.note.proc.messager: test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test.Test found in module: m2x\",\n+                    \"- compiler.note.proc.messager: test found in module: m1x\",\n+                    \"1 error\");\n+\n+            if (!expected.equals(log)) {\n+                throw new AssertionError(\"Expected output not found: \" + log);\n+            }\n+        }\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; requires m3x; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m3,\n+                              \"module m3x { }\",\n+                              \"package test; public class Test { }\");\n+\n+            new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString())\n+                .outdir(classes)\n+                .files(findJavaFiles(moduleSrc))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> log = new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString(),\n+                         \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                         \"-processor\", UnboundLookupNew.class.getName(),\n+                         \"-AlookupClass=+test.Test\",\n+                         \"-AlookupPackage=+test\",\n+                         \"-XDrawDiagnostics\")\n+                .outdir(classes)\n+                .files(findJavaFiles(m2))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> expected = Arrays.asList(\n+                    \"- compiler.note.proc.messager: test.Test found in module: m2x\",\n+                    \"- compiler.note.proc.messager: test found in module: m2x\",\n+                    \"- compiler.note.proc.messager: test.Test found in module: m2x\",\n+                    \"- compiler.note.proc.messager: test found in module: m2x\"\n+            );\n+\n+            if (!expected.equals(log)) {\n+                throw new AssertionError(\"Expected output not found: \" + log);\n+            }\n+        }\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { exports test; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; requires m3x; }\");\n+\n+            tb.writeJavaFiles(m3,\n+                              \"module m3x { exports test; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m4,\n+                              \"module m4x { }\",\n+                              \"package test; public class Test { }\");\n+\n+            {\n+                List<String> log = new JavacTask(tb)\n+                    .options(\"--module-source-path\", moduleSrc.toString(),\n+                             \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                             \"-processor\", UnboundLookupNew.class.getName(),\n+                             \"-AlookupClass=+test.Test\",\n+                             \"-AlookupPackage=+test\",\n+                             \"-XDrawDiagnostics\",\n+                             \"-XDshould-stop.at=FLOW\")\n+                    .outdir(classes)\n+                    .files(findJavaFiles(m2))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(OutputKind.DIRECT);\n+\n+                List<Set<String>> expected = Arrays.asList(\n+                        variants(\"module-info.java:1:1: compiler.err.package.clash.from.requires: m2x, test, m1x, m3x\"),\n+                        variants(\"- compiler.note.proc.messager: test.Test found in module: m1x\"),\n+                        variants(\"- compiler.note.proc.messager: test found in module: m1x\"),\n+                        variants(\"- compiler.note.proc.messager: test.Test found in module: m1x\"),\n+                        variants(\"- compiler.note.proc.messager: test found in module: m1x\"),\n+                        variants(\"1 error\"));\n+\n+                assertErrorsWithVariants(expected, log);\n+            }\n+\n+            {\n+                List<String> log = new JavacTask(tb)\n+                    .options(\"--module-source-path\", moduleSrc.toString(),\n+                             \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                             \"-processor\", UnboundLookupNew.class.getName(),\n+                             \"-AlookupClass=-test.Test\",\n+                             \"-AlookupPackage=-test\",\n+                             \"-XDrawDiagnostics\",\n+                             \"-XDshould-stop.at=FLOW\")\n+                    .outdir(classes)\n+                    .files(findJavaFiles(m2, m4))\n+                    .run(Task.Expect.FAIL)\n+                    .writeAll()\n+                    .getOutputLines(OutputKind.DIRECT);\n+\n+                List<String> expected = Arrays.asList(\n+                        \"module-info.java:1:1: compiler.err.package.clash.from.requires: m2x, test, m1x, m3x\",\n+                        \"- compiler.note.multiple.elements: getTypeElement, test.Test, m1x, m4x\",\n+                        \"- compiler.note.multiple.elements: getPackageElement, test, m1x, m4x\",\n+                        \"1 error\");\n+\n+                if (!expected.equals(log)) {\n+                    throw new AssertionError(\"Expected output not found: \" + log);\n+                }\n+            }\n+        }\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { exports test; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; }\");\n+\n+            tb.writeJavaFiles(src,\n+                              \"package test; public class Test { }\");\n+\n+            new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString())\n+                .outdir(classes)\n+                .files(findJavaFiles(moduleSrc))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> log = new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString(),\n+                         \"--source-path\", src.toString(),\n+                         \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                         \"-processor\", UnboundLookupNew.class.getName(),\n+                         \"-AlookupClass=+test.Test\",\n+                         \"-AlookupPackage=+test\",\n+                         \"-XDrawDiagnostics\")\n+                .outdir(classes)\n+                .files(findJavaFiles(m2))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> expected = Arrays.asList(\n+                    \"- compiler.note.proc.messager: test.Test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test.Test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test found in module: m1x\"\n+            );\n+\n+            if (!expected.equals(log)) {\n+                throw new AssertionError(\"Expected output not found: \" + log);\n+            }\n+        }\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { exports test; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; }\");\n+\n+            tb.writeJavaFiles(src,\n+                              \"package test; public class Test { }\");\n+\n+            new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString())\n+                .outdir(classes)\n+                .files(findJavaFiles(moduleSrc))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> log = new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString(),\n+                         \"--source-path\", src.toString(),\n+                         \"--add-reads=m2x=ALL-UNNAMED\",\n+                         \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                         \"-processor\", UnboundLookupNew.class.getName(),\n+                         \"-AlookupClass=+test.Test\",\n+                         \"-AlookupPackage=+test\",\n+                         \"-XDrawDiagnostics\")\n+                .outdir(classes)\n+                .files(findJavaFiles(m2))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> expected = Arrays.asList(\n+                    \"- compiler.note.proc.messager: test.Test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test.Test found in module: m1x\",\n+                    \"- compiler.note.proc.messager: test found in module: m1x\"\n+            );\n+\n+            if (!expected.equals(log)) {\n+                throw new AssertionError(\"Expected output not found: \" + log);\n+            }\n+        }\n+\n+        {\n+            tb.cleanDirectory(classes);\n+            tb.cleanDirectory(srcClasses);\n+            tb.cleanDirectory(moduleSrc);\n+\n+            tb.writeJavaFiles(m1,\n+                              \"module m1x { exports test; }\",\n+                              \"package test; public class Test { }\");\n+\n+            tb.writeJavaFiles(m2,\n+                              \"module m2x { requires m1x; }\");\n+\n+            tb.writeJavaFiles(src,\n+                              \"package test; public class Test { }\");\n+\n+            new JavacTask(tb)\n+                .options(\"--module-source-path\", moduleSrc.toString())\n+                .outdir(classes)\n+                .files(findJavaFiles(moduleSrc))\n+                .run()\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> log = new JavacTask(tb)\n+                .options(\"--module-path\", classes.toString(),\n+                         \"--source-path\", src.toString(),\n+                         \"-processorpath\", System.getProperty(\"test.class.path\"),\n+                         \"-processor\", UnboundLookupNew.class.getName(),\n+                         \"-AlookupClass=+test.Test\",\n+                         \"-AlookupPackage=+test\",\n+                         \"--add-modules=m2x\",\n+                         \"-XDshould-stop.at=ATTR\",\n+                         \"-XDrawDiagnostics\")\n+                .outdir(srcClasses)\n+                .files(findJavaFiles(src))\n+                .run(Task.Expect.FAIL)\n+                .writeAll()\n+                .getOutputLines(OutputKind.DIRECT);\n+\n+            List<String> expected = Arrays.asList(\"Test.java:1:1: compiler.err.package.in.other.module: m1x\",\n+                                                  \"- compiler.note.proc.messager: test.Test found in module: unnamed module\",\n+                                                  \"- compiler.note.proc.messager: test found in module: m1x\",\n+                                                  \"- compiler.note.proc.messager: test.Test found in module: unnamed module\",\n+                                                  \"- compiler.note.proc.messager: test found in module: m1x\",\n+                                                  \"1 error\"\n+                                                 );\n+\n+            if (!expected.equals(log)) {\n+                throw new AssertionError(\"Expected output not found: \" + log);\n+            }\n+        }\n+    }\n+\n+    private Set<String> variants(String... expected) {\n+        return new HashSet<>(Arrays.asList(expected));\n+    }\n+\n+    private void assertErrorsWithVariants(List<Set<String>> expectedVariants, List<String> actual) {\n+        assertEquals(expectedVariants.size(), actual.size());\n+        Iterator<Set<String>> expIt = expectedVariants.iterator();\n+        Iterator<String> actIt = actual.iterator();\n+\n+        while (expIt.hasNext() && actIt.hasNext()) {\n+            Set<String> exp = expIt.next();\n+            String act = actIt.next();\n+\n+            if (!exp.contains(act)) {\n+                throw new AssertionError(\"Expected: \" + exp + \", actual: \" + act);\n+            }\n+        }\n+    }\n+\n+    @SupportedAnnotationTypes(\"*\")\n+    @SupportedOptions({\"lookupClass\", \"lookupPackage\"})\n+    public static final class UnboundLookupNew extends AbstractProcessor {\n+\n+        @Override\n+        public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+            performLookup(\"lookupClass\", processingEnv.getElementUtils()::getTypeElement);\n+            performLookup(\"lookupPackage\", processingEnv.getElementUtils()::getPackageElement);\n+\n+            return false;\n+        }\n+\n+        private void performLookup(String optionName, Function<String, Element> name2Element) {\n+            String[] lookupList = processingEnv.getOptions().get(optionName).split(\",\");\n+            for (String lookup : lookupList) {\n+                boolean shouldExists = lookup.charAt(0) == '+';\n+                String name = lookup.substring(1);\n+                Element type = name2Element.apply(name);\n+\n+                if (shouldExists) {\n+                    if (type == null) {\n+                        throw new AssertionError(\"Did not find the expected type.\");\n+                    } else {\n+                        processingEnv.getMessager().printMessage(Kind.NOTE, name + \" found in module: \" + processingEnv.getElementUtils().getModuleOf(type));\n+                    }\n+                } else {\n+                    if (type != null) {\n+                        throw new AssertionError(\"Found the unexpected type.\");\n+                    }\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public SourceVersion getSupportedSourceVersion() {\n+            return SourceVersion.latest();\n+        }\n+\n+    }\n+\n@@ -1336,1 +1767,1 @@\n-        String log = new JavacTask(tb)\n+        new JavacTask(tb)\n@@ -1348,14 +1779,0 @@\n-        String moduleImplConflictString =\n-                \"- compiler.note.multiple.elements: getTypeElement, impl.conflict.module.Impl, m2x, m1x\";\n-        String srcConflictString =\n-                \"- compiler.note.multiple.elements: getTypeElement, impl.conflict.src.Impl, m1x, unnamed module\";\n-\n-        if (!log.contains(moduleImplConflictString) ||\n-            !log.contains(srcConflictString)) {\n-            throw new AssertionError(\"Expected output not found: \" + log);\n-        }\n-\n-        if (log.split(Pattern.quote(moduleImplConflictString)).length > 2) {\n-            throw new AssertionError(\"Too many warnings in: \" + log);\n-        }\n-\n@@ -1376,1 +1793,2 @@\n-                     \"-proc:only\")\n+                     \"-proc:only\",\n+                     \"-Aunnamedmodule\")\n@@ -1408,0 +1826,1 @@\n+    @SupportedOptions(\"unnamedmodule\")\n@@ -1425,2 +1844,2 @@\n-            assertTypeElementNotFound(\"impl.conflict.src.Impl\");\n-            assertPackageElementNotFound(\"impl.conflict.src\");\n+            assertTypeElementExists(\"impl.conflict.src.Impl\", processingEnv.getOptions().containsKey(\"unnamedmodule\") ? \"\" : \"m1x\");\n+            assertPackageElementExists(\"impl.conflict.src\", processingEnv.getOptions().containsKey(\"unnamedmodule\") ? \"\" : \"m1x\");\n","filename":"test\/langtools\/tools\/javac\/modules\/AnnotationProcessing.java","additions":442,"deletions":23,"binary":false,"changes":465,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=BindingsExistTest.out -XDrawDiagnostics --enable-preview -source ${jdk.version} BindingsExistTest.java\n+ * @compile\/fail\/ref=BindingsExistTest.out -XDrawDiagnostics BindingsExistTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsExistTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,0 @@\n-- compiler.note.preview.filename: BindingsExistTest.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsExistTest.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} BindingsTest1.java\n- * @run main\/othervm --enable-preview BindingsTest1\n+ * @compile BindingsTest1.java\n+ * @run main BindingsTest1\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsTest1.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=BindingsTest1Merging.out -XDrawDiagnostics --enable-preview -source ${jdk.version} BindingsTest1Merging.java\n+ * @compile\/fail\/ref=BindingsTest1Merging.out -XDrawDiagnostics BindingsTest1Merging.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsTest1Merging.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,2 +10,0 @@\n-- compiler.note.preview.filename: BindingsTest1Merging.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsTest1Merging.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=BindingsTest2.out -XDrawDiagnostics -XDshould-stop.at=FLOW --enable-preview -source ${jdk.version} BindingsTest2.java\n+ * @compile\/fail\/ref=BindingsTest2.out -XDrawDiagnostics -XDshould-stop.at=FLOW BindingsTest2.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsTest2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,2 +52,0 @@\n-- compiler.note.preview.filename: BindingsTest2.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/BindingsTest2.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,4 +98,1 @@\n-                    })\n-                .withOption(\"--enable-preview\")\n-                .withOption(\"-source\")\n-                .withOption(String.valueOf(Runtime.version().feature()));\n+                    });\n","filename":"test\/langtools\/tools\/javac\/patterns\/BreakAndLoops.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=CastConversionMatch.out -XDrawDiagnostics --enable-preview -source ${jdk.version} CastConversionMatch.java\n+ * @compile\/fail\/ref=CastConversionMatch.out -XDrawDiagnostics CastConversionMatch.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/CastConversionMatch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,0 @@\n-- compiler.note.preview.filename: CastConversionMatch.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/CastConversionMatch.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,4 +88,1 @@\n-                    })\n-                .withOption(\"--enable-preview\")\n-                .withOption(\"-source\")\n-                .withOption(String.valueOf(Runtime.version().feature()));\n+                    });\n","filename":"test\/langtools\/tools\/javac\/patterns\/ConditionalTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=DuplicateBindingTest.out -XDrawDiagnostics --enable-preview -source ${jdk.version} DuplicateBindingTest.java\n+ * @compile\/fail\/ref=DuplicateBindingTest.out -XDrawDiagnostics DuplicateBindingTest.java\n@@ -13,0 +13,2 @@\n+        Object o1 = \"\";\n+        Object o2 = \"\";\n@@ -16,1 +18,1 @@\n-            if (args[0] instanceof String s) { \/\/ NOT OK. Redef same scope.\n+            if (o1 instanceof String s) { \/\/ NOT OK. Redef same scope.\n@@ -18,1 +20,1 @@\n-            if (args[0] instanceof String f) { \/\/ OK to redef field.\n+            if (o1 instanceof String f) { \/\/ OK to redef field.\n@@ -22,2 +24,0 @@\n-        Object o1 = \"\";\n-        Object o2 = \"\";\n","filename":"test\/langtools\/tools\/javac\/patterns\/DuplicateBindingTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-DuplicateBindingTest.java:16:43: compiler.err.already.defined: kindname.variable, s, kindname.method, main(java.lang.String[])\n+DuplicateBindingTest.java:18:38: compiler.err.already.defined: kindname.variable, s, kindname.method, main(java.lang.String[])\n@@ -25,2 +25,0 @@\n-- compiler.note.preview.filename: DuplicateBindingTest.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/DuplicateBindingTest.out","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=EnsureTypesOrderTest.out -XDrawDiagnostics --enable-preview -source ${jdk.version} EnsureTypesOrderTest.java\n+ * @compile\/fail\/ref=EnsureTypesOrderTest.out -XDrawDiagnostics EnsureTypesOrderTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/EnsureTypesOrderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,0 @@\n-- compiler.note.preview.filename: EnsureTypesOrderTest.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/EnsureTypesOrderTest.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} ExamplesFromProposal.java\n- * @run main\/othervm --enable-preview ExamplesFromProposal\n+ * @compile ExamplesFromProposal.java\n+ * @run main ExamplesFromProposal\n","filename":"test\/langtools\/tools\/javac\/patterns\/ExamplesFromProposal.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=ImpossibleTypeTest.out -XDrawDiagnostics --enable-preview -source ${jdk.version} ImpossibleTypeTest.java\n+ * @compile\/fail\/ref=ImpossibleTypeTest.out -XDrawDiagnostics ImpossibleTypeTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/ImpossibleTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,2 +3,0 @@\n-- compiler.note.preview.filename: ImpossibleTypeTest.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/ImpossibleTypeTest.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @compile -g --enable-preview -source ${jdk.version} LocalVariableTable.java\n- * @run main\/othervm --enable-preview LocalVariableTable\n+ * @compile -g LocalVariableTable.java\n+ * @run main LocalVariableTable\n","filename":"test\/langtools\/tools\/javac\/patterns\/LocalVariableTable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=MatchBindingScopeTest.out -XDrawDiagnostics --enable-preview -source ${jdk.version} MatchBindingScopeTest.java\n+ * @compile\/fail\/ref=MatchBindingScopeTest.out -XDrawDiagnostics MatchBindingScopeTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/MatchBindingScopeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -14,2 +14,0 @@\n-- compiler.note.preview.filename: MatchBindingScopeTest.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/MatchBindingScopeTest.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,22 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8250625\n+ * @summary Verify pattern matching test which is always true produces an error\n+ * @compile\/fail\/ref=NoSubtypeCheck.out -XDrawDiagnostics NoSubtypeCheck.java\n+ *\/\n+public class NoSubtypeCheck {\n+\n+    public static void main(Object o, String s, List<String> l) {\n+        boolean b1 = o instanceof Object v1;\n+        boolean b2 = o instanceof String v2;\n+        boolean b3 = s instanceof Object v3;\n+        boolean b4 = s instanceof String v4;\n+        boolean b5 = l instanceof List<String> v5;\n+        boolean b6 = l instanceof List2<String> v6;\n+        boolean b7 = undef instanceof String v7;\n+        boolean b8 = o instanceof Undef v7;\n+    }\n+\n+    public interface List<T> {}\n+    public interface List2<T> extends List<T> {}\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/NoSubtypeCheck.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"added"},{"patch":"@@ -0,0 +1,7 @@\n+NoSubtypeCheck.java:10:24: compiler.err.instanceof.pattern.no.subtype: java.lang.Object, java.lang.Object\n+NoSubtypeCheck.java:12:24: compiler.err.instanceof.pattern.no.subtype: java.lang.Object, java.lang.String\n+NoSubtypeCheck.java:13:24: compiler.err.instanceof.pattern.no.subtype: java.lang.String, java.lang.String\n+NoSubtypeCheck.java:14:24: compiler.err.instanceof.pattern.no.subtype: NoSubtypeCheck.List<java.lang.String>, NoSubtypeCheck.List<java.lang.String>\n+NoSubtypeCheck.java:16:22: compiler.err.cant.resolve.location: kindname.variable, undef, , , (compiler.misc.location: kindname.class, NoSubtypeCheck, null)\n+NoSubtypeCheck.java:17:35: compiler.err.cant.resolve.location: kindname.class, Undef, , , (compiler.misc.location: kindname.class, NoSubtypeCheck, null)\n+6 errors\n","filename":"test\/langtools\/tools\/javac\/patterns\/NoSubtypeCheck.out","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"},{"patch":"@@ -30,2 +30,2 @@\n- * @compile --enable-preview -source ${jdk.version} NoUnnecessaryCast.java\n- * @run main\/othervm --enable-preview NoUnnecessaryCast\n+ * @compile NoUnnecessaryCast.java\n+ * @run main NoUnnecessaryCast\n","filename":"test\/langtools\/tools\/javac\/patterns\/NoUnnecessaryCast.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n- * @compile --enable-preview -source ${jdk.version} NullsInPatterns.java\n- * @run main\/othervm --enable-preview NullsInPatterns\n+ * @compile\/fail\/ref=NullsInPatterns.out -XDrawDiagnostics NullsInPatterns.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/NullsInPatterns.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,3 @@\n+NullsInPatterns.java:35:18: compiler.err.instanceof.pattern.no.subtype: java.util.List, compiler.misc.type.null\n+NullsInPatterns.java:46:18: compiler.err.instanceof.pattern.no.subtype: java.util.List<?>, compiler.misc.type.null\n+2 errors\n","filename":"test\/langtools\/tools\/javac\/patterns\/NullsInPatterns.out","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -29,1 +29,1 @@\n- * @compile\/ref=PatternMatchPosTest.out -processor PatternMatchPosTest -Xlint:unchecked -XDrawDiagnostics --enable-preview -source ${jdk.version} PatternMatchPosTestData.java\n+ * @compile\/ref=PatternMatchPosTest.out -processor PatternMatchPosTest -Xlint:unchecked -XDrawDiagnostics PatternMatchPosTestData.java\n@@ -88,2 +88,4 @@\n-                        processingEnv.getMessager().printMessage(Diagnostic.Kind.NOTE,\n-                                                                 text.substring(start, end));\n+                        if (start != (-1) || end != (-1)) {\n+                            processingEnv.getMessager().printMessage(Diagnostic.Kind.NOTE,\n+                                                                     text.substring(start, end));\n+                        }\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternMatchPosTest.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+- compiler.note.proc.messager: String s\n@@ -10,0 +11,1 @@\n+- compiler.note.proc.messager: java.lang.String s\n@@ -12,3 +14,1 @@\n-- compiler.note.proc.messager: java\n-- compiler.note.preview.filename: PatternMatchPosTestData.java\n-- compiler.note.preview.recompile\n+- compiler.note.proc.messager: java\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternMatchPosTest.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} PatternTypeTest2.java\n- * @run main\/othervm --enable-preview PatternTypeTest2\n+ * @compile PatternTypeTest2.java\n+ * @run main PatternTypeTest2\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternTypeTest2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,16 +0,0 @@\n-\/*\n- * @test \/nodynamiccopyright\/\n- * @bug 8231827\n- * @summary Ensure that in type test patterns, the predicate is not trivially provable false.\n- * @compile\/fail\/ref=PatternVariablesAreFinal.out -XDrawDiagnostics --enable-preview -source ${jdk.version} PatternVariablesAreFinal.java\n- *\/\n-public class PatternVariablesAreFinal {\n-    public static void main(String[] args) {\n-        Object o = 32;\n-        if (o instanceof String s) {\n-            s = \"hello again\";\n-            System.out.println(s);\n-        }\n-        System.out.println(\"test complete\");\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreFinal.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-PatternVariablesAreFinal.java:11:13: compiler.err.pattern.binding.may.not.be.assigned: s\n-- compiler.note.preview.filename: PatternVariablesAreFinal.java\n-- compiler.note.preview.recompile\n-1 error\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreFinal.out","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,40 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8231827\n- * @summary Pattern variables are final so should be allowed to be referenced in an inner class\n- * @compile --enable-preview -source ${jdk.version} PatternVariablesAreFinal2.java\n- * @run main\/othervm --enable-preview PatternVariablesAreFinal2\n- *\/\n-public class PatternVariablesAreFinal2 {\n-    public static void main(String[] args) {\n-        Object o = \"42\";\n-        if (o instanceof String s) {\n-            new Object() {\n-                void run() { System.err.println(s); }\n-            }.run();\n-        }\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreFinal2.java","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8231827\n+ * @summary Pattern variables are non-final.\n+ * @compile\/fail\/ref=PatternVariablesAreNonFinal.out -XDrawDiagnostics PatternVariablesAreNonFinal.java\n+ *\/\n+public class PatternVariablesAreNonFinal {\n+    public static void main(String[] args) {\n+        Object o = 32;\n+        if (o instanceof String s) {\n+            s = \"hello again\";\n+            new Runnable() {\n+                @Override\n+                public void run() {\n+                    System.err.println(s);\n+                }\n+            };\n+        }\n+        System.out.println(\"test complete\");\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreNonFinal.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+PatternVariablesAreNonFinal.java:38:40: compiler.err.cant.ref.non.effectively.final.var: s, (compiler.misc.inner.cls)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreNonFinal.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8231827\n+ * @summary Pattern variables can be effectivelly final so should be allowed to be referenced in an inner class\n+ * @compile PatternVariablesAreNonFinal2.java\n+ * @run main PatternVariablesAreNonFinal2\n+ *\/\n+public class PatternVariablesAreNonFinal2 {\n+    public static void main(String[] args) {\n+        Object o = \"42\";\n+        if (o instanceof String s) {\n+            new Object() {\n+                void run() { System.err.println(s); }\n+            }.run();\n+        }\n+        if (o instanceof String s) {\n+            s = \"hello again\";\n+            System.out.println(s);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternVariablesAreNonFinal2.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -108,1 +108,1 @@\n-            List.of(\"--enable-preview\", \"-source\", Integer.toString(Runtime.version().feature())), null,\n+            null, null,\n","filename":"test\/langtools\/tools\/javac\/patterns\/PatternsSimpleVisitorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=Reifiable.out --enable-preview -source ${jdk.version} -XDrawDiagnostics Reifiable.java\n+ * @compile\/fail\/ref=Reifiable.out -XDrawDiagnostics Reifiable.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/Reifiable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,2 +5,0 @@\n-- compiler.note.preview.filename: Reifiable.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/Reifiable.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,7 +1,5 @@\n-ReifiableOld.java:12:37: compiler.err.illegal.generic.type.for.instof\n-ReifiableOld.java:13:38: compiler.err.illegal.generic.type.for.instof\n-ReifiableOld.java:14:38: compiler.err.illegal.generic.type.for.instof\n-ReifiableOld.java:15:38: compiler.err.illegal.generic.type.for.instof\n-ReifiableOld.java:15:39: compiler.err.not.within.bounds: java.lang.String, T\n-ReifiableOld.java:16:39: compiler.err.illegal.generic.type.for.instof\n-6 errors\n+ReifiableOld.java:11:18: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.reifiable.types.instanceof), 15, 16\n+ReifiableOld.java:13:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ReifiableOld.List<java.lang.String>, ReifiableOld.ListImpl<ReifiableOld>)\n+ReifiableOld.java:14:39: compiler.err.not.within.bounds: java.lang.String, T\n+ReifiableOld.java:15:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ReifiableOld.List<ReifiableOld>, ReifiableOld.Unrelated<ReifiableOld>)\n+4 errors\n","filename":"test\/langtools\/tools\/javac\/patterns\/ReifiableOld-old.out","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -5,3 +5,2 @@\n- * @compile\/fail\/ref=ReifiableOld-old.out -source 13 -Xlint:-options -XDrawDiagnostics ReifiableOld.java\n- * @compile\/fail\/ref=ReifiableOld-old.out -source ${jdk.version} -XDrawDiagnostics ReifiableOld.java\n- * @compile\/fail\/ref=ReifiableOld.out --enable-preview -source ${jdk.version} -XDrawDiagnostics ReifiableOld.java\n+ * @compile\/fail\/ref=ReifiableOld-old.out -source 15 -Xlint:-options -XDrawDiagnostics ReifiableOld.java\n+ * @compile\/fail\/ref=ReifiableOld.out -XDrawDiagnostics ReifiableOld.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/ReifiableOld.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,6 +1,4 @@\n-ReifiableOld.java:12:16: compiler.err.instanceof.reifiable.not.safe: java.lang.Object, ReifiableOld.ListImpl<ReifiableOld>\n-ReifiableOld.java:14:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ReifiableOld.List<java.lang.String>, ReifiableOld.ListImpl<ReifiableOld>)\n-ReifiableOld.java:15:39: compiler.err.not.within.bounds: java.lang.String, T\n-ReifiableOld.java:16:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ReifiableOld.List<ReifiableOld>, ReifiableOld.Unrelated<ReifiableOld>)\n-- compiler.note.preview.filename: ReifiableOld.java\n-- compiler.note.preview.recompile\n+ReifiableOld.java:11:16: compiler.err.instanceof.reifiable.not.safe: java.lang.Object, ReifiableOld.ListImpl<ReifiableOld>\n+ReifiableOld.java:13:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ReifiableOld.List<java.lang.String>, ReifiableOld.ListImpl<ReifiableOld>)\n+ReifiableOld.java:14:39: compiler.err.not.within.bounds: java.lang.String, T\n+ReifiableOld.java:15:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ReifiableOld.List<ReifiableOld>, ReifiableOld.Unrelated<ReifiableOld>)\n","filename":"test\/langtools\/tools\/javac\/patterns\/ReifiableOld.out","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=UncheckedWarningOnMatchesTest.out -Xlint:unchecked -Werror -XDrawDiagnostics --enable-preview -source ${jdk.version} UncheckedWarningOnMatchesTest.java\n+ * @compile\/fail\/ref=UncheckedWarningOnMatchesTest.out -Xlint:unchecked -Werror -XDrawDiagnostics UncheckedWarningOnMatchesTest.java\n","filename":"test\/langtools\/tools\/javac\/patterns\/UncheckedWarningOnMatchesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,0 @@\n-- compiler.note.preview.filename: UncheckedWarningOnMatchesTest.java\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/UncheckedWarningOnMatchesTest.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,2 +101,0 @@\n-        String sourceVersion = Integer.toString(Runtime.version().feature());\n-\n@@ -104,1 +102,0 @@\n-        addCompileOptions(\"--enable-preview\", \"-source\", sourceVersion);\n@@ -116,2 +113,0 @@\n-        String sourceVersion = Integer.toString(Runtime.version().feature());\n-\n@@ -119,1 +114,0 @@\n-        addCompileOptions(\"--enable-preview\", \"-source\", sourceVersion);\n","filename":"test\/langtools\/tools\/javac\/patterns\/scope\/ScopeTest.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-            handleCurrentTreeAsBindingVar();\n+            handleTreeAsBindingVar(new TreePath(getCurrentPath(), node.getVariable()));\n@@ -115,1 +115,1 @@\n-                handleCurrentTreeAsBindingVar();\n+                handleTreeAsBindingVar(getCurrentPath());\n@@ -120,2 +120,2 @@\n-        private void handleCurrentTreeAsBindingVar() {\n-           Element element = trees.getElement(getCurrentPath());\n+        private void handleTreeAsBindingVar(TreePath tp) {\n+           Element element = trees.getElement(tp);\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestBindingVariable.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1675,0 +1675,35 @@\n+\n+    public void testAnnotationsOnVarargsRecComp() {\n+        assertOK(\n+                \"\"\"\n+                import java.lang.annotation.*;\n+\n+                @Target({ElementType.TYPE_USE})\n+                @interface Simple {}\n+\n+                record R(@Simple int... val) {\n+                    static void test() {\n+                        R rec = new R(10, 20);\n+                    }\n+                }\n+                \"\"\"\n+        );\n+        assertOK(\n+                \"\"\"\n+                import java.lang.annotation.*;\n+\n+                @Target({ElementType.TYPE_USE})\n+                @interface SimpleContainer{ Simple[] value(); }\n+\n+                @Repeatable(SimpleContainer.class)\n+                @Target({ElementType.TYPE_USE})\n+                @interface Simple {}\n+\n+                record R(@Simple int... val) {\n+                    static void test() {\n+                        R rec = new R(10, 20);\n+                    }\n+                }\n+                \"\"\"\n+        );\n+    }\n","filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -98,2 +99,12 @@\n-            ObjectIdentifier expected) throws Exception {\n-        Asserts.assertEQ(innerDerValue(der, location).getOID(), expected);\n+            Object expected) throws Exception {\n+        ObjectIdentifier oid;\n+        if (expected instanceof ObjectIdentifier) {\n+            oid = (ObjectIdentifier)expected;\n+        } else if (expected instanceof KnownOIDs) {\n+            oid = ObjectIdentifier.of((KnownOIDs) expected);\n+        } else if (expected instanceof String) {\n+            oid = ObjectIdentifier.of(KnownOIDs.findMatch((String)expected));\n+        } else {\n+            throw new IllegalArgumentException(expected.toString());\n+        }\n+        Asserts.assertEQ(innerDerValue(der, location).getOID(), oid);\n","filename":"test\/lib\/jdk\/test\/lib\/security\/DerUtils.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+  \n+#include \"jlong.h\"\n@@ -38,1 +40,1 @@\n-    return (jlong) p;\n+    return ptr_to_jlong(p);\n@@ -43,1 +45,1 @@\n-    free((Point*) thisPoint);\n+    free(jlong_to_ptr(thisPoint));\n@@ -48,1 +50,1 @@\n-    Point* point = (Point*) thisPoint;\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -54,1 +56,1 @@\n-    Point* point = (Point*) thisPoint;\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -60,1 +62,1 @@\n-    Point* point = (Point*) thisPoint;\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -66,1 +68,1 @@\n-    Point* point = (Point*) thisPoint;\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -72,2 +74,2 @@\n-    Point* p1 = (Point*) thisPoint;\n-    Point* p2 = (Point*) other;\n+    Point* p1 = jlong_to_ptr(thisPoint);\n+    Point* p2 = jlong_to_ptr(other);\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/points\/support\/libJNIPoint.c","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}