{"files":[{"patch":"@@ -25,0 +25,1 @@\n+<<<<<<< HEAD\n@@ -26,0 +27,3 @@\n+=======\n+#include <math.h>\n+>>>>>>> 4b0e1067ed994116142989bfc0495880cd88f455\n@@ -29,0 +33,6 @@\n+double distance(Point p1, Point p2) {\n+    int xDist = abs(p1.x - p2.x);\n+    int yDist = abs(p1.y - p2.y);\n+    return sqrt((xDist * xDist) + (yDist * yDist));\n+}\n+\n@@ -63,0 +73,14 @@\n+\n+JNIEXPORT jdouble JNICALL Java_org_openjdk_bench_jdk_incubator_foreign_points_support_JNIPoint_distance\n+  (JNIEnv *env, jclass cls, jlong thisPoint, jlong other) {\n+    Point* p1 = (Point*) thisPoint;\n+    Point* p2 = (Point*) other;\n+    return distance(*p1, *p2);\n+}\n+\n+JNIEXPORT jdouble JNICALL Java_org_openjdk_bench_jdk_incubator_foreign_points_support_BBPoint_distance\n+  (JNIEnv *env, jclass ignored, jobject buffP1, jobject buffP2) {\n+    Point* p1 = (Point*) (*env)->GetDirectBufferAddress(env, buffP1);\n+    Point* p2 = (Point*) (*env)->GetDirectBufferAddress(env, buffP2);\n+    return distance(*p1, *p2);\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/points\/support\/libJNIPoint.c","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"}]}