{"files":[{"patch":"@@ -423,0 +423,21 @@\n+    \/**\n+     * Creates a var handle that accesses a memory segment at the offset selected by the given layout path,\n+     * where the initial layout in the path is this layout.\n+     * <p>\n+     * This method is equivalent to {@link #varHandle(PathElement...)},\n+     * with the exception that the base offset coordinate of the returned var handle is bound to the provided value,\n+     * as follows:\n+     * {@snippet lang = \"java\":\n+     * MethodHandles.insertCoordinates(varHandle(elements), 1, baseOffset);\n+     * }\n+     *\n+     * @param baseOffset the offset to be bound to the returned var handle.\n+     * @param elements the layout path elements.\n+     * @return a var handle that accesses a memory segment at the offset selected by the given layout path.\n+     * @throws IllegalArgumentException if the layout path is not <a href=\"#well-formedness\">well-formed<\/a> for this layout.\n+     * @throws IllegalArgumentException if the layout selected by the provided path is not a {@linkplain ValueLayout value layout}.\n+     *\/\n+    default VarHandle varHandle(long baseOffset, PathElement... elements) {\n+        return MethodHandles.insertCoordinates(varHandle(elements), 1, baseOffset);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    static final VarHandle intHandle = MethodHandles.insertCoordinates(ValueLayout.JAVA_INT.varHandle(), 1, 0L);\n+    static final VarHandle intHandle = ValueLayout.JAVA_INT.varHandle(0L);\n@@ -90,1 +90,1 @@\n-    static final VarHandle floatHandle = MethodHandles.insertCoordinates(ValueLayout.JAVA_FLOAT.varHandle(), 1, 0L);\n+    static final VarHandle floatHandle = ValueLayout.JAVA_FLOAT.varHandle(0L);\n","filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    static final VarHandle INT_HANDLE = adaptSegmentHandle(JAVA_INT.varHandle());\n+    static final VarHandle INT_HANDLE = adaptSegmentHandle(JAVA_INT.varHandle(0L));\n@@ -71,1 +71,0 @@\n-        handle = MethodHandles.insertCoordinates(handle, 1, 0L);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/MemorySegmentGetUnsafe.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}