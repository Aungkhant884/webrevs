{"files":[{"patch":"@@ -203,4 +203,4 @@\n-     * @throws IllegalArgumentException if the provided record {@code type} contains components for which\n-     *                                  there are no exact mapping (of names and types) in this group layout\n-     *                                  or if the provided {@code type} is not public or if the method is otherwise\n-     *                                  unable to create a record mapper as specified above.\n+     * @throws IllegalArgumentException if the provided record {@code type} is the class {@link Record} or contains\n+     *                                  components for which there are no exact mapping (of names and types) in\n+     *                                  this group layout or if the provided {@code type} is not public or\n+     *                                  if the method is otherwise unable to create a record mapper as specified above.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -123,0 +123,3 @@\n+        if (Record.class.equals(recordType)) {\n+            throw new IllegalArgumentException(\"The common base class java.lang.Record is not a record in itself\");\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractGroupLayout.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-                MemoryLayout.paddingLayout(Integer.SIZE * 2).withName(\"padding\"),\n+                MemoryLayout.paddingLayout(Integer.BYTES * 2).withName(\"padding\"),\n@@ -770,0 +770,6 @@\n+    @Test\n+    public void recordClassItself() {\n+        assertThrows(IllegalArgumentException.class, () ->\n+                POINT_LAYOUT.recordMapper(Record.class)\n+        );\n+    }\n","filename":"test\/jdk\/java\/foreign\/TestRecordMapper.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}