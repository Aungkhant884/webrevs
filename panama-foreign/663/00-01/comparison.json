{"files":[{"patch":"@@ -137,1 +137,1 @@\n- * can be obtained by adapt a segment var handle view using the var handle combinator functions defined in the\n+ * can be obtained by adapting a segment var handle view using the var handle combinator functions defined in the\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,4 +34,4 @@\n- * models a contiguous memory region, which can reside either inside or outside the Java heap. Moreover,\n- * the {@link java.lang.foreign.MemoryLayout} class hierarchy enables description of <em>memory layouts<\/em>\n- * and basic operations such as computing the size in bytes of a given layout, obtain its alignment requirements.\n- * Memory layouts also provide an alternate, more abstract way, to <a href=MemorySegment.html#segment-deref>dereference memory segments<\/a>\n+ * models a contiguous memory region, residing either inside or outside the Java heap. The contents of a memory\n+ * segment can be described using a {@link java.lang.foreign.MemoryLayout memory layout}, which provides\n+ * basic operations to query sizes, offsets and alignment constraints. Memory layouts also provide\n+ * an alternate, more abstract way, to <a href=MemorySegment.html#segment-deref>dereference memory segments<\/a>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-     * Resulting var handle will take a memory segment as first argument (the segment to be dereferenced),\n+     * The resulting var handle will take a memory segment as first argument (the segment to be dereferenced),\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}