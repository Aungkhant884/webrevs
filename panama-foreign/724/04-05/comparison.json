{"files":[{"patch":"@@ -124,1 +124,1 @@\n-    public final Bindings getBindings(MethodType mt, FunctionDescriptor cDesc, boolean forUpcall) {\n+    public Bindings getBindings(MethodType mt, FunctionDescriptor cDesc, boolean forUpcall) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,0 @@\n-            System.out.println(\"Using layout: \" + alignedLayout);\n@@ -79,1 +78,0 @@\n-                    System.out.println(\"Using session: \" + session);\n@@ -82,4 +80,1 @@\n-                        if (allocationFactory == AllocationFactory.NATIVE_ALLOCATOR && layout.toString().contains(\"I32\")) {\n-                            System.out.format(\"%d %n\", i);\n-                        }\n-                        MemorySegment address =  allocationFunction.allocate(allocator, alignedLayout, value);\n+                        MemorySegment address = allocationFunction.allocate(allocator, alignedLayout, value);\n@@ -247,2 +242,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfByte) SegmentAllocator::allocate, \"OfByte\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfByte) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -250,2 +245,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfShort) SegmentAllocator::allocate, \"OfShort\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfShort) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -253,2 +248,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfChar) SegmentAllocator::allocate, \"OfChar\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfChar) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -257,2 +252,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfInt) SegmentAllocator::allocate, \"OfInt\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfInt) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -260,2 +255,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfFloat) SegmentAllocator::allocate, \"OfFloat\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfFloat) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -263,2 +258,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfLong) SegmentAllocator::allocate,\"OfLong\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfLong) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -266,2 +261,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfDouble) SegmentAllocator::allocate,\"OfDouble\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfDouble) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -269,2 +264,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfAddress) SegmentAllocator::allocate,\"OfAddress\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfAddress) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -273,2 +268,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfShort) SegmentAllocator::allocate,\"OfShort\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfShort) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -276,2 +271,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfChar) SegmentAllocator::allocate,\"OfChar\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfChar) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -280,2 +275,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfInt) SegmentAllocator::allocate,\"OfInt\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfInt) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -283,2 +278,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfFloat) SegmentAllocator::allocate,\"OfFloat\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfFloat) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -286,2 +281,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfLong) SegmentAllocator::allocate,\"OfLong\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfLong) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -289,2 +284,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfDouble) SegmentAllocator::allocate,\"OfDouble\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfDouble) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -292,2 +287,2 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfAddress) SegmentAllocator::allocate, \"OfAddress\"),\n-                    (Function<MemoryLayout, VarHandle>) MemoryLayout::varHandle});\n+                    (AllocationFunction.OfAddress) SegmentAllocator::allocate,\n+                    (Function<MemoryLayout, VarHandle>)l -> l.varHandle() });\n@@ -302,3 +297,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_BYTE,\n-                    new NamedAllocationFunction<>((AllocationFunction.OfByteArray) SegmentAllocator::allocateArray, \"OfByteArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_BYTE,\n+                    (AllocationFunction.OfByteArray) SegmentAllocator::allocateArray,\n@@ -306,3 +300,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_CHAR.withOrder(ByteOrder.LITTLE_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfCharArray) SegmentAllocator::allocateArray, \"OfCharArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_CHAR.withOrder(ByteOrder.LITTLE_ENDIAN),\n+                    (AllocationFunction.OfCharArray) SegmentAllocator::allocateArray,\n@@ -310,3 +303,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_SHORT.withOrder(ByteOrder.LITTLE_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfShortArray) SegmentAllocator::allocateArray, \"OfShortArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_SHORT.withOrder(ByteOrder.LITTLE_ENDIAN),\n+                    (AllocationFunction.OfShortArray) SegmentAllocator::allocateArray,\n@@ -316,1 +308,1 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfIntArray) SegmentAllocator::allocateArray, \"OfIntArray\"),\n+                    (AllocationFunction.OfIntArray) SegmentAllocator::allocateArray,\n@@ -318,3 +310,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_FLOAT.withOrder(ByteOrder.LITTLE_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfFloatArray) SegmentAllocator::allocateArray, \"OfFloatArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_FLOAT.withOrder(ByteOrder.LITTLE_ENDIAN),\n+                    (AllocationFunction.OfFloatArray) SegmentAllocator::allocateArray,\n@@ -322,3 +313,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_LONG.withOrder(ByteOrder.LITTLE_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfLongArray) SegmentAllocator::allocateArray, \"OfLongArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_LONG.withOrder(ByteOrder.LITTLE_ENDIAN),\n+                    (AllocationFunction.OfLongArray) SegmentAllocator::allocateArray,\n@@ -326,3 +316,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_DOUBLE.withOrder(ByteOrder.LITTLE_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfDoubleArray) SegmentAllocator::allocateArray,\"OfDoubleArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_DOUBLE.withOrder(ByteOrder.LITTLE_ENDIAN),\n+                    (AllocationFunction.OfDoubleArray) SegmentAllocator::allocateArray,\n@@ -331,3 +320,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_CHAR.withOrder(ByteOrder.BIG_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfCharArray) SegmentAllocator::allocateArray, \"OfCharArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_CHAR.withOrder(ByteOrder.BIG_ENDIAN),\n+                    (AllocationFunction.OfCharArray) SegmentAllocator::allocateArray,\n@@ -335,3 +323,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_SHORT.withOrder(ByteOrder.BIG_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfShortArray) SegmentAllocator::allocateArray,\"OfShortArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_SHORT.withOrder(ByteOrder.BIG_ENDIAN),\n+                    (AllocationFunction.OfShortArray) SegmentAllocator::allocateArray,\n@@ -341,1 +328,1 @@\n-                    new NamedAllocationFunction<>((AllocationFunction.OfIntArray) SegmentAllocator::allocateArray, \"OfIntArray\"),\n+                    (AllocationFunction.OfIntArray) SegmentAllocator::allocateArray,\n@@ -343,3 +330,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_FLOAT.withOrder(ByteOrder.BIG_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfFloatArray) SegmentAllocator::allocateArray,\"OfFloatArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_FLOAT.withOrder(ByteOrder.BIG_ENDIAN),\n+                    (AllocationFunction.OfFloatArray) SegmentAllocator::allocateArray,\n@@ -347,3 +333,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_LONG.withOrder(ByteOrder.BIG_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfLongArray) SegmentAllocator::allocateArray, \"OfLongArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_LONG.withOrder(ByteOrder.BIG_ENDIAN),\n+                    (AllocationFunction.OfLongArray) SegmentAllocator::allocateArray,\n@@ -351,3 +336,2 @@\n-            arrayAllocations.add(new Object[] { factory,\n-                    ValueLayout.JAVA_DOUBLE.withOrder(ByteOrder.BIG_ENDIAN),\n-                    new NamedAllocationFunction<>((AllocationFunction.OfDoubleArray) SegmentAllocator::allocateArray,\"OfDoubleArray\"),\n+            arrayAllocations.add(new Object[] { factory, ValueLayout.JAVA_DOUBLE.withOrder(ByteOrder.BIG_ENDIAN),\n+                    (AllocationFunction.OfDoubleArray) SegmentAllocator::allocateArray,\n@@ -381,14 +365,0 @@\n-    record NamedAllocationFunction<X, L extends ValueLayout>(AllocationFunction<X, L> allocationFunction,\n-                                                             String name)\n-            implements AllocationFunction<X, L> {\n-        @Override\n-        public MemorySegment allocate(SegmentAllocator allocator, L layout, X value) {\n-            return allocationFunction.allocate(allocator, layout, value);\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return name;\n-        }\n-    }\n-\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":55,"deletions":85,"binary":false,"changes":140,"status":"modified"}]}