{"files":[{"patch":"@@ -56,10 +56,0 @@\n-    \/**\n-     * {@return {@code true}, if this group layout is a struct layout}\n-     *\/\n-    boolean isStruct();\n-\n-    \/**\n-     * {@return {@code true}, if this group layout is a union layout}\n-     *\/\n-    boolean isUnion();\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -460,5 +460,0 @@\n-    \/**\n-     * {@return true, if this layout is a padding layout}\n-     *\/\n-    boolean isPadding();\n-\n@@ -590,2 +585,2 @@\n-     *     <li>two group layouts are considered equal if they are of the same kind (see {@link GroupLayout#isStruct()},\n-     *     {@link GroupLayout#isUnion()}) and if their member layouts (see {@link GroupLayout#memberLayouts()}) are also equal<\/li>\n+     *     <li>two group layouts are considered equal if they are of the same type (see {@link StructLayout},\n+     *     {@link UnionLayout}) and if their member layouts (see {@link GroupLayout#memberLayouts()}) are also equal<\/li>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,5 +30,1 @@\n-import java.lang.foreign.GroupLayout;\n-import java.lang.foreign.MemoryLayout;\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.SequenceLayout;\n-import java.lang.foreign.ValueLayout;\n+import java.lang.foreign.*;\n@@ -126,1 +122,1 @@\n-            } else if (g.isStruct()) {\n+            } else if (g instanceof StructLayout) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.foreign.layout.PaddingLayoutImpl;\n@@ -37,10 +38,1 @@\n-import java.lang.foreign.Linker;\n-import java.lang.foreign.FunctionDescriptor;\n-import java.lang.foreign.GroupLayout;\n-import java.lang.foreign.MemoryLayout;\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.MemorySession;\n-import java.lang.foreign.SegmentAllocator;\n-import java.lang.foreign.SequenceLayout;\n-import java.lang.foreign.VaList;\n-import java.lang.foreign.ValueLayout;\n+import java.lang.foreign.*;\n@@ -121,1 +113,1 @@\n-        } else if (t.isPadding()) {\n+        } else if (t instanceof PaddingLayout) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        if (!(type instanceof GroupLayout))\n+        if (!(type instanceof GroupLayout groupLayout))\n@@ -66,2 +66,0 @@\n-        GroupLayout groupLayout = (GroupLayout)type;\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/TypeClass.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,5 +27,2 @@\n-import java.lang.foreign.GroupLayout;\n-import java.lang.foreign.MemoryLayout;\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.SequenceLayout;\n-import java.lang.foreign.ValueLayout;\n+import java.lang.foreign.*;\n+\n@@ -196,1 +193,1 @@\n-            if (group.isStruct()) {\n+            if (group instanceof StructLayout) {\n@@ -204,2 +201,1 @@\n-        if (l instanceof GroupLayout) {\n-            GroupLayout group = (GroupLayout)l;\n+        if (l instanceof GroupLayout group) {\n@@ -208,1 +204,1 @@\n-                if (group.isStruct()) {\n+                if (group instanceof StructLayout) {\n@@ -212,1 +208,1 @@\n-        } else if (l.isPadding()) {\n+        } else if (l instanceof PaddingLayout) {\n@@ -214,2 +210,1 @@\n-        } else if (l instanceof SequenceLayout) {\n-            SequenceLayout seq = (SequenceLayout)l;\n+        } else if (l instanceof SequenceLayout seq) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/TypeClass.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -25,8 +25,1 @@\n-import java.lang.foreign.Linker;\n-import java.lang.foreign.FunctionDescriptor;\n-import java.lang.foreign.GroupLayout;\n-import java.lang.foreign.MemoryLayout;\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.MemorySession;\n-import java.lang.foreign.SegmentAllocator;\n-import java.lang.foreign.ValueLayout;\n+import java.lang.foreign.*;\n@@ -427,1 +420,1 @@\n-            if (l.isPadding()) continue;\n+            if (l instanceof PaddingLayout) continue;\n","filename":"test\/jdk\/java\/foreign\/CallGeneratorHelper.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-        assertEquals(kind == LayoutKind.PADDING, kind.layout.isPadding());\n+        assertEquals(kind == LayoutKind.PADDING, kind.layout instanceof PaddingLayout);\n","filename":"test\/jdk\/java\/foreign\/TestLayouts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}