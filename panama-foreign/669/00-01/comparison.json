{"files":[{"patch":"@@ -110,1 +110,1 @@\n- * Creating downcall method handle is intrinsically unsafe. A symbol in a native library does not, in general,\n+ * Creating a downcall method handle is intrinsically unsafe. A symbol in a native library does not, in general,\n@@ -161,1 +161,1 @@\n-     * Creates a method handle which can be used to call a target foreign function with given signature and address.\n+     * Creates a method handle which can be used to call a target foreign function with the given signature and address.\n@@ -184,1 +184,1 @@\n-     * Creates a method handle which can be used to call a target foreign function with given signature.\n+     * Creates a method handle which can be used to call a target foreign function with the given signature.\n@@ -204,1 +204,1 @@\n-     * Creates a native stub which can be passed to other foreign functions as a function pointer, with given\n+     * Creates a native stub which can be passed to other foreign functions as a function pointer, with the given\n@@ -230,1 +230,1 @@\n-     * {@return the downcall method handle {@linkplain MethodType type} associated with a given function descriptor}\n+     * {@return the downcall method handle {@linkplain MethodType type} associated with the given function descriptor}\n@@ -240,1 +240,1 @@\n-     * {@return the method handle {@linkplain MethodType type} associated with an upcall stub with given function descriptor}\n+     * {@return the method handle {@linkplain MethodType type} associated with an upcall stub with the given function descriptor}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/CLinker.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-     * Creates a function descriptor with given return and argument layouts.\n+     * Creates a function descriptor with the given return and argument layouts.\n@@ -91,1 +91,1 @@\n-     * Creates a function descriptor with given argument layouts and no return layout.\n+     * Creates a function descriptor with the given argument layouts and no return layout.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import jdk.internal.ValueBased;\n@@ -92,1 +91,1 @@\n-     * @return a memory address with given offset from current one.\n+     * @return a memory address with the given offset from current one.\n@@ -97,1 +96,1 @@\n-     * Reads a UTF-8 encoded, null-terminated string from this address and offset.\n+     * Reads a UTF-8 encoded, null-terminated string from this address at the given offset.\n@@ -121,1 +120,1 @@\n-     * Writes the given string to this address at given offset, converting it to a null-terminated byte sequence using UTF-8 encoding.\n+     * Writes the given string to this address at the given offset, converting it to a null-terminated byte sequence using UTF-8 encoding.\n@@ -163,1 +162,1 @@\n-     * Creates a memory address from a given long value.\n+     * Creates a memory address from the given long value.\n@@ -174,1 +173,1 @@\n-     * Reads a byte from this address and offset with given layout.\n+     * Reads a byte at the given offset from this address, with the given layout.\n@@ -194,1 +193,1 @@\n-     * Writes a byte to this address instance and offset with given layout.\n+     * Writes a byte at the given offset from this address, with the given layout.\n@@ -214,1 +213,1 @@\n-     * Reads a boolean from this address and offset with given layout.\n+     * Reads a boolean at the given offset from this address, with the given layout.\n@@ -234,1 +233,1 @@\n-     * Writes a boolean to this address instance and offset with given layout.\n+     * Writes a boolean at the given offset from this address, with the given layout.\n@@ -254,1 +253,1 @@\n-     * Reads a char from this address and offset with given layout.\n+     * Reads a char at the given offset from this address, with the given layout.\n@@ -274,1 +273,1 @@\n-     * Writes a char to this address instance and offset with given layout.\n+     * Writes a char at the given offset from this address, with the given layout.\n@@ -294,1 +293,1 @@\n-     * Reads a short from this address and offset with given layout.\n+     * Reads a short at the given offset from this address, with the given layout.\n@@ -314,1 +313,1 @@\n-     * Writes a short to this address instance and offset with given layout.\n+     * Writes a short at the given offset from this address, with the given layout.\n@@ -334,1 +333,1 @@\n-     * Reads an int from this address and offset with given layout.\n+     * Reads an int at the given offset from this address, with the given layout.\n@@ -354,1 +353,1 @@\n-     * Writes an int to this address instance and offset with given layout.\n+     * Writes an int at the given offset from this address, with the given layout.\n@@ -374,1 +373,1 @@\n-     * Reads a float from this address and offset with given layout.\n+     * Reads a float at the given offset from this address, with the given layout.\n@@ -394,1 +393,1 @@\n-     * Writes a float to this address instance and offset with given layout.\n+     * Writes a float at the given offset from this address, with the given layout.\n@@ -414,1 +413,1 @@\n-     * Reads a long from this address and offset with given layout.\n+     * Reads a long at the given offset from this address, with the given layout.\n@@ -434,1 +433,1 @@\n-     * Writes a long to this address instance and offset with given layout.\n+     * Writes a long at the given offset from this address, with the given layout.\n@@ -454,1 +453,1 @@\n-     * Reads a double from this address and offset with given layout.\n+     * Reads a double at the given offset from this address, with the given layout.\n@@ -474,1 +473,1 @@\n-     * Writes a double to this address instance and offset with given layout.\n+     * Writes a double at the given offset from this address, with the given layout.\n@@ -494,1 +493,1 @@\n-     * Reads an address from this address and offset with given layout.\n+     * Reads an address at the given offset from this address, with the given layout.\n@@ -514,1 +513,1 @@\n-     * Writes an address to this address instance and offset with given layout.\n+     * Writes an address at the given offset from this address, with the given layout.\n@@ -534,1 +533,1 @@\n-     * Reads a char from this address and index, scaled by given layout size.\n+     * Reads a char from this address at the given index, scaled by the given layout size.\n@@ -555,1 +554,1 @@\n-     * Writes a char to this address instance and index, scaled by given layout size.\n+     * Writes a char to this address at the given index, scaled by the given layout size.\n@@ -576,1 +575,1 @@\n-     * Reads a short from this address and index, scaled by given layout size.\n+     * Reads a short from this address at the given index, scaled by the given layout size.\n@@ -597,1 +596,1 @@\n-     * Writes a short to this address instance and index, scaled by given layout size.\n+     * Writes a short to this address at the given index, scaled by the given layout size.\n@@ -618,1 +617,1 @@\n-     * Reads an int from this address and index, scaled by given layout size.\n+     * Reads an int from this address at the given index, scaled by the given layout size.\n@@ -639,1 +638,1 @@\n-     * Writes an int to this address instance and index, scaled by given layout size.\n+     * Writes an int to this address at the given index, scaled by the given layout size.\n@@ -660,1 +659,1 @@\n-     * Reads a float from this address and index, scaled by given layout size.\n+     * Reads a float from this address at the given index, scaled by the given layout size.\n@@ -681,1 +680,1 @@\n-     * Writes a float to this address instance and index, scaled by given layout size.\n+     * Writes a float to this address at the given index, scaled by the given layout size.\n@@ -702,1 +701,1 @@\n-     * Reads a long from this address and index, scaled by given layout size.\n+     * Reads a long from this address at the given index, scaled by the given layout size.\n@@ -723,1 +722,1 @@\n-     * Writes a long to this address instance and index, scaled by given layout size.\n+     * Writes a long to this address at the given index, scaled by the given layout size.\n@@ -744,1 +743,1 @@\n-     * Reads a double from this address and index, scaled by given layout size.\n+     * Reads a double from this address at the given index, scaled by the given layout size.\n@@ -765,1 +764,1 @@\n-     * Writes a double to this address instance and index, scaled by given layout size.\n+     * Writes a double to this address at the given index, scaled by the given layout size.\n@@ -786,1 +785,1 @@\n-     * Reads an address from this address and index, scaled by given layout size.\n+     * Reads an address from this address at the given index, scaled by the given layout size.\n@@ -807,1 +806,1 @@\n-     * Writes an address to this address instance and index, scaled by given layout size.\n+     * Writes an address to this address at the given index, scaled by the given layout size.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryAddress.java","additions":36,"deletions":37,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-     * Returns a memory layout with same size and alignment constraints as this layout,\n+     * Returns a memory layout with the same size and alignment constraints as this layout,\n@@ -200,1 +200,1 @@\n-     * @return a memory layout with given name.\n+     * @return a memory layout with the given name.\n@@ -246,1 +246,1 @@\n-     * Returns a memory layout with same size and name as this layout,\n+     * Returns a memory layout with the same size and name as this layout,\n@@ -250,1 +250,1 @@\n-     * @return a memory layout with given alignment constraints.\n+     * @return a memory layout with the given alignment constraints.\n@@ -256,1 +256,1 @@\n-     * Computes the offset, in bits, of the layout selected by a given layout path, where the path is considered rooted in this\n+     * Computes the offset, in bits, of the layout selected by the given layout path, where the path is considered rooted in this\n@@ -274,1 +274,1 @@\n-     * by a given layout path, where the path is considered rooted in this layout.\n+     * by the given layout path, where the path is considered rooted in this layout.\n@@ -305,1 +305,1 @@\n-     * Computes the offset, in bytes, of the layout selected by a given layout path, where the path is considered rooted in this\n+     * Computes the offset, in bytes, of the layout selected by the given layout path, where the path is considered rooted in this\n@@ -323,1 +323,1 @@\n-     * by a given layout path, where the path is considered rooted in this layout.\n+     * by the given layout path, where the path is considered rooted in this layout.\n@@ -359,1 +359,1 @@\n-     * Creates an access var handle that can be used to dereference memory at the layout selected by a given layout path,\n+     * Creates an access var handle that can be used to dereference memory at the layout selected by the given layout path,\n@@ -397,1 +397,1 @@\n-     * Creates a <em>strided<\/em> access var handle that can be used to dereference memory at the layout selected by a given layout path,\n+     * Creates a <em>strided<\/em> access var handle that can be used to dereference memory at the layout selected by the given layout path,\n@@ -423,1 +423,1 @@\n-     * corresponding to the layout selected by a given layout path, where the path is considered rooted in this layout.\n+     * corresponding to the layout selected by the given layout path, where the path is considered rooted in this layout.\n@@ -499,1 +499,1 @@\n-     * path elements are used to select a given named member layout within a {@link GroupLayout}. Sequence\n+     * path elements are used to select a named member layout within a {@link GroupLayout}. Sequence\n@@ -517,1 +517,1 @@\n-         * Returns a path element which selects a member layout with given name from a given group layout.\n+         * Returns a path element which selects a member layout with the given name in a group layout.\n@@ -525,1 +525,1 @@\n-         * @return a path element which selects the group element with given name.\n+         * @return a path element which selects the group element with the given name.\n@@ -534,1 +534,1 @@\n-         * Returns a path element which selects the element layout at the specified position in a given the sequence layout.\n+         * Returns a path element which selects the element layout at the specified position in a sequence layout.\n@@ -539,1 +539,1 @@\n-         * @return a path element which selects the sequence element layout with given index.\n+         * @return a path element which selects the sequence element layout with the given index.\n@@ -551,1 +551,1 @@\n-         * Returns a path element which selects the element layout in a <em>range<\/em> of positions in a given the sequence layout.\n+         * Returns a path element which selects the element layout in a <em>range<\/em> of positions in a sequence layout.\n@@ -567,1 +567,1 @@\n-         * @return a path element which selects the sequence element layout with given index.\n+         * @return a path element which selects the sequence element layout with the given index.\n@@ -582,1 +582,1 @@\n-         * Returns a path element which selects an unspecified element layout from a given sequence layout.\n+         * Returns a path element which selects an unspecified element layout in a sequence layout.\n@@ -624,1 +624,1 @@\n-     * Creates a padding layout with given size.\n+     * Creates a padding layout with the given size.\n@@ -651,1 +651,1 @@\n-     * @return a value layout with given Java carrier and byte-order.\n+     * @return a value layout with the given Java carrier and byte-order.\n@@ -681,1 +681,1 @@\n-     * Creates a sequence layout with given element layout and element count.\n+     * Creates a sequence layout with the given element layout and element count.\n@@ -685,1 +685,1 @@\n-     * @return the new sequence layout with given element layout and size.\n+     * @return the new sequence layout with the given element layout and size.\n@@ -694,1 +694,1 @@\n-     * Creates a struct layout with given member layouts.\n+     * Creates a struct layout with the given member layouts.\n@@ -697,1 +697,1 @@\n-     * @return a struct layout with given member layouts.\n+     * @return a struct layout with the given member layouts.\n@@ -708,1 +708,1 @@\n-     * Creates a union layout with given member layouts.\n+     * Creates a union layout with the given member layouts.\n@@ -711,1 +711,1 @@\n-     * @return a union layout with given member layouts.\n+     * @return a union layout with the given member layouts.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-     * of this segment plus a given offset; its size is specified by the given argument.\n+     * of this segment plus the given offset; its size is specified by the given argument.\n@@ -339,1 +339,1 @@\n-     * of this segment plus a given offset; its size is computed by subtracting the specified offset from this segment size.\n+     * of this segment plus the given offset; its size is computed by subtracting the specified offset from this segment size.\n@@ -475,1 +475,1 @@\n-     * this segment and a given other segment. The offset is relative to the\n+     * this segment and the given other segment. The offset is relative to the\n@@ -696,1 +696,1 @@\n-     * Reads a UTF-8 encoded, null-terminated string from this segment at given offset.\n+     * Reads a UTF-8 encoded, null-terminated string from this segment at the given offset.\n@@ -716,1 +716,1 @@\n-     * Writes the given string into this segment at given offset, converting it to a null-terminated byte sequence using UTF-8 encoding.\n+     * Writes the given string into this segment at the given offset, converting it to a null-terminated byte sequence using UTF-8 encoding.\n@@ -755,1 +755,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated byte array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated byte array.\n@@ -766,1 +766,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated char array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated char array.\n@@ -777,1 +777,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated short array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated short array.\n@@ -788,1 +788,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated int array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated int array.\n@@ -799,1 +799,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated float array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated float array.\n@@ -810,1 +810,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated long array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated long array.\n@@ -821,1 +821,1 @@\n-     * Creates an array memory segment that models the memory associated with a given heap-allocated double array.\n+     * Creates an array memory segment that models the memory associated with the given heap-allocated double array.\n@@ -833,1 +833,1 @@\n-     * Creates a native memory segment with given size, base address, and memory session.\n+     * Creates a native memory segment with the given size, base address, and memory session.\n@@ -853,1 +853,1 @@\n-     * @return a native memory segment with given base address, size and memory session.\n+     * @return a native memory segment with the given base address, size and memory session.\n@@ -873,2 +873,2 @@\n-     * Creates a native memory segment with given layout and memory session.\n-     * A client is responsible make sure that the memory session associated with the returned segment is closed\n+     * Creates a native memory segment with the given layout and memory session.\n+     * A client is responsible for ensuring that the memory session associated with the returned segment is closed\n@@ -897,2 +897,2 @@\n-     * Creates a native memory segment with given size (in bytes) and memory session.\n-     * A client is responsible make sure that the memory session associated with the returned segment is closed\n+     * Creates a native memory segment with the given size (in bytes) and memory session.\n+     * A client is responsible for ensuring that the memory session associated with the returned segment is closed\n@@ -920,2 +920,2 @@\n-     * Creates a native memory segment with given size (in bytes), alignment constraint (in bytes) and memory session.\n-     * A client is responsible make sure that the memory session associated with the returned segment is closed when the\n+     * Creates a native memory segment with the given size (in bytes), alignment constraint (in bytes) and memory session.\n+     * A client is responsible for ensuring that the memory session associated with the returned segment is closed when the\n@@ -1059,1 +1059,1 @@\n-     * Reads a byte from this segment and offset with given layout.\n+     * Reads a byte at the given offset from this segment, with the given layout.\n@@ -1078,1 +1078,1 @@\n-     * Writes a byte to this segment and offset with given layout.\n+     * Writes a byte at the given offset from this segment, with the given layout.\n@@ -1098,1 +1098,1 @@\n-     * Reads a boolean from this segment and offset with given layout.\n+     * Reads a boolean at the given offset from this segment, with the given layout.\n@@ -1117,1 +1117,1 @@\n-     * Writes a boolean to this segment and offset with given layout.\n+     * Writes a boolean at the given offset from this segment, with the given layout.\n@@ -1137,1 +1137,1 @@\n-     * Reads a char from this segment and offset with given layout.\n+     * Reads a char at the given offset from this segment, with the given layout.\n@@ -1156,1 +1156,1 @@\n-     * Writes a char to this segment and offset with given layout.\n+     * Writes a char at the given offset from this segment, with the given layout.\n@@ -1176,1 +1176,1 @@\n-     * Reads a short from this segment and offset with given layout.\n+     * Reads a short at the given offset from this segment, with the given layout.\n@@ -1195,1 +1195,1 @@\n-     * Writes a short to this segment and offset with given layout.\n+     * Writes a short at the given offset from this segment, with the given layout.\n@@ -1215,1 +1215,1 @@\n-     * Reads an int from this segment and offset with given layout.\n+     * Reads an int at the given offset from this segment, with the given layout.\n@@ -1234,1 +1234,1 @@\n-     * Writes an int to this segment and offset with given layout.\n+     * Writes an int at the given offset from this segment, with the given layout.\n@@ -1254,1 +1254,1 @@\n-     * Reads a float from this segment and offset with given layout.\n+     * Reads a float at the given offset from this segment, with the given layout.\n@@ -1273,1 +1273,1 @@\n-     * Writes a float to this segment and offset with given layout.\n+     * Writes a float at the given offset from this segment, with the given layout.\n@@ -1293,1 +1293,1 @@\n-     * Reads a long from this segment and offset with given layout.\n+     * Reads a long at the given offset from this segment, with the given layout.\n@@ -1312,1 +1312,1 @@\n-     * Writes a long to this segment and offset with given layout.\n+     * Writes a long at the given offset from this segment, with the given layout.\n@@ -1332,1 +1332,1 @@\n-     * Reads a double from this segment and offset with given layout.\n+     * Reads a double at the given offset from this segment, with the given layout.\n@@ -1351,1 +1351,1 @@\n-     * Writes a double to this segment and offset with given layout.\n+     * Writes a double at the given offset from this segment, with the given layout.\n@@ -1371,1 +1371,1 @@\n-     * Reads an address from this segment and offset with given layout.\n+     * Reads an address at the given offset from this segment, with the given layout.\n@@ -1390,1 +1390,1 @@\n-     * Writes an address to this segment and offset with given layout.\n+     * Writes an address at the given offset from this segment, with the given layout.\n@@ -1410,1 +1410,1 @@\n-     * Reads a char from this segment and index, scaled by given layout size.\n+     * Reads a char from this segment at the given index, scaled by the given layout size.\n@@ -1432,1 +1432,1 @@\n-     * Writes a char to this segment and index, scaled by given layout size.\n+     * Writes a char to this segment at the given index, scaled by the given layout size.\n@@ -1455,1 +1455,1 @@\n-     * Reads a short from this segment and index, scaled by given layout size.\n+     * Reads a short from this segment at the given index, scaled by the given layout size.\n@@ -1477,1 +1477,1 @@\n-     * Writes a short to this segment and index, scaled by given layout size.\n+     * Writes a short to this segment at the given index, scaled by the given layout size.\n@@ -1500,1 +1500,1 @@\n-     * Reads an int from this segment and index, scaled by given layout size.\n+     * Reads an int from this segment at the given index, scaled by the given layout size.\n@@ -1522,1 +1522,1 @@\n-     * Writes an int to this segment and index, scaled by given layout size.\n+     * Writes an int to this segment at the given index, scaled by the given layout size.\n@@ -1545,1 +1545,1 @@\n-     * Reads a float from this segment and index, scaled by given layout size.\n+     * Reads a float from this segment at the given index, scaled by the given layout size.\n@@ -1567,1 +1567,1 @@\n-     * Writes a float to this segment and index, scaled by given layout size.\n+     * Writes a float to this segment at the given index, scaled by the given layout size.\n@@ -1590,1 +1590,1 @@\n-     * Reads a long from this segment and index, scaled by given layout size.\n+     * Reads a long from this segment at the given index, scaled by the given layout size.\n@@ -1612,1 +1612,1 @@\n-     * Writes a long to this segment and index, scaled by given layout size.\n+     * Writes a long to this segment at the given index, scaled by the given layout size.\n@@ -1635,1 +1635,1 @@\n-     * Reads a double from this segment and index, scaled by given layout size.\n+     * Reads a double from this segment at the given index, scaled by the given layout size.\n@@ -1657,1 +1657,1 @@\n-     * Writes a double to this segment and index, scaled by given layout size.\n+     * Writes a double to this segment at the given index, scaled by the given layout size.\n@@ -1680,1 +1680,1 @@\n-     * Reads an address from this segment and index, scaled by given layout size.\n+     * Reads an address from this segment at the given index, scaled by the given layout size.\n@@ -1702,1 +1702,1 @@\n-     * Writes an address to this segment and index, scaled by given layout size.\n+     * Writes an address to this segment at the given index, scaled by the given layout size.\n@@ -1727,2 +1727,2 @@\n-     * constraints are specified by the given layout, are read from the source segment, starting at a given offset\n-     * (expressed in bytes), and are copied into the destination array, at a given index.\n+     * constraints are specified by the given layout, are read from the source segment, starting at the given offset\n+     * (expressed in bytes), and are copied into the destination array, at the given index.\n@@ -1777,2 +1777,2 @@\n-     * constraints are specified by the given layout, are read from the source array, starting at a given index,\n-     * and are copied into the destination segment, at a given offset (expressed in bytes).\n+     * constraints are specified by the given layout, are read from the source array, starting at the given index,\n+     * and are copied into the destination segment, at the given offset (expressed in bytes).\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":56,"deletions":56,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given byte value.\n+     * Allocates a memory segment with the given layout and initializes it with the given byte value.\n@@ -101,1 +101,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given char value.\n+     * Allocates a memory segment with the given layout and initializes it with the given char value.\n@@ -116,1 +116,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given short value.\n+     * Allocates a memory segment with the given layout and initializes it with the given short value.\n@@ -131,1 +131,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given int value.\n+     * Allocates a memory segment with the given layout and initializes it with the given int value.\n@@ -146,1 +146,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given float value.\n+     * Allocates a memory segment with the given layout and initializes it with the given float value.\n@@ -161,1 +161,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given long value.\n+     * Allocates a memory segment with the given layout and initializes it with the given long value.\n@@ -176,1 +176,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given double value.\n+     * Allocates a memory segment with the given layout and initializes it with the given double value.\n@@ -191,1 +191,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given address value.\n+     * Allocates a memory segment with the given layout and initializes it with the given address value.\n@@ -207,1 +207,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given byte array.\n+     * Allocates a memory segment with the given layout and initializes it with the given byte array.\n@@ -218,1 +218,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given short array.\n+     * Allocates a memory segment with the given layout and initializes it with the given short array.\n@@ -229,1 +229,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given char array.\n+     * Allocates a memory segment with the given layout and initializes it with the given char array.\n@@ -240,1 +240,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given int array.\n+     * Allocates a memory segment with the given layout and initializes it with the given int array.\n@@ -251,1 +251,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given float array.\n+     * Allocates a memory segment with the given layout and initializes it with the given float array.\n@@ -262,1 +262,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given long array.\n+     * Allocates a memory segment with the given layout and initializes it with the given long array.\n@@ -273,1 +273,1 @@\n-     * Allocates a memory segment with given layout and initialize it with given double array.\n+     * Allocates a memory segment with the given layout and initializes it with the given double array.\n@@ -295,1 +295,1 @@\n-     * Allocates a memory segment with given layout.\n+     * Allocates a memory segment with the given layout.\n@@ -306,1 +306,1 @@\n-     * Allocates a memory segment with given element layout and size.\n+     * Allocates a memory segment with the given element layout and size.\n@@ -319,1 +319,1 @@\n-     * Allocates a memory segment with given size.\n+     * Allocates a memory segment with the given size.\n@@ -330,1 +330,1 @@\n-     * Allocates a memory segment with given size and alignment constraints.\n+     * Allocates a memory segment with the given size and alignment constraints.\n@@ -357,1 +357,1 @@\n-     * the provided memory session, with given arena size. Equivalent to the following code:\n+     * the provided memory session, with the given arena size. Equivalent to the following code:\n@@ -375,1 +375,1 @@\n-     * with given arena size and block size.\n+     * with the given arena size and block size.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-     * Returns a sequence layout with same element layout, alignment constraints and name as this sequence layout,\n+     * Returns a sequence layout with the same element layout, alignment constraints and name as this sequence layout,\n@@ -101,1 +101,1 @@\n-     * @return a sequence layout with given element count.\n+     * @return a sequence layout with the given element count.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-     * Looks up a symbol with given name in this lookup.\n+     * Looks up a symbol with the given name in this lookup.\n@@ -108,1 +108,1 @@\n-     * Loads a library with given name and creates a symbol lookup suitable to find symbols in that library.\n+     * Loads a library with the given name and creates a symbol lookup suitable to find symbols in that library.\n@@ -119,1 +119,1 @@\n-     * @return a new symbol lookup suitable to find symbols in a library with given name.\n+     * @return a new symbol lookup suitable to find symbols in a library with the given name.\n@@ -139,1 +139,1 @@\n-     * Loads a library with given path and creates a symbol lookup suitable to find symbols in that library.\n+     * Loads a library with the given path and creates a symbol lookup suitable to find symbols in that library.\n@@ -148,1 +148,1 @@\n-     * @return a new symbol lookup suitable to find symbols in a library with given path.\n+     * @return a new symbol lookup suitable to find symbols in a library with the given path.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-     * with given memory session.\n+     * with the given memory session.\n@@ -190,1 +190,1 @@\n-     * Creates a variable argument list using a builder (see {@link Builder}), with given\n+     * Creates a variable argument list using a builder (see {@link Builder}), with the given\n@@ -267,1 +267,1 @@\n-         * Writes a {@code MemorySegment} value, with given layout, to the variable argument list being constructed.\n+         * Writes a {@code MemorySegment} value, with the given layout, to the variable argument list being constructed.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * This class and its subclasses are immutable and thread-safe and <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ValueBased.html\">value-based<\/a>.\n+ * This class and its subclasses are immutable, thread-safe and <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ValueBased.html\">value-based<\/a>.\n@@ -92,1 +92,1 @@\n-     * Returns a value layout with same carrier, alignment constraints and name as this value layout,\n+     * Returns a value layout with the same carrier, alignment constraints and name as this value layout,\n@@ -96,1 +96,1 @@\n-     * @return a value layout with given byte order.\n+     * @return a value layout with the given byte order.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n- * can be used to create a fresh segment with given spatial bounds out of a native address.\n+ * can be used to create a fresh segment with the given spatial bounds out of a native address.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}