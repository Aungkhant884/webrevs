{"files":[{"patch":"@@ -213,1 +213,1 @@\n-    {CC \"closeScope0\",   CC \"(\" SCOPE \")Z\",           FN_PTR(ScopedMemoryAccess_closeScope)},\n+    {CC \"closeScope0\",   CC \"(\" SCOPE \")V\",           FN_PTR(ScopedMemoryAccess_closeScope)},\n","filename":"src\/hotspot\/share\/prims\/scopedMemoryAccess.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n- * being closed, the handshake fails, and {@link MemorySession#close()} throws an exception (leaving the session open).\n+ * being closed, the handshake is retried on the problematic threads, until it succeeds.\n@@ -88,2 +88,2 @@\n-    public boolean closeScope(MemorySession session) {\n-        return closeScope0(session);\n+    public void closeScope(MemorySession session) {\n+        closeScope0(session);\n@@ -92,1 +92,1 @@\n-    native boolean closeScope0(MemorySession session);\n+    native void closeScope0(MemorySession session);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}