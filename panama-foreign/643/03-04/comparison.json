{"files":[{"patch":"@@ -183,1 +183,4 @@\n-  \/\/ now iterate on all problematic threads, until we converge\n+  \/\/ now iterate on all problematic threads, until we converge. Note: from this point on,\n+  \/\/ we only need to focus on the problematic threads found in the previous step, as\n+  \/\/ any new thread created after the initial handshake will see the scope as CLOSED,\n+  \/\/ and will fail to access memory anyway.\n@@ -188,3 +191,2 @@\n-    \/\/ if the thread is not in the list handle, we can safely skip further handshakes,\n-    \/\/ as that means that the thread has been created when the scope state has already\n-    \/\/ been set to CLOSED - meaning that the thread access will fail anyway.\n+    \/\/ if the thread is not in the list handle, it means that the thread has died,\n+    \/\/ so that we can safely skip further handshakes.\n","filename":"src\/hotspot\/share\/prims\/scopedMemoryAccess.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}