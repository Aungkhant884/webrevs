[{"commit":{"message":"WIP - make methods private"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"}],"sha":"b9ce2f56500ab9896d1446ec2da136338c5e66a0"},{"commit":{"message":"WIP - Remove commented code"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"}],"sha":"48f189e224ca8feb41354d0dd70999d6caef6f07"},{"commit":{"message":"WIP - Touch ups"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/libUpcallsJNI.c"}],"sha":"e04f45548bd378a73d11bc61a9432a6df56bb0c0"},{"commit":{"message":"WIP - Reduce test configurations"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestDowncall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallHighArity.java"}],"sha":"73fbe6ae5b31ae0fad429402843c65a07a377041"},{"commit":{"message":"WIP - add benchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/libUpcallsJNI.c"}],"sha":"13a5ca71c4ff2050e8a12e43488998d5fce4cd33"},{"commit":{"message":"WIP - get_thread"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp"}],"sha":"cb65ebb5705f141c59dbd0ebf9f88281a4fe5b61"},{"commit":{"message":"WIP - Fix exception handling"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp"}],"sha":"6c0a2df1aca2b85066a84f1c48b70c166a0165b2"},{"commit":{"message":"WIP - remove dead code"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"e18b4f1c00ebdafa976d7d0081df8071201b6438"},{"commit":{"message":"WIP - only add panama log tag for debug builds"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/logging\/logTag.hpp"}],"sha":"8b8df993bd3654aa65df8d413811f74105c7ed2c"},{"commit":{"message":"WIP - Remove duplication in wrapWithAllocator methods"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"6e2505167b76904c97e11280159fcabae29fe2e8"},{"commit":{"message":"WIP - add call arranger test for sysv float structs"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"}],"sha":"30e4cf1569e0a0b0a2abf18538b71b7c4f90962b"},{"commit":{"message":"WIP - AArch64 fixes"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreign_globals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/universalUpcallHandler_aarch64.cpp"}],"sha":"5ca4f9b4a9b5cfc2edb18583422b5b1e3dd5bb76"},{"commit":{"message":"WIP - Stub out AArch64 impl + improve naming"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreign_globals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/universalUpcallHandler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.hpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.inline.hpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"}],"sha":"e65e9f011fca4b3df5f70673f8dec00109894716"},{"commit":{"message":"WIP - Misc. cleanups + Adding safety asserts"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/foreign_globals_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreign_globals.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreign_globals.hpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"}],"sha":"20e0f3adc30c9ab32afd47ad76cf274c9451c769"},{"commit":{"message":"WIP - Add some more upcall benchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/Upcalls.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/libUpcalls.c"}],"sha":"a6f33c2a77d9e6fe9b7237ccf25c2ae6c8c6ad3c"},{"commit":{"message":"WIP - Turn on upcall intrinsics by default."},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"}],"sha":"7d5b194bf685fe930527ae4f0ea5f22dd16c17c1"},{"commit":{"message":"WIP - Return by-value struct type should also be float for float-only structs"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"}],"sha":"dc82a891e73f456289097d7ce1994e0cf027feab"},{"commit":{"message":"Avoid useless moves & fix is_valid assertion"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"}],"sha":"da52b5404904dfaf8afae0f6d830528ea4b965be"},{"commit":{"message":"WIP - Float access mismatch"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"}],"sha":"ad6ac7a8c7e48b68f9fa3236d723c38a4b9560cf"},{"commit":{"message":"WIP - Upcall func select"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"}],"sha":"aa672d8dface42d07bfa7dac986cfb1095237ed7"},{"commit":{"message":"Fix gcc warning"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"}],"sha":"1d5bc959f64633eb883da2a84c1a6d8441f64166"},{"commit":{"message":"WIP - struct misalligned access fix for specialised upcalls"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"}],"sha":"79326e2df0051d71593cc8c640cc766812c2f45f"},{"commit":{"message":"WIP - Disable stack argument passing for upcalls for now (encoding mismatch between Java and VM)"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/logging\/logTag.hpp"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/BufferLayout.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"}],"sha":"fb486fd583ee76350ef84dfd684e9436c07cc58d"},{"commit":{"message":"WIP - Upcall intrinsics"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/foreign_globals_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/javaFrameAnchor_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86_64.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreign_globals.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreign_globals.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalNativeInvoker.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp"},{"filename":"src\/hotspot\/share\/prims\/upcallStubs.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.hpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.inline.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"73f43adc84cd1d4bf1440f45bf1ac3387cca22a6"},{"commit":{"message":"Add upcall MH spec"},"files":[{"filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"}],"sha":"bafcc194a9ad9035a5fb6b21f800122fa2329970"}]