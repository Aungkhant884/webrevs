{"files":[{"patch":"@@ -10,0 +10,1 @@\n+<<<<<<< HEAD\n@@ -13,0 +14,18 @@\n+=======\n+See <https:\/\/openjdk.org\/> for more information about\n+the OpenJDK Community and the JDK.\n+\n+---\n+Foreign Function & Memory API\n+\n+This repository contains changes which aim at improving the interoperability between the Java programming language and native libraries, which is one of the main goals of [Project Panama](https:\/\/openjdk.java.net\/projects\/panama\/). This is done by introducing a new Java API, the Foreign Function & Memory API, which can be used to:\n+\n+* interact with different kinds of memory resources, including so-called off-heap or native memory, as shown [here](doc\/panama_memaccess.md);\n+* find native functions in a .dll\/.so\/.dylib and invoke them using method handles, as shown [here](doc\/panama_ffi.md).\n+\n+This API has been delivered, as incubating\/preview APIs, in official JDK releases, see [JEP 412](https:\/\/openjdk.java.net\/jeps\/412), [JEP 419](https:\/\/openjdk.java.net\/jeps\/419) and [JEP 424](https:\/\/openjdk.java.net\/jeps\/424) for more details.\n+\n+The Foreign Function & Memory API is best used in combination with a tool called `jextract`, which can be used to generate Java bindings to access functions and\/or structs in a native library described by a given header file. The tool is available in a standalone [repository](https:\/\/github.com\/openjdk\/jextract) which contains several [examples](https:\/\/github.com\/openjdk\/jextract\/tree\/master\/samples) which should help you getting started.\n+\n+Early acccess (EA) binary snapshots of this repository can be found at: http:\/\/jdk.java.net\/panama\/\n+>>>>>>> 7d7d242557f493ed8643f075481329cc05d56f6c\n","filename":"README.md","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"}]}