{"files":[{"patch":"@@ -35,1 +35,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -244,8 +243,16 @@\n-            \/\/ Switching on the charset names rather than specific instances of\n-            \/\/ `Charset` avoids loading the class `StandardCharsets`\n-            return switch (charset.name()) {\n-                case \"UTF-8\", \"ISO8859_1\", \"US-ASCII\" -> CharsetKind.SINGLE_BYTE;\n-                case \"UTF-16LE\", \"UTF-16BE\", \"UTF-16\" -> CharsetKind.DOUBLE_BYTE;\n-                case \"UTF-32LE\", \"UTF-32BE\", \"UTF-32\" -> CharsetKind.QUAD_BYTE;\n-                default -> throw new UnsupportedOperationException(\"Unsupported charset: \" + charset);\n-            };\n+            \/\/ Comparing the charset to specific internal implementations avoids loading the class `StandardCharsets`\n+            if        (charset == sun.nio.cs.UTF_8.INSTANCE ||\n+                       charset == sun.nio.cs.ISO_8859_1.INSTANCE ||\n+                       charset == sun.nio.cs.US_ASCII.INSTANCE) {\n+                return SINGLE_BYTE;\n+            } else if (charset instanceof sun.nio.cs.UTF_16LE ||\n+                       charset instanceof sun.nio.cs.UTF_16BE ||\n+                       charset instanceof sun.nio.cs.UTF_16) {\n+                return DOUBLE_BYTE;\n+            } else if (charset instanceof sun.nio.cs.UTF_32LE ||\n+                       charset instanceof sun.nio.cs.UTF_32BE ||\n+                       charset instanceof sun.nio.cs.UTF_32) {\n+                return QUAD_BYTE;\n+            } else {\n+                throw new UnsupportedOperationException(\"Unsupported charset: \" + charset);\n+            }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/StringSupport.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}