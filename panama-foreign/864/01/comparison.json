{"files":[{"patch":"@@ -1079,1 +1079,1 @@\n-        return getString(offset, StandardCharsets.UTF_8);\n+        return getString(offset, sun.nio.cs.UTF_8.INSTANCE);\n@@ -1135,1 +1135,1 @@\n-        setString(offset, str, StandardCharsets.UTF_8);\n+        setString(offset, str, sun.nio.cs.UTF_8.INSTANCE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-        return allocateFrom(str, StandardCharsets.UTF_8);\n+        return allocateFrom(str, sun.nio.cs.UTF_8.INSTANCE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -244,6 +243,13 @@\n-            if (charset == StandardCharsets.UTF_8 || charset == StandardCharsets.ISO_8859_1 || charset == StandardCharsets.US_ASCII) {\n-                return CharsetKind.SINGLE_BYTE;\n-            } else if (charset == StandardCharsets.UTF_16LE || charset == StandardCharsets.UTF_16BE || charset == StandardCharsets.UTF_16) {\n-                return CharsetKind.DOUBLE_BYTE;\n-            } else if (charset == StandardCharsets.UTF_32LE || charset == StandardCharsets.UTF_32BE || charset == StandardCharsets.UTF_32) {\n-                return CharsetKind.QUAD_BYTE;\n+            \/\/ Comparing the charset to specific internal implementations avoids loading the class `StandardCharsets`\n+            if        (charset == sun.nio.cs.UTF_8.INSTANCE ||\n+                       charset == sun.nio.cs.ISO_8859_1.INSTANCE ||\n+                       charset == sun.nio.cs.US_ASCII.INSTANCE) {\n+                return SINGLE_BYTE;\n+            } else if (charset instanceof sun.nio.cs.UTF_16LE ||\n+                       charset instanceof sun.nio.cs.UTF_16BE ||\n+                       charset instanceof sun.nio.cs.UTF_16) {\n+                return DOUBLE_BYTE;\n+            } else if (charset instanceof sun.nio.cs.UTF_32LE ||\n+                       charset instanceof sun.nio.cs.UTF_32BE ||\n+                       charset instanceof sun.nio.cs.UTF_32) {\n+                return QUAD_BYTE;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/StringSupport.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"}]}