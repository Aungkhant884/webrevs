{"files":[{"patch":"@@ -626,1 +626,1 @@\n-     * @param byteLayout the source element layout.\n+     * @param elementLayout the source element elementLayout.\n@@ -635,1 +635,1 @@\n-    byte[] toArray(ValueLayout.OfByte byteLayout);\n+    byte[] toArray(ValueLayout.OfByte elementLayout);\n@@ -639,1 +639,1 @@\n-     * @param shortLayout the source element layout. If the byte order associated with the layout is\n+     * @param elementLayout the source element elementLayout. If the byte order associated with the elementLayout is\n@@ -649,1 +649,1 @@\n-    short[] toArray(ValueLayout.OfShort shortLayout);\n+    short[] toArray(ValueLayout.OfShort elementLayout);\n@@ -653,1 +653,1 @@\n-     * @param charLayout the source element layout. If the byte order associated with the layout is\n+     * @param elementLayout the source element elementLayout. If the byte order associated with the elementLayout is\n@@ -663,1 +663,1 @@\n-    char[] toArray(ValueLayout.OfChar charLayout);\n+    char[] toArray(ValueLayout.OfChar elementLayout);\n@@ -667,1 +667,1 @@\n-     * @param intLayout the source element layout. If the byte order associated with the layout is\n+     * @param elementLayout the source element elementLayout. If the byte order associated with the elementLayout is\n@@ -677,1 +677,1 @@\n-    int[] toArray(ValueLayout.OfInt intLayout);\n+    int[] toArray(ValueLayout.OfInt elementLayout);\n@@ -681,1 +681,1 @@\n-     * @param floatLayout the source element layout. If the byte order associated with the layout is\n+     * @param elementLayout the source element elementLayout. If the byte order associated with the elementLayout is\n@@ -691,1 +691,1 @@\n-    float[] toArray(ValueLayout.OfFloat floatLayout);\n+    float[] toArray(ValueLayout.OfFloat elementLayout);\n@@ -695,1 +695,1 @@\n-     * @param longLayout the source element layout. If the byte order associated with the layout is\n+     * @param elementLayout the source element elementLayout. If the byte order associated with the elementLayout is\n@@ -705,1 +705,1 @@\n-    long[] toArray(ValueLayout.OfLong longLayout);\n+    long[] toArray(ValueLayout.OfLong elementLayout);\n@@ -709,1 +709,1 @@\n-     * @param doubleLayout the source element layout. If the byte order associated with the layout is\n+     * @param elementLayout the source element elementLayout. If the byte order associated with the elementLayout is\n@@ -719,1 +719,1 @@\n-    double[] toArray(ValueLayout.OfDouble doubleLayout);\n+    double[] toArray(ValueLayout.OfDouble elementLayout);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -262,2 +262,2 @@\n-    public final byte[] toArray(ValueLayout.OfByte byteLayout) {\n-        return toArray(byte[].class, byteLayout, byte[]::new, MemorySegment::ofArray);\n+    public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n+        return toArray(byte[].class, elementLayout, byte[]::new, MemorySegment::ofArray);\n@@ -267,2 +267,2 @@\n-    public final short[] toArray(ValueLayout.OfShort shortLayout) {\n-        return toArray(short[].class, shortLayout, short[]::new, MemorySegment::ofArray);\n+    public final short[] toArray(ValueLayout.OfShort elementLayout) {\n+        return toArray(short[].class, elementLayout, short[]::new, MemorySegment::ofArray);\n@@ -272,2 +272,2 @@\n-    public final char[] toArray(ValueLayout.OfChar charLayout) {\n-        return toArray(char[].class, charLayout, char[]::new, MemorySegment::ofArray);\n+    public final char[] toArray(ValueLayout.OfChar elementLayout) {\n+        return toArray(char[].class, elementLayout, char[]::new, MemorySegment::ofArray);\n@@ -277,2 +277,2 @@\n-    public final int[] toArray(ValueLayout.OfInt intLayout) {\n-        return toArray(int[].class, intLayout, int[]::new, MemorySegment::ofArray);\n+    public final int[] toArray(ValueLayout.OfInt elementLayout) {\n+        return toArray(int[].class, elementLayout, int[]::new, MemorySegment::ofArray);\n@@ -282,2 +282,2 @@\n-    public final float[] toArray(ValueLayout.OfFloat floatLayout) {\n-        return toArray(float[].class, floatLayout, float[]::new, MemorySegment::ofArray);\n+    public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n+        return toArray(float[].class, elementLayout, float[]::new, MemorySegment::ofArray);\n@@ -287,2 +287,2 @@\n-    public final long[] toArray(ValueLayout.OfLong longLayout) {\n-        return toArray(long[].class, longLayout, long[]::new, MemorySegment::ofArray);\n+    public final long[] toArray(ValueLayout.OfLong elementLayout) {\n+        return toArray(long[].class, elementLayout, long[]::new, MemorySegment::ofArray);\n@@ -292,2 +292,2 @@\n-    public final double[] toArray(ValueLayout.OfDouble doubleLayout) {\n-        return toArray(double[].class, doubleLayout, double[]::new, MemorySegment::ofArray);\n+    public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n+        return toArray(double[].class, elementLayout, double[]::new, MemorySegment::ofArray);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}