{"files":[{"patch":"@@ -117,0 +117,1 @@\n+     * @throws NullPointerException if any of the argument layouts, or the return layout is null\n@@ -119,0 +120,2 @@\n+        Objects.requireNonNull(resLayout);\n+        Arrays.stream(argLayouts).forEach(Objects::requireNonNull);\n@@ -126,0 +129,1 @@\n+     * @throws NullPointerException if any of the argument layouts is null\n@@ -128,0 +132,1 @@\n+        Arrays.stream(argLayouts).forEach(Objects::requireNonNull);\n@@ -136,0 +141,1 @@\n+     * @throws NullPointerException if any of the new argument layouts is null\n@@ -138,0 +144,1 @@\n+        Arrays.stream(addedLayouts).forEach(Objects::requireNonNull);\n@@ -147,0 +154,1 @@\n+     * @throws NullPointerException if the new return layout is null\n@@ -149,0 +157,1 @@\n+        Objects.requireNonNull(newReturn);\n@@ -152,0 +161,8 @@\n+    \/**\n+     * Create a new function descriptor with the return layout dropped.\n+     * @return the new function descriptor\n+     *\/\n+    public FunctionDescriptor dropReturnLayout() {\n+        return new FunctionDescriptor(null, attributes, argLayouts);\n+    }\n+\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/FunctionDescriptor.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run testng TestFunctionDescriptor\n+ *\/\n+\n+import jdk.incubator.foreign.FunctionDescriptor;\n+import org.testng.annotations.Test;\n+\n+import static jdk.incubator.foreign.CLinker.C_DOUBLE;\n+import static jdk.incubator.foreign.CLinker.C_INT;\n+import static jdk.incubator.foreign.CLinker.C_LONGLONG;\n+\n+public class TestFunctionDescriptor {\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testNullArgumentLayout() {\n+        FunctionDescriptor.ofVoid(C_INT, null, C_LONGLONG);\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testNullReturnLayout() {\n+        FunctionDescriptor.of(null, C_INT, C_LONGLONG);\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testNullArgumentLayoutsAppend() {\n+        FunctionDescriptor fd = FunctionDescriptor.ofVoid(C_INT, C_LONGLONG);\n+        fd.appendArgumentLayouts(C_DOUBLE, null); \/\/ should throw\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testNullReturnLayoutChange() {\n+        FunctionDescriptor fd = FunctionDescriptor.ofVoid(C_INT, C_LONGLONG);\n+        fd.changeReturnLayout(null); \/\/ should throw\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}