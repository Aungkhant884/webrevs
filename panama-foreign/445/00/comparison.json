{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import jdk.internal.clang.libclang.Index_h;\n@@ -91,0 +92,1 @@\n+                startBitfield();\n@@ -100,0 +102,1 @@\n+    abstract void startBitfield();\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/RecordLayoutComputer.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,0 +61,12 @@\n+    @Override\n+    void startBitfield() {\n+        \/*\n+         * In a struct, a bitfield field is seen after a non-bitfield.\n+         * Initialize bitfieldLayouts list to collect this and subsequent\n+         * bitfield layouts.\n+         *\/\n+        if (bitfieldLayouts == null) {\n+            bitfieldLayouts = new ArrayList<>();\n+        }\n+    }\n+\n@@ -72,8 +84,1 @@\n-            \/*\n-             * In a struct, a bitfield field is seen after a non-bitfield.\n-             * Initialize bitfieldLayouts list to collect this and subsequent\n-             * bitfield layouts.\n-             *\/\n-             if (bitfieldLayouts == null) {\n-                 bitfieldLayouts = new ArrayList<>();\n-             }\n+            startBitfield();\n@@ -91,1 +96,1 @@\n-             handleBitfields();\n+            handleBitfields();\n@@ -140,0 +145,7 @@\n+            MemoryLayout padding = null;\n+            if (l.isPadding() && (offset + l.bitSize() > storageSize)) {\n+                \/\/ split padding\n+                long delta = storageSize - offset;\n+                padding = MemoryLayout.ofPaddingBits(l.bitSize() - delta);\n+                l = MemoryLayout.ofPaddingBits(delta);\n+            }\n@@ -153,0 +165,4 @@\n+            if (padding != null) {\n+                newFields.add(padding);\n+                offset += padding.bitSize();\n+            }\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/StructLayoutComputer.java","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -62,0 +62,5 @@\n+    void startBitfield() {\n+        \/\/ do nothing\n+    }\n+\n+    @Override\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/UnionLayoutComputer.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    public void testPointerFields() {\n+    public void test() {\n","filename":"test\/jdk\/tools\/jextract\/Test8260705.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+import jdk.incubator.foreign.MemoryAddress;\n+import jdk.incubator.foreign.MemorySegment;\n+import org.testng.annotations.Test;\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib\n+ * @modules jdk.incubator.jextract\n+ * @build JextractToolRunner\n+ * @bug 8260717\n+ * @summary jextract crashes with 'Crossing storage unit boundaries' for libcoap's block.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8260717\n+ *\/\n+public class Test8260717 extends JextractToolRunner {\n+    @Test\n+    public void test() {\n+        Path outputPath = getOutputFilePath(\"output\");\n+        Path headerFile = getInputFilePath(\"test8260717.h\");\n+        run(\"-d\", outputPath.toString(), headerFile.toString()).checkSuccess();\n+        try(Loader loader = classLoader(outputPath)) {\n+            Class<?> FooClass = loader.loadClass(\"test8260717_h$foo_t\");\n+            checkMethod(FooClass, \"s$get\", short.class, MemorySegment.class);\n+            checkMethod(FooClass, \"s$get\", short.class, MemorySegment.class, long.class);\n+            checkMethod(FooClass, \"s$set\", void.class, MemorySegment.class, short.class);\n+            checkMethod(FooClass, \"s$set\", void.class, MemorySegment.class, long.class, short.class);\n+\n+            checkMethod(FooClass, \"ptr$get\", MemoryAddress.class, MemorySegment.class);\n+            checkMethod(FooClass, \"ptr$get\", MemoryAddress.class, MemorySegment.class, long.class);\n+            checkMethod(FooClass, \"ptr$set\", void.class, MemorySegment.class, MemoryAddress.class);\n+            checkMethod(FooClass, \"ptr$set\", void.class, MemorySegment.class, long.class, MemoryAddress.class);\n+\n+        } finally {\n+            deleteDir(outputPath);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/jextract\/Test8260717.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+import org.testng.annotations.Test;\n+import jdk.incubator.foreign.MemorySegment;\n+import static org.testng.Assert.assertNotNull;\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib\n+ * @modules jdk.incubator.jextract\n+ * @build JextractToolRunner\n+ * @bug 8260929\n+ * @summary jextract crashes with libdnet's rabdef.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8260929\n+ *\/\n+public class Test8260929 extends JextractToolRunner {\n+    @Test\n+    public void test() {\n+        Path outputPath = getOutputFilePath(\"output\");\n+        Path headerFile = getInputFilePath(\"test8260929.h\");\n+        run(\"-d\", outputPath.toString(), headerFile.toString()).checkSuccess();\n+        try(Loader loader = classLoader(outputPath)) {\n+            assertNotNull(loader.loadClass(\"test8260929_h$rab\"));\n+            Class<?> rab2Class = loader.loadClass(\"test8260929_h$rab2\");\n+            assertNotNull(rab2Class);\n+\n+            checkMethod(rab2Class, \"y$get\", int.class, MemorySegment.class);\n+            checkMethod(rab2Class, \"y$get\", int.class, MemorySegment.class, long.class);\n+            checkMethod(rab2Class, \"y$set\", void.class, MemorySegment.class, int.class);\n+            checkMethod(rab2Class, \"y$set\", void.class, MemorySegment.class, long.class, int.class);\n+\n+            checkMethod(rab2Class, \"x$get\", short.class, MemorySegment.class);\n+            checkMethod(rab2Class, \"x$get\", short.class, MemorySegment.class, long.class);\n+            checkMethod(rab2Class, \"x$set\", void.class, MemorySegment.class, short.class);\n+            checkMethod(rab2Class, \"x$set\", void.class, MemorySegment.class, long.class, short.class);\n+        } finally {\n+            deleteDir(outputPath);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/jextract\/Test8260929.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+typedef struct {\n+  short s;\n+  int i1:1;\n+  int i2:1;\n+  void* ptr;\n+} foo_t;\n","filename":"test\/jdk\/tools\/jextract\/test8260717.h","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+struct {\n+     unsigned : 6;\n+     unsigned r1 : 8;\n+     unsigned r2 : 1;\n+     unsigned r3 : 1;\n+} rab;\n+\n+struct {\n+   int y;\n+   short x;\n+   int r1 : 23;\n+   int r2 : 5;\n+} rab2;\n","filename":"test\/jdk\/tools\/jextract\/test8260929.h","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"}]}