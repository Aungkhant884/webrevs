{"files":[{"patch":"@@ -28,5 +28,1 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Objects;\n-import java.util.Optional;\n+import java.util.*;\n@@ -83,1 +79,1 @@\n-        assertVarargsNonNull(argLayouts);\n+        \/\/ Null checks are implicit in List.of(argLayouts)\n@@ -93,1 +89,1 @@\n-        assertVarargsNonNull(argLayouts);\n+        \/\/ Null checks are implicit in List.of(argLayouts)\n@@ -107,1 +103,1 @@\n-        assertVarargsNonNull(variadicLayouts);\n+        \/\/ Null checks are implicit in the constructor of VariadicFunction\n@@ -213,0 +209,7 @@\n+        \/**\n+         * Constructor.\n+         *\n+         * @param descriptor the original functional descriptor\n+         * @param argLayouts the memory layouts to apply\n+         * @throws NullPointerException if any of the provided parameters or array elements are {@code null}\n+         *\/\n@@ -215,1 +218,1 @@\n-                    Stream.concat(descriptor.argumentLayouts().stream(), Stream.of(argLayouts)).toList());\n+                    Stream.concat(descriptor.argumentLayouts().stream(), Arrays.stream(argLayouts).map(Objects::requireNonNull)).toList());\n@@ -244,7 +247,0 @@\n-\n-    private static void assertVarargsNonNull(Object[] args) {\n-        Objects.requireNonNull(args);\n-        for (Object arg : args) {\n-            Objects.requireNonNull(arg);\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"}]}