{"files":[{"patch":"@@ -116,1 +116,3 @@\n-long len = strlen.invokeExact(CLinker.toCString(\"Hello\").address()) \/\/ 5\n+try (var cString = CLinker.toCString(\"Hello\")) {\n+    long len = strlen.invokeExact(cString.address()) \/\/ 5\n+}\n@@ -175,1 +177,1 @@\n- * The {@link jdk.incubator.foreign.CLinker} class also allows to turn an existing method handles (which might point\n+ * The {@link jdk.incubator.foreign.CLinker} class also allows to turn an existing method handle (which might point\n@@ -223,1 +225,1 @@\n- * to never pass arguments that might causes incorrect binding of foreign data and\/or functions to a Java API.\n+ * to never pass arguments that might cause incorrect binding of foreign data and\/or functions to a Java API.\n@@ -225,1 +227,1 @@\n- * Access to restricted method is <em>disabled<\/em> by default; to enable restricted methods, the JDK property\n+ * Access to restricted methods is <em>disabled<\/em> by default; to enable restricted methods, the JDK property\n@@ -231,1 +233,1 @@\n- * <li>{@code debug}: like permit, but also dumps the stack corresponding to any given restricted.<\/li>\n+ * <li>{@code debug}: like permit, but also dumps the stack corresponding to any given restricted call.<\/li>\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}