[{"commit":{"message":"Fix typo"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"}],"sha":"9bb8c1a8b6820d6dcae4417edb096c688c1f348d"},{"commit":{"message":"Eagerly check whether upcall target throws any exceptions.\n\nAdapt the existing exception check done by MemoryHandles to be more lenient towards bound method handles which might or might not throw an exception, and re-use that check."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryHandles.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/TestAdaptVarHandles.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"}],"sha":"2a602b0a31429e60336dba2947b86f46868008e8"},{"commit":{"message":"- remove exit code constant\n- add security manager into test\n- use privilegedGetProperty instead of System.getProperty in CABI"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/System.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/CABI.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"}],"sha":"a7e73a9b018abcbe2f3fc8d738057763f01c74ae"},{"commit":{"message":"Address review comments:\n- tweak documentation\n- remove system property\n- simplify test & check stderr for stack trace message"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"}],"sha":"668e15df97a7199891d77d6bd818c0f817c3b28b"},{"commit":{"message":"Use priviledgedGetProperty instead of Integer.getInteger"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"}],"sha":"b25b8a989681d2c18f55daae41eef733ec01790f"},{"commit":{"message":"Fix test and add documentation + ERR_UNCAUGHT_EXCEPTION"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"}],"sha":"aeb4b08535d322b1a9b13677e23789b12b5c2d94"},{"commit":{"message":"Add tests"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestUpcall.java"},{"filename":"test\/jdk\/java\/foreign\/TestUpcallException.java"},{"filename":"test\/jdk\/java\/foreign\/ThrowingUpcall.java"}],"sha":"5595a98bb4fa780d7abd347771cb50f02a4e4210"},{"commit":{"message":"Handle exception uniformly across upcall modes"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"460e66b3949b5c4ab4a06870258aaa7e8ed42fe7"}]