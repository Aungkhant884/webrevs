{"files":[{"patch":"@@ -161,1 +161,2 @@\n-            return MemorySegment.ofNativeRestricted(p, Index_h.CXToken.$LAYOUT().byteSize(), null, null, null);\n+            return p.asSegmentRestricted(Index_h.CXToken.$LAYOUT().byteSize())\n+                    .withOwnerThread(null);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/TranslationUnit.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -91,3 +91,17 @@\n-            nonCloseableNonTransferableSegment(MemorySegment.ofNativeRestricted(\n-                 s.address(), layout.byteSize(), null, null, s\n-            ))).orElse(null);\n+            nonCloseableNonTransferableSegment(s.address().asSegmentRestricted(layout.byteSize())\n+                    .withOwnerThread(null)\n+                    .withCleanupAction(new SymbolHolder(s))\n+            )).orElse(null);\n+    }\n+\n+    static class SymbolHolder implements Runnable {\n+        LibraryLookup.Symbol symbol;\n+\n+        SymbolHolder(LibraryLookup.Symbol symbol) {\n+            this.symbol = symbol;\n+        }\n+\n+        @Override\n+        public void run() {\n+            \/\/ do nothing\n+        }\n@@ -126,2 +140,1 @@\n-        return MemorySegment.ofNativeRestricted(addr, numElements * layout.byteSize(),\n-               Thread.currentThread(), null, null);\n+        return nonCloseableNonTransferableSegment(addr.asSegmentRestricted(numElements * layout.byteSize()));\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/libclang\/RuntimeHelper.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -63,4 +63,18 @@\n-        return lookup(LIBRARIES, name).map(s ->\n-            nonCloseableNonTransferableSegment(MemorySegment.ofNativeRestricted(\n-                 s.address(), layout.byteSize(), null, null, s\n-            ))).orElse(null);\n+            return lookup(LIBRARIES, name).map(s ->\n+                nonCloseableNonTransferableSegment(s.address().asSegmentRestricted(layout.byteSize())\n+                        .withOwnerThread(null)\n+                        .withCleanupAction(new SymbolHolder(s))\n+                )).orElse(null);\n+    }\n+\n+    static class SymbolHolder implements Runnable {\n+        LibraryLookup.Symbol symbol;\n+\n+        SymbolHolder(LibraryLookup.Symbol symbol) {\n+            this.symbol = symbol;\n+        }\n+\n+        @Override\n+        public void run() {\n+            \/\/ do nothing\n+        }\n@@ -103,2 +117,1 @@\n-        return nonCloseableSegment(MemorySegment.ofNativeRestricted(addr, numElements * layout.byteSize(),\n-               Thread.currentThread(), null, null));\n+        return nonCloseableSegment(addr.asSegmentRestricted(numElements * layout.byteSize()));\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"}]}