[{"commit":{"message":"Split foreign vector load and store by null or not null base\n\nSplit store \/ load operation by if checking if base is null\nor not null.\n\nWhen this happens base in Unsafe is not perceived with mixed\naccess by VM, and VM does not insert barriers.\n\nTest results\n\nAfter\n```\nBenchmark                                    (size)  Mode  Cnt    Score     Error  Units\nMemorySegmentVectorAccess.arrayCopy            1024  avgt   10    7.437 ±   0.195  ns\/op\nMemorySegmentVectorAccess.directSegments       1024  avgt   10   15.593 ±   0.371  ns\/op\nMemorySegmentVectorAccess.heapSegments         1024  avgt   10   16.997 ±   0.118  ns\/op\nMemorySegmentVectorAccess.pollutedSegments2    1024  avgt   10   58.673 ± 105.783  ns\/op\nMemorySegmentVectorAccess.pollutedSegments3    1024  avgt   10   67.216 ±  16.157  ns\/op\nMemorySegmentVectorAccess.pollutedSegments4    1024  avgt   10  122.567 ± 263.950  ns\/op\nMemorySegmentVectorAccess.pollutedSegments5    1024  avgt   10  114.725 ± 209.183  ns\/op\n```\n\nBefore\n```\nBenchmark                                    (size)  Mode  Cnt    Score   Error  Units\nMemorySegmentVectorAccess.arrayCopy            1024  avgt   10    8.547 ± 0.115  ns\/op\nMemorySegmentVectorAccess.directSegments       1024  avgt   10   15.536 ± 0.082  ns\/op\nMemorySegmentVectorAccess.heapSegments         1024  avgt   10   15.818 ± 0.101  ns\/op\nMemorySegmentVectorAccess.pollutedSegments2    1024  avgt   10  146.380 ± 1.127  ns\/op\nMemorySegmentVectorAccess.pollutedSegments3    1024  avgt   10  290.784 ± 7.274  ns\/op\nMemorySegmentVectorAccess.pollutedSegments4    1024  avgt   10  297.187 ± 5.096  ns\/op\nMemorySegmentVectorAccess.pollutedSegments5    1024  avgt   10  310.166 ± 9.310  ns\/op\n```\n\nAdditonally with profiling `load` and `store` method arguments as\ndescribed in [1]\n```\nBenchmark                                    (size)  Mode  Cnt    Score   Error  Units\nMemorySegmentVectorAccess.arrayCopy            1024  avgt   10    7.480 ± 0.169  ns\/op\nMemorySegmentVectorAccess.directSegments       1024  avgt   10   15.497 ± 0.062  ns\/op\nMemorySegmentVectorAccess.heapSegments         1024  avgt   10   16.829 ± 0.132  ns\/op\nMemorySegmentVectorAccess.pollutedSegments2    1024  avgt   10  145.436 ± 1.081  ns\/op\nMemorySegmentVectorAccess.pollutedSegments3    1024  avgt   10  291.081 ± 2.297  ns\/op\nMemorySegmentVectorAccess.pollutedSegments4    1024  avgt   10  305.388 ± 7.518  ns\/op\nMemorySegmentVectorAccess.pollutedSegments5    1024  avgt   10  303.931 ± 3.412  ns\/op\n```\n\n[1] https:\/\/github.com\/openjdk\/panama-foreign\/pull\/700"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template"}],"sha":"a6b2e87936fde7b9d51a947b6e09842549bea652"}]