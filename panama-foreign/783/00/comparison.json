{"files":[{"patch":"@@ -1116,1 +1116,1 @@\n-    MemorySegment NULL = NativeMemorySegmentImpl.makeNativeSegmentUnchecked(0L, 0);\n+    MemorySegment NULL = new NativeMemorySegmentImpl();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        this.min = (Unsafe.ADDRESS_SIZE == 4)\n+        this.min = (UNSAFE.addressSize() == 4)\n@@ -64,0 +64,11 @@\n+    \/**\n+     * This constructor should only be used when initializing {@link MemorySegment#NULL}. Note: because of the memory\n+     * segment class hierarchy, it is possible to end up in a situation where this constructor is called\n+     * when the static fields in this class are not yet initialized.\n+     *\/\n+    @ForceInline\n+    public NativeMemorySegmentImpl() {\n+        super(0L, false, MemorySessionImpl.GLOBAL);\n+        this.min = 0L;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/NativeMemorySegmentImpl.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}