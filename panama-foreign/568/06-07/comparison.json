{"files":[{"patch":"@@ -49,3 +49,2 @@\n- * Multiple values can be read and written in bulk from and to Java arrays, using accessors like {@link #writeInts(int[], int, MemorySegment, long, int)},\n- * and {@link #readInts(MemorySegment, long, int[], int, int)}. These accessors all accept the following parameters\n- * (source parameters are laid out before destination parameters, similarly to {@link System#arraycopy(Object, int, Object, int, int)}):\n+ * Multiple values can be read and written in bulk from and to Java arrays, using accessors like {@link #writeInts(MemorySegment, long, int[], int, int)},\n+ * and {@link #readInts(MemorySegment, long, int[], int, int)}. These accessors all accept the following parameters:\n@@ -118,1 +117,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -131,1 +130,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -144,1 +143,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -157,1 +156,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -174,1 +173,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -190,1 +189,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -206,1 +205,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -222,1 +221,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -238,1 +237,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -254,1 +253,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -270,1 +269,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -286,1 +285,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -302,1 +301,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -318,1 +317,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -334,1 +333,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -350,1 +349,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -367,1 +366,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -385,1 +384,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -404,1 +403,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -424,1 +423,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -444,1 +443,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -464,1 +463,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -484,1 +483,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -504,1 +503,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -524,1 +523,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -544,1 +543,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -564,1 +563,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -584,1 +583,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -604,1 +603,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be read.\n@@ -624,1 +623,1 @@\n-     * @param segment the segment to be dereferenced.\n+     * @param segment the segment to be written.\n@@ -645,2 +644,0 @@\n-     * @param srcArray the source byte array.\n-     * @param srcIndex the starting index of the source byte array.\n@@ -649,0 +646,2 @@\n+     * @param srcArray the source byte array.\n+     * @param srcIndex the starting index of the source byte array.\n@@ -653,1 +652,1 @@\n-            byte[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n+            MemorySegment dstSegment, long dstOffset, byte[] srcArray, int srcIndex, int elementCount) {\n@@ -669,2 +668,1 @@\n-            MemorySegment srcSegment, long srcOffset,\n-            byte[] dstArray, int dstIndex, int elementCount) {\n+            MemorySegment srcSegment, long srcOffset, byte[] dstArray, int dstIndex, int elementCount) {\n@@ -678,2 +676,0 @@\n-     * @param srcArray the source char array.\n-     * @param srcIndex the starting index of the source char array.\n@@ -682,0 +678,2 @@\n+     * @param srcArray the source char array.\n+     * @param srcIndex the starting index of the source char array.\n@@ -686,2 +684,2 @@\n-            char[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n-        writeChars(srcArray, srcIndex, dstSegment, dstOffset, elementCount, ByteOrder.nativeOrder());\n+            MemorySegment dstSegment, long dstOffset, char[] srcArray, int srcIndex, int elementCount) {\n+        writeChars(dstSegment, dstOffset, srcArray, srcIndex, elementCount, ByteOrder.nativeOrder());\n@@ -693,2 +691,0 @@\n-     * @param srcArray the source char array.\n-     * @param srcIndex the starting index of the source char array.\n@@ -697,0 +693,2 @@\n+     * @param srcArray the source char array.\n+     * @param srcIndex the starting index of the source char array.\n@@ -702,1 +700,1 @@\n-            char[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount, ByteOrder order) {\n+            MemorySegment dstSegment, long dstOffset, char[] srcArray, int srcIndex, int elementCount, ByteOrder order) {\n@@ -745,2 +743,0 @@\n-     * @param srcArray the source short array.\n-     * @param srcIndex the starting index of the source short array.\n@@ -749,0 +745,2 @@\n+     * @param srcArray the source short array.\n+     * @param srcIndex the starting index of the source short array.\n@@ -753,2 +751,2 @@\n-            short[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n-        writeShorts(srcArray, srcIndex, dstSegment, dstOffset, elementCount, ByteOrder.nativeOrder());\n+            MemorySegment dstSegment, long dstOffset, short[] srcArray, int srcIndex, int elementCount) {\n+        writeShorts(dstSegment, dstOffset, srcArray, srcIndex, elementCount, ByteOrder.nativeOrder());\n@@ -760,2 +758,0 @@\n-     * @param srcArray the source short array.\n-     * @param srcIndex the starting index of the source short array.\n@@ -764,0 +760,2 @@\n+     * @param srcArray the source short array.\n+     * @param srcIndex the starting index of the source short array.\n@@ -769,1 +767,1 @@\n-            short[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount,\n+            MemorySegment dstSegment, long dstOffset, short[] srcArray, int srcIndex, int elementCount,\n@@ -814,2 +812,0 @@\n-     * @param srcArray the source int array.\n-     * @param srcIndex the starting index of the source int array.\n@@ -818,0 +814,2 @@\n+     * @param srcArray the source int array.\n+     * @param srcIndex the starting index of the source int array.\n@@ -822,2 +820,2 @@\n-            int[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n-        writeInts(srcArray, srcIndex, dstSegment, dstOffset, elementCount, ByteOrder.nativeOrder());\n+            MemorySegment dstSegment, long dstOffset, int[] srcArray, int srcIndex, int elementCount) {\n+        writeInts(dstSegment, dstOffset, srcArray, srcIndex, elementCount, ByteOrder.nativeOrder());\n@@ -829,2 +827,0 @@\n-     * @param srcArray the source int array.\n-     * @param srcIndex the starting index of the source int array.\n@@ -833,0 +829,2 @@\n+     * @param srcArray the source int array.\n+     * @param srcIndex the starting index of the source int array.\n@@ -838,1 +836,1 @@\n-            int[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount,\n+            MemorySegment dstSegment, long dstOffset, int[] srcArray, int srcIndex, int elementCount,\n@@ -883,2 +881,0 @@\n-     * @param srcArray the source float array.\n-     * @param srcIndex the starting index of the source float array.\n@@ -887,0 +883,2 @@\n+     * @param srcArray the source float array.\n+     * @param srcIndex the starting index of the source float array.\n@@ -891,2 +889,2 @@\n-            float[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n-        writeFloats(srcArray, srcIndex, dstSegment, dstOffset, elementCount, ByteOrder.nativeOrder());\n+            MemorySegment dstSegment, long dstOffset, float[] srcArray, int srcIndex, int elementCount) {\n+        writeFloats(dstSegment, dstOffset, srcArray, srcIndex, elementCount, ByteOrder.nativeOrder());\n@@ -898,2 +896,0 @@\n-     * @param srcArray the source float array.\n-     * @param srcIndex the starting index of the source float array.\n@@ -902,0 +898,2 @@\n+     * @param srcArray the source float array.\n+     * @param srcIndex the starting index of the source float array.\n@@ -907,1 +905,1 @@\n-            float[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount,\n+            MemorySegment dstSegment, long dstOffset, float[] srcArray, int srcIndex, int elementCount,\n@@ -952,2 +950,0 @@\n-     * @param srcArray the source long array.\n-     * @param srcIndex the starting index of the source long array.\n@@ -956,0 +952,2 @@\n+     * @param srcArray the source long array.\n+     * @param srcIndex the starting index of the source long array.\n@@ -960,2 +958,2 @@\n-            long[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n-        writeLongs(srcArray, srcIndex, dstSegment, dstOffset, elementCount, ByteOrder.nativeOrder());\n+            MemorySegment dstSegment, long dstOffset, long[] srcArray, int srcIndex, int elementCount) {\n+        writeLongs(dstSegment, dstOffset, srcArray, srcIndex, elementCount, ByteOrder.nativeOrder());\n@@ -967,2 +965,0 @@\n-     * @param srcArray the source long array.\n-     * @param srcIndex the starting index of the source long array.\n@@ -971,0 +967,2 @@\n+     * @param srcArray the source long array.\n+     * @param srcIndex the starting index of the source long array.\n@@ -976,1 +974,1 @@\n-            long[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount,\n+            MemorySegment dstSegment, long dstOffset, long[] srcArray, int srcIndex, int elementCount,\n@@ -1021,2 +1019,0 @@\n-     * @param srcArray the source double array.\n-     * @param srcIndex the starting index of the source double array.\n@@ -1025,0 +1021,2 @@\n+     * @param srcArray the source double array.\n+     * @param srcIndex the starting index of the source double array.\n@@ -1029,2 +1027,2 @@\n-            double[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount) {\n-        writeDoubles(srcArray, srcIndex, dstSegment, dstOffset, elementCount, ByteOrder.nativeOrder());\n+            MemorySegment dstSegment, long dstOffset, double[] srcArray, int srcIndex, int elementCount) {\n+        writeDoubles(dstSegment, dstOffset, srcArray, srcIndex, elementCount, ByteOrder.nativeOrder());\n@@ -1036,2 +1034,0 @@\n-     * @param srcArray the source double array.\n-     * @param srcIndex the starting index of the source double array.\n@@ -1040,0 +1036,2 @@\n+     * @param srcArray the source double array.\n+     * @param srcIndex the starting index of the source double array.\n@@ -1045,1 +1043,1 @@\n-            double[] srcArray, int srcIndex, MemorySegment dstSegment, long dstOffset, int elementCount,\n+            MemorySegment dstSegment, long dstOffset, double[] srcArray, int srcIndex, int elementCount,\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAccess.java","additions":78,"deletions":80,"binary":false,"changes":158,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-                MemoryAccess.writeBytes(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen);\n+                MemoryAccess.writeBytes(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen);\n@@ -370,1 +370,1 @@\n-                MemoryAccess.writeChars(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen, bo);\n+                MemoryAccess.writeChars(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen, bo);\n@@ -397,1 +397,1 @@\n-                MemoryAccess.writeShorts(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen, bo);\n+                MemoryAccess.writeShorts(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen, bo);\n@@ -424,1 +424,1 @@\n-                MemoryAccess.writeInts(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen, bo);\n+                MemoryAccess.writeInts(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen, bo);\n@@ -451,1 +451,1 @@\n-                MemoryAccess.writeFloats(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen, bo);\n+                MemoryAccess.writeFloats(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen, bo);\n@@ -478,1 +478,1 @@\n-                MemoryAccess.writeLongs(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen, bo);\n+                MemoryAccess.writeLongs(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen, bo);\n@@ -505,1 +505,1 @@\n-                MemoryAccess.writeDoubles(srcArr, srcIndex, dstSeg, dstOffsetBytes, srcCopyLen, bo);\n+                MemoryAccess.writeDoubles(dstSeg, dstOffsetBytes, srcArr, srcIndex, srcCopyLen, bo);\n","filename":"test\/jdk\/java\/foreign\/TestMemoryCopy.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}