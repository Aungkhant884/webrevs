{"files":[{"patch":"@@ -24,0 +24,1 @@\n+import java.io.File;\n@@ -35,0 +36,4 @@\n+    private static Path getJextractSourcePath() {\n+        Path testSrc = Path.of(System.getProperty(\"test.file\"));\n+        return Path.of(testSrc.toFile().getName() + \"_sources\");\n+    }\n@@ -37,1 +42,2 @@\n-        Path sourcePath = Path.of(\"sources\");\n+        System.err.println(\"jextract --source mode\");\n+        Path sourcePath = getJextractSourcePath();\n@@ -50,0 +56,1 @@\n+        System.err.println(\"compiling jextracted sources @ \" + sourcePath.toAbsolutePath());\n","filename":"test\/jdk\/tools\/jextract\/JtregJextractSources.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,1 +29,3 @@\n- * @test\n+ * @test id=classes\n+ * @bug 8239918\n+ * @summary jextract generates uncompilable code for no argument C function\n@@ -32,0 +34,5 @@\n+ * @run driver JtregJextract -l Test8239918 -t test.jextract.test8239918 -- test8239918.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8239918Test\n+ *\/\n+\/*\n+ * @test id=sources\n@@ -34,1 +41,3 @@\n- * @run driver JtregJextract -l Test8239918 -t test.jextract.test8239918 -- test8239918.h\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l Test8239918 -t test.jextract.test8239918 -- test8239918.h\n","filename":"test\/jdk\/tools\/jextract\/test8239918\/LibTest8239918Test.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @test\n+ * @test id=classes\n@@ -43,0 +43,9 @@\n+\/*\n+ * @test id=sources\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @bug 8244412\n+ * @summary jextract should generate static utils class for primitive typedefs\n+ * @run driver JtregJextractSources -t test.jextract.test8244412 -- test8244412.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8244412Test\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8244412\/LibTest8244412Test.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @test\n+ * @test id=classes\n@@ -37,0 +37,10 @@\n+\n+\/*\n+ * @test id=sources\n+ * @bug 8244938\n+ * @summary Crash in foreign ABI CallArranger class when a test native function returns a nested struct\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l Test8244938 -t test.jextract.test8244938 -- test8244938.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8244938\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8244938\/Test8244938.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n- * @test\n+ * @test id=classes\n+ * @bug 8244959\n+ * @summary Jextract's VarargsInvoker fails to link functions when passing integer types other than long\n@@ -39,0 +41,9 @@\n+\/*\n+ * @test id=sources\n+ * @bug 8244959\n+ * @summary Jextract's VarargsInvoker fails to link functions when passing integer types other than long\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -t test.jextract.printf -l Printf -- printf.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8244959\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8244959\/Test8244959.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @test\n+ * @test id=classes\n@@ -41,0 +41,9 @@\n+\/*\n+ * @test id=sources\n+ * @bug 8245003\n+ * @summary jextract does not generate accessor for MemorySegement typed values\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l Test8245003 -t test.jextract.test8245003 -- test8245003.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8245003\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8245003\/Test8245003.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -35,1 +35,3 @@\n- * @test\n+ * @test id=classes\n+ * @bug 8246341\n+ * @summary jextract should generate Cpointer utilities class\n@@ -38,1 +40,5 @@\n- * @modules jdk.incubator.foreign\n+ * @run driver JtregJextract -l Test8246341 -t test.jextract.test8246341 -- test8246341.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8246341Test\n+ *\/\n+\/*\n+ * @test id=sources\n@@ -41,1 +47,3 @@\n- * @run driver JtregJextract -l Test8246341 -t test.jextract.test8246341 -- test8246341.h\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l Test8246341 -t test.jextract.test8246341 -- test8246341.h\n","filename":"test\/jdk\/tools\/jextract\/test8246341\/LibTest8246341Test.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -35,1 +35,3 @@\n- * @test\n+ * @test id=classes\n+ * @bug 8246400\n+ * @summary jextract should generate a utility to manage mutliple MemorySegments\n@@ -38,0 +40,5 @@\n+ * @run driver JtregJextract -l Test8246400 -t test.jextract.test8246400 -- test8246400.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8246400Test\n+ *\/\n+\/*\n+ * @test id=sources\n@@ -40,1 +47,3 @@\n- * @run driver JtregJextract -l Test8246400 -t test.jextract.test8246400 -- test8246400.h\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l Test8246400 -t test.jextract.test8246400 -- test8246400.h\n","filename":"test\/jdk\/tools\/jextract\/test8246400\/LibTest8246400Test.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @test\n+ * @test id=classes\n@@ -37,0 +37,9 @@\n+\/*\n+ * @test id=sources\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @bug 8249757\n+ * @summary jextract should expose a way to load library from a given absolute path\n+ * @run driver JtregJextractSources -libpath Test8249757 -t test.jextract.test8249757 -- test8249757.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8249757Test\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8249757\/LibTest8249757Test.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n- * @test\n+ * @test id=classes\n+ * @bug 8252016\n+ * @summary jextract should handle va_list\n@@ -39,0 +41,9 @@\n+\/*\n+ * @test id=sources\n+ * @bug 8252016\n+ * @summary jextract should handle va_list\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -t test.jextract.vsprintf -l VSPrintf -- vsprintf.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8252016\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8252016\/Test8252016.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @test\n+ * @test id=classes\n@@ -42,0 +42,9 @@\n+\/*\n+ * @test id=sources\n+ * @bug 8252121\n+ * @summary jextract generated code fails with ABI for typedefed array type parameters\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -t test.jextract.arrayparam -l Arrayparam -- arrayparam.h\n+ * @run testng\/othervm -Dforeign.restricted=permit Test8252121\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/test8252121\/Test8252121.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -30,1 +30,3 @@\n- * @test\n+ * @test id=classes\n+ * @bug 8252465\n+ * @summary jextract generates wrong layout and varhandle when different structs have same named field\n@@ -33,0 +35,5 @@\n+ * @run driver JtregJextract -t test.jextract.test8252465 -- test8252465.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibTest8252465Test\n+ *\/\n+\/*\n+ * @test id=sources\n@@ -35,1 +42,3 @@\n- * @run driver JtregJextract -t test.jextract.test8252465 -- test8252465.h\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -t test.jextract.test8252465 -- test8252465.h\n","filename":"test\/jdk\/tools\/jextract\/test8252465\/LibTest8252465Test.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @test\n+ * @test id=classes\n@@ -37,0 +37,7 @@\n+\/*\n+ * @test id=sources\n+ * @library ..\n+ * @modules jdk.incubator.jextract\n+ * @run driver JtregJextractSources -l FuncPtr -t test.jextract.fp -- funcPtr.h\n+ * @run testng\/othervm -Dforeign.restricted=permit LibFuncPtrTest\n+ *\/\n","filename":"test\/jdk\/tools\/jextract\/testFunctionPointer\/LibFuncPtrTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}