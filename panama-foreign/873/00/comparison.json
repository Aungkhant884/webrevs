{"files":[{"patch":"@@ -52,1 +52,1 @@\n- * There are two leaves in the layout hierarchy, {@linkplain ValueLayout value layouts}, which are used to represent values of given size and kind (see\n+ * There are two leaves in the layout hierarchy, {@linkplain ValueLayout value layouts}, which are used to represent values of given size and kind\n@@ -454,1 +454,1 @@\n-     *     <li>The offset of the access operation (computed as above) must fall fall inside the spatial bounds of the\n+     *     <li>The offset of the access operation (computed as above) must fall inside the spatial bounds of the\n@@ -483,1 +483,1 @@\n-     * VarHandle targetHandle = target.varHandle(P');\n+     * VarHandle targetHandle = target.varHandle(P);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1071,1 +1071,1 @@\n-     * @throws IndexOutOfBoundsException     if {@code offset} > byteSize() - (B + 1)}, where {@code B} is the size,\n+     * @throws IndexOutOfBoundsException     if {@code offset > byteSize() - (B + 1)}, where {@code B} is the size,\n@@ -1096,1 +1096,1 @@\n-     * @throws IndexOutOfBoundsException     if {@code offset} > byteSize() - (B + N)}, where:\n+     * @throws IndexOutOfBoundsException     if {@code offset > byteSize() - (B + N)}, where:\n@@ -1126,1 +1126,1 @@\n-     * @throws IndexOutOfBoundsException     if {@code offset} > byteSize() - (B + 1}, where {@code B} is the size,\n+     * @throws IndexOutOfBoundsException     if {@code offset > byteSize() - (B + 1)}, where {@code B} is the size,\n@@ -1157,1 +1157,1 @@\n-     * @throws IndexOutOfBoundsException     if {@code offset} > byteSize() - (B + N)}, where:\n+     * @throws IndexOutOfBoundsException     if {@code offset > byteSize() - (B + N)}, where:\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}