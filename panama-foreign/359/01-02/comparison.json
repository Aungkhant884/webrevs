{"files":[{"patch":"@@ -816,2 +816,2 @@\n-        protected CValueLayout(Kind kind, ByteOrder order, long bitSize, long bitAlignment,\n-                               Map<String, Constable> attributes) {\n+        public CValueLayout(Kind kind, ByteOrder order, long bitSize, long bitAlignment,\n+                            Map<String, Constable> attributes) {\n@@ -822,99 +822,0 @@\n-        \/**\n-         * Creates a new CValueLayout with the {@code CHAR} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofChar(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.CHAR, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code SHORT} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofShort(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.SHORT, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code INT} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofInt(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.INT, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code LONG} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofLong(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.LONG, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code LONGLONG} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofLongLong(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.LONGLONG, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code FLOAT} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofFloat(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.FLOAT, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code DOUBLE} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofDouble(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.DOUBLE, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code LONGDOUBLE} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofLongDouble(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.LONGDOUBLE, order, bitSize, bitSize, Map.of());\n-        }\n-\n-        \/**\n-         * Creates a new CValueLayout with the {@code POINTER} kind\n-         *\n-         * @param order the byte order of the layout\n-         * @param bitSize the size, in bits, of the layout\n-         * @return the newly created CValueLayout\n-         *\/\n-        public static CValueLayout ofPointer(ByteOrder order, long bitSize) {\n-            return new CValueLayout(Kind.POINTER, order, bitSize, bitSize, Map.of());\n-        }\n-\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/CLinker.java","additions":2,"deletions":101,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -33,0 +33,3 @@\n+import java.nio.ByteOrder;\n+import java.util.Map;\n+\n@@ -52,0 +55,43 @@\n+    private static CValueLayout ofChar(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.CHAR, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofShort(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.SHORT, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofInt(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.INT, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofLong(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.LONG, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofLongLong(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.LONGLONG, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofFloat(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.FLOAT, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofDouble(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.DOUBLE, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    private static CValueLayout ofLongDouble(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.LONGDOUBLE, order, bitSize, bitSize, Map.of());\n+    }\n+\n+    \/**\n+     * Creates a new CValueLayout with the {@code POINTER} kind\n+     *\n+     * @param order the byte order of the layout\n+     * @param bitSize the size, in bits, of the layout\n+     * @return the newly created CValueLayout\n+     *\/\n+    public static CValueLayout ofPointer(ByteOrder order, long bitSize) {\n+        return new CValueLayout(CValueLayout.Kind.POINTER, order, bitSize, bitSize, Map.of());\n+    }\n+\n@@ -63,1 +109,1 @@\n-        public static final CValueLayout C_CHAR = CValueLayout.ofChar(LITTLE_ENDIAN, 8);\n+        public static final CValueLayout C_CHAR = ofChar(LITTLE_ENDIAN, 8);\n@@ -68,1 +114,1 @@\n-        public static final CValueLayout C_SHORT = CValueLayout.ofShort(LITTLE_ENDIAN, 16);\n+        public static final CValueLayout C_SHORT = ofShort(LITTLE_ENDIAN, 16);\n@@ -73,1 +119,1 @@\n-        public static final CValueLayout C_INT = CValueLayout.ofInt(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_INT = ofInt(LITTLE_ENDIAN, 32);\n@@ -78,1 +124,1 @@\n-        public static final CValueLayout C_LONG = CValueLayout.ofLong(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_LONG = ofLong(LITTLE_ENDIAN, 64);\n@@ -83,1 +129,1 @@\n-        public static final CValueLayout C_LONGLONG = CValueLayout.ofLongLong(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_LONGLONG = ofLongLong(LITTLE_ENDIAN, 64);\n@@ -88,1 +134,1 @@\n-        public static final CValueLayout C_FLOAT = CValueLayout.ofFloat(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_FLOAT = ofFloat(LITTLE_ENDIAN, 32);\n@@ -93,1 +139,1 @@\n-        public static final CValueLayout C_DOUBLE = CValueLayout.ofDouble(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_DOUBLE = ofDouble(LITTLE_ENDIAN, 64);\n@@ -98,1 +144,1 @@\n-        public static final CValueLayout C_LONGDOUBLE = CValueLayout.ofLongDouble(LITTLE_ENDIAN, 128);\n+        public static final CValueLayout C_LONGDOUBLE = ofLongDouble(LITTLE_ENDIAN, 128);\n@@ -103,1 +149,1 @@\n-        public static final CValueLayout C_POINTER = CValueLayout.ofPointer(LITTLE_ENDIAN, ADDRESS.bitSize());\n+        public static final CValueLayout C_POINTER = ofPointer(LITTLE_ENDIAN, ADDRESS.bitSize());\n@@ -129,1 +175,1 @@\n-        public static final CValueLayout C_CHAR = CValueLayout.ofChar(LITTLE_ENDIAN, 8);\n+        public static final CValueLayout C_CHAR = ofChar(LITTLE_ENDIAN, 8);\n@@ -134,1 +180,1 @@\n-        public static final CValueLayout C_SHORT = CValueLayout.ofShort(LITTLE_ENDIAN, 16);\n+        public static final CValueLayout C_SHORT = ofShort(LITTLE_ENDIAN, 16);\n@@ -139,1 +185,1 @@\n-        public static final CValueLayout C_INT = CValueLayout.ofInt(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_INT = ofInt(LITTLE_ENDIAN, 32);\n@@ -143,1 +189,1 @@\n-        public static final CValueLayout C_LONG = CValueLayout.ofLong(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_LONG = ofLong(LITTLE_ENDIAN, 32);\n@@ -148,1 +194,1 @@\n-        public static final CValueLayout C_LONGLONG = CValueLayout.ofLongLong(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_LONGLONG = ofLongLong(LITTLE_ENDIAN, 64);\n@@ -153,1 +199,1 @@\n-        public static final CValueLayout C_FLOAT = CValueLayout.ofFloat(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_FLOAT = ofFloat(LITTLE_ENDIAN, 32);\n@@ -158,1 +204,1 @@\n-        public static final CValueLayout C_DOUBLE = CValueLayout.ofDouble(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_DOUBLE = ofDouble(LITTLE_ENDIAN, 64);\n@@ -163,1 +209,1 @@\n-        public static final CValueLayout C_LONGDOUBLE = CValueLayout.ofLongDouble(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_LONGDOUBLE = ofLongDouble(LITTLE_ENDIAN, 64);\n@@ -168,1 +214,1 @@\n-        public static final CValueLayout C_POINTER = CValueLayout.ofPointer(LITTLE_ENDIAN, ADDRESS.bitSize());\n+        public static final CValueLayout C_POINTER = ofPointer(LITTLE_ENDIAN, ADDRESS.bitSize());\n@@ -198,1 +244,1 @@\n-        public static final CValueLayout C_CHAR = CValueLayout.ofChar(LITTLE_ENDIAN, 8);\n+        public static final CValueLayout C_CHAR = ofChar(LITTLE_ENDIAN, 8);\n@@ -203,1 +249,1 @@\n-        public static final CValueLayout C_SHORT = CValueLayout.ofShort(LITTLE_ENDIAN, 16);\n+        public static final CValueLayout C_SHORT = ofShort(LITTLE_ENDIAN, 16);\n@@ -208,1 +254,1 @@\n-        public static final CValueLayout C_INT = CValueLayout.ofInt(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_INT = ofInt(LITTLE_ENDIAN, 32);\n@@ -213,1 +259,1 @@\n-        public static final CValueLayout C_LONG = CValueLayout.ofLong(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_LONG = ofLong(LITTLE_ENDIAN, 64);\n@@ -218,1 +264,1 @@\n-        public static final CValueLayout C_LONGLONG = CValueLayout.ofLongLong(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_LONGLONG = ofLongLong(LITTLE_ENDIAN, 64);\n@@ -223,1 +269,1 @@\n-        public static final CValueLayout C_FLOAT = CValueLayout.ofFloat(LITTLE_ENDIAN, 32);\n+        public static final CValueLayout C_FLOAT = ofFloat(LITTLE_ENDIAN, 32);\n@@ -228,1 +274,1 @@\n-        public static final CValueLayout C_DOUBLE = CValueLayout.ofDouble(LITTLE_ENDIAN, 64);\n+        public static final CValueLayout C_DOUBLE = ofDouble(LITTLE_ENDIAN, 64);\n@@ -233,1 +279,1 @@\n-        public static final CValueLayout C_LONGDOUBLE = CValueLayout.ofLongDouble(LITTLE_ENDIAN, 128);\n+        public static final CValueLayout C_LONGDOUBLE = ofLongDouble(LITTLE_ENDIAN, 128);\n@@ -238,1 +284,1 @@\n-        public static final CValueLayout C_POINTER = CValueLayout.ofPointer(LITTLE_ENDIAN, ADDRESS.bitSize());\n+        public static final CValueLayout C_POINTER = ofPointer(LITTLE_ENDIAN, ADDRESS.bitSize());\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/PlatformLayouts.java","additions":73,"deletions":27,"binary":false,"changes":100,"status":"modified"}]}