{"files":[{"patch":"@@ -36,0 +36,3 @@\n+import static jdk.internal.jextract.impl.MultiFileConstantHelper.CONSTANTS_PER_CLASS_CLASSES;\n+import static jdk.internal.jextract.impl.MultiFileConstantHelper.CONSTANTS_PER_CLASS_SOURCES;\n+\n@@ -51,1 +54,2 @@\n-                : ClassConstantHelper.make(packageName, simpleClassName, runtimeHelper, cString, libraryNames, baseClassName, isFinal));\n+                : ClassConstantHelper.make(packageName, simpleClassName, runtimeHelper, cString, libraryNames, baseClassName, isFinal),\n+            source ? CONSTANTS_PER_CLASS_SOURCES : CONSTANTS_PER_CLASS_CLASSES);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/ConstantHelper.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-\n-    private static final int CONSTANTS_PER_CLASS = Integer.getInteger(\"jextract.constants.per.class\", 1000);\n+    static final int CONSTANTS_PER_CLASS_SOURCES = Integer.getInteger(\"jextract.constants.per.class.source\", 1000);\n+    static final int CONSTANTS_PER_CLASS_CLASSES = Integer.getInteger(\"jextract.constants.per.class.binary\", 10000);\n@@ -47,0 +47,1 @@\n+    private final int constantsPerClass;\n@@ -54,1 +55,1 @@\n-    public MultiFileConstantHelper(String headerClassName, ConstantHelperFunc func) {\n+    public MultiFileConstantHelper(String headerClassName, ConstantHelperFunc func, int constantsPerClass) {\n@@ -57,0 +58,1 @@\n+        this.constantsPerClass = constantsPerClass;\n@@ -65,1 +67,1 @@\n-        if (constantCount > CONSTANTS_PER_CLASS) {\n+        if (constantCount > constantsPerClass) {\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/MultiFileConstantHelper.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}