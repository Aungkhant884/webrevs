{"files":[{"patch":"@@ -28,1 +28,1 @@\n-import jdk.internal.foreign.layout.AbstractStructOrUnionLayout;\n+import jdk.internal.foreign.layout.AbstractGroupLayout;\n@@ -61,1 +61,1 @@\n-        if (!(type instanceof AbstractStructOrUnionLayout<?> structOrUnionLayout))\n+        if (!(type instanceof GroupLayout groupLayout))\n@@ -64,1 +64,1 @@\n-        final long numElements = structOrUnionLayout.elementCount();\n+        final long numElements = groupLayout.elementCount();\n@@ -68,1 +68,1 @@\n-        MemoryLayout baseType = structOrUnionLayout.elementAt(0);\n+        MemoryLayout baseType = groupLayout.elementAt(0);\n@@ -77,1 +77,1 @@\n-        for (MemoryLayout elem : structOrUnionLayout) {\n+        for (MemoryLayout elem : groupLayout) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/TypeClass.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-public sealed abstract class AbstractStructOrUnionLayout<L extends AbstractStructOrUnionLayout<L> & MemoryLayout>\n+public sealed abstract class AbstractGroupLayout<L extends AbstractGroupLayout<L> & MemoryLayout>\n@@ -58,1 +58,1 @@\n-    AbstractStructOrUnionLayout(Kind kind, List<MemoryLayout> elements) {\n+    AbstractGroupLayout(Kind kind, List<MemoryLayout> elements) {\n@@ -62,1 +62,1 @@\n-    AbstractStructOrUnionLayout(Kind kind, List<MemoryLayout> elements, long bitAlignment, Optional<String> name) {\n+    AbstractGroupLayout(Kind kind, List<MemoryLayout> elements, long bitAlignment, Optional<String> name) {\n@@ -101,1 +101,1 @@\n-        return other instanceof AbstractStructOrUnionLayout<?> otherGroup &&\n+        return other instanceof AbstractGroupLayout<?> otherGroup &&\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractGroupLayout.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractStructOrUnionLayout.java","status":"renamed"},{"patch":"@@ -37,1 +37,1 @@\n-        permits AbstractStructOrUnionLayout, PaddingLayoutImpl, SequenceLayoutImpl, ValueLayouts.AbstractValueLayout {\n+        permits AbstractGroupLayout, PaddingLayoutImpl, SequenceLayoutImpl, ValueLayouts.AbstractValueLayout {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/AbstractLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Iterator;\n@@ -34,1 +33,1 @@\n-public final class StructLayoutImpl extends AbstractStructOrUnionLayout<StructLayoutImpl> implements StructLayout {\n+public final class StructLayoutImpl extends AbstractGroupLayout<StructLayoutImpl> implements StructLayout {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/StructLayoutImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public final class UnionLayoutImpl extends AbstractStructOrUnionLayout<UnionLayoutImpl> implements UnionLayout {\n+public final class UnionLayoutImpl extends AbstractGroupLayout<UnionLayoutImpl> implements UnionLayout {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/layout\/UnionLayoutImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}