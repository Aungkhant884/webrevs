{"files":[{"patch":"@@ -46,1 +46,1 @@\n- * LibraryLookup defaultLookup = LibraryLookup.defaultLookup();\n+ * LibraryLookup defaultLookup = LibraryLookup.ofDefault();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/LibraryLookup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,3 +54,3 @@\n-GroupLayout seq = MemoryLayout.ofStruct(\n-        MemoryLayout.ofPaddingBits(32),\n-        MemoryLayout.ofValueBits(32, ByteOrder.BIG_ENDIAN).withName(\"value\")\n+GroupLayout seq = MemoryLayout.structLayout(\n+        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.valueLayout(32, ByteOrder.BIG_ENDIAN).withName(\"value\")\n@@ -257,1 +257,1 @@\n-    MemorySegment segment = MemorySegment.allocateNative(2, newImplicitScope());\n+    MemorySegment segment = MemorySegment.allocateNative(2, ResourceScope.newImplicitScope());\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryHandles.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -71,5 +71,5 @@\n-SequenceLayout taggedValues = MemoryLayout.ofSequence(5,\n-    MemoryLayout.ofStruct(\n-        MemoryLayout.ofValueBits(8, ByteOrder.nativeOrder()).withName(\"kind\"),\n-        MemoryLayout.ofPaddingBits(24),\n-        MemoryLayout.ofValueBits(32, ByteOrder.nativeOrder()).withName(\"value\")\n+SequenceLayout taggedValues = MemoryLayout.sequenceLayout(5,\n+    MemoryLayout.structLayout(\n+        MemoryLayout.valueLayout(8, ByteOrder.nativeOrder()).withName(\"kind\"),\n+        MemoryLayout.paddingLayout(24),\n+        MemoryLayout.valueLayout(32, ByteOrder.nativeOrder()).withName(\"value\")\n@@ -147,1 +147,1 @@\n-MemoryLayout taggedValuesWithHole = taggedValues.map(l -> MemoryLayout.ofPadding(32),\n+MemoryLayout taggedValuesWithHole = taggedValues.map(l -> MemoryLayout.paddingLayout(32),\n@@ -153,5 +153,5 @@\n-MemoryLayout taggedValuesWithHole = MemoryLayout.ofSequence(5,\n-    MemoryLayout.ofStruct(\n-        MemoryLayout.ofValueBits(8, ByteOrder.nativeOrder()).withName(\"kind\").\n-        MemoryLayout.ofPaddingBits(32),\n-        MemoryLayout.ofPaddingBits(32)\n+MemoryLayout taggedValuesWithHole = MemoryLayout.sequenceLayout(5,\n+    MemoryLayout.structLayout(\n+        MemoryLayout.valueLayout(8, ByteOrder.nativeOrder()).withName(\"kind\"),\n+        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(32)\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-try (ResourceScope scope = ResourceScope.ofConfined()) {\n+try (ResourceScope scope = ResourceScope.newConfinedScope()) {\n@@ -130,2 +130,2 @@\n-try (ResourceScope scope = ResourceScope.ofShared()) {\n-    SequenceLayout SEQUENCE_LAYOUT = MemoryLayout.ofSequence(1024, MemoryLayouts.JAVA_INT);\n+try (ResourceScope scope = ResourceScope.newSharedScope()) {\n+    SequenceLayout SEQUENCE_LAYOUT = MemoryLayout.sequenceLayout(1024, MemoryLayouts.JAVA_INT);\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,2 +92,2 @@\n-SequenceLayout SEQUENCE_LAYOUT = MemoryLayout.ofSequence(1024, MemoryLayouts.JAVA_INT);\n-try (ResourceScope scope = ResourceScope.ofShared()) {\n+SequenceLayout SEQUENCE_LAYOUT = MemoryLayout.sequenceLayout(1024, MemoryLayouts.JAVA_INT);\n+try (ResourceScope scope = ResourceScope.newSharedScope()) {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-try (ResourceScope scope = ResourceScope.ofConfined()) {\n+try (ResourceScope scope = ResourceScope.newConfinedScope()) {\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-MemoryLayout.ofSequence(3, MemoryLayout.ofValueBits(32, ByteOrder.BIG_ENDIAN));\n+MemoryLayout.sequenceLayout(3, MemoryLayout.valueLayout(32, ByteOrder.BIG_ENDIAN));\n@@ -49,4 +49,4 @@\n-MemoryLayout.ofStruct(\n-    MemoryLayout.ofValueBits(32, ByteOrder.BIG_ENDIAN),\n-    MemoryLayout.ofValueBits(32, ByteOrder.BIG_ENDIAN),\n-    MemoryLayout.ofValueBits(32, ByteOrder.BIG_ENDIAN));\n+MemoryLayout.structLayout(\n+    MemoryLayout.valueLayout(32, ByteOrder.BIG_ENDIAN),\n+    MemoryLayout.valueLayout(32, ByteOrder.BIG_ENDIAN),\n+    MemoryLayout.valueLayout(32, ByteOrder.BIG_ENDIAN));\n@@ -125,1 +125,1 @@\n-    var seq = MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(3, MemoryLayouts.JAVA_INT));\n+    var seq = MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, MemoryLayouts.JAVA_INT));\n@@ -129,1 +129,1 @@\n-    var reshapeSeq = MemoryLayout.ofSequence(2, MemoryLayout.ofSequence(6, MemoryLayouts.JAVA_INT));\n+    var reshapeSeq = MemoryLayout.sequenceLayout(2, MemoryLayout.sequenceLayout(6, MemoryLayouts.JAVA_INT));\n@@ -201,1 +201,1 @@\n-    var seq = MemoryLayout.ofSequence(4, MemoryLayout.ofSequence(3, MemoryLayouts.JAVA_INT));\n+    var seq = MemoryLayout.sequenceLayout(4, MemoryLayout.sequenceLayout(3, MemoryLayouts.JAVA_INT));\n@@ -205,1 +205,1 @@\n-    var flattenedSeq = MemoryLayout.ofSequence(12, MemoryLayouts.JAVA_INT);\n+    var flattenedSeq = MemoryLayout.sequenceLayout(12, MemoryLayouts.JAVA_INT);\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SequenceLayout.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-MemorySegment segment = MemorySegment.allocateNative(10 * 4, newImplicitScope());\n+MemorySegment segment = MemorySegment.allocateNative(10 * 4, ResourceScope.newImplicitScope());\n@@ -50,1 +50,1 @@\n-   MemoryAccess.setIntAtIndex(segment, i);\n+   MemoryAccess.setIntAtIndex(segment, i, 42);\n@@ -75,1 +75,1 @@\n-        MemoryAccess.setIntAtIndex(segment, i);\n+        MemoryAccess.setIntAtIndex(segment, i, 42);\n@@ -109,1 +109,1 @@\n-MethodHandle strlen = CLinker.getInstance().downcallHandle(\n+      MethodHandle strlen = CLinker.getInstance().downcallHandle(\n@@ -113,1 +113,1 @@\n-);\n+      );\n@@ -115,3 +115,4 @@\n-try (var cString = CLinker.toCString(\"Hello\")) {\n-    long len = strlen.invokeExact(cString.address()) \/\/ 5\n-}\n+      try (var scope = ResourceScope.newConfinedScope()) {\n+         var cString = CLinker.toCString(\"Hello\", scope);\n+         long len = (long)strlen.invokeExact(cString.address()); \/\/ 5\n+      }\n@@ -161,0 +162,1 @@\n+ResourceScope scope = ... \/\/ initialize a resource scope object\n@@ -162,1 +164,1 @@\n-MemorySegment segment = addr.asSegment(4); \/\/ segment is 4 bytes long\n+MemorySegment segment = addr.asSegment(4, scope); \/\/ segment is 4 bytes long\n@@ -171,0 +173,1 @@\n+ResourceScope scope = ... \/\/ initialize a resource scope object\n@@ -172,1 +175,1 @@\n-int x = MemoryAccess.getIntAtOffset(MemorySegment.ofNative(), addr.toRawLongValue());\n+int x = MemoryAccess.getIntAtOffset(MemorySegment.allocateNative(scope), addr.toRawLongValue());\n@@ -184,2 +187,2 @@\n-        return MemoryAccess.getIntAtOffset(MemorySegment.ofNative(), addr1.toRawLongValue()) -\n-               MemoryAccess.getIntAtOffset(MemorySegment.ofNative(), addr2.toRawLongValue());\n+        return MemoryAccess.getIntAtOffset(MemorySegment.globalNativeSegment(), addr1.toRawLongValue()) -\n+               MemoryAccess.getIntAtOffset(MemorySegment.globalNativeSegment(), addr2.toRawLongValue());\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"}]}