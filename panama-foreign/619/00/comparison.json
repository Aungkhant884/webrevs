{"files":[{"patch":"@@ -172,1 +172,1 @@\n-            return MemorySegment.ofAddressNative(p, CXToken.$LAYOUT().byteSize(), ResourceScope.newConfinedScope());\n+            return MemorySegment.ofAddress(p, CXToken.$LAYOUT().byteSize(), ResourceScope.newConfinedScope());\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/TranslationUnit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        return SYMBOL_LOOKUP.lookup(name).map(symbol -> MemorySegment.ofAddressNative(symbol.address(), layout.byteSize(), ResourceScope.newSharedScope())).orElse(null);\n+        return SYMBOL_LOOKUP.lookup(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), ResourceScope.newSharedScope())).orElse(null);\n@@ -115,1 +115,1 @@\n-         return MemorySegment.ofAddressNative(addr, numElements * layout.byteSize(), scope);\n+         return MemorySegment.ofAddress(addr, numElements * layout.byteSize(), scope);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/libclang\/RuntimeHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        return SYMBOL_LOOKUP.lookup(name).map(symbol -> MemorySegment.ofAddressNative(symbol.address(), layout.byteSize(), ResourceScope.newSharedScope())).orElse(null);\n+        return SYMBOL_LOOKUP.lookup(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), ResourceScope.newSharedScope())).orElse(null);\n@@ -86,1 +86,1 @@\n-         return MemorySegment.ofAddressNative(addr, numElements * layout.byteSize(), scope);\n+         return MemorySegment.ofAddress(addr, numElements * layout.byteSize(), scope);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-                var addr = MemorySegment.ofAddressNative(argv, C_POINTER.byteSize() * argc, scope);\n+                var addr = MemorySegment.ofAddress(argv, C_POINTER.byteSize() * argc, scope);\n","filename":"test\/jdk\/tools\/jextract\/test8246341\/LibTest8246341Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-            var seg = MemorySegment.ofAddressNative(getFoo(), Foo.sizeof(), scope);\n+            var seg = MemorySegment.ofAddress(getFoo(), Foo.sizeof(), scope);\n","filename":"test\/jdk\/tools\/jextract\/test8257892\/LibUnsupportedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}