{"files":[{"patch":"@@ -126,1 +126,1 @@\n-            LongLong(\"long long\", CLinker.C_LONGLONG),\n+            LongLong(\"long long\", CLinker.C_LONG_LONG),\n@@ -139,4 +139,0 @@\n-            \/**\n-             * {@code long double} type.\n-             *\/\n-            LongDouble(\"long double\", CLinker.C_LONGDOUBLE),\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/incubator\/jextract\/Type.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-        C_LONGLONG.withName(\"Length\")\n+        C_LONG_LONG.withName(\"Length\")\n@@ -167,1 +167,1 @@\n-    static final MemoryLayout CXUnsavedFile$Length$LAYOUT_ = C_LONGLONG;\n+    static final MemoryLayout CXUnsavedFile$Length$LAYOUT_ = C_LONG_LONG;\n@@ -313,1 +313,1 @@\n-    static final FunctionDescriptor clang_getFileTime$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_getFileTime$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -326,1 +326,1 @@\n-        MemoryLayout.ofSequence(3, C_LONGLONG).withName(\"data\")\n+        MemoryLayout.ofSequence(3, C_LONG_LONG).withName(\"data\")\n@@ -1452,1 +1452,1 @@\n-        C_LONGLONG.withName(\"amount\")\n+        C_LONG_LONG.withName(\"amount\")\n@@ -1462,1 +1462,1 @@\n-    static final MemoryLayout CXTUResourceUsageEntry$amount$LAYOUT_ = C_LONGLONG;\n+    static final MemoryLayout CXTUResourceUsageEntry$amount$LAYOUT_ = C_LONG_LONG;\n@@ -3136,1 +3136,1 @@\n-    static final FunctionDescriptor clang_getEnumConstantDeclValue$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_getEnumConstantDeclValue$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -3152,1 +3152,1 @@\n-    static final FunctionDescriptor clang_getEnumConstantDeclUnsignedValue$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_getEnumConstantDeclUnsignedValue$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -3295,1 +3295,1 @@\n-    static final FunctionDescriptor clang_Cursor_getTemplateArgumentValue$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_Cursor_getTemplateArgumentValue$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -3312,1 +3312,1 @@\n-    static final FunctionDescriptor clang_Cursor_getTemplateArgumentUnsignedValue$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_Cursor_getTemplateArgumentUnsignedValue$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -3889,1 +3889,1 @@\n-    static final FunctionDescriptor clang_getNumElements$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_getNumElements$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -3925,1 +3925,1 @@\n-    static final FunctionDescriptor clang_getArraySize$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_getArraySize$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -4013,1 +4013,1 @@\n-    static final FunctionDescriptor clang_Type_getAlignOf$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_Type_getAlignOf$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -4049,1 +4049,1 @@\n-    static final FunctionDescriptor clang_Type_getSizeOf$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_Type_getSizeOf$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -4065,1 +4065,1 @@\n-    static final FunctionDescriptor clang_Type_getOffsetOf$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_Type_getOffsetOf$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -4102,1 +4102,1 @@\n-    static final FunctionDescriptor clang_Cursor_getOffsetOfField$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_Cursor_getOffsetOfField$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/libclang\/Index_h$constants_0.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2195,1 +2195,1 @@\n-    static final FunctionDescriptor clang_codeCompleteGetContexts$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_codeCompleteGetContexts$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -2354,1 +2354,1 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsLongLong$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_EvalResult_getAsLongLong$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n@@ -2378,1 +2378,1 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsUnsigned$FUNC_ = FunctionDescriptor.of(C_LONGLONG,\n+    static final FunctionDescriptor clang_EvalResult_getAsUnsigned$FUNC_ = FunctionDescriptor.of(C_LONG_LONG,\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/libclang\/Index_h$constants_1.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-                return C_LONGLONG;\n+                return C_LONG_LONG;\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/clang\/libclang\/RuntimeHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-            case Short, Int, Long, LongLong, Float, Double, LongDouble, Char -> true;\n+            case Short, Int, Long, LongLong, Float, Double, Char -> true;\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/HeaderFileBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,2 +88,0 @@\n-            case LongDouble:\n-                return Primitive.Kind.LongDouble.layout().orElseThrow(unsupported);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/LayoutUtils.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-            case Float, Double, LongDouble -> true;\n+            case Float, Double -> true;\n@@ -232,18 +232,0 @@\n-    private static boolean isLongDouble(MemoryLayout layout) {\n-        return CLinker.C_LONGDOUBLE.bitSize() == 128\n-            && CLinker.C_LONGDOUBLE.equals(layout);\n-    }\n-\n-    private static boolean usesLongDouble(FunctionDescriptor desc) {\n-        if (isLongDouble(desc.returnLayout().orElse(null))) {\n-            return true;\n-        }\n-\n-        for (MemoryLayout argLayout : desc.argumentLayouts()) {\n-            if (isLongDouble(argLayout)) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n@@ -263,5 +245,0 @@\n-        if (usesLongDouble(descriptor)) {\n-            warn(\"skipping \" + funcTree.name() + \" because of long double usage\");\n-            return null;\n-        }\n-\n@@ -398,3 +375,0 @@\n-        if (isLongDouble(layout)) {\n-            warn(\"skipping \" + fieldName + \" because of long double usage\");\n-        }\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/OutputFactory.java","additions":1,"deletions":27,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -459,1 +459,1 @@\n-            case LONGLONG -> \"C_LONGLONG\";\n+            case LONG_LONG -> \"C_LONG_LONG\";\n@@ -462,1 +462,0 @@\n-            case LONGDOUBLE -> \"C_LONGDOUBLE\";\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/SourceConstantHelper.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -163,2 +163,0 @@\n-            case LongDouble:\n-                return Type.primitive(Primitive.Kind.LongDouble);\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/TypeMaker.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-            case LongDouble:\n@@ -66,1 +65,1 @@\n-            case LongLong -> \"C_LONGLONG\";\n+            case LongLong -> \"C_LONG_LONG\";\n@@ -69,1 +68,0 @@\n-            case LongDouble -> \"C_LONGDOUBLE\";\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/TypeTranslator.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-                return C_LONGLONG;\n+                return C_LONG_LONG;\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-                b.vargFromLong(C_LONGLONG, -200L);\n-                b.vargFromLong(C_LONGLONG, Long.MAX_VALUE);\n+                b.vargFromLong(C_LONG_LONG, -200L);\n+                b.vargFromLong(C_LONG_LONG, Long.MAX_VALUE);\n","filename":"test\/jdk\/tools\/jextract\/test8252016\/Test8252016.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-import static jdk.incubator.foreign.CLinker.C_LONGLONG;\n+import static jdk.incubator.foreign.CLinker.C_LONG_LONG;\n@@ -118,1 +118,1 @@\n-            { \"global_long\",   long.class,   C_LONGLONG,      4L },\n+            { \"global_long\",   long.class,   C_LONG_LONG,      4L },\n@@ -130,1 +130,1 @@\n-            { \"Foo\", C_LONGLONG.withName(\"ll\"), long.class,          10L },\n+            { \"Foo\", C_LONG_LONG.withName(\"ll\"), long.class,          10L },\n","filename":"test\/jdk\/tools\/jextract\/testClassGen\/TestClassGeneration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,2 +98,2 @@\n-        checkField(g, \"ll\", CLinker.C_LONGLONG);\n-        checkField(g, \"ull\",CLinker.C_LONGLONG);\n+        checkField(g, \"ll\", CLinker.C_LONG_LONG);\n+        checkField(g, \"ull\",CLinker.C_LONG_LONG);\n@@ -102,1 +102,0 @@\n-        checkField(g, \"ld\", CLinker.C_LONGDOUBLE);\n","filename":"test\/jdk\/tools\/jextract\/testStruct\/LibStructTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-    long double ld;\n","filename":"test\/jdk\/tools\/jextract\/testStruct\/struct.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}