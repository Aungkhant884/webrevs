{"files":[{"patch":"@@ -57,0 +57,5 @@\n+    @Benchmark\n+    public void panama_blank_trivial() throws Throwable {\n+        func_trivial.invokeExact();\n+    }\n+\n@@ -67,0 +72,5 @@\n+    @Benchmark\n+    public int panama_identity_trivial() throws Throwable {\n+        return (int) identity_trivial.invokeExact(10);\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadConstant.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+    static final MethodHandle func_trivial;\n@@ -45,0 +46,1 @@\n+    static final MethodHandle func_trivial_v;\n@@ -47,0 +49,1 @@\n+    static final MethodHandle identity_trivial;\n@@ -48,0 +51,1 @@\n+    static final MethodHandle identity_trivial_v;\n@@ -101,0 +105,1 @@\n+            func_trivial_v = abi.downcallHandle(fd, Linker.Option.isTrivial());\n@@ -102,0 +107,1 @@\n+            func_trivial = insertArguments(func_trivial_v, 0, func_addr);\n@@ -107,0 +113,1 @@\n+            identity_trivial_v = abi.downcallHandle(fd, Linker.Option.isTrivial());\n@@ -108,0 +115,1 @@\n+            identity_trivial = insertArguments(identity_trivial_v, 0, identity_addr);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadHelper.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,0 +57,5 @@\n+    @Benchmark\n+    public void panama_blank_trivial() throws Throwable {\n+        func_trivial_v.invokeExact(func_addr);\n+    }\n+\n@@ -106,0 +111,5 @@\n+    @Benchmark\n+    public int panama_identity_trivial() throws Throwable {\n+        return (int) identity_trivial_v.invokeExact(identity_addr, 10);\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadVirtual.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}