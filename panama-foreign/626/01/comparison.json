{"files":[{"patch":"@@ -1,664 +0,0 @@\n-3cc80be736f24704e505ad8ddaa598dec3fa2ed3 jdk-9+181\n-e2b70be325bd10dae4c06f74c46d70d480854916 jdk-9+179\n-5b16a1c3ccffff2a82c88bb7ea894c4ff1c9ebde jdk-9+180\n-43bf6f30fcba031ecf0cc7e511efe3a8179d0f77 jdk-9+176\n-d9f6bc6ba599d0487dc18b2fbdb6c34eedf6f958 jdk-9+177\n-bc9df7dd63ec76f50fafeb4acc44465044662f0a jdk-9+178\n-994036e74ab805bcc09afa0646be17a725bec42f jdk-9+175\n-94680c6d60ecd9ed3ffd1847706efde7eb947afc jdk-9+174\n-6dd7fda42bab7ecf648cafb0a4e9b4ca11b3094f jdk-9+173\n-dad6746278facbbea57dd462cb56fb743dc0a5f0 jdk-9+172\n-643b5f18c2656fe91b69fea85b07b98d5fad394d jdk-9+171\n-898cbe31fbdae2d25d141384fac746cc244a730c jdk-9+170\n-c7efde2b60fc1ec04630be769d9ad60efb39c39c jdk-9+169\n-8fd0a4569191f33c98ee90c2709174a342fefb0d jdk-9+167\n-fcabc74bd44e56c7419d111d59b95669ecb33c55 jdk-9+168\n-d3e973f1809606c67412361041ad197e50fe8cec jdk-9+166\n-3965b747cfe1e6cbd66b8739da5a1ea6ec6985e9 jdk-9+165\n-d16aebbb56d37f12e0c0b0a4fb427db65e1fb1a8 jdk-9+162\n-18c41483a082e097ac2f5f983c1226ed94aa4215 jdk-9+163\n-32db52c675e7d5bc413605d2e89b68b608b19be0 jdk-9+164\n-fd1497902bbe3aa24b21f270ecdcb8de5f7aa9ac jdk-9+159\n-6aa8be0c4e054fe8b3ab016ae00d16d680f92145 jdk-9+160\n-f6883b1a5a6478437cd4181c4bd45328ab24feaf jdk-9+161\n-fa3e76b477829afc4476f0b725cfaa440a6fd917 jdk-9+157\n-b5015f742ba648184bb7fc547197bd33ebfde30d jdk-9+158\n-1cc8dd79fd1cd13d36b385196271a29632c67c3b jdk7-b24\n-bf2517e15f0c0f950e5b3143c4ca11e2df73dcc1 jdk7-b25\n-5ae7db536e3fcf6be78e45b240a9058095e0ed38 jdk7-b26\n-67052ac87fc927d048e62ec54ff42adb230d3f7c jdk7-b27\n-18dc4ba4739a537fd146f77da51db16efce28da2 jdk7-b28\n-bfe4572fd301a6fcd120373cdb2eff5d2da0c72c jdk7-b29\n-bee4731164a06ddece1297ae58db24aca6a1c626 jdk7-b30\n-cd8b8f500face60d1566d850857a7fccadbd383a jdk7-b31\n-a9f1805e3ba9ca520cad199d522c84af5433e85a jdk7-b32\n-6838c1a3296aaa3572364d2ce7d70826cee96286 jdk7-b33\n-90cf935adb353bb0af4b46fb0677e841fd24c000 jdk7-b34\n-6d909d5803e3a22850e6c4e5a75b888742ee7e20 jdk7-b35\n-d718a441936196b93d8bc9f084933af9a4c2a350 jdk7-b36\n-c2036bf76829c03b99108fffab52e20910a9be4f jdk7-b37\n-a2879b2837f5a4c87e9542efe69ef138194af8ff jdk7-b38\n-126f365cec6c3c2c72de934fa1c64b5f082b55b5 jdk7-b39\n-3c53424bbe3bb77e01b468b4b0140deec33e11fc jdk7-b40\n-3cb2a607c347934f8e7e86f840a094c28b08d9ea jdk7-b41\n-caf58ffa084568990cbb3441f9ae188e36b31770 jdk7-b42\n-41bd0a702bc8ec6feebd725a63e7c3227f82ab11 jdk7-b43\n-5843778bda89b1d5ac8e1aa05e26930ac90b3145 jdk7-b44\n-54dffad0bf066791a2793305875250c395011d5f jdk7-b45\n-04b2620edc72de93671646e4720c5992c74ac8b5 jdk7-b46\n-0c4657194eec95c08ba478aee9cfc3c295e41657 jdk7-b47\n-1bf51a4c2627c2f0e0cbcc2cf0421bdb37f1f2b2 jdk7-b48\n-6b84b04a80afe23262377c60913eebfc898f14c4 jdk7-b49\n-5da0e6b9f4f18ef483c977337214b12ee0e1fc8f jdk7-b50\n-a25c5ec5e40e07733d1ff9898a0abe36159288ff jdk7-b51\n-7a90e89e36d103038f8667f6a7daae34ecfa1ad8 jdk7-b52\n-d52186ee770dac57950536cd00ccbfdef360b04c jdk7-b53\n-15096652c4d48dfb9fc0b2cb135304db94c65ba0 jdk7-b54\n-c8b275d62d6b0a980c510e839b70292245863e85 jdk7-b55\n-a8134c4ee2cf451cf9b5e1609f39d83ecd53acc5 jdk7-b56\n-b44f05654c26fcd1f995e712992f9b07ffd7c0c6 jdk7-b57\n-d60a9ce3c3eabf28f5d50ae839d18be04a551bc2 jdk7-b58\n-c33e7d38c9210741dbc285507403a4b20bd802a0 jdk7-b59\n-5a10e4d0b14d7beac53a7b2213ae6864afe1fd3e jdk7-b60\n-dbb955b1ee59b876dd1f133952b557b48b1d7732 jdk7-b61\n-6107cbff3130c747d243c25a7874cd59db5744a8 jdk7-b62\n-dfd8506f74c3731bb169ce93c72612d78ee0413b jdk7-b63\n-d22867c5f1b295a0a2b3b4bc8999a2676f6e20c3 jdk7-b64\n-7d3bf00f3cc4f8125de1842521e7567f37dc84b8 jdk7-b65\n-62109d1b9e7310f29ab51ca6f1d71b899c0ce6b0 jdk7-b66\n-eb24af1404aec8aa140c4cd4d13d2839b150dd41 jdk7-b67\n-bca2225b66d78c4bf4d9801f54cac7715a598650 jdk7-b68\n-1b662b1ed14eb4ae31d5138a36c433b13d941dc5 jdk7-b69\n-207f694795c448c17753eff1a2f50363106960c2 jdk7-b70\n-c5d39b6be65cba0effb5f466ea48fe43764d0e0c jdk7-b71\n-df4bcd06e1d0ab306efa5a44f24a409dc0c0c742 jdk7-b72\n-ce74bd35ce948d629a356e168797f44b593b1578 jdk7-b73\n-4e7661eaa211e186674f6cbefec4aef1144ac2a0 jdk7-b74\n-946518568340c4e511549318f19f47f06b7f5f9b jdk7-b75\n-09e0b33177af2b98a03c9ca19eedf61440bd1cf6 jdk7-b76\n-1d0121b741f029dc4b828e4b36ba6fda92907dd7 jdk7-b77\n-4061c66ba1af1a2e27c2c839ba887407dd3ce050 jdk7-b78\n-e9c98378f6b9256c0595ef2985ca5899f0c0e274 jdk7-b79\n-e6abd38682d237306d6c147c17538ec9e7f8e3a7 jdk7-b80\n-dcc938ac40cc45f1ef454d76020b5db5d943001c jdk7-b81\n-a30062be6d9ca1d48579826f870f85974300004e jdk7-b82\n-34c8199936a1682aa8587857f44cfaf37c2b6381 jdk7-b83\n-b1e55627a6980b9508854ed0c0f21d4f981b4494 jdk7-b84\n-b6f633a93ae0ec4555ff4bf756f5e2150c9bdede jdk7-b85\n-c94d9cc81f495d97817eba9d71b84fc45f7661a5 jdk7-b86\n-b7456c473862048fa70ed8092313a4ef0a55d403 jdk7-b87\n-7077b95d42f6b3942a8751bba033801ff50e5889 jdk7-b88\n-44158f6d3b94c0fa020e33632532473d92d1ea96 jdk7-b89\n-1d1927f9ec097b62c913921e2dfa5dbaf5dc325b jdk7-b90\n-308ad8f68b8dd68e22d73dd490e110059b732422 jdk7-b91\n-ff9031a745d9cc52318f2148e43ca3b07ee08098 jdk7-b92\n-b5dab6a313fdff4c043250e4d9c8f66fd624d27e jdk7-b93\n-8bb281f0f91582104d65d032be22522bfd2d8110 jdk7-b94\n-654298d26561b76dfe3cfcffbbd7078080837300 jdk7-b95\n-d260f892491e040ae385a8e6df59557a7d721abf jdk7-b96\n-7e406ebed9a5968b584f3c3e6b60893b5d6d9741 jdk7-b97\n-db6e660120446c407e2d908d52ec046592b21726 jdk7-b98\n-c4c8a5bc54f66abc68cd185d9294042121922154 jdk7-b99\n-2d6ba7a221915bdf0311acc5641c7f3875cb793e jdk7-b100\n-2548ac036b8fca3326d058d758e6df8355a42469 jdk7-b101\n-88db80c8e49cea352c2900f689600dc410761c1f jdk7-b102\n-64770970865839b0443066370e7d476ef47e90cd jdk7-b103\n-10bc903a228d3a8efdf46fb8c3fcf82a59b88bc5 jdk7-b104\n-1ce7938efb03224ccc8b3cdd7803eb39e889539c jdk7-b105\n-6bdae472f77205046703b685eff2ac4f7a0ecf4e jdk7-b106\n-439de530aac531a360beedba6e2fe51e17292cc0 jdk7-b107\n-044d31b99ef5609389fc771c422e722e5e224228 jdk7-b108\n-e02b4d709e177d08d56130a4bc68061e4bbacc7d jdk7-b109\n-a6442d6bc38a44152e0662688213ce4d2701f42a jdk7-b110\n-69f3edf083477955b5bd2f754252c7504167d8e1 jdk7-b111\n-f960f117f1623629f64203e2b09a92a8f6f14ff5 jdk7-b112\n-1fee41c7ed2b3388970a756a85aa693c0de8407a jdk7-b113\n-750c1ccb2f2d1ddfa95ab6c7f897fdab2f87f7e9 jdk7-b114\n-9cb24917216bc68997154f6e9566c3de62acb2f4 jdk7-b115\n-a4e6aa1f45ad23a6f083ed98d970b5006ea4d292 jdk7-b116\n-228e73f288c543a8c34e2a54227103ae5649e6af jdk7-b117\n-2e876e59938a853934aa738c811b26c452bd9fe8 jdk7-b118\n-4951967a61b4dbbf514828879f57bd1a0d4b420b jdk7-b119\n-8c840d3ab24f8d0f422b991638acb44b6ab1d98c jdk7-b120\n-0ce0a2c3a6926677dc507839a820ab6625541e5a jdk7-b121\n-6f09ea1c034f087916d2a8cf0d22be768400118f jdk7-b122\n-142129d8599d1f56b29387e7f9a5fad53b6d61df jdk7-b123\n-aa894c225b1a517b665ac2a58295217ea2245134 jdk7-b124\n-f658ec2730fa29323c36d23c27e54c7219ef5e16 jdk7-b125\n-f1df068076986679ea1105532a65529d63a89060 jdk7-b126\n-f83cd8bd35c678f94e526990e03dc838d0ec2717 jdk7-b127\n-7da3f5f30855dec6bf3a86529e87dee883b90c72 jdk7-b128\n-6823ea7eb8eb6fab405d7edb7a5c2f690887a2fa jdk7-b129\n-a36beda9b9de91231d92a2c529f21cc218fcf8d5 jdk7-b130\n-d8af56da89bc0fc02a6b6ad78f51157a46d665ab jdk7-b131\n-d61280d36755d1941fb487f554e8b7a6d0bca6a1 jdk7-b132\n-fd444c61e7ed3d92b2a730da7c737b02191b682f jdk7-b133\n-def8e16dd237a47fc067d66d4c616d7baaec6001 jdk7-b134\n-f75a1efb141210901aabe00a834e0fc32bb8b337 jdk7-b135\n-46acf76a533954cfd594bb88fdea79938abfbe20 jdk7-b136\n-d1cf7d4ee16c341f5b8c7e7f1d68a8c412b6c693 jdk7-b137\n-62b8e328f8c8c66c14b0713222116f2add473f3f jdk7-b138\n-955488f34ca418f6cdab843d61c20d2c615637d9 jdk7-b139\n-f4298bc3f4b6baa315643be06966f09684290068 jdk7-b140\n-5d86d0c7692e8f4a58d430d68c03594e2d3403b3 jdk7-b141\n-92bf0655022d4187e9b49c1400f98fb3392a4630 jdk7-b142\n-4a05062d8c4dfa3edec3faf1052af28baba5adff jdk7-b143\n-07a8728ad49ef6dfa469c3a8bf5ab1e9c80bed5c jdk7-b144\n-8294c99e685a1f6d1d37c45cd97854cf74be771e jdk7-b145\n-dca1e8a87e8f756f95b99bac8fe795750d42e1b0 jdk7-b146\n-a2a589fc29543ed32919c78a1810ad93a6fcf5bc jdk7-b147\n-de9223c94f9c710b3eebb599cd3586f36c8b94a9 jdk8-b01\n-1b9d19620eb4606a25b1e28f86d66c8bfa867e06 jdk8-b02\n-6815e85bf96d6d3875954f9777660372cd70d065 jdk8-b03\n-31f5c34d78081572ad9a2401c0bb0c6b9711dd65 jdk8-b04\n-c4f9ea1ecb55ff44e0dd21d2888ead308c86a3aa jdk8-b05\n-429da7734bf491bccde2a752fae97e9f225896dc jdk8-b06\n-bc5710332b294676661103bb20d47d2ea3ba8def jdk8-b07\n-24ee504f80412770c6874836cd9e55b536427b1d jdk8-b08\n-fbf3cabc9e3bb1fcf710941d777cb0400505fbe6 jdk8-b09\n-f651ce87127980c58e3599daba964eba2f3b4026 jdk8-b10\n-cc1f5ce8e504d350e0b0c28c5f84333f8d540132 jdk8-b11\n-86db042b3385c338e17f7664447fdc7d406dd19e jdk8-b12\n-4cc0ef72c812943743ef4765f1100e2fbe2b1a08 jdk8-b13\n-9ffaa48dbfb0f5936c2b789867d0785faec7071d jdk8-b14\n-b5060eae3b32fd9f884a09774338cd8186d7fafa jdk8-b15\n-736a63b854f321c7824b7e47890135f80aee05e3 jdk8-b16\n-f0eccb2946986fb9626efde7d8ed9c8192623f5c jdk8-b17\n-885050364691ac1ac978305c63f3368a197fb04d jdk8-b18\n-0ff7113a0882ec82d642cb9f0297b4e497807ced jdk8-b19\n-6561530ea757c3f3a6fb171c9cc7b3885cdeca85 jdk8-b20\n-b3a426170188f52981cf4573a2f14d487fddab0d jdk8-b21\n-e8f03541af27e38aafb619b96863e17f65ffe53b jdk8-b22\n-498124337041ad53cbaa7eb110f3d7acd6d4eac4 jdk8-b23\n-7d3720d8c595d1519c31e9ff7366203fc2c61350 jdk8-b24\n-0071a6d64113a35ba345bb1580c256de5ce17d3e jdk8-b25\n-6c805d8ed4e5449ea5e4d158c7bdbd7b0b70efd1 jdk8-b26\n-c51754cddc037b9609e202b9ed38363d8683e7a8 jdk8-b27\n-16ba58282d117247f480aae7a79b88141ade52a3 jdk8-b28\n-e070119aa56ee4dc5506c19d2c4d2eecab8ad429 jdk8-b29\n-23da7804aca0c9c4e6e86532a1453125a76d95ee jdk8-b30\n-bac81e9f7d57b75fba5ab31b571f3fe0dc08af69 jdk8-b31\n-2c5208ccb863db936eab523f49450b3fcd230348 jdk8-b32\n-a6e6d42203e6d35f9e8b31eac25b0021b4dd58ad jdk8-b33\n-0ae89825c75c9492e44efb3aca3d9ee3d8a209df jdk8-b34\n-f151d5833912a82cd4f203944da0305c3be83ecc jdk8-b35\n-98ce9816ae089c959ba1e70fba98423a31c4e9fa jdk8-b36\n-b3a91113026c99b0da010d41055719ab0d8938f0 jdk8-b37\n-4cc5610a6dd6227da766ebf9742eb11ff5ded6c0 jdk8-b38\n-35a5397278779a2f8f3013f81586dc8f30cb149d jdk8-b39\n-6e4e654931b976304bf6e7b4d0d6db8f75bac5d9 jdk8-b40\n-c029c972396cea042a0dc67c0f7ccf2fe68007d4 jdk8-b41\n-5c5a64ec0839df5affe9394b99ff338c363acbca jdk8-b42\n-69d8a827cdf9236be9694a46d75c710d71dac7d7 jdk8-b43\n-7e981cb0ad6a194f1fa859f9ad47586db461f269 jdk8-b44\n-9b19b2302c28f4da6d4078f66234abecfed5688a jdk8-b45\n-600c9a1feb01633cbcf2341a43d1d21e6497ecd0 jdk8-b46\n-b820143a6f1ce993c6e6f31db4d64de990f42654 jdk8-b47\n-086271e35b0a419b38e8bda9bebd70693811df0a jdk8-b48\n-cecd7026f30cbd83b0601925a7a5e059aec98138 jdk8-b49\n-38fe5ab028908cf64dd73a43336ba3211577bfc3 jdk8-b50\n-382651d28f2502d371eca751962232c0e535e57a jdk8-b51\n-b67041a6cb508da18d2f5c7687e6a31e08bea4fc jdk8-b52\n-c7aa5cca1c01689a7b1a92411daf83684af05a33 jdk8-b53\n-7c6aa31ff1b2ae48c1c686ebe1aadf0c3da5be15 jdk8-b54\n-319f583f66db47395fa86127dd3ddb729eb7c64f jdk8-b55\n-ffe6bce5a521be40146af2ac03c509b7bac30595 jdk8-b56\n-2c21c080b11b93efb3851e39e1363e45da805943 jdk8-b57\n-479d3302a26d7607ba271d66973e59ebf58825b6 jdk8-b58\n-3bd874584fc01aae92fbc8827e2bd04d8b6ace04 jdk8-b59\n-5e3adc681779037a2d33b7be6f75680619085492 jdk8-b60\n-cdaa6122185f9bf512dcd6600f56bfccc4824e8c jdk8-b61\n-8d9d430b4244b95f5cf1ebe719f834a1ac5d6cd5 jdk8-b62\n-21ee1dd7b809639284900a128b9b656a592ebc7a jdk8-b63\n-70fa4b11f26522e69b51fd652215f60ce350bac3 jdk8-b64\n-a2cf4d4a484378caea2e827ed604b2bbae58bdba jdk8-b65\n-17820b958ae84f7c1cc6719319c8e2232f7a4f1d jdk8-b66\n-76cc9bd3ece407d3a15d3bea537b57927973c5e7 jdk8-b67\n-cb33628d4e8f11e879c371959e5948b66a53376f jdk8-b68\n-adb5171c554e14cd86f618b5584f6e3d693d5889 jdk8-b69\n-0d625373c69e2ad6f546fd88ab50c6c9aad01271 jdk8-b70\n-a41ada2ed4ef735449531c6ebe6cec593d890a1c jdk8-b71\n-6725b3961f987cf40f446d1c11cd324a3bec545f jdk8-b72\n-fe94b40ffd9390f6cffcdf51c0389b0e6dde0c13 jdk8-b73\n-f627eff819628822a0777af8062244352f2a29cf jdk8-b74\n-f1478a6d25fddd311a84dcbfac50824cc1858bdd jdk8-b75\n-f407160c280d1c5b00d314c535441ac26f195fee jdk8-b76\n-d17eb2e13e362085e866d46235314c50cc4661cc jdk8-b77\n-6d3dcd34b5b962ea1ef9eed0dafdee9e812401bc jdk8-b78\n-a1313a8d90d17d363a3b2a645dc4030ec204b168 jdk8-b79\n-3fa21fbf9be7e6b482af43aacb6a09acfa30bdb6 jdk8-b80\n-e41d716405b209d3eddef8bd4240cec2bd34dcca jdk8-b81\n-5e8c55025644730385a6f8fa029ecdb2d2c98a07 jdk8-b82\n-bcebd3fdefc91abb9d7fa0c5af6211b3f8720da6 jdk8-b83\n-d7ad0dfaa41151bd3a9ae46725b0aec3730a9cd0 jdk8-b84\n-1872c12529090e1c1dbf567f02ad7ae6231b8f0c jdk8-b85\n-da9a4c9312816451884aa6db6f18be51a07bff13 jdk8-b86\n-5ebf6c63714de2c9dcf831074086d31daec819df jdk8-b87\n-e517701a4d0e25ae9c7945bca6e1762a8c5d8aa6 jdk8-b88\n-4dec41b3c5e3bb616f0c6f15830d940905aa5d16 jdk8-b89\n-f09ab0c416185e3cba371e81bcb6a16060c90f44 jdk8-b90\n-80b6c3172dc2cfceb022411292d290a967f9c728 jdk8-b91\n-2fd6acba737b01e705e1f7c33588c922a3787f13 jdk8-b92\n-b72ae39e1329fefae50d4690db4fde43f3841a95 jdk8-b93\n-0d804e3b955dce406af6a79ac1cc35c696aff7fb jdk8-b94\n-49fe9c8049132647ad38837a877dd473e6c9b0e5 jdk8-b95\n-ea73f01b9053e7165e7ba80f242bafecbc6af712 jdk8-b96\n-0a85476a0b9cb876d5666d45097dac68bef3fce1 jdk8-b97\n-711eb4aa87de68de78250e0549980936bab53d54 jdk8-b98\n-2d3875b0d18b3ad1c2bebf385a697e309e4005a4 jdk8-b99\n-3d34036aae4ea90b2ca59712d5a69db3221f0875 jdk8-b100\n-edb01c460d4cab21ff0ff13512df7b746efaa0e7 jdk8-b101\n-bbe43d712fe08e650808d774861b256ccb34e500 jdk8-b102\n-30a1d677a20c6a95f98043d8f20ce570304e3818 jdk8-b103\n-b5ed503c26ad38869c247c5e32debec217fd056b jdk8-b104\n-589f4fdc584e373a47cde0162e9eceec9165c381 jdk8-b105\n-514b0b69fb9683ef52062fd962a3e0644431f64d jdk8-b106\n-892889f445755790ae90e61775bfb59ddc6182b5 jdk8-b107\n-74049f7a28b48c14910106a75d9f2504169c352e jdk8-b108\n-af9a674e12a16da1a4bd53e4990ddb1121a21ef1 jdk8-b109\n-b5d2bf482a3ea1cca08c994512804ffbc73de0a1 jdk8-b110\n-b9a0f6c693f347a6f4b9bb994957f4eaa05bdedd jdk8-b111\n-ad67c34f79c28a8e755f4a49f313868619d6702c jdk8-b112\n-4a4dbcf7cb7d3e1a81beaa3b11cd909f69ebc79a jdk8-b113\n-dfa34ab293faad9b543a24646dbb381bc3ab5586 jdk8-b114\n-3dd9732b17034f45d111996d1d50287b05a3998c jdk8-b115\n-aaf663f591aba43ec942263b15ba62759ce26a1e jdk8-b116\n-31b0e03fcad73d7886b306b4c2e57ad270780d0d jdk8-b117\n-f5b521ade7a35cea18df78ee86322207729f5611 jdk8-b118\n-87b743b2263cc53955266411b7797b365a0fb050 jdk8-b119\n-a1ee9743f4ee165eae59389a020f2552f895dac8 jdk8-b120\n-13b877757b0b1c0d5813298df85364f41d7ba6fe jdk9-b00\n-f130ca87de6637acae7d99fcd7a8573eea1cbaed jdk9-b01\n-b32e2219736e42baaf45daf0ad67ed34f6033799 jdk9-b02\n-7f655f31f9bcee618cf832f08176ad8c1ed3fdd3 jdk9-b03\n-099891b1d86f3719e116ac717ffdafc90d037fb7 jdk9-b04\n-dd311791ad6895a3989020dd6c6c46db87972ab8 jdk9-b05\n-85dbdc227c5e11429b4fc4a8ba763f50107edd6e jdk9-b06\n-c826d05f1fb0773f6a28caa763307dd30d90d36e jdk9-b07\n-b47e021195757f8f45582124ea7cad48ccf5f872 jdk9-b08\n-efe7dbc6088691757404e0c8745f894e3ca9c022 jdk9-b09\n-8c0bdeecd7c0f9ce3f3762a51991f755cb3a972c jdk9-b10\n-0809c9a4d36e6291f1c4384604c4bbf29e975722 jdk9-b11\n-0d1f816217dce5e72187f167cc1816080cbeb453 jdk9-b12\n-1a30593dcb9802faec3b6edb24d86ca088594e4e jdk9-b13\n-97932f6ad950ae5a73a9da5c96e6e58503ff646b jdk9-b14\n-74eb0778e4f2dbff6628e718378449fba27c4265 jdk9-b15\n-4a09f5d30be844ac6f714bdb0f63d8c3c08b9a98 jdk9-b16\n-410bccbded9e9cce80f1e13ad221e37ae97a3986 jdk9-b17\n-c5495e25c7258ab5f96a1ae14610887d76d2be63 jdk9-b18\n-2dcf544eb7ed5ac6a3f7813a32e33acea7442405 jdk9-b19\n-89731ae72a761afdf4262e8b9513f302f6563f89 jdk9-b20\n-28dd0c7beb3cad9cf95f17b4b5ad87eb447a4084 jdk9-b21\n-9678e0db8ff6ed845d4c2ee4a3baf7f386a777e5 jdk9-b22\n-39cfdc2dcaf3f195c55398e4e677ab053b07e3d2 jdk9-b23\n-d9ce05f36ffec3e5e8af62a92455c1c66a63c320 jdk9-b24\n-13a5c76976fe48e55c9727c25fae2d2ce7c05da0 jdk9-b25\n-cd6f4557e7fea5799ff3762ed7a80a743e75d5fd jdk9-b26\n-d06a6d3c66c08293b2a9650f3cc01fd55c620e65 jdk9-b27\n-f4269e8f454eb77763ecee228a88ae102a9aef6e jdk9-b28\n-c36c0092693707a8255561433647e8c3cd724ccd jdk9-b29\n-b2287cac7813c70ed7f679d9a46fe774bd4005f8 jdk9-b30\n-9d0e6639a4d71b63507dd94b1a028e963b27e798 jdk9-b31\n-1b1ec4291abc0ba6da7bf79b754f08dd759a4a0c jdk9-b32\n-f0c5e4b732da823bdaa4184133675f384e7cd68d jdk9-b33\n-9618201c5df28a460631577fad1f61e96f775c34 jdk9-b34\n-a137992d750c72f6f944f341aa19b0d0d96afe0c jdk9-b35\n-41df50e7303daf73c0d661ef601c4fe250915de5 jdk9-b36\n-b409bc51bc23cfd51f2bd04ea919ec83535af9d0 jdk9-b37\n-948cceef81ba4cb34bc233e7cc5952951ff04e88 jdk9-b38\n-4e7c4d692e934cb9023af8201e7c2b510e9c4ee1 jdk9-b39\n-82f4cb44b2d7af2352f48568a64b7b6a5ae960cd jdk9-b40\n-9fffb959eb4197ff806e4ac12244761815b4deee jdk9-b41\n-3107be2ba9c6e208a0b86bc7100a141abbc5b5fb jdk9-b42\n-6494b13f88a867026ee316b444d9a4fa589dd6bd jdk9-b43\n-abbfccd659b91a7bb815d5e36fed635dcdd40f31 jdk9-b44\n-bfc24ae2b900187585079bb11e66e459d1e525fe jdk9-b45\n-722378bc599e38d9a1dd484de30f10dfd7b21438 jdk9-b46\n-8327024a99559982b848e9c2191da9c0bf8838fd jdk9-b47\n-b2f9702efbe95527ea3a991474fda23987ff1c5c jdk9-b48\n-5b8db585a33c3cc48e70e688ceee57dd9271dc5d jdk9-b49\n-1550b2f6b63d1411fa84dc7bbc6f04809aedb43f jdk9-b50\n-6efe265424e3f1ea596408a1f71baf2de316c772 jdk9-b51\n-d6224d6021459ac8b3832e822f5acc849fa944af jdk9-b52\n-874d76e4699dfcd61ae1826c9fe0ddc1610ad598 jdk9-b53\n-82cd31c5d6ca8d4c1653f4eb1c09eb2d9a3b2813 jdk9-b54\n-c97e2d1bad9708d379793ba2a4c848eda14c741e jdk9-b55\n-47544495db2d3d2edf0f85862d8715592fdb919f jdk9-b56\n-ddb95d8f169b09544cc17e72a6baaff2400092f5 jdk9-b57\n-f40752db7773ca0c737f2ad88371e35c57fdfed7 jdk9-b58\n-da950f343762a856d69751570a4c07cfa68a415b jdk9-b59\n-38f98cb6b33562a926ec3b79c7b34128be37647d jdk9-b60\n-ac3f5a39d4ff14d70c365e12cf5ec8f2abd52a04 jdk9-b61\n-e7dbbef69d12b6a74dfad331b7188e7f893e8d29 jdk9-b62\n-989253a902c34dcb7564695161c9200a5fbb7412 jdk9-b63\n-8ffdeabc7c2b9a8280bf46cae026ac46b4d31c26 jdk9-b64\n-4915246064b2f89d5f00c96e758686b7fdad36a6 jdk9-b65\n-ff3fc75f3214ad7e03595be1b0d0f38d887b6f0e jdk9-b66\n-56166ce66037952fa21e9f680b31bf8eb47312c0 jdk9-b67\n-5b500c93ce4822d47061cd518ff3f72d9d8cb5b5 jdk9-b68\n-d69c968463f0ae5d0b45de3fc14fe65171b23948 jdk9-b69\n-43d0179ee9de3bfffae3417f09e07eb6d8efc963 jdk9-b70\n-f66c185284727f6e6ffd27e9c45ed2dd9da0a691 jdk9-b71\n-61d2d0629b6dbf4c091dc86151ade1b3ef34fffe jdk9-b72\n-9b3a9d72f07b40c648de79961679f42283af1bb5 jdk9-b73\n-7c577fda1855d03c04546694d514678f596508c9 jdk9-b74\n-f55df5cfe11c97e4b58998b76f5bd00a73cde12d jdk9-b75\n-eeea9adfd1e3d075ef82148c00a4847a1aab4d26 jdk9-b76\n-c25e882cee9622ec75c4e9d60633539a2f0a8809 jdk9-b77\n-c8753d0be1778944dc512ec86a459941ea1ad2c3 jdk9-b78\n-3966bd3b8167419aa05c6718a4af1cf54b1e3c58 jdk9-b79\n-3c9f5bd909ae7187f24622ee4b69f8a5756a9271 jdk9-b80\n-2050b3a0aadcb0e024bf798197421d58e54ec8bf jdk9-b81\n-6521875cb63e1d0121b30af56ebbc36db078c4c6 jdk9-b82\n-f61a63b7d1e52e307abc0bfc751203155d362ec4 jdk9-b83\n-51b2db2fa04c16d767b66113dbf08c5349ce382a jdk9-b84\n-8392405ab038b22e69a3728e17dbdd9e3d3a22ed jdk9-b85\n-7db0663a5e968059fa7c772172187ebd60b6492d jdk9-b86\n-1a52a30674cd28c24d4d388150336121f2e9ddf9 jdk9-b87\n-16b4968f9bb8f34371b42c0ba483d76e91ba84d8 jdk9-b88\n-4a0312f2894bcbe1fd20266c8fda8d983bd2fcf6 jdk9-b89\n-d131f4b8433a79408f935eff9bf92a0664229b60 jdk9-b90\n-8077fd2f055d31e50b46fcf62d9c035bc385a215 jdk9-b91\n-f242d4332f563648426a1b0fa02d8741beba19ef jdk9-b92\n-09206c6513b300e1ac8541f3be012e1a49312104 jdk9-b93\n-25a2cab05cfbe6034b71d9e72d64c65b0572ce63 jdk9-b94\n-5ac6287ec71aafe021cc839d8bc828108d23aaba jdk-9+95\n-139f19d70350238e15e107945cea75082b6380b3 jdk-9+96\n-4edcff1b9a8875eb6380a2165dfec599e8e3f7c0 jdk-9+97\n-d00ad2d9049ac60815f70bff445e95df85648bd2 jdk-9+98\n-f9bcdce2df26678c3fe468130b535c0342c69b89 jdk-9+99\n-4379223f8806626852c46c52d4e7a27a584b406e jdk-9+100\n-80f67512daa15cf37b4825c1c62a675d524d7c49 jdk-9+101\n-2dc4c11fe48831854916d53c3913bdb7d49023ea jdk-9+102\n-4a652e4ca9523422149958673033e0ac740d5e1e jdk-9+103\n-086c682bd8c5f195c324f61e2c61fbcd0226d63b jdk-9+104\n-db483b34fa7148d257a429acddbde9c13687dcae jdk-9+105\n-6c644cca3f3fc2763e2ff7d669849a75d34543ba jdk-9+106\n-1c076468bf7dad5b8f2ee5dcf66e2279caa3e208 jdk-9+107\n-257b579d813201682931d6b42f0445ffe5b4210d jdk-9+108\n-c870cb782aca71093d2584376f27f0cfbfec0e3a jdk-9+109\n-4a95f4b1bd8bfce85dc02a593896749feab96c34 jdk-9+110\n-a6614ff7bf09da74be1d0ef3d9755090d244697a jdk-9+111\n-7359994942f8d8e723b584d66a3a92c2e9e95e5c jdk-9+112\n-6072af7a98be3922f26bdce71b53bb3646cb2ac9 jdk-9+113\n-c84d0cce090e161d736de69e941830adf8c2f87a jdk-9+114\n-8d78fb40648dd221ce4ef19f9d5aa41ee1a3a884 jdk-9+115\n-84aba7335005a3a47751dcf1f37935f97df9f99a jdk-9+116\n-82b8d12a553f5617737c238cec060281d52e351c jdk-9+117\n-7c04fcb12bd4a31570a238e663fa846dfa5ec3b8 jdk-9+118\n-caf97b37ebec84288c112d21d3a60cb628cba1e8 jdk-9+119\n-9330543436402b8f3bd070524846a464d8143557 jdk-9+120\n-18e5cdecb37a2f03ba74f6c8f022858bcbaacf56 jdk-9+121\n-7693aa00e131493ceb42b93305e2f014c9922a3b jdk-9+122\n-d53037a90c441cb528dc41c30827985de0e67c62 jdk-9+123\n-2a5697a98620c4f40e4a1a71478464399b8878de jdk-9+124\n-3aa52182b3ad7c5b3a61cf05a59dd07e4c5884e5 jdk-9+125\n-03e7b2c5ae345be3caf981d76ceb3efe5ff447f8 jdk-9+126\n-8e45018bde9de4ad15b972ae62874bba52dba2d5 jdk-9+127\n-5bf88dce615f6804f9e101a96ffa7c9dfb4fbbbe jdk-9+128\n-e8373543a3f0f60589b7d72b1f9b172721124caf jdk-9+129\n-e613affb88d178dc7c589f1679db113d589bddb4 jdk-9+130\n-4d2a15091124488080d65848b704e25599b2aaeb jdk-9+131\n-2e83d21d78cd9c1d52e6cd2599e9c8aa36ea1f52 jdk-9+132\n-e17429a7e843c4a4ed3651458d0f950970edcbcc jdk-9+133\n-a71210c0d9800eb6925b61ecd6198abd554f90ee jdk-9+134\n-e384420383a5b79fa0012ebcb25d8f83cff7f777 jdk-9+135\n-1b4b5d01aa11edf24b6fadbe3d2f3e411e3b02cd jdk-9+136\n-9cb87c88ed851c0575b8ead753ea238ed5b544e9 jdk-9+137\n-d273dfe9a126d3bffe92072547fef2cd1361b0eb jdk-9+138\n-65477538bec32963dc41153d89c4417eb46c45fc jdk-9+139\n-0875007901f7d364a08220b052f0c81003e9c8c5 jdk-9+140\n-9aadd2163b568d76f8969ad2fb404a63733da359 jdk-9+141\n-df0e03e3ca0ed1307793017dfc1a054c8726131c jdk-9+142\n-d62173b931bf5b6bffc6e80a9060bb2e8b8efc75 jdk-9+143\n-31f5023200d42185b70c4c00ba5672391e4642d0 jdk-9+144\n-3ee4e7827413fa5c5c4fca58597b0ad89e921bfb jdk-9+145\n-581331db696a62dd411926ba7fd437252252a71d jdk-9+146\n-f4e854a77aa38749bd90f722b06974a56e7233d5 jdk-9+147\n-5c71ea43933b6c7e8a85eb1a4eb2213011b95d82 jdk-9+148\n-cf139f925da04c8bd7efd33270a0315d72b338d3 jdk-9+149\n-17469f16fbb406ec9f0dd262ce776ab6efbc38f1 jdk-9+150\n-37b95df0042ae0687324e1f7dc4a2519e230e704 jdk-9+151\n-ab2c8b03c3284fcbdd157551a66f807e3a182d9b jdk-9+152\n-d7034ff7f8e257e81c9f95c7785dd4eaaa3c2afc jdk-9+153\n-8c70d170e62c0c58b5bc3ba666bd140399b98c9c jdk-10+0\n-45b751afd11e6c05991cf4913c5a0ac3304fcc4e jdk-9+154\n-f4aff695ffe05cfdb69d8af25a4ddc6a029754ea jdk-9+155\n-06bce0388880b5ff8e040e4a9d72a3ea11dac321 jdk-9+156\n-74116beae88a8f17a80301aa6c83865c82f10ece jdk-10+1\n-4a79ad46e578112fce68f1af9dd931025cc235cb jdk-10+2\n-d1cab6c7e608479be4ebfad48a25b0ed48600f62 jdk-10+3\n-02253db2ace1422f576f58502fc7831ead77424b jdk-10+4\n-f113ce12fe24fbd24acf02711372d9f1e1c12426 jdk-10+5\n-1407b19a2ddf6baae162f5a1a5b96af473f4d7d1 jdk-10+6\n-30e75693ae99fd8e47fd2f5116527aff1b59aff9 jdk-10+7\n-c42dc7b58b4d4301ea676a76326fd9bbd403d595 jdk-10+8\n-aa5b01f5e5620438fd39efdb2e2f6365a2c7d898 jdk-10+9\n-b0f2b8ff25a2209b2c807785d75f20e5086bbfc2 jdk-10+10\n-036dbf8b381798e5d31065109714d04d97bf98a4 jdk-10+11\n-e6d70017f5b9adbb2ec82d826973d0251800a3c3 jdk-10+12\n-9927a9f16738e240ab7014f0118f41e314ef8f99 jdk-10+13\n-9ef5029b247b4d940080417a287440bbdbab995b jdk-10+14\n-878e216039322cb3f0ecbd0944642a2b4e2593f3 jdk-10+15\n-4bbea012e5676e8025ade2bcfab4d6581e6e9f4b jdk-10+16\n-7db699468b4f84abbcc01647e5a964409737411a jdk-10+17\n-3739654290616e533fc6f51bf9ad69ed47a6abba jdk-10+18\n-14df107500cc3b8ab238c3e4ad2c74e12bfe6067 jdk-10+19\n-4586bc5d28d13d3147b993e6237eaf29a7073bbb jdk-10+20\n-a85884d55ce32799f5c7382b7ea4839052b362a2 jdk-10+21\n-e5357aa85dadacc6562175ff74714fecfb4470cf jdk-10+22\n-22850b3a55240253841b9a425ad60a7fcdb22d47 jdk-10+23\n-3b201865d5c1f244f555cad58da599c9261286d8 jdk-10+24\n-8eb5e3ccee560c28ac9b1df2670adac2b3d36fad jdk-10+25\n-1129253d3bc728a2963ba411ab9dd1adf358fb6b jdk-10+26\n-b87d7b5d5dedc1185e5929470f945b7378cdb3ad jdk-10+27\n-92f08900cb3c0d694e5c529a676c1c9e5909193f jdk-10+28\n-a6e591e12f122768f675428e1e5a838fd0e9c7ec jdk-10+29\n-8fee80b92e65149f7414250fd5e34b6f35d417b4 jdk-10+30\n-e6278add9ff28fab70fe1cc4c1d65f7363dc9445 jdk-10+31\n-a2008587c13fa05fa2dbfcb09fe987576fbedfd1 jdk-10+32\n-bbd692ad4fa300ecca7939ffbe3b1d5e52a28cc6 jdk-10+33\n-89deac44e51517841491ba86ff44aa82a5ca96b3 jdk-10+34\n-d8c634b016c628622c9abbdc6bf50509e5dedbec jdk-10+35\n-0ee20aad71c4f33c426372b4c8bcc1235ce2ec08 jdk-11+0\n-959f2f7cbaa6d2ee45d50029744efb219721576c jdk-10+36\n-4f830b447edf04fb4a52151a5ad44d9bb60723cd jdk-10+37\n-e569e83139fdfbecfeb3cd9014d560917787f158 jdk-10+38\n-5b834ec962366e00d4445352a999a3ac14e26f64 jdk-10+39\n-860326263d1f6a83996d7da0f4c66806ae4aa1eb jdk-10+40\n-3eae36c6baa5f916a3024cf1513e22357e00185d jdk-10+41\n-4b62b815b4f49970b91a952929cf50115c263cb3 jdk-10+42\n-107413b070b92c88bde6230ceb4a19b579781068 jdk-10+43\n-dfa46cfe56346884a61efdc30dc50f7505d66761 jdk-11+1\n-03ae177c26b016353e5ea1cab6ffd051dfa086ca jdk-11+2\n-663f20fc51091bd7f95d18448850ba091207b7bd jdk-10+44\n-4f96cf952e71cb8a127334494faf28880c26181b jdk-10+45\n-1fd4d6068f54561cfc67d54fc9ca84af7212c4f8 jdk-11+3\n-e59941f7247d451fa7df9eaef3fce0f492f8420c jdk-11+4\n-d5c43e9f08fb9a7c74aae0d48daf17f2ad2afaef jdk-11+5\n-3acb379b86725c47e7f33358cb22efa8752ae532 jdk-11+6\n-f7363de371c9a1f668bd0a01b7df3d1ddb9cc58b jdk-11+7\n-755e1b55a4dff510f9639cdb5c5e82549a7e09b3 jdk-11+8\n-0c3e252cea44f06aef570ef464950ab97c669970 jdk-11+9\n-6fa770f9f8ab296e1ce255ec17ccf6d4e1051886 jdk-10+46\n-69d7398038c54774d9395b6810e0cca335edc02c jdk-11+10\n-e1e60f75cd39312a7f59d2a4f91d624e5aecc95e jdk-11+11\n-3ab6ba9f94a9045a526d645af26c933235371d6f jdk-11+12\n-758deedaae8406ae60147486107a54e9864aa7b0 jdk-11+13\n-3595bd343b65f8c37818ebe6a4c343ddeb1a5f88 jdk-11+14\n-a11c1cb542bbd1671d25b85efe7d09b983c48525 jdk-11+15\n-02934b0d661b82b7fe1052a04998d2091352e08d jdk-11+16\n-64e4b1686141e57a681936a8283983341484676e jdk-11+17\n-e1b3def126240d5433902f3cb0e91a4c27f6db50 jdk-11+18\n-36ca515343e00b021dcfc902e986d26ec994a2e5 jdk-11+19\n-95aad0c785e497f1bade3955c4e4a677b629fa9d jdk-12+0\n-9816d7cc655e53ba081f938b656e31971b8f097a jdk-11+20\n-14708e1acdc3974f4539027cbbcfa6d69f83cf51 jdk-11+21\n-00b16d0457e43d23f6ca5ade6b243edce62750a0 jdk-12+1\n-9937ef7499dcd7673714517fd5e450410c14ba4e jdk-11+22\n-69b438908512d3dfef5852c6a843a5778333a309 jdk-12+2\n-1edcf36fe15f79d6228d1a63eb680878e2386480 jdk-11+23\n-990db216e7199b2ba9989d8fa20b657e0ca7d969 jdk-12+3\n-ea900a7dc7d77dee30865c60eabd87fc24b1037c jdk-11+24\n-499b873761d8e8a1cc4aa649daf04cbe98cbce77 jdk-12+4\n-331888ea4a788df801b1edf8836646cd25fc758b jdk-11+25\n-f8696e0ab9b795030429fc3374ec03e378fd9ed7 jdk-12+5\n-945ba9278a272a5477ffb1b3ea1b04174fed8036 jdk-11+26\n-7939b3c4e4088bf4f70ec5bbd8030393b653372f jdk-12+6\n-9d7d74c6f2cbe522e39fa22dc557fdd3f79b32ad jdk-11+27\n-ef57958c7c511162da8d9a75f0b977f0f7ac464e jdk-12+7\n-76072a077ee1d815152d45d1692c4b36c53c5c49 jdk-11+28\n-492b366f8e5784cc4927c2c98f9b8a3f16c067eb jdk-12+8\n-31b159f30fb281016c5f0c103552809aeda84063 jdk-12+9\n-8f594f75e0547d4ca16649cb3501659e3155e81b jdk-12+10\n-f0f5d23449d31f1b3580c8a73313918cafeaefd7 jdk-12+11\n-15094d12a632f452a2064318a4e416d0c7a9ce0c jdk-12+12\n-511a9946f83e3e3c7b9dbe1840367063fb39b4e1 jdk-12+13\n-8897e41b327c0a5601c6ba2bba5d07f15a3ffc91 jdk-12+14\n-8897e41b327c0a5601c6ba2bba5d07f15a3ffc91 jdk-12+14\n-6f04692c7d5137ee34a6bd94c0c8a6c9219cb127 jdk-12+14\n-f8626bcc169813a4b2a15880386b952719d1d6d1 jdk-12+15\n-199658d1ef860cdc17055b4fd3e94b057f292fe9 jdk-12+16\n-eefa65e142af305923d2adcd596fab9c639723a1 jdk-12+17\n-e38473506688e0995e701fc7f77d5a91b438ef93 jdk-12+18\n-dc1f9dec2018a37fedba47d8a2aedef99faaec64 jdk-12+19\n-40098289d5804c3b5e7074bc75501a81e70d9b0d jdk-12+20\n-f8fb0c86f2b3d24294d39c5685a628e1beb14ba7 jdk-12+21\n-732bec44c89e8b93a38296bf690f97b7230c5b6d jdk-12+22\n-eef755718cb24813031a842bbfc716a6cea18e9a jdk-12+23\n-cc4098b3bc10d1c390384289025fea7b0d4b9e93 jdk-13+0\n-7d4397b43fa305806160785a4c7210600d59581a jdk-12+24\n-11033c4ada542f9c9a873314b6ecf60af19e8256 jdk-13+1\n-7496df94b3b79f3da53925d2d137317715f11d97 jdk-12+25\n-50677f43ac3df9a8684222b8893543c60f3aa0bd jdk-13+2\n-de9fd809bb475401aad188eab2264226788aad81 jdk-12+26\n-642346a11059b9f283110dc301a24ed43b76a94e jdk-13+3\n-f15d443f97318e9b40e6f451e327ff69ed4ec361 jdk-12+27\n-a47b8125b7cc9ef59619745c163975fe935b57ed jdk-13+4\n-659b004b6a1bd8c31e766cbdf328d8f8473fd4d7 jdk-12+28\n-e3ed960609927b5fdfd0a797159835cd83a81a31 jdk-13+5\n-44f41693631f9b5ac78ff4d2bfabd6734fe46df2 jdk-12+29\n-b5f05fe4a6f8b3996a000c20078b356d991ca8ec jdk-13+6\n-6c377af36a5c4203f16aed8a5e4c2ecc08fcd8bd jdk-12+30\n-021917019cda1c0c5853255322274f37693a2431 jdk-13+7\n-b5f7bb57de2f797be34f6c75d45c3245ad37ab97 jdk-12+31\n-a535ba736cabc6886acdff36de3a096c46e5ddc5 jdk-13+8\n-4ce47bc1fb92cf94c6e3d1f49d582f02dcb851ab jdk-12+32\n-c081f3ea6b9300265a4a34e38f970b1e3ddaae9f jdk-13+9\n-b67884871b5fff79c5ef3eb8ac74dd48d71ea9b1 jdk-12+33\n-8e069f7b4fabfe05d9f500783e6d56cb0196d25c jdk-13+10\n-21ea4076a275a0f498afa517e9ee1b94a9cf0255 jdk-13+11\n-1d7aec80147a6d92b101a76aef92f3ddc88bedf4 jdk-13+12\n-b67884871b5fff79c5ef3eb8ac74dd48d71ea9b1 jdk-12-ga\n-83cace4142c8563b6a921787db02388e1bc48d01 jdk-13+13\n-46cf212cdccaf4fb064d913b12004007d3322b67 jdk-13+14\n-f855ec13aa2501ae184c8b3e0626a8cec9966116 jdk-13+15\n-9d0ae9508d5337b0dc7cc4684be42888c4023755 jdk-13+16\n-93b702d2a0cb9e32160208f6700aede1f8492773 jdk-13+17\n-bebb82ef3434a25f8142edafec20165f07ac562d jdk-13+18\n-a43d6467317d8f1e160f67aadec37919c9d64443 jdk-13+19\n-6ccc7cd7931e34129f6b7e04988fc9a63958dde0 jdk-13+20\n-f2f11d7f7f4e7128f8aba6ffa576cfa76fbf7d1a jdk-13+21\n-181986c5476468bc2dd4532af49599003ee8af37 jdk-13+22\n-b034d2dee5fc93d42a81b65e58ce3f91e42586ff jdk-13+23\n-7e2238451585029680f126ccbb46d01f2ff5607f jdk-13+24\n-22b3b7983adab54e318f75aeb94471f7a4429c1e jdk-14+0\n-22b3b7983adab54e318f75aeb94471f7a4429c1e jdk-13+25\n-2f4e214781a1d597ed36bf5a36f20928c6c82996 jdk-14+1\n-0692b67f54621991ba7afbf23e55b788f3555e69 jdk-13+26\n-43627549a488b7d0b4df8fad436e36233df89877 jdk-14+2\n-b7f68ddec66f996ae3aad03291d129ca9f02482d jdk-13+27\n-e64383344f144217c36196c3c8a2df8f588a2af3 jdk-14+3\n-1e95931e7d8fa7e3899340a9c7cb28dbea50c10c jdk-13+28\n-19d0b382f0869f72d4381b54fa129f1c74b6e766 jdk-14+4\n-3081f39a3d30d63b112098386ac2bb027c2b7223 jdk-13+29\n-0f1e29c77e50c7da11d83df410026392c4d1a28c jdk-14+5\n-2e63fb0a885fa908a97bbb0da8d7c3de11536aca jdk-13+30\n-443f7359b34d60e7821216ffc60f88b6ffe0ccdd jdk-14+6\n-6a159c6c23ccd0029140ab91653442e412305ce5 jdk-13+31\n-28ab01c067551ef158abaef08e154e1051ca0893 jdk-14+7\n-929f37a9c35d530d4e866f6e832001aeb4cfb371 jdk-13+32\n-c0023e364b6f130cb1e93747b796d8718d544db1 jdk-14+8\n-9c250a7600e12bdb1e611835250af3204d4aa152 jdk-13+33\n-18f189e69b29f8215a3500b875127ed4fb2d977a jdk-14+9\n-ececb6dae777e622abda42c705fd984a42f46b5a jdk-14+10\n-bf4c808a4488025a415f867e54c8b088417e08a0 jdk-14+11\n-8570f22b9b6ac6bec673899b582150865696e425 jdk-14+12\n-fbbe6672ae15deaf350a9e935290a36f57ba9c25 jdk-14+13\n-cddef3bde924f3ff4f17f3d369280cf69d0450e5 jdk-14+14\n-9c250a7600e12bdb1e611835250af3204d4aa152 jdk-13-ga\n-778fc2dcbdaa8981e07e929a2cacef979c72261e jdk-14+15\n-d29f0181ba424a95d881aba5eabf2e393abcc70f jdk-14+16\n-5c83830390baafb76a1fbe33443c57620bd45fb9 jdk-14+17\n-e84d8379815ba0d3e50fb096d28c25894cb50b8c jdk-14+18\n-9b67dd88a9313e982ec5f710a7747161bc8f0c23 jdk-14+19\n-54ffb15c48399dd59922ee22bb592d815307e77c jdk-14+20\n-c16ac7a2eba4e73cb4f7ee9294dd647860eebff0 jdk-14+21\n-83810b7d12e7ff761ad3dd91f323a22dad96f108 jdk-14+22\n-15936b142f86731afa4b1a2c0fe4a01e806c4944 jdk-14+23\n-438337c846fb071900ddb6922bddf8b3e895a514 jdk-14+24\n-17d242844fc9e7d18b3eac97426490a9c246119e jdk-14+25\n-288777cf0702914e5266bc1e5d380eed9032ca41 jdk-14+26\n-2c724dba4c3cf9516b2152e151c9aea66b21b30b jdk-15+0\n-91a3f092682fc715d991a87eb6ec6f28886d2035 jdk-14+27\n-63e17cf29bed191ea21020b4648c9cdf893f80f5 jdk-15+1\n-2069b4bfd23b56b6fc659fba8b75aaaa23debbe0 jdk-14+28\n-f33197adda9ad82fdef46ac0f7dc0126204f35b2 jdk-15+2\n-563fa900fa17c290ae516c7a3a69e8c069dde304 jdk-14+29\n-d05fcdf25717d85e80a3a39a6b719458b22be5fe jdk-15+3\n-d54ce919da90dab361995bb4d87be9851f00537a jdk-14+30\n-bb0a7975b31ded63d594ee8dbfc4d4ead587f79b jdk-15+4\n-decd3d2953b640f1043ee76953ff89238bff92e8 jdk-14+31\n-b97c1773ccafae4a8c16cc6aedb10b2a4f9a07ed jdk-15+5\n-2776da28515e087cc8849acf1e131a65ea7e77b6 jdk-14+32\n-ef7d53b4fccd4a0501b17d974e84f37aa99fa813 jdk-15+6\n-f728b6c7f4910d6bd6070cb4dde8393f4ba95113 jdk-14+33\n-e2bc57500c1b785837982f7ce8af6751387ed73b jdk-15+7\n-a96bc204e3b31ddbf909b20088964112f052927e jdk-14+34\n-c7d4f2849dbfb755fc5860b362a4044ea0c9e082 jdk-15+8\n-4a87bb7ebfd7f6a25ec59a5982fe3607242777f8 jdk-14+35\n-62b5bfef8d618e08e6f3a56cf1fb0e67e89e9cc2 jdk-15+9\n-bc54620a3848c26cff9766e5e2a6e5ddab98ed18 jdk-14+36\n-1bee69801aeea1a34261c93f35bc9de072a98704 jdk-15+10\n-b2dd4028a6de4e40dda8b76109e4b5c6b294f980 jdk-15+11\n-2ec0ff3042630ddbd3587e340fe0dd40391cb6c4 jdk-15+12\n-1c06a8ee8acad4d93c782626a233693a73de0add jdk-15+13\n-1d6ceb13e142665ea833fca01c8c8598e0ddd211 jdk-15+14\n-bc54620a3848c26cff9766e5e2a6e5ddab98ed18 jdk-14-ga\n-82b7c62cf4cc56828a8fb724f57087967232a2a7 jdk-15+15\n-5c7ec21f5d13f6eb5cd32288c69b8be2f9cac256 jdk-15+16\n-dd5198db2e5b1ebcafe065d987c03ba9fcb50fc3 jdk-15+17\n-44aef192b488a48cce12422394691a6b1d16b98e jdk-15+18\n-7cc27caabe6e342151e8baf549beb07a9c755ec2 jdk-15+19\n-46bca5e5e6fb26efd07245d26fe96a9c3260f51e jdk-15+20\n-12b55fad80f30d24b1f8fdb3b947ea6465ef9518 jdk-15+21\n-7223c6d610343fd8323af9d07d501e01fa1a7696 jdk-15+22\n-f143729ca00ec14a98ea5c7f73acba88da97746e jdk-15+23\n-497fd9f9129c4928fd5a876dd55e0daf6298b511 jdk-15+24\n-90b266a84c06f1b3dc0ed8767856793e8c1c357e jdk-15+25\n-0a32396f7a690015d22ca3328ac441a358295d90 jdk-15+26\n-93813843680bbe1b7efbca56c03fd137f20a2c31 jdk-16+0\n-93813843680bbe1b7efbca56c03fd137f20a2c31 jdk-15+27\n-4a485c89d5a08b495961835f5308a96038678aeb jdk-16+1\n-06c9f89459daba98395fad726100feb44f89ba71 jdk-15+28\n-bcbe7b8a77b8971bc221c0be1bd2abb6fb68c2d0 jdk-16+2\n-b58fc60580550a4a587cab729d8fd87223ad6932 jdk-15+29\n-76810b3a88c8c641ae3850a8dfd7c40c984aea9d jdk-16+3\n-6909e4a1f25bfe9a2727026f5845fc1fc44a36aa jdk-15+30\n-e2622818f0bd30e736252eba101fe7d2c27f400b jdk-16+4\n-a32f58c6b8be81877411767de7ba9c4cf087c1b5 jdk-15+31\n-143e258f64af490010eb7e0bacc1cfaeceff0993 jdk-16+5\n-2dad000726b8d5db9f3df647fb4949d88f269dd4 jdk-15+32\n-4a8fd81d64bafa523cddb45f82805536edace106 jdk-16+6\n-6b65f4e7a975628df51ef755b02642075390041d jdk-15+33\n-c3a4a7ea7c304cabdacdc31741eb94c51351668d jdk-16+7\n-b0817631d2f4395508cb10e81c3858a94d9ae4de jdk-15+34\n-0a73d6f3aab48ff6d7e61e47f0bc2d87a054f217 jdk-16+8\n-fd60c3146a024037cdd9be34c645bb793995a7cc jdk-15+35\n-c075a286cc7df767cce28e8057d6ec5051786490 jdk-16+9\n-b01985b4f88f554f97901e53e1ba314681dd9c19 jdk-16+10\n-e3f940bd3c8fcdf4ca704c6eb1ac745d155859d5 jdk-15+36\n-5c18d696c7ce724ca36df13933aa53f50e12b9e0 jdk-16+11\n-fc8e62b399bd93d06e8d13dc3b384c450e853dcd jdk-16+12\n-fd07cdb26fc70243ef23d688b545514f4ddf1c2b jdk-16+13\n-36b29df125dc88f11657ce93b4998aa9ff5f5d41 jdk-16+14\n","filename":".hgtags","additions":0,"deletions":664,"binary":false,"changes":664,"status":"deleted"},{"patch":"@@ -197,0 +197,2 @@\n+<h4 id=\"repeat_count\">REPEAT_COUNT<\/h4>\n+<p>Repeat the tests for a set number of times. Defaults to 0.<\/p>\n","filename":"doc\/testing.html","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -424,0 +424,4 @@\n+#### REPEAT_COUNT\n+\n+Repeat the tests for a set number of times. Defaults to 0.\n+\n","filename":"doc\/testing.md","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-      EXCLUDES := sun, \\\n+      EXCLUDES := sun javax\/tools\/snippet-files, \\\n","filename":"make\/CompileInterimLangtools.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-        RETRY_COUNT MAX_OUTPUT $(CUSTOM_JTREG_SINGLE_KEYWORDS), \\\n+        RETRY_COUNT REPEAT_COUNT MAX_OUTPUT $(CUSTOM_JTREG_SINGLE_KEYWORDS), \\\n@@ -748,0 +748,9 @@\n+  JTREG_REPEAT_COUNT ?= 0\n+\n+  ifneq ($$(JTREG_RETRY_COUNT), 0)\n+    ifneq ($$(JTREG_REPEAT_COUNT), 0)\n+      $$(info Error: Cannot use both JTREG_RETRY_COUNT and JTREG_REPEAT_COUNT together.)\n+      $$(info Please choose one or the other.)\n+      $$(error Cannot continue)\n+    endif\n+  endif\n@@ -872,0 +881,12 @@\n+  ifneq ($$(JTREG_REPEAT_COUNT), 0)\n+    $1_COMMAND_LINE := \\\n+        for i in {1..$$(JTREG_REPEAT_COUNT)}; do \\\n+          $$(PRINTF) \"\\nRepeating Jtreg run: $$$$i out of $$(JTREG_REPEAT_COUNT)\\n\"; \\\n+          $$($1_COMMAND_LINE); \\\n+          if [ \"`$$(CAT) $$($1_EXITCODE)`\" != \"0\" ]; then \\\n+            $$(PRINTF) \"\\nFailures detected, no more repeats.\\n\"; \\\n+            break; \\\n+          fi; \\\n+        done\n+  endif\n+\n","filename":"make\/RunTests.gmk","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -65,5 +65,1 @@\n-    ifeq ($(call isTargetOs, windows), false)\n-\t$1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(call SET_SHARED_LIBRARY_ORIGIN) -pthread\n-    else\n-\t$1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(call SET_SHARED_LIBRARY_ORIGIN)\n-    endif\n+    $1_LDFLAGS := $(LDFLAGS_JDKLIB) $$(call SET_SHARED_LIBRARY_ORIGIN)\n","filename":"make\/common\/TestFilesCompilation.gmk","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-DEFAULT_VERSION_FEATURE=18\n+DEFAULT_VERSION_FEATURE=19\n@@ -36,2 +36,2 @@\n-DEFAULT_VERSION_DATE=2022-03-22\n-DEFAULT_VERSION_CLASSFILE_MAJOR=62  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n+DEFAULT_VERSION_DATE=2022-09-20\n+DEFAULT_VERSION_CLASSFILE_MAJOR=63  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n@@ -40,2 +40,2 @@\n-DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"17 18\"\n-DEFAULT_JDK_SOURCE_TARGET_VERSION=18\n+DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"17 18 19\"\n+DEFAULT_JDK_SOURCE_TARGET_VERSION=19\n","filename":"make\/conf\/version-numbers.conf","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -150,0 +150,1 @@\n+JVM_IsFinalizationEnabled\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/acl,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/acl,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n@@ -637,0 +637,10 @@\n+class name jdk\/internal\/event\/Event\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor ()V flags 4\n+method name begin descriptor ()V flags 1\n+method name end descriptor ()V flags 1\n+method name commit descriptor ()V flags 1\n+method name isEnabled descriptor ()Z flags 1\n+method name shouldCommit descriptor ()Z flags 1\n+method name set descriptor (ILjava\/lang\/Object;)V flags 1\n+\n","filename":"make\/data\/symbols\/java.base-C.sym.txt","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n@@ -212,6 +212,0 @@\n-method name tryWriteLock descriptor ()J flags 1\n-method name writeLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n-method name tryReadLock descriptor ()J flags 1\n-method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J thrownTypes java\/lang\/InterruptedException flags 1\n-method name readLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n-method name unlock descriptor (J)V flags 1\n@@ -224,0 +218,6 @@\n+method name tryWriteLock descriptor ()J flags 1\n+method name writeLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name tryReadLock descriptor ()J flags 1\n+method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J thrownTypes java\/lang\/InterruptedException flags 1\n+method name readLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name unlock descriptor (J)V flags 1\n","filename":"make\/data\/symbols\/java.base-E.sym.txt","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+module name java.base\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n+\n@@ -680,1 +683,0 @@\n-field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -682,0 +684,1 @@\n+field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -1172,0 +1175,110 @@\n+class name jdk\/internal\/event\/Event\n+header extends java\/lang\/Object flags 421\n+-method name <init> descriptor ()V\n+-method name begin descriptor ()V\n+-method name end descriptor ()V\n+-method name commit descriptor ()V\n+-method name isEnabled descriptor ()Z\n+-method name shouldCommit descriptor ()Z\n+-method name set descriptor (ILjava\/lang\/Object;)V\n+method name <init> descriptor ()V flags 4\n+method name begin descriptor ()V flags 1\n+method name end descriptor ()V flags 1\n+method name commit descriptor ()V flags 1\n+method name isEnabled descriptor ()Z flags 1\n+method name shouldCommit descriptor ()Z flags 1\n+method name set descriptor (ILjava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+header extends java\/lang\/Object nestMembers jdk\/internal\/vm\/vector\/VectorSupport$VectorMask,jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle,jdk\/internal\/vm\/vector\/VectorSupport$Vector,jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload,jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies flags 21\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+field name VECTOR_OP_ABS descriptor I constantValue 0 flags 19\n+field name VECTOR_OP_NEG descriptor I constantValue 1 flags 19\n+field name VECTOR_OP_SQRT descriptor I constantValue 2 flags 19\n+field name VECTOR_OP_ADD descriptor I constantValue 4 flags 19\n+field name VECTOR_OP_SUB descriptor I constantValue 5 flags 19\n+field name VECTOR_OP_MUL descriptor I constantValue 6 flags 19\n+field name VECTOR_OP_DIV descriptor I constantValue 7 flags 19\n+field name VECTOR_OP_MIN descriptor I constantValue 8 flags 19\n+field name VECTOR_OP_MAX descriptor I constantValue 9 flags 19\n+field name VECTOR_OP_AND descriptor I constantValue 10 flags 19\n+field name VECTOR_OP_OR descriptor I constantValue 11 flags 19\n+field name VECTOR_OP_XOR descriptor I constantValue 12 flags 19\n+field name VECTOR_OP_FMA descriptor I constantValue 13 flags 19\n+field name VECTOR_OP_LSHIFT descriptor I constantValue 14 flags 19\n+field name VECTOR_OP_RSHIFT descriptor I constantValue 15 flags 19\n+field name VECTOR_OP_URSHIFT descriptor I constantValue 16 flags 19\n+field name VECTOR_OP_CAST descriptor I constantValue 17 flags 19\n+field name VECTOR_OP_REINTERPRET descriptor I constantValue 18 flags 19\n+field name BT_eq descriptor I constantValue 0 flags 19\n+field name BT_ne descriptor I constantValue 4 flags 19\n+field name BT_le descriptor I constantValue 5 flags 19\n+field name BT_ge descriptor I constantValue 7 flags 19\n+field name BT_lt descriptor I constantValue 3 flags 19\n+field name BT_gt descriptor I constantValue 1 flags 19\n+field name BT_overflow descriptor I constantValue 2 flags 19\n+field name BT_no_overflow descriptor I constantValue 6 flags 19\n+field name T_FLOAT descriptor I constantValue 6 flags 19\n+field name T_DOUBLE descriptor I constantValue 7 flags 19\n+field name T_BYTE descriptor I constantValue 8 flags 19\n+field name T_SHORT descriptor I constantValue 9 flags 19\n+field name T_INT descriptor I constantValue 10 flags 19\n+field name T_LONG descriptor I constantValue 11 flags 19\n+method name <init> descriptor ()V flags 1\n+method name broadcastCoerced descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;IJLjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;IJTS;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation<TVM;TE;TS;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name shuffleIota descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle; flags 9 signature <E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;TS;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation<TE;TS;>;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name shuffleToVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;Sh:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;TSh;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation<TVM;TSh;TE;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name indexVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TE;>;ITV;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation<TV;TE;TS;>;)TV;\n+method name reductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/util\/function\/Function;)J flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITV;Ljava\/util\/function\/Function<TV;Ljava\/lang\/Long;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name extract descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITV;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp<TV;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name insert descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<*>;ITV;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp<TV;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name unaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<*>;ITVM;Ljava\/util\/function\/Function<TVM;TVM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name binaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<*>;ITVM;TVM;Ljava\/util\/function\/BiFunction<TVM;TVM;TVM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name ternaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<*>;ITVM;TVM;TVM;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation<TVM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name load descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation;)Ljava\/lang\/Object; flags 9 signature <C:Ljava\/lang\/Object;VM:Ljava\/lang\/Object;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Object;JTC;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation<TC;TVM;TE;TS;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name loadWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;W:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Class<*>;Ljava\/lang\/Object;JTW;TC;I[IITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap<TC;TV;TE;TS;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name store descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperation;)V flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ILjava\/lang\/Object;JTV;TC;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperation<TC;TV;>;)V runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name storeWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap;)V flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;W:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ILjava\/lang\/Class<*>;Ljava\/lang\/Object;JTW;TV;TC;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap<TC;TV;>;)V runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name test descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Z flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITVM;TVM;Ljava\/util\/function\/BiFunction<TVM;TVM;Ljava\/lang\/Boolean;>;)Z runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name compare descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<*>;ITV;TV;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp<TV;TM;>;)TM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name rearrangeOp descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;Sh:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TSh;>;Ljava\/lang\/Class<*>;ITV;TSh;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp<TV;TSh;TE;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name blend descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<*>;ITV;TV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp<TV;TM;TE;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name broadcastInt descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<*>;ITV;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp<TV;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name convert descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorConvertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload; flags 9 signature <VOUT:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;VIN:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<*>;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITVIN;TS;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorConvertOp<TVOUT;TVIN;TS;>;)TVOUT; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name maybeRebox descriptor (Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 9 signature <V:Ljava\/lang\/Object;>(TV;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name getMaxLaneCount descriptor (Ljava\/lang\/Class;)I flags 109 signature (Ljava\/lang\/Class<*>;)I\n+method name isNonCapturingLambda descriptor (Ljava\/lang\/Object;)Z flags 9\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$Vector\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorMask\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload\n+header extends java\/lang\/Object nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+method name getPayload descriptor ()Ljava\/lang\/Object; flags 14\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies\n+header extends java\/lang\/Object nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+method name <init> descriptor ()V flags 1\n+\n","filename":"make\/data\/symbols\/java.base-G.sym.txt","additions":115,"deletions":2,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n@@ -117,1 +117,0 @@\n-method name getSecurityManager descriptor ()Ljava\/lang\/SecurityManager; flags 9 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"17\")\n@@ -119,0 +118,1 @@\n+method name getSecurityManager descriptor ()Ljava\/lang\/SecurityManager; flags 9 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"17\")\n@@ -316,1 +316,0 @@\n-field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -318,0 +317,1 @@\n+field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -473,1 +473,0 @@\n-method name split descriptor ()Ljava\/util\/random\/RandomGenerator$SplittableGenerator; flags 1041\n@@ -475,0 +474,1 @@\n+method name split descriptor ()Ljava\/util\/random\/RandomGenerator$SplittableGenerator; flags 1041\n@@ -931,0 +931,29 @@\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+field name VECTOR_OP_MASK_TRUECOUNT descriptor I constantValue 19 flags 19\n+field name VECTOR_OP_MASK_FIRSTTRUE descriptor I constantValue 20 flags 19\n+field name VECTOR_OP_MASK_LASTTRUE descriptor I constantValue 21 flags 19\n+field name VECTOR_OP_TAN descriptor I constantValue 101 flags 19\n+field name VECTOR_OP_TANH descriptor I constantValue 102 flags 19\n+field name VECTOR_OP_SIN descriptor I constantValue 103 flags 19\n+field name VECTOR_OP_SINH descriptor I constantValue 104 flags 19\n+field name VECTOR_OP_COS descriptor I constantValue 105 flags 19\n+field name VECTOR_OP_COSH descriptor I constantValue 106 flags 19\n+field name VECTOR_OP_ASIN descriptor I constantValue 107 flags 19\n+field name VECTOR_OP_ACOS descriptor I constantValue 108 flags 19\n+field name VECTOR_OP_ATAN descriptor I constantValue 109 flags 19\n+field name VECTOR_OP_ATAN2 descriptor I constantValue 110 flags 19\n+field name VECTOR_OP_CBRT descriptor I constantValue 111 flags 19\n+field name VECTOR_OP_LOG descriptor I constantValue 112 flags 19\n+field name VECTOR_OP_LOG10 descriptor I constantValue 113 flags 19\n+field name VECTOR_OP_LOG1P descriptor I constantValue 114 flags 19\n+field name VECTOR_OP_POW descriptor I constantValue 115 flags 19\n+field name VECTOR_OP_EXP descriptor I constantValue 116 flags 19\n+field name VECTOR_OP_EXPM1 descriptor I constantValue 117 flags 19\n+field name VECTOR_OP_HYPOT descriptor I constantValue 118 flags 19\n+field name BT_unsigned_compare descriptor I constantValue 16 flags 19\n+field name BT_ule descriptor I constantValue 21 flags 19\n+field name BT_uge descriptor I constantValue 23 flags 19\n+field name BT_ult descriptor I constantValue 19 flags 19\n+field name BT_ugt descriptor I constantValue 17 flags 19\n+method name maskReductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp;)I flags 9 signature <E:Ljava\/lang\/Object;M:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TM;>;Ljava\/lang\/Class<*>;ITM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp<TM;>;)I runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n","filename":"make\/data\/symbols\/java.base-H.sym.txt","additions":33,"deletions":4,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,742 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.base\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/InetAddressResolverProvider,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n+\n+class name java\/io\/FileInputStream\n+method name transferTo descriptor (Ljava\/io\/OutputStream;)J thrownTypes java\/io\/IOException flags 1\n+\n+class name java\/io\/ObjectInputStream$GetField\n+-method name get descriptor (Ljava\/lang\/String;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n+method name get descriptor (Ljava\/lang\/String;Ljava\/lang\/Object;)Ljava\/lang\/Object; thrownTypes java\/io\/IOException,java\/lang\/ClassNotFoundException flags 401\n+\n+class name java\/io\/PrintStream\n+header extends java\/io\/FilterOutputStream implements java\/lang\/Appendable,java\/io\/Closeable flags 21\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+method name charset descriptor ()Ljava\/nio\/charset\/Charset; flags 1\n+\n+class name java\/lang\/AbstractStringBuilder\n+header extends java\/lang\/Object implements java\/lang\/Appendable,java\/lang\/CharSequence flags 420\n+innerclass innerClass java\/util\/Spliterator$OfInt outerClass java\/util\/Spliterator innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/Compiler\n+header extends java\/lang\/Object flags 31 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name java\/lang\/Deprecated\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;eLjava\/lang\/annotation\/ElementType;FIELD;eLjava\/lang\/annotation\/ElementType;LOCAL_VARIABLE;eLjava\/lang\/annotation\/ElementType;METHOD;eLjava\/lang\/annotation\/ElementType;PACKAGE;eLjava\/lang\/annotation\/ElementType;MODULE;eLjava\/lang\/annotation\/ElementType;PARAMETER;eLjava\/lang\/annotation\/ElementType;TYPE;})\n+\n+class name java\/lang\/Enum\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V flags 14 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"18\")\n+\n+class name java\/lang\/IllegalCallerException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/LayerInstantiationException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/Math\n+method name divideExact descriptor (II)I flags 9\n+method name divideExact descriptor (JJ)J flags 9\n+method name floorDivExact descriptor (II)I flags 9\n+method name floorDivExact descriptor (JJ)J flags 9\n+method name ceilDivExact descriptor (II)I flags 9\n+method name ceilDivExact descriptor (JJ)J flags 9\n+method name unsignedMultiplyHigh descriptor (JJ)J flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name ceilDiv descriptor (II)I flags 9\n+method name ceilDiv descriptor (JI)J flags 9\n+method name ceilDiv descriptor (JJ)J flags 9\n+method name ceilMod descriptor (II)I flags 9\n+method name ceilMod descriptor (JI)I flags 9\n+method name ceilMod descriptor (JJ)J flags 9\n+\n+class name java\/lang\/NamedPackage\n+header extends java\/lang\/Object flags 20\n+\n+class name java\/lang\/Object\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name java\/lang\/Runtime\n+-method name exec descriptor (Ljava\/lang\/String;)Ljava\/lang\/Process;\n+-method name exec descriptor (Ljava\/lang\/String;[Ljava\/lang\/String;)Ljava\/lang\/Process;\n+-method name exec descriptor (Ljava\/lang\/String;[Ljava\/lang\/String;Ljava\/io\/File;)Ljava\/lang\/Process;\n+-method name runFinalization descriptor ()V\n+method name exec descriptor (Ljava\/lang\/String;)Ljava\/lang\/Process; thrownTypes java\/io\/IOException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")\n+method name exec descriptor (Ljava\/lang\/String;[Ljava\/lang\/String;)Ljava\/lang\/Process; thrownTypes java\/io\/IOException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")\n+method name exec descriptor (Ljava\/lang\/String;[Ljava\/lang\/String;Ljava\/io\/File;)Ljava\/lang\/Process; thrownTypes java\/io\/IOException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")\n+method name runFinalization descriptor ()V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"18\")\n+\n+class name java\/lang\/StrictMath\n+method name divideExact descriptor (II)I flags 9\n+method name divideExact descriptor (JJ)J flags 9\n+method name floorDivExact descriptor (II)I flags 9\n+method name floorDivExact descriptor (JJ)J flags 9\n+method name ceilDivExact descriptor (II)I flags 9\n+method name ceilDivExact descriptor (JJ)J flags 9\n+method name unsignedMultiplyHigh descriptor (JJ)J flags 9\n+method name ceilDiv descriptor (II)I flags 9\n+method name ceilDiv descriptor (JI)J flags 9\n+method name ceilDiv descriptor (JJ)J flags 9\n+method name ceilMod descriptor (II)I flags 9\n+method name ceilMod descriptor (JI)I flags 9\n+method name ceilMod descriptor (JJ)J flags 9\n+\n+class name java\/lang\/SuppressWarnings\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;TYPE;eLjava\/lang\/annotation\/ElementType;FIELD;eLjava\/lang\/annotation\/ElementType;METHOD;eLjava\/lang\/annotation\/ElementType;PARAMETER;eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;eLjava\/lang\/annotation\/ElementType;LOCAL_VARIABLE;eLjava\/lang\/annotation\/ElementType;MODULE;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;SOURCE;)\n+\n+class name java\/lang\/System\n+-method name runFinalization descriptor ()V\n+method name runFinalization descriptor ()V flags 9 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"18\")\n+\n+class name java\/lang\/Thread\n+-method name stop descriptor ()V\n+method name stop descriptor ()V flags 11 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"1.2\")\n+\n+class name java\/lang\/constant\/ClassDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/ConstantDesc,java\/lang\/invoke\/TypeDescriptor$OfField sealed true flags 601 signature Ljava\/lang\/Object;Ljava\/lang\/constant\/ConstantDesc;Ljava\/lang\/invoke\/TypeDescriptor$OfField<Ljava\/lang\/constant\/ClassDesc;>;\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfField outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfField flags 609\n+\n+class name java\/lang\/constant\/ConstantDesc\n+header extends java\/lang\/Object sealed true flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/constant\/DirectMethodHandleDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/MethodHandleDesc nestMembers java\/lang\/constant\/DirectMethodHandleDesc$Kind sealed true flags 601\n+innerclass innerClass java\/lang\/constant\/DirectMethodHandleDesc$Kind outerClass java\/lang\/constant\/DirectMethodHandleDesc innerClassName Kind flags 4019\n+\n+class name java\/lang\/constant\/MethodHandleDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/ConstantDesc sealed true flags 601\n+innerclass innerClass java\/lang\/constant\/DirectMethodHandleDesc$Kind outerClass java\/lang\/constant\/DirectMethodHandleDesc innerClassName Kind flags 4019\n+\n+class name java\/lang\/constant\/MethodTypeDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/ConstantDesc,java\/lang\/invoke\/TypeDescriptor$OfMethod sealed true flags 601 signature Ljava\/lang\/Object;Ljava\/lang\/constant\/ConstantDesc;Ljava\/lang\/invoke\/TypeDescriptor$OfMethod<Ljava\/lang\/constant\/ClassDesc;Ljava\/lang\/constant\/MethodTypeDesc;>;\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfMethod outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfMethod flags 609\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfField outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfField flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/invoke\/CallSite\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/invoke\/LambdaMetafactory\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/invoke\/MethodHandle\n+-method name asType descriptor (Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/MethodHandle;\n+method name asType descriptor (Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/MethodHandle; flags 11\n+\n+class name java\/lang\/invoke\/StringConcatException\n+header extends java\/lang\/Exception flags 21\n+\n+class name java\/lang\/module\/Configuration\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/module\/FindException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/module\/InvalidModuleDescriptorException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/module\/ModuleReader\n+header extends java\/lang\/Object implements java\/io\/Closeable flags 601\n+\n+class name java\/lang\/module\/ModuleReference\n+header extends java\/lang\/Object flags 421\n+\n+class name java\/lang\/module\/ResolutionException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/module\/ResolvedModule\n+header extends java\/lang\/Object flags 31\n+\n+class name java\/lang\/reflect\/AccessibleObject\n+header extends java\/lang\/Object implements java\/lang\/reflect\/AnnotatedElement flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+\n+class name java\/lang\/reflect\/AnnotatedElement\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/reflect\/Executable\n+header extends java\/lang\/reflect\/AccessibleObject implements java\/lang\/reflect\/Member,java\/lang\/reflect\/GenericDeclaration sealed true flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/reflect\/InaccessibleObjectException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/reflect\/Method\n+-method name invoke descriptor (Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;\n+method name invoke descriptor (Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object; thrownTypes java\/lang\/IllegalAccessException,java\/lang\/reflect\/InvocationTargetException flags 81 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/vm\/annotation\/ForceInline;@Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n+class name java\/net\/DatagramSocket\n+header extends java\/lang\/Object implements java\/io\/Closeable flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+\n+class name java\/net\/InetAddress\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/net\/spi\/InetAddressResolver$LookupPolicy outerClass java\/net\/spi\/InetAddressResolver innerClassName LookupPolicy flags 19\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/net\/spi\/InetAddressResolverProvider$Configuration outerClass java\/net\/spi\/InetAddressResolverProvider innerClassName Configuration flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/net\/ServerSocket\n+-method name setSoTimeout descriptor (I)V\n+-method name getSoTimeout descriptor ()I\n+-method name setReceiveBufferSize descriptor (I)V\n+-method name getReceiveBufferSize descriptor ()I\n+method name setSoTimeout descriptor (I)V thrownTypes java\/net\/SocketException flags 1\n+method name getSoTimeout descriptor ()I thrownTypes java\/io\/IOException flags 1\n+method name setReceiveBufferSize descriptor (I)V thrownTypes java\/net\/SocketException flags 1\n+method name getReceiveBufferSize descriptor ()I thrownTypes java\/net\/SocketException flags 1\n+\n+class name java\/net\/SocketImpl\n+header extends java\/lang\/Object implements java\/net\/SocketOptions flags 421\n+\n+class name java\/net\/spi\/InetAddressResolver\n+header extends java\/lang\/Object nestMembers java\/net\/spi\/InetAddressResolver$LookupPolicy flags 601\n+innerclass innerClass java\/net\/spi\/InetAddressResolver$LookupPolicy outerClass java\/net\/spi\/InetAddressResolver innerClassName LookupPolicy flags 19\n+method name lookupByName descriptor (Ljava\/lang\/String;Ljava\/net\/spi\/InetAddressResolver$LookupPolicy;)Ljava\/util\/stream\/Stream; thrownTypes java\/net\/UnknownHostException flags 401 signature (Ljava\/lang\/String;Ljava\/net\/spi\/InetAddressResolver$LookupPolicy;)Ljava\/util\/stream\/Stream<Ljava\/net\/InetAddress;>;\n+method name lookupByAddress descriptor ([B)Ljava\/lang\/String; thrownTypes java\/net\/UnknownHostException flags 401\n+\n+class name java\/net\/spi\/InetAddressResolver$LookupPolicy\n+header extends java\/lang\/Object nestHost java\/net\/spi\/InetAddressResolver flags 31\n+innerclass innerClass java\/net\/spi\/InetAddressResolver$LookupPolicy outerClass java\/net\/spi\/InetAddressResolver innerClassName LookupPolicy flags 19\n+field name IPV4 descriptor I constantValue 1 flags 19\n+field name IPV6 descriptor I constantValue 2 flags 19\n+field name IPV4_FIRST descriptor I constantValue 4 flags 19\n+field name IPV6_FIRST descriptor I constantValue 8 flags 19\n+method name of descriptor (I)Ljava\/net\/spi\/InetAddressResolver$LookupPolicy; flags 9\n+method name characteristics descriptor ()I flags 1\n+\n+class name java\/net\/spi\/InetAddressResolverProvider\n+header extends java\/lang\/Object nestMembers java\/net\/spi\/InetAddressResolverProvider$Configuration flags 421\n+innerclass innerClass java\/net\/spi\/InetAddressResolverProvider$Configuration outerClass java\/net\/spi\/InetAddressResolverProvider innerClassName Configuration flags 609\n+method name get descriptor (Ljava\/net\/spi\/InetAddressResolverProvider$Configuration;)Ljava\/net\/spi\/InetAddressResolver; flags 401\n+method name name descriptor ()Ljava\/lang\/String; flags 401\n+method name <init> descriptor ()V flags 4\n+\n+class name java\/net\/spi\/InetAddressResolverProvider$Configuration\n+header extends java\/lang\/Object nestHost java\/net\/spi\/InetAddressResolverProvider sealed true flags 601\n+innerclass innerClass java\/net\/spi\/InetAddressResolverProvider$Configuration outerClass java\/net\/spi\/InetAddressResolverProvider innerClassName Configuration flags 609\n+method name builtinResolver descriptor ()Ljava\/net\/spi\/InetAddressResolver; flags 401\n+method name lookupLocalHostName descriptor ()Ljava\/lang\/String; flags 401\n+\n+class name java\/net\/spi\/URLStreamHandlerProvider\n+header extends java\/lang\/Object implements java\/net\/URLStreamHandlerFactory flags 421\n+\n+class name java\/nio\/CharBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable,java\/lang\/Appendable,java\/lang\/CharSequence,java\/lang\/Readable flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/CharBuffer;>;Ljava\/lang\/Appendable;Ljava\/lang\/CharSequence;Ljava\/lang\/Readable;\n+innerclass innerClass java\/util\/Spliterator$OfInt outerClass java\/util\/Spliterator innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/nio\/charset\/Charset\n+method name forName descriptor (Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;)Ljava\/nio\/charset\/Charset; flags 9\n+\n+class name java\/security\/Certificate\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"1.2\")\n+\n+class name java\/security\/Identity\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 421 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"1.2\")\n+\n+class name java\/security\/KeyStore\n+method name getAttributes descriptor (Ljava\/lang\/String;)Ljava\/util\/Set; thrownTypes java\/security\/KeyStoreException flags 11 signature (Ljava\/lang\/String;)Ljava\/util\/Set<Ljava\/security\/KeyStore$Entry$Attribute;>;\n+\n+class name java\/security\/KeyStoreSpi\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/security\/KeyStore$LoadStoreParameter outerClass java\/security\/KeyStore innerClassName LoadStoreParameter flags 609\n+innerclass innerClass java\/security\/KeyStore$ProtectionParameter outerClass java\/security\/KeyStore innerClassName ProtectionParameter flags 609\n+innerclass innerClass java\/security\/KeyStore$PasswordProtection outerClass java\/security\/KeyStore innerClassName PasswordProtection flags 9\n+innerclass innerClass java\/security\/KeyStore$CallbackHandlerProtection outerClass java\/security\/KeyStore innerClassName CallbackHandlerProtection flags 9\n+innerclass innerClass java\/security\/KeyStore$TrustedCertificateEntry outerClass java\/security\/KeyStore innerClassName TrustedCertificateEntry flags 19\n+innerclass innerClass java\/security\/KeyStore$PrivateKeyEntry outerClass java\/security\/KeyStore innerClassName PrivateKeyEntry flags 19\n+innerclass innerClass java\/security\/KeyStore$SecretKeyEntry outerClass java\/security\/KeyStore innerClassName SecretKeyEntry flags 19\n+innerclass innerClass java\/security\/KeyStore$Entry outerClass java\/security\/KeyStore innerClassName Entry flags 609\n+innerclass innerClass java\/security\/KeyStore$Entry$Attribute outerClass java\/security\/KeyStore$Entry innerClassName Attribute flags 609\n+method name engineGetAttributes descriptor (Ljava\/lang\/String;)Ljava\/util\/Set; flags 1 signature (Ljava\/lang\/String;)Ljava\/util\/Set<Ljava\/security\/KeyStore$Entry$Attribute;>;\n+\n+class name java\/security\/SecureRandomParameters\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/security\/SignedObject\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/security\/cert\/CertificateRevokedException\n+header extends java\/security\/cert\/CertificateException flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/security\/cert\/URICertStoreParameters\n+header extends java\/lang\/Object implements java\/security\/cert\/CertStoreParameters flags 31\n+\n+class name java\/security\/interfaces\/RSAKey\n+-method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/spec\/MGF1ParameterSpec\n+-field name SHA512_224 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n+-field name SHA512_256 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n+field name SHA512_224 descriptor Ljava\/security\/spec\/MGF1ParameterSpec; flags 19\n+field name SHA512_256 descriptor Ljava\/security\/spec\/MGF1ParameterSpec; flags 19\n+\n+class name java\/security\/spec\/PSSParameterSpec\n+-field name TRAILER_FIELD_BC descriptor I\n+-method name toString descriptor ()Ljava\/lang\/String;\n+field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n+method name toString descriptor ()Ljava\/lang\/String; flags 1\n+\n+class name java\/security\/spec\/RSAKeyGenParameterSpec\n+-method name <init> descriptor (ILjava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+-method name getKeyParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name <init> descriptor (ILjava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+method name getKeyParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/spec\/RSAMultiPrimePrivateCrtKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;[Ljava\/security\/spec\/RSAOtherPrimeInfo;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;[Ljava\/security\/spec\/RSAOtherPrimeInfo;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+\n+class name java\/security\/spec\/RSAPrivateCrtKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+\n+class name java\/security\/spec\/RSAPrivateKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+-method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/spec\/RSAPublicKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+-method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/text\/DateFormatSymbols\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/text\/RuleBasedCollator\n+header extends java\/text\/Collator flags 21\n+innerclass innerClass java\/text\/Normalizer$Form outerClass java\/text\/Normalizer innerClassName Form flags 4019\n+\n+class name java\/time\/Duration\n+method name isPositive descriptor ()Z flags 1\n+\n+class name java\/time\/chrono\/ChronoLocalDate\n+header extends java\/lang\/Object implements java\/time\/temporal\/Temporal,java\/time\/temporal\/TemporalAdjuster,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Ljava\/time\/temporal\/Temporal;Ljava\/time\/temporal\/TemporalAdjuster;Ljava\/lang\/Comparable<Ljava\/time\/chrono\/ChronoLocalDate;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/time\/chrono\/ChronoLocalDateTime\n+header extends java\/lang\/Object implements java\/time\/temporal\/Temporal,java\/time\/temporal\/TemporalAdjuster,java\/lang\/Comparable flags 601 signature <D::Ljava\/time\/chrono\/ChronoLocalDate;>Ljava\/lang\/Object;Ljava\/time\/temporal\/Temporal;Ljava\/time\/temporal\/TemporalAdjuster;Ljava\/lang\/Comparable<Ljava\/time\/chrono\/ChronoLocalDateTime<*>;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/time\/format\/DecimalStyle\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/time\/temporal\/TemporalAdjusters\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/Comparator\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/DoubleSummaryStatistics\n+header extends java\/lang\/Object implements java\/util\/function\/DoubleConsumer flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/GregorianCalendar\n+header extends java\/util\/Calendar flags 21\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/util\/HashMap\n+header extends java\/util\/AbstractMap implements java\/util\/Map,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;>Ljava\/util\/AbstractMap<TK;TV;>;Ljava\/util\/Map<TK;TV;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/util\/HashSet\n+header extends java\/util\/AbstractSet implements java\/util\/Set,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/util\/AbstractSet<TE;>;Ljava\/util\/Set<TE;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/util\/Locale$IsoCountryCode\n+header extends java\/lang\/Enum nestHost java\/util\/Locale sealed true flags 4421 signature Ljava\/lang\/Enum<Ljava\/util\/Locale$IsoCountryCode;>;\n+innerclass innerClass java\/util\/Locale$IsoCountryCode outerClass java\/util\/Locale innerClassName IsoCountryCode flags 4409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/Observable\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+\n+class name java\/util\/Observer\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+\n+class name java\/util\/TimeZone\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/util\/TreeSet\n+header extends java\/util\/AbstractSet implements java\/util\/NavigableSet,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/util\/AbstractSet<TE;>;Ljava\/util\/NavigableSet<TE;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/util\/concurrent\/ConcurrentMap\n+header extends java\/lang\/Object implements java\/util\/Map flags 601 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/Map<TK;TV;>;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/ConcurrentSkipListSet\n+header extends java\/util\/AbstractSet implements java\/util\/NavigableSet,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/util\/AbstractSet<TE;>;Ljava\/util\/NavigableSet<TE;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/CountedCompleter\n+header extends java\/util\/concurrent\/ForkJoinTask flags 421 signature <T:Ljava\/lang\/Object;>Ljava\/util\/concurrent\/ForkJoinTask<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/ThreadPoolExecutor\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name java\/util\/concurrent\/atomic\/AtomicBoolean\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/atomic\/AtomicReference\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 signature <V:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/io\/Serializable;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/atomic\/AtomicReferenceArray\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/io\/Serializable;\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/locks\/StampedLock\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+-method name tryWriteLock descriptor ()J\n+-method name writeLockInterruptibly descriptor ()J\n+-method name tryReadLock descriptor ()J\n+-method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J\n+-method name readLockInterruptibly descriptor ()J\n+-method name unlock descriptor (J)V\n+method name tryWriteLock descriptor ()J flags 1\n+method name writeLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name tryReadLock descriptor ()J flags 1\n+method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J thrownTypes java\/lang\/InterruptedException flags 1\n+method name readLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name unlock descriptor (J)V flags 1\n+\n+class name java\/util\/function\/BiConsumer\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;U:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/BiFunction\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;U:Ljava\/lang\/Object;R:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/BiPredicate\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;U:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/BinaryOperator\n+header extends java\/lang\/Object implements java\/util\/function\/BiFunction flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction<TT;TT;TT;>; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/Consumer\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/DoubleConsumer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/DoublePredicate\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/DoubleUnaryOperator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/Function\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/IntConsumer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/IntPredicate\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/IntUnaryOperator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/LongConsumer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/LongPredicate\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/LongUnaryOperator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/Predicate\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/UnaryOperator\n+header extends java\/lang\/Object implements java\/util\/function\/Function flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/function\/Function<TT;TT;>; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/spi\/AbstractResourceBundleProvider\n+header extends java\/lang\/Object implements java\/util\/spi\/ResourceBundleProvider flags 421\n+innerclass innerClass java\/util\/ResourceBundle$Control outerClass java\/util\/ResourceBundle innerClassName Control flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/spi\/CurrencyNameProvider\n+header extends java\/util\/spi\/LocaleServiceProvider flags 421\n+innerclass innerClass java\/util\/ResourceBundle$Control outerClass java\/util\/ResourceBundle innerClassName Control flags 9\n+\n+class name java\/util\/spi\/ResourceBundleProvider\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/util\/spi\/ToolProvider\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/zip\/CRC32C\n+header extends java\/lang\/Object implements java\/util\/zip\/Checksum flags 31\n+\n+class name javax\/crypto\/AEADBadTagException\n+header extends javax\/crypto\/BadPaddingException flags 21\n+\n+class name javax\/crypto\/BadPaddingException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/CipherInputStream\n+header extends java\/io\/FilterInputStream flags 21\n+\n+class name javax\/crypto\/CipherOutputStream\n+header extends java\/io\/FilterOutputStream flags 21\n+\n+class name javax\/crypto\/CipherSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/EncryptedPrivateKeyInfo\n+header extends java\/lang\/Object flags 21\n+\n+class name javax\/crypto\/ExemptionMechanism\n+header extends java\/lang\/Object flags 21\n+\n+class name javax\/crypto\/ExemptionMechanismException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/ExemptionMechanismSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/IllegalBlockSizeException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/KeyAgreement\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/KeyAgreementSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/KeyGenerator\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/KeyGeneratorSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/Mac\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/MacSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/NoSuchPaddingException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/NullCipher\n+header extends javax\/crypto\/Cipher flags 21\n+\n+class name javax\/crypto\/SealedObject\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/crypto\/SecretKey\n+header extends java\/lang\/Object implements java\/security\/Key,javax\/security\/auth\/Destroyable flags 601\n+\n+class name javax\/crypto\/SecretKeyFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/SecretKeyFactorySpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/ShortBufferException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/interfaces\/DHKey\n+header extends java\/lang\/Object flags 601\n+\n+class name javax\/crypto\/interfaces\/DHPrivateKey\n+header extends java\/lang\/Object implements javax\/crypto\/interfaces\/DHKey,java\/security\/PrivateKey flags 601\n+\n+class name javax\/crypto\/interfaces\/DHPublicKey\n+header extends java\/lang\/Object implements javax\/crypto\/interfaces\/DHKey,java\/security\/PublicKey flags 601\n+\n+class name javax\/crypto\/interfaces\/PBEKey\n+header extends java\/lang\/Object implements javax\/crypto\/SecretKey flags 601\n+\n+class name javax\/crypto\/spec\/DESKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/DESedeKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/DHGenParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/DHParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/DHPrivateKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/DHPublicKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/GCMParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/IvParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/OAEPParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+innerclass innerClass javax\/crypto\/spec\/PSource$PSpecified outerClass javax\/crypto\/spec\/PSource innerClassName PSpecified flags 19\n+\n+class name javax\/crypto\/spec\/PBEKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/PBEParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/RC2ParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/RC5ParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/SecretKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec,javax\/crypto\/SecretKey flags 21\n+\n+class name javax\/security\/auth\/Subject\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name doAs descriptor (Ljavax\/security\/auth\/Subject;Ljava\/security\/PrivilegedAction;)Ljava\/lang\/Object;\n+-method name doAs descriptor (Ljavax\/security\/auth\/Subject;Ljava\/security\/PrivilegedExceptionAction;)Ljava\/lang\/Object;\n+method name current descriptor ()Ljavax\/security\/auth\/Subject; flags 9\n+method name callAs descriptor (Ljavax\/security\/auth\/Subject;Ljava\/util\/concurrent\/Callable;)Ljava\/lang\/Object; thrownTypes java\/util\/concurrent\/CompletionException flags 9 signature <T:Ljava\/lang\/Object;>(Ljavax\/security\/auth\/Subject;Ljava\/util\/concurrent\/Callable<TT;>;)TT;\n+method name doAs descriptor (Ljavax\/security\/auth\/Subject;Ljava\/security\/PrivilegedAction;)Ljava\/lang\/Object; flags 9 deprecated true signature <T:Ljava\/lang\/Object;>(Ljavax\/security\/auth\/Subject;Ljava\/security\/PrivilegedAction<TT;>;)TT; runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"18\")\n+method name doAs descriptor (Ljavax\/security\/auth\/Subject;Ljava\/security\/PrivilegedExceptionAction;)Ljava\/lang\/Object; thrownTypes java\/security\/PrivilegedActionException flags 9 deprecated true signature <T:Ljava\/lang\/Object;>(Ljavax\/security\/auth\/Subject;Ljava\/security\/PrivilegedExceptionAction<TT;>;)TT; runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"18\")\n+\n+class name javax\/security\/auth\/login\/LoginContext\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass javax\/security\/auth\/login\/AppConfigurationEntry$LoginModuleControlFlag outerClass javax\/security\/auth\/login\/AppConfigurationEntry innerClassName LoginModuleControlFlag flags 9\n+innerclass innerClass java\/util\/ServiceLoader$Provider outerClass java\/util\/ServiceLoader innerClassName Provider flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+header extends java\/lang\/Object nestMembers jdk\/internal\/vm\/vector\/VectorSupport$VectorMask,jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle,jdk\/internal\/vm\/vector\/VectorSupport$Vector,jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload,jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies flags 21\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+-method name broadcastCoerced descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;IJLjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)Ljava\/lang\/Object;\n+-method name shuffleIota descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;\n+-method name shuffleToVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation;)Ljava\/lang\/Object;\n+-method name indexVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+-method name reductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/util\/function\/Function;)J\n+-method name extract descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J\n+-method name insert descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+-method name unaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n+-method name binaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n+-method name ternaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljava\/lang\/Object;\n+-method name load descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation;)Ljava\/lang\/Object;\n+-method name loadWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+-method name storeWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap;)V\n+-method name test descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Z\n+-method name compare descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;\n+-method name rearrangeOp descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+-method name blend descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+-method name broadcastInt descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+-method name maybeRebox descriptor (Ljava\/lang\/Object;)Ljava\/lang\/Object;\n+-method name maskReductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp;)I\n+field name VECTOR_OP_MASK_TOLONG descriptor I constantValue 22 flags 19\n+field name VECTOR_OP_LROTATE descriptor I constantValue 23 flags 19\n+field name VECTOR_OP_RROTATE descriptor I constantValue 24 flags 19\n+method name broadcastCoerced descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;IJLjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload; flags 9 signature <VM:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;IJTS;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation<TVM;TS;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name shuffleIota descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle; flags 9 signature <E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;SH:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;>(Ljava\/lang\/Class<TE;>;Ljava\/lang\/Class<+TSH;>;TS;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation<TS;TSH;>;)TSH; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name shuffleToVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;SH:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;>;Ljava\/lang\/Class<TE;>;Ljava\/lang\/Class<+TSH;>;TSH;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation<TV;TSH;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name indexVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TE;>;ITV;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation<TV;TS;>;)TV;\n+method name reductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$ReductionOperation;)J flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<+TM;>;Ljava\/lang\/Class<TE;>;ITV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$ReductionOperation<TV;TM;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name extract descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TE;>;ITV;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp<TV;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name insert descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TE;>;ITV;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp<TV;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name unaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$UnaryOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<+TM;>;Ljava\/lang\/Class<TE;>;ITV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$UnaryOperation<TV;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name binaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$BinaryOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload; flags 9 signature <VM:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<+TM;>;Ljava\/lang\/Class<TE;>;ITVM;TVM;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$BinaryOperation<TVM;TM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name ternaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<+TM;>;Ljava\/lang\/Class<TE;>;ITV;TV;TV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation<TV;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name load descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload; flags 9 signature <C:Ljava\/lang\/Object;VM:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Object;JTC;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation<TC;TVM;TS;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name loadMasked descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorMaskedOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Object;JTM;TC;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorMaskedOperation<TC;TV;TS;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name loadWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;W:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Class<+Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;>;Ljava\/lang\/Object;JTW;TM;TC;I[IITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap<TC;TV;TS;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name storeMasked descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorMaskedOperation;)V flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Object;JTV;TM;TC;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorMaskedOperation<TC;TV;TM;>;)V runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name storeWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap;)V flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;W:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Class<+Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;>;Ljava\/lang\/Object;JTW;TV;TM;TC;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap<TC;TV;TM;>;)V runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name test descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljava\/util\/function\/BiFunction;)Z flags 9 signature <M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITM;TM;Ljava\/util\/function\/BiFunction<TM;TM;Ljava\/lang\/Boolean;>;)Z runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name compare descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ITV;TV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp<TV;TM;>;)TM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name rearrangeOp descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;SH:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TSH;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ITV;TSH;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp<TV;TSH;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name blend descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<TE;>;ITV;TV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp<TV;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name broadcastInt descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<+TM;>;Ljava\/lang\/Class<TE;>;ITV;ITM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp<TV;TM;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name maybeRebox descriptor (Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload; flags 9 signature <VP:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;>(TVP;)TVP; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name maskReductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp;)J flags 9 signature <M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TM;>;Ljava\/lang\/Class<*>;ITM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp<TM;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n","filename":"make\/data\/symbols\/java.base-I.sym.txt","additions":742,"deletions":0,"binary":false,"changes":742,"status":"added"},{"patch":"@@ -0,0 +1,140 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/annotation\/processing\/AbstractProcessor\n+header extends java\/lang\/Object implements javax\/annotation\/processing\/Processor flags 421\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/annotation\/processing\/Generated\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;SOURCE;)@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;PACKAGE;eLjava\/lang\/annotation\/ElementType;TYPE;eLjava\/lang\/annotation\/ElementType;METHOD;eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;eLjava\/lang\/annotation\/ElementType;FIELD;eLjava\/lang\/annotation\/ElementType;LOCAL_VARIABLE;eLjava\/lang\/annotation\/ElementType;PARAMETER;})\n+\n+class name javax\/annotation\/processing\/Messager\n+method name printError descriptor (Ljava\/lang\/CharSequence;)V flags 1\n+method name printError descriptor (Ljava\/lang\/CharSequence;Ljavax\/lang\/model\/element\/Element;)V flags 1\n+method name printWarning descriptor (Ljava\/lang\/CharSequence;)V flags 1\n+method name printWarning descriptor (Ljava\/lang\/CharSequence;Ljavax\/lang\/model\/element\/Element;)V flags 1\n+method name printNote descriptor (Ljava\/lang\/CharSequence;)V flags 1\n+method name printNote descriptor (Ljava\/lang\/CharSequence;Ljavax\/lang\/model\/element\/Element;)V flags 1\n+\n+class name javax\/lang\/model\/SourceVersion\n+field name RELEASE_18 descriptor Ljavax\/lang\/model\/SourceVersion; flags 4019\n+method name valueOf descriptor (Ljava\/lang\/Runtime$Version;)Ljavax\/lang\/model\/SourceVersion; flags 9\n+method name runtimeVersion descriptor ()Ljava\/lang\/Runtime$Version; flags 1\n+\n+class name javax\/lang\/model\/element\/ExecutableElement\n+method name getEnclosingElement descriptor ()Ljavax\/lang\/model\/element\/Element; flags 401\n+\n+class name javax\/lang\/model\/element\/Modifier\n+header extends java\/lang\/Enum sealed true flags 4021 signature Ljava\/lang\/Enum<Ljavax\/lang\/model\/element\/Modifier;>;\n+\n+class name javax\/lang\/model\/element\/UnknownAnnotationValueException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/element\/UnknownDirectiveException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass javax\/lang\/model\/element\/ModuleElement$Directive outerClass javax\/lang\/model\/element\/ModuleElement innerClassName Directive flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/element\/UnknownElementException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/type\/MirroredTypeException\n+header extends javax\/lang\/model\/type\/MirroredTypesException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/type\/MirroredTypesException\n+header extends java\/lang\/RuntimeException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/type\/UnknownTypeException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/util\/AbstractAnnotationValueVisitor14\n+header extends javax\/lang\/model\/util\/AbstractAnnotationValueVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractAnnotationValueVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/AbstractElementVisitor14\n+header extends javax\/lang\/model\/util\/AbstractElementVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractElementVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor14\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor6\n+header extends java\/lang\/Object implements javax\/lang\/model\/type\/TypeVisitor flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljavax\/lang\/model\/type\/TypeVisitor<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_6;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor7\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor6 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor6<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_7;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor8\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor7 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor7<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_8;)\n+\n+class name javax\/lang\/model\/util\/ElementKindVisitor14\n+header extends javax\/lang\/model\/util\/ElementKindVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/ElementKindVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/ElementScanner14\n+header extends javax\/lang\/model\/util\/ElementScanner9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/ElementScanner9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/Elements\n+method name getOutermostTypeElement descriptor (Ljavax\/lang\/model\/element\/Element;)Ljavax\/lang\/model\/element\/TypeElement; flags 1\n+method name getFileObjectOf descriptor (Ljavax\/lang\/model\/element\/Element;)Ljavax\/tools\/JavaFileObject; flags 1\n+\n+class name javax\/lang\/model\/util\/SimpleAnnotationValueVisitor14\n+header extends javax\/lang\/model\/util\/SimpleAnnotationValueVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleAnnotationValueVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/SimpleElementVisitor14\n+header extends javax\/lang\/model\/util\/SimpleElementVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleElementVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/SimpleTypeVisitor14\n+header extends javax\/lang\/model\/util\/SimpleTypeVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleTypeVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/lang\/model\/util\/TypeKindVisitor14\n+header extends javax\/lang\/model\/util\/TypeKindVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/TypeKindVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_18;)\n+\n+class name javax\/tools\/DocumentationTool$Location\n+field name SNIPPET_PATH descriptor Ljavax\/tools\/DocumentationTool$Location; flags 4019\n+\n+class name javax\/tools\/ForwardingJavaFileManager\n+method name getJavaFileForOutputForOriginatingFiles descriptor (Ljavax\/tools\/JavaFileManager$Location;Ljava\/lang\/String;Ljavax\/tools\/JavaFileObject$Kind;[Ljavax\/tools\/FileObject;)Ljavax\/tools\/JavaFileObject; thrownTypes java\/io\/IOException flags 81\n+method name getFileForOutputForOriginatingFiles descriptor (Ljavax\/tools\/JavaFileManager$Location;Ljava\/lang\/String;Ljava\/lang\/String;[Ljavax\/tools\/FileObject;)Ljavax\/tools\/FileObject; thrownTypes java\/io\/IOException flags 81\n+\n+class name javax\/tools\/JavaFileManager\n+method name getJavaFileForOutputForOriginatingFiles descriptor (Ljavax\/tools\/JavaFileManager$Location;Ljava\/lang\/String;Ljavax\/tools\/JavaFileObject$Kind;[Ljavax\/tools\/FileObject;)Ljavax\/tools\/JavaFileObject; thrownTypes java\/io\/IOException flags 81\n+method name getFileForOutputForOriginatingFiles descriptor (Ljavax\/tools\/JavaFileManager$Location;Ljava\/lang\/String;Ljava\/lang\/String;[Ljavax\/tools\/FileObject;)Ljavax\/tools\/FileObject; thrownTypes java\/io\/IOException flags 81\n+\n+class name javax\/tools\/SimpleJavaFileObject\n+header extends java\/lang\/Object implements javax\/tools\/JavaFileObject flags 21\n+innerclass innerClass javax\/tools\/JavaFileObject$Kind outerClass javax\/tools\/JavaFileObject innerClassName Kind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/tools\/ToolProvider\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.compiler-I.sym.txt","additions":140,"deletions":0,"binary":false,"changes":140,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/awt\/datatransfer\/Clipboard\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/datatransfer\/DataFlavor\n+header extends java\/lang\/Object implements java\/io\/Externalizable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.datatransfer-I.sym.txt","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,922 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/awt\/AWTKeyStroke\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/AttributeValue\n+header extends java\/lang\/Object flags 420\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/BorderLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager2,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/CheckboxGroup\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Color\n+header extends java\/lang\/Object implements java\/awt\/Paint,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/ContainerOrderFocusTraversalPolicy\n+header extends java\/awt\/FocusTraversalPolicy implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Dimension\n+header extends java\/awt\/geom\/Dimension2D implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/DisplayMode\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Event\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/FlowLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/FontMetrics\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Graphics\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name java\/awt\/GridBagLayoutInfo\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/awt\/Component$BaselineResizeBehavior outerClass java\/awt\/Component innerClassName BaselineResizeBehavior flags 4019\n+\n+class name java\/awt\/GridLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/HeadlessException\n+header extends java\/lang\/UnsupportedOperationException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Insets\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/MenuShortcut\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Point\n+header extends java\/awt\/geom\/Point2D implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/PrintJob\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name java\/awt\/Rectangle\n+header extends java\/awt\/geom\/Rectangle2D implements java\/awt\/Shape,java\/io\/Serializable flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/SystemColor\n+header extends java\/awt\/Color implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/TexturePaint\n+header extends java\/lang\/Object implements java\/awt\/Paint flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/awt\/color\/ColorSpace\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/color\/ICC_ColorSpace\n+header extends java\/awt\/color\/ColorSpace flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I4)\n+\n+class name java\/awt\/color\/ICC_Profile\n+-method name finalize descriptor ()V\n+\n+class name java\/awt\/desktop\/AboutEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AboutHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/AppEvent\n+header extends java\/util\/EventObject flags 21\n+\n+class name java\/awt\/desktop\/AppForegroundEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AppForegroundListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/AppHiddenEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AppHiddenListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/AppReopenedEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AppReopenedListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/FilesEvent\n+header extends java\/awt\/desktop\/AppEvent flags 21\n+\n+class name java\/awt\/desktop\/OpenFilesEvent\n+header extends java\/awt\/desktop\/FilesEvent flags 31\n+\n+class name java\/awt\/desktop\/OpenFilesHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/OpenURIEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/OpenURIHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/PreferencesEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/PreferencesHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/PrintFilesEvent\n+header extends java\/awt\/desktop\/FilesEvent flags 31\n+\n+class name java\/awt\/desktop\/PrintFilesHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/QuitEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/QuitHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/QuitResponse\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/QuitStrategy\n+header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Ljava\/awt\/desktop\/QuitStrategy;>;\n+\n+class name java\/awt\/desktop\/ScreenSleepEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/ScreenSleepListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/SystemEventListener\n+header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n+\n+class name java\/awt\/desktop\/SystemSleepEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/SystemSleepListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/UserSessionListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/dnd\/DragGestureEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/awt\/dnd\/DragGestureRecognizer\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/awt\/dnd\/DragSource\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/dnd\/DropTargetDragEvent\n+header extends java\/awt\/dnd\/DropTargetEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/dnd\/DropTargetDropEvent\n+header extends java\/awt\/dnd\/DropTargetEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ActionEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/AdjustmentEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ComponentEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ContainerEvent\n+header extends java\/awt\/event\/ComponentEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/HierarchyEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/InputMethodEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ItemEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/MouseWheelEvent\n+header extends java\/awt\/event\/MouseEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/PaintEvent\n+header extends java\/awt\/event\/ComponentEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/WindowEvent\n+header extends java\/awt\/event\/ComponentEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/font\/FontRenderContext\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/awt\/RenderingHints$Key outerClass java\/awt\/RenderingHints innerClassName Key flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/font\/GraphicAttribute\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+\n+class name java\/awt\/font\/ImageGraphicAttribute\n+header extends java\/awt\/font\/GraphicAttribute flags 31\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+\n+class name java\/awt\/font\/NumericShaper$Range\n+header extends java\/lang\/Enum nestHost java\/awt\/font\/NumericShaper sealed true flags 4021 signature Ljava\/lang\/Enum<Ljava\/awt\/font\/NumericShaper$Range;>;\n+innerclass innerClass java\/awt\/font\/NumericShaper$Range outerClass java\/awt\/font\/NumericShaper innerClassName Range flags 4009\n+\n+class name java\/awt\/font\/ShapeGraphicAttribute\n+header extends java\/awt\/font\/GraphicAttribute flags 31\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+\n+class name java\/awt\/font\/TextHitInfo\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/font\/TextMeasurer\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 31\n+innerclass innerClass java\/text\/AttributedCharacterIterator$Attribute outerClass java\/text\/AttributedCharacterIterator innerClassName Attribute flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/geom\/AffineTransform\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Double outerClass java\/awt\/geom\/Point2D innerClassName Double flags 9\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/awt\/geom\/Path2D$Double outerClass java\/awt\/geom\/Path2D innerClassName Double flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/geom\/Area\n+header extends java\/lang\/Object implements java\/awt\/Shape,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/awt\/geom\/RectangularShape\n+header extends java\/lang\/Object implements java\/awt\/Shape,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/awt\/image\/AbstractMultiResolutionImage\n+header extends java\/awt\/Image implements java\/awt\/image\/MultiResolutionImage flags 421\n+\n+class name java\/awt\/image\/BandCombineOp\n+header extends java\/lang\/Object implements java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/BandedSampleModel\n+header extends java\/awt\/image\/ComponentSampleModel flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/BaseMultiResolutionImage\n+header extends java\/awt\/image\/AbstractMultiResolutionImage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/BufferedImageFilter\n+header extends java\/awt\/image\/ImageFilter implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ByteLookupTable\n+header extends java\/awt\/image\/LookupTable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ColorConvertOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+\n+class name java\/awt\/image\/ColorModel\n+-method name finalize descriptor ()V\n+\n+class name java\/awt\/image\/ComponentColorModel\n+header extends java\/awt\/image\/ColorModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ComponentSampleModel\n+header extends java\/awt\/image\/SampleModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ConvolveOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+\n+class name java\/awt\/image\/DataBufferUShort\n+header extends java\/awt\/image\/DataBuffer flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/DirectColorModel\n+header extends java\/awt\/image\/PackedColorModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ImageFilter\n+header extends java\/lang\/Object implements java\/awt\/image\/ImageConsumer,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/IndexColorModel\n+header extends java\/awt\/image\/ColorModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name finalize descriptor ()V\n+\n+class name java\/awt\/image\/Kernel\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/LookupOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/MultiPixelPackedSampleModel\n+header extends java\/awt\/image\/SampleModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/MultiResolutionImage\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/image\/PackedColorModel\n+header extends java\/awt\/image\/ColorModel flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/Raster\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ReplicateScaleFilter\n+header extends java\/awt\/image\/ImageFilter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/RescaleOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/SampleModel\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ShortLookupTable\n+header extends java\/awt\/image\/LookupTable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/SinglePixelPackedSampleModel\n+header extends java\/awt\/image\/SampleModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/print\/Paper\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/beans\/BeanProperty\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;METHOD;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name java\/beans\/Beans\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/DefaultPersistenceDelegate\n+header extends java\/beans\/PersistenceDelegate flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/Encoder\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/EventSetDescriptor\n+header extends java\/beans\/FeatureDescriptor flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/Expression\n+header extends java\/beans\/Statement flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/FeatureDescriptor\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/beans\/IndexedPropertyDescriptor\n+header extends java\/beans\/PropertyDescriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/JavaBean\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;TYPE;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name java\/beans\/PropertyDescriptor\n+header extends java\/beans\/FeatureDescriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/SimpleBeanInfo\n+header extends java\/lang\/Object implements java\/beans\/BeanInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/accessibility\/AccessibilityProvider\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/accessibility\/AccessibleBundle\n+header extends java\/lang\/Object flags 421 classAnnotations @Ljdk\/Profile+Annotation;(value=I4)\n+\n+class name javax\/accessibility\/AccessibleRelationSet\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/accessibility\/AccessibleStateSet\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/metadata\/IIOMetadata\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/jpeg\/JPEGHuffmanTable\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/jpeg\/JPEGQTable\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFDirectory\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFField\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFImageReadParam\n+header extends javax\/imageio\/ImageReadParam flags 31\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFTag\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFTagSet\n+header extends java\/lang\/Object flags 21\n+\n+class name javax\/imageio\/spi\/ImageReaderWriterSpi\n+header extends javax\/imageio\/spi\/IIOServiceProvider flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/spi\/ServiceRegistry\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name javax\/imageio\/stream\/FileCacheImageInputStream\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name javax\/imageio\/stream\/FileImageInputStream\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name javax\/imageio\/stream\/FileImageOutputStream\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name javax\/imageio\/stream\/ImageInputStreamImpl\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name javax\/imageio\/stream\/MemoryCacheImageInputStream\n+-method name finalize descriptor ()V\n+method name finalize descriptor ()V thrownTypes java\/lang\/Throwable flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name javax\/print\/attribute\/DateTimeSyntax\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/EnumSyntax\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/IntegerSyntax\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/standard\/MediaPrintableArea\n+header extends java\/lang\/Object implements javax\/print\/attribute\/DocAttribute,javax\/print\/attribute\/PrintRequestAttribute,javax\/print\/attribute\/PrintJobAttribute flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/event\/PrintEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/MetaMessage\n+header extends javax\/sound\/midi\/MidiMessage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/MidiMessage\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/Sequence\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/ShortMessage\n+header extends javax\/sound\/midi\/MidiMessage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/SysexMessage\n+header extends javax\/sound\/midi\/MidiMessage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/sampled\/ReverbType\n+header extends java\/lang\/Object flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I4)\n+\n+class name javax\/sound\/sampled\/spi\/FormatConversionProvider\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/sound\/sampled\/AudioFormat$Encoding outerClass javax\/sound\/sampled\/AudioFormat innerClassName Encoding flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/BoxLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager2,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/DebugGraphics\n+header extends java\/awt\/Graphics flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/DefaultBoundedRangeModel\n+header extends java\/lang\/Object implements javax\/swing\/BoundedRangeModel,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/DefaultListSelectionModel\n+header extends java\/lang\/Object implements javax\/swing\/ListSelectionModel,java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/GrayFilter\n+header extends java\/awt\/image\/RGBImageFilter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/GroupLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager2 nestMembers javax\/swing\/GroupLayout$ParallelGroup,javax\/swing\/GroupLayout$SequentialGroup,javax\/swing\/GroupLayout$Group,javax\/swing\/GroupLayout$Spring,javax\/swing\/GroupLayout$Alignment flags 21\n+innerclass innerClass javax\/swing\/GroupLayout$Alignment outerClass javax\/swing\/GroupLayout innerClassName Alignment flags 4019\n+innerclass innerClass javax\/swing\/GroupLayout$ParallelGroup outerClass javax\/swing\/GroupLayout innerClassName ParallelGroup flags 1\n+innerclass innerClass javax\/swing\/GroupLayout$Group outerClass javax\/swing\/GroupLayout innerClassName Group flags 401\n+innerclass innerClass javax\/swing\/GroupLayout$SequentialGroup outerClass javax\/swing\/GroupLayout innerClassName SequentialGroup flags 1\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/GroupLayout$Group\n+header extends javax\/swing\/GroupLayout$Spring nestHost javax\/swing\/GroupLayout flags 421\n+innerclass innerClass javax\/swing\/GroupLayout$Group outerClass javax\/swing\/GroupLayout innerClassName Group flags 401\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+\n+class name javax\/swing\/GroupLayout$ParallelGroup\n+header extends javax\/swing\/GroupLayout$Group nestHost javax\/swing\/GroupLayout flags 21\n+innerclass innerClass javax\/swing\/GroupLayout$ParallelGroup outerClass javax\/swing\/GroupLayout innerClassName ParallelGroup flags 1\n+innerclass innerClass javax\/swing\/GroupLayout$Group outerClass javax\/swing\/GroupLayout innerClassName Group flags 401\n+innerclass innerClass javax\/swing\/GroupLayout$Alignment outerClass javax\/swing\/GroupLayout innerClassName Alignment flags 4019\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+\n+class name javax\/swing\/GroupLayout$SequentialGroup\n+header extends javax\/swing\/GroupLayout$Group nestHost javax\/swing\/GroupLayout flags 21\n+innerclass innerClass javax\/swing\/GroupLayout$SequentialGroup outerClass javax\/swing\/GroupLayout innerClassName SequentialGroup flags 1\n+innerclass innerClass javax\/swing\/GroupLayout$Group outerClass javax\/swing\/GroupLayout innerClassName Group flags 401\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+innerclass innerClass javax\/swing\/LayoutStyle$ComponentPlacement outerClass javax\/swing\/LayoutStyle innerClassName ComponentPlacement flags 4019\n+innerclass innerClass java\/awt\/Component$BaselineResizeBehavior outerClass java\/awt\/Component innerClassName BaselineResizeBehavior flags 4019\n+\n+class name javax\/swing\/GroupLayout$Spring\n+header extends java\/lang\/Object nestHost javax\/swing\/GroupLayout flags 420\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+innerclass innerClass javax\/swing\/GroupLayout$Alignment outerClass javax\/swing\/GroupLayout innerClassName Alignment flags 4019\n+innerclass innerClass java\/awt\/Component$BaselineResizeBehavior outerClass java\/awt\/Component innerClassName BaselineResizeBehavior flags 4019\n+\n+class name javax\/swing\/JList$AccessibleJList$AccessibleJListChild\n+-method name getAccessibleAction descriptor ()Ljavax\/accessibility\/AccessibleAction;\n+method name getAccessibleAction descriptor ()Ljavax\/accessibility\/AccessibleAction; flags 1\n+\n+class name javax\/swing\/JTextPane\n+header extends javax\/swing\/JEditorPane flags 21 runtimeAnnotations @Ljava\/beans\/JavaBean;(description=\"A\\u005C;u0020;text\\u005C;u0020;component\\u005C;u0020;that\\u005C;u0020;can\\u005C;u0020;be\\u005C;u0020;marked\\u005C;u0020;up\\u005C;u0020;with\\u005C;u0020;attributes\\u005C;u0020;that\\u005C;u0020;are\\u005C;u0020;graphically\\u005C;u0020;represented.\")@Ljavax\/swing\/SwingContainer;\n+\n+class name javax\/swing\/LookAndFeel\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/swing\/text\/JTextComponent$KeyBinding outerClass javax\/swing\/text\/JTextComponent innerClassName KeyBinding flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/MenuSelectionManager\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/SizeRequirements\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/SortingFocusTraversalPolicy\n+header extends javax\/swing\/InternalFrameFocusTraversalPolicy flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/SwingContainer\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;TYPE;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name javax\/swing\/UIClientPropertyKey\n+header extends java\/lang\/Object flags 601\n+\n+class name javax\/swing\/border\/LineBorder\n+header extends javax\/swing\/border\/AbstractBorder flags 21\n+innerclass innerClass java\/awt\/geom\/RoundRectangle2D$Float outerClass java\/awt\/geom\/RoundRectangle2D innerClassName Float flags 9\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+innerclass innerClass java\/awt\/geom\/Path2D$Float outerClass java\/awt\/geom\/Path2D innerClassName Float flags 9\n+\n+class name javax\/swing\/event\/EventListenerList\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/event\/ListDataEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/event\/ListSelectionEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/event\/TreeModelEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/filechooser\/FileNameExtensionFilter\n+header extends javax\/swing\/filechooser\/FileFilter flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicArrowButton\n+header extends javax\/swing\/JButton implements javax\/swing\/SwingConstants flags 21\n+innerclass innerClass java\/awt\/geom\/Path2D$Double outerClass java\/awt\/geom\/Path2D innerClassName Double flags 9\n+\n+class name javax\/swing\/plaf\/basic\/BasicButtonUI\n+header extends javax\/swing\/plaf\/ButtonUI flags 21\n+innerclass innerClass java\/awt\/Component$BaselineResizeBehavior outerClass java\/awt\/Component innerClassName BaselineResizeBehavior flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicPasswordFieldUI\n+header extends javax\/swing\/plaf\/basic\/BasicTextFieldUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicVerticalLayoutManager\n+header extends javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicHorizontalLayoutManager nestHost javax\/swing\/plaf\/basic\/BasicSplitPaneUI flags 21\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicHorizontalLayoutManager outerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI innerClassName BasicHorizontalLayoutManager flags 1\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicVerticalLayoutManager outerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI innerClassName BasicVerticalLayoutManager flags 1\n+\n+class name javax\/swing\/plaf\/basic\/BasicToolBarSeparatorUI\n+header extends javax\/swing\/plaf\/basic\/BasicSeparatorUI flags 21\n+innerclass innerClass javax\/swing\/JToolBar$Separator outerClass javax\/swing\/JToolBar innerClassName Separator flags 9\n+\n+class name javax\/swing\/plaf\/metal\/MetalButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalCheckBoxUI\n+header extends javax\/swing\/plaf\/metal\/MetalRadioButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalRadioButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicRadioButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalTabbedPaneUI$TabbedPaneLayout\n+header extends javax\/swing\/plaf\/basic\/BasicTabbedPaneUI$TabbedPaneLayout nestHost javax\/swing\/plaf\/metal\/MetalTabbedPaneUI flags 21\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicTabbedPaneUI$TabbedPaneLayout outerClass javax\/swing\/plaf\/basic\/BasicTabbedPaneUI innerClassName TabbedPaneLayout flags 1\n+innerclass innerClass javax\/swing\/plaf\/metal\/MetalTabbedPaneUI$TabbedPaneLayout outerClass javax\/swing\/plaf\/metal\/MetalTabbedPaneUI innerClassName TabbedPaneLayout flags 1\n+\n+class name javax\/swing\/plaf\/metal\/MetalToggleButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicToggleButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalToolBarUI$MetalContainerListener\n+header extends javax\/swing\/plaf\/basic\/BasicToolBarUI$ToolBarContListener nestHost javax\/swing\/plaf\/metal\/MetalToolBarUI flags 21\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicToolBarUI$ToolBarContListener outerClass javax\/swing\/plaf\/basic\/BasicToolBarUI innerClassName ToolBarContListener flags 4\n+innerclass innerClass javax\/swing\/plaf\/metal\/MetalToolBarUI$MetalContainerListener outerClass javax\/swing\/plaf\/metal\/MetalToolBarUI innerClassName MetalContainerListener flags 4\n+\n+class name javax\/swing\/plaf\/metal\/MetalToolBarUI$MetalRolloverListener\n+header extends javax\/swing\/plaf\/basic\/BasicToolBarUI$PropertyListener nestHost javax\/swing\/plaf\/metal\/MetalToolBarUI flags 21\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicToolBarUI$PropertyListener outerClass javax\/swing\/plaf\/basic\/BasicToolBarUI innerClassName PropertyListener flags 4\n+innerclass innerClass javax\/swing\/plaf\/metal\/MetalToolBarUI$MetalRolloverListener outerClass javax\/swing\/plaf\/metal\/MetalToolBarUI innerClassName MetalRolloverListener flags 4\n+\n+class name javax\/swing\/plaf\/metal\/MetalToolTipUI\n+header extends javax\/swing\/plaf\/basic\/BasicToolTipUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/multi\/MultiLookAndFeel\n+header extends javax\/swing\/LookAndFeel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicButtonUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthIcon\n+header extends java\/lang\/Object implements javax\/swing\/Icon flags 601\n+\n+class name javax\/swing\/plaf\/synth\/SynthMenuItemUI\n+header extends javax\/swing\/plaf\/basic\/BasicMenuItemUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthMenuUI\n+header extends javax\/swing\/plaf\/basic\/BasicMenuUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthSeparatorUI\n+header extends javax\/swing\/plaf\/SeparatorUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass javax\/swing\/JToolBar$Separator outerClass javax\/swing\/JToolBar innerClassName Separator flags 9\n+\n+class name javax\/swing\/plaf\/synth\/SynthStyle\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/swing\/UIDefaults$LazyInputMap outerClass javax\/swing\/UIDefaults innerClassName LazyInputMap flags 9\n+innerclass innerClass javax\/swing\/UIDefaults$LazyValue outerClass javax\/swing\/UIDefaults innerClassName LazyValue flags 609\n+\n+class name javax\/swing\/table\/AbstractTableModel\n+header extends java\/lang\/Object implements javax\/swing\/table\/TableModel,java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/AbstractWriter\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/BoxView\n+header extends javax\/swing\/text\/CompositeView flags 21\n+innerclass innerClass javax\/swing\/event\/DocumentEvent$ElementChange outerClass javax\/swing\/event\/DocumentEvent innerClassName ElementChange flags 609\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/CompositeView\n+header extends javax\/swing\/text\/View flags 421\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/DateFormatter\n+header extends javax\/swing\/text\/InternationalFormatter flags 21\n+innerclass innerClass java\/text\/DateFormat$Field outerClass java\/text\/DateFormat innerClassName Field flags 9\n+\n+class name javax\/swing\/text\/IconView\n+header extends javax\/swing\/text\/View flags 21\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/LayoutQueue\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/NumberFormatter\n+header extends javax\/swing\/text\/InternationalFormatter flags 21\n+innerclass innerClass java\/text\/NumberFormat$Field outerClass java\/text\/NumberFormat innerClassName Field flags 9\n+innerclass innerClass javax\/swing\/text\/DocumentFilter$FilterBypass outerClass javax\/swing\/text\/DocumentFilter innerClassName FilterBypass flags 409\n+innerclass innerClass java\/text\/AttributedCharacterIterator$Attribute outerClass java\/text\/AttributedCharacterIterator innerClassName Attribute flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/Segment\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/text\/CharacterIterator,java\/lang\/CharSequence flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/TabSet\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/TabStop\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/View\n+header extends java\/lang\/Object implements javax\/swing\/SwingConstants flags 421\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass javax\/swing\/event\/DocumentEvent$ElementChange outerClass javax\/swing\/event\/DocumentEvent innerClassName ElementChange flags 609\n+innerclass innerClass javax\/swing\/event\/DocumentEvent$EventType outerClass javax\/swing\/event\/DocumentEvent innerClassName EventType flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/InlineView\n+header extends javax\/swing\/text\/LabelView flags 21\n+innerclass innerClass javax\/swing\/text\/html\/CSS$Attribute outerClass javax\/swing\/text\/html\/CSS innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/ListView\n+header extends javax\/swing\/text\/html\/BlockView flags 21\n+innerclass innerClass javax\/swing\/text\/html\/StyleSheet$ListPainter outerClass javax\/swing\/text\/html\/StyleSheet innerClassName ListPainter flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/MinimalHTMLWriter\n+header extends javax\/swing\/text\/AbstractWriter flags 21\n+innerclass innerClass javax\/swing\/text\/StyleConstants$ParagraphConstants outerClass javax\/swing\/text\/StyleConstants innerClassName ParagraphConstants flags 9\n+innerclass innerClass javax\/swing\/text\/StyleConstants$CharacterConstants outerClass javax\/swing\/text\/StyleConstants innerClassName CharacterConstants flags 9\n+innerclass innerClass javax\/swing\/text\/StyleConstants$FontConstants outerClass javax\/swing\/text\/StyleConstants innerClassName FontConstants flags 9\n+innerclass innerClass javax\/swing\/text\/StyleConstants$ColorConstants outerClass javax\/swing\/text\/StyleConstants innerClassName ColorConstants flags 9\n+innerclass innerClass javax\/swing\/text\/AbstractDocument$BranchElement outerClass javax\/swing\/text\/AbstractDocument innerClassName BranchElement flags 1\n+innerclass innerClass javax\/swing\/text\/StyleContext$NamedStyle outerClass javax\/swing\/text\/StyleContext innerClassName NamedStyle flags 1\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/ObjectView\n+header extends javax\/swing\/text\/ComponentView flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/Option\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/ParagraphView\n+header extends javax\/swing\/text\/ParagraphView flags 21\n+innerclass innerClass javax\/swing\/text\/html\/StyleSheet$BoxPainter outerClass javax\/swing\/text\/html\/StyleSheet innerClassName BoxPainter flags 9\n+innerclass innerClass javax\/swing\/text\/html\/CSS$Attribute outerClass javax\/swing\/text\/html\/CSS innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/ContentModel\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/DocumentParser\n+header extends javax\/swing\/text\/html\/parser\/Parser flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTMLEditorKit$ParserCallback outerClass javax\/swing\/text\/html\/HTMLEditorKit innerClassName ParserCallback flags 9\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Tag outerClass javax\/swing\/text\/html\/HTML innerClassName Tag flags 9\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/Parser\n+header extends java\/lang\/Object implements javax\/swing\/text\/html\/parser\/DTDConstants flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/TagElement\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Tag outerClass javax\/swing\/text\/html\/HTML innerClassName Tag flags 9\n+innerclass innerClass javax\/swing\/text\/html\/HTML$UnknownTag outerClass javax\/swing\/text\/html\/HTML innerClassName UnknownTag flags 9\n+\n+class name javax\/swing\/tree\/DefaultTreeModel\n+header extends java\/lang\/Object implements java\/io\/Serializable,javax\/swing\/tree\/TreeModel flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name javax\/swing\/tree\/DefaultTreeSelectionModel\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable,javax\/swing\/tree\/TreeSelectionModel flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/tree\/TreePath\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/undo\/AbstractUndoableEdit\n+header extends java\/lang\/Object implements javax\/swing\/undo\/UndoableEdit,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/undo\/CompoundEdit\n+header extends javax\/swing\/undo\/AbstractUndoableEdit flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/undo\/UndoableEditSupport\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.desktop-I.sym.txt","additions":922,"deletions":0,"binary":false,"changes":922,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/java.instrument-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.instrument-H.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,55 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/util\/logging\/ErrorManager\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/LoggingMXBean\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+\n+class name java\/util\/logging\/LoggingPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/MemoryHandler\n+header extends java\/util\/logging\/Handler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/SimpleFormatter\n+header extends java\/util\/logging\/Formatter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/SocketHandler\n+header extends java\/util\/logging\/StreamHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/logging\/XMLFormatter\n+header extends java\/util\/logging\/Formatter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.logging-I.sym.txt","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,269 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/lang\/management\/LockInfo\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/ManagementPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/MemoryMXBean\n+-method name getObjectPendingFinalizationCount descriptor ()I\n+method name getObjectPendingFinalizationCount descriptor ()I flags 401 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")\n+\n+class name java\/lang\/management\/MemoryUsage\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/MonitorInfo\n+header extends java\/lang\/management\/LockInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/RuntimeMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/PlatformManagedObject flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Attribute\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/AttributeList\n+header extends java\/util\/ArrayList flags 21 signature Ljava\/util\/ArrayList<Ljava\/lang\/Object;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadAttributeValueExpException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadBinaryOpValueExpException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadStringOperationException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/ConstructorParameters\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name javax\/management\/ImmutableDescriptor\n+header extends java\/lang\/Object implements javax\/management\/Descriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanAttributeInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanConstructorInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanNotificationInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanOperationInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanParameterInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanPermission\n+header extends java\/security\/Permission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerDelegate\n+header extends java\/lang\/Object implements javax\/management\/MBeanServerDelegateMBean,javax\/management\/NotificationEmitter flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerInvocationHandler\n+header extends java\/lang\/Object implements java\/lang\/reflect\/InvocationHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerNotification\n+header extends javax\/management\/Notification flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerPermission\n+header extends java\/security\/BasicPermission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanTrustPermission\n+header extends java\/security\/BasicPermission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Notification\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/ObjectInstance\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Query\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/StandardEmitterMBean\n+header extends javax\/management\/StandardMBean implements javax\/management\/NotificationEmitter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/StringValueExp\n+header extends java\/lang\/Object implements javax\/management\/ValueExp flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/loading\/DefaultLoaderRepository\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+\n+class name javax\/management\/loading\/MLetContent\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/modelmbean\/InvalidTargetObjectTypeException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/modelmbean\/XMLParseException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/ArrayType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature <T:Ljava\/lang\/Object;>Ljavax\/management\/openmbean\/OpenType<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeDataInvocationHandler\n+header extends java\/lang\/Object implements java\/lang\/reflect\/InvocationHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeDataSupport\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeData,java\/io\/Serializable flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature Ljavax\/management\/openmbean\/OpenType<Ljavax\/management\/openmbean\/CompositeData;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/OpenMBeanAttributeInfoSupport\n+header extends javax\/management\/MBeanAttributeInfo implements javax\/management\/openmbean\/OpenMBeanAttributeInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/OpenMBeanOperationInfoSupport\n+header extends javax\/management\/MBeanOperationInfo implements javax\/management\/openmbean\/OpenMBeanOperationInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/SimpleType\n+header extends javax\/management\/openmbean\/OpenType flags 31 signature <T:Ljava\/lang\/Object;>Ljavax\/management\/openmbean\/OpenType<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/TabularDataSupport\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/TabularData,java\/util\/Map,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature Ljava\/lang\/Object;Ljavax\/management\/openmbean\/TabularData;Ljava\/util\/Map<Ljava\/lang\/Object;Ljava\/lang\/Object;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/TabularType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature Ljavax\/management\/openmbean\/OpenType<Ljavax\/management\/openmbean\/TabularData;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RelationNotification\n+header extends javax\/management\/Notification flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/management\/relation\/RelationSupport\n+header extends java\/lang\/Object implements javax\/management\/relation\/RelationSupportMBean,javax\/management\/MBeanRegistration flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+\n+class name javax\/management\/relation\/Role\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RoleInfo\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RoleResult\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/management\/relation\/RoleUnresolved\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXConnectorServerFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/util\/ServiceLoader$Provider outerClass java\/util\/ServiceLoader innerClassName Provider flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXServiceURL\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/NotificationResult\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/TargetedNotification\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.management-I.sym.txt","additions":269,"deletions":0,"binary":false,"changes":269,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/java.management.rmi-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.management.rmi-H.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,76 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/naming\/BinaryRefAddr\n+header extends javax\/naming\/RefAddr flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/Binding\n+header extends javax\/naming\/NameClassPair flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/CompositeName\n+header extends java\/lang\/Object implements javax\/naming\/Name flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/CompoundName\n+header extends java\/lang\/Object implements javax\/naming\/Name flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/LinkException\n+header extends javax\/naming\/NamingException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/NameClassPair\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/NamingException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/RefAddr\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/Reference\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/AttributeModificationException\n+header extends javax\/naming\/NamingException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/ModificationItem\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/SearchResult\n+header extends javax\/naming\/Binding flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.naming-I.sym.txt","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/net\/http\/HttpRequest$Builder\n+header extends java\/lang\/Object nestHost java\/net\/http\/HttpRequest flags 601\n+innerclass innerClass java\/net\/http\/HttpRequest$BodyPublishers outerClass java\/net\/http\/HttpRequest innerClassName BodyPublishers flags 9\n+innerclass innerClass java\/net\/http\/HttpRequest$BodyPublisher outerClass java\/net\/http\/HttpRequest innerClassName BodyPublisher flags 609\n+innerclass innerClass java\/net\/http\/HttpRequest$Builder outerClass java\/net\/http\/HttpRequest innerClassName Builder flags 609\n+innerclass innerClass java\/net\/http\/HttpClient$Version outerClass java\/net\/http\/HttpClient innerClassName Version flags 4019\n+method name HEAD descriptor ()Ljava\/net\/http\/HttpRequest$Builder; flags 1\n+\n","filename":"make\/data\/symbols\/java.net.http-I.sym.txt","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/rmi\/RemoteException\n+header extends java\/io\/IOException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/dgc\/VMID\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/ObjID\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/RemoteObject\n+header extends java\/lang\/Object implements java\/rmi\/Remote,java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/ServerCloneException\n+header extends java\/lang\/CloneNotSupportedException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/rmi\/server\/UID\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.rmi-I.sym.txt","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/java.scripting-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.scripting-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/java.security.jgss-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.security.jgss-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/java.security.sasl-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.security.sasl-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/java.smartcardio-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.smartcardio-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/java.sql-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.sql-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/java.sql.rowset-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/java.sql.rowset-H.sym.txt","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -141,0 +140,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-B.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -32,0 +31,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-C.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -47,0 +46,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-D.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -32,0 +31,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-E.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,158 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/xml\/catalog\/Catalog\n+header extends java\/lang\/Object flags 601\n+\n+class name javax\/xml\/catalog\/CatalogException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name javax\/xml\/catalog\/CatalogFeatures\n+header extends java\/lang\/Object nestMembers javax\/xml\/catalog\/CatalogFeatures$Builder,javax\/xml\/catalog\/CatalogFeatures$Feature flags 21\n+innerclass innerClass javax\/xml\/catalog\/CatalogFeatures$Builder outerClass javax\/xml\/catalog\/CatalogFeatures innerClassName Builder flags 9\n+innerclass innerClass javax\/xml\/catalog\/CatalogFeatures$Feature outerClass javax\/xml\/catalog\/CatalogFeatures innerClassName Feature flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/catalog\/CatalogManager\n+header extends java\/lang\/Object flags 31\n+\n+class name javax\/xml\/catalog\/CatalogResolver\n+header extends java\/lang\/Object implements org\/xml\/sax\/EntityResolver,javax\/xml\/stream\/XMLResolver,javax\/xml\/transform\/URIResolver,org\/w3c\/dom\/ls\/LSResourceResolver flags 601\n+\n+class name javax\/xml\/datatype\/DatatypeFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/xml\/datatype\/DatatypeConstants$Field outerClass javax\/xml\/datatype\/DatatypeConstants innerClassName Field flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/datatype\/Duration\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/xml\/datatype\/DatatypeConstants$Field outerClass javax\/xml\/datatype\/DatatypeConstants innerClassName Field flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/namespace\/QName\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/parsers\/DocumentBuilder\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/parsers\/DocumentBuilderFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/parsers\/SAXParser\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/parsers\/SAXParserFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/stream\/XMLEventReader\n+header extends java\/lang\/Object implements java\/util\/Iterator flags 601 signature Ljava\/lang\/Object;Ljava\/util\/Iterator<Ljava\/lang\/Object;>;\n+\n+class name javax\/xml\/stream\/XMLInputFactory\n+-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory;\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n+\n+class name javax\/xml\/stream\/XMLStreamException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/transform\/Transformer\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/transform\/TransformerException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/validation\/SchemaFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/xpath\/XPath\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass javax\/xml\/xpath\/XPathEvaluationResult$XPathResultType outerClass javax\/xml\/xpath\/XPathEvaluationResult innerClassName XPathResultType flags 4019\n+\n+class name javax\/xml\/xpath\/XPathException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name javax\/xml\/xpath\/XPathExpression\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass javax\/xml\/xpath\/XPathEvaluationResult$XPathResultType outerClass javax\/xml\/xpath\/XPathEvaluationResult innerClassName XPathResultType flags 4019\n+\n+class name javax\/xml\/xpath\/XPathFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name setProperty descriptor (Ljava\/lang\/String;Ljava\/lang\/String;)V flags 1\n+method name getProperty descriptor (Ljava\/lang\/String;)Ljava\/lang\/String; flags 1\n+\n+class name javax\/xml\/xpath\/XPathNodes\n+header extends java\/lang\/Object implements java\/lang\/Iterable flags 601 signature Ljava\/lang\/Object;Ljava\/lang\/Iterable<Lorg\/w3c\/dom\/Node;>;\n+\n+class name org\/w3c\/dom\/ElementTraversal\n+header extends java\/lang\/Object flags 601\n+\n+class name org\/xml\/sax\/AttributeList\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"1.5\")\n+\n+class name org\/xml\/sax\/DocumentHandler\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"1.5\")\n+\n+class name org\/xml\/sax\/HandlerBase\n+header extends java\/lang\/Object implements org\/xml\/sax\/EntityResolver,org\/xml\/sax\/DTDHandler,org\/xml\/sax\/DocumentHandler,org\/xml\/sax\/ErrorHandler flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"1.5\")\n+\n+class name org\/xml\/sax\/Parser\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"1.5\")\n+\n+class name org\/xml\/sax\/ext\/Attributes2Impl\n+header extends org\/xml\/sax\/helpers\/AttributesImpl implements org\/xml\/sax\/ext\/Attributes2 flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name org\/xml\/sax\/helpers\/AttributeListImpl\n+header extends java\/lang\/Object implements org\/xml\/sax\/AttributeList flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"1.5\")\n+\n+class name org\/xml\/sax\/helpers\/AttributesImpl\n+header extends java\/lang\/Object implements org\/xml\/sax\/Attributes flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name org\/xml\/sax\/helpers\/ParserFactory\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"1.5\")\n+\n+class name org\/xml\/sax\/helpers\/XMLFilterImpl\n+header extends java\/lang\/Object implements org\/xml\/sax\/XMLFilter,org\/xml\/sax\/EntityResolver,org\/xml\/sax\/DTDHandler,org\/xml\/sax\/ContentHandler,org\/xml\/sax\/ErrorHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name org\/xml\/sax\/helpers\/XMLReaderFactory\n+header extends java\/lang\/Object flags 31 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.xml-I.sym.txt","additions":158,"deletions":0,"binary":false,"changes":158,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/xml\/crypto\/NodeSetData\n+header extends java\/lang\/Object implements javax\/xml\/crypto\/Data,java\/lang\/Iterable flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljavax\/xml\/crypto\/Data;Ljava\/lang\/Iterable<TT;>;\n+\n+class name javax\/xml\/crypto\/dom\/DOMCryptoContext\n+header extends java\/lang\/Object implements javax\/xml\/crypto\/XMLCryptoContext flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/crypto\/dsig\/XMLSignatureFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/xml\/crypto\/dsig\/keyinfo\/KeyInfoFactory\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/java.xml.crypto-I.sym.txt","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/java\/accessibility\/util\/AWTEventMonitor\n+-field name componentWithFocus descriptor Ljava\/awt\/Component;\n+-field name componentListener descriptor Ljava\/awt\/event\/ComponentListener;\n+-field name containerListener descriptor Ljava\/awt\/event\/ContainerListener;\n+-field name focusListener descriptor Ljava\/awt\/event\/FocusListener;\n+-field name keyListener descriptor Ljava\/awt\/event\/KeyListener;\n+-field name mouseListener descriptor Ljava\/awt\/event\/MouseListener;\n+-field name mouseMotionListener descriptor Ljava\/awt\/event\/MouseMotionListener;\n+-field name windowListener descriptor Ljava\/awt\/event\/WindowListener;\n+-field name actionListener descriptor Ljava\/awt\/event\/ActionListener;\n+-field name adjustmentListener descriptor Ljava\/awt\/event\/AdjustmentListener;\n+-field name itemListener descriptor Ljava\/awt\/event\/ItemListener;\n+-field name textListener descriptor Ljava\/awt\/event\/TextListener;\n+\n+class name com\/sun\/java\/accessibility\/util\/AccessibilityListenerList\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/java\/accessibility\/util\/EventID\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/java\/accessibility\/util\/GUIInitializedListener\n+header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n+\n+class name com\/sun\/java\/accessibility\/util\/TopLevelWindowListener\n+header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n+\n+class name com\/sun\/java\/accessibility\/util\/Translator\n+header extends javax\/accessibility\/AccessibleContext implements javax\/accessibility\/Accessible,javax\/accessibility\/AccessibleComponent flags 21\n+\n","filename":"make\/data\/symbols\/jdk.accessibility-I.sym.txt","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.attach-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.attach-H.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,373 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/source\/doctree\/AuthorTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/BlockTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/CommentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DeprecatedTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DocCommentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DocRootTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DocTree$Kind\n+field name SNIPPET descriptor Lcom\/sun\/source\/doctree\/DocTree$Kind; flags 4019\n+\n+class name com\/sun\/source\/doctree\/DocTreeVisitor\n+header extends java\/lang\/Object flags 601 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+method name visitSnippet descriptor (Lcom\/sun\/source\/doctree\/SnippetTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/doctree\/SnippetTree;TP;)TR;\n+\n+class name com\/sun\/source\/doctree\/DocTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/EndElementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/EntityTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ErroneousTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/TextTree flags 601\n+\n+class name com\/sun\/source\/doctree\/HiddenTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/IdentifierTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/IndexTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/InheritDocTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/InlineTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/LinkTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/LiteralTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ParamTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ProvidesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ReferenceTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SeeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SerialDataTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SerialFieldTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SerialTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SinceTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SnippetTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+method name getAttributes descriptor ()Ljava\/util\/List; flags 401 signature ()Ljava\/util\/List<+Lcom\/sun\/source\/doctree\/DocTree;>;\n+method name getBody descriptor ()Lcom\/sun\/source\/doctree\/TextTree; flags 401\n+\n+class name com\/sun\/source\/doctree\/StartElementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SummaryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/TextTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ThrowsTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/UnknownBlockTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/UnknownInlineTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/UsesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ValueTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/VersionTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/tree\/AnnotatedTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/AnnotationTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ArrayAccessTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ArrayTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/AssertTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/AssignmentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/BinaryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/BlockTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/BreakTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/CatchTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ClassTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/CompilationUnitTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/CompoundAssignmentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ConditionalExpressionTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ContinueTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/DirectiveTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/DoWhileLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/EmptyStatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/EnhancedForLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ErroneousTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ExportsTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/ExpressionStatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ForLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/IdentifierTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/IfTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ImportTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/InstanceOfTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/IntersectionTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/LabeledStatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/LineMap\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/tree\/LiteralTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/MemberSelectTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/MethodInvocationTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/MethodTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ModifiersTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/NewArrayTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/NewClassTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/OpensTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/PackageTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ParameterizedTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ParenthesizedTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/PrimitiveTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ProvidesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/RequiresTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/ReturnTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/Scope\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/tree\/StatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/SwitchTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/SynchronizedTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ThrowTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/TreeVisitor\n+header extends java\/lang\/Object flags 601 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+\n+class name com\/sun\/source\/tree\/TryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/TypeCastTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/TypeParameterTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/UnaryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/UnionTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/UsesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/VariableTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/WhileLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/WildcardTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/util\/DocSourcePositions\n+header extends java\/lang\/Object implements com\/sun\/source\/util\/SourcePositions flags 601\n+\n+class name com\/sun\/source\/util\/DocTreeFactory\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass com\/sun\/source\/doctree\/AttributeTree$ValueKind outerClass com\/sun\/source\/doctree\/AttributeTree innerClassName ValueKind flags 4019\n+method name newSnippetTree descriptor (Ljava\/util\/List;Lcom\/sun\/source\/doctree\/TextTree;)Lcom\/sun\/source\/doctree\/SnippetTree; flags 401 signature (Ljava\/util\/List<+Lcom\/sun\/source\/doctree\/DocTree;>;Lcom\/sun\/source\/doctree\/TextTree;)Lcom\/sun\/source\/doctree\/SnippetTree;\n+\n+class name com\/sun\/source\/util\/DocTreePathScanner\n+header extends com\/sun\/source\/util\/DocTreeScanner flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Lcom\/sun\/source\/util\/DocTreeScanner<TR;TP;>;\n+\n+class name com\/sun\/source\/util\/DocTreeScanner\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTreeVisitor flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/source\/doctree\/DocTreeVisitor<TR;TP;>;\n+method name visitSnippet descriptor (Lcom\/sun\/source\/doctree\/SnippetTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/doctree\/SnippetTree;TP;)TR;\n+\n+class name com\/sun\/source\/util\/DocTrees\n+header extends com\/sun\/source\/util\/Trees flags 421\n+innerclass innerClass javax\/tools\/JavaCompiler$CompilationTask outerClass javax\/tools\/JavaCompiler innerClassName CompilationTask flags 609\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+\n+class name com\/sun\/source\/util\/JavacTask\n+header extends java\/lang\/Object implements javax\/tools\/JavaCompiler$CompilationTask flags 421\n+innerclass innerClass javax\/tools\/JavaCompiler$CompilationTask outerClass javax\/tools\/JavaCompiler innerClassName CompilationTask flags 609\n+\n+class name com\/sun\/source\/util\/Plugin\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/util\/SimpleDocTreeVisitor\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTreeVisitor flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/source\/doctree\/DocTreeVisitor<TR;TP;>;\n+method name visitSnippet descriptor (Lcom\/sun\/source\/doctree\/SnippetTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/doctree\/SnippetTree;TP;)TR;\n+\n+class name com\/sun\/source\/util\/SimpleTreeVisitor\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/TreeVisitor flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/source\/tree\/TreeVisitor<TR;TP;>;\n+\n+class name com\/sun\/source\/util\/SourcePositions\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/util\/TaskListener\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/util\/TreePathScanner\n+header extends com\/sun\/source\/util\/TreeScanner flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Lcom\/sun\/source\/util\/TreeScanner<TR;TP;>;\n+\n+class name com\/sun\/source\/util\/Trees\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/tools\/JavaCompiler$CompilationTask outerClass javax\/tools\/JavaCompiler innerClassName CompilationTask flags 609\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+\n+class name com\/sun\/tools\/javac\/Main\n+header extends java\/lang\/Object flags 21\n+\n","filename":"make\/data\/symbols\/jdk.compiler-I.sym.txt","additions":373,"deletions":0,"binary":false,"changes":373,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.dynalink-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.dynalink-H.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,110 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.httpserver\n+header exports com\/sun\/net\/httpserver,com\/sun\/net\/httpserver\/spi requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses com\/sun\/net\/httpserver\/spi\/HttpServerProvider target linux-amd64 moduleMainClass sun\/net\/httpserver\/simpleserver\/Main flags 8000\n+\n+class name com\/sun\/net\/httpserver\/Filter\n+method name adaptRequest descriptor (Ljava\/lang\/String;Ljava\/util\/function\/UnaryOperator;)Lcom\/sun\/net\/httpserver\/Filter; flags 9 signature (Ljava\/lang\/String;Ljava\/util\/function\/UnaryOperator<Lcom\/sun\/net\/httpserver\/Request;>;)Lcom\/sun\/net\/httpserver\/Filter;\n+\n+class name com\/sun\/net\/httpserver\/Headers\n+header extends java\/lang\/Object implements java\/util\/Map flags 21 signature Ljava\/lang\/Object;Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/util\/List<Ljava\/lang\/String;>;>;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name <init> descriptor (Ljava\/util\/Map;)V flags 1 signature (Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/util\/List<Ljava\/lang\/String;>;>;)V\n+method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V flags 1 signature (Ljava\/util\/function\/BiFunction<-Ljava\/lang\/String;-Ljava\/util\/List<Ljava\/lang\/String;>;+Ljava\/util\/List<Ljava\/lang\/String;>;>;)V\n+method name toString descriptor ()Ljava\/lang\/String; flags 1\n+method name of descriptor ([Ljava\/lang\/String;)Lcom\/sun\/net\/httpserver\/Headers; flags 89\n+method name of descriptor (Ljava\/util\/Map;)Lcom\/sun\/net\/httpserver\/Headers; flags 9 signature (Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/util\/List<Ljava\/lang\/String;>;>;)Lcom\/sun\/net\/httpserver\/Headers;\n+\n+class name com\/sun\/net\/httpserver\/HttpContext\n+header extends java\/lang\/Object flags 421\n+\n+class name com\/sun\/net\/httpserver\/HttpExchange\n+header extends java\/lang\/Object implements java\/lang\/AutoCloseable,com\/sun\/net\/httpserver\/Request flags 421\n+\n+class name com\/sun\/net\/httpserver\/HttpHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/net\/httpserver\/HttpHandlers\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name handleOrElse descriptor (Ljava\/util\/function\/Predicate;Lcom\/sun\/net\/httpserver\/HttpHandler;Lcom\/sun\/net\/httpserver\/HttpHandler;)Lcom\/sun\/net\/httpserver\/HttpHandler; flags 9 signature (Ljava\/util\/function\/Predicate<Lcom\/sun\/net\/httpserver\/Request;>;Lcom\/sun\/net\/httpserver\/HttpHandler;Lcom\/sun\/net\/httpserver\/HttpHandler;)Lcom\/sun\/net\/httpserver\/HttpHandler;\n+method name of descriptor (ILcom\/sun\/net\/httpserver\/Headers;Ljava\/lang\/String;)Lcom\/sun\/net\/httpserver\/HttpHandler; flags 9\n+\n+class name com\/sun\/net\/httpserver\/HttpPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/net\/httpserver\/HttpServer\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name create descriptor (Ljava\/net\/InetSocketAddress;ILjava\/lang\/String;Lcom\/sun\/net\/httpserver\/HttpHandler;[Lcom\/sun\/net\/httpserver\/Filter;)Lcom\/sun\/net\/httpserver\/HttpServer; thrownTypes java\/io\/IOException flags 89\n+\n+class name com\/sun\/net\/httpserver\/HttpsConfigurator\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/net\/httpserver\/HttpsExchange\n+header extends com\/sun\/net\/httpserver\/HttpExchange flags 421\n+\n+class name com\/sun\/net\/httpserver\/HttpsParameters\n+header extends java\/lang\/Object flags 421\n+\n+class name com\/sun\/net\/httpserver\/HttpsServer\n+header extends com\/sun\/net\/httpserver\/HttpServer flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name create descriptor (Ljava\/net\/InetSocketAddress;ILjava\/lang\/String;Lcom\/sun\/net\/httpserver\/HttpHandler;[Lcom\/sun\/net\/httpserver\/Filter;)Lcom\/sun\/net\/httpserver\/HttpsServer; thrownTypes java\/io\/IOException flags 89\n+\n+class name com\/sun\/net\/httpserver\/Request\n+header extends java\/lang\/Object flags 601\n+method name getRequestURI descriptor ()Ljava\/net\/URI; flags 401\n+method name getRequestMethod descriptor ()Ljava\/lang\/String; flags 401\n+method name getRequestHeaders descriptor ()Lcom\/sun\/net\/httpserver\/Headers; flags 401\n+method name with descriptor (Ljava\/lang\/String;Ljava\/util\/List;)Lcom\/sun\/net\/httpserver\/Request; flags 1 signature (Ljava\/lang\/String;Ljava\/util\/List<Ljava\/lang\/String;>;)Lcom\/sun\/net\/httpserver\/Request;\n+\n+class name com\/sun\/net\/httpserver\/SimpleFileServer\n+header extends java\/lang\/Object nestMembers com\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel flags 31\n+innerclass innerClass com\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel outerClass com\/sun\/net\/httpserver\/SimpleFileServer innerClassName OutputLevel flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name createFileServer descriptor (Ljava\/net\/InetSocketAddress;Ljava\/nio\/file\/Path;Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel;)Lcom\/sun\/net\/httpserver\/HttpServer; flags 9\n+method name createFileHandler descriptor (Ljava\/nio\/file\/Path;)Lcom\/sun\/net\/httpserver\/HttpHandler; flags 9\n+method name createOutputFilter descriptor (Ljava\/io\/OutputStream;Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel;)Lcom\/sun\/net\/httpserver\/Filter; flags 9\n+\n+class name com\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel\n+header extends java\/lang\/Enum nestHost com\/sun\/net\/httpserver\/SimpleFileServer flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel;>;\n+innerclass innerClass com\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel outerClass com\/sun\/net\/httpserver\/SimpleFileServer innerClassName OutputLevel flags 4019\n+field name NONE descriptor Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel; flags 4019\n+field name INFO descriptor Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel; flags 4019\n+field name VERBOSE descriptor Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel; flags 4019\n+method name values descriptor ()[Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Lcom\/sun\/net\/httpserver\/SimpleFileServer$OutputLevel; flags 9\n+\n+class name com\/sun\/net\/httpserver\/spi\/HttpServerProvider\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/jdk.httpserver-I.sym.txt","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,0 @@\n-field name NULL descriptor Ljdk\/incubator\/foreign\/MemoryAddress; flags 19\n@@ -65,0 +64,1 @@\n+field name NULL descriptor Ljdk\/incubator\/foreign\/MemoryAddress; flags 19\n@@ -81,1 +81,0 @@\n-field name LAYOUT_NAME descriptor Ljava\/lang\/String; constantValue layout\/name flags 19\n@@ -83,0 +82,1 @@\n+field name LAYOUT_NAME descriptor Ljava\/lang\/String; constantValue layout\/name flags 19\n@@ -91,0 +91,4 @@\n+-method name acquire descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name asReadOnly descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name isReadOnly descriptor ()Z\n+-method name mapFromPath descriptor (Ljava\/nio\/file\/Path;JLjava\/nio\/channels\/FileChannel$MapMode;)Ljdk\/incubator\/foreign\/MemorySegment;\n@@ -97,4 +101,0 @@\n--method name acquire descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n--method name asReadOnly descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n--method name isReadOnly descriptor ()Z\n--method name mapFromPath descriptor (Ljava\/nio\/file\/Path;JLjava\/nio\/channels\/FileChannel$MapMode;)Ljdk\/incubator\/foreign\/MemorySegment;\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-F.sym.txt","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,1 +267,0 @@\n-field name SHARE descriptor I constantValue 8 flags 19\n@@ -273,0 +272,1 @@\n+field name SHARE descriptor I constantValue 8 flags 19\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-G.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+method name systemLookup descriptor ()Ljdk\/incubator\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n@@ -54,1 +55,0 @@\n-method name systemLookup descriptor ()Ljdk\/incubator\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-H.sym.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,582 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/incubator\/foreign\/AbstractLayout\n+header extends java\/lang\/Object implements jdk\/incubator\/foreign\/MemoryLayout flags 420\n+innerclass innerClass java\/lang\/constant\/DirectMethodHandleDesc$Kind outerClass java\/lang\/constant\/DirectMethodHandleDesc innerClassName Kind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name <init> descriptor (Ljava\/util\/OptionalLong;JLjava\/util\/Map;)V\n+-method name attribute descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name attributes descriptor ()Ljava\/util\/stream\/Stream;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/AbstractLayout;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/MemoryLayout;\n+method name <init> descriptor (Ljava\/util\/OptionalLong;JLjava\/util\/Optional;)V flags 1 signature (Ljava\/util\/OptionalLong;JLjava\/util\/Optional<Ljava\/lang\/String;>;)V\n+method name byteSize descriptor ()J flags 1\n+\n+class name jdk\/incubator\/foreign\/Addressable\n+header extends java\/lang\/Object sealed true flags 601\n+\n+class name jdk\/incubator\/foreign\/CLinker\n+header extends java\/lang\/Object implements jdk\/incubator\/foreign\/SymbolLookup sealed true flags 601\n+-field name C_CHAR descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_SHORT descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_INT descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_LONG descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_LONG_LONG descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_FLOAT descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_DOUBLE descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_POINTER descriptor Ljdk\/incubator\/foreign\/ValueLayout;\n+-field name C_VA_LIST descriptor Ljdk\/incubator\/foreign\/MemoryLayout;\n+-method name downcallHandle descriptor (Ljdk\/incubator\/foreign\/Addressable;Ljava\/lang\/invoke\/MethodType;Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name asVarArg descriptor (Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/MemoryLayout;\n+-method name toJavaString descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)Ljava\/lang\/String;\n+-method name getInstance descriptor ()Ljdk\/incubator\/foreign\/CLinker;\n+-method name systemLookup descriptor ()Ljdk\/incubator\/foreign\/SymbolLookup;\n+-method name downcallHandle descriptor (Ljdk\/incubator\/foreign\/Addressable;Ljdk\/incubator\/foreign\/SegmentAllocator;Ljava\/lang\/invoke\/MethodType;Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name downcallHandle descriptor (Ljava\/lang\/invoke\/MethodType;Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name upcallStub descriptor (Ljava\/lang\/invoke\/MethodHandle;Ljdk\/incubator\/foreign\/FunctionDescriptor;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/MemoryAddress;\n+-method name toCString descriptor (Ljava\/lang\/String;Ljdk\/incubator\/foreign\/SegmentAllocator;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name toCString descriptor (Ljava\/lang\/String;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name toJavaString descriptor (Ljdk\/incubator\/foreign\/MemoryAddress;)Ljava\/lang\/String;\n+-method name allocateMemory descriptor (J)Ljdk\/incubator\/foreign\/MemoryAddress;\n+-method name freeMemory descriptor (Ljdk\/incubator\/foreign\/MemoryAddress;)V\n+method name systemCLinker descriptor ()Ljdk\/incubator\/foreign\/CLinker; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name lookup descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional; flags 1 signature (Ljava\/lang\/String;)Ljava\/util\/Optional<Ljdk\/incubator\/foreign\/NativeSymbol;>;\n+method name downcallHandle descriptor (Ljdk\/incubator\/foreign\/NativeSymbol;Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle; flags 1\n+method name downcallHandle descriptor (Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle; flags 401\n+method name upcallStub descriptor (Ljava\/lang\/invoke\/MethodHandle;Ljdk\/incubator\/foreign\/FunctionDescriptor;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/NativeSymbol; flags 401\n+method name downcallType descriptor (Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodType; flags 9\n+method name upcallType descriptor (Ljdk\/incubator\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodType; flags 9\n+\n+-class name jdk\/incubator\/foreign\/CLinker$TypeKind\n+\n+-class name jdk\/incubator\/foreign\/CLinker$VaList\n+\n+-class name jdk\/incubator\/foreign\/CLinker$VaList$Builder\n+\n+class name jdk\/incubator\/foreign\/FunctionDescriptor\n+header extends java\/lang\/Object implements java\/lang\/constant\/Constable sealed true flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-field name TRIVIAL_ATTRIBUTE_NAME descriptor Ljava\/lang\/String;\n+-method name attribute descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name attributes descriptor ()Ljava\/util\/stream\/Stream;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/FunctionDescriptor;\n+-method name withAppendedArgumentLayouts descriptor ([Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/FunctionDescriptor;\n+-method name withReturnLayout descriptor (Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/FunctionDescriptor;\n+-method name withVoidReturnLayout descriptor ()Ljdk\/incubator\/foreign\/FunctionDescriptor;\n+method name asVariadic descriptor ([Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/FunctionDescriptor; flags 81\n+method name firstVariadicArgumentIndex descriptor ()I flags 1\n+method name appendArgumentLayouts descriptor ([Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/FunctionDescriptor; flags 81\n+method name insertArgumentLayouts descriptor (I[Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/FunctionDescriptor; flags 81\n+method name changeReturnLayout descriptor (Ljdk\/incubator\/foreign\/MemoryLayout;)Ljdk\/incubator\/foreign\/FunctionDescriptor; flags 1\n+method name dropReturnLayout descriptor ()Ljdk\/incubator\/foreign\/FunctionDescriptor; flags 1\n+\n+class name jdk\/incubator\/foreign\/GroupLayout\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/GroupLayout;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/AbstractLayout;\n+-method name attributes descriptor ()Ljava\/util\/stream\/Stream;\n+-method name attribute descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/MemoryLayout;\n+method name byteSize descriptor ()J flags 1041\n+\n+-class name jdk\/incubator\/foreign\/MemoryAccess\n+\n+class name jdk\/incubator\/foreign\/MemoryAddress\n+header extends java\/lang\/Object implements jdk\/incubator\/foreign\/Addressable sealed true flags 601\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfByte outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfByte flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfBoolean outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfBoolean flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfChar outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfChar flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfShort outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfShort flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfFloat outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+-method name address descriptor ()Ljdk\/incubator\/foreign\/MemoryAddress;\n+-method name segmentOffset descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)J\n+-method name scope descriptor ()Ljdk\/incubator\/foreign\/ResourceScope;\n+-method name asSegment descriptor (JLjdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name asSegment descriptor (JLjava\/lang\/Runnable;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name isNative descriptor ()Z\n+method name getUtf8String descriptor (J)Ljava\/lang\/String; flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setUtf8String descriptor (JLjava\/lang\/String;)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;J)B flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;JB)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean;J)Z flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean;JZ)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;J)C flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;JC)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;J)S flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;JS)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;J)I flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;JI)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;J)F flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;JF)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;J)J flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;JJ)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;J)D flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;JD)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;J)Ljdk\/incubator\/foreign\/MemoryAddress; flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;JLjdk\/incubator\/foreign\/Addressable;)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;J)C flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;JC)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;J)S flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;JS)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;J)I flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;JI)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;J)F flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;JF)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;J)J flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;JJ)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;J)D flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;JD)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;J)Ljdk\/incubator\/foreign\/MemoryAddress; flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;JLjdk\/incubator\/foreign\/Addressable;)V flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+\n+class name jdk\/incubator\/foreign\/MemoryHandles\n+-method name varHandle descriptor (Ljava\/lang\/Class;Ljava\/nio\/ByteOrder;)Ljava\/lang\/invoke\/VarHandle;\n+-method name varHandle descriptor (Ljava\/lang\/Class;JLjava\/nio\/ByteOrder;)Ljava\/lang\/invoke\/VarHandle;\n+-method name asAddressVarHandle descriptor (Ljava\/lang\/invoke\/VarHandle;)Ljava\/lang\/invoke\/VarHandle;\n+method name varHandle descriptor (Ljdk\/incubator\/foreign\/ValueLayout;)Ljava\/lang\/invoke\/VarHandle; flags 9\n+\n+class name jdk\/incubator\/foreign\/MemoryLayout\n+header extends java\/lang\/Object implements java\/lang\/constant\/Constable nestMembers jdk\/incubator\/foreign\/MemoryLayout$PathElement sealed true flags 601\n+innerclass innerClass jdk\/incubator\/foreign\/MemoryLayout$PathElement outerClass jdk\/incubator\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfBoolean outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfBoolean flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfChar outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfChar flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfByte outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfByte flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfShort outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfShort flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfFloat outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-field name LAYOUT_NAME descriptor Ljava\/lang\/String;\n+-method name byteSize descriptor ()J\n+-method name varHandle descriptor (Ljava\/lang\/Class;[Ljdk\/incubator\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle;\n+-method name attribute descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/MemoryLayout;\n+-method name attributes descriptor ()Ljava\/util\/stream\/Stream;\n+-method name valueLayout descriptor (JLjava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout;\n+method name byteSize descriptor ()J flags 401\n+method name varHandle descriptor ([Ljdk\/incubator\/foreign\/MemoryLayout$PathElement;)Ljava\/lang\/invoke\/VarHandle; flags 81\n+method name valueLayout descriptor (Ljava\/lang\/Class;Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 9 signature (Ljava\/lang\/Class<*>;Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout;\n+\n+class name jdk\/incubator\/foreign\/MemoryLayout$PathElement\n+header extends java\/lang\/Object nestHost jdk\/incubator\/foreign\/MemoryLayout sealed true flags 601\n+innerclass innerClass jdk\/incubator\/foreign\/MemoryLayout$PathElement outerClass jdk\/incubator\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+-class name jdk\/incubator\/foreign\/MemoryLayouts\n+\n+class name jdk\/incubator\/foreign\/MemorySegment\n+header extends java\/lang\/Object implements jdk\/incubator\/foreign\/Addressable sealed true flags 601\n+innerclass innerClass java\/nio\/channels\/FileChannel$MapMode outerClass java\/nio\/channels\/FileChannel innerClassName MapMode flags 9\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfByte outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfByte flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfBoolean outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfBoolean flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfChar outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfChar flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfShort outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfShort flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfFloat outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name toByteArray descriptor ()[B\n+-method name copyFrom descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)V\n+-method name asSlice descriptor (Ljdk\/incubator\/foreign\/MemoryAddress;J)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name asSlice descriptor (Ljdk\/incubator\/foreign\/MemoryAddress;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name toShortArray descriptor ()[S\n+-method name toCharArray descriptor ()[C\n+-method name toIntArray descriptor ()[I\n+-method name toFloatArray descriptor ()[F\n+-method name toLongArray descriptor ()[J\n+-method name toDoubleArray descriptor ()[D\n+-method name asReadOnly descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name isReadOnly descriptor ()Z\n+-method name globalNativeSegment descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n+method name asReadOnly descriptor ()Ljdk\/incubator\/foreign\/MemorySegment; flags 401\n+method name isReadOnly descriptor ()Z flags 401\n+method name asOverlappingSlice descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)Ljdk\/incubator\/foreign\/MemorySegment; flags 401\n+method name segmentOffset descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)J flags 401\n+method name copyFrom descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;)[B flags 401\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;)[S flags 401\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;)[C flags 401\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;)[I flags 401\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;)[F flags 401\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;)[J flags 401\n+method name toArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;)[D flags 401\n+method name getUtf8String descriptor (J)Ljava\/lang\/String; flags 1\n+method name setUtf8String descriptor (JLjava\/lang\/String;)V flags 1\n+method name ofAddress descriptor (Ljdk\/incubator\/foreign\/MemoryAddress;JLjdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/MemorySegment; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name copy descriptor (Ljdk\/incubator\/foreign\/MemorySegment;JLjdk\/incubator\/foreign\/MemorySegment;JJ)V flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name copy descriptor (Ljdk\/incubator\/foreign\/MemorySegment;Ljdk\/incubator\/foreign\/ValueLayout;JLjdk\/incubator\/foreign\/MemorySegment;Ljdk\/incubator\/foreign\/ValueLayout;JJ)V flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;J)B flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;JB)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean;J)Z flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean;JZ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;J)C flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;JC)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;J)S flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;JS)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;J)I flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;JI)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;J)F flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;JF)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;J)J flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;JJ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;J)D flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;JD)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name get descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;J)Ljdk\/incubator\/foreign\/MemoryAddress; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;JLjdk\/incubator\/foreign\/Addressable;)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;J)C flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;JC)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;J)S flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;JS)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;J)I flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;JI)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;J)F flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;JF)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;J)J flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;JJ)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;J)D flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;JD)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;J)Ljdk\/incubator\/foreign\/MemoryAddress; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;JLjdk\/incubator\/foreign\/Addressable;)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name copy descriptor (Ljdk\/incubator\/foreign\/MemorySegment;Ljdk\/incubator\/foreign\/ValueLayout;JLjava\/lang\/Object;II)V flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name copy descriptor (Ljava\/lang\/Object;ILjdk\/incubator\/foreign\/MemorySegment;Ljdk\/incubator\/foreign\/ValueLayout;JI)V flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+\n+class name jdk\/incubator\/foreign\/NativeSymbol\n+header extends java\/lang\/Object implements jdk\/incubator\/foreign\/Addressable sealed true flags 601\n+method name name descriptor ()Ljava\/lang\/String; flags 401\n+method name scope descriptor ()Ljdk\/incubator\/foreign\/ResourceScope; flags 401\n+method name address descriptor ()Ljdk\/incubator\/foreign\/MemoryAddress; flags 401\n+method name ofAddress descriptor (Ljava\/lang\/String;Ljdk\/incubator\/foreign\/MemoryAddress;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/NativeSymbol; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+\n+class name jdk\/incubator\/foreign\/ResourceScope\n+header extends java\/lang\/Object implements java\/lang\/AutoCloseable sealed true flags 601\n+-method name isImplicit descriptor ()Z\n+-method name acquire descriptor ()Ljdk\/incubator\/foreign\/ResourceScope$Handle;\n+-method name release descriptor (Ljdk\/incubator\/foreign\/ResourceScope$Handle;)V\n+method name keepAlive descriptor (Ljdk\/incubator\/foreign\/ResourceScope;)V flags 401\n+\n+-class name jdk\/incubator\/foreign\/ResourceScope$Handle\n+\n+class name jdk\/incubator\/foreign\/SegmentAllocator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass jdk\/incubator\/foreign\/MemoryLayout$PathElement outerClass jdk\/incubator\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfByte outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfByte flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfChar outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfChar flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfShort outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfShort flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfFloat outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;B)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;C)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;S)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;I)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;F)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;J)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;D)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout;Ljdk\/incubator\/foreign\/Addressable;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[B)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[S)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[C)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[I)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[F)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[J)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[D)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout;[Ljdk\/incubator\/foreign\/Addressable;)Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name arenaAllocator descriptor (JLjdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator;\n+-method name arenaAllocator descriptor (Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator;\n+-method name ofSegment descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)Ljdk\/incubator\/foreign\/SegmentAllocator;\n+-method name ofScope descriptor (Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator;\n+method name allocateUtf8String descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;B)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;C)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;S)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;I)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;F)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;J)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;D)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocate descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;Ljdk\/incubator\/foreign\/Addressable;)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfByte;[B)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfShort;[S)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfChar;[C)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;[I)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfFloat;[F)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;[J)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name allocateArray descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;[D)Ljdk\/incubator\/foreign\/MemorySegment; flags 1\n+method name newNativeArena descriptor (Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator; flags 9\n+method name newNativeArena descriptor (JLjdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator; flags 9\n+method name newNativeArena descriptor (JJLjdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator; flags 9\n+method name prefixAllocator descriptor (Ljdk\/incubator\/foreign\/MemorySegment;)Ljdk\/incubator\/foreign\/SegmentAllocator; flags 9\n+method name nativeAllocator descriptor (Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/SegmentAllocator; flags 9\n+method name implicitAllocator descriptor ()Ljdk\/incubator\/foreign\/SegmentAllocator; flags 9\n+\n+class name jdk\/incubator\/foreign\/SequenceLayout\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/SequenceLayout;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/AbstractLayout;\n+-method name attributes descriptor ()Ljava\/util\/stream\/Stream;\n+-method name attribute descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/MemoryLayout;\n+method name byteSize descriptor ()J flags 1041\n+\n+class name jdk\/incubator\/foreign\/SymbolLookup\n+-method name lookup descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+method name lookup descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional; flags 401 signature (Ljava\/lang\/String;)Ljava\/util\/Optional<Ljdk\/incubator\/foreign\/NativeSymbol;>;\n+\n+class name jdk\/incubator\/foreign\/VaList\n+header extends java\/lang\/Object implements jdk\/incubator\/foreign\/Addressable nestMembers jdk\/incubator\/foreign\/VaList$Builder sealed true flags 601\n+innerclass innerClass jdk\/incubator\/foreign\/VaList$Builder outerClass jdk\/incubator\/foreign\/VaList innerClassName Builder flags 609\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+method name nextVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;)I flags 401\n+method name nextVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;)J flags 401\n+method name nextVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;)D flags 401\n+method name nextVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;)Ljdk\/incubator\/foreign\/MemoryAddress; flags 401\n+method name nextVarg descriptor (Ljdk\/incubator\/foreign\/GroupLayout;Ljdk\/incubator\/foreign\/SegmentAllocator;)Ljdk\/incubator\/foreign\/MemorySegment; flags 401\n+method name skip descriptor ([Ljdk\/incubator\/foreign\/MemoryLayout;)V flags 481\n+method name scope descriptor ()Ljdk\/incubator\/foreign\/ResourceScope; flags 401\n+method name copy descriptor ()Ljdk\/incubator\/foreign\/VaList; flags 401\n+method name address descriptor ()Ljdk\/incubator\/foreign\/MemoryAddress; flags 401\n+method name ofAddress descriptor (Ljdk\/incubator\/foreign\/MemoryAddress;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/VaList; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name make descriptor (Ljava\/util\/function\/Consumer;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/VaList; flags 9 signature (Ljava\/util\/function\/Consumer<Ljdk\/incubator\/foreign\/VaList$Builder;>;Ljdk\/incubator\/foreign\/ResourceScope;)Ljdk\/incubator\/foreign\/VaList;\n+method name empty descriptor ()Ljdk\/incubator\/foreign\/VaList; flags 9\n+\n+class name jdk\/incubator\/foreign\/VaList$Builder\n+header extends java\/lang\/Object nestHost jdk\/incubator\/foreign\/VaList sealed true flags 601\n+innerclass innerClass jdk\/incubator\/foreign\/VaList$Builder outerClass jdk\/incubator\/foreign\/VaList innerClassName Builder flags 609\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+method name addVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfInt;I)Ljdk\/incubator\/foreign\/VaList$Builder; flags 401\n+method name addVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfLong;J)Ljdk\/incubator\/foreign\/VaList$Builder; flags 401\n+method name addVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfDouble;D)Ljdk\/incubator\/foreign\/VaList$Builder; flags 401\n+method name addVarg descriptor (Ljdk\/incubator\/foreign\/ValueLayout$OfAddress;Ljdk\/incubator\/foreign\/Addressable;)Ljdk\/incubator\/foreign\/VaList$Builder; flags 401\n+method name addVarg descriptor (Ljdk\/incubator\/foreign\/GroupLayout;Ljdk\/incubator\/foreign\/MemorySegment;)Ljdk\/incubator\/foreign\/VaList$Builder; flags 401\n+\n+class name jdk\/incubator\/foreign\/ValueLayout\n+header extends jdk\/incubator\/foreign\/AbstractLayout implements jdk\/incubator\/foreign\/MemoryLayout nestMembers jdk\/incubator\/foreign\/ValueLayout$OfAddress,jdk\/incubator\/foreign\/ValueLayout$OfDouble,jdk\/incubator\/foreign\/ValueLayout$OfLong,jdk\/incubator\/foreign\/ValueLayout$OfFloat,jdk\/incubator\/foreign\/ValueLayout$OfInt,jdk\/incubator\/foreign\/ValueLayout$OfShort,jdk\/incubator\/foreign\/ValueLayout$OfChar,jdk\/incubator\/foreign\/ValueLayout$OfByte,jdk\/incubator\/foreign\/ValueLayout$OfBoolean sealed true flags 21\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfByte outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfByte flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfBoolean outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfBoolean flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfChar outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfChar flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfShort outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfShort flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfFloat outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfFloat flags 19\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/ValueLayout;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/AbstractLayout;\n+-method name attributes descriptor ()Ljava\/util\/stream\/Stream;\n+-method name attribute descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name withAttribute descriptor (Ljava\/lang\/String;Ljava\/lang\/constant\/Constable;)Ljdk\/incubator\/foreign\/MemoryLayout;\n+field name ADDRESS descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfAddress; flags 19\n+field name JAVA_BYTE descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfByte; flags 19\n+field name JAVA_BOOLEAN descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean; flags 19\n+field name JAVA_CHAR descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfChar; flags 19\n+field name JAVA_SHORT descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfShort; flags 19\n+field name JAVA_INT descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfInt; flags 19\n+field name JAVA_LONG descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfLong; flags 19\n+field name JAVA_FLOAT descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfFloat; flags 19\n+field name JAVA_DOUBLE descriptor Ljdk\/incubator\/foreign\/ValueLayout$OfDouble; flags 19\n+method name carrier descriptor ()Ljava\/lang\/Class; flags 1 signature ()Ljava\/lang\/Class<*>;\n+method name byteSize descriptor ()J flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfAddress\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfAddress outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfAddress flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfAddress; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfAddress; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfAddress; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfBoolean\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfBoolean outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfBoolean flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfBoolean; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfByte\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfByte outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfByte flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfByte; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfByte; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfByte; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfChar\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfChar outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfChar flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfChar; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfChar; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfChar; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfDouble\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfDouble outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfDouble flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfDouble; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfDouble; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfDouble; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfFloat\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfFloat outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfFloat flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfFloat; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfFloat; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfFloat; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfInt\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfInt outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfInt flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfInt; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfInt; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfInt; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfLong\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfLong outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfLong flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfLong; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfLong; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfLong; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n+class name jdk\/incubator\/foreign\/ValueLayout$OfShort\n+header extends jdk\/incubator\/foreign\/ValueLayout nestHost jdk\/incubator\/foreign\/ValueLayout flags 31\n+innerclass innerClass jdk\/incubator\/foreign\/ValueLayout$OfShort outerClass jdk\/incubator\/foreign\/ValueLayout innerClassName OfShort flags 19\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout$OfShort; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout$OfShort; flags 1\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout$OfShort; flags 1\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljdk\/incubator\/foreign\/ValueLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/MemoryLayout; flags 1041\n+method name isPadding descriptor ()Z flags 1041\n+method name bitSize descriptor ()J flags 1041\n+method name hasSize descriptor ()Z flags 1041\n+method name byteSize descriptor ()J flags 1041\n+method name withBitAlignment descriptor (J)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljdk\/incubator\/foreign\/AbstractLayout; flags 1041\n+\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-I.sym.txt","additions":582,"deletions":0,"binary":false,"changes":582,"status":"added"},{"patch":"@@ -35,0 +35,2 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -58,0 +60,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -233,0 +236,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -405,0 +409,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -577,0 +582,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -753,0 +759,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -922,0 +929,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -1187,0 +1195,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n","filename":"make\/data\/symbols\/jdk.incubator.vector-G.sym.txt","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,14 @@\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Byte;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n@@ -39,0 +53,64 @@\n+class name jdk\/incubator\/vector\/DoubleVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Double;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/FloatVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Float;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/IntVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Integer;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/LongVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Long;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n@@ -40,0 +118,14 @@\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Short;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n","filename":"make\/data\/symbols\/jdk.incubator.vector-H.sym.txt","additions":92,"deletions":0,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -0,0 +1,209 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/incubator\/vector\/ByteVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Byte;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ByteVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ByteVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ByteVector;\n+-method name compare descriptor (Ljdk\/incubator\/vector\/VectorOperators$Comparison;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/VectorMask;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ByteVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Byte;>;)Ljdk\/incubator\/vector\/ByteVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ByteVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Byte;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Byte;>;)Ljdk\/incubator\/vector\/ByteVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ByteVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Byte;>;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Byte;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Byte;>;)Ljdk\/incubator\/vector\/ByteVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+\n+class name jdk\/incubator\/vector\/DoubleVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Double;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/DoubleVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/DoubleVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/DoubleVector;\n+-method name compare descriptor (Ljdk\/incubator\/vector\/VectorOperators$Comparison;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/VectorMask;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/DoubleVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Double;>;)Ljdk\/incubator\/vector\/DoubleVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/DoubleVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Double;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Double;>;)Ljdk\/incubator\/vector\/DoubleVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/DoubleVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Double;>;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Double;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Double;>;)Ljdk\/incubator\/vector\/DoubleVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+\n+class name jdk\/incubator\/vector\/FloatVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Float;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/FloatVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/FloatVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/FloatVector;\n+-method name compare descriptor (Ljdk\/incubator\/vector\/VectorOperators$Comparison;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/VectorMask;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/FloatVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Float;>;)Ljdk\/incubator\/vector\/FloatVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/FloatVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Float;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Float;>;)Ljdk\/incubator\/vector\/FloatVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/FloatVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Float;>;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Float;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Float;>;)Ljdk\/incubator\/vector\/FloatVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+\n+class name jdk\/incubator\/vector\/IntVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Integer;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/IntVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/IntVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/IntVector;\n+-method name compare descriptor (Ljdk\/incubator\/vector\/VectorOperators$Comparison;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/VectorMask;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/IntVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Integer;>;)Ljdk\/incubator\/vector\/IntVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/IntVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Integer;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Integer;>;)Ljdk\/incubator\/vector\/IntVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/IntVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Integer;>;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Integer;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Integer;>;)Ljdk\/incubator\/vector\/IntVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+\n+class name jdk\/incubator\/vector\/LongVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Long;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/LongVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/LongVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/LongVector;\n+-method name compare descriptor (Ljdk\/incubator\/vector\/VectorOperators$Comparison;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/VectorMask;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/LongVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Long;>;)Ljdk\/incubator\/vector\/LongVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/LongVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Long;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Long;>;)Ljdk\/incubator\/vector\/LongVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/LongVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Long;>;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Long;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Long;>;)Ljdk\/incubator\/vector\/LongVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+\n+class name jdk\/incubator\/vector\/ShortVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Short;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ShortVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ShortVector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ShortVector;\n+-method name compare descriptor (Ljdk\/incubator\/vector\/VectorOperators$Comparison;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/VectorMask;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+-method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ShortVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Short;>;)Ljdk\/incubator\/vector\/ShortVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ShortVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Short;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Short;>;)Ljdk\/incubator\/vector\/ShortVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/ShortVector; flags 401 signature (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Short;>;Ljdk\/incubator\/vector\/Vector<Ljava\/lang\/Short;>;Ljdk\/incubator\/vector\/VectorMask<Ljava\/lang\/Short;>;)Ljdk\/incubator\/vector\/ShortVector;\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Ternary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Binary;Ljdk\/incubator\/vector\/Vector;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+method name lanewise descriptor (Ljdk\/incubator\/vector\/VectorOperators$Unary;Ljdk\/incubator\/vector\/VectorMask;)Ljdk\/incubator\/vector\/Vector; flags 1041\n+\n+class name jdk\/incubator\/vector\/VectorMask\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorMask flags 421 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"make\/data\/symbols\/jdk.incubator.vector-I.sym.txt","additions":209,"deletions":0,"binary":false,"changes":209,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.jartool-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.jartool-H.sym.txt","status":"copied"},{"patch":"@@ -32,0 +32,1 @@\n+method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Ljavax\/tools\/FileObject;IIILjava\/lang\/String;)V flags 1\n@@ -34,1 +35,0 @@\n-method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Ljavax\/tools\/FileObject;IIILjava\/lang\/String;)V flags 1\n","filename":"make\/data\/symbols\/jdk.javadoc-H.sym.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/javadoc\/doclet\/Reporter\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Lcom\/sun\/source\/util\/DocTreePath;IIILjava\/lang\/String;)V flags 1\n+\n+class name jdk\/javadoc\/doclet\/StandardDoclet\n+header extends java\/lang\/Object implements jdk\/javadoc\/doclet\/Doclet flags 21\n+innerclass innerClass jdk\/javadoc\/doclet\/Doclet$Option outerClass jdk\/javadoc\/doclet\/Doclet innerClassName Option flags 609\n+\n","filename":"make\/data\/symbols\/jdk.javadoc-I.sym.txt","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.jconsole-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.jconsole-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/jdk.jdi-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.jdi-H.sym.txt","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-header exports jdk\/jfr,jdk\/jfr\/consumer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n+header exports jdk\/jfr,jdk\/jfr\/consumer extraModulePackages jdk\/jfr\/internal requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n@@ -393,0 +393,9 @@\n+class name jdk\/jfr\/internal\/Control\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor (Ljava\/security\/AccessControlContext;)V flags 1\n+method name <init> descriptor (Ljava\/lang\/String;)V flags 1\n+method name combine descriptor (Ljava\/util\/Set;)Ljava\/lang\/String; flags 401 signature (Ljava\/util\/Set<Ljava\/lang\/String;>;)Ljava\/lang\/String;\n+method name setValue descriptor (Ljava\/lang\/String;)V flags 401\n+method name getValue descriptor ()Ljava\/lang\/String; flags 401\n+method name clone descriptor ()Ljava\/lang\/Object; thrownTypes java\/lang\/CloneNotSupportedException flags 11\n+\n","filename":"make\/data\/symbols\/jdk.jfr-B.sym.txt","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+module name jdk.jfr\n+header exports jdk\/jfr,jdk\/jfr\/consumer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n+\n@@ -51,0 +54,2 @@\n+-class name jdk\/jfr\/internal\/Control\n+\n","filename":"make\/data\/symbols\/jdk.jfr-G.sym.txt","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jlink\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0,name\\u0020;jdk.jdeps\\u0020;flags\\u0020;0 uses jdk\/tools\/jlink\/plugin\/Plugin provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;jdk\/tools\/jmod\/Main$JmodToolProvider\\u005C;u002C;jdk\/tools\/jlink\/internal\/Main$JlinkToolProvider,interface\\u0020;jdk\/tools\/jlink\/plugin\/Plugin\\u0020;impls\\u0020;jdk\/tools\/jlink\/internal\/plugins\/DefaultStripDebugPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludePlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeFilesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeJmodSectionPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/LegalNoticeFilePlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripNativeCommandsPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/OrderResourcesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/DefaultCompressPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeVMPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/GenerateJLIClassesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ReleaseInfoPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/AddOptionsPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorBugURLPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorVMBugURLPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorVersionPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/CDSPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripNativeDebugSymbolsPlugin target linux-amd64 flags 8000\n+\n","filename":"make\/data\/symbols\/jdk.jlink-I.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/jshell\/DeclarationSnippet\n+header extends jdk\/jshell\/PersistentSnippet flags 421\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/Diag\n+header extends java\/lang\/Object flags 421\n+\n+class name jdk\/jshell\/EvalException\n+header extends jdk\/jshell\/JShellException flags 21\n+\n+class name jdk\/jshell\/ExpressionSnippet\n+header extends jdk\/jshell\/Snippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/ImportSnippet\n+header extends jdk\/jshell\/PersistentSnippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/JShellException\n+header extends java\/lang\/Exception flags 21\n+\n+class name jdk\/jshell\/MethodSnippet\n+header extends jdk\/jshell\/DeclarationSnippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/PersistentSnippet\n+header extends jdk\/jshell\/Snippet flags 421\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/SnippetEvent\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$Status outerClass jdk\/jshell\/Snippet innerClassName Status flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/StatementSnippet\n+header extends jdk\/jshell\/Snippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/TypeDeclSnippet\n+header extends jdk\/jshell\/DeclarationSnippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/execution\/FailOverExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/execution\/JdiDefaultExecutionControl\n+header extends jdk\/jshell\/execution\/JdiExecutionControl flags 21\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$RunException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName RunException flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/execution\/JdiExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+\n+class name jdk\/jshell\/execution\/LoaderDelegate\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassBytecodes outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassBytecodes flags 19\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassInstallException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassInstallException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$NotImplementedException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName NotImplementedException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+\n+class name jdk\/jshell\/execution\/LocalExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+\n+class name jdk\/jshell\/spi\/ExecutionControlProvider\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/jshell\/spi\/ExecutionEnv\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/jshell\/spi\/SPIResolutionException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name jdk\/jshell\/tool\/JavaShellToolBuilder\n+header extends java\/lang\/Object flags 601\n+\n","filename":"make\/data\/symbols\/jdk.jshell-I.sym.txt","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.jsobject-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.jsobject-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/jdk.management-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.management-H.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.management.jfr\n+header exports jdk\/management\/jfr requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.management\\u0020;flags\\u0020;0,name\\u0020;java.management\\u0020;flags\\u0020;20,name\\u0020;jdk.jfr\\u0020;flags\\u0020;20 provides interface\\u0020;sun\/management\/spi\/PlatformMBeanProvider\\u0020;impls\\u0020;jdk\/management\/jfr\/internal\/FlightRecorderMXBeanProvider target linux-amd64 flags 8000\n+\n","filename":"make\/data\/symbols\/jdk.management.jfr-I.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.net-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.net-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/jdk.sctp-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.sctp-H.sym.txt","status":"copied"},{"patch":"","filename":"make\/data\/symbols\/jdk.security.auth-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.security.auth-H.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,47 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/security\/jgss\/AuthorizationDataEntry\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/security\/jgss\/ExtendedGSSContext\n+header extends java\/lang\/Object implements org\/ietf\/jgss\/GSSContext flags 601\n+\n+class name com\/sun\/security\/jgss\/ExtendedGSSCredential\n+header extends java\/lang\/Object implements org\/ietf\/jgss\/GSSCredential flags 601\n+\n+class name com\/sun\/security\/jgss\/GSSUtil\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/security\/jgss\/InquireSecContextPermission\n+header extends java\/security\/BasicPermission flags 31\n+\n+class name com\/sun\/security\/jgss\/InquireType\n+header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/security\/jgss\/InquireType;>;\n+\n","filename":"make\/data\/symbols\/jdk.security.jgss-I.sym.txt","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/nio\/file\/ExtendedCopyOption\n+header extends java\/lang\/Enum implements java\/nio\/file\/CopyOption flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/file\/ExtendedCopyOption;>;Ljava\/nio\/file\/CopyOption; classAnnotations @Lsun\/Proprietary+Annotation;\n+\n+class name com\/sun\/nio\/file\/ExtendedOpenOption\n+header extends java\/lang\/Enum implements java\/nio\/file\/OpenOption flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/file\/ExtendedOpenOption;>;Ljava\/nio\/file\/OpenOption; classAnnotations @Lsun\/Proprietary+Annotation;\n+\n+class name com\/sun\/nio\/file\/ExtendedWatchEventModifier\n+header extends java\/lang\/Enum implements java\/nio\/file\/WatchEvent$Modifier flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/file\/ExtendedWatchEventModifier;>;Ljava\/nio\/file\/WatchEvent$Modifier; classAnnotations @Lsun\/Proprietary+Annotation;\n+innerclass innerClass java\/nio\/file\/WatchEvent$Modifier outerClass java\/nio\/file\/WatchEvent innerClassName Modifier flags 609\n+\n+class name com\/sun\/nio\/file\/SensitivityWatchEventModifier\n+header extends java\/lang\/Enum implements java\/nio\/file\/WatchEvent$Modifier flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/file\/SensitivityWatchEventModifier;>;Ljava\/nio\/file\/WatchEvent$Modifier; classAnnotations @Lsun\/Proprietary+Annotation;\n+innerclass innerClass java\/nio\/file\/WatchEvent$Modifier outerClass java\/nio\/file\/WatchEvent innerClassName Modifier flags 609\n+\n+class name sun\/misc\/SignalHandler\n+header extends java\/lang\/Object flags 601 classAnnotations @Lsun\/Proprietary+Annotation;\n+\n+class name sun\/misc\/Unsafe\n+-method name objectFieldOffset descriptor (Ljava\/lang\/reflect\/Field;)J\n+-method name staticFieldOffset descriptor (Ljava\/lang\/reflect\/Field;)J\n+-method name staticFieldBase descriptor (Ljava\/lang\/reflect\/Field;)Ljava\/lang\/Object;\n+method name objectFieldOffset descriptor (Ljava\/lang\/reflect\/Field;)J flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name staticFieldOffset descriptor (Ljava\/lang\/reflect\/Field;)J flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name staticFieldBase descriptor (Ljava\/lang\/reflect\/Field;)Ljava\/lang\/Object; flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"18\")@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+\n+class name sun\/reflect\/ReflectionFactory\n+header extends java\/lang\/Object flags 21 classAnnotations @Lsun\/Proprietary+Annotation;\n+\n","filename":"make\/data\/symbols\/jdk.unsupported-I.sym.txt","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"","filename":"make\/data\/symbols\/jdk.xml.dom-I.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/symbols\/jdk.xml.dom-H.sym.txt","status":"copied"},{"patch":"@@ -32,1 +32,1 @@\n-generate platforms 7:8:9:A:B:C:D:E:F:G:H\n+generate platforms 7:8:9:A:B:C:D:E:F:G:H:I\n@@ -44,0 +44,1 @@\n+platform version I base H files java.base-I.sym.txt:java.compiler-I.sym.txt:java.datatransfer-I.sym.txt:java.desktop-I.sym.txt:java.instrument-I.sym.txt:java.logging-I.sym.txt:java.management-I.sym.txt:java.management.rmi-I.sym.txt:java.naming-I.sym.txt:java.net.http-I.sym.txt:java.rmi-I.sym.txt:java.scripting-I.sym.txt:java.security.jgss-I.sym.txt:java.security.sasl-I.sym.txt:java.smartcardio-I.sym.txt:java.sql-I.sym.txt:java.sql.rowset-I.sym.txt:java.xml-I.sym.txt:java.xml.crypto-I.sym.txt:jdk.accessibility-I.sym.txt:jdk.attach-I.sym.txt:jdk.compiler-I.sym.txt:jdk.dynalink-I.sym.txt:jdk.httpserver-I.sym.txt:jdk.incubator.foreign-I.sym.txt:jdk.incubator.vector-I.sym.txt:jdk.jartool-I.sym.txt:jdk.javadoc-I.sym.txt:jdk.jconsole-I.sym.txt:jdk.jdi-I.sym.txt:jdk.jlink-I.sym.txt:jdk.jshell-I.sym.txt:jdk.jsobject-I.sym.txt:jdk.management-I.sym.txt:jdk.management.jfr-I.sym.txt:jdk.net-I.sym.txt:jdk.sctp-I.sym.txt:jdk.security.auth-I.sym.txt:jdk.security.jgss-I.sym.txt:jdk.unsupported-I.sym.txt:jdk.xml.dom-I.sym.txt\n","filename":"make\/data\/symbols\/symbols","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import build.tools.symbolgenerator.CreateSymbols.ModuleHeaderDescription.ExportsDescription;\n@@ -125,0 +126,1 @@\n+import com.sun.tools.classfile.ModulePackages_attribute;\n@@ -247,1 +249,8 @@\n-                mhd.exports.stream().forEach(pkg -> {\n+                List<String> packages = new ArrayList<>();\n+                mhd.exports.stream()\n+                           .map(ExportsDescription::packageName)\n+                           .forEach(packages::add);\n+                if (mhd.extraModulePackages != null) {\n+                    packages.addAll(mhd.extraModulePackages);\n+                }\n+                packages.stream().forEach(pkg -> {\n@@ -977,1 +986,1 @@\n-                                         ? addInt(cp, r.version)\n+                                         ? addString(cp, r.version)\n@@ -982,2 +991,10 @@\n-                                                   String e) {\n-        return new ExportsEntry(addPackageName(cp, e), 0, new int[0]);\n+                                                   ExportsDescription export) {\n+        int[] to;\n+        if (export.isQualified()) {\n+            to = export.to.stream()\n+                          .mapToInt(module -> addModuleName(cp, module))\n+                          .toArray();\n+        } else {\n+            to = new int[0];\n+        }\n+        return new ExportsEntry(addPackageName(cp, export.packageName()), 0, to);\n@@ -1408,1 +1425,1 @@\n-        private static final String DO_NO_MODIFY =\n+        public static String DO_NOT_MODIFY =\n@@ -1480,0 +1497,2 @@\n+            Set<String> privateIncludes =\n+                    enhancedIncludesListBasedOnClassHeaders(classes, classData);\n@@ -1483,1 +1502,3 @@\n-                md.header.get(0).exports.stream().map(e -> e + '\/')\n+                md.header.get(0).exports.stream()\n+                                        .filter(e -> !e.isQualified())\n+                                        .map(e -> e.packageName + '\/')\n@@ -1488,0 +1509,1 @@\n+                                                   privateIncludes,\n@@ -1510,1 +1532,3 @@\n-                               .contains(cd.packge().replace('.', '\/'))) {\n+                               .stream()\n+                               .map(ed -> ed.packageName)\n+                               .anyMatch(pack -> pack.equals(cd.packge().replace('.', '\/')))) {\n@@ -1532,1 +1556,1 @@\n-                if (includeEffectiveAccess(currentVersionClasses, clazz)) {\n+                if (includeEffectiveAccess(currentVersionClasses, clazz) && currentEIList.accepts(clazz.name, false)) {\n@@ -1558,0 +1582,2 @@\n+        Set<String> allIncludedPackages = new HashSet<>();\n+\n@@ -1598,0 +1624,2 @@\n+\n+            allIncludedPackages.add(clazz.packge().replace('.', '\/'));\n@@ -1614,0 +1642,7 @@\n+            header.exports.removeIf(ed -> ed.isQualified() &&\n+                                          !allIncludedPackages.contains(ed.packageName()));\n+\n+            if (header.extraModulePackages != null) {\n+                header.extraModulePackages.retainAll(allIncludedPackages);\n+            }\n+\n@@ -1645,1 +1680,10 @@\n-                  .flatMap(h -> h.exports.stream())\n+                  .flatMap(h -> {\n+                      List<String> packages = new ArrayList<>();\n+                      h.exports.stream()\n+                               .map(ExportsDescription::packageName)\n+                               .forEach(packages::add);\n+                      if (h.extraModulePackages != null) {\n+                          packages.addAll(h.extraModulePackages);\n+                      }\n+                      return packages.stream();\n+                  })\n@@ -1721,1 +1765,1 @@\n-                                int yearPos = DO_NO_MODIFY.indexOf(\"{YEAR}\");\n+                                int yearPos = DO_NOT_MODIFY.indexOf(\"{YEAR}\");\n@@ -1723,1 +1767,1 @@\n-                                        Pattern.quote(DO_NO_MODIFY.substring(0, yearPos)) +\n+                                        Pattern.quote(DO_NOT_MODIFY.substring(0, yearPos)) +\n@@ -1725,1 +1769,1 @@\n-                                        Pattern.quote(DO_NO_MODIFY.substring(yearPos + \"{YEAR}\".length()));\n+                                        Pattern.quote(DO_NOT_MODIFY.substring(yearPos + \"{YEAR}\".length()));\n@@ -1742,1 +1786,1 @@\n-                                    out.append(DO_NO_MODIFY.replace(\"{YEAR}\", yearSpec));\n+                                    out.append(DO_NOT_MODIFY.replace(\"{YEAR}\", yearSpec));\n@@ -1753,1 +1797,1 @@\n-            symbolsOut.append(DO_NO_MODIFY.replace(\"{YEAR}\", \"2015, \" + year));\n+            symbolsOut.append(DO_NOT_MODIFY.replace(\"{YEAR}\", \"2015, \" + year));\n@@ -1926,1 +1970,1 @@\n-        if (!excludesIncludes.accepts(cf.getName())) {\n+        if (!excludesIncludes.accepts(cf.getName(), true)) {\n@@ -2022,0 +2066,39 @@\n+    private Set<String> enhancedIncludesListBasedOnClassHeaders(ClassList classes,\n+                                                                Iterable<byte[]> classData) {\n+        Set<String> additionalIncludes = new HashSet<>();\n+\n+        for (byte[] classFileData : classData) {\n+            try (InputStream in = new ByteArrayInputStream(classFileData)) {\n+                ClassFile cf = ClassFile.read(in);\n+\n+                if (cf.access_flags.is(AccessFlags.ACC_MODULE)) {\n+                    continue;\n+                }\n+\n+                Set<String> additionalClasses = new HashSet<>();\n+\n+                if (cf.super_class != 0) {\n+                    additionalClasses.add(cf.getSuperclassName());\n+                }\n+                for (int i = 0; i < cf.interfaces.length; i++) {\n+                    additionalClasses.add(cf.getInterfaceName(i));\n+                }\n+\n+                for (String additional : additionalClasses) {\n+                    int dollar;\n+\n+                    additionalIncludes.add(additional);\n+\n+                    while ((dollar = additional.lastIndexOf('$')) != (-1)) {\n+                        additional = additional.substring(0, dollar);\n+                        additionalIncludes.add(additional);\n+                    }\n+                }\n+            } catch (IOException | ConstantPoolException ex) {\n+                throw new IllegalStateException(ex);\n+            }\n+        }\n+\n+        return additionalIncludes;\n+    }\n+\n@@ -2207,2 +2290,1 @@\n-                              .filter(ee -> ee.exports_to_count == 0)\n-                              .map(ee -> getPackageName(cf, ee.exports_index))\n+                              .map(ee -> ExportsDescription.create(cf, ee))\n@@ -2210,0 +2292,3 @@\n+                if (header.extraModulePackages != null) {\n+                    header.exports.forEach(ed -> header.extraModulePackages.remove(ed.packageName()));\n+                }\n@@ -2245,0 +2330,14 @@\n+                assert feature instanceof ModuleHeaderDescription;\n+                ModuleHeaderDescription header =\n+                        (ModuleHeaderDescription) feature;\n+                ModulePackages_attribute mod =\n+                        (ModulePackages_attribute) attr;\n+                header.extraModulePackages = new ArrayList<>();\n+                for (int i = 0; i < mod.packages_count; i++) {\n+                    String packageName = getPackageName(cf, mod.packages_index[i]);\n+                    if (header.exports == null ||\n+                        header.exports.stream().noneMatch(ed -> ed.packageName().equals(packageName))) {\n+                        header.extraModulePackages.add(packageName);\n+                    }\n+                }\n+                break;\n@@ -2355,1 +2454,6 @@\n-    private static Integer getVersion(ClassFile cf, int idx) {\n+    public static String INJECTED_VERSION = null;\n+\n+    private static String getVersion(ClassFile cf, int idx) {\n+        if (INJECTED_VERSION != null) {\n+            return INJECTED_VERSION;\n+        }\n@@ -2359,1 +2463,1 @@\n-            return ((CONSTANT_Integer_info) cf.constant_pool.get(idx)).value;\n+            return ((CONSTANT_Utf8_info) cf.constant_pool.get(idx)).value;\n@@ -2473,0 +2577,6 @@\n+        ClassDescription desc = classes.find(clazzName, true);\n+\n+        if (desc == null) {\n+            return false;\n+        }\n+\n@@ -2475,1 +2585,1 @@\n-        for (ClassDescription outer : classes.enclosingClasses(classes.find(clazzName, true))) {\n+        for (ClassDescription outer : classes.enclosingClasses(desc)) {\n@@ -2517,0 +2627,1 @@\n+        public final Set<String> privateIncludeList;\n@@ -2520,0 +2631,5 @@\n+            this(includeList, Set.of(), excludeList);\n+        }\n+\n+        protected ExcludeIncludeList(Set<String> includeList, Set<String> privateIncludeList,\n+                                     Set<String> excludeList) {\n@@ -2521,0 +2637,1 @@\n+            this.privateIncludeList = privateIncludeList;\n@@ -2540,2 +2657,4 @@\n-        public boolean accepts(String className) {\n-            return matches(includeList, className) && !matches(excludeList, className);\n+        public boolean accepts(String className, boolean includePrivateClasses) {\n+            return (matches(includeList, className) ||\n+                    (includePrivateClasses && matches(privateIncludeList, className))) &&\n+                   !matches(excludeList, className);\n@@ -2741,1 +2860,1 @@\n-        List<String> exports = new ArrayList<>();\n+        List<ExportsDescription> exports = new ArrayList<>();\n@@ -2743,0 +2862,1 @@\n+        List<String> extraModulePackages = new ArrayList<>();\n@@ -2756,0 +2876,1 @@\n+            hash = 83 * hash + Objects.hashCode(this.extraModulePackages);\n@@ -2784,0 +2905,3 @@\n+            if (!listEquals(this.extraModulePackages, other.extraModulePackages)) {\n+                return false;\n+            }\n@@ -2815,2 +2939,7 @@\n-            if (exports != null && !exports.isEmpty())\n-                output.append(\" exports \" + serializeList(exports));\n+            if (exports != null && !exports.isEmpty()) {\n+                List<String> exportsList =\n+                        exports.stream()\n+                               .map(exp -> exp.serialize())\n+                               .collect(Collectors.toList());\n+                output.append(\" exports \" + serializeList(exportsList));\n+            }\n@@ -2819,0 +2948,2 @@\n+            if (extraModulePackages != null && !extraModulePackages.isEmpty())\n+                output.append(\" extraModulePackages \" + serializeList(extraModulePackages));\n@@ -2865,1 +2996,4 @@\n-            exports = deserializeList(reader.attributes.get(\"exports\"));\n+            List<String> exportsList = deserializeList(reader.attributes.get(\"exports\"), false);\n+            exports = exportsList.stream()\n+                                 .map(ExportsDescription::deserialize)\n+                                 .collect(Collectors.toList());\n@@ -2867,0 +3001,1 @@\n+            extraModulePackages = deserializeList(reader.attributes.get(\"extraModulePackages\"));\n@@ -2896,0 +3031,40 @@\n+        record ExportsDescription(String packageName, List<String> to) {\n+            public String serialize() {\n+                return packageName +\n+                       (isQualified() ? \"[\" + quote(serializeList(to), true, true) + \"]\"\n+                                      : \"\");\n+            }\n+\n+            public static ExportsDescription deserialize(String data) {\n+                int bracket = data.indexOf(\"[\");\n+                String packageName;\n+                List<String> to;\n+                if (bracket != (-1)) {\n+                    packageName = data.substring(0, bracket);\n+                    to = deserializeList(unquote(data.substring(bracket + 1, data.length() - 1)));\n+                } else {\n+                    packageName = data;\n+                    to = null;\n+                }\n+\n+                return new ExportsDescription(packageName, to);\n+            }\n+\n+            public static ExportsDescription create(ClassFile cf,\n+                                                    ExportsEntry ee) {\n+                String packageName = getPackageName(cf, ee.exports_index);\n+                List<String> to = null;\n+                if (ee.exports_to_count > 0) {\n+                    to = new ArrayList<>();\n+                    for (int moduleIndex : ee.exports_to_index) {\n+                        to.add(getModuleName(cf, moduleIndex));\n+                    }\n+                }\n+                return new ExportsDescription(packageName, to);\n+            }\n+\n+            public boolean isQualified() {\n+                return to != null && !to.isEmpty();\n+            }\n+        }\n+\n@@ -2899,1 +3074,1 @@\n-            final Integer version;\n+            final String version;\n@@ -2902,1 +3077,1 @@\n-                                       Integer version) {\n+                                       String version) {\n@@ -2910,1 +3085,1 @@\n-                        ? \" version \" + quote(String.valueOf(version), true)\n+                        ? \" version \" + quote(version, true)\n@@ -2920,2 +3095,2 @@\n-                Integer ver = attributes.containsKey(\"version\")\n-                        ? Integer.parseInt(attributes.get(\"version\"))\n+                String ver = attributes.containsKey(\"version\")\n+                        ? attributes.get(\"version\")\n@@ -2932,1 +3107,1 @@\n-                Integer ver = getVersion(cf, req.requires_version_index);\n+                String ver = getVersion(cf, req.requires_version_index);\n@@ -3074,1 +3249,13 @@\n-                field.write(output, baselineVersion, version);\n+                if (!field.versions.contains(version)) {\n+                    field.write(output, baselineVersion, version);\n+                }\n+            }\n+            for (MethodDescription method : methods) {\n+                if (!method.versions.contains(version)) {\n+                    method.write(output, baselineVersion, version);\n+                }\n+            }\n+            for (FieldDescription field : fields) {\n+                if (field.versions.contains(version)) {\n+                    field.write(output, baselineVersion, version);\n+                }\n@@ -3077,1 +3264,3 @@\n-                method.write(output, baselineVersion, version);\n+                if (method.versions.contains(version)) {\n+                    method.write(output, baselineVersion, version);\n+                }\n@@ -3160,0 +3349,6 @@\n+\n+        @Override\n+        public String toString() {\n+            return name;\n+        }\n+\n@@ -3268,0 +3463,1 @@\n+\n@@ -3273,1 +3469,0 @@\n-\n@@ -4123,2 +4318,5 @@\n-                    for (String pack : header.get().exports) {\n-                        w.write(pack.replace('\/', '.'));\n+                    for (ExportsDescription export : header.get().exports) {\n+                        if (export.isQualified()) {\n+                            continue;\n+                        }\n+                        w.write(export.packageName.replace('\/', '.'));\n","filename":"make\/langtools\/src\/classes\/build\/tools\/symbolgenerator\/CreateSymbols.java","additions":235,"deletions":37,"binary":false,"changes":272,"status":"modified"},{"patch":"@@ -186,1 +186,2 @@\n-                if ( ok = true && contents != null ) {\n+                ok = true;\n+                if ( contents != null ) {\n","filename":"make\/langtools\/tools\/compileproperties\/CompileProperties.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected,-reference \\\n","filename":"make\/modules\/java.base\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+\n+EXCLUDES += javax\/tools\/snippet-files\n","filename":"make\/modules\/java.compiler\/Java.gmk","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference,-missing \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.desktop\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.instrument\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected,-reference \\\n","filename":"make\/modules\/java.logging\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected,-reference \\\n","filename":"make\/modules\/java.management\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.naming\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.smartcardio\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.sql.rowset\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-accessibility \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.xml\/Java.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,26 +0,0 @@\n-#\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-DISABLED_WARNINGS_java += missing-explicit-ctor\n","filename":"make\/modules\/jdk.unsupported.desktop\/Java.gmk","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -177,0 +177,1 @@\n+        boolean internal;\n@@ -200,0 +201,1 @@\n+            pos.writeBoolean(internal);\n@@ -490,0 +492,1 @@\n+                currentType.internal = getBoolean(attributes, \"internal\", false);\n@@ -866,0 +869,3 @@\n+        if (type.isEvent && type.internal) {\n+            out.write(\"    JfrEventSetting::unhide_internal_types();\");\n+        }\n","filename":"make\/src\/classes\/build\/tools\/jfr\/GenerateJfrFiles.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,3 +56,0 @@\n-BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libAsyncStackWalk := $(LIBCXX)\n-BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libAsyncInvokers := $(LIBCXX)\n-\n@@ -71,0 +68,2 @@\n+  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libAsyncStackWalk := $(LIBCXX)\n+  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libAsyncInvokers := $(LIBCXX)\n@@ -74,0 +73,3 @@\n+  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libNativeThread := -pthread\n+  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libAsyncStackWalk := $(LIBCXX) -pthread\n+  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libAsyncInvokers := $(LIBCXX) -pthread\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2484,1 +2484,1 @@\n-const TypeVect* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n+const TypeVectMask* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n@@ -3909,31 +3909,34 @@\n-    \/\/ Set tmp to be (markWord of object | UNLOCK_VALUE).\n-    __ orr(tmp, disp_hdr, markWord::unlocked_value);\n-\n-    \/\/ Initialize the box. (Must happen before we update the object mark!)\n-    __ str(tmp, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n-\n-    \/\/ Compare object markWord with an unlocked value (tmp) and if\n-    \/\/ equal exchange the stack address of our box with object markWord.\n-    \/\/ On failure disp_hdr contains the possibly locked markWord.\n-    __ cmpxchg(oop, tmp, box, Assembler::xword, \/*acquire*\/ true,\n-               \/*release*\/ true, \/*weak*\/ false, disp_hdr);\n-    __ br(Assembler::EQ, cont);\n-\n-    assert(oopDesc::mark_offset_in_bytes() == 0, \"offset of _mark is not 0\");\n-\n-    \/\/ If the compare-and-exchange succeeded, then we found an unlocked\n-    \/\/ object, will have now locked it will continue at label cont\n-\n-    __ bind(cas_failed);\n-    \/\/ We did not see an unlocked object so try the fast recursive case.\n-\n-    \/\/ Check if the owner is self by comparing the value in the\n-    \/\/ markWord of object (disp_hdr) with the stack pointer.\n-    __ mov(rscratch1, sp);\n-    __ sub(disp_hdr, disp_hdr, rscratch1);\n-    __ mov(tmp, (address) (~(os::vm_page_size()-1) | markWord::lock_mask_in_place));\n-    \/\/ If condition is true we are cont and hence we can store 0 as the\n-    \/\/ displaced header in the box, which indicates that it is a recursive lock.\n-    __ ands(tmp\/*==0?*\/, disp_hdr, tmp);   \/\/ Sets flags for result\n-    __ str(tmp\/*==0, perhaps*\/, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n-\n+    if (!UseHeavyMonitors) {\n+      \/\/ Set tmp to be (markWord of object | UNLOCK_VALUE).\n+      __ orr(tmp, disp_hdr, markWord::unlocked_value);\n+\n+      \/\/ Initialize the box. (Must happen before we update the object mark!)\n+      __ str(tmp, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+\n+      \/\/ Compare object markWord with an unlocked value (tmp) and if\n+      \/\/ equal exchange the stack address of our box with object markWord.\n+      \/\/ On failure disp_hdr contains the possibly locked markWord.\n+      __ cmpxchg(oop, tmp, box, Assembler::xword, \/*acquire*\/ true,\n+                 \/*release*\/ true, \/*weak*\/ false, disp_hdr);\n+      __ br(Assembler::EQ, cont);\n+\n+      assert(oopDesc::mark_offset_in_bytes() == 0, \"offset of _mark is not 0\");\n+\n+      \/\/ If the compare-and-exchange succeeded, then we found an unlocked\n+      \/\/ object, will have now locked it will continue at label cont\n+\n+      __ bind(cas_failed);\n+      \/\/ We did not see an unlocked object so try the fast recursive case.\n+\n+      \/\/ Check if the owner is self by comparing the value in the\n+      \/\/ markWord of object (disp_hdr) with the stack pointer.\n+      __ mov(rscratch1, sp);\n+      __ sub(disp_hdr, disp_hdr, rscratch1);\n+      __ mov(tmp, (address) (~(os::vm_page_size()-1) | markWord::lock_mask_in_place));\n+      \/\/ If condition is true we are cont and hence we can store 0 as the\n+      \/\/ displaced header in the box, which indicates that it is a recursive lock.\n+      __ ands(tmp\/*==0?*\/, disp_hdr, tmp);   \/\/ Sets flags for result\n+      __ str(tmp\/*==0, perhaps*\/, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+    } else {\n+      __ tst(oop, oop); \/\/ Set NE to indicate 'failure' -> take slow-path. We know that oop != 0.\n+    }\n@@ -3985,2 +3988,3 @@\n-    \/\/ Find the lock address and load the displaced header from the stack.\n-    __ ldr(disp_hdr, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+    if (!UseHeavyMonitors) {\n+      \/\/ Find the lock address and load the displaced header from the stack.\n+      __ ldr(disp_hdr, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n@@ -3988,3 +3992,4 @@\n-    \/\/ If the displaced header is 0, we have a recursive unlock.\n-    __ cmp(disp_hdr, zr);\n-    __ br(Assembler::EQ, cont);\n+      \/\/ If the displaced header is 0, we have a recursive unlock.\n+      __ cmp(disp_hdr, zr);\n+      __ br(Assembler::EQ, cont);\n+    }\n@@ -3996,3 +4001,4 @@\n-    \/\/ Check if it is still a light weight lock, this is is true if we\n-    \/\/ see the stack address of the basicLock in the markWord of the\n-    \/\/ object.\n+    if (!UseHeavyMonitors) {\n+      \/\/ Check if it is still a light weight lock, this is is true if we\n+      \/\/ see the stack address of the basicLock in the markWord of the\n+      \/\/ object.\n@@ -4000,2 +4006,5 @@\n-    __ cmpxchg(oop, box, disp_hdr, Assembler::xword, \/*acquire*\/ false,\n-               \/*release*\/ true, \/*weak*\/ false, tmp);\n+      __ cmpxchg(oop, box, disp_hdr, Assembler::xword, \/*acquire*\/ false,\n+                 \/*release*\/ true, \/*weak*\/ false, tmp);\n+    } else {\n+      __ tst(oop, oop); \/\/ Set NE to indicate 'failure' -> take slow-path. We know that oop != 0.\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":51,"deletions":42,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -5620,0 +5620,32 @@\n+\n+instruct vmask_tolong8B(iRegLNoSp dst, vecD src) %{\n+  match(Set dst (VectorMaskToLong src));\n+  ins_cost(5 * INSN_COST);\n+  format %{ \"vmask_tolong $dst, $src\\t# convert mask to long (8B)\" %}\n+  ins_encode %{\n+    \/\/ Input \"src\" is a vector of boolean represented as\n+    \/\/ bytes with 0x00\/0x01 as element values.\n+\n+    __ fmovd(as_Register($dst$$reg), as_FloatRegister($src$$reg));\n+    __ bytemask_compress(as_Register($dst$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vmask_tolong16B(iRegLNoSp dst, vecX src) %{\n+  match(Set dst (VectorMaskToLong src));\n+  ins_cost(11 * INSN_COST);\n+  format %{ \"vmask_tolong $dst, $src\\t# convert mask to long (16B)\" %}\n+  ins_encode %{\n+    \/\/ Input \"src\" is a vector of boolean represented as\n+    \/\/ bytes with 0x00\/0x01 as element values.\n+\n+    __ umov(as_Register($dst$$reg), as_FloatRegister($src$$reg), __ D, 0);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 1);\n+    __ bytemask_compress(as_Register($dst$$reg));\n+    __ bytemask_compress(rscratch1);\n+    __ orr(as_Register($dst$$reg), as_Register($dst$$reg),\n+           rscratch1, Assembler::LSL, 8);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2484,0 +2484,32 @@\n+\n+instruct vmask_tolong8B(iRegLNoSp dst, vecD src) %{\n+  match(Set dst (VectorMaskToLong src));\n+  ins_cost(5 * INSN_COST);\n+  format %{ \"vmask_tolong $dst, $src\\t# convert mask to long (8B)\" %}\n+  ins_encode %{\n+    \/\/ Input \"src\" is a vector of boolean represented as\n+    \/\/ bytes with 0x00\/0x01 as element values.\n+\n+    __ fmovd(as_Register($dst$$reg), as_FloatRegister($src$$reg));\n+    __ bytemask_compress(as_Register($dst$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vmask_tolong16B(iRegLNoSp dst, vecX src) %{\n+  match(Set dst (VectorMaskToLong src));\n+  ins_cost(11 * INSN_COST);\n+  format %{ \"vmask_tolong $dst, $src\\t# convert mask to long (16B)\" %}\n+  ins_encode %{\n+    \/\/ Input \"src\" is a vector of boolean represented as\n+    \/\/ bytes with 0x00\/0x01 as element values.\n+\n+    __ umov(as_Register($dst$$reg), as_FloatRegister($src$$reg), __ D, 0);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 1);\n+    __ bytemask_compress(as_Register($dst$$reg));\n+    __ bytemask_compress(rscratch1);\n+    __ orr(as_Register($dst$$reg), as_Register($dst$$reg),\n+           rscratch1, Assembler::LSL, 8);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -5747,1 +5747,32 @@\n-%}\n\\ No newline at end of file\n+%}\n+\n+instruct vmask_tolong(iRegLNoSp dst, pReg src, vReg vtmp1, vReg vtmp2, pRegGov pgtmp, rFlagsReg cr) %{\n+  predicate(UseSVE > 0 &&\n+            n->in(1)->bottom_type()->is_vect()->length() <= 64);\n+  match(Set dst (VectorMaskToLong src));\n+  effect(TEMP vtmp1, TEMP vtmp2, TEMP pgtmp, KILL cr);\n+  ins_cost(13 * SVE_COST);\n+  format %{ \"vmask_tolong $dst, $src\\t# vector mask tolong (sve)\" %}\n+  ins_encode %{\n+    __ sve_vmask_tolong(as_Register($dst$$reg), as_PRegister($src$$reg),\n+                        Matcher::vector_element_basic_type(this, $src),\n+                        Matcher::vector_length(this, $src),\n+                        as_FloatRegister($vtmp1$$reg), as_FloatRegister($vtmp2$$reg),\n+                        as_PRegister($pgtmp$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\/\/ ---------------------------- Vector mask generation ---------------------------\n+instruct vmask_gen(pRegGov pg, iRegL len, rFlagsReg cr) %{\n+  predicate(UseSVE > 0);\n+  match(Set pg (VectorMaskGen len));\n+  effect(KILL cr);\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_whilelo $pg, zr, $len\\t # sve\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    Assembler::SIMD_RegVariant size = __ elemType_to_regVariant(bt);\n+    __ sve_whilelo(as_PRegister($pg$$reg), size, zr, as_Register($len$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":32,"deletions":1,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -3177,0 +3177,17 @@\n+%}\n+\n+instruct vmask_tolong(iRegLNoSp dst, pReg src, vReg vtmp1, vReg vtmp2, pRegGov pgtmp, rFlagsReg cr) %{\n+  predicate(UseSVE > 0 &&\n+            n->in(1)->bottom_type()->is_vect()->length() <= 64);\n+  match(Set dst (VectorMaskToLong src));\n+  effect(TEMP vtmp1, TEMP vtmp2, TEMP pgtmp, KILL cr);\n+  ins_cost(13 * SVE_COST);\n+  format %{ \"vmask_tolong $dst, $src\\t# vector mask tolong (sve)\" %}\n+  ins_encode %{\n+    __ sve_vmask_tolong(as_Register($dst$$reg), as_PRegister($src$$reg),\n+                        Matcher::vector_element_basic_type(this, $src),\n+                        Matcher::vector_length(this, $src),\n+                        as_FloatRegister($vtmp1$$reg), as_FloatRegister($vtmp2$$reg),\n+                        as_PRegister($pgtmp$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n@@ -3178,0 +3195,15 @@\n+\n+\/\/ ---------------------------- Vector mask generation ---------------------------\n+instruct vmask_gen(pRegGov pg, iRegL len, rFlagsReg cr) %{\n+  predicate(UseSVE > 0);\n+  match(Set pg (VectorMaskGen len));\n+  effect(KILL cr);\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_whilelo $pg, zr, $len\\t # sve\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    Assembler::SIMD_RegVariant size = __ elemType_to_regVariant(bt);\n+    __ sve_whilelo(as_PRegister($pg$$reg), size, zr, as_Register($len$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -441,1 +441,5 @@\n-    __ unlock_object(r5, r4, r0, *stub->entry());\n+    if (UseHeavyMonitors) {\n+      __ b(*stub->entry());\n+    } else {\n+      __ unlock_object(r5, r4, r0, *stub->entry());\n+    }\n@@ -2565,1 +2569,1 @@\n-  if (!UseFastLocking) {\n+  if (UseHeavyMonitors) {\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -949,0 +949,42 @@\n+\/\/ Compress the least significant bit of each byte to the rightmost and clear\n+\/\/ the higher garbage bits.\n+void C2_MacroAssembler::bytemask_compress(Register dst) {\n+  \/\/ Example input, dst = 0x01 00 00 00 01 01 00 01\n+  \/\/ The \"??\" bytes are garbage.\n+  orr(dst, dst, dst, Assembler::LSR, 7);  \/\/ dst = 0x?? 02 ?? 00 ?? 03 ?? 01\n+  orr(dst, dst, dst, Assembler::LSR, 14); \/\/ dst = 0x????????08 ??????0D\n+  orr(dst, dst, dst, Assembler::LSR, 28); \/\/ dst = 0x????????????????8D\n+  andr(dst, dst, 0xff);                   \/\/ dst = 0x8D\n+}\n+\n+\/\/ Pack the lowest-numbered bit of each mask element in src into a long value\n+\/\/ in dst, at most the first 64 lane elements.\n+\/\/ Clobbers: rscratch1\n+void C2_MacroAssembler::sve_vmask_tolong(Register dst, PRegister src, BasicType bt, int lane_cnt,\n+                                         FloatRegister vtmp1, FloatRegister vtmp2, PRegister pgtmp) {\n+  assert(pgtmp->is_governing(), \"This register has to be a governing predicate register.\");\n+  assert(lane_cnt <= 64 && is_power_of_2(lane_cnt), \"Unsupported lane count\");\n+  assert_different_registers(dst, rscratch1);\n+\n+  Assembler::SIMD_RegVariant size = elemType_to_regVariant(bt);\n+\n+  \/\/ Pack the mask into vector with sequential bytes.\n+  sve_cpy(vtmp1, size, src, 1, false);\n+  if (bt != T_BYTE) {\n+    sve_vector_narrow(vtmp1, B, vtmp1, size, vtmp2);\n+  }\n+\n+  \/\/ Compress the lowest 8 bytes.\n+  fmovd(dst, vtmp1);\n+  bytemask_compress(dst);\n+  if (lane_cnt <= 8) return;\n+\n+  \/\/ Repeat on higher bytes and join the results.\n+  \/\/ Compress 8 bytes in each iteration.\n+  for (int idx = 1; idx < (lane_cnt \/ 8); idx++) {\n+    idx == 1 ? fmovhid(rscratch1, vtmp1) : sve_extract(rscratch1, D, pgtmp, vtmp1, idx);\n+    bytemask_compress(rscratch1);\n+    orr(dst, dst, rscratch1, Assembler::LSL, idx << 3);\n+  }\n+}\n+\n@@ -1024,0 +1066,1 @@\n+  assert_different_registers(src, tmp);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -58,0 +58,9 @@\n+  \/\/ Compress the least significant bit of each byte to the rightmost and clear\n+  \/\/ the higher garbage bits.\n+  void bytemask_compress(Register dst);\n+\n+  \/\/ Pack the lowest-numbered bit of each mask element in src into a long value\n+  \/\/ in dst, at most the first 64 lane elements.\n+  void sve_vmask_tolong(Register dst, PRegister src, BasicType bt, int lane_cnt,\n+                        FloatRegister vtmp1, FloatRegister vtmp2, PRegister pgtmp);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-  __ lsr(card_addr, store_addr, CardTable::card_shift);\n+  __ lsr(card_addr, store_addr, CardTable::card_shift());\n@@ -447,1 +447,1 @@\n-  __ lsr(card_offset, card_offset, CardTable::card_shift);\n+  __ lsr(card_offset, card_offset, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  __ lsr(obj, obj, CardTable::card_shift);\n+  __ lsr(obj, obj, CardTable::card_shift());\n@@ -67,2 +67,2 @@\n-  __ lsr(start, start, CardTable::card_shift);\n-  __ lsr(end, end, CardTable::card_shift);\n+  __ lsr(start, start, CardTable::card_shift());\n+  __ lsr(end, end, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shared\/cardTableBarrierSetAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1458,3 +1458,4 @@\n-    \/\/ Load (object->mark() | 1) into swap_reg %r0\n-    __ ldr(rscratch1, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-    __ orr(swap_reg, rscratch1, 1);\n+    if (!UseHeavyMonitors) {\n+      \/\/ Load (object->mark() | 1) into swap_reg %r0\n+      __ ldr(rscratch1, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      __ orr(swap_reg, rscratch1, 1);\n@@ -1462,2 +1463,2 @@\n-    \/\/ Save (object->mark() | 1) into BasicLock's displaced header\n-    __ str(swap_reg, Address(lock_reg, mark_word_offset));\n+      \/\/ Save (object->mark() | 1) into BasicLock's displaced header\n+      __ str(swap_reg, Address(lock_reg, mark_word_offset));\n@@ -1465,4 +1466,4 @@\n-    \/\/ src -> dest iff dest == r0 else r0 <- dest\n-    { Label here;\n-      __ cmpxchg_obj_header(r0, lock_reg, obj_reg, rscratch1, lock_done, \/*fallthrough*\/NULL);\n-    }\n+      \/\/ src -> dest iff dest == r0 else r0 <- dest\n+      { Label here;\n+        __ cmpxchg_obj_header(r0, lock_reg, obj_reg, rscratch1, lock_done, \/*fallthrough*\/NULL);\n+      }\n@@ -1470,1 +1471,1 @@\n-    \/\/ Hmm should this move to the slow path code area???\n+      \/\/ Hmm should this move to the slow path code area???\n@@ -1472,8 +1473,8 @@\n-    \/\/ Test if the oopMark is an obvious stack pointer, i.e.,\n-    \/\/  1) (mark & 3) == 0, and\n-    \/\/  2) sp <= mark < mark + os::pagesize()\n-    \/\/ These 3 tests can be done by evaluating the following\n-    \/\/ expression: ((mark - sp) & (3 - os::vm_page_size())),\n-    \/\/ assuming both stack pointer and pagesize have their\n-    \/\/ least significant 2 bits clear.\n-    \/\/ NOTE: the oopMark is in swap_reg %r0 as the result of cmpxchg\n+      \/\/ Test if the oopMark is an obvious stack pointer, i.e.,\n+      \/\/  1) (mark & 3) == 0, and\n+      \/\/  2) sp <= mark < mark + os::pagesize()\n+      \/\/ These 3 tests can be done by evaluating the following\n+      \/\/ expression: ((mark - sp) & (3 - os::vm_page_size())),\n+      \/\/ assuming both stack pointer and pagesize have their\n+      \/\/ least significant 2 bits clear.\n+      \/\/ NOTE: the oopMark is in swap_reg %r0 as the result of cmpxchg\n@@ -1481,3 +1482,3 @@\n-    __ sub(swap_reg, sp, swap_reg);\n-    __ neg(swap_reg, swap_reg);\n-    __ ands(swap_reg, swap_reg, 3 - os::vm_page_size());\n+      __ sub(swap_reg, sp, swap_reg);\n+      __ neg(swap_reg, swap_reg);\n+      __ ands(swap_reg, swap_reg, 3 - os::vm_page_size());\n@@ -1485,3 +1486,6 @@\n-    \/\/ Save the test result, for recursive case, the result is zero\n-    __ str(swap_reg, Address(lock_reg, mark_word_offset));\n-    __ br(Assembler::NE, slow_path_lock);\n+      \/\/ Save the test result, for recursive case, the result is zero\n+      __ str(swap_reg, Address(lock_reg, mark_word_offset));\n+      __ br(Assembler::NE, slow_path_lock);\n+    } else {\n+      __ b(slow_path_lock);\n+    }\n@@ -1490,1 +1494,0 @@\n-\n@@ -1591,1 +1594,0 @@\n-    \/\/ Simple recursive lock?\n@@ -1593,2 +1595,4 @@\n-    __ ldr(rscratch1, Address(sp, lock_slot_offset * VMRegImpl::stack_slot_size));\n-    __ cbz(rscratch1, done);\n+    if (!UseHeavyMonitors) {\n+      \/\/ Simple recursive lock?\n+      __ ldr(rscratch1, Address(sp, lock_slot_offset * VMRegImpl::stack_slot_size));\n+      __ cbz(rscratch1, done);\n@@ -1596,4 +1600,4 @@\n-    \/\/ Must save r0 if if it is live now because cmpxchg must use it\n-    if (ret_type != T_FLOAT && ret_type != T_DOUBLE && ret_type != T_VOID) {\n-      save_native_result(masm, ret_type, stack_slots);\n-    }\n+      \/\/ Must save r0 if if it is live now because cmpxchg must use it\n+      if (ret_type != T_FLOAT && ret_type != T_DOUBLE && ret_type != T_VOID) {\n+        save_native_result(masm, ret_type, stack_slots);\n+      }\n@@ -1602,4 +1606,4 @@\n-    \/\/ get address of the stack lock\n-    __ lea(r0, Address(sp, lock_slot_offset * VMRegImpl::stack_slot_size));\n-    \/\/  get old displaced header\n-    __ ldr(old_hdr, Address(r0, 0));\n+      \/\/ get address of the stack lock\n+      __ lea(r0, Address(sp, lock_slot_offset * VMRegImpl::stack_slot_size));\n+      \/\/  get old displaced header\n+      __ ldr(old_hdr, Address(r0, 0));\n@@ -1607,4 +1611,7 @@\n-    \/\/ Atomic swap old header if oop still contains the stack lock\n-    Label succeed;\n-    __ cmpxchg_obj_header(r0, old_hdr, obj_reg, rscratch1, succeed, &slow_path_unlock);\n-    __ bind(succeed);\n+      \/\/ Atomic swap old header if oop still contains the stack lock\n+      Label succeed;\n+      __ cmpxchg_obj_header(r0, old_hdr, obj_reg, rscratch1, succeed, &slow_path_unlock);\n+      __ bind(succeed);\n+    } else {\n+      __ b(slow_path_unlock);\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":47,"deletions":40,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -472,0 +472,8 @@\n+  int inline_size = (UseSVE > 0 && MaxVectorSize >= 16) ? MaxVectorSize : 0;\n+  if (FLAG_IS_DEFAULT(ArrayOperationPartialInlineSize)) {\n+    FLAG_SET_DEFAULT(ArrayOperationPartialInlineSize, inline_size);\n+  } else if (ArrayOperationPartialInlineSize != 0 && ArrayOperationPartialInlineSize != inline_size) {\n+    warning(\"Setting ArrayOperationPartialInlineSize to %d\", inline_size);\n+    ArrayOperationPartialInlineSize = inline_size;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -994,1 +994,1 @@\n-const TypeVect* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n+const TypeVectMask* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2428,1 +2428,1 @@\n-  if (!UseFastLocking) {\n+  if (UseHeavyMonitors) {\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRAssembler_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -380,1 +380,1 @@\n-  LIR_Address* card_addr = new LIR_Address(tmp, addr, (LIR_Address::Scale) -CardTable::card_shift, 0, T_BOOLEAN);\n+  LIR_Address* card_addr = new LIR_Address(tmp, addr, (LIR_Address::Scale) -CardTable::card_shift(), 0, T_BOOLEAN);\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRGenerator_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-  __ add(card_addr, tmp2, AsmOperand(store_addr, lsr, CardTable::card_shift));\n+  __ add(card_addr, tmp2, AsmOperand(store_addr, lsr, CardTable::card_shift()));\n@@ -455,1 +455,1 @@\n-  __ add(r_card_addr_0, r_card_base_1, AsmOperand(r_obj_0, lsr, CardTable::card_shift));\n+  __ add(r_card_addr_0, r_card_base_1, AsmOperand(r_obj_0, lsr, CardTable::card_shift()));\n","filename":"src\/hotspot\/cpu\/arm\/gc\/g1\/g1BarrierSetAssembler_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-  __ logical_shift_right(addr, addr, CardTable::card_shift);\n-  __ logical_shift_right(count, count, CardTable::card_shift);\n+  __ logical_shift_right(addr, addr, CardTable::card_shift());\n+  __ logical_shift_right(count, count, CardTable::card_shift());\n@@ -132,1 +132,1 @@\n-  Address card_table_addr(card_table_base, obj, lsr, CardTable::card_shift);\n+  Address card_table_addr(card_table_base, obj, lsr, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/arm\/gc\/shared\/cardTableBarrierSetAssembler_arm.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -945,1 +945,2 @@\n-        __ lis(R0, oop_addr.value() >> 16); \/\/ Don't care about sign extend (will use stw).\n+        \/\/ Don't care about sign extend (will use stw).\n+        __ lis(R0, 0); \/\/ Will get patched.\n@@ -947,1 +948,1 @@\n-        __ ori(R0, R0, oop_addr.value() & 0xffff);\n+        __ ori(R0, R0, 0); \/\/ Will get patched.\n@@ -2692,1 +2693,1 @@\n-    if (UseFastLocking) {\n+    if (!UseHeavyMonitors) {\n@@ -2714,1 +2715,1 @@\n-    if (UseFastLocking) {\n+    if (!UseHeavyMonitors) {\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-  __ srdi(Rcard_addr, store_addr, CardTable::card_shift);\n+  __ srdi(Rcard_addr, store_addr, CardTable::card_shift());\n@@ -519,1 +519,1 @@\n-  __ srdi(addr, R0, CardTable::card_shift); \/\/ Addr is passed in R0.\n+  __ srdi(addr, R0, CardTable::card_shift()); \/\/ Addr is passed in R0.\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-  __ srdi(addr, addr, CardTable::card_shift);\n-  __ srdi(count, count, CardTable::card_shift);\n+  __ srdi(addr, addr, CardTable::card_shift());\n+  __ srdi(count, count, CardTable::card_shift());\n@@ -77,1 +77,1 @@\n-  __ srdi(obj, obj, CardTable::card_shift);\n+  __ srdi(obj, obj, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/cardTableBarrierSetAssembler_ppc.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-\/\/ Get compressed oop or klass constant.\n+\/\/ Get compressed oop constant.\n@@ -2663,21 +2663,26 @@\n-  \/\/ Set displaced_header to be (markWord of object | UNLOCK_VALUE).\n-  ori(displaced_header, displaced_header, markWord::unlocked_value);\n-\n-  \/\/ Load Compare Value application register.\n-\n-  \/\/ Initialize the box. (Must happen before we update the object mark!)\n-  std(displaced_header, BasicLock::displaced_header_offset_in_bytes(), box);\n-\n-  \/\/ Must fence, otherwise, preceding store(s) may float below cmpxchg.\n-  \/\/ Compare object markWord with mark and if equal exchange scratch1 with object markWord.\n-  cmpxchgd(\/*flag=*\/flag,\n-           \/*current_value=*\/current_header,\n-           \/*compare_value=*\/displaced_header,\n-           \/*exchange_value=*\/box,\n-           \/*where=*\/oop,\n-           MacroAssembler::MemBarRel | MacroAssembler::MemBarAcq,\n-           MacroAssembler::cmpxchgx_hint_acquire_lock(),\n-           noreg,\n-           &cas_failed,\n-           \/*check without membar and ldarx first*\/true);\n-  assert(oopDesc::mark_offset_in_bytes() == 0, \"offset of _mark is not 0\");\n+  if (!UseHeavyMonitors) {\n+    \/\/ Set displaced_header to be (markWord of object | UNLOCK_VALUE).\n+    ori(displaced_header, displaced_header, markWord::unlocked_value);\n+\n+    \/\/ Load Compare Value application register.\n+\n+    \/\/ Initialize the box. (Must happen before we update the object mark!)\n+    std(displaced_header, BasicLock::displaced_header_offset_in_bytes(), box);\n+\n+    \/\/ Must fence, otherwise, preceding store(s) may float below cmpxchg.\n+    \/\/ Compare object markWord with mark and if equal exchange scratch1 with object markWord.\n+    cmpxchgd(\/*flag=*\/flag,\n+             \/*current_value=*\/current_header,\n+             \/*compare_value=*\/displaced_header,\n+             \/*exchange_value=*\/box,\n+             \/*where=*\/oop,\n+             MacroAssembler::MemBarRel | MacroAssembler::MemBarAcq,\n+             MacroAssembler::cmpxchgx_hint_acquire_lock(),\n+             noreg,\n+             &cas_failed,\n+             \/*check without membar and ldarx first*\/true);\n+    assert(oopDesc::mark_offset_in_bytes() == 0, \"offset of _mark is not 0\");\n+  } else {\n+    \/\/ Set NE to indicate 'failure' -> take slow-path.\n+    crandc(flag, Assembler::equal, flag, Assembler::equal);\n+  }\n@@ -2771,2 +2776,3 @@\n-  \/\/ Find the lock address and load the displaced header from the stack.\n-  ld(displaced_header, BasicLock::displaced_header_offset_in_bytes(), box);\n+  if (!UseHeavyMonitors) {\n+    \/\/ Find the lock address and load the displaced header from the stack.\n+    ld(displaced_header, BasicLock::displaced_header_offset_in_bytes(), box);\n@@ -2774,3 +2780,4 @@\n-  \/\/ If the displaced header is 0, we have a recursive unlock.\n-  cmpdi(flag, displaced_header, 0);\n-  beq(flag, cont);\n+    \/\/ If the displaced header is 0, we have a recursive unlock.\n+    cmpdi(flag, displaced_header, 0);\n+    beq(flag, cont);\n+  }\n@@ -2785,14 +2792,18 @@\n-  \/\/ Check if it is still a light weight lock, this is is true if we see\n-  \/\/ the stack address of the basicLock in the markWord of the object.\n-  \/\/ Cmpxchg sets flag to cmpd(current_header, box).\n-  cmpxchgd(\/*flag=*\/flag,\n-           \/*current_value=*\/current_header,\n-           \/*compare_value=*\/box,\n-           \/*exchange_value=*\/displaced_header,\n-           \/*where=*\/oop,\n-           MacroAssembler::MemBarRel,\n-           MacroAssembler::cmpxchgx_hint_release_lock(),\n-           noreg,\n-           &cont);\n-\n-  assert(oopDesc::mark_offset_in_bytes() == 0, \"offset of _mark is not 0\");\n+  if (!UseHeavyMonitors) {\n+    \/\/ Check if it is still a light weight lock, this is is true if we see\n+    \/\/ the stack address of the basicLock in the markWord of the object.\n+    \/\/ Cmpxchg sets flag to cmpd(current_header, box).\n+    cmpxchgd(\/*flag=*\/flag,\n+             \/*current_value=*\/current_header,\n+             \/*compare_value=*\/box,\n+             \/*exchange_value=*\/displaced_header,\n+             \/*where=*\/oop,\n+             MacroAssembler::MemBarRel,\n+             MacroAssembler::cmpxchgx_hint_release_lock(),\n+             noreg,\n+             &cont);\n+    assert(oopDesc::mark_offset_in_bytes() == 0, \"offset of _mark is not 0\");\n+  } else {\n+    \/\/ Set NE to indicate 'failure' -> take slow-path.\n+    crandc(flag, Assembler::equal, flag, Assembler::equal);\n+  }\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":52,"deletions":41,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-  \/\/ Patch narrow oop constants. Use this also for narrow klass.\n+  \/\/ Patch narrow oop constants.\n","filename":"src\/hotspot\/cpu\/ppc\/nativeInst_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2188,1 +2188,1 @@\n-const TypeVect* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n+const TypeVectMask* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n@@ -5956,1 +5956,1 @@\n-    __ lis($dst$$Register, (int)(short)(($src$$constant >> 16) & 0xffff));\n+    __ lis($dst$$Register, 0); \/\/ Will get patched.\n@@ -5969,5 +5969,3 @@\n-    assert(__ oop_recorder() != NULL, \"this assembler needs an OopRecorder\");\n-    int oop_index = __ oop_recorder()->find_index((jobject)$src2$$constant);\n-    RelocationHolder rspec = oop_Relocation::spec(oop_index);\n-    __ relocate(rspec, 1);\n-    __ ori($dst$$Register, $src1$$Register, $src2$$constant & 0xffff);\n+    AddressLiteral addrlit = __ constant_oop_address((jobject)$src2$$constant);\n+    __ relocate(addrlit.rspec(), \/*compressed format*\/ 1);\n+    __ ori($dst$$Register, $src1$$Register, 0); \/\/ Will get patched.\n@@ -6088,6 +6086,3 @@\n-    intptr_t Csrc = CompressedKlassPointers::encode((Klass *)$src1$$constant);\n-    assert(__ oop_recorder() != NULL, \"this assembler needs an OopRecorder\");\n-    int klass_index = __ oop_recorder()->find_index((Klass *)$src1$$constant);\n-    RelocationHolder rspec = metadata_Relocation::spec(klass_index);\n-\n-    __ relocate(rspec, 1);\n+    \/\/ Notify OOP recorder (don't need the relocation)\n+    AddressLiteral md = __ constant_metadata_address((Klass*)$src1$$constant);\n+    intptr_t Csrc = CompressedKlassPointers::encode((Klass*)md.value());\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -36,16 +36,1 @@\n-  \/\/ The following comment is from the declaration of DataRelocation:\n-  \/\/\n-  \/\/  \"The \"o\" (displacement) argument is relevant only to split relocations\n-  \/\/   on RISC machines.  In some CPUs (SPARC), the set-hi and set-lo ins'ns\n-  \/\/   can encode more than 32 bits between them.  This allows compilers to\n-  \/\/   share set-hi instructions between addresses that differ by a small\n-  \/\/   offset (e.g., different static variables in the same class).\n-  \/\/   On such machines, the \"x\" argument to set_value on all set-lo\n-  \/\/   instructions must be the same as the \"x\" argument for the\n-  \/\/   corresponding set-hi instructions.  The \"o\" arguments for the\n-  \/\/   set-hi instructions are ignored, and must not affect the high-half\n-  \/\/   immediate constant.  The \"o\" arguments for the set-lo instructions are\n-  \/\/   added into the low-half immediate constant, and must not overflow it.\"\n-  \/\/\n-  \/\/ Currently we don't support splitting of relocations, so o must be\n-  \/\/ zero:\n+  \/\/ Currently we don't support splitting of relocations.\n@@ -58,6 +43,2 @@\n-      assert(type() == relocInfo::oop_type || type() == relocInfo::metadata_type,\n-             \"how to encode else?\");\n-      narrowOop no = (type() == relocInfo::oop_type) ?\n-          CompressedOops::encode(cast_to_oop(x)) :\n-          \/\/ Type punning compressed klass pointer as narrowOop.\n-          CompressedOops::narrow_oop_cast(CompressedKlassPointers::encode((Klass*)x));\n+      assert(type() == relocInfo::oop_type, \"how to encode else?\");\n+      narrowOop no = CompressedOops::encode(cast_to_oop(x));\n","filename":"src\/hotspot\/cpu\/ppc\/relocInfo_ppc.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2733,1 +2733,1 @@\n-  if (!UseFastLocking) {\n+  if (UseHeavyMonitors) {\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -308,1 +308,1 @@\n-  __ z_srlg(Rcard_addr, Rstore_addr, CardTable::card_shift);         \/\/ Index into card table.\n+  __ z_srlg(Rcard_addr, Rstore_addr, CardTable::card_shift());         \/\/ Index into card table.\n@@ -551,1 +551,1 @@\n-  __ z_srlg(addr_card, addr_oop, CardTable::card_shift);\n+  __ z_srlg(addr_card, addr_oop, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/s390\/gc\/g1\/g1BarrierSetAssembler_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,2 +73,2 @@\n-  __ z_srlg(addr,  addr,  CardTable::card_shift);\n-  __ z_srlg(count, count, CardTable::card_shift);\n+  __ z_srlg(addr,  addr,  CardTable::card_shift());\n+  __ z_srlg(count, count, CardTable::card_shift());\n@@ -149,1 +149,1 @@\n-  __ z_srlg(store_addr, store_addr, CardTable::card_shift);\n+  __ z_srlg(store_addr, store_addr, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/cardTableBarrierSetAssembler_s390.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1547,1 +1547,1 @@\n-const TypeVect* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n+const TypeVectMask* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2063,0 +2063,7 @@\n+void Assembler::vcvttps2dq(XMMRegister dst, XMMRegister src, int vector_len) {\n+  assert(vector_len <= AVX_256bit ? VM_Version::supports_avx() : VM_Version::supports_evex(), \"\");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_F3, VEX_OPCODE_0F, &attributes);\n+  emit_int16(0x5B, (0xC0 | encode));\n+}\n+\n@@ -2071,0 +2078,8 @@\n+void Assembler::evcvttpd2qq(XMMRegister dst, XMMRegister src, int vector_len) {\n+  assert(UseAVX > 2 && VM_Version::supports_avx512dq(), \"\");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ true, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F, &attributes);\n+  emit_int16(0x7A, (0xC0 | encode));\n+}\n+\n@@ -11280,0 +11295,14 @@\n+void Assembler::pext(Register dst, Register src1, Register src2) {\n+  assert(VM_Version::supports_bmi2(), \"bit manipulation instructions not supported\");\n+  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ true, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = vex_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_F3, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16((unsigned char)0xF5, (0xC0 | encode));\n+}\n+\n+void Assembler::pdep(Register dst, Register src1, Register src2) {\n+  assert(VM_Version::supports_bmi2(), \"bit manipulation instructions not supported\");\n+  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ true, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = vex_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_F2, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16((unsigned char)0xF5, (0xC0 | encode));\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1171,0 +1171,3 @@\n+  \/\/ Convert vector float and int\n+  void vcvttps2dq(XMMRegister dst, XMMRegister src, int vector_len);\n+\n@@ -1175,0 +1178,3 @@\n+  \/\/ Convert vector double to long\n+  void evcvttpd2qq(XMMRegister dst, XMMRegister src, int vector_len);\n+\n@@ -2181,0 +2187,3 @@\n+  void pdep(Register dst, Register src1, Register src2);\n+  void pext(Register dst, Register src1, Register src2);\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -464,1 +464,5 @@\n-    __ unlock_object(rdi, rsi, rax, *stub->entry());\n+    if (UseHeavyMonitors) {\n+      __ jmp(*stub->entry());\n+    } else {\n+      __ unlock_object(rdi, rsi, rax, *stub->entry());\n+    }\n@@ -3501,1 +3505,1 @@\n-  if (!UseFastLocking) {\n+  if (UseHeavyMonitors) {\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -488,0 +488,1 @@\n+    assert(!UseHeavyMonitors, \"+UseHeavyMonitors and +UseRTMForStackLocks are mutually exclusive\");\n@@ -498,14 +499,19 @@\n-  \/\/ Attempt stack-locking ...\n-  orptr (tmpReg, markWord::unlocked_value);\n-  movptr(Address(boxReg, 0), tmpReg);          \/\/ Anticipate successful CAS\n-  lock();\n-  cmpxchgptr(boxReg, Address(objReg, oopDesc::mark_offset_in_bytes()));      \/\/ Updates tmpReg\n-  jcc(Assembler::equal, DONE_LABEL);           \/\/ Success\n-\n-  \/\/ Recursive locking.\n-  \/\/ The object is stack-locked: markword contains stack pointer to BasicLock.\n-  \/\/ Locked by current thread if difference with current SP is less than one page.\n-  subptr(tmpReg, rsp);\n-  \/\/ Next instruction set ZFlag == 1 (Success) if difference is less then one page.\n-  andptr(tmpReg, (int32_t) (NOT_LP64(0xFFFFF003) LP64_ONLY(7 - os::vm_page_size())) );\n-  movptr(Address(boxReg, 0), tmpReg);\n+  if (!UseHeavyMonitors) {\n+    \/\/ Attempt stack-locking ...\n+    orptr (tmpReg, markWord::unlocked_value);\n+    movptr(Address(boxReg, 0), tmpReg);          \/\/ Anticipate successful CAS\n+    lock();\n+    cmpxchgptr(boxReg, Address(objReg, oopDesc::mark_offset_in_bytes()));      \/\/ Updates tmpReg\n+    jcc(Assembler::equal, DONE_LABEL);           \/\/ Success\n+\n+    \/\/ Recursive locking.\n+    \/\/ The object is stack-locked: markword contains stack pointer to BasicLock.\n+    \/\/ Locked by current thread if difference with current SP is less than one page.\n+    subptr(tmpReg, rsp);\n+    \/\/ Next instruction set ZFlag == 1 (Success) if difference is less then one page.\n+    andptr(tmpReg, (int32_t) (NOT_LP64(0xFFFFF003) LP64_ONLY(7 - os::vm_page_size())) );\n+    movptr(Address(boxReg, 0), tmpReg);\n+  } else {\n+    \/\/ Clear ZF so that we take the slow path at the DONE label. objReg is known to be not 0.\n+    testptr(objReg, objReg);\n+  }\n@@ -641,0 +647,1 @@\n+    assert(!UseHeavyMonitors, \"+UseHeavyMonitors and +UseRTMForStackLocks are mutually exclusive\");\n@@ -652,2 +659,4 @@\n-  cmpptr(Address(boxReg, 0), (int32_t)NULL_WORD);                   \/\/ Examine the displaced header\n-  jcc   (Assembler::zero, DONE_LABEL);                              \/\/ 0 indicates recursive stack-lock\n+  if (!UseHeavyMonitors) {\n+    cmpptr(Address(boxReg, 0), (int32_t)NULL_WORD);                   \/\/ Examine the displaced header\n+    jcc   (Assembler::zero, DONE_LABEL);                              \/\/ 0 indicates recursive stack-lock\n+  }\n@@ -655,2 +664,4 @@\n-  testptr(tmpReg, markWord::monitor_value);                         \/\/ Inflated?\n-  jccb  (Assembler::zero, Stacked);\n+  if (!UseHeavyMonitors) {\n+    testptr(tmpReg, markWord::monitor_value);                         \/\/ Inflated?\n+    jccb  (Assembler::zero, Stacked);\n+  }\n@@ -798,5 +809,6 @@\n-  bind  (Stacked);\n-  movptr(tmpReg, Address (boxReg, 0));      \/\/ re-fetch\n-  lock();\n-  cmpxchgptr(tmpReg, Address(objReg, oopDesc::mark_offset_in_bytes())); \/\/ Uses RAX which is box\n-\n+  if (!UseHeavyMonitors) {\n+    bind  (Stacked);\n+    movptr(tmpReg, Address (boxReg, 0));      \/\/ re-fetch\n+    lock();\n+    cmpxchgptr(tmpReg, Address(objReg, oopDesc::mark_offset_in_bytes())); \/\/ Uses RAX which is box\n+  }\n@@ -4062,0 +4074,81 @@\n+\/*\n+ * Algorithm for vector D2L and F2I conversions:-\n+ * a) Perform vector D2L\/F2I cast.\n+ * b) Choose fast path if none of the result vector lane contains 0x80000000 value.\n+ *    It signifies that source value could be any of the special floating point\n+ *    values(NaN,-Inf,Inf,Max,-Min).\n+ * c) Set destination to zero if source is NaN value.\n+ * d) Replace 0x80000000 with MaxInt if source lane contains a +ve value.\n+ *\/\n+\n+void C2_MacroAssembler::vector_castD2L_evex(XMMRegister dst, XMMRegister src, XMMRegister xtmp1, XMMRegister xtmp2,\n+                                            KRegister ktmp1, KRegister ktmp2, AddressLiteral double_sign_flip,\n+                                            Register scratch, int vec_enc) {\n+  Label done;\n+  evcvttpd2qq(dst, src, vec_enc);\n+  evmovdqul(xtmp1, k0, double_sign_flip, false, vec_enc, scratch);\n+  evpcmpeqq(ktmp1, xtmp1, dst, vec_enc);\n+  kortestwl(ktmp1, ktmp1);\n+  jccb(Assembler::equal, done);\n+\n+  vpxor(xtmp2, xtmp2, xtmp2, vec_enc);\n+  evcmppd(ktmp2, k0, src, src, Assembler::UNORD_Q, vec_enc);\n+  evmovdquq(dst, ktmp2, xtmp2, true, vec_enc);\n+\n+  kxorwl(ktmp1, ktmp1, ktmp2);\n+  evcmppd(ktmp1, ktmp1, src, xtmp2, Assembler::NLT_UQ, vec_enc);\n+  vpternlogq(xtmp2, 0x11, xtmp1, xtmp1, vec_enc);\n+  evmovdquq(dst, ktmp1, xtmp2, true, vec_enc);\n+  bind(done);\n+}\n+\n+void C2_MacroAssembler::vector_castF2I_avx(XMMRegister dst, XMMRegister src, XMMRegister xtmp1,\n+                                           XMMRegister xtmp2, XMMRegister xtmp3, XMMRegister xtmp4,\n+                                           AddressLiteral float_sign_flip, Register scratch, int vec_enc) {\n+  Label done;\n+  vcvttps2dq(dst, src, vec_enc);\n+  vmovdqu(xtmp1, float_sign_flip, scratch, vec_enc);\n+  vpcmpeqd(xtmp2, dst, xtmp1, vec_enc);\n+  vptest(xtmp2, xtmp2, vec_enc);\n+  jccb(Assembler::equal, done);\n+\n+  vpcmpeqd(xtmp4, xtmp4, xtmp4, vec_enc);\n+  vpxor(xtmp1, xtmp1, xtmp4, vec_enc);\n+\n+  vpxor(xtmp4, xtmp4, xtmp4, vec_enc);\n+  vcmpps(xtmp3, src, src, Assembler::UNORD_Q, vec_enc);\n+  vblendvps(dst, dst, xtmp4, xtmp3, vec_enc);\n+\n+  \/\/ Recompute the mask for remaining special value.\n+  vpxor(xtmp2, xtmp2, xtmp3, vec_enc);\n+  \/\/ Extract SRC values corresponding to TRUE mask lanes.\n+  vpand(xtmp4, xtmp2, src, vec_enc);\n+  \/\/ Flip mask bits so that MSB bit of MASK lanes corresponding to +ve special\n+  \/\/ values are set.\n+  vpxor(xtmp3, xtmp2, xtmp4, vec_enc);\n+\n+  vblendvps(dst, dst, xtmp1, xtmp3, vec_enc);\n+  bind(done);\n+}\n+\n+void C2_MacroAssembler::vector_castF2I_evex(XMMRegister dst, XMMRegister src, XMMRegister xtmp1, XMMRegister xtmp2,\n+                                            KRegister ktmp1, KRegister ktmp2, AddressLiteral float_sign_flip,\n+                                            Register scratch, int vec_enc) {\n+  Label done;\n+  vcvttps2dq(dst, src, vec_enc);\n+  evmovdqul(xtmp1, k0, float_sign_flip, false, vec_enc, scratch);\n+  Assembler::evpcmpeqd(ktmp1, k0, xtmp1, dst, vec_enc);\n+  kortestwl(ktmp1, ktmp1);\n+  jccb(Assembler::equal, done);\n+\n+  vpxor(xtmp2, xtmp2, xtmp2, vec_enc);\n+  evcmpps(ktmp2, k0, src, src, Assembler::UNORD_Q, vec_enc);\n+  evmovdqul(dst, ktmp2, xtmp2, true, vec_enc);\n+\n+  kxorwl(ktmp1, ktmp1, ktmp2);\n+  evcmpps(ktmp1, ktmp1, src, xtmp2, Assembler::NLT_UQ, vec_enc);\n+  vpternlogd(xtmp2, 0x11, xtmp1, xtmp1, vec_enc);\n+  evmovdqul(dst, ktmp1, xtmp2, true, vec_enc);\n+  bind(done);\n+}\n+\n@@ -4063,0 +4156,39 @@\n+void C2_MacroAssembler::vector_long_to_maskvec(XMMRegister dst, Register src, Register rtmp1,\n+                                               Register rtmp2, XMMRegister xtmp, int mask_len,\n+                                               int vec_enc) {\n+  int index = 0;\n+  int vindex = 0;\n+  mov64(rtmp1, 0x0101010101010101L);\n+  pdep(rtmp1, src, rtmp1);\n+  if (mask_len > 8) {\n+    movq(rtmp2, src);\n+    vpxor(xtmp, xtmp, xtmp, vec_enc);\n+    movq(xtmp, rtmp1);\n+  }\n+  movq(dst, rtmp1);\n+\n+  mask_len -= 8;\n+  while (mask_len > 0) {\n+    assert ((mask_len & 0x7) == 0, \"mask must be multiple of 8\");\n+    index++;\n+    if ((index % 2) == 0) {\n+      pxor(xtmp, xtmp);\n+    }\n+    mov64(rtmp1, 0x0101010101010101L);\n+    shrq(rtmp2, 8);\n+    pdep(rtmp1, rtmp2, rtmp1);\n+    pinsrq(xtmp, rtmp1, index % 2);\n+    vindex = index \/ 2;\n+    if (vindex) {\n+      \/\/ Write entire 16 byte vector when both 64 bit\n+      \/\/ lanes are update to save redundant instructions.\n+      if (index % 2) {\n+        vinsertf128(dst, dst, xtmp, vindex);\n+      }\n+    } else {\n+      vmovdqu(dst, xtmp);\n+    }\n+    mask_len -= 8;\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":155,"deletions":23,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -233,0 +233,2 @@\n+  void vector_long_to_maskvec(XMMRegister dst, Register src, Register rtmp1,\n+                              Register rtmp2, XMMRegister xtmp, int mask_len, int vec_enc);\n@@ -234,0 +236,1 @@\n+\n@@ -293,0 +296,12 @@\n+\n+  void vector_castF2I_avx(XMMRegister dst, XMMRegister src, XMMRegister xtmp1,\n+                          XMMRegister xtmp2, XMMRegister xtmp3, XMMRegister xtmp4,\n+                          AddressLiteral float_sign_flip, Register scratch, int vec_enc);\n+\n+  void vector_castF2I_evex(XMMRegister dst, XMMRegister src, XMMRegister xtmp1, XMMRegister xtmp2,\n+                           KRegister ktmp1, KRegister ktmp2, AddressLiteral float_sign_flip,\n+                           Register scratch, int vec_enc);\n+\n+  void vector_castD2L_evex(XMMRegister dst, XMMRegister src, XMMRegister xtmp1, XMMRegister xtmp2,\n+                           KRegister ktmp1, KRegister ktmp2, AddressLiteral double_sign_flip,\n+                           Register scratch, int vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-  __ shrptr(card_addr, CardTable::card_shift);\n+  __ shrptr(card_addr, CardTable::card_shift());\n@@ -543,1 +543,1 @@\n-  __ shrptr(card_addr, CardTable::card_shift);\n+  __ shrptr(card_addr, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,2 +63,2 @@\n-  __ shrptr(addr, CardTable::card_shift);\n-  __ shrptr(end, CardTable::card_shift);\n+  __ shrptr(addr, CardTable::card_shift());\n+  __ shrptr(end, CardTable::card_shift());\n@@ -75,2 +75,2 @@\n-  __ shrptr(addr, CardTable::card_shift);\n-  __ shrptr(end,   CardTable::card_shift);\n+  __ shrptr(addr, CardTable::card_shift());\n+  __ shrptr(end,   CardTable::card_shift());\n@@ -96,1 +96,1 @@\n-  __ shrptr(obj, CardTable::card_shift);\n+  __ shrptr(obj, CardTable::card_shift());\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shared\/cardTableBarrierSetAssembler_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2550,0 +2550,9 @@\n+void MacroAssembler::vmovdqu(XMMRegister dst, AddressLiteral src, Register scratch_reg, int vector_len) {\n+  assert(vector_len <= AVX_256bit, \"AVX2 vector length\");\n+  if (vector_len == AVX_256bit) {\n+    vmovdqu(dst, src, scratch_reg);\n+  } else {\n+    movdqu(dst, src, scratch_reg);\n+  }\n+}\n+\n@@ -5016,1 +5025,1 @@\n-  bool use64byteVector = MaxVectorSize == 64 && AVX3Threshold == 0;\n+  bool use64byteVector = (MaxVectorSize == 64) && (VM_Version::avx3_threshold() == 0);\n@@ -5080,1 +5089,1 @@\n-  bool use64byteVector = MaxVectorSize > 32 && AVX3Threshold == 0;\n+  bool use64byteVector = (MaxVectorSize > 32) && (VM_Version::avx3_threshold() == 0);\n@@ -5323,2 +5332,2 @@\n-          \/\/ If number of bytes to fill < AVX3Threshold, perform fill using AVX2\n-          cmpl(count, AVX3Threshold);\n+          \/\/ If number of bytes to fill < VM_Version::avx3_threshold(), perform fill using AVX2\n+          cmpl(count, VM_Version::avx3_threshold());\n@@ -8712,0 +8721,1 @@\n+  int avx3threshold = VM_Version::avx3_threshold();\n@@ -8727,1 +8737,1 @@\n-  if (AVX3Threshold != 0  || MaxVectorSize == 32) {\n+  if ((avx3threshold != 0)  || (MaxVectorSize == 32)) {\n@@ -8730,1 +8740,1 @@\n-      cmpq(count, AVX3Threshold >> shift);\n+      cmpq(count, avx3threshold >> shift);\n@@ -9041,0 +9051,1 @@\n+\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1121,0 +1121,2 @@\n+  void vmovdqu(XMMRegister dst, AddressLiteral src, Register scratch_reg, int vector_len);\n+\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-  bool avx3 = MaxVectorSize > 32 && AVX3Threshold == 0;\n+  bool avx3 = (MaxVectorSize > 32) && (VM_Version::avx3_threshold() == 0);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_arrayCopy_avx3.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1708,30 +1708,35 @@\n-    \/\/ Load immediate 1 into swap_reg %rax,\n-    __ movptr(swap_reg, 1);\n-\n-    \/\/ Load (object->mark() | 1) into swap_reg %rax,\n-    __ orptr(swap_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-\n-    \/\/ Save (object->mark() | 1) into BasicLock's displaced header\n-    __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n-\n-    \/\/ src -> dest iff dest == rax, else rax, <- dest\n-    \/\/ *obj_reg = lock_reg iff *obj_reg == rax, else rax, = *(obj_reg)\n-    __ lock();\n-    __ cmpxchgptr(lock_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-    __ jcc(Assembler::equal, lock_done);\n-\n-    \/\/ Test if the oopMark is an obvious stack pointer, i.e.,\n-    \/\/  1) (mark & 3) == 0, and\n-    \/\/  2) rsp <= mark < mark + os::pagesize()\n-    \/\/ These 3 tests can be done by evaluating the following\n-    \/\/ expression: ((mark - rsp) & (3 - os::vm_page_size())),\n-    \/\/ assuming both stack pointer and pagesize have their\n-    \/\/ least significant 2 bits clear.\n-    \/\/ NOTE: the oopMark is in swap_reg %rax, as the result of cmpxchg\n-\n-    __ subptr(swap_reg, rsp);\n-    __ andptr(swap_reg, 3 - os::vm_page_size());\n-\n-    \/\/ Save the test result, for recursive case, the result is zero\n-    __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n-    __ jcc(Assembler::notEqual, slow_path_lock);\n+    if (!UseHeavyMonitors) {\n+      \/\/ Load immediate 1 into swap_reg %rax,\n+      __ movptr(swap_reg, 1);\n+\n+      \/\/ Load (object->mark() | 1) into swap_reg %rax,\n+      __ orptr(swap_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+\n+      \/\/ Save (object->mark() | 1) into BasicLock's displaced header\n+      __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n+\n+      \/\/ src -> dest iff dest == rax, else rax, <- dest\n+      \/\/ *obj_reg = lock_reg iff *obj_reg == rax, else rax, = *(obj_reg)\n+      __ lock();\n+      __ cmpxchgptr(lock_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      __ jcc(Assembler::equal, lock_done);\n+\n+      \/\/ Test if the oopMark is an obvious stack pointer, i.e.,\n+      \/\/  1) (mark & 3) == 0, and\n+      \/\/  2) rsp <= mark < mark + os::pagesize()\n+      \/\/ These 3 tests can be done by evaluating the following\n+      \/\/ expression: ((mark - rsp) & (3 - os::vm_page_size())),\n+      \/\/ assuming both stack pointer and pagesize have their\n+      \/\/ least significant 2 bits clear.\n+      \/\/ NOTE: the oopMark is in swap_reg %rax, as the result of cmpxchg\n+\n+      __ subptr(swap_reg, rsp);\n+      __ andptr(swap_reg, 3 - os::vm_page_size());\n+\n+      \/\/ Save the test result, for recursive case, the result is zero\n+      __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n+      __ jcc(Assembler::notEqual, slow_path_lock);\n+    } else {\n+      __ jmp(slow_path_lock);\n+    }\n+\n@@ -1855,1 +1860,2 @@\n-    \/\/ Simple recursive lock?\n+    if (!UseHeavyMonitors) {\n+      \/\/ Simple recursive lock?\n@@ -1857,2 +1863,2 @@\n-    __ cmpptr(Address(rbp, lock_slot_rbp_offset), (int32_t)NULL_WORD);\n-    __ jcc(Assembler::equal, done);\n+      __ cmpptr(Address(rbp, lock_slot_rbp_offset), (int32_t)NULL_WORD);\n+      __ jcc(Assembler::equal, done);\n@@ -1860,4 +1866,4 @@\n-    \/\/ Must save rax, if if it is live now because cmpxchg must use it\n-    if (ret_type != T_FLOAT && ret_type != T_DOUBLE && ret_type != T_VOID) {\n-      save_native_result(masm, ret_type, stack_slots);\n-    }\n+      \/\/ Must save rax, if if it is live now because cmpxchg must use it\n+      if (ret_type != T_FLOAT && ret_type != T_DOUBLE && ret_type != T_VOID) {\n+        save_native_result(masm, ret_type, stack_slots);\n+      }\n@@ -1865,2 +1871,2 @@\n-    \/\/  get old displaced header\n-    __ movptr(rbx, Address(rbp, lock_slot_rbp_offset));\n+      \/\/  get old displaced header\n+      __ movptr(rbx, Address(rbp, lock_slot_rbp_offset));\n@@ -1868,2 +1874,2 @@\n-    \/\/ get address of the stack lock\n-    __ lea(rax, Address(rbp, lock_slot_rbp_offset));\n+      \/\/ get address of the stack lock\n+      __ lea(rax, Address(rbp, lock_slot_rbp_offset));\n@@ -1871,6 +1877,9 @@\n-    \/\/ Atomic swap old header if oop still contains the stack lock\n-    \/\/ src -> dest iff dest == rax, else rax, <- dest\n-    \/\/ *obj_reg = rbx, iff *obj_reg == rax, else rax, = *(obj_reg)\n-    __ lock();\n-    __ cmpxchgptr(rbx, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-    __ jcc(Assembler::notEqual, slow_path_unlock);\n+      \/\/ Atomic swap old header if oop still contains the stack lock\n+      \/\/ src -> dest iff dest == rax, else rax, <- dest\n+      \/\/ *obj_reg = rbx, iff *obj_reg == rax, else rax, = *(obj_reg)\n+      __ lock();\n+      __ cmpxchgptr(rbx, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      __ jcc(Assembler::notEqual, slow_path_unlock);\n+    } else {\n+      __ jmp(slow_path_unlock);\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":56,"deletions":47,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -1926,31 +1926,35 @@\n-    \/\/ Load immediate 1 into swap_reg %rax\n-    __ movl(swap_reg, 1);\n-\n-    \/\/ Load (object->mark() | 1) into swap_reg %rax\n-    __ orptr(swap_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-\n-    \/\/ Save (object->mark() | 1) into BasicLock's displaced header\n-    __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n-\n-    \/\/ src -> dest iff dest == rax else rax <- dest\n-    __ lock();\n-    __ cmpxchgptr(lock_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-    __ jcc(Assembler::equal, lock_done);\n-\n-    \/\/ Hmm should this move to the slow path code area???\n-\n-    \/\/ Test if the oopMark is an obvious stack pointer, i.e.,\n-    \/\/  1) (mark & 3) == 0, and\n-    \/\/  2) rsp <= mark < mark + os::pagesize()\n-    \/\/ These 3 tests can be done by evaluating the following\n-    \/\/ expression: ((mark - rsp) & (3 - os::vm_page_size())),\n-    \/\/ assuming both stack pointer and pagesize have their\n-    \/\/ least significant 2 bits clear.\n-    \/\/ NOTE: the oopMark is in swap_reg %rax as the result of cmpxchg\n-\n-    __ subptr(swap_reg, rsp);\n-    __ andptr(swap_reg, 3 - os::vm_page_size());\n-\n-    \/\/ Save the test result, for recursive case, the result is zero\n-    __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n-    __ jcc(Assembler::notEqual, slow_path_lock);\n+    if (!UseHeavyMonitors) {\n+      \/\/ Load immediate 1 into swap_reg %rax\n+      __ movl(swap_reg, 1);\n+\n+      \/\/ Load (object->mark() | 1) into swap_reg %rax\n+      __ orptr(swap_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+\n+      \/\/ Save (object->mark() | 1) into BasicLock's displaced header\n+      __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n+\n+      \/\/ src -> dest iff dest == rax else rax <- dest\n+      __ lock();\n+      __ cmpxchgptr(lock_reg, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      __ jcc(Assembler::equal, lock_done);\n+\n+      \/\/ Hmm should this move to the slow path code area???\n+\n+      \/\/ Test if the oopMark is an obvious stack pointer, i.e.,\n+      \/\/  1) (mark & 3) == 0, and\n+      \/\/  2) rsp <= mark < mark + os::pagesize()\n+      \/\/ These 3 tests can be done by evaluating the following\n+      \/\/ expression: ((mark - rsp) & (3 - os::vm_page_size())),\n+      \/\/ assuming both stack pointer and pagesize have their\n+      \/\/ least significant 2 bits clear.\n+      \/\/ NOTE: the oopMark is in swap_reg %rax as the result of cmpxchg\n+\n+      __ subptr(swap_reg, rsp);\n+      __ andptr(swap_reg, 3 - os::vm_page_size());\n+\n+      \/\/ Save the test result, for recursive case, the result is zero\n+      __ movptr(Address(lock_reg, mark_word_offset), swap_reg);\n+      __ jcc(Assembler::notEqual, slow_path_lock);\n+    } else {\n+      __ jmp(slow_path_lock);\n+    }\n@@ -2063,1 +2067,0 @@\n-    \/\/ Simple recursive lock?\n@@ -2065,2 +2068,4 @@\n-    __ cmpptr(Address(rsp, lock_slot_offset * VMRegImpl::stack_slot_size), (int32_t)NULL_WORD);\n-    __ jcc(Assembler::equal, done);\n+    if (!UseHeavyMonitors) {\n+      \/\/ Simple recursive lock?\n+      __ cmpptr(Address(rsp, lock_slot_offset * VMRegImpl::stack_slot_size), (int32_t)NULL_WORD);\n+      __ jcc(Assembler::equal, done);\n@@ -2068,4 +2073,4 @@\n-    \/\/ Must save rax if if it is live now because cmpxchg must use it\n-    if (ret_type != T_FLOAT && ret_type != T_DOUBLE && ret_type != T_VOID) {\n-      save_native_result(masm, ret_type, stack_slots);\n-    }\n+      \/\/ Must save rax if if it is live now because cmpxchg must use it\n+      if (ret_type != T_FLOAT && ret_type != T_DOUBLE && ret_type != T_VOID) {\n+        save_native_result(masm, ret_type, stack_slots);\n+      }\n@@ -2074,4 +2079,4 @@\n-    \/\/ get address of the stack lock\n-    __ lea(rax, Address(rsp, lock_slot_offset * VMRegImpl::stack_slot_size));\n-    \/\/  get old displaced header\n-    __ movptr(old_hdr, Address(rax, 0));\n+      \/\/ get address of the stack lock\n+      __ lea(rax, Address(rsp, lock_slot_offset * VMRegImpl::stack_slot_size));\n+      \/\/  get old displaced header\n+      __ movptr(old_hdr, Address(rax, 0));\n@@ -2079,4 +2084,7 @@\n-    \/\/ Atomic swap old header if oop still contains the stack lock\n-    __ lock();\n-    __ cmpxchgptr(old_hdr, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n-    __ jcc(Assembler::notEqual, slow_path_unlock);\n+      \/\/ Atomic swap old header if oop still contains the stack lock\n+      __ lock();\n+      __ cmpxchgptr(old_hdr, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      __ jcc(Assembler::notEqual, slow_path_unlock);\n+    } else {\n+      __ jmp(slow_path_unlock);\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":54,"deletions":46,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -1387,2 +1387,2 @@\n-\n-    bool use64byteVector = MaxVectorSize > 32 && AVX3Threshold == 0;\n+    int avx3threshold = VM_Version::avx3_threshold();\n+    bool use64byteVector = (MaxVectorSize > 32) && (avx3threshold == 0);\n@@ -1451,1 +1451,1 @@\n-      if (AVX3Threshold != 0) {\n+      if (avx3threshold != 0) {\n@@ -1463,1 +1463,1 @@\n-      if (MaxVectorSize < 64  || AVX3Threshold != 0) {\n+      if ((MaxVectorSize < 64)  || (avx3threshold != 0)) {\n@@ -1606,1 +1606,2 @@\n-    bool use64byteVector = MaxVectorSize > 32 && AVX3Threshold == 0;\n+    int avx3threshold = VM_Version::avx3_threshold();\n+    bool use64byteVector = (MaxVectorSize > 32) && (avx3threshold == 0);\n@@ -1671,1 +1672,1 @@\n-      if (MaxVectorSize > 32 && AVX3Threshold != 0) {\n+      if ((MaxVectorSize > 32) && (avx3threshold != 0)) {\n@@ -1676,1 +1677,1 @@\n-      if (MaxVectorSize < 64  || AVX3Threshold != 0) {\n+      if ((MaxVectorSize < 64)  || (avx3threshold != 0)) {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1881,0 +1881,11 @@\n+\/\/ avx3_threshold() sets the threshold at which 64-byte instructions are used\n+\/\/ for implementing the array copy and clear operations.\n+\/\/ The Intel platforms that supports the serialize instruction\n+\/\/ has improved implementation of 64-byte load\/stores and so the default\n+\/\/ threshold is set to 0 for these platforms.\n+int VM_Version::avx3_threshold() {\n+  return (is_intel_family_core() &&\n+          supports_serialize() &&\n+          FLAG_IS_DEFAULT(AVX3Threshold)) ? 0 : AVX3Threshold;\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -914,0 +914,2 @@\n+  static int avx3_threshold();\n+\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1385,0 +1385,2 @@\n+  static address vector_float_signflip() { return StubRoutines::x86::vector_float_sign_flip();}\n+  static address vector_double_signflip() { return StubRoutines::x86::vector_double_sign_flip();}\n@@ -1795,1 +1797,0 @@\n-    case Op_VectorCastF2X:\n@@ -1797,4 +1798,10 @@\n-      if (is_integral_type(bt)) {\n-        \/\/ Casts from FP to integral types require special fixup logic not easily\n-        \/\/ implementable with vectors.\n-        return false; \/\/ Implementation limitation\n+      if (is_subword_type(bt) || bt == T_INT) {\n+        return false;\n+      }\n+      if (bt == T_LONG && !VM_Version::supports_avx512dq()) {\n+        return false;\n+      }\n+      break;\n+    case Op_VectorCastF2X:\n+      if (is_subword_type(bt) || bt == T_LONG) {\n+        return false;\n@@ -1802,0 +1809,1 @@\n+      break;\n@@ -1837,0 +1845,8 @@\n+    case Op_VectorLongToMask:\n+      if (UseAVX < 1 || !is_LP64) {\n+        return false;\n+      }\n+      if (UseAVX < 3 && !VM_Version::supports_bmi2()) {\n+        return false;\n+      }\n+      break;\n@@ -2046,1 +2062,1 @@\n-const TypeVect* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n+const TypeVectMask* Matcher::predicate_reg_type(const Type* elemTy, int length) {\n@@ -7160,1 +7176,1 @@\n-  format %{ \"vector_cast_f2x  $dst,$src\\t!\" %}\n+  format %{ \"vector_cast_f2d  $dst,$src\\t!\" %}\n@@ -7168,0 +7184,32 @@\n+instruct vcastFtoI_reg_avx(vec dst, vec src, vec xtmp1, vec xtmp2, vec xtmp3, vec xtmp4, rRegP scratch, rFlagsReg cr) %{\n+  predicate(!VM_Version::supports_avx512vl() &&\n+            Matcher::vector_length_in_bytes(n) < 64 &&\n+            Matcher::vector_element_basic_type(n) == T_INT);\n+  match(Set dst (VectorCastF2X src));\n+  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, TEMP xtmp3, TEMP xtmp4, TEMP scratch, KILL cr);\n+  format %{ \"vector_cast_f2i $dst,$src\\t! using $xtmp1, $xtmp2, $xtmp3 and $xtmp4 as TEMP\" %}\n+  ins_encode %{\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vector_castF2I_avx($dst$$XMMRegister, $src$$XMMRegister, $xtmp1$$XMMRegister,\n+                          $xtmp2$$XMMRegister, $xtmp3$$XMMRegister, $xtmp4$$XMMRegister,\n+                          ExternalAddress(vector_float_signflip()), $scratch$$Register, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct vcastFtoI_reg_evex(vec dst, vec src, vec xtmp1, vec xtmp2, kReg ktmp1, kReg ktmp2, rRegP scratch, rFlagsReg cr) %{\n+  predicate((VM_Version::supports_avx512vl() ||\n+             Matcher::vector_length_in_bytes(n) == 64) &&\n+             Matcher::vector_element_basic_type(n) == T_INT);\n+  match(Set dst (VectorCastF2X src));\n+  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, TEMP ktmp1, TEMP ktmp2, TEMP scratch, KILL cr);\n+  format %{ \"vector_cast_f2i $dst,$src\\t! using $xtmp1, $xtmp2, $ktmp1 and $ktmp2 as TEMP\" %}\n+  ins_encode %{\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vector_castF2I_evex($dst$$XMMRegister, $src$$XMMRegister, $xtmp1$$XMMRegister,\n+                           $xtmp2$$XMMRegister, $ktmp1$$KRegister, $ktmp2$$KRegister,\n+                           ExternalAddress(vector_float_signflip()), $scratch$$Register, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -7179,0 +7227,14 @@\n+instruct vcastDtoL_reg_evex(vec dst, vec src, vec xtmp1, vec xtmp2, kReg ktmp1, kReg ktmp2, rRegP scratch, rFlagsReg cr) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_LONG);\n+  match(Set dst (VectorCastD2X src));\n+  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, TEMP ktmp1, TEMP ktmp2, TEMP scratch, KILL cr);\n+  format %{ \"vector_cast_d2l $dst,$src\\t! using $xtmp1, $xtmp2, $ktmp1 and $ktmp2 as TEMP\" %}\n+  ins_encode %{\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vector_castD2L_evex($dst$$XMMRegister, $src$$XMMRegister, $xtmp1$$XMMRegister,\n+                           $xtmp2$$XMMRegister, $ktmp1$$KRegister, $ktmp2$$KRegister,\n+                           ExternalAddress(vector_double_signflip()), $scratch$$Register, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -9482,0 +9544,41 @@\n+\n+instruct long_to_maskLE8_avx(vec dst, rRegL src, rRegL rtmp1, rRegL rtmp2, vec xtmp) %{\n+  predicate(n->bottom_type()->isa_vectmask() == NULL && Matcher::vector_length(n) <= 8);\n+  match(Set dst (VectorLongToMask src));\n+  effect(TEMP dst, TEMP rtmp1, TEMP rtmp2, TEMP xtmp);\n+  format %{ \"long_to_mask_avx $dst, $src\\t! using $rtmp1, $rtmp2, $xtmp as TEMP\" %}\n+  ins_encode %{\n+    int mask_len = Matcher::vector_length(this);\n+    int vec_enc  = vector_length_encoding(mask_len*8);\n+    __ vector_long_to_maskvec($dst$$XMMRegister, $src$$Register, $rtmp1$$Register,\n+                              $rtmp2$$Register, xnoreg, mask_len, vec_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+\n+instruct long_to_maskGT8_avx(vec dst, rRegL src, rRegL rtmp1, rRegL rtmp2, vec xtmp1, rFlagsReg cr) %{\n+  predicate(n->bottom_type()->isa_vectmask() == NULL && Matcher::vector_length(n) > 8);\n+  match(Set dst (VectorLongToMask src));\n+  effect(TEMP dst, TEMP rtmp1, TEMP rtmp2, TEMP xtmp1, KILL cr);\n+  format %{ \"long_to_mask_avx $dst, $src\\t! using $rtmp1, $rtmp2, $xtmp1, as TEMP\" %}\n+  ins_encode %{\n+    int mask_len = Matcher::vector_length(this);\n+    assert(mask_len <= 32, \"invalid mask length\");\n+    int vec_enc  = vector_length_encoding(mask_len*8);\n+    __ vector_long_to_maskvec($dst$$XMMRegister, $src$$Register, $rtmp1$$Register,\n+                              $rtmp2$$Register, $xtmp1$$XMMRegister, mask_len, vec_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct long_to_mask_evex(kReg dst, rRegL src) %{\n+  predicate(n->bottom_type()->isa_vectmask());\n+  match(Set dst (VectorLongToMask src));\n+  format %{ \"long_to_mask_evex $dst, $src\\t!\" %}\n+  ins_encode %{\n+    int mask_len = Matcher::vector_length(this);\n+    __ kmov($dst$$KRegister, $src$$Register);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n@@ -9501,0 +9604,1 @@\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":111,"deletions":7,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -13133,0 +13133,18 @@\n+instruct cmovLL_reg_LTGE_U(cmpOpU cmp, flagsReg_ulong_LTGE flags, eRegL dst, eRegL src) %{\n+  match(Set dst (CMoveL (Binary cmp flags) (Binary dst src)));\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge ));\n+  ins_cost(400);\n+  expand %{\n+    cmovLL_reg_LTGE(cmp, flags, dst, src);\n+  %}\n+%}\n+\n+instruct cmovLL_mem_LTGE_U(cmpOpU cmp, flagsReg_ulong_LTGE flags, eRegL dst, load_long_memory src) %{\n+  match(Set dst (CMoveL (Binary cmp flags) (Binary dst (LoadL src))));\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge ));\n+  ins_cost(500);\n+  expand %{\n+    cmovLL_mem_LTGE(cmp, flags, dst, src);\n+  %}\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright 2007, 2008, 2009, 2010, 2011 Red Hat, Inc.\n+ * Copyright (c) 2007, 2021, Red Hat, Inc. All rights reserved.\n@@ -119,2 +119,15 @@\n-  ShouldNotCallThis();\n-  return false;\n+  address sp = (address)_sp;\n+\n+  \/\/ consider stack guards when trying to determine \"safe\" stack pointers\n+  \/\/ sp must be within the usable part of the stack (not in guards)\n+  if (!thread->is_in_usable_stack(sp)) {\n+    return false;\n+  }\n+\n+  \/\/ an fp must be within the stack and above (but not equal) sp\n+  if (!thread->is_in_stack_range_excl((address)fp(), sp)) {\n+    return false;\n+  }\n+\n+  \/\/ All good.\n+  return true;\n@@ -124,2 +137,43 @@\n-  ShouldNotCallThis();\n-  return false;\n+  assert(is_interpreted_frame(), \"Not an interpreted frame\");\n+  \/\/ These are reasonable sanity checks\n+  if (fp() == 0 || (intptr_t(fp()) & (wordSize-1)) != 0) {\n+    return false;\n+  }\n+  if (sp() == 0 || (intptr_t(sp()) & (wordSize-1)) != 0) {\n+    return false;\n+  }\n+  \/\/ These are hacks to keep us out of trouble.\n+  \/\/ The problem with these is that they mask other problems\n+  if (fp() <= sp()) {        \/\/ this attempts to deal with unsigned comparison above\n+    return false;\n+  }\n+\n+  \/\/ do some validation of frame elements\n+  \/\/ first the method\n+\n+  Method* m = *interpreter_frame_method_addr();\n+\n+  \/\/ validate the method we'd find in this potential sender\n+  if (!Method::is_valid_method(m)) {\n+    return false;\n+  }\n+\n+  \/\/ validate bci\/bcp\n+  address bcp = interpreter_frame_bcp();\n+  if (m->validate_bci_from_bcp(bcp) < 0) {\n+    return false;\n+  }\n+\n+  \/\/ validate ConstantPoolCache*\n+  ConstantPoolCache* cp = *interpreter_frame_cache_addr();\n+  if (MetaspaceObj::is_valid(cp) == false) {\n+    return false;\n+  }\n+\n+  \/\/ validate locals\n+  address locals = (address) *interpreter_frame_locals_addr();\n+  if (!thread->is_in_stack_range_incl(locals, (address)fp())) {\n+    return false;\n+  }\n+\n+  return true;\n","filename":"src\/hotspot\/cpu\/zero\/frame_zero.cpp","additions":59,"deletions":5,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -1031,1 +1031,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -679,0 +679,3 @@\n+  \/\/ Initial state is ALLOCATED but not INITIALIZED\n+  osthread->set_state(ALLOCATED);\n+\n@@ -780,1 +783,1 @@\n-  \/\/ Initial thread state is INITIALIZED, not SUSPENDED\n+  \/\/ Thread state now is INITIALIZED, not SUSPENDED\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1837,1 +1837,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright 2009, 2010 Red Hat, Inc.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Red Hat, Inc. All rights reserved.\n@@ -38,0 +38,37 @@\n+\n+bool JavaThread::pd_get_top_frame_for_signal_handler(frame* fr_addr,\n+                                         void* ucontext,\n+                                         bool isInJava) {\n+  if (has_last_Java_frame()) {\n+    *fr_addr = pd_last_frame();\n+    return true;\n+  }\n+\n+  if (isInJava) {\n+    \/\/ We know we are in Java, but there is no frame?\n+    \/\/ Try to find the top-most Java frame on Zero stack then.\n+    intptr_t* sp = zero_stack()->sp();\n+    ZeroFrame* zf = top_zero_frame();\n+    while (zf != NULL) {\n+      if (zf->is_interpreter_frame()) {\n+        interpreterState istate = zf->as_interpreter_frame()->interpreter_state();\n+        if (istate->self_link() == istate) {\n+          \/\/ Valid interpreter state found, this is our frame.\n+          *fr_addr = frame(zf, sp);\n+          return true;\n+        }\n+      }\n+      sp = ((intptr_t *) zf) + 1;\n+      zf = zf->next();\n+    }\n+  }\n+\n+  \/\/ No dice.\n+  return false;\n+}\n+\n+bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr,\n+                                    void* ucontext,\n+                                    bool isInJava) {\n+  return pd_get_top_frame_for_signal_handler(fr_addr, ucontext, isInJava);\n+}\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/thread_linux_zero.cpp","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright 2007, 2008, 2009, 2010 Red Hat, Inc.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Red Hat, Inc. All rights reserved.\n@@ -99,4 +99,1 @@\n-                                           bool isInJava) {\n-    ShouldNotCallThis();\n-    return false; \/\/ silence compile warning\n-  }\n+                                           bool isInJava);\n@@ -106,4 +103,1 @@\n-                                      bool isInJava) {\n-    ShouldNotCallThis();\n-    return false; \/\/ silence compile warning\n-  }\n+                                      bool isInJava);\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/thread_linux_zero.hpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -4237,2 +4237,2 @@\n-    \"VectorMaskWrapper\", \"VectorMaskCmp\", \"VectorReinterpret\",\"LoadVectorMasked\",\"StoreVectorMasked\",\n-    \"FmaVD\", \"FmaVF\",\"PopCountVI\",\n+    \"VectorMaskWrapper\",\"VectorMaskCmp\",\"VectorReinterpret\",\"LoadVectorMasked\",\"StoreVectorMasked\",\n+    \"FmaVD\",\"FmaVF\",\"PopCountVI\",\"VectorLongToMask\",\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -234,1 +234,0 @@\n-\n@@ -236,1 +235,0 @@\n-\n@@ -249,3 +247,7 @@\n-  output()->print(\"successors \");\n-  for (i = 0; i < block->number_of_sux(); i++) {\n-    output()->print(\"\\\"B%d\\\" \", block->sux_at(i)->block_id());\n+  if (block->end() != NULL) {\n+    output()->print(\"successors \");\n+    for (i = 0; i < block->number_of_sux(); i++) {\n+      output()->print(\"\\\"B%d\\\" \", block->sux_at(i)->block_id());\n+    }\n+  } else {\n+    output()->print(\"(block has no end, cannot print successors)\");\n","filename":"src\/hotspot\/share\/c1\/c1_CFGPrinter.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-\/\/  slots and registers to their frame location\n+\/\/  slots and registers) to their frame location\n","filename":"src\/hotspot\/share\/c1\/c1_FrameMap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+  GrowableArray<BlockList> _bci2block_successors; \/\/ Mapping bcis to their blocks successors while we dont have a blockend\n@@ -92,0 +93,5 @@\n+  int number_of_successors(BlockBegin* block);\n+  BlockBegin* successor_at(BlockBegin* block, int i);\n+  void add_successor(BlockBegin* block, BlockBegin* sux);\n+  bool is_successor(BlockBegin* block, BlockBegin* sux);\n+\n@@ -108,0 +114,1 @@\n+ , _bci2block_successors(scope->method()->code_size())\n@@ -121,0 +128,2 @@\n+  \/\/ _bci2block still contains blocks with _end == null and > 0 sux in _bci2block_successors.\n+\n@@ -163,0 +172,1 @@\n+    _bci2block_successors.at_put_grow(cur_bci, BlockList());\n@@ -173,1 +183,1 @@\n-    predecessor->add_successor(block);\n+    add_successor(predecessor, block);\n@@ -204,2 +214,2 @@\n-      if (!current->is_successor(entry)) {\n-        current->add_successor(entry);\n+      if(!is_successor(current, entry)) {\n+        add_successor(current, entry);\n@@ -421,1 +431,1 @@\n-  for (int i = block->number_of_sux() - 1; i >= 0; i--) {\n+  for (int i = number_of_successors(block) - 1; i >= 0; i--) {\n@@ -423,1 +433,1 @@\n-    loop_state |= mark_loops(block->sux_at(i), in_subroutine);\n+    loop_state |= mark_loops(successor_at(block, i), in_subroutine);\n@@ -455,0 +465,22 @@\n+inline int BlockListBuilder::number_of_successors(BlockBegin* block)\n+{\n+  assert(_bci2block_successors.length() > block->bci(), \"sux must exist\");\n+  return _bci2block_successors.at(block->bci()).length();\n+}\n+\n+inline BlockBegin* BlockListBuilder::successor_at(BlockBegin* block, int i)\n+{\n+  assert(_bci2block_successors.length() > block->bci(), \"sux must exist\");\n+  return _bci2block_successors.at(block->bci()).at(i);\n+}\n+\n+inline void BlockListBuilder::add_successor(BlockBegin* block, BlockBegin* sux)\n+{\n+  assert(_bci2block_successors.length() > block->bci(), \"sux must exist\");\n+  _bci2block_successors.at(block->bci()).append(sux);\n+}\n+\n+inline bool BlockListBuilder::is_successor(BlockBegin* block, BlockBegin* sux) {\n+  assert(_bci2block_successors.length() > block->bci(), \"sux must exist\");\n+  return _bci2block_successors.at(block->bci()).contains(sux);\n+}\n@@ -480,1 +512,1 @@\n-    if (cur->number_of_sux() > 0) {\n+    if (number_of_successors(cur) > 0) {\n@@ -482,2 +514,2 @@\n-      for (int j = 0; j < cur->number_of_sux(); j++) {\n-        BlockBegin* sux = cur->sux_at(j);\n+      for (int j = 0; j < number_of_successors(cur); j++) {\n+        BlockBegin* sux = successor_at(cur, j);\n@@ -3062,1 +3094,1 @@\n-  \/\/ necesary if std_entry is also a backward branch target because\n+  \/\/ necessary if std_entry is also a backward branch target because\n@@ -3233,0 +3265,2 @@\n+  \/\/ End nulls still exist here\n+\n@@ -3336,0 +3370,21 @@\n+# ifdef ASSERT\n+  \/\/All blocks reachable from start_block have _end != NULL\n+  {\n+    BlockList processed;\n+    BlockList to_go;\n+    to_go.append(start_block);\n+    while(to_go.length() > 0) {\n+      BlockBegin* current = to_go.pop();\n+      assert(current != NULL, \"Should not happen.\");\n+      assert(current->end() != NULL, \"All blocks reachable from start_block should have end() != NULL.\");\n+      processed.append(current);\n+      for(int i = 0; i < current->number_of_sux(); i++) {\n+        BlockBegin* s = current->sux_at(i);\n+        if (!processed.contains(s)) {\n+          to_go.append(s);\n+        }\n+      }\n+    }\n+  }\n+#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":64,"deletions":9,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -1264,0 +1264,10 @@\n+class EndNotNullValidator : public BlockClosure {\n+ public:\n+  EndNotNullValidator(IR* hir) {\n+    hir->start()->iterate_postorder(this);\n+  }\n+\n+  void block_do(BlockBegin* block) {\n+    assert(block->end() != NULL, \"Expect block end to exist.\");\n+  }\n+};\n@@ -1366,0 +1376,1 @@\n+  EndNotNullValidator(this);\n","filename":"src\/hotspot\/share\/c1\/c1_IR.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -527,9 +527,3 @@\n-void BlockBegin::set_end(BlockEnd* end) {\n-  assert(end != NULL, \"should not reset block end to NULL\");\n-  if (end == _end) {\n-    return;\n-  }\n-  clear_end();\n-\n-  \/\/ Set the new end\n-  _end = end;\n+void BlockBegin::set_end(BlockEnd* new_end) { \/\/ Assumes that no predecessor of new_end still has it as its successor\n+  assert(new_end != NULL, \"Should not reset block new_end to NULL\");\n+  if (new_end == _end) return;\n@@ -537,6 +531,4 @@\n-  _successors.clear();\n-  \/\/ Now reset successors list based on BlockEnd\n-  for (int i = 0; i < end->number_of_sux(); i++) {\n-    BlockBegin* sux = end->sux_at(i);\n-    _successors.append(sux);\n-    sux->_predecessors.append(this);\n+  \/\/ Remove this block as predecessor of its current successors\n+  if (_end != NULL)\n+  for (int i = 0; i < number_of_sux(); i++) {\n+    sux_at(i)->remove_predecessor(this);\n@@ -544,3 +536,0 @@\n-  _end->set_begin(this);\n-}\n-\n@@ -548,6 +537,1 @@\n-void BlockBegin::clear_end() {\n-  \/\/ Must make the predecessors\/successors match up with the\n-  \/\/ BlockEnd's notion.\n-  if (_end != NULL) {\n-    \/\/ disconnect from the old end\n-    _end->set_begin(NULL);\n+  _end = new_end;\n@@ -555,5 +539,3 @@\n-    \/\/ disconnect this block from it's current successors\n-    for (int i = 0; i < _successors.length(); i++) {\n-      _successors.at(i)->remove_predecessor(this);\n-    }\n-    _end = NULL;\n+  \/\/ Add this block as predecessor of its new successors\n+  for (int i = 0; i < number_of_sux(); i++) {\n+    sux_at(i)->add_predecessor(this);\n@@ -578,1 +560,1 @@\n-      from->_successors.remove_at(s);\n+      from->end()->remove_sux_at(s);\n@@ -586,10 +568,0 @@\n-void BlockBegin::disconnect_from_graph() {\n-  \/\/ disconnect this block from all other blocks\n-  for (int p = 0; p < number_of_preds(); p++) {\n-    pred_at(p)->remove_successor(this);\n-  }\n-  for (int s = 0; s < number_of_sux(); s++) {\n-    sux_at(s)->remove_predecessor(this);\n-  }\n-}\n-\n@@ -672,8 +644,0 @@\n-void BlockBegin::remove_successor(BlockBegin* pred) {\n-  int idx;\n-  while ((idx = _successors.find(pred)) >= 0) {\n-    _successors.remove_at(idx);\n-  }\n-}\n-\n-\n@@ -956,15 +920,0 @@\n-void BlockEnd::set_begin(BlockBegin* begin) {\n-  BlockList* sux = NULL;\n-  if (begin != NULL) {\n-    sux = begin->successors();\n-  } else if (this->begin() != NULL) {\n-    \/\/ copy our sux list\n-    BlockList* sux = new BlockList(this->begin()->number_of_sux());\n-    for (int i = 0; i < this->begin()->number_of_sux(); i++) {\n-      sux->append(this->begin()->sux_at(i));\n-    }\n-  }\n-  _sux = sux;\n-}\n-\n-\n@@ -975,1 +924,0 @@\n-\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.cpp","additions":12,"deletions":64,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -1598,1 +1598,0 @@\n-  BlockList   _successors;                       \/\/ the successors of this block\n@@ -1652,1 +1651,0 @@\n-  , _successors(2)\n@@ -1679,1 +1677,0 @@\n-  BlockList* successors()                        { return &_successors; }\n@@ -1707,3 +1704,1 @@\n-  void set_end(BlockEnd* end);\n-  void clear_end();\n-  void disconnect_from_graph();\n+  void set_end(BlockEnd* new_end);\n@@ -1732,4 +1727,0 @@\n-  void add_successor(BlockBegin* sux);\n-  void remove_successor(BlockBegin* pred);\n-  bool is_successor(BlockBegin* sux) const       { return _successors.contains(sux); }\n-\n@@ -1795,0 +1786,1 @@\n+\n@@ -1828,1 +1820,2 @@\n-  void set_begin(BlockBegin* begin);\n+  inline void remove_sux_at(int i) { _sux->remove_at(i);}\n+  inline int find_sux(BlockBegin* sux) {return _sux->find(sux);}\n@@ -1834,2 +1827,0 @@\n-  BlockBegin** addr_sux_at(int i) const          { return _sux->adr_at(i); }\n-  int sux_index(BlockBegin* sux) const           { return _sux->find(sux); }\n@@ -2442,3 +2433,2 @@\n-inline int         BlockBegin::number_of_sux() const            { assert(_end == NULL || _end->number_of_sux() == _successors.length(), \"mismatch\"); return _successors.length(); }\n-inline BlockBegin* BlockBegin::sux_at(int i) const              { assert(_end == NULL || _end->sux_at(i) == _successors.at(i), \"mismatch\");          return _successors.at(i); }\n-inline void        BlockBegin::add_successor(BlockBegin* sux)   { assert(_end == NULL, \"Would create mismatch with successors of BlockEnd\");         _successors.append(sux); }\n+inline int         BlockBegin::number_of_sux() const            { assert(_end != NULL, \"need end\"); return _end->number_of_sux(); }\n+inline BlockBegin* BlockBegin::sux_at(int i) const              { assert(_end != NULL , \"need end\"); return _end->sux_at(i); }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -615,8 +615,1 @@\n-  \/\/ print predecessors and successors\n-  if (x->successors()->length() > 0) {\n-    output()->print(\" sux:\");\n-    for (int i = 0; i < x->successors()->length(); i ++) {\n-      output()->print(\" B%d\", x->successors()->at(i)->block_id());\n-    }\n-  }\n-\n+  \/\/ print predecessors\n","filename":"src\/hotspot\/share\/c1\/c1_InstructionPrinter.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1583,1 +1583,1 @@\n-  if (x->number_of_sux() > 0) {\n+  if (end != NULL && x->number_of_sux() > 0) {\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1831,1 +1831,0 @@\n-  CodeEmitInfo* _info;\n@@ -1834,1 +1833,1 @@\n-    : LIR_Op(lir_load_klass, result, NULL)\n+    : LIR_Op(lir_load_klass, result, info)\n@@ -1836,1 +1835,1 @@\n-    , _info(info) {}\n+    {}\n@@ -1839,1 +1838,0 @@\n-  CodeEmitInfo* info() const { return _info; }\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -623,1 +623,1 @@\n-  CodeStub* slow_path = new MonitorExitStub(lock, UseFastLocking, monitor_no);\n+  CodeStub* slow_path = new MonitorExitStub(lock, !UseHeavyMonitors, monitor_no);\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -315,0 +315,13 @@\n+void disconnect_from_graph(BlockBegin* block) {\n+  for (int p = 0; p < block->number_of_preds(); p++) {\n+    BlockBegin* pred = block->pred_at(p);\n+    int idx;\n+    while ((idx = pred->end()->find_sux(block)) >= 0) {\n+      pred->end()->remove_sux_at(idx);\n+    }\n+  }\n+  for (int s = 0; s < block->number_of_sux(); s++) {\n+    block->sux_at(s)->remove_predecessor(block);\n+  }\n+}\n+\n@@ -372,2 +385,2 @@\n-      assert(sux_value == end_state->local_at(index), \"locals not equal\");\n-    }\n+        assert(sux_value == end_state->local_at(index), \"locals not equal\");\n+      }\n@@ -383,1 +396,3 @@\n-    sux->disconnect_from_graph();\n+\n+    \/\/ disconnect this block from all other blocks\n+    disconnect_from_graph(sux);\n@@ -385,0 +400,2 @@\n+\n+    \/\/ TODO Should this be done in set_end universally?\n","filename":"src\/hotspot\/share\/c1\/c1_Optimizer.cpp","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -739,1 +739,1 @@\n-  if (!UseFastLocking) {\n+  if (UseHeavyMonitors) {\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -508,1 +508,1 @@\n-  \/\/ method parameters are not linked in instructions list, so process them separateley\n+  \/\/ method parameters are not linked in instructions list, so process them separately\n","filename":"src\/hotspot\/share\/c1\/c1_ValueMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,3 +245,0 @@\n-  develop(bool, UseFastLocking, true,                                       \\\n-          \"Use fast inlined locking code\")                                  \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/c1\/c1_globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-    guarantee(offset <= MAX_SHARED_DELTA, \"must be 32-bit offset\");\n+    guarantee(offset <= MAX_SHARED_DELTA, \"must be 32-bit offset \" INTPTR_FORMAT, offset);\n@@ -322,1 +322,1 @@\n-    guarantee(offset <= MAX_SHARED_DELTA, \"must be 32-bit offset\");\n+    guarantee(offset <= MAX_SHARED_DELTA, \"must be 32-bit offset \" INTPTR_FORMAT, offset);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -357,0 +357,3 @@\n+  ~VM_PopulateDynamicDumpSharedSpace() {\n+    LambdaFormInvokers::cleanup_regenerated_classes();\n+  }\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,1 +124,0 @@\n-        ResourceMark rm;\n@@ -1045,1 +1044,6 @@\n-\/\/ a utility class for checking file header\n+\/\/ A utility class for reading\/validating the GenericCDSFileMapHeader portion of\n+\/\/ a CDS archive's header. The file header of all CDS archives with versions from\n+\/\/ CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION (12) are guaranteed to always start\n+\/\/ with GenericCDSFileMapHeader. This makes it possible to read important information\n+\/\/ from a CDS archive created by a different version of HotSpot, so that we can\n+\/\/ automatically regenerate the archive as necessary (JDK-8261455).\n@@ -1048,1 +1052,3 @@\n-  GenericCDSFileMapHeader _header;\n+  bool _is_valid;\n+  GenericCDSFileMapHeader* _header;\n+  const char* _base_archive_name;\n@@ -1051,3 +1057,1 @@\n-  FileHeaderHelper() {\n-    _fd = -1;\n-  }\n+  FileHeaderHelper() : _fd(-1), _is_valid(false), _header(nullptr), _base_archive_name(nullptr) {}\n@@ -1062,0 +1066,1 @@\n+    log_info(cds)(\"Opening shared archive: %s\", archive_name);\n@@ -1064,0 +1069,1 @@\n+      FileMapInfo::fail_continue(\"Specified shared archive not found (%s)\", archive_name);\n@@ -1072,0 +1078,4 @@\n+\n+\n+    \/\/ First read the generic header so we know the exact size of the actual header.\n+    GenericCDSFileMapHeader gen_header;\n@@ -1074,1 +1084,29 @@\n-    size_t n = os::read(fd, (void*)&_header, (unsigned int)size);\n+    size_t n = os::read(fd, (void*)&gen_header, (unsigned int)size);\n+    if (n != size) {\n+      FileMapInfo::fail_continue(\"Unable to read generic CDS file map header from shared archive\");\n+      return false;\n+    }\n+\n+    if (gen_header._magic != CDS_ARCHIVE_MAGIC &&\n+        gen_header._magic != CDS_DYNAMIC_ARCHIVE_MAGIC) {\n+      FileMapInfo::fail_continue(\"The shared archive file has a bad magic number: %#x\", gen_header._magic);\n+      return false;\n+    }\n+\n+    if (gen_header._version < CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION) {\n+      FileMapInfo::fail_continue(\"Cannot handle shared archive file version %d. Must be at least %d\",\n+                                 gen_header._version, CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION);\n+      return false;\n+    }\n+\n+    size_t filelen = os::lseek(fd, 0, SEEK_END);\n+    if (gen_header._header_size >= filelen) {\n+      FileMapInfo::fail_continue(\"Archive file header larger than archive file\");\n+      return false;\n+    }\n+\n+    \/\/ Read the actual header and perform more checks\n+    size = gen_header._header_size;\n+    _header = (GenericCDSFileMapHeader*)NEW_C_HEAP_ARRAY(char, size, mtInternal);\n+    lseek(fd, 0, SEEK_SET);\n+    n = os::read(fd, (void*)_header, (unsigned int)size);\n@@ -1076,1 +1114,1 @@\n-      vm_exit_during_initialization(\"Unable to read generic CDS file map header from shared archive\");\n+      FileMapInfo::fail_continue(\"Unable to read actual CDS file map header from shared archive\");\n@@ -1079,0 +1117,11 @@\n+\n+    if (!check_crc()) {\n+      return false;\n+    }\n+\n+    if (!check_and_init_base_archive_name()) {\n+      return false;\n+    }\n+\n+    \/\/ All fields in the GenericCDSFileMapHeader has been validated.\n+    _is_valid = true;\n@@ -1083,14 +1132,20 @@\n-    return &_header;\n-  }\n-\n-  char* read_base_archive_name() {\n-    assert(_fd != -1, \"Archive should be open\");\n-    size_t name_size = _header._base_archive_name_size;\n-    assert(name_size != 0, \"For non-default base archive, name size should be non-zero!\");\n-    char* base_name = NEW_C_HEAP_ARRAY(char, name_size, mtInternal);\n-    lseek(_fd, _header._base_archive_name_offset, SEEK_SET); \/\/ position to correct offset.\n-    size_t n = os::read(_fd, base_name, (unsigned int)name_size);\n-    if (n != name_size) {\n-      log_info(cds)(\"Unable to read base archive name from archive\");\n-      FREE_C_HEAP_ARRAY(char, base_name);\n-      return nullptr;\n+    assert(_header != nullptr && _is_valid, \"must be a valid archive file\");\n+    return _header;\n+  }\n+\n+  const char* base_archive_name() {\n+    assert(_header != nullptr && _is_valid, \"must be a valid archive file\");\n+    return _base_archive_name;\n+  }\n+\n+ private:\n+  bool check_crc() {\n+    if (VerifySharedSpaces) {\n+      FileMapHeader* header = (FileMapHeader*)_header;\n+      int actual_crc = header->compute_crc();\n+      if (actual_crc != header->crc()) {\n+        log_info(cds)(\"_crc expected: %d\", header->crc());\n+        log_info(cds)(\"       actual: %d\", actual_crc);\n+        FileMapInfo::fail_continue(\"Header checksum verification failed.\");\n+        return false;\n+      }\n@@ -1098,4 +1153,12 @@\n-    if (base_name[name_size - 1] != '\\0' || strlen(base_name) != name_size - 1) {\n-      log_info(cds)(\"Base archive name is damaged\");\n-      FREE_C_HEAP_ARRAY(char, base_name);\n-      return nullptr;\n+    return true;\n+  }\n+\n+  bool check_and_init_base_archive_name() {\n+    unsigned int name_offset = _header->_base_archive_name_offset;\n+    unsigned int name_size   = _header->_base_archive_name_size;\n+    unsigned int header_size = _header->_header_size;\n+\n+    if (name_offset + name_size < name_offset) {\n+      FileMapInfo::fail_continue(\"base_archive_name offset\/size overflow: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n+                                 name_offset, name_size);\n+      return false;\n@@ -1103,4 +1166,36 @@\n-    if (!os::file_exists(base_name)) {\n-      log_info(cds)(\"Base archive %s does not exist\", base_name);\n-      FREE_C_HEAP_ARRAY(char, base_name);\n-      return nullptr;\n+    if (_header->_magic == CDS_ARCHIVE_MAGIC) {\n+      if (name_offset != 0) {\n+        FileMapInfo::fail_continue(\"static shared archive must have zero _base_archive_name_offset\");\n+        return false;\n+      }\n+      if (name_size != 0) {\n+        FileMapInfo::fail_continue(\"static shared archive must have zero _base_archive_name_size\");\n+        return false;\n+      }\n+    } else {\n+      assert(_header->_magic == CDS_DYNAMIC_ARCHIVE_MAGIC, \"must be\");\n+      if ((name_size == 0 && name_offset != 0) ||\n+          (name_size != 0 && name_offset == 0)) {\n+        \/\/ If either is zero, both must be zero. This indicates that we are using the default base archive.\n+        FileMapInfo::fail_continue(\"Invalid base_archive_name offset\/size: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n+                                   name_offset, name_size);\n+        return false;\n+      }\n+      if (name_size > 0) {\n+        if (name_offset + name_size > header_size) {\n+          FileMapInfo::fail_continue(\"Invalid base_archive_name offset\/size (out of range): \"\n+                                     UINT32_FORMAT \" + \" UINT32_FORMAT \" > \" UINT32_FORMAT ,\n+                                     name_offset, name_size, header_size);\n+          return false;\n+        }\n+        const char* name = ((const char*)_header) + _header->_base_archive_name_offset;\n+        if (name[name_size - 1] != '\\0' || strlen(name) != name_size - 1) {\n+          FileMapInfo::fail_continue(\"Base archive name is damaged\");\n+          return false;\n+        }\n+        if (!os::file_exists(name)) {\n+          FileMapInfo::fail_continue(\"Base archive %s does not exist\", name);\n+          return false;\n+        }\n+        _base_archive_name = name;\n+      }\n@@ -1108,1 +1203,1 @@\n-    return base_name;\n+    return true;\n@@ -1115,3 +1210,1 @@\n-    \/\/ do not vm_exit_during_initialization here because Arguments::init_shared_archive_paths()\n-    \/\/ requires a shared archive name. The open_for_read() function will log a message regarding\n-    \/\/ failure in opening a shared archive.\n+    \/\/ Any errors are reported by fail_continue().\n@@ -1124,6 +1217,1 @@\n-      vm_exit_during_initialization(\"Not a base shared archive\", archive_name);\n-      return false;\n-    }\n-    if (header->_base_archive_name_offset != 0) {\n-      log_info(cds)(\"_base_archive_name_offset should be 0\");\n-      log_info(cds)(\"_base_archive_name_offset = \" UINT32_FORMAT, header->_base_archive_name_offset);\n+      fail_continue(\"Not a base shared archive: %s\", archive_name);\n@@ -1134,15 +1222,1 @@\n-      vm_exit_during_initialization(\"Not a top shared archive\", archive_name);\n-      return false;\n-    }\n-    unsigned int name_size = header->_base_archive_name_size;\n-    unsigned int name_offset = header->_base_archive_name_offset;\n-    unsigned int header_size = header->_header_size;\n-    if (name_offset + name_size != header_size) {\n-      log_info(cds)(\"_header_size should be equal to _base_archive_name_offset plus _base_archive_name_size\");\n-      log_info(cds)(\"  _base_archive_name_size   = \" UINT32_FORMAT, name_size);\n-      log_info(cds)(\"  _base_archive_name_offset = \" UINT32_FORMAT, name_offset);\n-      log_info(cds)(\"  _header_size              = \" UINT32_FORMAT, header_size);\n-      return false;\n-    }\n-    char* base_name = file_helper.read_base_archive_name();\n-    if (base_name == nullptr) {\n+      fail_continue(\"Not a top shared archive: %s\", archive_name);\n@@ -1151,1 +1225,0 @@\n-    FREE_C_HEAP_ARRAY(char, base_name);\n@@ -1156,0 +1229,7 @@\n+\/\/ Return value:\n+\/\/ false:\n+\/\/      <archive_name> is not a valid archive. *base_archive_name is set to null.\n+\/\/ true && (*base_archive_name) == NULL:\n+\/\/      <archive_name> is a valid static archive.\n+\/\/ true && (*base_archive_name) != NULL:\n+\/\/      <archive_name> is a valid dynamic archive.\n@@ -1159,0 +1239,2 @@\n+  *base_archive_name = NULL;\n+\n@@ -1164,2 +1246,2 @@\n-    \/\/ Not a dynamic header, no need to proceed further.\n-    return false;\n+    assert(header->_magic == CDS_ARCHIVE_MAGIC, \"must be\");\n+    return true;\n@@ -1168,7 +1250,2 @@\n-  if ((header->_base_archive_name_size == 0 && header->_base_archive_name_offset != 0) ||\n-      (header->_base_archive_name_size != 0 && header->_base_archive_name_offset == 0)) {\n-    fail_continue(\"Default base archive not set correct\");\n-    return false;\n-  }\n-  if (header->_base_archive_name_size == 0 &&\n-      header->_base_archive_name_offset == 0) {\n+  const char* base = file_helper.base_archive_name();\n+  if (base == nullptr) {\n@@ -1177,5 +1254,1 @@\n-    \/\/ read the base archive name\n-    *base_archive_name = file_helper.read_base_archive_name();\n-    if (*base_archive_name == nullptr) {\n-      return false;\n-    }\n+    *base_archive_name = os::strdup_check_oom(base);\n@@ -1183,0 +1256,1 @@\n+\n@@ -1250,10 +1324,0 @@\n-  if (VerifySharedSpaces) {\n-    int expected_crc = header()->compute_crc();\n-    if (expected_crc != header()->crc()) {\n-      log_info(cds)(\"_crc expected: %d\", expected_crc);\n-      log_info(cds)(\"       actual: %d\", header()->crc());\n-      FileMapInfo::fail_continue(\"Header checksum verification failed.\");\n-      return false;\n-    }\n-  }\n-\n@@ -1297,1 +1361,1 @@\n-      fail_continue(\"Specified shared archive not found (%s).\", _full_path);\n+      fail_continue(\"Specified shared archive not found (%s)\", _full_path);\n@@ -1299,1 +1363,1 @@\n-      fail_continue(\"Failed to open shared archive file (%s).\",\n+      fail_continue(\"Failed to open shared archive file (%s)\",\n@@ -2483,0 +2547,5 @@\n+  if (i == 0) {\n+    \/\/ index 0 corresponds to the ClassPathImageEntry which is a globally shared object\n+    \/\/ and should never be deleted.\n+    return ClassLoader::get_jrt_entry();\n+  }\n@@ -2485,3 +2554,9 @@\n-    if (i == 0) {\n-      ent = ClassLoader::get_jrt_entry();\n-      assert(ent != NULL, \"must be\");\n+    SharedClassPathEntry* scpe = shared_path(i);\n+    assert(scpe->is_jar(), \"must be\"); \/\/ other types of scpe will not produce archived classes\n+\n+    const char* path = scpe->name();\n+    struct stat st;\n+    if (os::stat(path, &st) != 0) {\n+      char *msg = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, strlen(path) + 128);\n+      jio_snprintf(msg, strlen(path) + 127, \"error in finding JAR file %s\", path);\n+      THROW_MSG_(vmSymbols::java_io_IOException(), msg, NULL);\n@@ -2489,6 +2564,2 @@\n-      SharedClassPathEntry* scpe = shared_path(i);\n-      assert(scpe->is_jar(), \"must be\"); \/\/ other types of scpe will not produce archived classes\n-\n-      const char* path = scpe->name();\n-      struct stat st;\n-      if (os::stat(path, &st) != 0) {\n+      ent = ClassLoader::create_class_path_entry(THREAD, path, &st, false, false);\n+      if (ent == NULL) {\n@@ -2496,1 +2567,1 @@\n-        jio_snprintf(msg, strlen(path) + 127, \"error in finding JAR file %s\", path);\n+        jio_snprintf(msg, strlen(path) + 127, \"error in opening JAR file %s\", path);\n@@ -2498,7 +2569,0 @@\n-      } else {\n-        ent = ClassLoader::create_class_path_entry(THREAD, path, &st, false, false);\n-        if (ent == NULL) {\n-          char *msg = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, strlen(path) + 128);\n-          jio_snprintf(msg, strlen(path) + 127, \"error in opening JAR file %s\", path);\n-          THROW_MSG_(vmSymbols::java_io_IOException(), msg, NULL);\n-        }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":163,"deletions":99,"binary":false,"changes":262,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-#include \"oops\/klass.hpp\"\n+#include \"oops\/klass.inline.hpp\"\n@@ -46,0 +46,1 @@\n+#include \"oops\/oopHandle.inline.hpp\"\n@@ -53,0 +54,1 @@\n+GrowableArrayCHeap<OopHandle, mtClassShared>* LambdaFormInvokers::_regenerated_mirrors = nullptr;\n@@ -84,0 +86,19 @@\n+\/\/ The regenerated Klass is not added to any class loader, so we need\n+\/\/ to keep its java_mirror alive to avoid class unloading.\n+void LambdaFormInvokers::add_regenerated_class(oop regenerated_class) {\n+  if (_regenerated_mirrors == nullptr) {\n+    _regenerated_mirrors = new GrowableArrayCHeap<OopHandle, mtClassShared>(150);\n+  }\n+  _regenerated_mirrors->append(OopHandle(Universe::vm_global(), regenerated_class));\n+}\n+\n+void LambdaFormInvokers::cleanup_regenerated_classes() {\n+  if (_regenerated_mirrors == nullptr) return;\n+\n+  for (int i = 0; i < _regenerated_mirrors->length(); i++) {\n+    _regenerated_mirrors->at(i).release(Universe::vm_global());\n+  }\n+  delete _regenerated_mirrors;\n+  _regenerated_mirrors = nullptr;\n+}\n+\n@@ -158,1 +179,1 @@\n-    reload_class(class_name, st, CHECK);\n+    regenerate_class(class_name, st, CHECK);\n@@ -162,2 +183,1 @@\n-\/\/ class_handle - the class name, bytes_handle - the class bytes\n-void LambdaFormInvokers::reload_class(char* name, ClassFileStream& st, TRAPS) {\n+void LambdaFormInvokers::regenerate_class(char* name, ClassFileStream& st, TRAPS) {\n@@ -183,0 +203,3 @@\n+  assert(result->java_mirror() != nullptr, \"must be\");\n+  add_regenerated_class(result->java_mirror());\n+\n@@ -194,1 +217,1 @@\n-  log_info(cds, lambda)(\"Replaced class %s, old: \" INTPTR_FORMAT \" new: \" INTPTR_FORMAT,\n+  log_info(cds, lambda)(\"Regenerated class %s, old: \" INTPTR_FORMAT \" new: \" INTPTR_FORMAT,\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"oops\/oopHandle.hpp\"\n@@ -40,1 +41,3 @@\n-  static void reload_class(char* name, ClassFileStream& st, TRAPS);\n+  static GrowableArrayCHeap<OopHandle, mtClassShared>* _regenerated_mirrors;\n+  static void regenerate_class(char* name, ClassFileStream& st, TRAPS);\n+  static void add_regenerated_class(oop regenerated_class);\n@@ -48,0 +51,1 @@\n+  static void cleanup_regenerated_classes();\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -142,0 +142,2 @@\n+#define JAVA_19_VERSION                   63\n+\n@@ -2838,1 +2840,2 @@\n-  if (name == vmSymbols::finalize_method_name() &&\n+  if (InstanceKlass::is_finalization_enabled() &&\n+      name == vmSymbols::finalize_method_name() &&\n@@ -4174,1 +4177,2 @@\n-  if (m != NULL && !m->is_empty_method()) {\n+  if (InstanceKlass::is_finalization_enabled() &&\n+      (m != NULL) && !m->is_empty_method()) {\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -872,2 +872,2 @@\n-  do_intrinsic(_VectorBroadcastCoerced, jdk_internal_vm_vector_VectorSupport, vector_broadcast_coerced_name, vector_broadcast_coerced_sig, F_S)\\\n-   do_signature(vector_broadcast_coerced_sig, \"(Ljava\/lang\/Class;\"                                                                             \\\n+  do_intrinsic(_VectorFromBitsCoerced, jdk_internal_vm_vector_VectorSupport, vector_frombits_coerced_name, vector_frombits_coerced_sig, F_S)   \\\n+   do_signature(vector_frombits_coerced_sig, \"(Ljava\/lang\/Class;\"                                                                              \\\n@@ -877,0 +877,1 @@\n+                                               \"I\"                                                                                             \\\n@@ -878,1 +879,1 @@\n-                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)\"                                    \\\n+                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$FromBitsCoercedOperation;)\"                              \\\n@@ -880,1 +881,1 @@\n-   do_name(vector_broadcast_coerced_name, \"broadcastCoerced\")                                                                                  \\\n+   do_name(vector_frombits_coerced_name, \"fromBitsCoerced\")                                                                                    \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -445,1 +445,1 @@\n-  Node* card_offset = __ URShiftX( cast, __ ConI(CardTable::card_shift) );\n+  Node* card_offset = __ URShiftX( cast, __ ConI(CardTable::card_shift()) );\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-    HeapWord* aligned_top = align_up(top, BOTConstants::N_bytes);\n+    HeapWord* aligned_top = align_up(top, BOTConstants::card_size());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-    uint max_cards_in_inline_ptr = G1CardSetConfiguration::max_cards_in_inline_ptr(HeapRegion::LogOfHRGrainBytes - CardTable::card_shift);\n+    uint max_cards_in_inline_ptr = G1CardSetConfiguration::max_cards_in_inline_ptr(HeapRegion::LogOfHRGrainBytes - CardTable::card_shift());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  return (delta & right_n_bits((int)BOTConstants::LogN_words)) == (size_t)NoBits;\n+  return (delta & right_n_bits((int)BOTConstants::log_card_size_in_words())) == (size_t)NoBits;\n@@ -60,1 +60,1 @@\n-  assert((index) < (_reserved.word_size() >> BOTConstants::LogN_words),\n+  assert((index) < (_reserved.word_size() >> BOTConstants::log_card_size_in_words()),\n@@ -62,1 +62,1 @@\n-         msg, (index), (_reserved.word_size() >> BOTConstants::LogN_words));\n+         msg, (index), (_reserved.word_size() >> BOTConstants::log_card_size_in_words()));\n@@ -78,1 +78,0 @@\n-  DEBUG_ONLY(_object_can_span(false) COMMA)\n@@ -137,1 +136,1 @@\n-  assert(end ==_bot->address_for_index(end_card)+BOTConstants::N_words, \"Precondition\");\n+  assert(end ==_bot->address_for_index(end_card)+BOTConstants::card_size_in_words(), \"Precondition\");\n@@ -147,1 +146,1 @@\n-  assert(_bot->offset_array(start_card-1) <= BOTConstants::N_words,\n+  assert(_bot->offset_array(start_card-1) <= BOTConstants::card_size_in_words(),\n@@ -156,1 +155,1 @@\n-    offset = BOTConstants::N_words + i;\n+    offset = BOTConstants::card_size_in_words() + i;\n@@ -177,1 +176,1 @@\n-  guarantee(_bot->offset_array(start_card) == BOTConstants::N_words, \"Wrong value in second card\");\n+  guarantee(_bot->offset_array(start_card) == BOTConstants::card_size_in_words(), \"Wrong value in second card\");\n@@ -181,1 +180,1 @@\n-      guarantee(entry > BOTConstants::N_words,\n+      guarantee(entry > BOTConstants::card_size_in_words(),\n@@ -186,1 +185,1 @@\n-                (uint)entry, (uint)_bot->offset_array(c), BOTConstants::N_words);\n+                (uint)entry, (uint)_bot->offset_array(c), BOTConstants::card_size_in_words());\n@@ -199,1 +198,1 @@\n-      guarantee(_bot->offset_array(landing_card) <= BOTConstants::N_words,\n+      guarantee(_bot->offset_array(landing_card) <= BOTConstants::card_size_in_words(),\n@@ -202,1 +201,1 @@\n-                (uint)_bot->offset_array(landing_card), (uint)BOTConstants::N_words);\n+                (uint)_bot->offset_array(landing_card), (uint)BOTConstants::card_size_in_words());\n@@ -227,1 +226,1 @@\n-  assert(pointer_delta(threshold, blk_start) <= BOTConstants::N_words,\n+  assert(pointer_delta(threshold, blk_start) <= BOTConstants::card_size_in_words(),\n@@ -233,1 +232,1 @@\n-  assert(threshold == _bot->_reserved.start() + index*BOTConstants::N_words,\n+  assert(threshold == _bot->_reserved.start() + index*BOTConstants::card_size_in_words(),\n@@ -253,1 +252,1 @@\n-    HeapWord* rem_end = _bot->address_for_index(end_index) + BOTConstants::N_words;\n+    HeapWord* rem_end = _bot->address_for_index(end_index) + BOTConstants::card_size_in_words();\n@@ -260,1 +259,1 @@\n-  threshold = _bot->address_for_index(end_index) + BOTConstants::N_words;\n+  threshold = _bot->address_for_index(end_index) + BOTConstants::card_size_in_words();\n@@ -271,1 +270,1 @@\n-         (_bot->offset_array(orig_index) > 0 && _bot->offset_array(orig_index) <= BOTConstants::N_words),\n+         (_bot->offset_array(orig_index) > 0 && _bot->offset_array(orig_index) <= BOTConstants::card_size_in_words()),\n@@ -281,1 +280,1 @@\n-             (u_char) (BOTConstants::N_words+BOTConstants::N_powers-1),\n+             (u_char) (BOTConstants::card_size_in_words()+BOTConstants::N_powers-1),\n@@ -286,1 +285,1 @@\n-           (uint) (BOTConstants::N_words+BOTConstants::N_powers-1));\n+           (uint) (BOTConstants::card_size_in_words() + BOTConstants::N_powers - 1));\n@@ -300,1 +299,1 @@\n-    if (entry < BOTConstants::N_words) {\n+    if (entry < BOTConstants::card_size_in_words()) {\n@@ -334,6 +333,0 @@\n-#ifdef ASSERT\n-void G1BlockOffsetTablePart::set_object_can_span(bool can_span) {\n-  _object_can_span = can_span;\n-}\n-#endif\n-\n@@ -364,1 +357,1 @@\n-  _next_offset_threshold = _hr->bottom() + BOTConstants::N_words;\n+  _next_offset_threshold = _hr->bottom() + BOTConstants::card_size_in_words();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":20,"deletions":27,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    assert(offset <= BOTConstants::N_words,\n+    assert(offset <= BOTConstants::card_size_in_words(),\n@@ -60,1 +60,1 @@\n-           msg, offset, BOTConstants::N_words);\n+           msg, offset, BOTConstants::card_size_in_words());\n@@ -83,1 +83,1 @@\n-    size_t number_of_slots = (mem_region_words \/ BOTConstants::N_words);\n+    size_t number_of_slots = (mem_region_words \/ BOTConstants::card_size_in_words());\n@@ -89,1 +89,1 @@\n-    return BOTConstants::N_bytes;\n+    return BOTConstants::card_size();\n@@ -105,1 +105,1 @@\n-    return _reserved.start() + (index << BOTConstants::LogN_words);\n+    return _reserved.start() + (index << BOTConstants::log_card_size_in_words());\n@@ -117,3 +117,0 @@\n-  \/\/ Indicates if an object can span into this G1BlockOffsetTablePart.\n-  debug_only(bool _object_can_span;)\n-\n@@ -215,1 +212,0 @@\n-  void set_object_can_span(bool can_span) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  HeapWord* threshold = card_boundary + BOTConstants::N_words;\n+  HeapWord* threshold = card_boundary + BOTConstants::card_size_in_words();\n@@ -87,1 +87,1 @@\n-  return pointer_delta((char*)p, _reserved.start(), sizeof(char)) >> BOTConstants::LogN;\n+  return pointer_delta((char*)p, _reserved.start(), sizeof(char)) >> BOTConstants::log_card_size();\n@@ -116,3 +116,8 @@\n-  assert(_object_can_span || _bot->offset_array(_bot->index_for(_hr->bottom())) == 0,\n-         \"Object crossed region boundary, found offset %u instead of 0\",\n-         (uint) _bot->offset_array(_bot->index_for(_hr->bottom())));\n+#ifdef ASSERT\n+  if (!_hr->is_continues_humongous()) {\n+    \/\/ For non-ContinuesHumongous regions, the first obj always starts from bottom.\n+    u_char offset = _bot->offset_array(_bot->index_for(_hr->bottom()));\n+    assert(offset == 0, \"Found offset %u instead of 0 for region %u %s\",\n+           offset, _hr->hrm_index(), _hr->get_short_type_str());\n+  }\n+#endif\n@@ -123,1 +128,1 @@\n-  while (offset >= BOTConstants::N_words) {\n+  while (offset >= BOTConstants::card_size_in_words()) {\n@@ -130,1 +135,1 @@\n-  assert(offset < BOTConstants::N_words, \"offset too large\");\n+  assert(offset < BOTConstants::card_size_in_words(), \"offset too large\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-    assert((last_addr + G1CardTable::card_size_in_words) == mr.end(), \"MemRegion end must be aligned to a card.\");\n+    assert((last_addr + G1CardTable::card_size_in_words()) == mr.end(), \"MemRegion end must be aligned to a card.\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardCounts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  _byte_map_base = _byte_map - (uintptr_t(low_bound) >> card_shift);\n+  _byte_map_base = _byte_map - (uintptr_t(low_bound) >> _card_shift);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    size_t number_of_slots = (mem_region_size_in_words \/ card_size_in_words);\n+    size_t number_of_slots = (mem_region_size_in_words \/ _card_size_in_words);\n@@ -118,1 +118,1 @@\n-  static size_t heap_map_factor() { return card_size; }\n+  static size_t heap_map_factor() { return _card_size; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  return (uint)(card_idx >> (HeapRegion::LogOfHRGrainBytes - card_shift));\n+  return (uint)(card_idx >> (HeapRegion::LogOfHRGrainBytes - _card_shift));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1663,1 +1663,1 @@\n-  guarantee((uintptr_t)(heap_rs.base()) >= G1CardTable::card_size, \"Java heap must not start within the first card.\");\n+  guarantee((uintptr_t)(heap_rs.base()) >= G1CardTable::card_size(), \"Java heap must not start within the first card.\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -253,0 +253,4 @@\n+\/\/ An initial guess at the rate for pause-time card refinement for one\n+\/\/ thread, used when computing the default initial green zone value.\n+const double InitialPauseTimeCardRefinementRate = 200.0;\n+\n@@ -254,2 +258,1 @@\n-  size_t green = G1ConcRefinementGreenZone;\n-  const char* name = \"G1ConcRefinementGreenZone\";\n+  size_t green;\n@@ -257,2 +260,7 @@\n-    green = ParallelGCThreads;\n-    name = \"ParallelGCThreads\";\n+    const double rate = InitialPauseTimeCardRefinementRate * ParallelGCThreads;\n+    \/\/ The time budget for pause-time card refinement.\n+    const double ms = MaxGCPauseMillis * (G1RSetUpdatingPauseTimePercent \/ 100.0);\n+    green = rate * ms;\n+  } else {\n+    green = configuration_buffers_to_cards(G1ConcRefinementGreenZone,\n+                                           \"G1ConcRefinementGreenZone\");\n@@ -260,1 +268,0 @@\n-  green = configuration_buffers_to_cards(green, name);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-  bool _must_record;\n+  bool _allow_multiple_record;\n@@ -42,1 +42,1 @@\n-  G1GCParPhaseTimesTracker(G1GCPhaseTimes* phase_times, G1GCPhaseTimes::GCParPhases phase, uint worker_id, bool must_record = true);\n+  G1GCParPhaseTimesTracker(G1GCPhaseTimes* phase_times, G1GCPhaseTimes::GCParPhases phase, uint worker_id, bool allow_multiple_record = false);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCParPhaseTimesTracker.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -269,5 +269,1 @@\n-  if (_gc_par_phases[phase]->get(worker_id) == _gc_par_phases[phase]->uninitialized()) {\n-    record_time_secs(phase, worker_id, secs);\n-  } else {\n-    add_time_secs(phase, worker_id, secs);\n-  }\n+  _gc_par_phases[phase]->set_or_add(worker_id, secs);\n@@ -581,2 +577,2 @@\n-G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker(G1GCPhaseTimes* phase_times, G1GCPhaseTimes::GCParPhases phase, uint worker_id, bool must_record) :\n-  _start_time(), _phase(phase), _phase_times(phase_times), _worker_id(worker_id), _event(), _must_record(must_record) {\n+G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker(G1GCPhaseTimes* phase_times, G1GCPhaseTimes::GCParPhases phase, uint worker_id, bool allow_multiple_record) :\n+  _start_time(), _phase(phase), _phase_times(phase_times), _worker_id(worker_id), _event(), _allow_multiple_record(allow_multiple_record) {\n@@ -590,3 +586,1 @@\n-    if (_must_record) {\n-      _phase_times->record_time_secs(_phase, _worker_id, (Ticks::now() - _start_time).seconds());\n-    } else {\n+    if (_allow_multiple_record) {\n@@ -594,0 +588,2 @@\n+    } else {\n+      _phase_times->record_time_secs(_phase, _worker_id, (Ticks::now() - _start_time).seconds());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -811,1 +811,1 @@\n-    HeapWord* scan_end = MIN2(card_start + (num_cards << BOTConstants::LogN_words), top);\n+    HeapWord* scan_end = MIN2(card_start + (num_cards << BOTConstants::log_card_size_in_words()), top);\n@@ -1426,1 +1426,1 @@\n-      G1GCParPhaseTimesTracker x(p, merge_remset_phase, worker_id, _initial_evacuation \/* must_record *\/);\n+      G1GCParPhaseTimesTracker x(p, merge_remset_phase, worker_id, !_initial_evacuation \/* allow_multiple_record *\/);\n@@ -1677,1 +1677,1 @@\n-  HeapWord* end = start + G1CardTable::card_size_in_words;\n+  HeapWord* end = start + G1CardTable::card_size_in_words();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  CardsPerRegion = GrainBytes >> G1CardTable::card_shift;\n+  CardsPerRegion = GrainBytes >> G1CardTable::card_shift();\n@@ -217,2 +217,0 @@\n-\n-  _bot_part.set_object_can_span(true);\n@@ -226,2 +224,0 @@\n-\n-  _bot_part.set_object_can_span(false);\n@@ -743,5 +739,0 @@\n-void HeapRegion::verify() const {\n-  bool dummy = false;\n-  verify(VerifyOption_G1UsePrevMarking, \/* failures *\/ &dummy);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -621,3 +621,0 @@\n-  \/\/ Verify using the \"prev\" marking information\n-  void verify() const;\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  _split_card_shift = CardBitsWithinCardRegion + CardTable::card_shift;\n+  _split_card_shift = CardBitsWithinCardRegion + CardTable::card_shift();\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-  card_within_region = (uint)((offset & _split_card_mask) >> CardTable::card_shift);\n+  card_within_region = (uint)((offset & _split_card_mask) >> CardTable::card_shift());\n@@ -132,1 +132,1 @@\n-  uintptr_t from_card = uintptr_t(from) >> CardTable::card_shift;\n+  uintptr_t from_card = uintptr_t(from) >> CardTable::card_shift();\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,3 +34,3 @@\n-uint ObjectStartArray::block_shift = 0;\n-uint ObjectStartArray::block_size = 0;\n-uint ObjectStartArray::block_size_in_words = 0;\n+uint ObjectStartArray::_card_shift = 0;\n+uint ObjectStartArray::_card_size = 0;\n+uint ObjectStartArray::_card_size_in_words = 0;\n@@ -39,3 +39,3 @@\n-  block_shift = card_shift;\n-  block_size = 1 << block_shift;\n-  block_size_in_words = block_size \/ sizeof(HeapWord);\n+  _card_shift = card_shift;\n+  _card_size = 1 << _card_shift;\n+  _card_size_in_words = _card_size \/ sizeof(HeapWord);\n@@ -47,2 +47,2 @@\n-  assert((int)block_size == (int)CardTable::card_size, \"Sanity\");\n-  assert(block_size <= MaxBlockSize, \"block_size must be less than or equal to \" UINT32_FORMAT, MaxBlockSize);\n+  assert(_card_size == CardTable::card_size(), \"Sanity\");\n+  assert(_card_size <= MaxBlockSize, \"block_size must be less than or equal to \" UINT32_FORMAT, MaxBlockSize);\n@@ -53,1 +53,1 @@\n-  size_t bytes_to_reserve = reserved_region.word_size() \/ block_size_in_words;\n+  size_t bytes_to_reserve = reserved_region.word_size() \/ _card_size_in_words;\n@@ -79,1 +79,1 @@\n-  _offset_base = _raw_base - (size_t(reserved_region.start()) >> block_shift);\n+  _offset_base = _raw_base - (size_t(reserved_region.start()) >> _card_shift);\n@@ -94,2 +94,2 @@\n-  assert((uintptr_t(low_bound)  & (block_size - 1))  == 0, \"heap must start at block boundary\");\n-  assert((uintptr_t(high_bound) & (block_size - 1))  == 0, \"heap must end at block boundary\");\n+  assert((uintptr_t(low_bound)  & (_card_size - 1))  == 0, \"heap must start at block boundary\");\n+  assert((uintptr_t(high_bound) & (_card_size - 1))  == 0, \"heap must end at block boundary\");\n@@ -97,1 +97,1 @@\n-  size_t requested_blocks_size_in_bytes = mr.word_size() \/ block_size_in_words;\n+  size_t requested_blocks_size_in_bytes = mr.word_size() \/ _card_size_in_words;\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -49,0 +49,4 @@\n+  static uint _card_shift;\n+  static uint _card_size;\n+  static uint _card_size_in_words;\n+\n@@ -55,4 +59,0 @@\n-  static uint block_shift;\n-  static uint block_size;\n-  static uint block_size_in_words;\n-\n@@ -67,0 +67,11 @@\n+  static uint card_shift() {\n+    return _card_shift;\n+  }\n+\n+  static uint card_size() {\n+    return _card_size;\n+  }\n+  static uint card_size_in_words() {\n+    return _card_size_in_words;\n+  }\n+\n@@ -73,1 +84,1 @@\n-    jbyte* result = &_offset_base[uintptr_t(p) >> block_shift];\n+    jbyte* result = &_offset_base[uintptr_t(p) >> _card_shift];\n@@ -84,1 +95,1 @@\n-    HeapWord* result = (HeapWord*) (delta << block_shift);\n+    HeapWord* result = (HeapWord*) (delta << _card_shift);\n@@ -107,1 +118,1 @@\n-    HeapWord* result = (HeapWord*) (delta << block_shift);\n+    HeapWord* result = (HeapWord*) (delta << _card_shift);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.hpp","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-  assert((block_word_size % (ObjectStartArray::block_size)) == 0,\n+  assert((block_word_size % (ObjectStartArray::card_size())) == 0,\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,4 +36,4 @@\n-uint BOTConstants::LogN = 0;\n-uint BOTConstants::LogN_words = 0;\n-uint BOTConstants::N_bytes = 0;\n-uint BOTConstants::N_words = 0;\n+uint BOTConstants::_log_card_size = 0;\n+uint BOTConstants::_log_card_size_in_words = 0;\n+uint BOTConstants::_card_size = 0;\n+uint BOTConstants::_card_size_in_words = 0;\n@@ -42,4 +42,4 @@\n-  LogN =  card_shift;\n-  LogN_words = LogN - LogHeapWordSize;\n-  N_bytes = 1 << LogN;\n-  N_words = 1 << LogN_words;\n+  _log_card_size =  card_shift;\n+  _log_card_size_in_words = _log_card_size - LogHeapWordSize;\n+  _card_size = 1 << _log_card_size;\n+  _card_size_in_words = 1 << _log_card_size_in_words;\n@@ -102,1 +102,1 @@\n-  return (delta & right_n_bits((int)BOTConstants::LogN_words)) == (size_t)NoBits;\n+  return (delta & right_n_bits((int)BOTConstants::log_card_size_in_words())) == (size_t)NoBits;\n@@ -119,1 +119,1 @@\n-    set_remainder_to_point_to_start(mr.start() + BOTConstants::N_words, mr.end());\n+    set_remainder_to_point_to_start(mr.start() + BOTConstants::card_size_in_words(), mr.end());\n@@ -175,1 +175,1 @@\n-  assert(end ==_array->address_for_index(end_card)+BOTConstants::N_words, \"Precondition\");\n+  assert(end ==_array->address_for_index(end_card)+BOTConstants::card_size_in_words(), \"Precondition\");\n@@ -191,1 +191,1 @@\n-  assert(_array->offset_array(start_card-1) <= BOTConstants::N_words,\n+  assert(_array->offset_array(start_card-1) <= BOTConstants::card_size_in_words(),\n@@ -200,1 +200,1 @@\n-    offset = BOTConstants::N_words + i;\n+    offset = BOTConstants::card_size_in_words() + i;\n@@ -221,2 +221,2 @@\n-  guarantee(_array->offset_array(start_card) == BOTConstants::N_words, \"Wrong value in second card\");\n-  u_char last_entry = BOTConstants::N_words;\n+  guarantee(_array->offset_array(start_card) == BOTConstants::card_size_in_words(), \"Wrong value in second card\");\n+  u_char last_entry = BOTConstants::card_size_in_words();\n@@ -227,1 +227,1 @@\n-      guarantee(entry > BOTConstants::N_words, \"Should be in logarithmic region\");\n+      guarantee(entry > BOTConstants::card_size_in_words(), \"Should be in logarithmic region\");\n@@ -237,1 +237,1 @@\n-      guarantee(_array->offset_array(landing_card) <= BOTConstants::N_words, \"Offset value\");\n+      guarantee(_array->offset_array(landing_card) <= BOTConstants::card_size_in_words(), \"Offset value\");\n@@ -269,1 +269,1 @@\n-  clear_bits(boundary_before_end, right_n_bits((int)BOTConstants::LogN));\n+  clear_bits(boundary_before_end, right_n_bits((int)BOTConstants::log_card_size()));\n@@ -282,1 +282,1 @@\n-      boundary += BOTConstants::N_words;\n+      boundary += BOTConstants::card_size_in_words();\n@@ -299,2 +299,2 @@\n-          HeapWord* rem_st = _array->address_for_index(start_index) + BOTConstants::N_words;\n-          HeapWord* rem_end = _array->address_for_index(end_index) + BOTConstants::N_words;\n+          HeapWord* rem_st = _array->address_for_index(start_index) + BOTConstants::card_size_in_words();\n+          HeapWord* rem_end = _array->address_for_index(end_index) + BOTConstants::card_size_in_words();\n@@ -383,1 +383,1 @@\n-  while (offset > BOTConstants::N_words) {\n+  while (offset > BOTConstants::card_size_in_words()) {\n@@ -387,1 +387,1 @@\n-    q -= (BOTConstants::N_words * n_cards_back);\n+    q -= (BOTConstants::card_size_in_words() * n_cards_back);\n@@ -392,1 +392,1 @@\n-  while (offset == BOTConstants::N_words) {\n+  while (offset == BOTConstants::card_size_in_words()) {\n@@ -394,1 +394,1 @@\n-    q -= BOTConstants::N_words;\n+    q -= BOTConstants::card_size_in_words();\n@@ -398,1 +398,1 @@\n-  assert(offset < BOTConstants::N_words, \"offset too large\");\n+  assert(offset < BOTConstants::card_size_in_words(), \"offset too large\");\n@@ -431,1 +431,1 @@\n-  assert(pointer_delta(_next_offset_threshold, blk_start) <= BOTConstants::N_words,\n+  assert(pointer_delta(_next_offset_threshold, blk_start) <= BOTConstants::card_size_in_words(),\n@@ -438,1 +438,1 @@\n-         _array->_reserved.start() + _next_offset_index*BOTConstants::N_words,\n+         _array->_reserved.start() + _next_offset_index*BOTConstants::card_size_in_words(),\n@@ -460,1 +460,1 @@\n-    HeapWord* rem_end = _array->address_for_index(end_index) +  BOTConstants::N_words;\n+    HeapWord* rem_end = _array->address_for_index(end_index) +  BOTConstants::card_size_in_words();\n@@ -468,1 +468,1 @@\n-  _next_offset_threshold = _array->address_for_index(end_index) + BOTConstants::N_words;\n+  _next_offset_threshold = _array->address_for_index(end_index) + BOTConstants::card_size_in_words();\n@@ -479,1 +479,1 @@\n-         _array->offset_array(orig_next_offset_index) <= BOTConstants::N_words),\n+         _array->offset_array(orig_next_offset_index) <= BOTConstants::card_size_in_words()),\n@@ -483,1 +483,1 @@\n-           _array->offset_array(j) <= (u_char) (BOTConstants::N_words+BOTConstants::N_powers-1),\n+           _array->offset_array(j) <= (u_char) (BOTConstants::card_size_in_words()+BOTConstants::N_powers-1),\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -52,5 +52,4 @@\n-public:\n-  static uint LogN;\n-  static uint LogN_words;\n-  static uint N_bytes;\n-  static uint N_words;\n+  static uint _log_card_size;\n+  static uint _log_card_size_in_words;\n+  static uint _card_size;\n+  static uint _card_size_in_words;\n@@ -58,0 +57,1 @@\n+public:\n@@ -70,0 +70,1 @@\n+\n@@ -71,2 +72,14 @@\n-    assert(entry >= N_words, \"Precondition\");\n-    return power_to_cards_back(entry - N_words);\n+    assert(entry >= _card_size_in_words, \"Precondition\");\n+    return power_to_cards_back(entry - _card_size_in_words);\n+  }\n+  static uint log_card_size() {\n+    return _log_card_size;\n+  }\n+  static uint log_card_size_in_words() {\n+    return _log_card_size_in_words;\n+  }\n+  static uint card_size() {\n+    return _card_size;\n+  }\n+  static uint card_size_in_words() {\n+    return _card_size_in_words;\n@@ -94,1 +107,1 @@\n-    assert(BOTConstants::N_bytes == CardTable::card_size, \"sanity\");\n+    assert(BOTConstants::card_size() == CardTable::card_size(), \"sanity\");\n@@ -181,1 +194,1 @@\n-    assert(pointer_delta(high, low) <= BOTConstants::N_words, \"offset too large\");\n+    assert(pointer_delta(high, low) <= BOTConstants::card_size_in_words(), \"offset too large\");\n@@ -192,1 +205,1 @@\n-    size_t num_cards = pointer_delta(right, left) >> BOTConstants::LogN_words;\n+    size_t num_cards = pointer_delta(right, left) >> BOTConstants::log_card_size_in_words();\n@@ -209,1 +222,1 @@\n-    assert(pointer_delta(high, low) <= BOTConstants::N_words, \"offset too large\");\n+    assert(pointer_delta(high, low) <= BOTConstants::card_size_in_words(), \"offset too large\");\n@@ -224,1 +237,1 @@\n-    size_t number_of_slots = (mem_region_words \/ BOTConstants::N_words) + 1;\n+    size_t number_of_slots = (mem_region_words \/ BOTConstants::card_size_in_words()) + 1;\n@@ -338,1 +351,1 @@\n-      _array->set_offset_array(_end, new_end, BOTConstants::N_words);\n+      _array->set_offset_array(_end, new_end, BOTConstants::card_size_in_words());\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.hpp","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  size_t result = delta >> BOTConstants::LogN;\n+  size_t result = delta >> BOTConstants::log_card_size();\n@@ -60,1 +60,1 @@\n-  HeapWord* result = _reserved.start() + (index << BOTConstants::LogN_words);\n+  HeapWord* result = _reserved.start() + (index << BOTConstants::log_card_size_in_words());\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    __ unsigned_shift_right(tmp, CardTable::card_shift, tmp);\n+    __ unsigned_shift_right(tmp, CardTable::card_shift(), tmp);\n@@ -74,1 +74,1 @@\n-    __ unsigned_shift_right(addr, CardTable::card_shift, tmp);\n+    __ unsigned_shift_right(addr, CardTable::card_shift(), tmp);\n","filename":"src\/hotspot\/share\/gc\/shared\/c1\/cardTableBarrierSetC1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  Node* card_offset = __ URShiftX(cast, __ ConI(CardTable::card_shift));\n+  Node* card_offset = __ URShiftX(cast, __ ConI(CardTable::card_shift()));\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/cardTableBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,3 +41,3 @@\n-uint CardTable::card_shift = 0;\n-uint CardTable::card_size = 0;\n-uint CardTable::card_size_in_words = 0;\n+uint CardTable::_card_shift = 0;\n+uint CardTable::_card_size = 0;\n+uint CardTable::_card_size_in_words = 0;\n@@ -49,3 +49,3 @@\n-  card_size = GCCardSizeInBytes;\n-  card_shift = log2i_exact(card_size);\n-  card_size_in_words = card_size \/ sizeof(HeapWord);\n+  _card_size = GCCardSizeInBytes;\n+  _card_shift = log2i_exact(_card_size);\n+  _card_size_in_words = _card_size \/ sizeof(HeapWord);\n@@ -54,1 +54,1 @@\n-  BOTConstants::initialize_bot_size(card_shift);\n+  BOTConstants::initialize_bot_size(_card_shift);\n@@ -58,1 +58,1 @@\n-  ObjectStartArray::initialize_block_size(card_shift);\n+  ObjectStartArray::initialize_block_size(_card_shift);\n@@ -61,1 +61,1 @@\n-  log_info_p(gc, init)(\"CardTable entry size: \" UINT32_FORMAT,  card_size);\n+  log_info_p(gc, init)(\"CardTable entry size: \" UINT32_FORMAT,  _card_size);\n@@ -85,2 +85,2 @@\n-  assert((uintptr_t(_whole_heap.start())  & (card_size - 1))  == 0, \"heap must start at card boundary\");\n-  assert((uintptr_t(_whole_heap.end()) & (card_size - 1))  == 0, \"heap must end at card boundary\");\n+  assert((uintptr_t(_whole_heap.start())  & (_card_size - 1))  == 0, \"heap must start at card boundary\");\n+  assert((uintptr_t(_whole_heap.end()) & (_card_size - 1))  == 0, \"heap must end at card boundary\");\n@@ -123,1 +123,1 @@\n-  _byte_map_base = _byte_map - (uintptr_t(low_bound) >> card_shift);\n+  _byte_map_base = _byte_map - (uintptr_t(low_bound) >> _card_shift);\n@@ -416,1 +416,1 @@\n-                              dirty_cards*card_size_in_words);\n+                              dirty_cards*_card_size_in_words);\n@@ -442,1 +442,1 @@\n-                              dirty_cards*card_size_in_words);\n+                              dirty_cards * _card_size_in_words);\n@@ -496,1 +496,1 @@\n-                            p2i((HeapWord*) (((size_t) addr_for(curr)) + card_size)),\n+                            p2i((HeapWord*) (((size_t) addr_for(curr)) + _card_size)),\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -114,0 +114,5 @@\n+  \/\/ CardTable entry size\n+  static uint _card_shift;\n+  static uint _card_size;\n+  static uint _card_size_in_words;\n+\n@@ -136,2 +141,2 @@\n-    const size_t words = align_up(covered_words, card_size_in_words);\n-    return words \/ card_size_in_words + 1;\n+    const size_t words = align_up(covered_words, _card_size_in_words);\n+    return words \/ _card_size_in_words + 1;\n@@ -160,1 +165,1 @@\n-    CardValue* result = &_byte_map_base[uintptr_t(p) >> card_shift];\n+    CardValue* result = &_byte_map_base[uintptr_t(p) >> _card_shift];\n@@ -192,1 +197,1 @@\n-    HeapWord* result = (HeapWord*) (delta << card_shift);\n+    HeapWord* result = (HeapWord*) (delta << _card_shift);\n@@ -231,4 +236,11 @@\n-  \/\/ CardTable entry size\n-  static uint card_shift;\n-  static uint card_size;\n-  static uint card_size_in_words;\n+  static uint card_shift() {\n+    return _card_shift;\n+  }\n+\n+  static uint card_size() {\n+    return _card_size;\n+  }\n+\n+  static uint card_size_in_words() {\n+    return _card_size_in_words;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -264,4 +264,0 @@\n-  declare_constant(BOTConstants::LogN)                                      \\\n-  declare_constant(BOTConstants::LogN_words)                                \\\n-  declare_constant(BOTConstants::N_bytes)                                   \\\n-  declare_constant(BOTConstants::N_words)                                   \\\n@@ -277,3 +273,0 @@\n-  declare_constant(CardTable::card_shift)                                   \\\n-  declare_constant(CardTable::card_size)                                    \\\n-  declare_constant(CardTable::card_size_in_words)                           \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -285,1 +285,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n","filename":"src\/hotspot\/share\/gc\/z\/zPhysicalMemory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#define CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION 12\n@@ -62,1 +63,2 @@\n-\/\/ This portion of the archive file header must remain unchanged for _version >= 12.\n+\/\/ This portion of the archive file header must remain unchanged for\n+\/\/ _version >= CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION (12).\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -762,0 +762,3 @@\n+JNIEXPORT jboolean JNICALL\n+JVM_IsFinalizationEnabled(JNIEnv *env);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -391,1 +391,1 @@\n-  out->print_cr(\"   maxchunksize      (Optional) Maximum size of an individual data chunk in bytes if\");\n+  out->print_cr(\"  maxchunksize       (Optional) Maximum size of an individual data chunk in bytes if\");\n@@ -396,1 +396,1 @@\n-  out->print_cr(\"   memorysize        (Optional) Overall memory size, in bytes if one of the following\");\n+  out->print_cr(\"  memorysize         (Optional) Overall memory size, in bytes if one of the following\");\n@@ -406,1 +406,5 @@\n-  out->print_cr(\"                     environment variable.)\");\n+  out->print_cr(\"                     environment variable)\");\n+  out->print_cr(\"\");\n+  out->print_cr(\"  dumppath           (Optional) Path to the location where a recording file is written\");\n+  out->print_cr(\"                     in case the VM runs into a critical error, such as a system\");\n+  out->print_cr(\"                     crash. (STRING, The default location is the current directory)\");\n@@ -419,1 +423,2 @@\n-  out->print_cr(\"  samplethreads      (Optional) Flag for activating thread sampling. (BOOLEAN, true)\");\n+  out->print_cr(\"  samplethreads      (Optional) Flag for activating thread sampling. This value cannot\");\n+  out->print_cr(\"                     be changed once JFR has been initialized. (BOOLEAN, true)\");\n@@ -470,4 +475,0 @@\n-  if (_stack_depth.is_set()) {\n-    stack_depth = JfrJavaSupport::new_java_lang_Integer((jint)_stack_depth.value(), CHECK);\n-  }\n-\n@@ -475,4 +476,0 @@\n-  if (_global_buffer_count.is_set()) {\n-    global_buffer_count = JfrJavaSupport::new_java_lang_Long(_global_buffer_count.value(), CHECK);\n-  }\n-\n@@ -480,4 +477,0 @@\n-  if (_global_buffer_size.is_set()) {\n-    global_buffer_size = JfrJavaSupport::new_java_lang_Long(_global_buffer_size.value()._size, CHECK);\n-  }\n-\n@@ -485,4 +478,0 @@\n-  if (_thread_buffer_size.is_set()) {\n-    thread_buffer_size = JfrJavaSupport::new_java_lang_Long(_thread_buffer_size.value()._size, CHECK);\n-  }\n-\n@@ -490,4 +479,0 @@\n-  if (_max_chunk_size.is_set()) {\n-    max_chunk_size = JfrJavaSupport::new_java_lang_Long(_max_chunk_size.value()._size, CHECK);\n-  }\n-\n@@ -495,4 +480,0 @@\n-  if (_memory_size.is_set()) {\n-    memory_size = JfrJavaSupport::new_java_lang_Long(_memory_size.value()._size, CHECK);\n-  }\n-\n@@ -500,2 +481,23 @@\n-  if (_sample_threads.is_set()) {\n-    sample_threads = JfrJavaSupport::new_java_lang_Boolean(_sample_threads.value(), CHECK);\n+\n+  if (!JfrRecorder::is_created()) {\n+    if (_stack_depth.is_set()) {\n+      stack_depth = JfrJavaSupport::new_java_lang_Integer((jint)_stack_depth.value(), CHECK);\n+    }\n+    if (_global_buffer_count.is_set()) {\n+      global_buffer_count = JfrJavaSupport::new_java_lang_Long(_global_buffer_count.value(), CHECK);\n+    }\n+    if (_global_buffer_size.is_set()) {\n+      global_buffer_size = JfrJavaSupport::new_java_lang_Long(_global_buffer_size.value()._size, CHECK);\n+    }\n+    if (_thread_buffer_size.is_set()) {\n+      thread_buffer_size = JfrJavaSupport::new_java_lang_Long(_thread_buffer_size.value()._size, CHECK);\n+    }\n+    if (_max_chunk_size.is_set()) {\n+      max_chunk_size = JfrJavaSupport::new_java_lang_Long(_max_chunk_size.value()._size, CHECK);\n+    }\n+    if (_memory_size.is_set()) {\n+      memory_size = JfrJavaSupport::new_java_lang_Long(_memory_size.value()._size, CHECK);\n+    }\n+    if (_sample_threads.is_set()) {\n+      sample_threads = JfrJavaSupport::new_java_lang_Boolean(_sample_threads.value(), CHECK);\n+    }\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.cpp","additions":32,"deletions":30,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+#include \"jfr\/recorder\/repository\/jfrEmergencyDump.hpp\"\n@@ -318,0 +319,14 @@\n+NO_TRANSITION(void, jfr_set_dump_path(JNIEnv* env, jobject jvm, jstring dumppath))\n+  if (dumppath == NULL) {\n+    JfrEmergencyDump::set_dump_path(NULL);\n+  } else {\n+    const char* dump_path = env->GetStringUTFChars(dumppath, NULL);\n+    JfrEmergencyDump::set_dump_path(dump_path);\n+    env->ReleaseStringUTFChars(dumppath, dump_path);\n+  }\n+NO_TRANSITION_END\n+\n+NO_TRANSITION(jstring, jfr_get_dump_path(JNIEnv* env, jobject jvm))\n+  return env->NewStringUTF(JfrEmergencyDump::get_dump_path());\n+NO_TRANSITION_END\n+\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,0 +116,4 @@\n+void JNICALL jfr_set_dump_path(JNIEnv* env, jobject jvm, jstring dumppath);\n+\n+jstring JNICALL jfr_get_dump_path(JNIEnv* env, jobject jvm);\n+\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,0 +78,2 @@\n+      (char*)\"setDumpPath\", (char*)\"(Ljava\/lang\/String;)V\", (void*)jfr_set_dump_path,\n+      (char*)\"getDumpPath\", (char*)\"()Ljava\/lang\/String;\", (void*)jfr_get_dump_path,\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"memory\/resourceArea.hpp\"\n@@ -48,0 +49,2 @@\n+static Symbol* unhide_internal_types_sym = NULL;\n+static Symbol* unhide_internal_types_sig_sym = NULL;\n@@ -58,1 +61,3 @@\n-    initialized = bytes_for_eager_instrumentation_sig_sym != NULL;\n+    unhide_internal_types_sym = SymbolTable::new_permanent_symbol(\"unhideInternalTypes\");\n+    unhide_internal_types_sig_sym = SymbolTable::new_permanent_symbol(\"()V\");\n+    initialized = unhide_internal_types_sig_sym != NULL;\n@@ -85,1 +90,2 @@\n-    log_error(jfr, system)(\"JfrUpcall failed\");\n+    ResourceMark rm(THREAD);\n+    log_error(jfr, system)(\"JfrUpcall failed for %s\", method_sym->as_C_string());\n@@ -182,0 +188,16 @@\n+\n+bool JfrUpcalls::unhide_internal_types(TRAPS) {\n+  DEBUG_ONLY(JfrJavaSupport::check_java_thread_in_vm(THREAD));\n+  JavaValue result(T_VOID);\n+  const Klass* klass = SystemDictionary::resolve_or_fail(jvm_upcalls_class_sym, true, CHECK_false);\n+  assert(klass != NULL, \"invariant\");\n+  JfrJavaArguments args(&result, klass, unhide_internal_types_sym, unhide_internal_types_sig_sym);\n+  JfrJavaSupport::call_static(&args, THREAD);\n+  if (HAS_PENDING_EXCEPTION) {\n+    CLEAR_PENDING_EXCEPTION;\n+    ResourceMark rm(THREAD);\n+    log_error(jfr, system)(\"JfrUpcall failed for %s\", unhide_internal_types_sym->as_C_string());\n+    return false;\n+  }\n+  return true;\n+}\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.cpp","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -56,0 +56,2 @@\n+\n+  static bool unhide_internal_types(TRAPS);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,49 @@\n+  <!-- Internal events are only to be used during development, i.e. temporary time measurements, without the need \n+       to modify .jfc files etc. Code that commits an internal event should NEVER be checked in.\n+\n+       Example usage:\n+\n+       #include \"jfr\/jfrEvents.hpp\"\n+\n+       void foo() {\n+         EventDuration event;\n+         bar();\n+         baz();\n+         event.commit();\n+       }\n+\n+       $ make images\n+       $ java -XX:StartFlightRecording:settings=none,filename=dump.jfr ...  \n+       ...\n+       $ jfr print dump.jfr\n+\n+       Programmatic access:\n+       try (var rf = new RecordingFile(Path.of(\"dump.jfr)) {\n+           while (rf.hasMoreEvents()) {\n+               RecordedEvent e = rf.readEvent();\n+               System.out.println(e.getName() + \" \" + e.getDuration()));\n+           }\n+       };\n+  !-->\n+\n+  <Event name=\"Duration\" category=\"Java Virtual Machine, Internal\" label=\"Duration\" startTime=\"true\" thread=\"true\" stackTrace=\"false\" internal=\"true\">\n+  <\/Event>\n+\n+  <Event name=\"Instant\" category=\"Java Virtual Machine, Internal\" label=\"Instant\" startTime=\"false\" thread=\"true\" stackTrace=\"false\" internal=\"true\">\n+  <\/Event>\n+\n+  <Event name=\"Value\" category=\"Java Virtual Machine, Internal\" label=\"Value\" startTime=\"false\" thread=\"true\" stackTrace=\"false\" internal=\"true\">\n+    <Field type=\"ulong\" name=\"value\" label=\"Value\"\/>\n+  <\/Event>\n+\n+  <Event name=\"Text\" category=\"Java Virtual Machine, Internal\" label=\"Text\" startTime=\"false\" thread=\"true\" stackTrace=\"false\" internal=\"true\">\n+    <Field type=\"string\" name=\"text\" label=\"Text\"\/>\n+  <\/Event>\n+  \n+  <Event name=\"ZThreadDebug\" category=\"Java Virtual Machine, GC, Detailed\" label=\"ZGC Thread Event\" description=\"Temporary latency measurements used during development and debugging of ZGC\" thread=\"true\" internal=\"true\">\n+    <Field type=\"uint\" name=\"gcId\" label=\"GC Identifier\" relation=\"GcId\"\/>\n+    <Field type=\"string\" name=\"name\" label=\"Name\" \/>\n+  <\/Event>\n+\n+  <!-- Ordinary and experimental events !-->\n+  \n@@ -1037,5 +1086,0 @@\n-  <Event name=\"ZThreadDebug\" category=\"Java Virtual Machine, GC, Detailed\" label=\"ZGC Thread Event\" description=\"Temporary latency measurements used during development and debugging of ZGC\" thread=\"true\" experimental=\"true\">\n-    <Field type=\"uint\" name=\"gcId\" label=\"GC Identifier\" relation=\"GcId\"\/>\n-    <Field type=\"string\" name=\"name\" label=\"Name\" \/>\n-  <\/Event>\n-\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":49,"deletions":5,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n@@ -68,0 +68,1 @@\n+              <xs:attribute name=\"internal\" type=\"xs:boolean\" use=\"optional\" \/>\n@@ -90,0 +91,1 @@\n+                    <xs:attribute name=\"internal\" type=\"xs:boolean\" use=\"optional\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xsd","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdLoadBarrier.inline.hpp\"\n@@ -32,0 +33,1 @@\n+#include \"jfr\/recorder\/storage\/jfrBuffer.hpp\"\n@@ -326,0 +328,2 @@\n+  const size_t _min_size; \/\/ for enqueue buffer monitoring\n+  const size_t _renew_size;\n@@ -330,0 +334,3 @@\n+  const JfrBuffer* get_enqueue_buffer();\n+  const JfrBuffer* renew_if_full(const JfrBuffer* enqueue_buffer);\n+\n@@ -399,0 +406,2 @@\n+  _min_size(JfrOptionSet::stackdepth() * sizeof(intptr_t)),\n+  _renew_size(_min_size * 2),\n@@ -523,0 +532,9 @@\n+const JfrBuffer* JfrThreadSampler::get_enqueue_buffer() {\n+  const JfrBuffer* buffer = JfrTraceIdLoadBarrier::get_enqueue_buffer(this);\n+  return buffer != nullptr ? renew_if_full(buffer) : JfrTraceIdLoadBarrier::renew_enqueue_buffer(_renew_size, this);\n+}\n+\n+const JfrBuffer* JfrThreadSampler::renew_if_full(const JfrBuffer* enqueue_buffer) {\n+  assert(enqueue_buffer != nullptr, \"invariant\");\n+  return enqueue_buffer->free_size() < _min_size ? JfrTraceIdLoadBarrier::renew_enqueue_buffer(_renew_size, this) : enqueue_buffer;\n+}\n@@ -533,1 +551,0 @@\n-\n@@ -545,0 +562,9 @@\n+      \/\/ Explicitly monitor the available space of the thread-local buffer used by the load barrier\n+      \/\/ for enqueuing klasses as part of tagging methods. We do this because if space becomes sparse,\n+      \/\/ we cannot rely on the implicit allocation of a new buffer as part of the regular tag mechanism.\n+      \/\/ If the free list is empty, a malloc could result, and the problem with that is that the thread\n+      \/\/ we have suspended could be the holder of the malloc lock. Instead, the buffer is pre-emptively\n+      \/\/ renewed before thread suspension.\n+      const JfrBuffer* enqueue_buffer = get_enqueue_buffer();\n+      assert(enqueue_buffer != nullptr, \"invariant\");\n+\n@@ -556,0 +582,1 @@\n+        assert(enqueue_buffer->free_size() >= _min_size, \"invariant\");\n@@ -559,0 +586,1 @@\n+        enqueue_buffer = renew_if_full(enqueue_buffer);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.cpp","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+class JfrBuffer;\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"jfr\/jni\/jfrUpcalls.hpp\"\n@@ -29,0 +30,1 @@\n+#include \"jfr\/recorder\/jfrEventSetting.inline.hpp\"\n@@ -34,0 +36,1 @@\n+#include \"utilities\/exceptions.hpp\"\n@@ -39,0 +42,11 @@\n+static void check_internal_types() {\n+  static bool visible = false;\n+  if (!visible && JfrEventSetting::is_internal_types_visible()) {\n+    JavaThread* const jt = JavaThread::current();\n+    DEBUG_ONLY(JfrJavaSupport::check_java_thread_in_native(jt));\n+    \/\/ can safepoint here\n+    ThreadInVMfromNative transition(jt);\n+    visible = JfrUpcalls::unhide_internal_types(jt);\n+  }\n+}\n+\n@@ -56,0 +70,1 @@\n+  check_internal_types();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrMetadataEvent.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -154,0 +154,4 @@\n+  oop thread_oop = jt->threadObj();\n+  if (thread_oop == nullptr) {\n+    return 0;\n+  }\n@@ -155,1 +159,1 @@\n-  Handle thread_group_handle(current, java_lang_Thread::threadGroup(jt->threadObj()));\n+  Handle thread_group_handle(current, java_lang_Thread::threadGroup(thread_oop));\n@@ -170,1 +174,1 @@\n-  while (!(parent_thread_group_handle == NULL)) {\n+  while (parent_thread_group_handle != nullptr) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrThreadGroup.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -250,0 +250,8 @@\n+JfrBuffer* JfrTraceIdKlassQueue::get_enqueue_buffer(Thread* thread) {\n+  return _queue->thread_local_storage(thread);\n+}\n+\n+JfrBuffer* JfrTraceIdKlassQueue::renew_enqueue_buffer(size_t size, Thread* thread) {\n+  return _queue->renew(size, thread);\n+}\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdKlassQueue.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+class JfrBuffer;\n@@ -50,1 +51,1 @@\n-class JfrEpochQueueKlassPolicy {\n+class JfrEpochQueueKlassPolicy : public JfrCHeapObj {\n@@ -67,0 +68,1 @@\n+  friend class JfrTraceIdLoadBarrier;\n@@ -69,0 +71,2 @@\n+  JfrBuffer* get_enqueue_buffer(Thread* thread);\n+  JfrBuffer* renew_enqueue_buffer(size_t size, Thread* thread);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdKlassQueue.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -71,0 +71,8 @@\n+\n+JfrBuffer* JfrTraceIdLoadBarrier::get_enqueue_buffer(Thread* thread) {\n+  return klass_queue().get_enqueue_buffer(thread);\n+}\n+\n+JfrBuffer* JfrTraceIdLoadBarrier::renew_enqueue_buffer(size_t size, Thread* thread) {\n+  return klass_queue().renew_enqueue_buffer(size, thread);\n+}\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdLoadBarrier.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+class JfrBuffer;\n@@ -72,0 +73,2 @@\n+  friend class JfrStackTrace;\n+  friend class JfrThreadSampler;\n@@ -78,0 +81,2 @@\n+  static JfrBuffer* get_enqueue_buffer(Thread* thread);\n+  static JfrBuffer* renew_enqueue_buffer(size_t size, Thread* thread);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdLoadBarrier.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+bool JfrEventSetting::_internal_types = false;\n@@ -61,0 +62,9 @@\n+void JfrEventSetting::unhide_internal_types() {\n+  _internal_types = true;\n+}\n+\n+bool JfrEventSetting::is_internal_types_visible() {\n+  return _internal_types;\n+}\n+\n+\n@@ -72,0 +82,1 @@\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrEventSetting.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+  static bool _internal_types;\n@@ -51,0 +52,2 @@\n+  static void unhide_internal_types();\n+  static bool is_internal_types_visible();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrEventSetting.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+char JfrEmergencyDump::_dump_path[JVM_MAXPATHLEN] = { 0 };\n+\n@@ -69,3 +71,8 @@\n-static size_t get_current_directory() {\n-  if (os::get_current_directory(_path_buffer, sizeof(_path_buffer)) == NULL) {\n-    return 0;\n+static size_t get_dump_directory() {\n+  const char* dump_path = JfrEmergencyDump::get_dump_path();\n+  if (*dump_path == '\\0') {\n+    if (os::get_current_directory(_path_buffer, sizeof(_path_buffer)) == NULL) {\n+      return 0;\n+    }\n+  } else {\n+    strcpy(_path_buffer, dump_path);\n@@ -73,2 +80,2 @@\n-  const size_t cwd_len = strlen(_path_buffer);\n-  const int result = jio_snprintf(_path_buffer + cwd_len,\n+  const size_t path_len = strlen(_path_buffer);\n+  const int result = jio_snprintf(_path_buffer + path_len,\n@@ -108,1 +115,1 @@\n-  const size_t path_len = get_current_directory();\n+  const size_t path_len = get_dump_directory();\n@@ -128,1 +135,1 @@\n-static bool open_emergency_dump_file() {\n+bool JfrEmergencyDump::open_emergency_dump_file() {\n@@ -133,1 +140,10 @@\n-  return open_emergency_dump_fd(create_emergency_dump_path());\n+\n+  bool result = open_emergency_dump_fd(create_emergency_dump_path());\n+  if (!result && *_dump_path != '\\0') {\n+    log_warning(jfr)(\"Unable to create an emergency dump file at the location set by dumppath=%s\", _dump_path);\n+    \/\/ Fallback. Try to create it in the current directory.\n+    *_dump_path = '\\0';\n+    *_path_buffer = '\\0';\n+    result = open_emergency_dump_fd(create_emergency_dump_path());\n+  }\n+  return result;\n@@ -153,0 +169,15 @@\n+void JfrEmergencyDump::set_dump_path(const char* dump_path) {\n+  if (dump_path == NULL || *dump_path == '\\0') {\n+    os::get_current_directory(_dump_path, sizeof(_dump_path));\n+  } else {\n+    if (strlen(dump_path) < JVM_MAXPATHLEN) {\n+      strncpy(_dump_path, dump_path, JVM_MAXPATHLEN);\n+      _dump_path[JVM_MAXPATHLEN - 1] = '\\0';\n+    }\n+  }\n+}\n+\n+const char* JfrEmergencyDump::get_dump_path() {\n+  return _dump_path;\n+}\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":39,"deletions":8,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,5 @@\n+ private:\n+  static char _dump_path[JVM_MAXPATHLEN];\n+\n+  static bool open_emergency_dump_file();\n+\n@@ -36,0 +41,2 @@\n+  static void set_dump_path(const char* dump_path);\n+  static const char* get_dump_path();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -166,0 +166,1 @@\n+const char* const default_dumppath = NULL;\n@@ -185,0 +186,7 @@\n+static DCmdArgument<char*> _dcmd_dumppath(\n+  \"dumppath\",\n+  \"Path to emergency dump\",\n+  \"STRING\",\n+  false,\n+  default_dumppath);\n+\n@@ -261,0 +269,1 @@\n+  _parser.add_dcmd_option(&_dcmd_dumppath);\n@@ -349,0 +358,12 @@\n+  configure._dump_path.set_is_set(_dcmd_dumppath.is_set());\n+  char* dumppath = _dcmd_dumppath.value();\n+  if (dumppath != NULL) {\n+    const size_t len = strlen(dumppath);\n+    char* dumppath_copy = JfrCHeapObj::new_array<char>(len + 1);\n+    if (NULL == dumppath_copy) {\n+      return false;\n+    }\n+    strncpy(dumppath_copy, dumppath, len + 1);\n+    configure._dump_path.set_value(dumppath_copy);\n+  }\n+\n@@ -376,0 +397,1 @@\n+    tty->cr(); \/\/ java_lang_Throwable::print will not print '\\n'\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrOptionSet.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"jfr\/recorder\/storage\/jfrBuffer.hpp\"\n@@ -178,0 +179,6 @@\n+static const size_t min_valid_free_size_bytes = 16;\n+\n+static inline bool is_full(const JfrBuffer* enqueue_buffer) {\n+  return enqueue_buffer->free_size() < min_valid_free_size_bytes;\n+}\n+\n@@ -179,0 +186,6 @@\n+  \/\/ Explicitly monitor the available space of the thread-local buffer used for enqueuing klasses as part of tagging methods.\n+  \/\/ We do this because if space becomes sparse, we cannot rely on the implicit allocation of a new buffer as part of the\n+  \/\/ regular tag mechanism. If the free list is empty, a malloc could result, and the problem with that is that the thread\n+  \/\/ we have suspended could be the holder of the malloc lock. If there is no more available space, the attempt is aborted.\n+  const JfrBuffer* const enqueue_buffer = JfrTraceIdLoadBarrier::get_enqueue_buffer(Thread::current());\n+  assert(enqueue_buffer != nullptr, \"invariant\");\n@@ -182,1 +195,0 @@\n-\n@@ -190,1 +202,1 @@\n-    if (!Method::is_valid_method(method)) {\n+    if (!Method::is_valid_method(method) || is_full(enqueue_buffer)) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.cpp","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    const size_t weight = allocated_bytes - _last_allocated_bytes;\n+    const int64_t weight = allocated_bytes - _last_allocated_bytes;\n@@ -51,1 +51,1 @@\n-    const size_t weight = allocated_bytes - _last_allocated_bytes;\n+    const int64_t weight = allocated_bytes - _last_allocated_bytes;\n@@ -62,1 +62,1 @@\n-inline intptr_t estimate_tlab_size_bytes(Thread* thread) {\n+inline int64_t estimate_tlab_size_bytes(Thread* thread) {\n@@ -66,1 +66,1 @@\n-  return static_cast<intptr_t>(desired_tlab_size_bytes - alignment_reserve_bytes);\n+  return static_cast<int64_t>(desired_tlab_size_bytes - alignment_reserve_bytes);\n@@ -84,1 +84,1 @@\n-static void normalize_as_tlab_and_send_allocation_samples(const Klass* klass, intptr_t obj_alloc_size_bytes, Thread* thread) {\n+static void normalize_as_tlab_and_send_allocation_samples(const Klass* klass, int64_t obj_alloc_size_bytes, Thread* thread) {\n@@ -91,1 +91,1 @@\n-  const intptr_t tlab_size_bytes = estimate_tlab_size_bytes(thread);\n+  const int64_t tlab_size_bytes = estimate_tlab_size_bytes(thread);\n@@ -106,1 +106,1 @@\n-    normalize_as_tlab_and_send_allocation_samples(klass, static_cast<intptr_t>(alloc_size), thread);\n+    normalize_as_tlab_and_send_allocation_samples(klass, static_cast<int64_t>(alloc_size), thread);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrObjectAllocationSample.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+class Thread;\n+\n@@ -46,1 +48,1 @@\n-class JfrEpochQueue : public JfrCHeapObj {\n+class JfrEpochQueue : public ElementPolicy<typename JfrEpochStorage::Buffer> {\n@@ -56,0 +58,1 @@\n+  BufferPtr renew(size_t size, Thread* thread);\n@@ -59,2 +62,0 @@\n-  typedef ElementPolicy<Buffer> Policy;\n-  Policy _policy;\n@@ -63,1 +64,0 @@\n-\n@@ -68,1 +68,1 @@\n-    Policy& _policy;\n+    JfrEpochQueue& _queue;\n@@ -71,1 +71,1 @@\n-    ElementDispatch(Callback& callback, Policy& policy);\n+    ElementDispatch(Callback& callback, JfrEpochQueue& queue);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrEpochQueue.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-\n@@ -35,1 +34,1 @@\n-JfrEpochQueue<ElementPolicy>::JfrEpochQueue() : _policy(), _storage(NULL) {}\n+JfrEpochQueue<ElementPolicy>::JfrEpochQueue() : _storage(NULL) {}\n@@ -49,0 +48,16 @@\n+template <template <typename> class ElementPolicy>\n+inline typename JfrEpochQueue<ElementPolicy>::BufferPtr\n+JfrEpochQueue<ElementPolicy>::renew(size_t size, Thread* thread) {\n+  assert(thread != nullptr, \"invariant\");\n+  BufferPtr buffer = this->thread_local_storage(thread);\n+  if (buffer != nullptr) {\n+    _storage->release(buffer);\n+  }\n+  buffer = _storage->acquire(size, thread);\n+  assert(buffer != nullptr, \"invariant\");\n+  assert(buffer->free_size() >= size, \"invariant\");\n+  this->set_thread_local_storage(buffer, thread);\n+  assert(this->thread_local_storage(thread) == buffer, \"invariant\");\n+  return buffer;\n+}\n+\n@@ -52,1 +67,1 @@\n-  assert(_policy.element_size(t) == element_size, \"invariant\");\n+  assert(this->element_size(t) == element_size, \"invariant\");\n@@ -54,2 +69,2 @@\n-  BufferPtr buffer = _policy.thread_local_storage(thread);\n-  if (buffer == NULL) {\n+  BufferPtr buffer = this->thread_local_storage(thread);\n+  if (buffer == nullptr) {\n@@ -57,1 +72,1 @@\n-    _policy.set_thread_local_storage(buffer, thread);\n+    this->set_thread_local_storage(buffer, thread);\n@@ -61,1 +76,1 @@\n-    _policy.set_thread_local_storage(buffer, thread);\n+    this->set_thread_local_storage(buffer, thread);\n@@ -64,1 +79,1 @@\n-  assert(_policy.thread_local_storage(thread) == buffer, \"invariant\");\n+  assert(this->thread_local_storage(thread) == buffer, \"invariant\");\n@@ -70,2 +85,2 @@\n-  assert(t != NULL, \"invariant\");\n-  size_t element_size = _policy.element_size(t);\n+  assert(t != nullptr, \"invariant\");\n+  size_t element_size = this->element_size(t);\n@@ -73,2 +88,2 @@\n-  assert(buffer != NULL, \"invariant\");\n-  _policy.store_element(t, buffer);\n+  assert(buffer != nullptr, \"invariant\");\n+  this->store_element(t, buffer);\n@@ -80,2 +95,2 @@\n-JfrEpochQueue<ElementPolicy>::ElementDispatch<Callback>::ElementDispatch(Callback& callback, JfrEpochQueue<ElementPolicy>::Policy& policy) :\n-  _callback(callback),_policy(policy) {}\n+JfrEpochQueue<ElementPolicy>::ElementDispatch<Callback>::ElementDispatch(Callback& callback, JfrEpochQueue<ElementPolicy>& queue) :\n+  _callback(callback), _queue(queue) {}\n@@ -86,2 +101,2 @@\n-  assert(element != NULL, \"invariant\");\n-  return _policy(element, _callback, previous_epoch);\n+  assert(element != nullptr, \"invariant\");\n+  return _queue(element, _callback, previous_epoch);\n@@ -95,1 +110,1 @@\n-  ElementDispatcher element_dispatcher(callback, _policy);\n+  ElementDispatcher element_dispatcher(callback, *this);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrEpochQueue.inline.hpp","additions":32,"deletions":17,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -119,1 +119,5 @@\n-    return 0 == Atomic::sub(&_refs, 1, memory_order_relaxed);\n+    if (0 == Atomic::sub(&_refs, 1, memory_order_release)) {\n+      OrderAccess::acquire();\n+      return true;\n+    }\n+    return false;\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrRefCountPointer.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-    cardtable_shift = CardTable::card_shift;\n+    cardtable_shift = CardTable::card_shift();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+  _show_chunkfreelist(\"chunkfreelist\", \"Shows details about global chunk free lists (ChunkManager).\", \"BOOLEAN\", false, \"false\"),\n@@ -56,0 +57,1 @@\n+  _dcmdparser.add_dcmd_option(&_show_chunkfreelist);\n@@ -99,0 +101,1 @@\n+    if (_show_chunkfreelist.value())   flags |= (int)MetaspaceReporter::Option::ShowChunkFreeList;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+  DCmdArgument<bool> _show_chunkfreelist;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -303,0 +303,18 @@\n+  \/\/ -- Print Chunkmanager details.\n+  if ((flags & (int)Option::ShowChunkFreeList) > 0) {\n+    out->cr();\n+    out->print_cr(\"Chunk freelist details:\");\n+    if (Metaspace::using_class_space()) {\n+      out->print_cr(\"   Non-Class:\");\n+    }\n+    ChunkManager::chunkmanager_nonclass()->print_on(out);\n+    out->cr();\n+    if (Metaspace::using_class_space()) {\n+      out->print_cr(\"       Class:\");\n+      ChunkManager::chunkmanager_class()->print_on(out);\n+      out->cr();\n+    }\n+  }\n+  out->cr();\n+\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -47,1 +47,3 @@\n-    ShowClasses                 = (1 << 4)\n+    ShowClasses                 = (1 << 4),\n+    \/\/ Print details about the underlying virtual spaces.\n+    ShowChunkFreeList           = (1 << 5)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1181,1 +1181,0 @@\n-  int argc;\n@@ -1184,1 +1183,1 @@\n-  \/\/ tag at index, start..end in range [0..argc],\n+  \/\/ tag at index, start..end in range [0..this_cp->bootstrap_argument_count],\n@@ -1190,1 +1189,1 @@\n-      (end_arg > (argc = this_cp->bootstrap_argument_count_at(index))) ||\n+      (end_arg > this_cp->bootstrap_argument_count_at(index)) ||\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -144,0 +144,1 @@\n+bool InstanceKlass::_finalization_enabled = true;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -332,0 +332,3 @@\n+  \/\/ Controls finalizer registration\n+  static bool _finalization_enabled;\n+\n@@ -333,0 +336,7 @@\n+\n+  \/\/ Queries finalization state\n+  static bool is_finalization_enabled() { return _finalization_enabled; }\n+\n+  \/\/ Sets finalization state\n+  static void set_finalization_enabled(bool val) { _finalization_enabled = val; }\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -327,8 +327,5 @@\n-#ifdef ASSERT\n-  {\n-    ResourceMark rm;\n-    assert(is_native() && bcp == code_base() || contains(bcp) || VMError::is_error_reported(),\n-           \"bcp doesn't belong to this method: bcp: \" INTPTR_FORMAT \", method: %s\",\n-           p2i(bcp), name_and_sig_as_C_string());\n-  }\n-#endif\n+  \/\/ Do not have a ResourceMark here because AsyncGetCallTrace stack walking code\n+  \/\/ may call this after interrupting a nested ResourceMark.\n+  assert(is_native() && bcp == code_base() || contains(bcp) || VMError::is_error_reported(),\n+         \"bcp doesn't belong to this method. bcp: \" INTPTR_FORMAT, p2i(bcp));\n+\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-Node *AddINode::Ideal(PhaseGVN *phase, bool can_reshape) {\n+Node* AddNode::IdealIL(PhaseGVN* phase, bool can_reshape, BasicType bt) {\n@@ -272,1 +272,1 @@\n-  if ( op1 == Op_AddI && op2 == Op_SubI ) {\n+  if (op1 == Op_Add(bt) && op2 == Op_Sub(bt)) {\n@@ -279,5 +279,6 @@\n-  if( op1 == Op_SubI ) {\n-    const Type *t_sub1 = phase->type( in1->in(1) );\n-    const Type *t_2    = phase->type( in2        );\n-    if( t_sub1->singleton() && t_2->singleton() && t_sub1 != Type::TOP && t_2 != Type::TOP )\n-      return new SubINode(phase->makecon( add_ring( t_sub1, t_2 ) ), in1->in(2) );\n+  if (op1 == Op_Sub(bt)) {\n+    const Type* t_sub1 = phase->type(in1->in(1));\n+    const Type* t_2    = phase->type(in2       );\n+    if (t_sub1->singleton() && t_2->singleton() && t_sub1 != Type::TOP && t_2 != Type::TOP) {\n+      return SubNode::make(phase->makecon(add_ring(t_sub1, t_2)), in1->in(2), bt);\n+    }\n@@ -285,1 +286,1 @@\n-    if( op2 == Op_SubI ) {\n+    if (op2 == Op_Sub(bt)) {\n@@ -289,3 +290,3 @@\n-      Node *sub  = new SubINode(NULL, NULL);\n-      sub->init_req(1, phase->transform(new AddINode(in1->in(1), in2->in(1) ) ));\n-      sub->init_req(2, phase->transform(new AddINode(in1->in(2), in2->in(2) ) ));\n+      Node* sub = SubNode::make(NULL, NULL, bt);\n+      sub->init_req(1, phase->transform(AddNode::make(in1->in(1), in2->in(1), bt)));\n+      sub->init_req(2, phase->transform(AddNode::make(in1->in(2), in2->in(2), bt)));\n@@ -295,3 +296,3 @@\n-    if( op2 == Op_AddI && in1->in(2) == in2->in(1) ) {\n-      assert(in1->in(1) != this && in2->in(2) != this,\"dead loop in AddINode::Ideal\");\n-      return new AddINode(in1->in(1), in2->in(2));\n+    if (op2 == Op_Add(bt) && in1->in(2) == in2->in(1)) {\n+      assert(in1->in(1) != this && in2->in(2) != this,\"dead loop in AddINode::Ideal\/AddLNode::Ideal\");\n+      return AddNode::make(in1->in(1), in2->in(2), bt);\n@@ -300,3 +301,3 @@\n-    if( op2 == Op_AddI && in1->in(2) == in2->in(2) ) {\n-      assert(in1->in(1) != this && in2->in(1) != this,\"dead loop in AddINode::Ideal\");\n-      return new AddINode(in1->in(1), in2->in(1));\n+    if (op2 == Op_Add(bt) && in1->in(2) == in2->in(2)) {\n+      assert(in1->in(1) != this && in2->in(1) != this,\"dead loop in AddINode::Ideal\/AddLNode::Ideal\");\n+      return AddNode::make(in1->in(1), in2->in(1), bt);\n@@ -305,3 +306,3 @@\n-    if( op2 == Op_SubI && in1->in(2) == in2->in(1) ) {\n-      assert(in1->in(1) != this && in2->in(2) != this,\"dead loop in AddINode::Ideal\");\n-      return new SubINode(in1->in(1), in2->in(2));\n+    if (op2 == Op_Sub(bt) && in1->in(2) == in2->in(1)) {\n+      assert(in1->in(1) != this && in2->in(2) != this,\"dead loop in AddINode::Ideal\/AddLNode::Ideal\");\n+      return SubNode::make(in1->in(1), in2->in(2), bt);\n@@ -310,3 +311,3 @@\n-    if( op2 == Op_SubI && in1->in(1) == in2->in(2) ) {\n-      assert(in1->in(2) != this && in2->in(1) != this,\"dead loop in AddINode::Ideal\");\n-      return new SubINode(in2->in(1), in1->in(2));\n+    if (op2 == Op_Sub(bt) && in1->in(1) == in2->in(2)) {\n+      assert(in1->in(2) != this && in2->in(1) != this,\"dead loop in AddINode::Ideal\/AddLNode::Ideal\");\n+      return SubNode::make(in2->in(1), in1->in(2), bt);\n@@ -317,2 +318,3 @@\n-  if( op2 == Op_SubI && phase->type(in2->in(1)) == TypeInt::ZERO )\n-    return new SubINode(in1, in2->in(2) );\n+  if (op2 == Op_Sub(bt) && phase->type(in2->in(1)) == TypeInteger::zero(bt)) {\n+    return SubNode::make(in1, in2->in(2), bt);\n+  }\n@@ -321,2 +323,3 @@\n-  if( op1 == Op_SubI && phase->type(in1->in(1)) == TypeInt::ZERO )\n-    return new SubINode( in2, in1->in(2) );\n+  if (op1 == Op_Sub(bt) && phase->type(in1->in(1)) == TypeInteger::zero(bt)) {\n+    return SubNode::make(in2, in1->in(2), bt);\n+  }\n@@ -325,1 +328,1 @@\n-  if (op1 == Op_MulI && op2 == Op_MulI) {\n+  if (op1 == Op_Mul(bt) && op2 == Op_Mul(bt)) {\n@@ -353,27 +356,2 @@\n-      Node* add = phase->transform(new AddINode(add_in1, add_in2));\n-      return new MulINode(mul_in, add);\n-    }\n-  }\n-\n-  \/\/ Convert (x>>>z)+y into (x+(y<<z))>>>z for small constant z and y.\n-  \/\/ Helps with array allocation math constant folding\n-  \/\/ See 4790063:\n-  \/\/ Unrestricted transformation is unsafe for some runtime values of 'x'\n-  \/\/ ( x ==  0, z == 1, y == -1 ) fails\n-  \/\/ ( x == -5, z == 1, y ==  1 ) fails\n-  \/\/ Transform works for small z and small negative y when the addition\n-  \/\/ (x + (y << z)) does not cross zero.\n-  \/\/ Implement support for negative y and (x >= -(y << z))\n-  \/\/ Have not observed cases where type information exists to support\n-  \/\/ positive y and (x <= -(y << z))\n-  if( op1 == Op_URShiftI && op2 == Op_ConI &&\n-      in1->in(2)->Opcode() == Op_ConI ) {\n-    jint z = phase->type( in1->in(2) )->is_int()->get_con() & 0x1f; \/\/ only least significant 5 bits matter\n-    jint y = phase->type( in2 )->is_int()->get_con();\n-\n-    if( z < 5 && -5 < y && y < 0 ) {\n-      const Type *t_in11 = phase->type(in1->in(1));\n-      if( t_in11 != Type::TOP && (t_in11->is_int()->_lo >= -(y << z)) ) {\n-        Node *a = phase->transform( new AddINode( in1->in(1), phase->intcon(y<<z) ) );\n-        return new URShiftINode( a, in1->in(2) );\n-      }\n+      Node* add = phase->transform(AddNode::make(add_in1, add_in2, bt));\n+      return MulNode::make(mul_in, add, bt);\n@@ -385,1 +363,1 @@\n-      ((op1 == Op_URShiftI && op2 == Op_LShiftI) || (op1 == Op_LShiftI && op2 == Op_URShiftI)) &&\n+      ((op1 == Op_URShift(bt) && op2 == Op_LShift(bt)) || (op1 == Op_LShift(bt) && op2 == Op_URShift(bt))) &&\n@@ -387,2 +365,2 @@\n-    Node* rshift = op1 == Op_URShiftI ? in1->in(2) : in2->in(2);\n-    Node* lshift = op1 == Op_URShiftI ? in2->in(2) : in1->in(2);\n+    Node* rshift = op1 == Op_URShift(bt) ? in1->in(2) : in2->in(2);\n+    Node* lshift = op1 == Op_URShift(bt) ? in2->in(2) : in1->in(2);\n@@ -392,0 +370,2 @@\n+      int bits = bt == T_INT ? 32 : 64;\n+      int mask = bt == T_INT ? 0x1F : 0x3F;\n@@ -394,2 +374,2 @@\n-          ((lshift_t->get_con() & 0x1F) == (32 - (rshift_t->get_con() & 0x1F)))) {\n-        return new RotateRightNode(in1->in(1), phase->intcon(rshift_t->get_con() & 0x1F), TypeInt::INT);\n+          ((lshift_t->get_con() & mask) == (bits - (rshift_t->get_con() & mask)))) {\n+        return new RotateRightNode(in1->in(1), phase->intcon(rshift_t->get_con() & mask), TypeInteger::bottom(bt));\n@@ -403,3 +383,3 @@\n-  if (op1 == Op_XorI && phase->type(in2) == TypeInt::ONE &&\n-      phase->type(in1->in(2)) == TypeInt::MINUS_1) {\n-    return new SubINode(phase->makecon(TypeInt::ZERO), in1->in(1));\n+  if (op1 == Op_Xor(bt) && phase->type(in2) == TypeInteger::one(bt) &&\n+      phase->type(in1->in(2)) == TypeInteger::minus_1(bt)) {\n+    return SubNode::make(phase->makecon(TypeInteger::zero(bt)), in1->in(1), bt);\n@@ -411,0 +391,35 @@\n+Node* AddINode::Ideal(PhaseGVN* phase, bool can_reshape) {\n+  Node* in1 = in(1);\n+  Node* in2 = in(2);\n+  int op1 = in1->Opcode();\n+  int op2 = in2->Opcode();\n+\n+  \/\/ Convert (x>>>z)+y into (x+(y<<z))>>>z for small constant z and y.\n+  \/\/ Helps with array allocation math constant folding\n+  \/\/ See 4790063:\n+  \/\/ Unrestricted transformation is unsafe for some runtime values of 'x'\n+  \/\/ ( x ==  0, z == 1, y == -1 ) fails\n+  \/\/ ( x == -5, z == 1, y ==  1 ) fails\n+  \/\/ Transform works for small z and small negative y when the addition\n+  \/\/ (x + (y << z)) does not cross zero.\n+  \/\/ Implement support for negative y and (x >= -(y << z))\n+  \/\/ Have not observed cases where type information exists to support\n+  \/\/ positive y and (x <= -(y << z))\n+  if (op1 == Op_URShiftI && op2 == Op_ConI &&\n+      in1->in(2)->Opcode() == Op_ConI) {\n+    jint z = phase->type(in1->in(2))->is_int()->get_con() & 0x1f; \/\/ only least significant 5 bits matter\n+    jint y = phase->type(in2)->is_int()->get_con();\n+\n+    if (z < 5 && -5 < y && y < 0) {\n+      const Type* t_in11 = phase->type(in1->in(1));\n+      if( t_in11 != Type::TOP && (t_in11->is_int()->_lo >= -(y << z))) {\n+        Node* a = phase->transform(new AddINode( in1->in(1), phase->intcon(y<<z)));\n+        return new URShiftINode(a, in1->in(2));\n+      }\n+    }\n+  }\n+\n+  return AddNode::IdealIL(phase, can_reshape, T_INT);\n+}\n+\n+\n@@ -454,118 +469,2 @@\n-Node *AddLNode::Ideal(PhaseGVN *phase, bool can_reshape) {\n-  Node* in1 = in(1);\n-  Node* in2 = in(2);\n-  int op1 = in1->Opcode();\n-  int op2 = in2->Opcode();\n-  \/\/ Fold (con1-x)+con2 into (con1+con2)-x\n-  if ( op1 == Op_AddL && op2 == Op_SubL ) {\n-    \/\/ Swap edges to try optimizations below\n-    in1 = in2;\n-    in2 = in(1);\n-    op1 = op2;\n-    op2 = in2->Opcode();\n-  }\n-  \/\/ Fold (con1-x)+con2 into (con1+con2)-x\n-  if( op1 == Op_SubL ) {\n-    const Type *t_sub1 = phase->type( in1->in(1) );\n-    const Type *t_2    = phase->type( in2        );\n-    if( t_sub1->singleton() && t_2->singleton() && t_sub1 != Type::TOP && t_2 != Type::TOP )\n-      return new SubLNode(phase->makecon( add_ring( t_sub1, t_2 ) ), in1->in(2) );\n-    \/\/ Convert \"(a-b)+(c-d)\" into \"(a+c)-(b+d)\"\n-    if( op2 == Op_SubL ) {\n-      \/\/ Check for dead cycle: d = (a-b)+(c-d)\n-      assert( in1->in(2) != this && in2->in(2) != this,\n-              \"dead loop in AddLNode::Ideal\" );\n-      Node *sub  = new SubLNode(NULL, NULL);\n-      sub->init_req(1, phase->transform(new AddLNode(in1->in(1), in2->in(1) ) ));\n-      sub->init_req(2, phase->transform(new AddLNode(in1->in(2), in2->in(2) ) ));\n-      return sub;\n-    }\n-    \/\/ Convert \"(a-b)+(b+c)\" into \"(a+c)\"\n-    if( op2 == Op_AddL && in1->in(2) == in2->in(1) ) {\n-      assert(in1->in(1) != this && in2->in(2) != this,\"dead loop in AddLNode::Ideal\");\n-      return new AddLNode(in1->in(1), in2->in(2));\n-    }\n-    \/\/ Convert \"(a-b)+(c+b)\" into \"(a+c)\"\n-    if( op2 == Op_AddL && in1->in(2) == in2->in(2) ) {\n-      assert(in1->in(1) != this && in2->in(1) != this,\"dead loop in AddLNode::Ideal\");\n-      return new AddLNode(in1->in(1), in2->in(1));\n-    }\n-    \/\/ Convert \"(a-b)+(b-c)\" into \"(a-c)\"\n-    if( op2 == Op_SubL && in1->in(2) == in2->in(1) ) {\n-      assert(in1->in(1) != this && in2->in(2) != this,\"dead loop in AddLNode::Ideal\");\n-      return new SubLNode(in1->in(1), in2->in(2));\n-    }\n-    \/\/ Convert \"(a-b)+(c-a)\" into \"(c-b)\"\n-    if( op2 == Op_SubL && in1->in(1) == in2->in(2) ) {\n-      assert(in1->in(2) != this && in2->in(1) != this,\"dead loop in AddLNode::Ideal\");\n-      return new SubLNode(in2->in(1), in1->in(2));\n-    }\n-  }\n-\n-  \/\/ Convert \"x+(0-y)\" into \"(x-y)\"\n-  if( op2 == Op_SubL && phase->type(in2->in(1)) == TypeLong::ZERO )\n-    return new SubLNode( in1, in2->in(2) );\n-\n-  \/\/ Convert \"(0-y)+x\" into \"(x-y)\"\n-  if( op1 == Op_SubL && phase->type(in1->in(1)) == TypeLong::ZERO )\n-    return new SubLNode( in2, in1->in(2) );\n-\n-  \/\/ Associative\n-  if (op1 == Op_MulL && op2 == Op_MulL) {\n-    Node* add_in1 = NULL;\n-    Node* add_in2 = NULL;\n-    Node* mul_in = NULL;\n-\n-    if (in1->in(1) == in2->in(1)) {\n-      \/\/ Convert \"a*b+a*c into a*(b+c)\n-      add_in1 = in1->in(2);\n-      add_in2 = in2->in(2);\n-      mul_in = in1->in(1);\n-    } else if (in1->in(2) == in2->in(1)) {\n-      \/\/ Convert a*b+b*c into b*(a+c)\n-      add_in1 = in1->in(1);\n-      add_in2 = in2->in(2);\n-      mul_in = in1->in(2);\n-    } else if (in1->in(2) == in2->in(2)) {\n-      \/\/ Convert a*c+b*c into (a+b)*c\n-      add_in1 = in1->in(1);\n-      add_in2 = in2->in(1);\n-      mul_in = in1->in(2);\n-    } else if (in1->in(1) == in2->in(2)) {\n-      \/\/ Convert a*b+c*a into a*(b+c)\n-      add_in1 = in1->in(2);\n-      add_in2 = in2->in(1);\n-      mul_in = in1->in(1);\n-    }\n-\n-    if (mul_in != NULL) {\n-      Node* add = phase->transform(new AddLNode(add_in1, add_in2));\n-      return new MulLNode(mul_in, add);\n-    }\n-  }\n-\n-  \/\/ Convert (x >>> rshift) + (x << lshift) into RotateRight(x, rshift)\n-  if (Matcher::match_rule_supported(Op_RotateRight) &&\n-      ((op1 == Op_URShiftL && op2 == Op_LShiftL) || (op1 == Op_LShiftL && op2 == Op_URShiftL)) &&\n-      in1->in(1) != NULL && in1->in(1) == in2->in(1)) {\n-    Node* rshift = op1 == Op_URShiftL ? in1->in(2) : in2->in(2);\n-    Node* lshift = op1 == Op_URShiftL ? in2->in(2) : in1->in(2);\n-    if (rshift != NULL && lshift != NULL) {\n-      const TypeInt* rshift_t = phase->type(rshift)->isa_int();\n-      const TypeInt* lshift_t = phase->type(lshift)->isa_int();\n-      if (lshift_t != NULL && lshift_t->is_con() &&\n-          rshift_t != NULL && rshift_t->is_con() &&\n-          ((lshift_t->get_con() & 0x3F) == (64 - (rshift_t->get_con() & 0x3F)))) {\n-        return new RotateRightNode(in1->in(1), phase->intcon(rshift_t->get_con() & 0x3F), TypeLong::LONG);\n-      }\n-    }\n-  }\n-\n-  \/\/ Convert (~x+1) into -x. Note there isn't a bitwise not bytecode,\n-  \/\/ \"~x\" would typically represented as \"x^(-1)\", so (~x+1) will\n-  \/\/ be (x^(-1))+1\n-  if (op1 == Op_XorL && phase->type(in2) == TypeLong::ONE &&\n-      phase->type(in1->in(2)) == TypeLong::MINUS_1) {\n-    return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(1));\n-  }\n-  return AddNode::Ideal(phase, can_reshape);\n+Node* AddLNode::Ideal(PhaseGVN* phase, bool can_reshape) {\n+  return AddNode::IdealIL(phase, can_reshape, T_LONG);\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":80,"deletions":181,"binary":false,"changes":261,"status":"modified"},{"patch":"@@ -54,1 +54,2 @@\n-  virtual Node *Ideal(PhaseGVN *phase, bool can_reshape);\n+  virtual Node* Ideal(PhaseGVN* phase, bool can_reshape);\n+  Node* IdealIL(PhaseGVN* phase, bool can_reshape, BasicType bt);\n@@ -77,4 +78,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n@@ -95,1 +92,1 @@\n-  virtual Node *Ideal(PhaseGVN *phase, bool can_reshape);\n+  virtual Node* Ideal(PhaseGVN* phase, bool can_reshape);\n@@ -97,4 +94,1 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n+\n@@ -115,1 +109,1 @@\n-  virtual Node *Ideal(PhaseGVN *phase, bool can_reshape);\n+  virtual Node* Ideal(PhaseGVN* phase, bool can_reshape);\n@@ -117,4 +111,1 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n+\n","filename":"src\/hotspot\/share\/opto\/addnode.hpp","additions":6,"deletions":15,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-          range(0, 64)                                                      \\\n+          range(0, 256)                                                     \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -693,1 +693,1 @@\n-  case vmIntrinsics::_VectorBroadcastCoerced:\n+  case vmIntrinsics::_VectorFromBitsCoerced:\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,4 +63,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n@@ -107,4 +103,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n@@ -128,4 +120,1 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n+\n","filename":"src\/hotspot\/share\/opto\/castnode.hpp","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2524,1 +2524,1 @@\n-          in(0)->as_BaseCountedLoop()->operates_on(bt, true) &&\n+          in(0)->as_BaseCountedLoop()->bt() == bt &&\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -431,0 +431,1 @@\n+macro(VectorLongToMask)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3464,1 +3464,1 @@\n-    assert(!n->as_Loop()->is_transformed_long_inner_loop() || _loop_opts_cnt == 0, \"should have been turned into a counted loop\");\n+    assert(!n->as_Loop()->is_loop_nest_inner_loop() || _loop_opts_cnt == 0, \"should have been turned into a counted loop\");\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -655,2 +655,2 @@\n-  case vmIntrinsics::_VectorBroadcastCoerced:\n-    return inline_vector_broadcast_coerced();\n+  case vmIntrinsics::_VectorFromBitsCoerced:\n+    return inline_vector_frombits_coerced();\n@@ -5430,1 +5430,1 @@\n-        Node* vmask      = _gvn.transform(new VectorMaskGenNode(ConvI2X(casted_length), TypeVect::VECTMASK, elem_bt));\n+        Node* vmask      = _gvn.transform(VectorMaskGenNode::make(ConvI2X(casted_length), elem_bt));\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-  bool inline_vector_broadcast_coerced();\n+  bool inline_vector_frombits_coerced();\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -558,0 +558,1 @@\n+  Node* _data_dependency_on; \/\/ The projection into the loop on which data nodes are dependent or NULL otherwise\n@@ -659,1 +660,2 @@\n-    _lpt(lpt), _phase(lpt->_phase)\n+    _lpt(lpt), _phase(lpt->_phase),\n+    _data_dependency_on(NULL)\n@@ -667,1 +669,6 @@\n-      \/\/ as non loop invariatnt.\n+      \/\/ as non-loop-invariant.\n+      \/\/ Loop predication could create new nodes for which the below\n+      \/\/ invariant information is missing. Mark the 'entry' node to\n+      \/\/ later check again if a node needs to be treated as non-loop-\n+      \/\/ invariant as well.\n+      _data_dependency_on = entry;\n@@ -686,0 +693,6 @@\n+  \/\/ Did we explicitly mark some nodes non-loop-invariant? If so, return the entry node on which some data nodes\n+  \/\/ are dependent that prevent loop predication. Otherwise, return NULL.\n+  Node* data_dependency_on() {\n+    return _data_dependency_on;\n+  }\n+\n@@ -731,1 +744,1 @@\n-  if (!(cmp->is_Cmp() && cmp->operates_on(bt, false))) {\n+  if (cmp->Opcode() != Op_Cmp_unsigned(bt)) {\n@@ -760,2 +773,10 @@\n-  if (is_range_check_if(iff, phase, T_INT, iv, range, offset, scale)) {\n-    if (!invar.is_invariant(range)) {\n+  Compile* C = Compile::current();\n+  const uint old_unique_idx = C->unique();\n+  if (!is_range_check_if(iff, phase, T_INT, iv, range, offset, scale)) {\n+    return false;\n+  }\n+  if (!invar.is_invariant(range)) {\n+    return false;\n+  }\n+  if (offset != NULL) {\n+    if (!invar.is_invariant(offset)) { \/\/ offset must be invariant\n@@ -764,2 +785,8 @@\n-    if (offset && !invar.is_invariant(offset)) { \/\/ offset must be invariant\n-      return false;\n+    Node* data_dependency_on = invar.data_dependency_on();\n+    if (data_dependency_on != NULL && old_unique_idx < C->unique()) {\n+      \/\/ 'offset' node was newly created in is_range_check_if(). Check that it does not depend on the entry projection\n+      \/\/ into the loop. If it does, we cannot perform loop predication (see Invariant::Invariant()).\n+      assert(!offset->is_CFG(), \"offset must be a data node\");\n+      if (_phase->get_ctrl(offset) == data_dependency_on) {\n+        return false;\n+      }\n@@ -767,0 +794,1 @@\n+  }\n@@ -768,12 +796,11 @@\n-    if (offset && phase->has_ctrl(offset)) {\n-      Node* offset_ctrl = phase->get_ctrl(offset);\n-      if (phase->get_loop(predicate_proj) == phase->get_loop(offset_ctrl) &&\n-          phase->is_dominator(predicate_proj, offset_ctrl)) {\n-        \/\/ If the control of offset is loop predication promoted by previous pass,\n-        \/\/ then it will lead to cyclic dependency.\n-        \/\/ Previously promoted loop predication is in the same loop of predication\n-        \/\/ point.\n-        \/\/ This situation can occur when pinning nodes too conservatively - can we do better?\n-        assert(false, \"cyclic dependency prevents range check elimination, idx: offset %d, offset_ctrl %d, predicate_proj %d\",\n-               offset->_idx, offset_ctrl->_idx, predicate_proj->_idx);\n-      }\n+  if (offset && phase->has_ctrl(offset)) {\n+    Node* offset_ctrl = phase->get_ctrl(offset);\n+    if (phase->get_loop(predicate_proj) == phase->get_loop(offset_ctrl) &&\n+        phase->is_dominator(predicate_proj, offset_ctrl)) {\n+      \/\/ If the control of offset is loop predication promoted by previous pass,\n+      \/\/ then it will lead to cyclic dependency.\n+      \/\/ Previously promoted loop predication is in the same loop of predication\n+      \/\/ point.\n+      \/\/ This situation can occur when pinning nodes too conservatively - can we do better?\n+      assert(false, \"cyclic dependency prevents range check elimination, idx: offset %d, offset_ctrl %d, predicate_proj %d\",\n+             offset->_idx, offset_ctrl->_idx, predicate_proj->_idx);\n@@ -781,2 +808,0 @@\n-#endif\n-    return true;\n@@ -784,1 +809,2 @@\n-  return false;\n+#endif\n+  return true;\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":48,"deletions":22,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -1068,1 +1068,1 @@\n-bool IdealLoopTree::policy_range_check(PhaseIdealLoop* phase, bool provisional) const {\n+bool IdealLoopTree::policy_range_check(PhaseIdealLoop* phase, bool provisional, BasicType bt) const {\n@@ -1090,1 +1090,1 @@\n-  BasicType bt = cl->bt();\n+  assert(!cl->is_LongCountedLoop() || bt == T_LONG, \"only long range checks in long counted loops\");\n@@ -1138,1 +1138,1 @@\n-        if (!phase->is_scaled_iv_plus_offset(rc_exp, trip_counter, NULL, NULL)) {\n+        if (!phase->is_scaled_iv_plus_offset(rc_exp, trip_counter, NULL, NULL, bt)) {\n@@ -1148,1 +1148,3 @@\n-        return provisional || phase->may_require_nodes(est_loop_clone_sz(2));\n+        \/\/ Long range checks cause the loop to be transformed in a loop nest which only causes a fixed number of nodes\n+        \/\/ to be added\n+        return provisional || bt == T_LONG || phase->may_require_nodes(est_loop_clone_sz(2));\n@@ -2511,0 +2513,11 @@\n+bool PhaseIdealLoop::is_iv(Node* exp, Node* iv, BasicType bt) {\n+  if (exp == iv) {\n+    return true;\n+  }\n+\n+  if (bt == T_LONG && iv->bottom_type()->isa_int() && exp->Opcode() == Op_ConvI2L && exp->in(1) == iv) {\n+    return true;\n+  }\n+  return false;\n+}\n+\n@@ -2513,1 +2526,1 @@\n-bool PhaseIdealLoop::is_scaled_iv(Node* exp, Node* iv, jlong* p_scale, BasicType bt) {\n+bool PhaseIdealLoop::is_scaled_iv(Node* exp, Node* iv, jlong* p_scale, BasicType bt, bool* converted) {\n@@ -2516,1 +2529,1 @@\n-  if (exp == iv) {\n+  if (is_iv(exp, iv, bt)) {\n@@ -2522,0 +2535,7 @@\n+  if (bt == T_LONG && iv->bottom_type()->isa_int() && exp->Opcode() == Op_ConvI2L) {\n+    exp = exp->in(1);\n+    bt = T_INT;\n+    if (converted != NULL) {\n+      *converted = true;\n+    }\n+  }\n@@ -2524,2 +2544,2 @@\n-  if ((opc == Op_MulI || opc == Op_MulL) && exp->operates_on(bt, true)) {\n-    if (exp->in(1)->uncast() == iv && exp->in(2)->is_Con()) {\n+  if (opc == Op_Mul(bt)) {\n+    if (is_iv(exp->in(1)->uncast(), iv, bt) && exp->in(2)->is_Con()) {\n@@ -2531,1 +2551,1 @@\n-    if (exp->in(2)->uncast() == iv && exp->in(1)->is_Con()) {\n+    if (is_iv(exp->in(2)->uncast(), iv, bt) && exp->in(1)->is_Con()) {\n@@ -2537,2 +2557,2 @@\n-  } else if (exp->is_LShift() && exp->operates_on(bt, true)) {\n-    if (exp->in(1)->uncast() == iv && exp->in(2)->is_Con()) {\n+  } else if (opc == Op_LShift(bt)) {\n+    if (is_iv(exp->in(1)->uncast(), iv, bt) && exp->in(2)->is_Con()) {\n@@ -2555,1 +2575,1 @@\n-bool PhaseIdealLoop::is_scaled_iv_plus_offset(Node* exp, Node* iv, jlong* p_scale, Node** p_offset, BasicType bt, int depth) {\n+bool PhaseIdealLoop::is_scaled_iv_plus_offset(Node* exp, Node* iv, jlong* p_scale, Node** p_offset, BasicType bt, bool* converted, int depth) {\n@@ -2557,1 +2577,1 @@\n-  if (is_scaled_iv(exp, iv, p_scale, bt)) {\n+  if (is_scaled_iv(exp, iv, p_scale, bt, converted)) {\n@@ -2566,2 +2586,3 @@\n-  if (exp->is_Add() && exp->operates_on(bt, true)) {\n-    if (is_scaled_iv(exp->in(1), iv, p_scale, bt)) {\n+  int opc = exp->Opcode();\n+  if (opc == Op_Add(bt)) {\n+    if (is_scaled_iv(exp->in(1), iv, p_scale, bt, converted)) {\n@@ -2573,1 +2594,1 @@\n-    if (is_scaled_iv(exp->in(2), iv, p_scale, bt)) {\n+    if (is_scaled_iv(exp->in(2), iv, p_scale, bt, converted)) {\n@@ -2583,1 +2604,1 @@\n-                                   p_offset != NULL ? &offset2 : NULL, bt, depth+1)) {\n+                                   p_offset != NULL ? &offset2 : NULL, bt, converted, depth+1)) {\n@@ -2593,2 +2614,2 @@\n-  } else if (exp->is_Sub() && exp->operates_on(bt, true)) {\n-    if (is_scaled_iv(exp->in(1), iv, p_scale, bt)) {\n+  } else if (opc == Op_Sub(bt)) {\n+    if (is_scaled_iv(exp->in(1), iv, p_scale, bt, converted)) {\n@@ -2605,1 +2626,1 @@\n-    if (is_scaled_iv(exp->in(2), iv, p_scale, bt)) {\n+    if (is_scaled_iv(exp->in(2), iv, p_scale, bt, converted)) {\n@@ -3434,0 +3455,2 @@\n+    } else if (_head->is_LongCountedLoop()) {\n+      phase->create_loop_nest(this, old_new);\n@@ -3477,1 +3500,2 @@\n-  bool should_rce    = policy_range_check(phase, false);\n+  bool should_rce    = policy_range_check(phase, false, T_INT);\n+  bool should_rce_long = policy_range_check(phase, false, T_LONG);\n@@ -3492,0 +3516,3 @@\n+      if (should_rce_long && phase->create_loop_nest(this, old_new)) {\n+        return true;\n+      }\n@@ -3533,0 +3560,3 @@\n+    if (should_rce_long) {\n+      phase->create_loop_nest(this, old_new);\n+    }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":51,"deletions":21,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  if (is_BaseCountedLoop() && operates_on(bt, false)) {\n+  if (is_BaseCountedLoop() && as_BaseCountedLoop()->bt() == bt) {\n@@ -528,4 +528,10 @@\n-Node* PhaseIdealLoop::long_loop_replace_long_iv(Node* iv_to_replace, Node* inner_iv, Node* outer_phi, Node* inner_head) {\n-  Node* iv_as_long = new ConvI2LNode(inner_iv, TypeLong::INT);\n-  register_new_node(iv_as_long, inner_head);\n-  Node* iv_replacement = new AddLNode(outer_phi, iv_as_long);\n+Node* PhaseIdealLoop::loop_nest_replace_iv(Node* iv_to_replace, Node* inner_iv, Node* outer_phi, Node* inner_head,\n+                                           BasicType bt) {\n+  Node* iv_as_long;\n+  if (bt == T_LONG) {\n+    iv_as_long = new ConvI2LNode(inner_iv, TypeLong::INT);\n+    register_new_node(iv_as_long, inner_head);\n+  } else {\n+    iv_as_long = inner_iv;\n+  }\n+  Node* iv_replacement = AddNode::make(outer_phi, iv_as_long, bt);\n@@ -765,1 +771,4 @@\n-bool PhaseIdealLoop::transform_long_counted_loop(IdealLoopTree* loop, Node_List &old_new) {\n+\/\/\n+\/\/ The same logic is used to transform an int counted loop that contains long range checks into a loop nest of 2 int\n+\/\/ loops with long range checks transformed to int range checks in the inner loop.\n+bool PhaseIdealLoop::create_loop_nest(IdealLoopTree* loop, Node_List &old_new) {\n@@ -768,1 +777,1 @@\n-  if (loop->_child != NULL || !x->is_LongCountedLoop() || x->as_Loop()->is_transformed_long_outer_loop()) {\n+  if (loop->_child != NULL || !x->is_BaseCountedLoop() || x->as_Loop()->is_loop_nest_outer_loop()) {\n@@ -772,1 +781,6 @@\n-  check_long_counted_loop(loop, x);\n+  if (x->is_CountedLoop() && !x->as_CountedLoop()->is_main_loop() && !x->as_CountedLoop()->is_normal_loop()) {\n+    return false;\n+  }\n+\n+  BaseCountedLoopNode* head = x->as_BaseCountedLoop();\n+  BasicType bt = x->as_BaseCountedLoop()->bt();\n@@ -774,1 +788,1 @@\n-  LongCountedLoopNode* head = x->as_LongCountedLoop();\n+  check_counted_loop_shape(loop, x, bt);\n@@ -777,1 +791,3 @@\n-  Atomic::inc(&_long_loop_candidates);\n+  if (bt == T_LONG) {\n+    Atomic::inc(&_long_loop_candidates);\n+  }\n@@ -784,0 +800,1 @@\n+    assert(bt == T_LONG, \"only for long loops\");\n@@ -791,1 +808,1 @@\n-  if (StressLongCountedLoop > 0) {\n+  if (bt == T_LONG && StressLongCountedLoop > 0) {\n@@ -817,3 +834,3 @@\n-  const TypeLong* phi_t = phi->bottom_type()->is_long();\n-  assert(phi_t->_hi >= phi_t->_lo, \"dead phi?\");\n-  iters_limit = (int)MIN2((julong)iters_limit, (julong)(phi_t->_hi - phi_t->_lo));\n+  const TypeInteger* phi_t = phi->bottom_type()->is_integer(bt);\n+  assert(phi_t->hi_as_long() >= phi_t->lo_as_long(), \"dead phi?\");\n+  iters_limit = checked_cast<int>(MIN2((julong)iters_limit, (julong)(phi_t->hi_as_long() - phi_t->lo_as_long())));\n@@ -821,5 +838,3 @@\n-  LongCountedLoopEndNode* exit_test = head->loopexit();\n-  BoolTest::mask bt = exit_test->test_trip();\n-\n-  \/\/ We need a safepoint to insert empty predicates for the inner loop.\n-  SafePointNode* safepoint = find_safepoint(back_control, x, loop);\n+  IfNode* exit_test = head->loopexit();\n+  BoolTest::mask mask = exit_test->as_BaseCountedLoopEnd()->test_trip();\n+  Node* cmp = exit_test->as_BaseCountedLoopEnd()->cmp_node();\n@@ -828,3 +843,0 @@\n-  Node* exit_branch = exit_test->proj_out(false);\n-  Node* entry_control = x->in(LoopNode::EntryControl);\n-  Node* cmp = exit_test->cmp_node();\n@@ -835,0 +847,19 @@\n+  if (bt == T_INT) {\n+    \/\/ The only purpose of creating a loop nest is to handle long range checks. If there are none, do not proceed further.\n+    if (range_checks.size() == 0) {\n+      return false;\n+    }\n+  }\n+\n+  \/\/ We need a safepoint to insert empty predicates for the inner loop.\n+  SafePointNode* safepoint;\n+  if (bt == T_INT && head->as_CountedLoop()->is_strip_mined()) {\n+    \/\/ Loop is strip mined: use the safepoint of the outer strip mined loop\n+    strip_mined_nest_back_to_counted_loop(loop, head, back_control, exit_test, safepoint);\n+  } else {\n+    safepoint = find_safepoint(back_control, x, loop);\n+  }\n+\n+  Node* exit_branch = exit_test->proj_out(false);\n+  Node* entry_control = head->in(LoopNode::EntryControl);\n+\n@@ -870,1 +901,1 @@\n-    inner_iters_max = MaxNode::max_diff_with_zero(limit, outer_phi, TypeLong::LONG, _igvn);\n+    inner_iters_max = MaxNode::max_diff_with_zero(limit, outer_phi, TypeInteger::bottom(bt), _igvn);\n@@ -872,1 +903,1 @@\n-    inner_iters_max = MaxNode::max_diff_with_zero(outer_phi, limit, TypeLong::LONG, _igvn);\n+    inner_iters_max = MaxNode::max_diff_with_zero(outer_phi, limit, TypeInteger::bottom(bt), _igvn);\n@@ -875,1 +906,1 @@\n-  Node* inner_iters_limit = _igvn.longcon(iters_limit);\n+  Node* inner_iters_limit = _igvn.integercon(iters_limit, bt);\n@@ -879,1 +910,1 @@\n-  Node* inner_iters_actual = MaxNode::unsigned_min(inner_iters_max, inner_iters_limit, TypeLong::make(0, iters_limit, Type::WidenMin), _igvn);\n+  Node* inner_iters_actual = MaxNode::unsigned_min(inner_iters_max, inner_iters_limit, TypeInteger::make(0, iters_limit, Type::WidenMin, bt), _igvn);\n@@ -881,2 +912,7 @@\n-  Node* inner_iters_actual_int = new ConvL2INode(inner_iters_actual);\n-  _igvn.register_new_node_with_optimizer(inner_iters_actual_int);\n+  Node* inner_iters_actual_int;\n+  if (bt == T_LONG) {\n+    inner_iters_actual_int = new ConvL2INode(inner_iters_actual);\n+    _igvn.register_new_node_with_optimizer(inner_iters_actual_int);\n+  } else {\n+    inner_iters_actual_int = inner_iters_actual;\n+  }\n@@ -922,1 +958,1 @@\n-  Node* iv_add = long_loop_replace_long_iv(phi, inner_phi, outer_phi, head);\n+  Node* iv_add = loop_nest_replace_iv(phi, inner_phi, outer_phi, head, bt);\n@@ -926,1 +962,1 @@\n-  long_loop_replace_long_iv(incr, inner_incr, outer_phi, head);\n+  loop_nest_replace_iv(incr, inner_incr, outer_phi, head, bt);\n@@ -986,0 +1022,5 @@\n+  if (bt == T_INT) {\n+    outer_phi = new ConvI2LNode(outer_phi);\n+    register_new_node(outer_phi, outer_head);\n+  }\n+\n@@ -1012,1 +1053,3 @@\n-  Atomic::inc(&_long_loop_nests);\n+  if (bt == T_LONG) {\n+    Atomic::inc(&_long_loop_nests);\n+  }\n@@ -1015,2 +1058,2 @@\n-  inner_head->mark_transformed_long_inner_loop();\n-  outer_head->mark_transformed_long_outer_loop();\n+  inner_head->mark_loop_nest_inner_loop();\n+  outer_head->mark_loop_nest_outer_loop();\n@@ -1021,0 +1064,62 @@\n+\/\/ Convert the strip mined loop nest back to a single loop with the safepoint right before the loop exit test\n+void PhaseIdealLoop::strip_mined_nest_back_to_counted_loop(IdealLoopTree* loop, const BaseCountedLoopNode* head,\n+                                                           Node* back_control, IfNode*& exit_test,\n+                                                           SafePointNode*& safepoint) {\n+  CountedLoopNode* cl = head->as_CountedLoop();\n+  cl->verify_strip_mined(1);\n+  safepoint = cl->outer_safepoint();\n+  CountedLoopEndNode* cle = cl->loopexit();\n+  OuterStripMinedLoopNode* outer_head = cl->outer_loop();\n+  OuterStripMinedLoopEndNode* outer_end = cl->outer_loop_end();\n+\n+  cl->clear_strip_mined();\n+\n+  _igvn.replace_input_of(cl, LoopNode::EntryControl, outer_head->in(LoopNode::EntryControl));\n+  _igvn.replace_input_of(outer_head, LoopNode::EntryControl, C->top());\n+  set_idom(cl, cl->in(LoopNode::EntryControl), dom_depth(cl));\n+\n+  Node* exit_bol = cle->in(1);\n+  Node *zero = _igvn.intcon(0);\n+  set_ctrl(zero, C->root());\n+  _igvn.replace_input_of(cle, 1, zero);\n+\n+  _igvn.replace_input_of(outer_end, 1, exit_bol);\n+\n+  assert(outer_head->in(LoopNode::LoopBackControl)->in(0) == outer_end, \"\");\n+  _igvn.replace_input_of(outer_head->in(LoopNode::LoopBackControl), 0, C->top());\n+  _igvn.replace_input_of(back_control, 0, outer_end);\n+  set_idom(back_control, outer_end, dom_depth(outer_end) + 1);\n+\n+  Unique_Node_List wq;\n+  wq.push(safepoint);\n+\n+  IdealLoopTree* outer_loop_ilt = get_loop(outer_head);\n+\n+  for (uint i = 0; i < wq.size(); i++) {\n+    Node* n = wq.at(i);\n+    for (uint j = 0; j < n->req(); ++j) {\n+      Node* in = n->in(j);\n+      if (in == NULL || in->is_CFG()) {\n+        continue;\n+      }\n+      if (get_loop(get_ctrl(in)) != outer_loop_ilt) {\n+        continue;\n+      }\n+      assert(!loop->_body.contains(in), \"\");\n+      loop->_body.push(in);\n+      wq.push(in);\n+    }\n+  }\n+\n+  set_loop(outer_end, loop);\n+  loop->_body.push(outer_end);\n+  set_loop(safepoint, loop);\n+  loop->_body.push(safepoint);\n+  set_loop(safepoint->in(0), loop);\n+  loop->_body.push(safepoint->in(0));\n+\n+  exit_test = outer_end;\n+\n+  outer_loop_ilt->_tail = C->top();\n+}\n+\n@@ -1167,1 +1272,2 @@\n-    bool ok = is_scaled_iv_plus_offset(rc_cmp->in(1), iv_add, &scale, &offset, T_LONG);\n+    bool converted = false;\n+    bool ok = is_scaled_iv_plus_offset(rc_cmp->in(1), iv_add, &scale, &offset, T_LONG, &converted);\n@@ -1176,0 +1282,1 @@\n+\n@@ -1177,0 +1284,36 @@\n+\n+    if (converted) {\n+      \/\/ This converts:\n+      \/\/ i*K + L <u64 R\n+      \/\/ with K an int into:\n+      \/\/ i*(long)K + L <u64 unsigned_min((long)max_jint + L + 1, R)\n+      \/\/ to protect against an overflow of i*K\n+      \/\/\n+      \/\/ Because if i*K overflows, there are K,L where:\n+      \/\/ i*K + L <u64 R is false\n+      \/\/ when\n+      \/\/ i*(long)K is > (long)max_jint and < R\n+      \/\/ and so i*(long)K + L <u64 R is true\n+      \/\/ As a consequence simply converting:\n+      \/\/ i*K + L <u64 R to i*(long)K + L <u64 R could cause incorrect execution\n+      \/\/\n+      \/\/ It's always true that:\n+      \/\/ i*K <u64 (long)max_jint + 1\n+      \/\/ which implies i*K + L <u64 (long)max_jint + 1 + L\n+      \/\/ As a consequence:\n+      \/\/ i*(long)K + L <u64 unsigned_min((long)max_jint + L + 1, R)\n+      \/\/ is always false in case of overflow of i*K\n+      \/\/\n+      \/\/ Note, there are K,L where i*K overflows and\n+      \/\/ i*K + L <u64 R is true, but\n+      \/\/ i*(long)K + L <u64 unsigned_min((long)max_jint + L + 1, R) is false\n+      \/\/ So this transformation could cause spurious deoptimizations and failed range check elimination\n+      \/\/ (but not incorrect execution) for unlikely corner cases with overflow\n+      Node* max_jint_plus_one_long = _igvn.longcon((jlong)max_jint + 1);\n+      set_ctrl(max_jint_plus_one_long, C->root());\n+      Node* max_range = new AddLNode(max_jint_plus_one_long, L);\n+      register_new_node(max_range, entry_control);\n+      R = MaxNode::unsigned_min(R, max_range, TypeLong::POS, _igvn);\n+      set_subtree_ctrl(R, true);\n+    }\n+\n@@ -1254,2 +1397,2 @@\n-LoopNode* PhaseIdealLoop::create_inner_head(IdealLoopTree* loop, LongCountedLoopNode* head,\n-                                            LongCountedLoopEndNode* exit_test) {\n+LoopNode* PhaseIdealLoop::create_inner_head(IdealLoopTree* loop, BaseCountedLoopNode* head,\n+                                            IfNode* exit_test) {\n@@ -1275,1 +1418,1 @@\n-void PhaseIdealLoop::check_long_counted_loop(IdealLoopTree* loop, Node* x) {\n+void PhaseIdealLoop::check_counted_loop_shape(IdealLoopTree* loop, Node* x, BasicType bt) {\n@@ -1279,1 +1422,1 @@\n-  BoolTest::mask bt = BoolTest::illegal;\n+  BoolTest::mask mask = BoolTest::illegal;\n@@ -1284,2 +1427,2 @@\n-  Node* cmp = loop_exit_test(back_control, loop, incr, limit, bt, cl_prob);\n-  assert(cmp != NULL && cmp->Opcode() == Op_CmpL, \"no exit test\");\n+  Node* cmp = loop_exit_test(back_control, loop, incr, limit, mask, cl_prob);\n+  assert(cmp != NULL && cmp->Opcode() == Op_Cmp(bt), \"no exit test\");\n@@ -1289,1 +1432,1 @@\n-  assert(incr != NULL && incr->Opcode() == Op_AddL, \"no incr\");\n+  assert(incr != NULL && incr->Opcode() == Op_Add(bt), \"no incr\");\n@@ -1300,1 +1443,1 @@\n-  jlong stride_con = stride->get_long();\n+  jlong stride_con = stride->get_integer_as_long(bt);\n@@ -1302,1 +1445,1 @@\n-  assert(condition_stride_ok(bt, stride_con), \"illegal condition\");\n+  assert(condition_stride_ok(mask, stride_con), \"illegal condition\");\n@@ -1304,1 +1447,1 @@\n-  assert(bt != BoolTest::ne, \"unexpected condition\");\n+  assert(mask != BoolTest::ne, \"unexpected condition\");\n@@ -1436,1 +1579,1 @@\n-  if (cmp == NULL || !(cmp->is_Cmp() && cmp->operates_on(iv_bt, true))) {\n+  if (cmp == NULL || cmp->Opcode() != Op_Cmp(iv_bt)) {\n@@ -1441,1 +1584,1 @@\n-  if (incr->is_ConstraintCast() && incr->operates_on(iv_bt, false)) {\n+  if (incr->Opcode() == Op_Cast(iv_bt)) {\n@@ -1458,1 +1601,1 @@\n-  assert(incr->is_Add() && incr->operates_on(iv_bt, false), \"wrong increment code\");\n+  assert(incr->Opcode() == Op_Add(iv_bt), \"wrong increment code\");\n@@ -1467,1 +1610,1 @@\n-  if (xphi->is_ConstraintCast() && xphi->operates_on(iv_bt, false)) {\n+  if (xphi->Opcode() == Op_Cast(iv_bt)) {\n@@ -1633,1 +1776,1 @@\n-    assert(!x->as_Loop()->is_transformed_long_inner_loop(), \"long loop was transformed\");\n+    assert(!x->as_Loop()->is_loop_nest_inner_loop(), \"loop was transformed\");\n@@ -1723,1 +1866,1 @@\n-      !x->as_Loop()->is_transformed_long_inner_loop() &&\n+      !x->as_Loop()->is_loop_nest_inner_loop() &&\n@@ -1928,1 +2071,1 @@\n-  if (x->as_Loop()->is_transformed_long_inner_loop()) {\n+  if (x->as_Loop()->is_loop_nest_inner_loop() && iv_bt == T_LONG) {\n@@ -1932,2 +2075,2 @@\n-  if (iv_bt == T_LONG && x->as_Loop()->is_transformed_long_outer_loop()) {\n-    l->mark_transformed_long_outer_loop();\n+  if (iv_bt == T_LONG && x->as_Loop()->is_loop_nest_outer_loop()) {\n+    l->mark_loop_nest_outer_loop();\n@@ -2275,1 +2418,1 @@\n-  if (n1->is_Add() && n1->operates_on(bt, true)) {\n+  if (n1op == Op_Add(bt)) {\n@@ -2408,5 +2551,0 @@\n-jlong LongCountedLoopNode::stride_con() const {\n-  LongCountedLoopEndNode* cle = loopexit_or_null();\n-  return cle != NULL ? cle->stride_con() : 0;\n-}\n-\n@@ -3545,1 +3683,1 @@\n-    assert(!_head->is_Loop() || !_head->as_Loop()->is_transformed_long_inner_loop(), \"transformation to counted loop should not fail\");\n+    assert(!_head->is_Loop() || !_head->as_Loop()->is_loop_nest_inner_loop(), \"transformation to counted loop should not fail\");\n@@ -4217,1 +4355,3 @@\n-      if (SplitIfBlocks && do_split_ifs && lpt->policy_range_check(this, true)) {\n+      if (SplitIfBlocks && do_split_ifs &&\n+          (lpt->policy_range_check(this, true, T_LONG) ||\n+           (head->is_CountedLoop() && lpt->policy_range_check(this, true, T_INT)))) {\n@@ -4269,7 +4409,0 @@\n-  if (C->has_loops() && !C->major_progress()) {\n-    for (LoopTreeIterator iter(_ltree_root); !iter.done(); iter.next()) {\n-      IdealLoopTree *lpt = iter.current();\n-      transform_long_counted_loop(lpt, worklist);\n-    }\n-  }\n-\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":201,"deletions":68,"binary":false,"changes":269,"status":"modified"},{"patch":"@@ -80,2 +80,2 @@\n-         TransformedLongInnerLoop = 1<<18,\n-         TransformedLongOuterLoop = 1<<19};\n+         LoopNestInnerLoop = 1 << 18,\n+         LoopNestLongOuterLoop = 1 << 19};\n@@ -106,2 +106,2 @@\n-  bool is_transformed_long_inner_loop() const { return _loop_flags & TransformedLongInnerLoop; }\n-  bool is_transformed_long_outer_loop() const { return _loop_flags & TransformedLongOuterLoop; }\n+  bool is_loop_nest_inner_loop() const { return _loop_flags & LoopNestInnerLoop; }\n+  bool is_loop_nest_outer_loop() const { return _loop_flags & LoopNestLongOuterLoop; }\n@@ -122,2 +122,2 @@\n-  void mark_transformed_long_inner_loop() { _loop_flags |= TransformedLongInnerLoop; }\n-  void mark_transformed_long_outer_loop() { _loop_flags |= TransformedLongOuterLoop; }\n+  void mark_loop_nest_inner_loop() { _loop_flags |= LoopNestInnerLoop; }\n+  void mark_loop_nest_outer_loop() { _loop_flags |= LoopNestLongOuterLoop; }\n@@ -218,4 +218,2 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n+\n+  jlong stride_con() const;\n@@ -345,4 +343,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n@@ -369,5 +363,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n-\n@@ -380,1 +369,0 @@\n-  jlong   stride_con() const;\n@@ -426,1 +414,1 @@\n-    if (!ln->operates_on(bt(), true)) {\n+    if (ln->as_BaseCountedLoop()->bt() != bt()) {\n@@ -433,4 +421,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n@@ -456,4 +440,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n@@ -480,4 +460,1 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n+\n@@ -501,1 +478,1 @@\n-  if (!result->operates_on(bt(), true)) {\n+  if (result->bt() != bt()) {\n@@ -539,0 +516,6 @@\n+inline jlong BaseCountedLoopNode::stride_con() const {\n+  BaseCountedLoopEndNode* cle = loopexit_or_null();\n+  return cle != NULL ? cle->stride_con() : 0;\n+}\n+\n+\n@@ -737,1 +720,1 @@\n-  bool policy_range_check(PhaseIdealLoop* phase, bool provisional) const;\n+  bool policy_range_check(PhaseIdealLoop* phase, bool provisional, BasicType bt) const;\n@@ -1173,2 +1156,2 @@\n-  Node* long_loop_replace_long_iv(Node* iv_to_replace, Node* inner_iv, Node* outer_phi, Node* inner_head);\n-  bool transform_long_counted_loop(IdealLoopTree* loop, Node_List &old_new);\n+  Node* loop_nest_replace_iv(Node* iv_to_replace, Node* inner_iv, Node* outer_phi, Node* inner_head, BasicType bt);\n+  bool create_loop_nest(IdealLoopTree* loop, Node_List &old_new);\n@@ -1275,1 +1258,3 @@\n-  bool is_scaled_iv(Node* exp, Node* iv, jlong* p_scale, BasicType bt);\n+  bool is_scaled_iv(Node* exp, Node* iv, jlong* p_scale, BasicType bt, bool* converted);\n+\n+  bool is_iv(Node* exp, Node* iv, BasicType bt);\n@@ -1278,1 +1263,1 @@\n-  bool is_scaled_iv_plus_offset(Node* exp, Node* iv, jlong* p_scale, Node** p_offset, BasicType bt, int depth = 0);\n+  bool is_scaled_iv_plus_offset(Node* exp, Node* iv, jlong* p_scale, Node** p_offset, BasicType bt, bool* converted = NULL, int depth = 0);\n@@ -1637,1 +1622,1 @@\n-  void check_long_counted_loop(IdealLoopTree* loop, Node* x) NOT_DEBUG_RETURN;\n+  void check_counted_loop_shape(IdealLoopTree* loop, Node* x, BasicType bt) NOT_DEBUG_RETURN;\n@@ -1639,1 +1624,1 @@\n-  LoopNode* create_inner_head(IdealLoopTree* loop, LongCountedLoopNode* head, LongCountedLoopEndNode* exit_test);\n+  LoopNode* create_inner_head(IdealLoopTree* loop, BaseCountedLoopNode* head, IfNode* exit_test);\n@@ -1662,0 +1647,3 @@\n+\n+  void strip_mined_nest_back_to_counted_loop(IdealLoopTree* loop, const BaseCountedLoopNode* head, Node* back_control,\n+                                             IfNode*&exit_test, SafePointNode*&safepoint);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":29,"deletions":41,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -1056,1 +1056,1 @@\n-  if (((n_blk->is_CountedLoop() || (n_blk->is_Loop() && n_blk->as_Loop()->is_transformed_long_inner_loop())) && n->Opcode() == Op_AddI) ||\n+  if (((n_blk->is_CountedLoop() || (n_blk->is_Loop() && n_blk->as_Loop()->is_loop_nest_inner_loop())) && n->Opcode() == Op_AddI) ||\n@@ -1177,0 +1177,10 @@\n+\n+  IfNode* n_if = n->as_If();\n+  if (n_if->proj_out(0)->outcnt() > 1 || n_if->proj_out(1)->outcnt() > 1) {\n+    \/\/ Removing the dominated If node by using the split-if optimization does not work if there are data dependencies.\n+    \/\/ Some data dependencies depend on its immediate dominator If node and should not be separated from it (e.g. null\n+    \/\/ checks, division by zero checks etc.). Bail out for now until data dependencies are correctly handled when\n+    \/\/ optimizing back-to-back ifs.\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1245,2 +1245,1 @@\n-  if (C->env()->dtrace_alloc_probes() ||\n-      (!UseTLAB && !Universe::heap()->supports_inline_contig_alloc())) {\n+  if (!UseTLAB && !Universe::heap()->supports_inline_contig_alloc()) {\n@@ -1634,1 +1633,1 @@\n-  if (C->env()->dtrace_extended_probes()) {\n+  if (C->env()->dtrace_alloc_probes()) {\n@@ -1651,1 +1650,1 @@\n-    call->init_req(TypeFunc::Memory , ctrl);\n+    call->init_req(TypeFunc::Memory , rawmem);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-  Node* mask_gen =  new VectorMaskGenNode(casted_length, TypeVect::VECTMASK, type);\n+  Node* mask_gen = VectorMaskGenNode::make(casted_length, type);\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-  static const TypeVect* predicate_reg_type(const Type* elemTy, int length);\n+  static const TypeVectMask* predicate_reg_type(const Type* elemTy, int length);\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1630,8 +1630,1 @@\n-        if (mem->is_Phi() && (mem->in(0) == region) && mem->in(i)->in(0) != NULL &&\n-            MemNode::all_controls_dominate(address, region)) {\n-          \/\/ Enable other optimizations such as loop predication which does not work\n-          \/\/ if we directly pin the node to node `in`\n-          x->set_req(0, mem->in(i)->in(0)); \/\/ Use same control as memory\n-        } else {\n-          x->set_req(0, in);\n-        }\n+        x->set_req(0, in);\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -225,0 +225,13 @@\n+MulNode* MulNode::make(Node* in1, Node* in2, BasicType bt) {\n+  switch (bt) {\n+    case T_INT:\n+      return new MulINode(in1, in2);\n+    case T_LONG:\n+      return new MulLNode(in1, in2);\n+    default:\n+      fatal(\"Not implemented for %s\", type2name(bt));\n+  }\n+  return NULL;\n+}\n+\n+\n@@ -495,0 +508,9 @@\n+const Type* AndINode::Value(PhaseGVN* phase) const {\n+  \/\/ patterns similar to (v << 2) & 3\n+  if (AndIL_shift_and_mask(phase, in(2), in(1), T_INT)) {\n+    return TypeInt::ZERO;\n+  }\n+\n+  return MulNode::Value(phase);\n+}\n+\n@@ -588,0 +610,6 @@\n+  \/\/ pattern similar to (v1 + (v2 << 2)) & 3 transformed to v1 & 3\n+  Node* progress = AndIL_add_shift_and_mask(phase, T_INT);\n+  if (progress != NULL) {\n+    return progress;\n+  }\n+\n@@ -619,0 +647,9 @@\n+const Type* AndLNode::Value(PhaseGVN* phase) const {\n+  \/\/ patterns similar to (v << 2) & 3\n+  if (AndIL_shift_and_mask(phase, in(2), in(1), T_LONG)) {\n+    return TypeLong::ZERO;\n+  }\n+\n+  return MulNode::Value(phase);\n+}\n+\n@@ -665,1 +702,1 @@\n-  uint op = in1->Opcode();\n+  int op = in1->Opcode();\n@@ -695,0 +732,6 @@\n+  \/\/ pattern similar to (v1 + (v2 << 2)) & 3 transformed to v1 & 3\n+  Node* progress = AndIL_add_shift_and_mask(phase, T_LONG);\n+  if (progress != NULL) {\n+    return progress;\n+  }\n+\n@@ -1673,0 +1716,61 @@\n+\n+\/\/ Helper method to transform:\n+\/\/ patterns similar to (v << 2) & 3 to 0\n+\/\/ and\n+\/\/ patterns similar to (v1 + (v2 << 2)) & 3 transformed to v1 & 3\n+bool MulNode::AndIL_shift_and_mask(PhaseGVN* phase, Node* mask, Node* shift, BasicType bt) {\n+  if (mask == NULL || shift == NULL) {\n+    return false;\n+  }\n+  const TypeInteger* mask_t = phase->type(mask)->isa_integer(bt);\n+  const TypeInteger* shift_t = phase->type(shift)->isa_integer(bt);\n+  if (mask_t == NULL || shift_t == NULL) {\n+    return false;\n+  }\n+  if (bt == T_LONG && shift != NULL && shift->Opcode() == Op_ConvI2L) {\n+    bt = T_INT;\n+    shift = shift->in(1);\n+    if (shift == NULL) {\n+      return false;\n+    }\n+  }\n+  if (shift->Opcode() != Op_LShift(bt)) {\n+    return false;\n+  }\n+  Node* shift2 = shift->in(2);\n+  if (shift2 == NULL) {\n+    return false;\n+  }\n+  const Type* shift2_t = phase->type(shift2);\n+  if (!shift2_t->isa_int() || !shift2_t->is_int()->is_con()) {\n+    return false;\n+  }\n+\n+  jint shift_con = shift2_t->is_int()->get_con() & ((bt == T_INT ? BitsPerJavaInteger : BitsPerJavaLong) - 1);\n+  if ((((jlong)1) << shift_con) > mask_t->hi_as_long() && mask_t->lo_as_long() >= 0) {\n+    return true;\n+  }\n+\n+  return false;\n+}\n+\n+\/\/ Helper method to transform:\n+\/\/ patterns similar to (v1 + (v2 << 2)) & 3 to v1 & 3\n+Node* MulNode::AndIL_add_shift_and_mask(PhaseGVN* phase, BasicType bt) {\n+  Node* in1 = in(1);\n+  Node* in2 = in(2);\n+  if (in1 != NULL && in2 != NULL && in1->Opcode() == Op_Add(bt)) {\n+    Node* add1 = in1->in(1);\n+    Node* add2 = in1->in(2);\n+    if (add1 != NULL && add2 != NULL) {\n+      if (AndIL_shift_and_mask(phase, in2, add1, bt)) {\n+        set_req_X(1, add2, phase);\n+        return this;\n+      } else if (AndIL_shift_and_mask(phase, in2, add2, bt)) {\n+        set_req_X(1, add1, phase);\n+        return this;\n+      }\n+    }\n+  }\n+  return NULL;\n+}\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":105,"deletions":1,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -78,5 +78,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n-\n@@ -88,0 +83,5 @@\n+\n+  static MulNode* make(Node* in1, Node* in2, BasicType bt);\n+\n+  static bool AndIL_shift_and_mask(PhaseGVN* phase, Node* mask, Node* shift, BasicType bt);\n+  Node* AndIL_add_shift_and_mask(PhaseGVN* phase, BasicType bt);\n@@ -106,4 +106,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n@@ -128,4 +124,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n@@ -203,0 +195,1 @@\n+  virtual const Type* Value(PhaseGVN* phase) const;\n@@ -222,0 +215,1 @@\n+  virtual const Type* Value(PhaseGVN* phase) const;\n@@ -237,4 +231,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n@@ -254,4 +244,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n@@ -271,4 +257,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n","filename":"src\/hotspot\/share\/opto\/mulnode.hpp","additions":7,"deletions":25,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1268,6 +1268,0 @@\n-public:\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    Unimplemented();\n-    return false;\n-  }\n@@ -1838,0 +1832,35 @@\n+#include \"opto\/opcodes.hpp\"\n+\n+#define Op_IL(op) \\\n+  inline int Op_ ## op(BasicType bt) { \\\n+  assert(bt == T_INT || bt == T_LONG, \"only for int or longs\"); \\\n+  if (bt == T_INT) { \\\n+    return Op_## op ## I; \\\n+  } \\\n+  return Op_## op ## L; \\\n+}\n+\n+Op_IL(Add)\n+Op_IL(Sub)\n+Op_IL(Mul)\n+Op_IL(URShift)\n+Op_IL(LShift)\n+Op_IL(Xor)\n+Op_IL(Cmp)\n+\n+inline int Op_Cmp_unsigned(BasicType bt) {\n+  assert(bt == T_INT || bt == T_LONG, \"only for int or longs\");\n+  if (bt == T_INT) {\n+    return Op_CmpU;\n+  }\n+  return Op_CmpUL;\n+}\n+\n+inline int Op_Cast(BasicType bt) {\n+  assert(bt == T_INT || bt == T_LONG, \"only for int or longs\");\n+  if (bt == T_INT) {\n+    return Op_CastII;\n+  }\n+  return Op_CastLL;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":35,"deletions":6,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,1 +244,1 @@\n-    \/\/ Usually the initialization shoudl be to n->Value(this) instead,\n+    \/\/ Usually the initialization should be to n->Value(this) instead,\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -199,2 +199,2 @@\n-\n-  \/\/ Convert \"x - (y+c0)\" into \"(x-y) - c0\"\n+  \/\/ Convert \"x - (y+c0)\" into \"(x-y) - c0\" AND\n+  \/\/ Convert \"c1 - (y+c0)\" into \"(c1-c0) - y\"\n@@ -202,1 +202,4 @@\n-  if (op2 == Op_AddI && ok_to_convert(in2, in1)) {\n+  if (op2 == Op_AddI\n+      && ok_to_convert(in2, in1)\n+      && in2->in(2)->Opcode() == Op_ConI) {\n+    jint c0 = phase->type(in2->in(2))->isa_int()->get_con();\n@@ -204,5 +207,9 @@\n-    Node* in22 = in2->in(2);\n-    const TypeInt* tcon = phase->type(in22)->isa_int();\n-    if (tcon != NULL && tcon->is_con()) {\n-      Node* sub2 = phase->transform( new SubINode(in1, in21) );\n-      Node* neg_c0 = phase->intcon(- tcon->get_con());\n+    if (in1->Opcode() == Op_ConI) {\n+      \/\/ Match c1\n+      jint c1 = phase->type(in1)->isa_int()->get_con();\n+      Node* sub2 = phase->intcon(java_subtract(c1, c0));\n+      return new SubINode(sub2, in21);\n+    } else {\n+      \/\/ Match x\n+      Node* sub2 = phase->transform(new SubINode(in1, in21));\n+      Node* neg_c0 = phase->intcon(-c0);\n@@ -377,1 +384,2 @@\n-  \/\/ Convert \"x - (y+c0)\" into \"(x-y) - c0\"\n+  \/\/ Convert \"x - (y+c0)\" into \"(x-y) - c0\" AND\n+  \/\/ Convert \"c1 - (y+c0)\" into \"(c1-c0) - y\"\n@@ -379,1 +387,4 @@\n-  if (op2 == Op_AddL && ok_to_convert(in2, in1)) {\n+  if (op2 == Op_AddL\n+      && ok_to_convert(in2, in1)\n+      && in2->in(2)->Opcode() == Op_ConL) {\n+    jlong c0 = phase->type(in2->in(2))->isa_long()->get_con();\n@@ -381,5 +392,8 @@\n-    Node* in22 = in2->in(2);\n-    const TypeLong* tcon = phase->type(in22)->isa_long();\n-    if (tcon != NULL && tcon->is_con()) {\n-      Node* sub2 = phase->transform( new SubLNode(in1, in21) );\n-      Node* neg_c0 = phase->longcon(- tcon->get_con());\n+    if (in1->Opcode() == Op_ConL) {\n+      \/\/ Match c1\n+      jlong c1 = phase->type(in1)->isa_long()->get_con();\n+      Node* sub2 = phase->longcon(java_subtract(c1, c0));\n+      return new SubLNode(sub2, in21);\n+    } else {\n+      Node* sub2 = phase->transform(new SubLNode(in1, in21));\n+      Node* neg_c0 = phase->longcon(-c0);\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":29,"deletions":15,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -65,4 +65,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n@@ -84,4 +80,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT;\n-  }\n@@ -101,4 +93,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG;\n-  }\n@@ -165,4 +153,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return false;\n-  }\n@@ -179,4 +163,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT && signed_int;\n-  }\n@@ -194,4 +174,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_INT && !signed_int;\n-  }\n@@ -228,4 +204,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG && signed_int;\n-  }\n@@ -241,4 +213,0 @@\n-  virtual bool operates_on(BasicType bt, bool signed_int) const {\n-    assert(bt == T_INT || bt == T_LONG, \"unsupported\");\n-    return bt == T_LONG && !signed_int;\n-  }\n","filename":"src\/hotspot\/share\/opto\/subnode.hpp","additions":0,"deletions":32,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1416,0 +1416,24 @@\n+const TypeInteger* TypeInteger::zero(BasicType bt) {\n+  if (bt == T_INT) {\n+    return TypeInt::ZERO;\n+  }\n+  assert(bt == T_LONG, \"basic type not an int or long\");\n+  return TypeLong::ZERO;\n+}\n+\n+const TypeInteger* TypeInteger::one(BasicType bt) {\n+  if (bt == T_INT) {\n+    return TypeInt::ONE;\n+  }\n+  assert(bt == T_LONG, \"basic type not an int or long\");\n+  return TypeLong::ONE;\n+}\n+\n+const TypeInteger* TypeInteger::minus_1(BasicType bt) {\n+  if (bt == T_INT) {\n+    return TypeInt::MINUS_1;\n+  }\n+  assert(bt == T_LONG, \"basic type not an int or long\");\n+  return TypeLong::MINUS_1;\n+}\n+\n@@ -2393,2 +2417,1 @@\n-    const TypeVect* mtype = Matcher::predicate_reg_type(elem, length);\n-    return (TypeVect*)(const_cast<TypeVect*>(mtype))->hashcons();\n+    return TypeVectMask::make(elem, length);\n@@ -2508,0 +2531,9 @@\n+const TypeVectMask *TypeVectMask::make(const BasicType elem_bt, uint length) {\n+  return make(get_const_basic_type(elem_bt), length);\n+}\n+\n+const TypeVectMask *TypeVectMask::make(const Type* elem, uint length) {\n+  const TypeVectMask* mtype = Matcher::predicate_reg_type(elem, length);\n+  return (TypeVectMask*) const_cast<TypeVectMask*>(mtype)->hashcons();\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":34,"deletions":2,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -561,0 +561,1 @@\n+  bool is_con() const { return lo_as_long() == hi_as_long(); }\n@@ -565,0 +566,3 @@\n+  static const TypeInteger* zero(BasicType type);\n+  static const TypeInteger* one(BasicType type);\n+  static const TypeInteger* minus_1(BasicType type);\n@@ -591,1 +595,1 @@\n-  int is_con() const { return _lo==_hi; }\n+  bool is_con() const { return _lo==_hi; }\n@@ -593,1 +597,1 @@\n-  jint get_con() const { assert( is_con(), \"\" );  return _lo; }\n+  jint get_con() const { assert(is_con(), \"\" );  return _lo; }\n@@ -659,1 +663,1 @@\n-  int is_con() const { return _lo==_hi; }\n+  bool is_con() const { return _lo==_hi; }\n@@ -661,1 +665,1 @@\n-  jlong get_con() const { assert( is_con(), \"\" ); return _lo; }\n+  jlong get_con() const { assert(is_con(), \"\" ); return _lo; }\n@@ -873,0 +877,2 @@\n+  static const TypeVectMask* make(const BasicType elem_bt, uint length);\n+  static const TypeVectMask* make(const Type* elem, uint length);\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -792,2 +792,2 @@\n-\/\/ M broadcastCoerced(Class<? extends M> vmClass, Class<E> elementType, int length,\n-\/\/                    long bits, S s,\n+\/\/ M fromBitsCoerced(Class<? extends M> vmClass, Class<E> elementType, int length,\n+\/\/                    long bits, int mode, S s,\n@@ -795,1 +795,1 @@\n-bool LibraryCallKit::inline_vector_broadcast_coerced() {\n+bool LibraryCallKit::inline_vector_frombits_coerced() {\n@@ -799,0 +799,5 @@\n+  const TypeLong*    bits_type    = gvn().type(argument(3))->isa_long();\n+  \/\/ Mode argument determines the mode of operation it can take following values:-\n+  \/\/ MODE_BROADCAST for vector Vector.boradcast and VectorMask.maskAll operations.\n+  \/\/ MODE_BITS_COERCED_LONG_TO_MASK for VectorMask.fromLong operation.\n+  const TypeInt*     mode         = gvn().type(argument(5))->isa_int();\n@@ -800,2 +805,3 @@\n-  if (vector_klass == NULL || elem_klass == NULL || vlen == NULL ||\n-      vector_klass->const_oop() == NULL || elem_klass->const_oop() == NULL || !vlen->is_con()) {\n+  if (vector_klass == NULL || elem_klass == NULL || vlen == NULL || mode == NULL ||\n+      bits_type == NULL || vector_klass->const_oop() == NULL || elem_klass->const_oop() == NULL ||\n+      !vlen->is_con() || !mode->is_con()) {\n@@ -803,1 +809,1 @@\n-      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s\",\n+      tty->print_cr(\"  ** missing constant: vclass=%s etype=%s vlen=%s bitwise=%s\",\n@@ -806,1 +812,2 @@\n-                    NodeClassNames[argument(2)->Opcode()]);\n+                    NodeClassNames[argument(2)->Opcode()],\n+                    NodeClassNames[argument(5)->Opcode()]);\n@@ -829,3 +836,6 @@\n-  \/\/ TODO When mask usage is supported, VecMaskNotUsed needs to be VecMaskUseLoad.\n-  if (!arch_supports_vector(VectorNode::replicate_opcode(elem_bt), num_elem, elem_bt,\n-                            (is_vector_mask(vbox_klass) ? VecMaskUseStore : VecMaskNotUsed), true \/*has_scalar_args*\/)) {\n+  bool is_mask = is_vector_mask(vbox_klass);\n+  int  bcast_mode = mode->get_con();\n+  VectorMaskUseType checkFlags = (VectorMaskUseType)(is_mask ? VecMaskUseAll : VecMaskNotUsed);\n+  int opc = bcast_mode == VectorSupport::MODE_BITS_COERCED_LONG_TO_MASK ? Op_VectorLongToMask : VectorNode::replicate_opcode(elem_bt);\n+\n+  if (!arch_supports_vector(opc, num_elem, elem_bt, checkFlags, true \/*has_scalar_args*\/)) {\n@@ -833,1 +843,1 @@\n-      tty->print_cr(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=%d\",\n+      tty->print_cr(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=%d bcast_mode=%d\",\n@@ -835,1 +845,2 @@\n-                    is_vector_mask(vbox_klass) ? 1 : 0);\n+                    is_mask ? 1 : 0,\n+                    bcast_mode);\n@@ -840,19 +851,12 @@\n-  Node* bits = argument(3); \/\/ long\n-  Node* elem = NULL;\n-  switch (elem_bt) {\n-    case T_BOOLEAN: \/\/ fall-through\n-    case T_BYTE:    \/\/ fall-through\n-    case T_SHORT:   \/\/ fall-through\n-    case T_CHAR:    \/\/ fall-through\n-    case T_INT: {\n-      elem = gvn().transform(new ConvL2INode(bits));\n-      break;\n-    }\n-    case T_DOUBLE: {\n-      elem = gvn().transform(new MoveL2DNode(bits));\n-      break;\n-    }\n-    case T_FLOAT: {\n-      bits = gvn().transform(new ConvL2INode(bits));\n-      elem = gvn().transform(new MoveI2FNode(bits));\n-      break;\n+  Node* broadcast = NULL;\n+  Node* bits = argument(3);\n+  Node* elem = bits;\n+\n+  if (opc == Op_VectorLongToMask) {\n+    const TypeVect* vt = TypeVect::makemask(elem_bt, num_elem);\n+    if (vt->isa_vectmask()) {\n+      broadcast = gvn().transform(new VectorLongToMaskNode(elem, vt));\n+    } else {\n+      const TypeVect* mvt = TypeVect::make(T_BOOLEAN, num_elem);\n+      broadcast = gvn().transform(new VectorLongToMaskNode(elem, mvt));\n+      broadcast = gvn().transform(new VectorLoadMaskNode(broadcast, vt));\n@@ -860,3 +864,24 @@\n-    case T_LONG: {\n-      elem = bits; \/\/ no conversion needed\n-      break;\n+  } else {\n+    switch (elem_bt) {\n+      case T_BOOLEAN: \/\/ fall-through\n+      case T_BYTE:    \/\/ fall-through\n+      case T_SHORT:   \/\/ fall-through\n+      case T_CHAR:    \/\/ fall-through\n+      case T_INT: {\n+        elem = gvn().transform(new ConvL2INode(bits));\n+        break;\n+      }\n+      case T_DOUBLE: {\n+        elem = gvn().transform(new MoveL2DNode(bits));\n+        break;\n+      }\n+      case T_FLOAT: {\n+        bits = gvn().transform(new ConvL2INode(bits));\n+        elem = gvn().transform(new MoveI2FNode(bits));\n+        break;\n+      }\n+      case T_LONG: {\n+        \/\/ no conversion needed\n+        break;\n+      }\n+      default: fatal(\"%s\", type2name(elem_bt));\n@@ -864,1 +889,2 @@\n-    default: fatal(\"%s\", type2name(elem_bt));\n+    broadcast = VectorNode::scalar2vector(elem, num_elem, Type::get_const_basic_type(elem_bt), is_mask);\n+    broadcast = gvn().transform(broadcast);\n@@ -867,3 +893,0 @@\n-  Node* broadcast = VectorNode::scalar2vector(elem, num_elem, Type::get_const_basic_type(elem_bt), is_vector_mask(vbox_klass));\n-  broadcast = gvn().transform(broadcast);\n-\n@@ -2496,15 +2519,1 @@\n-          \/\/ Special handling for casting operation involving floating point types.\n-          \/\/ Case A) F -> X :=  F -> VectorMaskCast (F->I\/L [NOP]) -> VectorCast[I\/L]2X\n-          \/\/ Case B) X -> F :=  X -> VectorCastX2[I\/L] -> VectorMaskCast ([I\/L]->F [NOP])\n-          \/\/ Case C) F -> F :=  VectorMaskCast (F->I\/L [NOP]) -> VectorCast[I\/L]2[L\/I] -> VectotMaskCast (L\/I->F [NOP])\n-          if (is_floating_point_type(elem_bt_from)) {\n-            const TypeVect* new_src_type = TypeVect::make(new_elem_bt_from, num_elem_to, is_mask);\n-            op = gvn().transform(new VectorMaskCastNode(op, new_src_type));\n-          }\n-          if (is_floating_point_type(elem_bt_to)) {\n-            new_elem_bt_to = elem_bt_to == T_FLOAT ? T_INT : T_LONG;\n-          }\n-          op = gvn().transform(VectorCastNode::make(cast_vopc, op, new_elem_bt_to, num_elem_to));\n-          if (new_elem_bt_to != elem_bt_to) {\n-            op = gvn().transform(new VectorMaskCastNode(op, dst_type));\n-          }\n+          op = VectorMaskCastNode::makeCastNode(&gvn(), op, dst_type);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":62,"deletions":53,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -804,4 +804,4 @@\n-      BasicType mask_bt = ((VectorMaskGenNode*)in(3))->get_elem_type();\n-      uint load_sz      = type2aelembytes(mask_bt) * ty->get_con();\n-      if ( load_sz == 32 || load_sz == 64) {\n-        assert(load_sz == 32 || MaxVectorSize > 32, \"Unexpected load size\");\n+      BasicType mask_bt = Matcher::vector_element_basic_type(in(3));\n+      int load_sz = type2aelembytes(mask_bt) * ty->get_con();\n+      assert(load_sz <= MaxVectorSize, \"Unexpected load size\");\n+      if (load_sz == MaxVectorSize) {\n@@ -823,4 +823,4 @@\n-      BasicType mask_bt = ((VectorMaskGenNode*)in(4))->get_elem_type();\n-      uint load_sz      = type2aelembytes(mask_bt) * ty->get_con();\n-      if ( load_sz == 32 || load_sz == 64) {\n-        assert(load_sz == 32 || MaxVectorSize > 32, \"Unexpected store size\");\n+      BasicType mask_bt = Matcher::vector_element_basic_type(in(4));\n+      int load_sz = type2aelembytes(mask_bt) * ty->get_con();\n+      assert(load_sz <= MaxVectorSize, \"Unexpected store size\");\n+      if (load_sz == MaxVectorSize) {\n@@ -1428,0 +1428,6 @@\n+Node* VectorMaskGenNode::make(Node* length, BasicType mask_bt) {\n+  int max_vector = Matcher::max_vector_size(mask_bt);\n+  const TypeVectMask* t_vmask = TypeVectMask::make(mask_bt, max_vector);\n+  return new VectorMaskGenNode(length, t_vmask);\n+}\n+\n@@ -1444,0 +1450,76 @@\n+Node* VectorMaskToLongNode::Identity(PhaseGVN* phase) {\n+  if (in(1)->Opcode() == Op_VectorLongToMask) {\n+    return in(1)->in(1);\n+  }\n+  return this;\n+}\n+\n+\n+Node* VectorMaskCastNode::makeCastNode(PhaseGVN* phase, Node* src, const TypeVect* dst_type) {\n+  const TypeVect* src_type = src->bottom_type()->is_vect();\n+  assert(src_type->length() == dst_type->length(), \"\");\n+\n+  int num_elem = src_type->length();\n+  BasicType elem_bt_from = src_type->element_basic_type();\n+  BasicType elem_bt_to = dst_type->element_basic_type();\n+\n+  if (dst_type->isa_vectmask() == NULL && src_type->isa_vectmask() == NULL &&\n+      type2aelembytes(elem_bt_from) != type2aelembytes(elem_bt_to)) {\n+\n+    Node* op = src;\n+    BasicType new_elem_bt_from = elem_bt_from;\n+    BasicType new_elem_bt_to = elem_bt_to;\n+    if (is_floating_point_type(elem_bt_from)) {\n+      new_elem_bt_from =  elem_bt_from == T_FLOAT ? T_INT : T_LONG;\n+    }\n+    if (is_floating_point_type(elem_bt_to)) {\n+      new_elem_bt_to = elem_bt_to == T_FLOAT ? T_INT : T_LONG;\n+    }\n+\n+    \/\/ Special handling for casting operation involving floating point types.\n+    \/\/ Case A) F -> X :=  F -> VectorMaskCast (F->I\/L [NOP]) -> VectorCast[I\/L]2X\n+    \/\/ Case B) X -> F :=  X -> VectorCastX2[I\/L] -> VectorMaskCast ([I\/L]->F [NOP])\n+    \/\/ Case C) F -> F :=  VectorMaskCast (F->I\/L [NOP]) -> VectorCast[I\/L]2[L\/I] -> VectotMaskCast (L\/I->F [NOP])\n+\n+    if (new_elem_bt_from != elem_bt_from) {\n+      const TypeVect* new_src_type = TypeVect::makemask(new_elem_bt_from, num_elem);\n+      op = phase->transform(new VectorMaskCastNode(op, new_src_type));\n+    }\n+\n+    op = phase->transform(VectorCastNode::make(VectorCastNode::opcode(new_elem_bt_from), op, new_elem_bt_to, num_elem));\n+\n+    if (new_elem_bt_to != elem_bt_to) {\n+      op = phase->transform(new VectorMaskCastNode(op, dst_type));\n+    }\n+    return op;\n+  } else {\n+    return new VectorMaskCastNode(src, dst_type);\n+  }\n+}\n+\n+Node* VectorLongToMaskNode::Ideal(PhaseGVN* phase, bool can_reshape) {\n+  const TypeVect* dst_type = bottom_type()->is_vect();\n+  if (in(1)->Opcode() == Op_AndL &&\n+      in(1)->in(1)->Opcode() == Op_VectorMaskToLong &&\n+      in(1)->in(2)->bottom_type()->isa_long() &&\n+      in(1)->in(2)->bottom_type()->is_long()->is_con() &&\n+      in(1)->in(2)->bottom_type()->is_long()->get_con() == ((1L << dst_type->length()) - 1)) {\n+      \/\/ Different src\/dst mask length represents a re-interpretation operation,\n+      \/\/ we can however generate a mask casting operation if length matches.\n+     Node* src = in(1)->in(1)->in(1);\n+     if (dst_type->isa_vectmask() == NULL) {\n+       if (src->Opcode() != Op_VectorStoreMask) {\n+         return NULL;\n+       }\n+       src = src->in(1);\n+     }\n+     const TypeVect* src_type = src->bottom_type()->is_vect();\n+     if (src_type->length() == dst_type->length() &&\n+         ((src_type->isa_vectmask() == NULL && dst_type->isa_vectmask() == NULL) ||\n+          (src_type->isa_vectmask() && dst_type->isa_vectmask()))) {\n+       return VectorMaskCastNode::makeCastNode(phase, src, dst_type);\n+     }\n+  }\n+  return NULL;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":90,"deletions":8,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"prims\/vectorSupport.hpp\"\n@@ -922,0 +923,1 @@\n+\/\/------------------------------VectorMaskGenNode----------------------------------\n@@ -924,1 +926,1 @@\n-  VectorMaskGenNode(Node* length, const Type* ty, BasicType ety): TypeNode(ty, 2), _elemType(ety) {\n+  VectorMaskGenNode(Node* length, const Type* ty): TypeNode(ty, 2) {\n@@ -929,8 +931,2 @@\n-  BasicType get_elem_type()  { return _elemType;}\n-  virtual  uint  size_of() const { return sizeof(VectorMaskGenNode); }\n-  virtual uint  ideal_reg() const {\n-    return Op_RegVectMask;\n-  }\n-\n-  private:\n-   BasicType _elemType;\n+  virtual uint ideal_reg() const { return Op_RegVectMask; }\n+  static Node* make(Node* length, BasicType vmask_bt);\n@@ -939,0 +935,1 @@\n+\/\/------------------------------VectorMaskOpNode-----------------------------------\n@@ -984,0 +981,10 @@\n+  virtual Node* Identity(PhaseGVN* phase);\n+};\n+\n+class VectorLongToMaskNode : public VectorNode {\n+ public:\n+  VectorLongToMaskNode(Node* mask, const TypeVect* ty):\n+    VectorNode(mask, ty) {\n+  }\n+  virtual int Opcode() const;\n+  Node* Ideal(PhaseGVN* phase, bool can_reshape);\n@@ -1408,1 +1415,1 @@\n-\n+  static Node* makeCastNode(PhaseGVN* phase, Node* in1, const TypeVect * vt);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -317,0 +317,40 @@\n+#ifdef ZERO\n+  \/\/ Zero has no frames with code blobs, so the generic code fails.\n+  \/\/ Instead, try to do Zero-specific search for Java frame.\n+\n+  {\n+    RegisterMap map(thread, false, false);\n+\n+    while (true) {\n+      \/\/ Cannot walk this frame? Cannot do anything anymore.\n+      if (!candidate.safe_for_sender(thread)) {\n+        return false;\n+      }\n+\n+      if (candidate.is_entry_frame()) {\n+        \/\/ jcw is NULL if the java call wrapper could not be found\n+        JavaCallWrapper* jcw = candidate.entry_frame_call_wrapper_if_safe(thread);\n+        \/\/ If initial frame is frame from StubGenerator and there is no\n+        \/\/ previous anchor, there are no java frames associated with a method\n+        if (jcw == NULL || jcw->is_first_frame()) {\n+          return false;\n+        }\n+      }\n+\n+      \/\/ If we find a decipherable interpreted frame, this is our initial frame.\n+      if (candidate.is_interpreted_frame()) {\n+        if (is_decipherable_interpreted_frame(thread, &candidate, method_p, bci_p)) {\n+          *initial_frame_p = candidate;\n+          return true;\n+        }\n+      }\n+\n+      \/\/ Walk some more.\n+      candidate = candidate.sender(&map);\n+    }\n+\n+    \/\/ No dice, report no initial frames.\n+    return false;\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":41,"deletions":1,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -693,0 +693,4 @@\n+JVM_ENTRY(jboolean, JVM_IsFinalizationEnabled(JNIEnv * env))\n+  return InstanceKlass::is_finalization_enabled();\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6864,1 +6864,1 @@\n-        <li>By invoking <externallink id=\"..\/api\/java.base\/java\/lang\/invoke\/MethodHandles.Lookup.html#defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)\">Lookup::defineHiddenClass<\/externallink>\n+        <li>By invoking <externallink id=\"..\/api\/java.base\/java\/lang\/invoke\/MethodHandles.Lookup.html#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)\">Lookup::defineHiddenClass<\/externallink>\n@@ -6926,1 +6926,1 @@\n-        See <externallink id=\"..\/api\/java.base\/java\/lang\/invoke\/MethodHandles.Lookup.html#defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)\">Lookup::defineHiddenClass<\/externallink>.\n+        See <externallink id=\"..\/api\/java.base\/java\/lang\/invoke\/MethodHandles.Lookup.html#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)\">Lookup::defineHiddenClass<\/externallink>.\n@@ -6976,1 +6976,1 @@\n-          <externallink id=\"..\/api\/java.base\/java\/lang\/invoke\/MethodHandles.Lookup.html#defineHiddenClass(byte[],boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)\">Lookup::defineHiddenClass<\/externallink>,\n+          <externallink id=\"..\/api\/java.base\/java\/lang\/invoke\/MethodHandles.Lookup.html#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)\">Lookup::defineHiddenClass<\/externallink>,\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-    RegisterMap reg_map(java_thread);\n+    RegisterMap reg_map(java_thread, false \/* update_map *\/, false \/* process_frames *\/);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,0 +124,5 @@\n+  enum {\n+    MODE_BROADCAST = 0,\n+    MODE_BITS_COERCED_LONG_TO_MASK = 1\n+  };\n+\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -706,31 +706,0 @@\n-WB_ENTRY(jboolean, WB_NMTChangeTrackingLevel(JNIEnv* env))\n-  \/\/ Test that we can downgrade NMT levels but not upgrade them.\n-  if (MemTracker::tracking_level() == NMT_off) {\n-    MemTracker::transition_to(NMT_off);\n-    return MemTracker::tracking_level() == NMT_off;\n-  } else {\n-    assert(MemTracker::tracking_level() == NMT_detail, \"Should start out as detail tracking\");\n-    MemTracker::transition_to(NMT_summary);\n-    assert(MemTracker::tracking_level() == NMT_summary, \"Should be summary now\");\n-\n-    \/\/ Can't go to detail once NMT is set to summary.\n-    MemTracker::transition_to(NMT_detail);\n-    assert(MemTracker::tracking_level() == NMT_summary, \"Should still be summary now\");\n-\n-    \/\/ Shutdown sets tracking level to minimal.\n-    MemTracker::shutdown();\n-    assert(MemTracker::tracking_level() == NMT_minimal, \"Should be minimal now\");\n-\n-    \/\/ Once the tracking level is minimal, we cannot increase to summary.\n-    \/\/ The code ignores this request instead of asserting because if the malloc site\n-    \/\/ table overflows in another thread, it tries to change the code to summary.\n-    MemTracker::transition_to(NMT_summary);\n-    assert(MemTracker::tracking_level() == NMT_minimal, \"Should still be minimal now\");\n-\n-    \/\/ Really can never go up to detail, verify that the code would never do this.\n-    MemTracker::transition_to(NMT_detail);\n-    assert(MemTracker::tracking_level() == NMT_minimal, \"Should still be minimal now\");\n-    return MemTracker::tracking_level() == NMT_minimal;\n-  }\n-WB_END\n-\n@@ -2570,1 +2539,0 @@\n-  {CC\"NMTChangeTrackingLevel\", CC\"()Z\",               (void*)&WB_NMTChangeTrackingLevel},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":0,"deletions":32,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"oops\/instanceKlass.hpp\"\n@@ -535,0 +536,3 @@\n+#ifdef PRODUCT\n+  { \"UseHeavyMonitors\",             JDK_Version::jdk(18), JDK_Version::jdk(19), JDK_Version::jdk(20) },\n+#endif\n@@ -2021,0 +2025,14 @@\n+#if !defined(X86) && !defined(AARCH64) && !defined(PPC64)\n+  if (UseHeavyMonitors) {\n+    warning(\"UseHeavyMonitors is not fully implemented on this architecture\");\n+  }\n+#endif\n+#if (defined(X86) || defined(PPC64)) && !defined(ZERO)\n+  if (UseHeavyMonitors && UseRTMForStackLocks) {\n+    fatal(\"-XX:+UseHeavyMonitors and -XX:+UseRTMForStackLocks are mutually exclusive\");\n+  }\n+#endif\n+  if (VerifyHeavyMonitors && !UseHeavyMonitors) {\n+    fatal(\"-XX:+VerifyHeavyMonitors requires -XX:+UseHeavyMonitors\");\n+  }\n+\n@@ -2873,0 +2891,11 @@\n+    } else if (match_option(option, \"--finalization=\", &tail)) {\n+      if (strcmp(tail, \"enabled\") == 0) {\n+        InstanceKlass::set_finalization_enabled(true);\n+      } else if (strcmp(tail, \"disabled\") == 0) {\n+        InstanceKlass::set_finalization_enabled(false);\n+      } else {\n+        jio_fprintf(defaultStream::error_stream(),\n+                    \"Invalid finalization value '%s', must be 'disabled' or 'enabled'.\\n\",\n+                    tail);\n+        return JNI_EINVAL;\n+      }\n@@ -3423,1 +3452,1 @@\n-jint Arguments::set_shared_spaces_flags_and_archive_paths() {\n+void Arguments::set_shared_spaces_flags_and_archive_paths() {\n@@ -3433,1 +3462,5 @@\n-  init_shared_archive_paths();\n+  \/\/\n+  \/\/ UseSharedSpaces may be disabled if -XX:SharedArchiveFile is invalid.\n+  if (DumpSharedSpaces || UseSharedSpaces) {\n+    init_shared_archive_paths();\n+  }\n@@ -3435,1 +3468,0 @@\n-  return JNI_OK;\n@@ -3484,1 +3516,3 @@\n-  FileMapInfo::check_archive((const char*)cur_path, true \/*is_static*\/);\n+  if (!FileMapInfo::check_archive((const char*)cur_path, true \/*is_static*\/)) {\n+    return;\n+  }\n@@ -3496,1 +3530,3 @@\n-  FileMapInfo::check_archive((const char*)cur_path, false \/*is_static*\/);\n+  if (!FileMapInfo::check_archive((const char*)cur_path, false \/*is_static*\/)) {\n+    return;\n+  }\n@@ -3540,1 +3576,1 @@\n-        char* temp_archive_path = os::strdup_check_oom(SharedArchiveFile, mtArguments);\n+        char* base_archive_path = NULL;\n@@ -3542,1 +3578,1 @@\n-          FileMapInfo::get_base_archive_name_from_header(temp_archive_path, &SharedArchivePath);\n+          FileMapInfo::get_base_archive_name_from_header(SharedArchiveFile, &base_archive_path);\n@@ -3544,1 +3580,4 @@\n-          SharedArchivePath = temp_archive_path;\n+          no_shared_spaces(\"invalid archive\");\n+        } else if (base_archive_path == NULL) {\n+          \/\/ User has specified a single archive, which is a static archive.\n+          SharedArchivePath = const_cast<char *>(SharedArchiveFile);\n@@ -3546,1 +3585,3 @@\n-          SharedDynamicArchivePath = temp_archive_path;\n+          \/\/ User has specified a single archive, which is a dynamic archive.\n+          SharedDynamicArchivePath = const_cast<char *>(SharedArchiveFile);\n+          SharedArchivePath = base_archive_path; \/\/ has been c-heap allocated.\n@@ -3551,0 +3592,4 @@\n+        if (SharedArchivePath == NULL) {\n+          assert(SharedDynamicArchivePath == NULL, \"must be\");\n+          no_shared_spaces(\"invalid archive\");\n+        }\n@@ -4023,2 +4068,1 @@\n-  result = set_shared_spaces_flags_and_archive_paths();\n-  if (result != JNI_OK) return result;\n+  set_shared_spaces_flags_and_archive_paths();\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":55,"deletions":11,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-  static jint set_shared_spaces_flags_and_archive_paths();\n+  static void set_shared_spaces_flags_and_archive_paths();\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1069,1 +1069,6 @@\n-          \"use heavyweight instead of lightweight Java monitors\")           \\\n+          \"(Deprecated) Use heavyweight instead of lightweight Java \"       \\\n+          \"monitors\")                                                       \\\n+                                                                            \\\n+  develop(bool, VerifyHeavyMonitors, false,                                 \\\n+          \"Checks that no stack locking happens when using \"                \\\n+          \"+UseHeavyMonitors\")                                              \\\n@@ -1283,1 +1288,1 @@\n-  develop(bool, TraceDeoptimization, false,                                 \\\n+  product(bool, TraceDeoptimization, false, DIAGNOSTIC,                     \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1789,1 +1789,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n@@ -1803,1 +1803,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n@@ -1872,1 +1872,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n@@ -1908,1 +1908,1 @@\n-  if (MemTracker::tracking_level() > NMT_minimal) {\n+  if (MemTracker::enabled()) {\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -420,0 +420,8 @@\n+static bool useHeavyMonitors() {\n+#if defined(X86) || defined(AARCH64) || defined(PPC64)\n+  return UseHeavyMonitors;\n+#else\n+  return false;\n+#endif\n+}\n+\n@@ -431,6 +439,15 @@\n-  markWord mark = obj->mark();\n-  if (mark.is_neutral()) {\n-    \/\/ Anticipate successful CAS -- the ST of the displaced mark must\n-    \/\/ be visible <= the ST performed by the CAS.\n-    lock->set_displaced_header(mark);\n-    if (mark == obj()->cas_set_mark(markWord::from_pointer(lock), mark)) {\n+  if (!useHeavyMonitors()) {\n+    markWord mark = obj->mark();\n+    if (mark.is_neutral()) {\n+      \/\/ Anticipate successful CAS -- the ST of the displaced mark must\n+      \/\/ be visible <= the ST performed by the CAS.\n+      lock->set_displaced_header(mark);\n+      if (mark == obj()->cas_set_mark(markWord::from_pointer(lock), mark)) {\n+        return;\n+      }\n+      \/\/ Fall through to inflate() ...\n+    } else if (mark.has_locker() &&\n+               current->is_lock_owned((address)mark.locker())) {\n+      assert(lock != mark.locker(), \"must not re-lock the same lock\");\n+      assert(lock != (BasicLock*)obj->mark().value(), \"don't relock with same BasicLock\");\n+      lock->set_displaced_header(markWord::from_pointer(NULL));\n@@ -439,7 +456,8 @@\n-    \/\/ Fall through to inflate() ...\n-  } else if (mark.has_locker() &&\n-             current->is_lock_owned((address)mark.locker())) {\n-    assert(lock != mark.locker(), \"must not re-lock the same lock\");\n-    assert(lock != (BasicLock*)obj->mark().value(), \"don't relock with same BasicLock\");\n-    lock->set_displaced_header(markWord::from_pointer(NULL));\n-    return;\n+\n+    \/\/ The object header will never be displaced to this lock,\n+    \/\/ so it does not matter what the value is, except that it\n+    \/\/ must be non-zero to avoid looking like a re-entrant lock,\n+    \/\/ and must not look locked either.\n+    lock->set_displaced_header(markWord::unused_mark());\n+  } else if (VerifyHeavyMonitors) {\n+    guarantee(!obj->mark().has_locker(), \"must not be stack-locked\");\n@@ -448,5 +466,0 @@\n-  \/\/ The object header will never be displaced to this lock,\n-  \/\/ so it does not matter what the value is, except that it\n-  \/\/ must be non-zero to avoid looking like a re-entrant lock,\n-  \/\/ and must not look locked either.\n-  lock->set_displaced_header(markWord::unused_mark());\n@@ -465,1 +478,2 @@\n-  markWord mark = object->mark();\n+  if (!useHeavyMonitors()) {\n+    markWord mark = object->mark();\n@@ -467,4 +481,4 @@\n-  markWord dhw = lock->displaced_header();\n-  if (dhw.value() == 0) {\n-    \/\/ If the displaced header is NULL, then this exit matches up with\n-    \/\/ a recursive enter. No real work to do here except for diagnostics.\n+    markWord dhw = lock->displaced_header();\n+    if (dhw.value() == 0) {\n+      \/\/ If the displaced header is NULL, then this exit matches up with\n+      \/\/ a recursive enter. No real work to do here except for diagnostics.\n@@ -472,19 +486,20 @@\n-    if (mark != markWord::INFLATING()) {\n-      \/\/ Only do diagnostics if we are not racing an inflation. Simply\n-      \/\/ exiting a recursive enter of a Java Monitor that is being\n-      \/\/ inflated is safe; see the has_monitor() comment below.\n-      assert(!mark.is_neutral(), \"invariant\");\n-      assert(!mark.has_locker() ||\n-             current->is_lock_owned((address)mark.locker()), \"invariant\");\n-      if (mark.has_monitor()) {\n-        \/\/ The BasicLock's displaced_header is marked as a recursive\n-        \/\/ enter and we have an inflated Java Monitor (ObjectMonitor).\n-        \/\/ This is a special case where the Java Monitor was inflated\n-        \/\/ after this thread entered the stack-lock recursively. When a\n-        \/\/ Java Monitor is inflated, we cannot safely walk the Java\n-        \/\/ Monitor owner's stack and update the BasicLocks because a\n-        \/\/ Java Monitor can be asynchronously inflated by a thread that\n-        \/\/ does not own the Java Monitor.\n-        ObjectMonitor* m = mark.monitor();\n-        assert(m->object()->mark() == mark, \"invariant\");\n-        assert(m->is_entered(current), \"invariant\");\n+      if (mark != markWord::INFLATING()) {\n+        \/\/ Only do diagnostics if we are not racing an inflation. Simply\n+        \/\/ exiting a recursive enter of a Java Monitor that is being\n+        \/\/ inflated is safe; see the has_monitor() comment below.\n+        assert(!mark.is_neutral(), \"invariant\");\n+        assert(!mark.has_locker() ||\n+        current->is_lock_owned((address)mark.locker()), \"invariant\");\n+        if (mark.has_monitor()) {\n+          \/\/ The BasicLock's displaced_header is marked as a recursive\n+          \/\/ enter and we have an inflated Java Monitor (ObjectMonitor).\n+          \/\/ This is a special case where the Java Monitor was inflated\n+          \/\/ after this thread entered the stack-lock recursively. When a\n+          \/\/ Java Monitor is inflated, we cannot safely walk the Java\n+          \/\/ Monitor owner's stack and update the BasicLocks because a\n+          \/\/ Java Monitor can be asynchronously inflated by a thread that\n+          \/\/ does not own the Java Monitor.\n+          ObjectMonitor* m = mark.monitor();\n+          assert(m->object()->mark() == mark, \"invariant\");\n+          assert(m->is_entered(current), \"invariant\");\n+        }\n@@ -492,1 +507,0 @@\n-    }\n@@ -494,8 +508,0 @@\n-    return;\n-  }\n-\n-  if (mark == markWord::from_pointer(lock)) {\n-    \/\/ If the object is stack-locked by the current thread, try to\n-    \/\/ swing the displaced header from the BasicLock back to the mark.\n-    assert(dhw.is_neutral(), \"invariant\");\n-    if (object->cas_set_mark(dhw, mark) == mark) {\n@@ -504,0 +510,11 @@\n+\n+    if (mark == markWord::from_pointer(lock)) {\n+      \/\/ If the object is stack-locked by the current thread, try to\n+      \/\/ swing the displaced header from the BasicLock back to the mark.\n+      assert(dhw.is_neutral(), \"invariant\");\n+      if (object->cas_set_mark(dhw, mark) == mark) {\n+        return;\n+      }\n+    }\n+  } else if (VerifyHeavyMonitors) {\n+    guarantee(!object->mark().has_locker(), \"must not be stack-locked\");\n@@ -807,1 +824,4 @@\n-\n+    if (VerifyHeavyMonitors) {\n+      assert(UseHeavyMonitors, \"+VerifyHeavyMonitors requires +UseHeavyMonitors\");\n+      guarantee(!mark.has_locker(), \"must not be stack locked\");\n+    }\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":72,"deletions":52,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,6 +36,0 @@\n-\/\/ concurrent access counter\n-volatile int MallocSiteTable::_access_count = 0;\n-\n-\/\/ Tracking hashtable contention\n-NOT_PRODUCT(int MallocSiteTable::_peak_count = 0;)\n-\n@@ -205,6 +199,0 @@\n-void MallocSiteTable::shutdown() {\n-  AccessLock locker(&_access_count);\n-  locker.exclusiveLock();\n-  reset();\n-}\n-\n@@ -213,31 +201,1 @@\n-  AccessLock locker(&_access_count);\n-  if (locker.sharedLock()) {\n-    NOT_PRODUCT(_peak_count = MAX2(_peak_count, _access_count);)\n-    return walk(walker);\n-  }\n-  return false;\n-}\n-\n-\n-void MallocSiteTable::AccessLock::exclusiveLock() {\n-  int target;\n-  int val;\n-\n-  assert(_lock_state != ExclusiveLock, \"Can only call once\");\n-  assert(*_lock >= 0, \"Can not content exclusive lock\");\n-\n-  \/\/ make counter negative to block out shared locks\n-  do {\n-    val = *_lock;\n-    target = _MAGIC_ + *_lock;\n-  } while (Atomic::cmpxchg(_lock, val, target) != val);\n-\n-  \/\/ wait for all readers to exit\n-  while (*_lock != _MAGIC_) {\n-#ifdef _WINDOWS\n-    os::naked_short_sleep(1);\n-#else\n-    os::naked_yield();\n-#endif\n-  }\n-  _lock_state = ExclusiveLock;\n+  return walk(walker);\n@@ -247,47 +205,17 @@\n-\n-  AccessLock locker(&_access_count);\n-  if (locker.sharedLock()) {\n-      \/\/ Total number of allocation sites, include empty sites\n-    int total_entries = 0;\n-    \/\/ Number of allocation sites that have all memory freed\n-    int empty_entries = 0;\n-    \/\/ Number of captured call stack distribution\n-    int stack_depth_distribution[NMT_TrackingStackDepth + 1] = { 0 };\n-    \/\/ Chain lengths\n-    int lengths[table_size] = { 0 };\n-\n-    for (int i = 0; i < table_size; i ++) {\n-      int this_chain_length = 0;\n-      const MallocSiteHashtableEntry* head = _table[i];\n-      while (head != NULL) {\n-        total_entries ++;\n-        this_chain_length ++;\n-        if (head->size() == 0) {\n-          empty_entries ++;\n-        }\n-        const int callstack_depth = head->peek()->call_stack()->frames();\n-        assert(callstack_depth >= 0 && callstack_depth <= NMT_TrackingStackDepth,\n-               \"Sanity (%d)\", callstack_depth);\n-        stack_depth_distribution[callstack_depth] ++;\n-        head = head->next();\n-      }\n-      lengths[i] = this_chain_length;\n-    }\n-\n-    st->print_cr(\"Malloc allocation site table:\");\n-    st->print_cr(\"\\tTotal entries: %d\", total_entries);\n-    st->print_cr(\"\\tEmpty entries: %d (%2.2f%%)\", empty_entries, ((float)empty_entries * 100) \/ total_entries);\n-    st->cr();\n-\n-    \/\/ We report the hash distribution (chain length distribution) of the n shortest chains\n-    \/\/  - under the assumption that this usually contains all lengths. Reporting threshold\n-    \/\/  is 20, and the expected avg chain length is 5..6 (see table size).\n-    static const int chain_length_threshold = 20;\n-    int chain_length_distribution[chain_length_threshold] = { 0 };\n-    int over_threshold = 0;\n-    int longest_chain_length = 0;\n-    for (int i = 0; i < table_size; i ++) {\n-      if (lengths[i] >= chain_length_threshold) {\n-        over_threshold ++;\n-      } else {\n-        chain_length_distribution[lengths[i]] ++;\n+  \/\/ Total number of allocation sites, include empty sites\n+  int total_entries = 0;\n+  \/\/ Number of allocation sites that have all memory freed\n+  int empty_entries = 0;\n+  \/\/ Number of captured call stack distribution\n+  int stack_depth_distribution[NMT_TrackingStackDepth + 1] = { 0 };\n+  \/\/ Chain lengths\n+  int lengths[table_size] = { 0 };\n+\n+  for (int i = 0; i < table_size; i ++) {\n+    int this_chain_length = 0;\n+    const MallocSiteHashtableEntry* head = _table[i];\n+    while (head != NULL) {\n+      total_entries ++;\n+      this_chain_length ++;\n+      if (head->size() == 0) {\n+        empty_entries ++;\n@@ -295,1 +223,5 @@\n-      longest_chain_length = MAX2(longest_chain_length, lengths[i]);\n+      const int callstack_depth = head->peek()->call_stack()->frames();\n+      assert(callstack_depth >= 0 && callstack_depth <= NMT_TrackingStackDepth,\n+             \"Sanity (%d)\", callstack_depth);\n+      stack_depth_distribution[callstack_depth] ++;\n+      head = head->next();\n@@ -297,0 +229,2 @@\n+    lengths[i] = this_chain_length;\n+  }\n@@ -298,3 +232,15 @@\n-    st->print_cr(\"Hash distribution:\");\n-    if (chain_length_distribution[0] == 0) {\n-      st->print_cr(\"no empty buckets.\");\n+  st->print_cr(\"Malloc allocation site table:\");\n+  st->print_cr(\"\\tTotal entries: %d\", total_entries);\n+  st->print_cr(\"\\tEmpty entries: %d (%2.2f%%)\", empty_entries, ((float)empty_entries * 100) \/ total_entries);\n+  st->cr();\n+\n+  \/\/ We report the hash distribution (chain length distribution) of the n shortest chains\n+  \/\/  - under the assumption that this usually contains all lengths. Reporting threshold\n+  \/\/  is 20, and the expected avg chain length is 5..6 (see table size).\n+  static const int chain_length_threshold = 20;\n+  int chain_length_distribution[chain_length_threshold] = { 0 };\n+  int over_threshold = 0;\n+  int longest_chain_length = 0;\n+  for (int i = 0; i < table_size; i ++) {\n+    if (lengths[i] >= chain_length_threshold) {\n+      over_threshold ++;\n@@ -302,4 +248,1 @@\n-      st->print_cr(\"%d buckets are empty.\", chain_length_distribution[0]);\n-    }\n-    for (int len = 1; len < MIN2(longest_chain_length + 1, chain_length_threshold); len ++) {\n-      st->print_cr(\"%2d %s: %d.\", len, (len == 1 ? \"  entry\" : \"entries\"), chain_length_distribution[len]);\n+      chain_length_distribution[lengths[i]] ++;\n@@ -307,5 +250,2 @@\n-    if (longest_chain_length >= chain_length_threshold) {\n-      st->print_cr(\">=%2d entries: %d.\", chain_length_threshold, over_threshold);\n-    }\n-    st->print_cr(\"most entries: %d.\", longest_chain_length);\n-    st->cr();\n+    longest_chain_length = MAX2(longest_chain_length, lengths[i]);\n+  }\n@@ -313,7 +253,14 @@\n-    st->print_cr(\"Call stack depth distribution:\");\n-    for (int i = 0; i <= NMT_TrackingStackDepth; i ++) {\n-      st->print_cr(\"\\t%d: %d\", i, stack_depth_distribution[i]);\n-    }\n-    st->cr();\n-  } \/\/ lock\n-}\n+  st->print_cr(\"Hash distribution:\");\n+  if (chain_length_distribution[0] == 0) {\n+    st->print_cr(\"no empty buckets.\");\n+  } else {\n+    st->print_cr(\"%d buckets are empty.\", chain_length_distribution[0]);\n+  }\n+  for (int len = 1; len < MIN2(longest_chain_length + 1, chain_length_threshold); len ++) {\n+    st->print_cr(\"%2d %s: %d.\", len, (len == 1 ? \"  entry\" : \"entries\"), chain_length_distribution[len]);\n+  }\n+  if (longest_chain_length >= chain_length_threshold) {\n+    st->print_cr(\">=%2d entries: %d.\", chain_length_threshold, over_threshold);\n+  }\n+  st->print_cr(\"most entries: %d.\", longest_chain_length);\n+  st->cr();\n@@ -321,0 +268,6 @@\n+  st->print_cr(\"Call stack depth distribution:\");\n+  for (int i = 0; i <= NMT_TrackingStackDepth; i ++) {\n+    st->print_cr(\"\\t%d: %d\", i, stack_depth_distribution[i]);\n+  }\n+  st->cr();\n+}\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.cpp","additions":64,"deletions":111,"binary":false,"changes":175,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,43 +121,0 @@\n-  \/\/ This is a very special lock, that allows multiple shared accesses (sharedLock), but\n-  \/\/ once exclusive access (exclusiveLock) is requested, all shared accesses are\n-  \/\/ rejected forever.\n-  class AccessLock : public StackObj {\n-    enum LockState {\n-      NoLock,\n-      SharedLock,\n-      ExclusiveLock\n-    };\n-\n-   private:\n-    \/\/ A very large negative number. The only possibility to \"overflow\"\n-    \/\/ this number is when there are more than -min_jint threads in\n-    \/\/ this process, which is not going to happen in foreseeable future.\n-    const static int _MAGIC_ = min_jint;\n-\n-    LockState      _lock_state;\n-    volatile int*  _lock;\n-   public:\n-    AccessLock(volatile int* lock) :\n-      _lock_state(NoLock), _lock(lock) {\n-    }\n-\n-    ~AccessLock() {\n-      if (_lock_state == SharedLock) {\n-        Atomic::dec(_lock);\n-      }\n-    }\n-    \/\/ Acquire shared lock.\n-    \/\/ Return true if shared access is granted.\n-    inline bool sharedLock() {\n-      jint res = Atomic::add(_lock, 1);\n-      if (res < 0) {\n-        Atomic::dec(_lock);\n-        return false;\n-      }\n-      _lock_state = SharedLock;\n-      return true;\n-    }\n-    \/\/ Acquire exclusive lock\n-    void exclusiveLock();\n- };\n-\n@@ -166,3 +123,0 @@\n-  static void shutdown();\n-\n-  NOT_PRODUCT(static int access_peak_count() { return _peak_count; })\n@@ -177,8 +131,4 @@\n-    AccessLock locker(&_access_count);\n-    if (locker.sharedLock()) {\n-      NOT_PRODUCT(_peak_count = MAX2(_peak_count, _access_count);)\n-      MallocSite* site = malloc_site(bucket_idx, pos_idx);\n-      if (site != NULL) {\n-        stack = *site->call_stack();\n-        return true;\n-      }\n+    MallocSite* site = malloc_site(bucket_idx, pos_idx);\n+    if (site != NULL) {\n+      stack = *site->call_stack();\n+      return true;\n@@ -198,8 +148,3 @@\n-    AccessLock locker(&_access_count);\n-    if (locker.sharedLock()) {\n-      NOT_PRODUCT(_peak_count = MAX2(_peak_count, _access_count);)\n-      MallocSite* site = lookup_or_add(stack, bucket_idx, pos_idx, flags);\n-      if (site != NULL) site->allocate(size);\n-      return site != NULL;\n-    }\n-    return false;\n+    MallocSite* site = lookup_or_add(stack, bucket_idx, pos_idx, flags);\n+    if (site != NULL) site->allocate(size);\n+    return site != NULL;\n@@ -211,8 +156,4 @@\n-    AccessLock locker(&_access_count);\n-    if (locker.sharedLock()) {\n-      NOT_PRODUCT(_peak_count = MAX2(_peak_count, _access_count);)\n-      MallocSite* site = malloc_site(bucket_idx, pos_idx);\n-      if (site != NULL) {\n-        site->deallocate(size);\n-        return true;\n-      }\n+    MallocSite* site = malloc_site(bucket_idx, pos_idx);\n+    if (site != NULL) {\n+      site->deallocate(size);\n+      return true;\n@@ -254,3 +195,0 @@\n-  \/\/ Counter for counting concurrent access\n-  static volatile int                _access_count;\n-\n@@ -262,3 +200,0 @@\n-\n-\n-  NOT_PRODUCT(static int     _peak_count;)\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.hpp","additions":12,"deletions":77,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -116,2 +116,1 @@\n-  \/\/ Tracking already shutdown, no housekeeping is needed anymore\n-  if (MemTracker::tracking_level() <= NMT_minimal) return;\n+  assert(MemTracker::enabled(), \"Sanity\");\n@@ -225,9 +224,1 @@\n-  bool ret = MallocSiteTable::allocation_at(stack, size, bucket_idx, pos_idx, flags);\n-\n-  \/\/ Something went wrong, could be OOM or overflow malloc site table.\n-  \/\/ We want to keep tracking data under OOM circumstance, so transition to\n-  \/\/ summary tracking.\n-  if (!ret) {\n-    MemTracker::transition_to(NMT_summary);\n-  }\n-  return ret;\n+  return MallocSiteTable::allocation_at(stack, size, bucket_idx, pos_idx, flags);\n@@ -251,12 +242,0 @@\n-bool MallocTracker::transition(NMT_TrackingLevel from, NMT_TrackingLevel to) {\n-  assert(from != NMT_off, \"Can not transition from off state\");\n-  assert(to != NMT_off, \"Can not transition to off state\");\n-  assert (from != NMT_minimal, \"cannot transition from minimal state\");\n-\n-  if (from == NMT_detail) {\n-    assert(to == NMT_minimal || to == NMT_summary, \"Just check\");\n-    MallocSiteTable::shutdown();\n-  }\n-  return true;\n-}\n-\n@@ -284,1 +263,1 @@\n-  if (level > NMT_minimal) {\n+  if (level > NMT_off) {\n","filename":"src\/hotspot\/share\/services\/mallocTracker.cpp","additions":3,"deletions":24,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-\n@@ -336,4 +335,0 @@\n-    if (level == NMT_minimal) {\n-      return;\n-    }\n-\n@@ -389,2 +384,0 @@\n-  static bool transition(NMT_TrackingLevel from, NMT_TrackingLevel to);\n-\n","filename":"src\/hotspot\/share\/services\/mallocTracker.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -111,32 +111,0 @@\n-\n-\/\/ Shutdown can only be issued via JCmd, and NMT JCmd is serialized by lock\n-void MemTracker::shutdown() {\n-  \/\/ We can only shutdown NMT to minimal tracking level if it is ever on.\n-  if (tracking_level() > NMT_minimal) {\n-    transition_to(NMT_minimal);\n-  }\n-}\n-\n-bool MemTracker::transition_to(NMT_TrackingLevel level) {\n-  NMT_TrackingLevel current_level = tracking_level();\n-\n-  assert(level != NMT_off || current_level == NMT_off, \"Cannot transition NMT to off\");\n-\n-  if (current_level == level) {\n-    return true;\n-  } else if (current_level > level) {\n-    \/\/ Downgrade tracking level, we want to lower the tracking level first\n-    _tracking_level = level;\n-    \/\/ Make _tracking_level visible immediately.\n-    OrderAccess::fence();\n-    VirtualMemoryTracker::transition(current_level, level);\n-    MallocTracker::transition(current_level, level);\n-    ThreadStackTracker::transition(current_level, level);\n-  } else {\n-    \/\/ Upgrading tracking level is not supported and has never been supported.\n-    \/\/ Allocating and deallocating malloc tracking structures is not thread safe and\n-    \/\/ leads to inconsistencies unless a lot coarser locks are added.\n-  }\n-  return true;\n-}\n-\n@@ -145,1 +113,1 @@\n-  if (tracking_level() >= NMT_summary) {\n+  if (enabled()) {\n@@ -160,5 +128,2 @@\n-  if (Atomic::cmpxchg(&g_final_report_did_run, false, true) == false) {\n-    NMT_TrackingLevel level = tracking_level();\n-    if (level >= NMT_summary) {\n-      report(level == NMT_summary, output, 1);\n-    }\n+  if (enabled() && Atomic::cmpxchg(&g_final_report_did_run, false, true) == false) {\n+    report(tracking_level() == NMT_summary, output, 1);\n@@ -192,1 +157,0 @@\n-  NOT_PRODUCT(out->print_cr(\"Peak concurrent access: %d\", MallocSiteTable::access_peak_count());)\n","filename":"src\/hotspot\/share\/services\/memTracker.cpp","additions":3,"deletions":39,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  static inline void shutdown() { }\n+  static inline bool enabled() { return false; }\n@@ -140,8 +140,3 @@\n-  \/\/ Shutdown native memory tracking.\n-  \/\/ This transitions the tracking level:\n-  \/\/  summary -> minimal\n-  \/\/  detail  -> minimal\n-  static void shutdown();\n-\n-  \/\/ Transition the tracking level to specified level\n-  static bool transition_to(NMT_TrackingLevel level);\n+  static inline bool enabled() {\n+    return _tracking_level > NMT_off;\n+  }\n@@ -183,1 +178,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -189,1 +184,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -196,1 +191,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -206,1 +201,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -209,2 +204,0 @@\n-      \/\/ Recheck to avoid potential racing during NMT shutdown\n-      if (tracking_level() < NMT_summary) return;\n@@ -218,1 +211,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -221,1 +214,0 @@\n-      if (tracking_level() < NMT_summary) return;\n@@ -230,1 +222,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -233,1 +225,0 @@\n-      if (tracking_level() < NMT_summary) return;\n@@ -246,1 +237,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -249,2 +240,0 @@\n-      \/\/ Recheck to avoid potential racing during NMT shutdown\n-      if (tracking_level() < NMT_summary) return;\n@@ -257,1 +246,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -260,1 +249,0 @@\n-      if (tracking_level() < NMT_summary) return;\n@@ -267,1 +255,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n@@ -275,1 +263,1 @@\n-    if (tracking_level() < NMT_summary) return;\n+    if (!enabled()) return;\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":14,"deletions":26,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,4 @@\n+STATIC_ASSERT(NMT_off > NMT_unknown);\n+STATIC_ASSERT(NMT_summary > NMT_off);\n+STATIC_ASSERT(NMT_detail > NMT_summary);\n+\n@@ -35,1 +39,0 @@\n-\n@@ -67,1 +70,0 @@\n-    case NMT_minimal: return \"minimal\"; break;\n","filename":"src\/hotspot\/share\/services\/nmtCommon.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,4 +44,0 @@\n-\/\/ \"minimal\": after shutdown - NMT had been on at some point but has been switched off\n-\/\/             - nothing is tracked\n-\/\/             - malloc headers are allocated but not initialized not used\n-\/\/\n@@ -62,8 +58,0 @@\n-\/\/ Valid state transitions:\n-\/\/\n-\/\/ unknown ----> off\n-\/\/          |\n-\/\/          |--> summary --\n-\/\/          |              |\n-\/\/          |--> detail  --+--> minimal\n-\/\/\n@@ -73,1 +61,1 @@\n-\/\/ unknown < off < minimal < summary < detail\n+\/\/ unknown < off < summary < detail\n@@ -76,5 +64,4 @@\n-  NMT_unknown = 0,\n-  NMT_off     = 1,\n-  NMT_minimal = 2,\n-  NMT_summary = 3,\n-  NMT_detail  = 4\n+  NMT_unknown,\n+  NMT_off,\n+  NMT_summary,\n+  NMT_detail\n","filename":"src\/hotspot\/share\/services\/nmtCommon.hpp","additions":6,"deletions":19,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2019, 2021, Red Hat, Inc. All rights reserved.\n@@ -45,13 +45,0 @@\n-bool ThreadStackTracker::transition(NMT_TrackingLevel from, NMT_TrackingLevel to) {\n-  assert (from != NMT_minimal, \"cannot convert from the lowest tracking level to anything\");\n-  if (to == NMT_minimal) {\n-    assert(from == NMT_summary || from == NMT_detail, \"Just check\");\n-    ThreadCritical tc;\n-    if (_simple_thread_stacks != NULL) {\n-      delete _simple_thread_stacks;\n-      _simple_thread_stacks = NULL;\n-    }\n-  }\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/share\/services\/threadStackTracker.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2019, 2021, Red Hat, Inc. All rights reserved.\n@@ -75,1 +75,0 @@\n-  static bool transition(NMT_TrackingLevel from, NMT_TrackingLevel to);\n","filename":"src\/hotspot\/share\/services\/threadStackTracker.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -674,17 +674,0 @@\n-\n-\/\/ Transition virtual memory tracking level.\n-bool VirtualMemoryTracker::transition(NMT_TrackingLevel from, NMT_TrackingLevel to) {\n-  assert (from != NMT_minimal, \"cannot convert from the lowest tracking level to anything\");\n-  if (to == NMT_minimal) {\n-    assert(from == NMT_summary || from == NMT_detail, \"Just check\");\n-    \/\/ Clean up virtual memory tracking data structures.\n-    ThreadCritical tc;\n-    \/\/ Check for potential race with other thread calling transition\n-    if (_reserved_regions != NULL) {\n-      delete _reserved_regions;\n-      _reserved_regions = NULL;\n-    }\n-  }\n-\n-  return true;\n-}\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -390,2 +390,0 @@\n-  static bool transition(NMT_TrackingLevel from, NMT_TrackingLevel to);\n-\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1207,1 +1207,1 @@\n-        Objects.checkFromToIndex(off, len, buf.length);\n+        Objects.checkFromIndexSize(off, len, buf.length);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -278,0 +278,4 @@\n+     *\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -279,1 +283,2 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @Deprecated(since=\"18\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Enum.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -481,0 +481,6 @@\n+     * <b>When running in a Java virtual machine in which finalization has been\n+     * disabled or removed, the garbage collector will never call\n+     * {@code finalize()}. In a Java virtual machine in which finalization is\n+     * enabled, the garbage collector might call {@code finalize} only after an\n+     * indefinite delay.<\/b>\n+     * <p>\n@@ -546,15 +552,17 @@\n-     * @deprecated The finalization mechanism is inherently problematic.\n-     * Finalization can lead to performance issues, deadlocks, and hangs.\n-     * Errors in finalizers can lead to resource leaks; there is no way to cancel\n-     * finalization if it is no longer necessary; and no ordering is specified\n-     * among calls to {@code finalize} methods of different objects.\n-     * Furthermore, there are no guarantees regarding the timing of finalization.\n-     * The {@code finalize} method might be called on a finalizable object\n-     * only after an indefinite delay, if at all.\n-     *\n-     * Classes whose instances hold non-heap resources should provide a method\n-     * to enable explicit release of those resources, and they should also\n-     * implement {@link AutoCloseable} if appropriate.\n-     * The {@link java.lang.ref.Cleaner} and {@link java.lang.ref.PhantomReference}\n-     * provide more flexible and efficient ways to release resources when an object\n-     * becomes unreachable.\n+     * @deprecated Finalization is deprecated and subject to removal in a future\n+     * release. The use of finalization can lead to problems with security,\n+     * performance, and reliability.\n+     * See <a href=\"https:\/\/openjdk.java.net\/jeps\/421\">JEP 421<\/a> for\n+     * discussion and alternatives.\n+     * <p>\n+     * Subclasses that override {@code finalize} to perform cleanup should use\n+     * alternative cleanup mechanisms and remove the {@code finalize} method.\n+     * Use {@link java.lang.ref.Cleaner} and\n+     * {@link java.lang.ref.PhantomReference} as safer ways to release resources\n+     * when an object becomes unreachable. Alternatively, add a {@code close}\n+     * method to explicitly release resources, and implement\n+     * {@code AutoCloseable} to enable use of the {@code try}-with-resources\n+     * statement.\n+     * <p>\n+     * This method will remain in place until finalizers have been removed from\n+     * most existing code.\n@@ -567,1 +575,1 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":24,"deletions":16,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -710,0 +710,7 @@\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n+     * <p>\n+     * When running in a JVM in which finalization has been disabled or removed,\n+     * no objects will be pending finalization, so this method does nothing.\n+     *\n@@ -711,0 +718,1 @@\n+     * @jls 12.6 Finalization of Class Instances\n@@ -712,0 +720,1 @@\n+    @Deprecated(since=\"18\", forRemoval=true)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1925,0 +1925,7 @@\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n+     * <p>\n+     * When running in a JVM in which finalization has been disabled or removed,\n+     * no objects will be pending finalization, so this method does nothing.\n+     *\n@@ -1926,0 +1933,1 @@\n+     * @jls 12.6 Finalization of Class Instances\n@@ -1927,0 +1935,2 @@\n+    @Deprecated(since=\"18\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n@@ -2324,1 +2334,1 @@\n-            @SuppressWarnings(\"deprecation\")\n+            @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -64,0 +64,4 @@\n+    static final boolean ENABLED = isFinalizationEnabled();\n+\n+    private static native boolean isFinalizationEnabled();\n+\n@@ -66,1 +70,5 @@\n-        new Finalizer(finalizee);\n+        if (ENABLED) {\n+            new Finalizer(finalizee);\n+        } else {\n+            throw new InternalError(\"unexpected call to Finalizer::register when finalization is disabled\");\n+        }\n@@ -133,1 +141,1 @@\n-        if (VM.initLevel() == 0) {\n+        if (VM.initLevel() == 0 || ! ENABLED) {\n@@ -185,8 +193,10 @@\n-        ThreadGroup tg = Thread.currentThread().getThreadGroup();\n-        for (ThreadGroup tgn = tg;\n-             tgn != null;\n-             tg = tgn, tgn = tg.getParent());\n-        Thread finalizer = new FinalizerThread(tg);\n-        finalizer.setPriority(Thread.MAX_PRIORITY - 2);\n-        finalizer.setDaemon(true);\n-        finalizer.start();\n+        if (ENABLED) {\n+            ThreadGroup tg = Thread.currentThread().getThreadGroup();\n+            for (ThreadGroup tgn = tg;\n+                 tgn != null;\n+                 tg = tgn, tgn = tg.getParent());\n+            Thread finalizer = new FinalizerThread(tg);\n+            finalizer.setPriority(Thread.MAX_PRIORITY - 2);\n+            finalizer.setDaemon(true);\n+            finalizer.start();\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Finalizer.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -399,3 +399,2 @@\n-     * @throws NullPointerException if any argument but {@code lookup} is {@code null},\n-     *                              in the case of the {@code getters} argument, its\n-     *                              contents cannot be {@code null} either\n+     * @throws NullPointerException if any argument is {@code null} or if any element\n+     *                              in the {@code getters} array is {@code null}\n@@ -408,0 +407,1 @@\n+        requireNonNull(lookup);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/ObjectMethods.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-     * Various states of this socket.\n+     * The underlying SocketImpl\n@@ -83,4 +83,1 @@\n-    private boolean created = false;\n-    private boolean bound = false;\n-    private boolean closed = false;\n-    private Object closeLock = new Object();\n+    private final SocketImpl impl;\n@@ -89,1 +86,1 @@\n-     * The implementation of this Socket.\n+     * Various states of this socket, need stateLock to change.\n@@ -91,1 +88,4 @@\n-    private SocketImpl impl;\n+    private volatile boolean created;   \/\/ impl.create(boolean) called\n+    private volatile boolean bound;\n+    private volatile boolean closed;\n+    private final Object stateLock = new Object();\n@@ -127,1 +127,1 @@\n-        setImpl();\n+        this.impl = createImpl();\n@@ -267,1 +267,0 @@\n-        setImpl();\n@@ -269,2 +268,1 @@\n-            throw new IllegalArgumentException(\n-                       \"Port value out of range: \" + port);\n+            throw new IllegalArgumentException(\"Port value out of range: \" + port);\n@@ -272,1 +270,3 @@\n-          backlog = 50;\n+            backlog = 50;\n+\n+        this.impl = createImpl();\n@@ -275,4 +275,1 @@\n-        } catch(SecurityException e) {\n-            close();\n-            throw e;\n-        } catch(IOException e) {\n+        } catch (IOException | SecurityException e) {\n@@ -292,3 +289,18 @@\n-    SocketImpl getImpl() throws SocketException {\n-        if (!created)\n-            createImpl();\n+    private SocketImpl getImpl() throws SocketException {\n+        if (!created) {\n+            synchronized (stateLock) {\n+                if (!created) {\n+                    if (closed) {\n+                        throw new SocketException(\"Socket is closed\");\n+                    }\n+                    try {\n+                        impl.create(true);\n+                    } catch (SocketException e) {\n+                        throw e;\n+                    } catch (IOException e) {\n+                        throw new SocketException(e.getMessage());\n+                    }\n+                    created = true;\n+                }\n+            }\n+        }\n@@ -298,1 +310,4 @@\n-    private void setImpl() {\n+    \/**\n+     * Create a SocketImpl for a server socket.\n+     *\/\n+    private static SocketImpl createImpl() {\n@@ -301,1 +316,1 @@\n-            impl = factory.createSocketImpl();\n+            return factory.createSocketImpl();\n@@ -303,18 +318,1 @@\n-            impl = SocketImpl.createPlatformSocketImpl(true);\n-        }\n-    }\n-\n-    \/**\n-     * Creates the socket implementation.\n-     *\n-     * @throws SocketException if creation fails\n-     * @since 1.4\n-     *\/\n-    void createImpl() throws SocketException {\n-        if (impl == null)\n-            setImpl();\n-        try {\n-            impl.create(true);\n-            created = true;\n-        } catch (IOException e) {\n-            throw new SocketException(e.getMessage());\n+            return SocketImpl.createPlatformSocketImpl(true);\n@@ -382,6 +380,12 @@\n-          backlog = 50;\n-        try {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager security = System.getSecurityManager();\n-            if (security != null)\n-                security.checkListen(epoint.getPort());\n+            backlog = 50;\n+\n+        @SuppressWarnings(\"removal\")\n+        SecurityManager security = System.getSecurityManager();\n+        if (security != null)\n+            security.checkListen(epoint.getPort());\n+\n+        synchronized (stateLock) {\n+            if (closed)\n+                throw new SocketException(\"Socket is closed\");\n+            if (bound)\n+                throw new SocketException(\"Already bound\");\n@@ -391,6 +395,0 @@\n-        } catch(SecurityException e) {\n-            bound = false;\n-            throw e;\n-        } catch(IOException e) {\n-            bound = false;\n-            throw e;\n@@ -714,6 +712,9 @@\n-        synchronized(closeLock) {\n-            if (isClosed())\n-                return;\n-            if (created)\n-                impl.close();\n-            closed = true;\n+        synchronized (stateLock) {\n+            if (!closed) {\n+                closed = true;\n+\n+                \/\/ close underlying socket if created\n+                if (created) {\n+                    impl.close();\n+                }\n+            }\n@@ -763,3 +764,1 @@\n-        synchronized(closeLock) {\n-            return closed;\n-        }\n+        return closed;\n@@ -786,1 +785,1 @@\n-    public synchronized void setSoTimeout(int timeout) throws SocketException {\n+    public void setSoTimeout(int timeout) throws SocketException {\n@@ -802,1 +801,1 @@\n-    public synchronized int getSoTimeout() throws IOException {\n+    public int getSoTimeout() throws IOException {\n@@ -987,1 +986,1 @@\n-     public synchronized void setReceiveBufferSize (int size) throws SocketException {\n+     public void setReceiveBufferSize (int size) throws SocketException {\n@@ -1010,2 +1009,1 @@\n-    public synchronized int getReceiveBufferSize()\n-    throws SocketException{\n+    public int getReceiveBufferSize() throws SocketException {\n","filename":"src\/java.base\/share\/classes\/java\/net\/ServerSocket.java","additions":63,"deletions":65,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -69,1 +69,2 @@\n- * set and the error or exception will be propagated to the calling thread.\n+ * set and the error or exception will be propagated to the caller of the method\n+ * that triggered the lookup operation.\n@@ -88,1 +89,1 @@\n-     * the calling thread.\n+     * the caller of the method that triggered the lookup operation.\n","filename":"src\/java.base\/share\/classes\/java\/net\/spi\/InetAddressResolverProvider.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -72,3 +72,6 @@\n-     * <p> The {@code read} methods of the resulting stream will throw an\n-     * {@link IllegalBlockingModeException} if invoked while the underlying\n-     * channel is in non-blocking mode.  The stream will not be buffered, and\n+     * <p> The {@code read} and {@code transferTo} methods of the resulting stream\n+     * will throw an {@link IllegalBlockingModeException} if invoked while the\n+     * underlying channel is in non-blocking mode. The {@code transferTo} method\n+     * will also throw an {@code IllegalBlockingModeException} if invoked to\n+     * transfer bytes to an output stream that writes to an underlying channel in\n+     * non-blocking mode.  The stream will not be buffered, and\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Channels.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1023,0 +1023,28 @@\n+    \/**\n+     * Retrieves the attributes associated with the given alias.\n+     *\n+     * @param alias the alias name\n+     * @return an unmodifiable {@code Set} of attributes. This set is\n+     *      empty if the {@code KeyStoreSpi} implementation has not overridden\n+     *      {@link KeyStoreSpi#engineGetAttributes(String)}, or the given\n+     *      alias does not exist, or there are no attributes associated\n+     *      with the alias. This set may also be empty for\n+     *      {@code PrivateKeyEntry} or {@code SecretKeyEntry}\n+     *      entries that contain protected attributes and are only available\n+     *      through the {@link Entry#getAttributes} method after the entry\n+     *      is extracted.\n+     *\n+     * @throws KeyStoreException if the keystore has not been initialized\n+     * (loaded).\n+     * @throws NullPointerException if {@code alias} is {@code null}\n+     *\n+     * @since 18\n+     *\/\n+    public final Set<Entry.Attribute> getAttributes(String alias)\n+            throws KeyStoreException {\n+        if (!initialized) {\n+            throw new KeyStoreException(\"Uninitialized keystore\");\n+        }\n+        return keyStoreSpi.engineGetAttributes(Objects.requireNonNull(alias));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyStore.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -450,0 +450,24 @@\n+    \/**\n+     * Retrieves the attributes associated with the given alias.\n+     *\n+     * @implSpec\n+     * The default implementation returns an empty {@code Set}.\n+     * {@code KeyStoreSpi} implementations that support attributes\n+     * should override this method.\n+     *\n+     * @param alias the alias name\n+     * @return an unmodifiable {@code Set} of attributes. This set is\n+     *      empty if the given alias does not exist or there are no\n+     *      attributes associated with the alias. This set may also be\n+     *      empty for {@code PrivateKeyEntry} or {@code SecretKeyEntry}\n+     *      entries that contain protected attributes. These protected\n+     *      attributes should be populated into the result returned by\n+     *      {@link #engineGetEntry} and can be retrieved by calling\n+     *      the {@link Entry#getAttributes} method.\n+     *\n+     * @since 18\n+     *\/\n+    public Set<Entry.Attribute> engineGetAttributes(String alias) {\n+        return Collections.emptySet();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyStoreSpi.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -194,0 +194,2 @@\n+        this.legacyMap = new ConcurrentHashMap<>();\n+        this.prngAlgos = new LinkedHashSet<String>(6);\n@@ -232,0 +234,2 @@\n+        this.legacyMap = new ConcurrentHashMap<>();\n+        this.prngAlgos = new LinkedHashSet<String>(6);\n@@ -575,1 +579,0 @@\n-\n@@ -601,1 +604,0 @@\n-\n@@ -630,1 +632,0 @@\n-\n@@ -660,1 +661,0 @@\n-\n@@ -687,2 +687,2 @@\n-    public synchronized Object computeIfAbsent(Object key, Function<? super Object,\n-            ? extends Object> mappingFunction) {\n+    public synchronized Object computeIfAbsent(Object key,\n+            Function<? super Object, ? extends Object> mappingFunction) {\n@@ -691,1 +691,0 @@\n-\n@@ -717,2 +716,3 @@\n-    public synchronized Object computeIfPresent(Object key, BiFunction<? super Object,\n-            ? super Object, ? extends Object> remappingFunction) {\n+    public synchronized Object computeIfPresent(Object key,\n+            BiFunction<? super Object, ? super Object, ? extends Object>\n+            remappingFunction) {\n@@ -721,1 +721,0 @@\n-\n@@ -750,2 +749,3 @@\n-    public synchronized Object merge(Object key, Object value,  BiFunction<? super Object,\n-            ? super Object, ? extends Object>  remappingFunction) {\n+    public synchronized Object merge(Object key, Object value,\n+            BiFunction<? super Object, ? super Object, ? extends Object>\n+            remappingFunction) {\n@@ -754,1 +754,0 @@\n-\n@@ -780,1 +779,2 @@\n-    public synchronized void forEach(BiConsumer<? super Object, ? super Object> action) {\n+    public synchronized void forEach(BiConsumer<? super Object, ? super Object>\n+            action) {\n@@ -820,2 +820,2 @@\n-    \/\/ legacy properties changed since last call to any services method?\n-    private transient boolean legacyChanged;\n+    \/\/ legacyMap changed since last call to getServices()\n+    private transient volatile boolean legacyChanged;\n@@ -825,3 +825,0 @@\n-    \/\/ Map<String,String> used to keep track of legacy registration\n-    private transient Map<String,String> legacyStrings;\n-\n@@ -835,0 +832,3 @@\n+    \/\/ NOTE: may need extra mechanism for providers to indicate their\n+    \/\/ preferred ordering of SecureRandom algorithms since registration\n+    \/\/ ordering info is lost once serialized\n@@ -843,1 +843,1 @@\n-    private transient Set<Service> serviceSet;\n+    private transient volatile Set<Service> serviceSet;\n@@ -875,0 +875,1 @@\n+\n@@ -885,0 +886,2 @@\n+        this.legacyMap = new ConcurrentHashMap<>();\n+        this.prngAlgos = new LinkedHashSet<String>(6);\n@@ -890,4 +893,5 @@\n-    \/\/ check whether to update 'legacyString' with the specified key\n-    private boolean checkLegacy(Object key) {\n-        String keyString = (String)key;\n-        if (keyString.startsWith(\"Provider.\")) {\n+    \/\/ returns false if no update necessary, i.e. key isn't String or\n+    \/\/ is String but it's provider-related (name\/version\/info\/className)\n+    private static boolean checkLegacy(Object key) {\n+        if (key instanceof String && ((String)key).startsWith(\"Provider.\")) {\n+            \/\/ ignore provider related updates\n@@ -895,0 +899,2 @@\n+        } else {\n+            return true;\n@@ -896,6 +902,0 @@\n-\n-        legacyChanged = true;\n-        if (legacyStrings == null) {\n-            legacyStrings = new LinkedHashMap<>();\n-        }\n-        return true;\n@@ -916,5 +916,5 @@\n-        if (key instanceof String) {\n-            if (!checkLegacy(key)) {\n-                return null;\n-            }\n-            legacyStrings.remove((String)key);\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.remove(key);\n+        if (o instanceof String so && key instanceof String sk) {\n+            parseLegacy(sk, so, OPType.REMOVE);\n@@ -922,1 +922,1 @@\n-        return super.remove(key);\n+        return o;\n@@ -926,5 +926,5 @@\n-        if (key instanceof String && value instanceof String) {\n-            if (!checkLegacy(key)) {\n-                return false;\n-            }\n-            legacyStrings.remove((String)key, (String)value);\n+        if (!checkLegacy(key)) return false;\n+\n+        boolean result = super.remove(key, value);\n+        if (result && key instanceof String sk && value instanceof String sv) {\n+            parseLegacy(sk, sv, OPType.REMOVE);\n@@ -932,1 +932,1 @@\n-        return super.remove(key, value);\n+        return result;\n@@ -936,4 +936,8 @@\n-        if ((key instanceof String) && (oldValue instanceof String) &&\n-                (newValue instanceof String)) {\n-            if (!checkLegacy(key)) {\n-                return false;\n+        if (!checkLegacy(key)) return false;\n+\n+        boolean result = super.replace(key, oldValue, newValue);\n+        if (result && key instanceof String sk) {\n+            if (newValue instanceof String sv) {\n+                parseLegacy(sk, sv, OPType.ADD);\n+            } else if (oldValue instanceof String sv) {\n+                parseLegacy(sk, sv, OPType.REMOVE);\n@@ -941,2 +945,0 @@\n-            legacyStrings.replace((String)key, (String)oldValue,\n-                    (String)newValue);\n@@ -944,1 +946,1 @@\n-        return super.replace(key, oldValue, newValue);\n+        return result;\n@@ -948,3 +950,10 @@\n-        if ((key instanceof String) && (value instanceof String)) {\n-            if (!checkLegacy(key)) {\n-                return null;\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.replace(key, value);\n+        if (key instanceof String sk) {\n+            if (o instanceof String so) {\n+                if (value instanceof String sv) {\n+                    parseLegacy(sk, sv, OPType.ADD);\n+                } else {\n+                    parseLegacy(sk, so, OPType.REMOVE);\n+                }\n@@ -952,1 +961,0 @@\n-            legacyStrings.replace((String)key, (String)value);\n@@ -954,1 +962,1 @@\n-        return super.replace(key, value);\n+        return o;\n@@ -960,0 +968,4 @@\n+\n+        super.replaceAll(function);\n+        \/\/ clear out all existing mappings and start fresh\n+        legacyMap.clear();\n@@ -961,5 +973,9 @@\n-        if (legacyStrings == null) {\n-            legacyStrings = new LinkedHashMap<>();\n-        } else {\n-            legacyStrings.replaceAll((BiFunction<? super String, ? super String,\n-                    ? extends String>) function);\n+        for (Map.Entry<Object, Object> entry : super.entrySet()) {\n+            Object key = entry.getKey();\n+            Object value = entry.getValue();\n+            if ((key instanceof String sk) && (value instanceof String sv)) {\n+                if (!checkLegacy(sk)) {\n+                    continue;\n+                }\n+                parseLegacy(sk, sv, OPType.ADD);\n+            }\n@@ -967,1 +983,0 @@\n-        super.replaceAll(function);\n@@ -974,3 +989,8 @@\n-        if ((key instanceof String) && (value instanceof String)) {\n-            if (!checkLegacy(key)) {\n-                return null;\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.merge(key, value, remappingFunction);\n+        if (key instanceof String sk) {\n+            if (o == null) {\n+                parseLegacy(sk, null, OPType.REMOVE);\n+            } else if (o instanceof String so) {\n+                parseLegacy(sk, so, OPType.ADD);\n@@ -978,3 +998,0 @@\n-            legacyStrings.merge((String)key, (String)value,\n-                    (BiFunction<? super String, ? super String,\n-                    ? extends String>) remappingFunction);\n@@ -982,1 +999,1 @@\n-        return super.merge(key, value, remappingFunction);\n+        return o;\n@@ -988,3 +1005,9 @@\n-        if (key instanceof String) {\n-            if (!checkLegacy(key)) {\n-                return null;\n+\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.compute(key, remappingFunction);\n+        if (key instanceof String sk) {\n+            if (o == null) {\n+                parseLegacy(sk, null, OPType.REMOVE);\n+            } else if (o instanceof String so) {\n+                parseLegacy(sk, so, OPType.ADD);\n@@ -992,3 +1015,0 @@\n-            legacyStrings.compute((String) key,\n-                    (BiFunction<? super String,? super String,\n-                    ? extends String>) remappingFunction);\n@@ -996,1 +1016,1 @@\n-        return super.compute(key, remappingFunction);\n+        return o;\n@@ -1002,7 +1022,5 @@\n-        if (key instanceof String) {\n-            if (!checkLegacy(key)) {\n-                return null;\n-            }\n-            legacyStrings.computeIfAbsent((String) key,\n-                    (Function<? super String, ? extends String>)\n-                    mappingFunction);\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.computeIfAbsent(key, mappingFunction);\n+        if (o instanceof String so && key instanceof String sk) {\n+            parseLegacy(sk, so, OPType.ADD);\n@@ -1010,1 +1028,1 @@\n-        return super.computeIfAbsent(key, mappingFunction);\n+        return o;\n@@ -1016,7 +1034,5 @@\n-        if (key instanceof String) {\n-            if (!checkLegacy(key)) {\n-                return null;\n-            }\n-            legacyStrings.computeIfPresent((String) key,\n-                    (BiFunction<? super String, ? super String,\n-                    ? extends String>) remappingFunction);\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.computeIfPresent(key, remappingFunction);\n+        if (o instanceof String so && key instanceof String sk) {\n+            parseLegacy(sk, so, OPType.ADD);\n@@ -1024,1 +1040,1 @@\n-        return super.computeIfPresent(key, remappingFunction);\n+        return o;\n@@ -1028,5 +1044,5 @@\n-        if ((key instanceof String) && (value instanceof String)) {\n-            if (!checkLegacy(key)) {\n-                return null;\n-            }\n-            legacyStrings.put((String)key, (String)value);\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.put(key, value);\n+        if (key instanceof String sk && value instanceof String sv) {\n+            parseLegacy(sk, sv, OPType.ADD);\n@@ -1034,1 +1050,1 @@\n-        return super.put(key, value);\n+        return o;\n@@ -1038,5 +1054,6 @@\n-        if ((key instanceof String) && (value instanceof String)) {\n-            if (!checkLegacy(key)) {\n-                return null;\n-            }\n-            legacyStrings.putIfAbsent((String)key, (String)value);\n+        if (!checkLegacy(key)) return null;\n+\n+        Object o = super.putIfAbsent(key, value);\n+        if (o == null && key instanceof String sk &&\n+                value instanceof String sv) {\n+            parseLegacy(sk, sv, OPType.ADD);\n@@ -1044,1 +1061,1 @@\n-        return super.putIfAbsent(key, value);\n+        return o;\n@@ -1048,6 +1065,1 @@\n-        if (legacyStrings != null) {\n-            legacyStrings.clear();\n-        }\n-        if (legacyMap != null) {\n-            legacyMap.clear();\n-        }\n+        legacyMap.clear();\n@@ -1058,1 +1070,1 @@\n-        prngAlgos = null;\n+        prngAlgos.clear();\n@@ -1088,34 +1100,2 @@\n-    }\n-\n-    \/**\n-     * Ensure all the legacy String properties are fully parsed into\n-     * service objects.\n-     *\/\n-    private void ensureLegacyParsed() {\n-        if (legacyChanged == false || (legacyStrings == null)) {\n-            return;\n-        }\n-        serviceSet = null;\n-        if (legacyMap == null) {\n-            legacyMap = new ConcurrentHashMap<>();\n-        } else {\n-            legacyMap.clear();\n-        }\n-        for (Map.Entry<String,String> entry : legacyStrings.entrySet()) {\n-            parseLegacyPut(entry.getKey(), entry.getValue());\n-        }\n-        removeInvalidServices(legacyMap);\n-        legacyChanged = false;\n-    }\n-\n-    \/**\n-     * Remove all invalid services from the Map. Invalid services can only\n-     * occur if the legacy properties are inconsistent or incomplete.\n-     *\/\n-    private void removeInvalidServices(Map<ServiceKey,Service> map) {\n-        for (Iterator<Map.Entry<ServiceKey, Service>> t =\n-                map.entrySet().iterator(); t.hasNext(); ) {\n-            Service s = t.next().getValue();\n-            if (s.isValid() == false) {\n-                t.remove();\n-            }\n+        public String toString() {\n+            return type + \".\" + algorithm;\n@@ -1139,0 +1119,5 @@\n+    \/\/ utility method for getting a String with service type and algorithm\n+    private static String getKey(Service s) {\n+        return s.getType() + \".\" + s.getAlgorithm();\n+    }\n+\n@@ -1143,1 +1128,6 @@\n-    private void parseLegacyPut(String name, String value) {\n+    private static enum OPType {\n+        ADD, REMOVE;\n+    }\n+\n+    private void parseLegacy(String name, String value, OPType opType) {\n+        \/\/ alias\n@@ -1147,3 +1137,2 @@\n-            String stdAlg = value;\n-            String aliasKey = name.substring(ALIAS_LENGTH);\n-            String[] typeAndAlg = getTypeAndAlgorithm(aliasKey);\n+            String aliasKeyStr = name.substring(ALIAS_LENGTH);\n+            String[] typeAndAlg = getTypeAndAlgorithm(aliasKeyStr);\n@@ -1153,0 +1142,2 @@\n+            legacyChanged = true;\n+            Objects.requireNonNull(value, \"alias value should map to an alg\");\n@@ -1155,5 +1146,26 @@\n-            ServiceKey key = new ServiceKey(type, stdAlg, true);\n-            Service s = legacyMap.get(key);\n-            if (s == null) {\n-                s = new Service(this, type, stdAlg);\n-                legacyMap.put(key, s);\n+            ServiceKey stdKey = new ServiceKey(type, value, true);\n+            Service stdService = legacyMap.get(stdKey);\n+            ServiceKey aliasKey = new ServiceKey(type, aliasAlg, true);\n+            switch (opType) {\n+                case ADD:\n+                    \/\/ clean up old alias if present\n+                    Service prevAliasService = legacyMap.get(aliasAlg);\n+                    if (prevAliasService != null) {\n+                        prevAliasService.removeAlias(aliasAlg);\n+                    }\n+                    if (stdService == null) {\n+                        \/\/ add standard mapping in order to add alias\n+                        stdService = new Service(this, type, value);\n+                        legacyMap.put(stdKey, stdService);\n+                    }\n+                    stdService.addAlias(aliasAlg);\n+                    legacyMap.put(aliasKey, stdService);\n+                    break;\n+                case REMOVE:\n+                    if (stdService != null) {\n+                        stdService.removeAlias(aliasAlg);\n+                    }\n+                    legacyMap.remove(aliasKey);\n+                    break;\n+                default:\n+                    throw new AssertionError();\n@@ -1161,2 +1173,0 @@\n-            legacyMap.put(new ServiceKey(type, aliasAlg, true), s);\n-            s.addAlias(aliasAlg);\n@@ -1168,0 +1178,1 @@\n+            legacyChanged = true;\n@@ -1169,0 +1180,1 @@\n+            \/\/ regular registration\n@@ -1173,11 +1185,29 @@\n-                String className = value;\n-                ServiceKey key = new ServiceKey(type, stdAlg, true);\n-                Service s = legacyMap.get(key);\n-                if (s == null) {\n-                    s = new Service(this, type, stdAlg);\n-                    legacyMap.put(key, s);\n-                }\n-                s.className = className;\n-\n-                if (type.equals(\"SecureRandom\")) {\n-                    updateSecureRandomEntries(true, s.algorithm);\n+                ServiceKey stdKey = new ServiceKey(type, stdAlg, true);\n+                Service stdService = legacyMap.get(stdKey);\n+                switch (opType) {\n+                    case ADD:\n+                        Objects.requireNonNull(value,\n+                                \"className can't be null\");\n+                        if (stdService == null) {\n+                            stdService = new Service(this, type, stdAlg);\n+                            legacyMap.put(stdKey, stdService);\n+                        }\n+                        stdService.className = value;\n+                        break;\n+                    case REMOVE:\n+                        \/\/ only remove if value also matches when non-null\n+                        if (stdService != null) {\n+                            if (value == null) {\n+                                legacyMap.remove(stdKey);\n+                            } else if (stdService.className.equals(value)) {\n+                                legacyMap.remove(stdKey, stdService);\n+                            }\n+                            \/\/ remove all corresponding alias mappings\n+                            for (String alias : stdService.getAliases()) {\n+                                legacyMap.remove(new ServiceKey(type, alias,\n+                                        true), stdService);\n+                            }\n+                        }\n+                        break;\n+                    default:\n+                        throw new AssertionError();\n@@ -1185,0 +1215,2 @@\n+                checkAndUpdateSecureRandom(type, stdAlg,\n+                        (opType != OPType.REMOVE));\n@@ -1187,1 +1219,0 @@\n-                String attributeValue = value;\n@@ -1189,3 +1220,3 @@\n-                String attributeString = typeAndAlg[1];\n-                String stdAlg = attributeString.substring(0, i).intern();\n-                String attributeName = attributeString.substring(i + 1);\n+                String attrString = typeAndAlg[1];\n+                String stdAlg = attrString.substring(0, i).intern();\n+                String attrName = attrString.substring(i + 1);\n@@ -1193,2 +1224,2 @@\n-                while (attributeName.startsWith(\" \")) {\n-                    attributeName = attributeName.substring(1);\n+                while (attrName.startsWith(\" \")) {\n+                    attrName = attrName.substring(1);\n@@ -1196,6 +1227,21 @@\n-                attributeName = attributeName.intern();\n-                ServiceKey key = new ServiceKey(type, stdAlg, true);\n-                Service s = legacyMap.get(key);\n-                if (s == null) {\n-                    s = new Service(this, type, stdAlg);\n-                    legacyMap.put(key, s);\n+                attrName = attrName.intern();\n+                ServiceKey stdKey = new ServiceKey(type, stdAlg, true);\n+                Service stdService = legacyMap.get(stdKey);\n+                switch (opType) {\n+                    case ADD:\n+                        Objects.requireNonNull(value,\n+                                \"attribute value should not be null\");\n+\n+                        if (stdService == null) {\n+                            stdService = new Service(this, type, stdAlg);\n+                            legacyMap.put(stdKey, stdService);\n+                        }\n+                        stdService.addAttribute(attrName, value);\n+                        break;\n+                    case REMOVE:\n+                        if (stdService != null) {\n+                            stdService.removeAttribute(attrName, value);\n+                        }\n+                        break;\n+                default:\n+                    throw new AssertionError();\n@@ -1203,1 +1249,0 @@\n-                s.addAttribute(attributeName, attributeValue);\n@@ -1230,1 +1275,0 @@\n-\n@@ -1237,5 +1281,4 @@\n-        if (!serviceMap.isEmpty()) {\n-            Service s = serviceMap.get(key);\n-            if (s != null) {\n-                return s;\n-            }\n+\n+        Service s = serviceMap.get(key);\n+        if (s != null) {\n+            return s;\n@@ -1243,5 +1286,6 @@\n-        synchronized (this) {\n-            ensureLegacyParsed();\n-            if (legacyMap != null && !legacyMap.isEmpty()) {\n-                return legacyMap.get(key);\n-            }\n+\n+        s = legacyMap.get(key);\n+        if (s != null && !s.isValid()) {\n+            legacyMap.remove(key, s);\n+        } else {\n+            return s;\n@@ -1249,0 +1293,1 @@\n+\n@@ -1270,1 +1315,1 @@\n-    public synchronized Set<Service> getServices() {\n+    public Set<Service> getServices() {\n@@ -1272,5 +1317,1 @@\n-        if (legacyChanged || servicesChanged) {\n-            serviceSet = null;\n-        }\n-        if (serviceSet == null) {\n-            ensureLegacyParsed();\n+        if (serviceSet == null || legacyChanged || servicesChanged) {\n@@ -1281,1 +1322,1 @@\n-            if (legacyMap != null && !legacyMap.isEmpty()) {\n+            if (!legacyMap.isEmpty()) {\n@@ -1286,0 +1327,1 @@\n+            legacyChanged = false;\n@@ -1342,3 +1384,1 @@\n-            if (type.equals(\"SecureRandom\")) {\n-                updateSecureRandomEntries(true, s.algorithm);\n-            }\n+            checkAndUpdateSecureRandom(type, algorithm, true);\n@@ -1348,6 +1388,11 @@\n-    \/\/ keep tracks of the registered secure random algos and store them in order\n-    private void updateSecureRandomEntries(boolean doAdd, String s) {\n-        Objects.requireNonNull(s);\n-        if (doAdd) {\n-            if (prngAlgos == null) {\n-                prngAlgos = new LinkedHashSet<String>();\n+    private void checkAndUpdateSecureRandom(String type, String algo,\n+            boolean doAdd) {\n+        if (type.equalsIgnoreCase(\"SecureRandom\")) {\n+            if (doAdd) {\n+                prngAlgos.add(algo);\n+            } else {\n+                prngAlgos.remove(algo);\n+            }\n+            if (debug != null) {\n+                debug.println((doAdd? \"Add\":\"Remove\") +\n+                        \" SecureRandom algo \" + algo);\n@@ -1355,7 +1400,0 @@\n-            prngAlgos.add(s);\n-        } else {\n-            prngAlgos.remove(s);\n-        }\n-\n-        if (debug != null) {\n-            debug.println((doAdd? \"Add\":\"Remove\") + \" SecureRandom algo \" + s);\n@@ -1367,1 +1405,1 @@\n-    synchronized Service getDefaultSecureRandomService() {\n+    Service getDefaultSecureRandomService() {\n@@ -1370,6 +1408,2 @@\n-        if (legacyChanged) {\n-            prngAlgos = null;\n-            ensureLegacyParsed();\n-        }\n-\n-        if (prngAlgos != null && !prngAlgos.isEmpty()) {\n+        if (!prngAlgos.isEmpty()) {\n+            String algo = prngAlgos.iterator().next();\n@@ -1379,1 +1413,1 @@\n-            return getService(\"SecureRandom\", prngAlgos.iterator().next());\n+            return getService(\"SecureRandom\", algo);\n@@ -1476,6 +1510,3 @@\n-        synchronized (this) {\n-            removePropertyStrings(s);\n-            if (type.equals(\"SecureRandom\")) {\n-                updateSecureRandomEntries(false, s.algorithm);\n-            }\n-        }\n+\n+        removePropertyStrings(s);\n+        checkAndUpdateSecureRandom(type, algorithm, false);\n@@ -1689,0 +1720,7 @@\n+        private void removeAlias(String alias) {\n+            if (aliases.isEmpty()) {\n+                return;\n+            }\n+            aliases.remove(alias);\n+        }\n+\n@@ -1696,0 +1734,11 @@\n+        void removeAttribute(String type, String value) {\n+            if (attributes.isEmpty()) {\n+                return;\n+            }\n+            if (value == null) {\n+                attributes.remove(new UString(type));\n+            } else {\n+                attributes.remove(new UString(type), value);\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":275,"deletions":226,"binary":false,"changes":501,"status":"modified"},{"patch":"@@ -457,1 +457,1 @@\n-            ? String.format(\"Optional[%s]\", value)\n+            ? (\"Optional[\" + value + \"]\")\n","filename":"src\/java.base\/share\/classes\/java\/util\/Optional.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-                ? String.format(\"OptionalDouble[%s]\", value)\n+                ? (\"OptionalDouble[\" + value + \"]\")\n","filename":"src\/java.base\/share\/classes\/java\/util\/OptionalDouble.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-                ? String.format(\"OptionalInt[%s]\", value)\n+                ? (\"OptionalInt[\" + value + \"]\")\n","filename":"src\/java.base\/share\/classes\/java\/util\/OptionalInt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-                ? String.format(\"OptionalLong[%s]\", value)\n+                ? (\"OptionalLong[\" + value + \"]\")\n","filename":"src\/java.base\/share\/classes\/java\/util\/OptionalLong.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -794,1 +794,1 @@\n-        @SuppressWarnings(\"deprecation\")\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/Executors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1480,0 +1480,4 @@\n+     *\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -1481,1 +1485,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadPoolExecutor.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -405,0 +405,1 @@\n+        Objects.requireNonNull(action);\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/Subject.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-        return length;\n+        return current - offset + length;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ImageStringsReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-        if (checkClassVersion && readShort(classFileOffset + 6) > Opcodes.V18) {\n+        if (checkClassVersion && readShort(classFileOffset + 6) > Opcodes.V19) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/ClassReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -317,0 +317,1 @@\n+    int V19 = 0 << 16 | 63;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Opcodes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,0 +117,4 @@\n+    \/\/ Various broadcasting modes.\n+    public static final int MODE_BROADCAST = 0;\n+    public static final int MODE_BITS_COERCED_LONG_TO_MASK = 1;\n+\n@@ -160,3 +164,3 @@\n-    public interface BroadcastOperation<VM extends VectorPayload,\n-                                        S extends VectorSpecies<?>> {\n-        VM broadcast(long l, S s);\n+    public interface FromBitsCoercedOperation<VM extends VectorPayload,\n+                                              S extends VectorSpecies<?>> {\n+        VM fromBits(long l, S s);\n@@ -170,4 +174,4 @@\n-    VM broadcastCoerced(Class<? extends VM> vmClass, Class<E> eClass,\n-                        int length,\n-                        long bits, S s,\n-                        BroadcastOperation<VM, S> defaultImpl) {\n+    VM fromBitsCoerced(Class<? extends VM> vmClass, Class<E> eClass,\n+                       int length,\n+                       long bits, int mode, S s,\n+                       FromBitsCoercedOperation<VM, S> defaultImpl) {\n@@ -175,1 +179,1 @@\n-        return defaultImpl.broadcast(bits, s);\n+        return defaultImpl.fromBits(bits, s);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -197,1 +197,4 @@\n-\\                      set the version of the source in source-file mode.\\n\\n\\\n+\\                      set the version of the source in source-file mode.\\n\\\n+\\    --finalization=<value>\\n\\\n+\\                      controls finalization\\n\\\n+\\                      <value> is one of \"enabled\" or \"disabled\"\\n\\n\\\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher.properties","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MeteredStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.nio.channels.WritableByteChannel;\n@@ -241,3 +242,16 @@\n-                && ch instanceof FileChannel fc\n-                && cos.channel() instanceof FileChannel dst) {\n-            return transfer(fc, dst);\n+                && ch instanceof FileChannel fc) {\n+            WritableByteChannel wbc = cos.channel();\n+\n+            if (wbc instanceof FileChannel dst) {\n+                return transfer(fc, dst);\n+            }\n+\n+            if (wbc instanceof SelectableChannel sc) {\n+                synchronized (sc.blockingLock()) {\n+                    if (!sc.isBlocking())\n+                        throw new IllegalBlockingModeException();\n+                    return transfer(fc, wbc);\n+                }\n+            }\n+\n+            return transfer(fc, wbc);\n@@ -249,1 +263,1 @@\n-    private static long transfer(FileChannel src, FileChannel dst) throws IOException {\n+    private static long transfer(FileChannel src, WritableByteChannel dst) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/ChannelInputStream.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -703,1 +703,1 @@\n-            return UnixDomainSockets.UNNAMED;\n+            return UnixDomainSockets.unnamed();\n@@ -707,1 +707,1 @@\n-                return UnixDomainSockets.UNNAMED;\n+                return UnixDomainSockets.unnamed();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SocketChannelImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,3 @@\n-    static final UnixDomainSocketAddress UNNAMED = UnixDomainSocketAddress.of(\"\");\n+    private static class UnnamedHolder {\n+        static final UnixDomainSocketAddress UNNAMED = UnixDomainSocketAddress.of(\"\");\n+    }\n@@ -74,1 +76,1 @@\n-            addr = UNNAMED;\n+            addr = unnamed();\n@@ -136,1 +138,5 @@\n-            Path path = Path.of(dir, \"socket_\" + rnd);\n+            final Path path = Path.of(dir, \"socket_\" + rnd);\n+            if (path.getFileSystem().provider() != sun.nio.fs.DefaultFileSystemProvider.instance()) {\n+                throw new UnsupportedOperationException(\n+                        \"Unix Domain Sockets not supported on non-default file system\");\n+            }\n@@ -163,0 +169,4 @@\n+    static UnixDomainSocketAddress unnamed() {\n+        return UnnamedHolder.UNNAMED;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/UnixDomainSockets.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1310,0 +1310,9 @@\n+    @Override\n+    public Set<KeyStore.Entry.Attribute> engineGetAttributes(String alias) {\n+        if (!engineContainsAlias(alias)) {\n+            return super.engineGetAttributes(alias);\n+        }\n+        Entry entry = entries.get(alias.toLowerCase(Locale.ENGLISH));\n+        return getAttributes(entry);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,0 +239,22 @@\n+    @Override\n+    public Set<KeyStore.Entry.Attribute> engineGetAttributes(String alias) {\n+\n+        AbstractMap.SimpleEntry<String, Collection<KeyStore>> pair =\n+                getKeystoresForReading(alias);\n+        Set<KeyStore.Entry.Attribute> result = Collections.emptySet();\n+\n+        try {\n+            String entryAlias = pair.getKey();\n+            for (KeyStore keystore : pair.getValue()) {\n+                result = keystore.getAttributes(entryAlias);\n+                if (result != null) {\n+                    break;\n+                }\n+            }\n+        } catch (KeyStoreException e) {\n+            throw new IllegalStateException(e);\n+        }\n+\n+        return result;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DomainKeyStore.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/BaseSSLSocketImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,0 +132,5 @@\n+    @Override\n+    public Set<KeyStore.Entry.Attribute> engineGetAttributes(String alias) {\n+        return keystore.engineGetAttributes(alias);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyStoreDelegator.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-            \/\/ CLDR's resource bundle has an translated entry for this id.\n+            \/\/ CLDR's resource bundle has a translated entry for this id.\n@@ -94,1 +94,1 @@\n-                                       !TimeZone.getTimeZone(id).useDaylightTime());\n+                                       TimeZone.getTimeZone(id).toZoneId().getRules().isFixedOffset());\n@@ -132,1 +132,1 @@\n-        boolean noDST = !TimeZone.getTimeZone(names[0]).useDaylightTime();\n+        boolean noDST = TimeZone.getTimeZone(names[0]).toZoneId().getRules().isFixedOffset();\n@@ -152,1 +152,1 @@\n-        \/\/ Check parent locale first\n+        \/\/ Check parent locales first\n@@ -156,3 +156,2 @@\n-            if (cands.size() > 1) {\n-                var parentLoc = cands.get(1); \/\/ immediate parent locale\n-                String[] parentNames = super.getDisplayNameArray(id, parentLoc);\n+            for (int i = 1; i < cands.size() ; i++) {\n+                String[] parentNames = super.getDisplayNameArray(id, cands.get(i));\n@@ -166,16 +165,0 @@\n-        \/\/ Check if COMPAT can substitute the name\n-        if (LocaleProviderAdapter.getAdapterPreference().contains(Type.JRE)) {\n-            String[] compatNames = (String[])LocaleProviderAdapter.forJRE()\n-                .getLocaleResources(mapChineseLocale(locale))\n-                .getTimeZoneNames(id);\n-            if (compatNames != null) {\n-                for (int i = INDEX_STD_LONG; i <= INDEX_GEN_SHORT; i++) {\n-                    \/\/ Assumes COMPAT has no empty slots\n-                    if (i == index || !exists(names, i)) {\n-                        names[i] = compatNames[i];\n-                    }\n-                }\n-                return;\n-            }\n-        }\n-\n@@ -192,0 +175,13 @@\n+        \/\/ Check if COMPAT can substitute the name\n+        if (!exists(names, index) &&\n+                LocaleProviderAdapter.getAdapterPreference().contains(Type.JRE)) {\n+            String[] compatNames = (String[])LocaleProviderAdapter.forJRE()\n+                    .getLocaleResources(mapChineseLocale(locale))\n+                    .getTimeZoneNames(id);\n+            if (compatNames != null) {\n+                \/\/ Assumes COMPAT has no empty slots\n+                names[index] = compatNames[index];\n+                return;\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/util\/cldr\/CLDRTimeZoneNameProviderImpl.java","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -35,1 +35,4 @@\n-\n+JNIEXPORT jboolean JNICALL\n+Java_java_lang_ref_Finalizer_isFinalizationEnabled(JNIEnv* env, jclass cls) {\n+    return JVM_IsFinalizationEnabled(env);\n+}\n","filename":"src\/java.base\/share\/native\/libjava\/Finalizer.c","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -255,1 +255,9 @@\n-    RELEASE_18;\n+    RELEASE_18,\n+\n+    \/**\n+     * The version recognized by the Java Platform, Standard Edition\n+     * 19.\n+     *\n+     * @since 19\n+     *\/\n+    RELEASE_19;\n@@ -264,1 +272,1 @@\n-        return RELEASE_18;\n+        return RELEASE_19;\n@@ -279,1 +287,1 @@\n-            valueOf(\"RELEASE_\" + Math.min(18, intVersion)):\n+            valueOf(\"RELEASE_\" + Math.min(19, intVersion)):\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractAnnotationValueVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractElementVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractTypeVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementKindVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementScanner14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleAnnotationValueVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleElementVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleTypeVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-@SupportedSourceVersion(RELEASE_18)\n+@SupportedSourceVersion(RELEASE_19)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/TypeKindVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.net.URI;\n@@ -109,3 +110,3 @@\n- *     <pre>\n- *       File[] files1 = ... ; \/\/ input for first compilation task\n- *       File[] files2 = ... ; \/\/ input for second compilation task\n+ *     {@snippet id=\"use-sjfm\" lang=java :\n+ *       File[] files1 = null ; \/\/ input for first compilation task     \/\/ @replace substring=null replacement=\"...\"\n+ *       File[] files2 = null ; \/\/ input for second compilation task    \/\/ @replace substring=null replacement=\"...\"\n@@ -116,2 +117,2 @@\n- *       {@code Iterable<? extends JavaFileObject>} compilationUnits1 =\n- *           fileManager.getJavaFileObjectsFromFiles({@linkplain java.util.Arrays#asList Arrays.asList}(files1));\n+ *       Iterable<? extends JavaFileObject> compilationUnits1 =\n+ *           fileManager.getJavaFileObjectsFromFiles(Arrays.asList(files1));  \/\/ @link substring=Arrays.asList target=\"java.util.Arrays#asList\"\n@@ -120,1 +121,1 @@\n- *       {@code Iterable<? extends JavaFileObject>} compilationUnits2 =\n+ *       Iterable<? extends JavaFileObject> compilationUnits2 =\n@@ -125,1 +126,2 @@\n- *       fileManager.close();<\/pre>\n+ *       fileManager.close();\n+ *       }\n@@ -132,2 +134,2 @@\n- *     <pre>\n- *       {@code Iterable<? extends JavaFileObject>} compilationUnits = ...;\n+ *     {@snippet id=\"use-diag-collector\" lang=java :\n+ *       Iterable<? extends JavaFileObject> compilationUnits = null;        \/\/ @replace substring=null replacement=\"...\"\n@@ -135,1 +137,1 @@\n- *       {@code DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<JavaFileObject>();}\n+ *       DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<JavaFileObject>();\n@@ -139,1 +141,1 @@\n- *       for ({@code Diagnostic<? extends JavaFileObject>} diagnostic : diagnostics.getDiagnostics())\n+ *       for (Diagnostic<? extends JavaFileObject> diagnostic : diagnostics.getDiagnostics()) {\n@@ -143,0 +145,1 @@\n+ *       }\n@@ -144,1 +147,2 @@\n- *       fileManager.close();<\/pre>\n+ *       fileManager.close();\n+ *       }\n@@ -161,3 +165,3 @@\n- *     <pre>\n- *       final  Logger logger = ...;\n- *       {@code Iterable<? extends JavaFileObject>} compilationUnits = ...;\n+ *     {@snippet id=\"forward-fm\" lang=java :\n+ *       final  Logger logger = null;                                       \/\/ @replace substring=null replacement=\"...\"\n+ *       Iterable<? extends JavaFileObject> compilationUnits = null;        \/\/ @replace substring=null replacement=\"...\"\n@@ -173,1 +177,2 @@\n- *       compiler.getTask(null, fileManager, null, null, null, compilationUnits).call();<\/pre>\n+ *       compiler.getTask(null, fileManager, null, null, null, compilationUnits).call();\n+ *       }\n@@ -184,26 +189,1 @@\n- *     <pre>\n- *       \/**\n- *        * A file object used to represent source coming from a string.\n- *        {@code *}\/\n- *       public class JavaSourceFromString extends SimpleJavaFileObject {\n- *           \/**\n- *            * The source code of this \"file\".\n- *            {@code *}\/\n- *           final String code;\n- *\n- *           \/**\n- *            * Constructs a new JavaSourceFromString.\n- *            * {@code @}param name the name of the compilation unit represented by this file object\n- *            * {@code @}param code the source code for the compilation unit represented by this file object\n- *            {@code *}\/\n- *           JavaSourceFromString(String name, String code) {\n- *               super({@linkplain java.net.URI#create URI.create}(\"string:\/\/\/\" + name.replace('.','\/') + Kind.SOURCE.extension),\n- *                     Kind.SOURCE);\n- *               this.code = code;\n- *           }\n- *\n- *           {@code @}Override\n- *           public CharSequence getCharContent(boolean ignoreEncodingErrors) {\n- *               return code;\n- *           }\n- *       }<\/pre>\n+ *     {@snippet id=fileObject class=JavaSourceFromString }\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/JavaCompiler.java","additions":22,"deletions":42,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.net.URI;\n@@ -83,2 +84,4 @@\n- * <!-- URI.create(relativeName).normalize().getPath().equals(relativeName) -->\n- * <pre>  URI.{@linkplain java.net.URI#create create}(relativeName).{@linkplain java.net.URI#normalize() normalize}().{@linkplain java.net.URI#getPath getPath}().equals(relativeName)<\/pre>\n+ * {@snippet id=\"valid-relative-name\" lang=java :\n+ *     \/\/ @link substring=\"create\" target=\"URI#create\" @link substring=normalize target=\"URI#normalize\" @link substring=getPath target=\"URI#getPath\" :\n+ *     URI.create(relativeName).normalize().getPath().equals(relativeName)\n+ *     }\n@@ -406,1 +409,3 @@\n-     * <pre>getFileForInput(SOURCE_PATH, \"com.sun.tools.javac\", \"resources\/compiler.properties\");<\/pre>\n+     * {@snippet id=\"call-getFileForInput\" lang=java :\n+     * getFileForInput(SOURCE_PATH, \"com.sun.tools.javac\", \"resources\/compiler.properties\");\n+     * }\n@@ -669,4 +674,5 @@\n-     * <pre>\n-     *     getFileForInput(location, <i>packageName<\/i>, <i>relativeName<\/i>)\n-     *     getFileForOutput(location, <i>packageName<\/i>, <i>relativeName<\/i>, null)\n-     * <\/pre>\n+     * {@snippet :\n+     *     \/\/ @highlight region substring=packageName type=italic @highlight region substring=relativeName type=italic :\n+     *     getFileForInput(location, packageName, relativeName)\n+     *     getFileForOutput(location, packageName, relativeName, null) \/\/ @end @end\n+     *     }\n@@ -676,3 +682,3 @@\n-     * <pre>\n-     *     getLocationForModule(location, <i>moduleName<\/i>)\n-     * <\/pre>\n+     * {@snippet id=\"call-getLocationForModule\" lang=java :\n+     *     getLocationForModule(location, moduleName) \/\/ @highlight substring=moduleName type=italic\n+     *     }\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/JavaFileManager.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -78,3 +78,4 @@\n- *         <blockquote>\n- *           <pre>new {@linkplain java.io.FileInputStream#FileInputStream(File) FileInputStream}(new {@linkplain File#File(java.net.URI) File}({@linkplain FileObject fileObject}.{@linkplain FileObject#toUri() toUri}()))<\/pre>\n- *         <\/blockquote>\n+ *         {@snippet id=\"equiv-input\" lang=java :\n+ *             \/\/ @link substring=FileInputStream target=\"java.io.FileInputStream#FileInputStream(File)\" @link regex=\"File\\b\" target=\"File#File(java.net.URI)\" @link substring=fileObject target=FileObject @link substring=toUri target=\"FileObject#toUri()\" :\n+ *             new FileInputStream(new File(fileObject.toUri()))\n+ *             }\n@@ -88,3 +89,4 @@\n- *         <blockquote>\n- *           <pre>new {@linkplain java.io.FileOutputStream#FileOutputStream(File) FileOutputStream}(new {@linkplain File#File(java.net.URI) File}({@linkplain FileObject fileObject}.{@linkplain FileObject#toUri() toUri}()))<\/pre>\n- *         <\/blockquote>\n+ *         {@snippet id=\"equiv-output\" lang=java :\n+ *             \/\/ @link substring=FileOutputStream target=\"java.io.FileOutputStream#FileOutputStream(File)\" @link regex=\"File\\b\" target=\"File#File(java.net.URI)\" @link substring=fileObject target=FileObject @link substring=toUri target=\"FileObject#toUri()\" :\n+ *             new FileOutputStream(new File(fileObject.toUri()))\n+ *             }\n@@ -244,3 +246,3 @@\n-     * <pre>\n-     *     getJavaFileObjectsFromFiles({@linkplain java.util.Arrays#asList Arrays.asList}(files))\n-     * <\/pre>\n+     * {@snippet id=\"equiv-getJavaFileObjects\" lang=java :\n+     *     getJavaFileObjectsFromFiles(Arrays.asList(files)) \/\/ @link substring=\"Arrays.asList\" target=\"Arrays#asList\"\n+     *     }\n@@ -262,3 +264,3 @@\n-     * <pre>\n-     *     getJavaFileObjectsFromPaths({@linkplain java.util.Arrays#asList Arrays.asList}(paths))\n-     * <\/pre>\n+     * {@snippet id=\"equiv-getJavaFileObjectsFromPaths\" lang=java :\n+     *     getJavaFileObjectsFromPaths(Arrays.asList(paths)) \/\/ @link substring=\"Arrays.asList\" target=\"Arrays#asList\"\n+     *     }\n@@ -299,3 +301,3 @@\n-     * <pre>\n-     *     getJavaFileObjectsFromStrings({@linkplain java.util.Arrays#asList Arrays.asList}(names))\n-     * <\/pre>\n+     * {@snippet id=\"equiv-getJavaFileObjectsFromStrings\" lang=java :\n+     *     getJavaFileObjectsFromStrings(Arrays.asList(names)) \/\/ @link substring=\"Arrays.asList\" target=\"Arrays#asList\"\n+     *     }\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/StandardJavaFileManager.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -55,1 +55,3 @@\n- * <p>{@code JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();}\n+ * {@snippet id=\"show-getSystemJavaCompiler\" lang=java :\n+ *     JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();\n+ *     }\n@@ -67,1 +69,3 @@\n- * <p>{@code com.vendor.VendorJavaCompiler}\n+ * {@snippet id=\"show-service\" :\n+ *     com.vendor.VendorJavaCompiler\n+ *     }\n@@ -69,1 +73,1 @@\n- * <p>If the jar file is on the class path, VendorJavaCompiler can be\n+ * <p>If the jar file is on the class path, {@code VendorJavaCompiler} can be\n@@ -72,1 +76,3 @@\n- * <p>{@code JavaCompiler compiler = ServiceLoader.load(JavaCompiler.class).iterator().next();}\n+ * {@snippet id=\"show-serviceLoader\" lang=java :\n+ *     JavaCompiler compiler = ServiceLoader.load(JavaCompiler.class).iterator().next();\n+ *     }\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/package-info.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/\/ @replace region replacement=\"\"\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.tools.SimpleJavaFileObject;\n+import java.net.URI;\n+\/\/ @end\n+\/**\n+ * A file object used to represent source coming from a string.\n+ *\/\n+public class JavaSourceFromString extends SimpleJavaFileObject {\n+    \/**\n+     * The source code of this \"file\".\n+     *\/\n+    final String code;\n+\n+    \/**\n+     * Constructs a new JavaSourceFromString.\n+     * @param name the name of the compilation unit represented by this file object\n+     * @param code the source code for the compilation unit represented by this file object\n+     *\/\n+    JavaSourceFromString(String name, String code) {\n+        super(URI.create(\"string:\/\/\/\" + name.replace('.','\/') + Kind.SOURCE.extension), \/\/ @link substring=\"URI.create\" target=\"URI#create(String)\"\n+              Kind.SOURCE);\n+        this.code = code;\n+    }\n+\n+    @Override\n+    public CharSequence getCharContent(boolean ignoreEncodingErrors) {\n+        return code;\n+    }\n+}\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/snippet-files\/JavaSourceFromString.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,3 @@\n- * Defines the Language Model, Annotation Processing, and Java Compiler APIs.\n+ * Defines the {@index \"Language Model\"}, {@index \"Annotation Processing\"}, and\n+ * {@index \"Java Compiler\"} APIs.\n+ *\n","filename":"src\/java.compiler\/share\/classes\/module-info.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIControl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-        return (focusable != null && focusable instanceof JComponent && ((JComponent)focusable).hasFocus());\n+        return (focusable instanceof JComponent jComponent) && jComponent.hasFocus();\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaBorder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-        if (c == null || !(c instanceof AbstractButton)) return new Insets(0, 0, 0, 0);\n+        if (!(c instanceof AbstractButton button)) return new Insets(0, 0, 0, 0);\n@@ -150,1 +150,1 @@\n-        Insets margin = ((AbstractButton)c).getMargin();\n+        Insets margin = button.getMargin();\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonBorder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -601,2 +601,1 @@\n-        if (!editable && arrowButton != null && arrowButton instanceof AquaComboBoxButton) {\n-            final AquaComboBoxButton button = (AquaComboBoxButton)arrowButton;\n+        if (!editable && arrowButton instanceof final AquaComboBoxButton button) {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxUI.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -522,1 +522,1 @@\n-        if (o != null && o instanceof String) newProp = parseTraversableProperty((String)o);\n+        if (o instanceof String s) newProp = parseTraversableProperty(s);\n@@ -529,1 +529,1 @@\n-        if (o != null && o instanceof String) newProp = parseTraversableProperty((String)o);\n+        if (o instanceof String s) newProp = parseTraversableProperty(s);\n@@ -1988,1 +1988,1 @@\n-        if (o != null && o instanceof String) sGlobalPackageIsTraversable = parseTraversableProperty((String)o);\n+        if (o instanceof String s) sGlobalPackageIsTraversable = parseTraversableProperty(s);\n@@ -1992,1 +1992,1 @@\n-        if (o != null && o instanceof String) sGlobalApplicationIsTraversable = parseTraversableProperty((String)o);\n+        if (o instanceof String s) sGlobalApplicationIsTraversable = parseTraversableProperty(s);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileChooserUI.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -191,2 +191,2 @@\n-        if (popupFactory != null && popupFactory instanceof ScreenPopupFactory) {\n-            ((ScreenPopupFactory)popupFactory).setActive(false);\n+        if (popupFactory instanceof ScreenPopupFactory spf) {\n+            spf.setActive(false);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLookAndFeel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,2 +78,1 @@\n-        if (parent != null && parent instanceof JFrame) {\n-            final JFrame frameParent = (JFrame)parent;\n+        if (parent instanceof JFrame frameParent) {\n@@ -129,2 +128,2 @@\n-                    if (owningWindow != null && owningWindow instanceof JFrame) {\n-                        ((AquaMenuBarUI)mbui).setScreenMenuBar((JFrame)owningWindow);\n+                    if (owningWindow instanceof JFrame frame) {\n+                        ((AquaMenuBarUI)mbui).setScreenMenuBar(frame);\n@@ -157,2 +156,2 @@\n-                    if (owningWindow != null && owningWindow instanceof JFrame) {\n-                        ((AquaMenuBarUI)mbui).clearScreenMenuBar((JFrame)owningWindow);\n+                    if (owningWindow instanceof JFrame frame) {\n+                        ((AquaMenuBarUI)mbui).clearScreenMenuBar(frame);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaRootPaneUI.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -269,2 +269,2 @@\n-        if (shouldPaintArrowThumbProperty != null && shouldPaintArrowThumbProperty instanceof Boolean) {\n-            return ((Boolean)shouldPaintArrowThumbProperty).booleanValue();\n+        if (shouldPaintArrowThumbProperty instanceof Boolean b) {\n+            return b;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaSliderUI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-        if (headerUI == null || !(headerUI instanceof AquaTableHeaderUI)) return;\n+        if (!(headerUI instanceof AquaTableHeaderUI aquaHeaderUI)) return;\n@@ -108,1 +108,0 @@\n-        final AquaTableHeaderUI aquaHeaderUI = (AquaTableHeaderUI)headerUI;\n@@ -148,2 +147,1 @@\n-        if (value == null || !(value instanceof Integer)) return null;\n-        final int columnIndex = ((Integer)value).intValue();\n+        if (!(value instanceof Integer columnIndex)) return null;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTableHeaderUI.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -354,5 +354,2 @@\n-        if (parent != null) {\n-            if (parent instanceof ScreenMenu) {\n-                final ScreenMenu sm = (ScreenMenu)parent;\n-                sm.setChildVisible(fInvoker, b);\n-            }\n+        if (parent instanceof ScreenMenu sm) {\n+            sm.setChildVisible(fInvoker, b);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenu.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/awt\/CGraphicsEnvironment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFont.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-        if (realFont == null || !(realFont instanceof CFont)) return false;\n+        if (!(realFont instanceof CFont cFont)) return false;\n@@ -288,1 +288,1 @@\n-        CFont newFont = new CFont((CFont)realFont, logicalFamilyName);\n+        CFont newFont = new CFont(cFont, logicalFamilyName);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFontManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CStrike.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -630,2 +630,2 @@\n-                if (c == null || !(c instanceof Accessible)) return null;\n-                return CAccessible.getCAccessible((Accessible)c);\n+                if (!(c instanceof Accessible accessible)) return null;\n+                return CAccessible.getCAccessible(accessible);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CFRetainedResource.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-            if (value == null || !(value instanceof java.io.File)) {\n+            if (!(value instanceof java.io.File file)) {\n@@ -252,1 +252,1 @@\n-            final String filename = ((java.io.File)value).getAbsolutePath();\n+            final String filename = file.getAbsolutePath();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformWindow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -601,1 +601,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n@@ -848,1 +848,1 @@\n-        if (media == null || !(media instanceof MediaSizeName)) {\n+        if (!(media instanceof MediaSizeName msn)) {\n@@ -851,1 +851,1 @@\n-        MediaSize size = MediaSize.getMediaSizeForName((MediaSizeName) media);\n+        MediaSize size = MediaSize.getMediaSizeForName(msn);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,5 +44,3 @@\n-           isDstOpaque:(jboolean)isDstOpaque\n-    isDstPremultiplied:(jboolean)isDstPremultiplied\n-                  isAA:(jboolean)isAA\n-                  isText:(jboolean)isText\n-                  isLCD:(jboolean)isLCD;\n+         isAA:(jboolean)isAA\n+       isText:(jboolean)isText\n+        isLCD:(jboolean)isLCD;\n@@ -67,1 +65,0 @@\n-    SurfaceRasterFlags _dstFlags;\n@@ -126,5 +123,3 @@\n-           isDstOpaque:(jboolean)isDstOpaque\n-    isDstPremultiplied:(jboolean)isDstPremultiplied\n-                  isAA:(jboolean)isAA\n-                  isText:(jboolean)isText\n-                  isLCD:(jboolean)isLCD {\n+         isAA:(jboolean)isAA\n+       isText:(jboolean)isText\n+        isLCD:(jboolean)isLCD {\n@@ -132,2 +127,0 @@\n-    _dstFlags.isOpaque = isDstOpaque;\n-    _dstFlags.isPremultiplied = isDstPremultiplied;\n@@ -291,1 +284,1 @@\n-  RenderOptions roptions = {JNI_FALSE, JNI_TRUE, INTERPOLATION_NEAREST_NEIGHBOR, defaultRasterFlags, {dstOps->isOpaque, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n+  RenderOptions roptions = {JNI_FALSE, JNI_TRUE, INTERPOLATION_NEAREST_NEIGHBOR, defaultRasterFlags, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n@@ -297,1 +290,1 @@\n-    RenderOptions roptions = {JNI_FALSE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, defaultRasterFlags, {dstOps->isOpaque, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_TRUE};\n+    RenderOptions roptions = {JNI_FALSE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, defaultRasterFlags, JNI_FALSE, JNI_FALSE, JNI_TRUE};\n@@ -304,1 +297,1 @@\n-    RenderOptions roptions = {JNI_FALSE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, defaultRasterFlags, {isOpaque, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n+    RenderOptions roptions = {JNI_FALSE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, defaultRasterFlags, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n@@ -332,1 +325,1 @@\n-    RenderOptions roptions = {JNI_TRUE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, {isSrcOpaque, JNI_TRUE }, {isDstOpaque, JNI_TRUE}, JNI_FALSE, JNI_TRUE, JNI_FALSE};\n+    RenderOptions roptions = {JNI_TRUE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, {isSrcOpaque, JNI_TRUE }, JNI_FALSE, JNI_TRUE, JNI_FALSE};\n@@ -342,1 +335,1 @@\n-    RenderOptions roptions = {JNI_TRUE, isAA, interpolation, { isSrcOpaque, JNI_TRUE }, {isDstOpaque, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n+    RenderOptions roptions = {JNI_TRUE, isAA, interpolation, { isSrcOpaque, JNI_TRUE }, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n@@ -357,1 +350,2 @@\n-    RenderOptions roptions = {JNI_TRUE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, { isSrcOpaque, JNI_TRUE }, {dstOps->isOpaque, JNI_TRUE}, JNI_TRUE, JNI_FALSE, JNI_FALSE};\n+    RenderOptions roptions = {JNI_TRUE, JNI_FALSE, INTERPOLATION_NEAREST_NEIGHBOR, { isSrcOpaque, JNI_TRUE },\n+                              JNI_TRUE, JNI_FALSE, JNI_FALSE};\n@@ -440,5 +434,3 @@\n-               isDstOpaque:renderOptions->dstFlags.isOpaque\n-        isDstPremultiplied:YES\n-                      isAA:renderOptions->isAA\n-                      isText:renderOptions->isText\n-                      isLCD:renderOptions->isLCD];\n+                     isAA:renderOptions->isAA\n+                   isText:renderOptions->isText\n+                    isLCD:renderOptions->isLCD];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/EncoderManager.m","additions":16,"deletions":24,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -598,2 +598,3 @@\n-            J2dTraceImpl(J2D_TRACE_VERBOSE, JNI_FALSE,\n-                    \"MTLBlitLoops_Blit [tx=%d, xf=%d, AC=%s]: bdst=%s, src=%p (%dx%d) O=%d premul=%d | (%d, %d, %d, %d)->(%1.2f, %1.2f, %1.2f, %1.2f)\",\n+            J2dTraceImpl(J2D_TRACE_VERBOSE, JNI_TRUE,\n+                    \"MTLBlitLoops_Blit srctype=%d [tx=%d, xf=%d, AC=%s]: bdst=%s, src=%p (%dx%d) O=%d premul=%d | (%d, \"\n+                    \"%d, %d, %d)->(%1.2f, %1.2f, %1.2f, %1.2f)\", srctype,\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLBlitLoops.m","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-    BOOL _clipReady;\n@@ -76,1 +75,0 @@\n-        _clipReady = NO;\n@@ -192,1 +190,0 @@\n-    _clipReady = NO;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLClip.m","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-               jfloat extraAlpha, const SurfaceRasterFlags *srcFlags, const SurfaceRasterFlags *dstFlags, int mode);\n+               jfloat extraAlpha, const SurfaceRasterFlags *srcFlags, int mode);\n@@ -231,2 +231,2 @@\n-                       renderOptions->interpolation, NO, [mtlc.composite getExtraAlpha], &renderOptions->srcFlags,\n-                       &renderOptions->dstFlags, 1);\n+                       renderOptions->interpolation, NO, [mtlc.composite getExtraAlpha],\n+                       &renderOptions->srcFlags, 1);\n@@ -273,1 +273,1 @@\n-                       &renderOptions->srcFlags, &renderOptions->dstFlags, 1);\n+                       &renderOptions->srcFlags, 1);\n@@ -812,3 +812,2 @@\n-    setTxtUniforms(mtlc, 0, encoder,\n-                   renderOptions->interpolation, YES, [mtlc.composite getExtraAlpha],\n-                   &srcFlags, &renderOptions->dstFlags, 0);\n+    setTxtUniforms(mtlc, 0, encoder, renderOptions->interpolation, YES, [mtlc.composite getExtraAlpha],\n+                   &srcFlags, 0);\n@@ -896,2 +895,2 @@\n-               jfloat extraAlpha, const SurfaceRasterFlags *srcFlags, const SurfaceRasterFlags *dstFlags, int mode) {\n-    struct TxtFrameUniforms uf = {RGBA_TO_V4(color), mode, srcFlags->isOpaque, dstFlags->isOpaque, extraAlpha};\n+               jfloat extraAlpha, const SurfaceRasterFlags *srcFlags, int mode) {\n+    struct TxtFrameUniforms uf = {RGBA_TO_V4(color), mode, srcFlags->isOpaque, extraAlpha};\n@@ -959,2 +958,1 @@\n-                           &renderOptions->srcFlags,\n-                           &renderOptions->dstFlags, 0);\n+                           &renderOptions->srcFlags, 0);\n@@ -1001,1 +999,1 @@\n-                       &renderOptions->srcFlags, &renderOptions->dstFlags, 0);\n+                       &renderOptions->srcFlags, 0);\n@@ -1009,2 +1007,1 @@\n-                       &renderOptions->srcFlags,\n-                       &renderOptions->dstFlags, 0);\n+                       &renderOptions->srcFlags, 0);\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLPaints.m","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    RenderOptions defaultOptions = {JNI_FALSE, JNI_FALSE, 0\/*unused*\/, {JNI_FALSE, JNI_TRUE}, {JNI_FALSE, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n+    RenderOptions defaultOptions = {JNI_FALSE, JNI_FALSE, 0\/*unused*\/, {JNI_FALSE, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n@@ -101,1 +101,1 @@\n-    RenderOptions defaultOptions = {JNI_FALSE, JNI_FALSE, 0\/*unused*\/, {JNI_FALSE, JNI_TRUE}, {JNI_FALSE, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n+    RenderOptions defaultOptions = {JNI_FALSE, JNI_FALSE, 0\/*unused*\/, {JNI_FALSE, JNI_TRUE}, JNI_FALSE, JNI_FALSE, JNI_FALSE};\n@@ -110,0 +110,13 @@\n+\/\/ Pipeline state index\n+union StateIndex {\n+  uint32_t value;\n+  struct {\n+    uint32_t srcPremultiplied : 1,\n+             srcOpaque        : 1,\n+             stencil          : 1,\n+             aa               : 1,\n+             extAlpha         : 1,\n+             compositeRule    : 27;\n+  } bits;\n+};\n+\n@@ -126,1 +139,2 @@\n-    int subIndex = 0;\n+    union StateIndex index;\n+    index.value = 0;\n@@ -132,8 +146,2 @@\n-            if (!renderOptions->srcFlags.isPremultiplied)\n-                subIndex |= 1;\n-            if (renderOptions->srcFlags.isOpaque)\n-                subIndex |= 1 << 1;\n-            if (!renderOptions->dstFlags.isPremultiplied)\n-                subIndex |= 1 << 2;\n-            if (renderOptions->dstFlags.isOpaque)\n-                subIndex |= 1 << 3;\n+            index.bits.srcPremultiplied = renderOptions->srcFlags.isPremultiplied;\n+            index.bits.srcOpaque = renderOptions->srcFlags.isOpaque;\n@@ -144,13 +152,4 @@\n-    if (stencilNeeded) {\n-        subIndex |= 1 << 4;\n-    }\n-\n-    if (renderOptions->isAA) {\n-        subIndex |= 1 << 5;\n-    }\n-\n-    if ((composite != nil && FLT_LT([composite getExtraAlpha], 1.0f))) {\n-        subIndex |= 1 << 6;\n-    }\n-\n-    int index = compositeRule*128 + subIndex;\n+    index.bits.stencil = stencilNeeded;\n+    index.bits.aa = renderOptions->isAA;\n+    index.bits.extAlpha = composite != nil && FLT_LT([composite getExtraAlpha], 1.0f);\n+    index.bits.compositeRule = compositeRule;\n@@ -160,2 +159,2 @@\n-    if (index >= subStates.count) {\n-        subStates.count = (NSUInteger) (index + 1);\n+    if (index.value >= subStates.count) {\n+        subStates.count = index.value + 1;\n@@ -164,1 +163,1 @@\n-    id<MTLRenderPipelineState> result = [subStates pointerAtIndex:index];\n+    id<MTLRenderPipelineState> result = [subStates pointerAtIndex:index.value];\n@@ -225,1 +224,1 @@\n-            [subStates insertPointer:result atIndex:index];\n+            [subStates replacePointerAtIndex:index.value withPointer:result];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLPipelineStatesStorage.m","additions":27,"deletions":28,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    SurfaceRasterFlags dstFlags;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/RenderOptions.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,1 +117,0 @@\n-    int isDstOpaque;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/common.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -213,4 +213,2 @@\n-        if (imageMetadata != null\n-            && imageMetadata instanceof BMPMetadata)\n-        {\n-            bmpImageMetadata = (BMPMetadata)imageMetadata;\n+        if (imageMetadata instanceof BMPMetadata bmp) {\n+            bmpImageMetadata = bmp;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPImageWriter.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        return o != null && o instanceof SimpleCMYKColorSpace;\n+        return o instanceof SimpleCMYKColorSpace;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/common\/SimpleCMYKColorSpace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/common\/SubImageInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,2 +251,1 @@\n-                if (applicationExtensionData == null ||\n-                    !(applicationExtensionData instanceof byte[])) {\n+                if (!(applicationExtensionData instanceof byte[])) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFWritableImageMetadata.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -374,2 +374,2 @@\n-        if ((param != null) && (param instanceof JPEGImageWriteParam)) {\n-            jparam = (JPEGImageWriteParam) param;\n+        if (param instanceof JPEGImageWriteParam p) {\n+            jparam = p;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGMetadata.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n@@ -287,1 +287,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -277,2 +277,2 @@\n-            if(param != null && param instanceof JPEGImageWriteParam) {\n-                JPEGParam = (JPEGImageWriteParam)param;\n+            if (param instanceof JPEGImageWriteParam p) {\n+                JPEGParam = p;\n@@ -438,1 +438,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFBaseJPEGCompressor.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2898,1 +2898,1 @@\n-                if(thumb == null || !(thumb instanceof BufferedImage)) {\n+                if (!(thumb instanceof BufferedImage)) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFImageWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFJPEGDecompressor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/tiff\/TIFFOldJPEGDecompressor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/stream\/StreamFinalizer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -790,2 +790,2 @@\n-            if (value != null && value instanceof FileFilter) {\n-                setText(((FileFilter)value).getDescription());\n+            if (value instanceof FileFilter fileFilter) {\n+                setText(fileFilter.getDescription());\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/motif\/MotifFileChooserUI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-                        if(cnt != null && cnt instanceof JMenuBar) {\n+                        if (cnt instanceof JMenuBar menuBar) {\n@@ -115,2 +115,2 @@\n-                            me[0]=(MenuElement)cnt;\n-                            me[1]=menu;\n+                            me[0] = menuBar;\n+                            me[1] = menu;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/motif\/MotifMenuUI.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -428,1 +428,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n@@ -579,2 +579,1 @@\n-                if (newR != null) {\n-                    if ((newR instanceof MidiOutDevice.MidiOutReceiver)\n+                if ((newR instanceof MidiOutDevice.MidiOutReceiver newReceiver)\n@@ -582,2 +581,1 @@\n-                        midiOutReceiver = ((MidiOutDevice.MidiOutReceiver) newR);\n-                    }\n+                    midiOutReceiver = newReceiver;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/AbstractMidiDevice.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -296,2 +296,1 @@\n-            if (interpolation != null && (interpolation instanceof String)) {\n-                String resamplerType = (String) interpolation;\n+            if (interpolation instanceof String resamplerType) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/AudioFloatFormatConverter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -286,0 +286,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JavaSoundAudioClip.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-        if ((fullInfo != null) && (fullInfo instanceof Port.Info)) {\n+        if (fullInfo instanceof Port.Info) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/PortMixer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,2 +105,1 @@\n-            if (interpolation != null && (interpolation instanceof String)) {\n-                String resamplerType = (String) interpolation;\n+            if (interpolation instanceof String resamplerType) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/SoftMixingDataLine.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -577,1 +577,1 @@\n-        if (instrument == null || (!(instrument instanceof ModelInstrument))) {\n+        if (!(instrument instanceof ModelInstrument modelInstrument)) {\n@@ -582,1 +582,1 @@\n-        instruments.add((ModelInstrument)instrument);\n+        instruments.add(modelInstrument);\n@@ -588,1 +588,1 @@\n-        if (instrument == null || (!(instrument instanceof ModelInstrument))) {\n+        if (!(instrument instanceof ModelInstrument modelInstrument)) {\n@@ -595,1 +595,1 @@\n-        String pat = patchToString(instrument.getPatch());\n+        String pat = patchToString(modelInstrument.getPatch());\n@@ -844,1 +844,1 @@\n-            if (ins == null || !(ins instanceof ModelInstrument)) {\n+            if (!(ins instanceof ModelInstrument modelInstrument)) {\n@@ -848,1 +848,1 @@\n-            instruments.add((ModelInstrument)ins);\n+            instruments.add(modelInstrument);\n@@ -873,1 +873,1 @@\n-            if (ins == null || !(ins instanceof ModelInstrument)) {\n+            if (!(ins instanceof ModelInstrument modelInstrument)) {\n@@ -877,1 +877,1 @@\n-            instruments.add((ModelInstrument)ins);\n+            instruments.add(modelInstrument);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/SoftSynthesizer.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -358,2 +358,1 @@\n-            while (comp != null && comp.peer != null &&\n-                   (comp.peer instanceof LightweightPeer)) {\n+            while (comp != null && (comp.peer instanceof LightweightPeer)) {\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/AWTEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/BufferCapabilities.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -217,0 +217,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n@@ -4947,2 +4948,2 @@\n-                if (inputContext != null && inputContext instanceof sun.awt.im.InputContext) {\n-                    ((sun.awt.im.InputContext)inputContext).disableNativeIM();\n+                if (inputContext instanceof sun.awt.im.InputContext ctx) {\n+                    ctx.disableNativeIM();\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Component.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3894,1 +3894,1 @@\n-                if (c != null && c instanceof Accessible) {\n+                if (c instanceof Accessible accessible) {\n@@ -3897,1 +3897,1 @@\n-                        null, ((Accessible) c).getAccessibleContext());\n+                        null, accessible.getAccessibleContext());\n@@ -3902,1 +3902,1 @@\n-                if (c != null && c instanceof Accessible) {\n+                if (c instanceof Accessible accessible) {\n@@ -3905,1 +3905,1 @@\n-                        ((Accessible) c).getAccessibleContext(), null);\n+                        accessible.getAccessibleContext(), null);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Container.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1165,8 +1165,4 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n+     *\n@@ -1175,1 +1171,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Graphics.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -376,2 +376,1 @@\n-            (parent != null && parent instanceof MenuComponent &&\n-             ((MenuComponent)parent).newEventsOnly)) {\n+            (parent instanceof MenuComponent mc && mc.newEventsOnly)) {\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/MenuComponent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -88,8 +88,4 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n+     *\n@@ -98,1 +94,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/PrintJob.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -796,1 +796,1 @@\n-        if (component == null || !(component instanceof Autoscroll)) return;\n+        if (!(component instanceof Autoscroll)) return;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/dnd\/DropTarget.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,0 +154,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/KeyEvent.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        if (outpixbuf == null || !(outpixbuf instanceof int[])) {\n+        if (!(outpixbuf instanceof int[])) {\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/AreaAveragingScaleFilter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1188,1 +1188,1 @@\n-        if ((o == null) || !(o instanceof ComponentSampleModel)) {\n+        if (!(o instanceof ComponentSampleModel that)) {\n@@ -1192,1 +1192,0 @@\n-        ComponentSampleModel that = (ComponentSampleModel)o;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ComponentSampleModel.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -658,1 +658,1 @@\n-        if ((o == null) || !(o instanceof MultiPixelPackedSampleModel)) {\n+        if (!(o instanceof MultiPixelPackedSampleModel that)) {\n@@ -662,1 +662,0 @@\n-        MultiPixelPackedSampleModel that = (MultiPixelPackedSampleModel)o;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/MultiPixelPackedSampleModel.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,2 +129,2 @@\n-        if (o != null && o instanceof String) {\n-            val = ((String) o) + \", \" + val;\n+        if (o instanceof String s) {\n+            val = s + \", \" + val;\n@@ -197,2 +197,2 @@\n-        if (outpixbuf != null && outpixbuf instanceof byte[]) {\n-            outpix = (byte[]) outpixbuf;\n+        if (outpixbuf instanceof byte[] outbytes) {\n+            outpix = outbytes;\n@@ -238,2 +238,2 @@\n-        if (outpixbuf != null && outpixbuf instanceof int[]) {\n-            outpix = (int[]) outpixbuf;\n+        if (outpixbuf instanceof int[] outints) {\n+            outpix = outints;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ReplicateScaleFilter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -757,1 +757,1 @@\n-        if ((o == null) || !(o instanceof SinglePixelPackedSampleModel)) {\n+        if (!(o instanceof SinglePixelPackedSampleModel that)) {\n@@ -761,1 +761,0 @@\n-        SinglePixelPackedSampleModel that = (SinglePixelPackedSampleModel)o;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/SinglePixelPackedSampleModel.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -410,2 +410,1 @@\n-        if (obj != null && obj instanceof IndexedPropertyDescriptor) {\n-            IndexedPropertyDescriptor other = (IndexedPropertyDescriptor)obj;\n+        if (obj instanceof IndexedPropertyDescriptor other) {\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/IndexedPropertyDescriptor.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -506,2 +506,1 @@\n-        if (obj != null && obj instanceof PropertyDescriptor) {\n-            PropertyDescriptor other = (PropertyDescriptor)obj;\n+        if (obj instanceof PropertyDescriptor other) {\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/PropertyDescriptor.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextServicesSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextSupport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,2 +331,1 @@\n-            if ((o == null) ||\n-                !(o instanceof ImageTypeSpecifier.Interleaved)) {\n+            if (!(o instanceof Interleaved that)) {\n@@ -336,3 +335,0 @@\n-            ImageTypeSpecifier.Interleaved that =\n-                (ImageTypeSpecifier.Interleaved)o;\n-\n@@ -475,2 +471,1 @@\n-            if ((o == null) ||\n-                !(o instanceof ImageTypeSpecifier.Banded)) {\n+            if (!(o instanceof Banded that)) {\n@@ -480,3 +475,0 @@\n-            ImageTypeSpecifier.Banded that =\n-                (ImageTypeSpecifier.Banded)o;\n-\n@@ -1098,1 +1090,1 @@\n-        if ((o == null) || !(o instanceof ImageTypeSpecifier)) {\n+        if (!(o instanceof ImageTypeSpecifier that)) {\n@@ -1102,1 +1094,0 @@\n-        ImageTypeSpecifier that = (ImageTypeSpecifier)o;\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/ImageTypeSpecifier.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -683,8 +683,3 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -692,1 +687,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n@@ -845,1 +841,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/spi\/ServiceRegistry.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -264,8 +264,3 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -273,1 +268,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/FileCacheImageInputStream.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -159,8 +159,3 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -168,1 +163,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/FileImageInputStream.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -167,8 +167,3 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -176,1 +171,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/FileImageOutputStream.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -871,8 +871,3 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -880,1 +875,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/ImageInputStreamImpl.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -182,8 +182,3 @@\n-     * @deprecated The {@code finalize} method has been deprecated.\n-     *     Subclasses that override {@code finalize} in order to perform cleanup\n-     *     should be modified to use alternative cleanup mechanisms and\n-     *     to remove the overriding {@code finalize} method.\n-     *     When overriding the {@code finalize} method, its implementation must explicitly\n-     *     ensure that {@code super.finalize()} is invoked as described in {@link Object#finalize}.\n-     *     See the specification for {@link Object#finalize()} for further\n-     *     information about migration options.\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for background information and details\n+     * about migration options.\n@@ -191,1 +186,2 @@\n-    @Deprecated(since=\"9\")\n+    @Deprecated(since=\"9\", forRemoval=true)\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/MemoryCacheImageInputStream.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -540,4 +540,2 @@\n-        return\n-            obj != null &&\n-            obj instanceof DocFlavor &&\n-            getStringValue().equals (((DocFlavor) obj).getStringValue());\n+        return obj instanceof DocFlavor other &&\n+                getStringValue().equals(other.getStringValue());\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/DocFlavor.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -144,4 +144,3 @@\n-            return (o != null &&\n-                    o instanceof Map.Entry &&\n-                    getKey().equals (((Map.Entry) o).getKey()) &&\n-                    getValue().equals(((Map.Entry) o).getValue()));\n+            return o instanceof Map.Entry<?, ?> entry &&\n+                    getKey().equals(entry.getKey()) &&\n+                    getValue().equals(entry.getValue());\n@@ -293,3 +292,2 @@\n-        return(obj != null &&\n-               obj instanceof MimeType &&\n-               getStringValue().equals(((MimeType) obj).getStringValue()));\n+        return obj instanceof MimeType mimeType &&\n+                getStringValue().equals(mimeType.getStringValue());\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/MimeType.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -118,3 +118,2 @@\n-        return (object != null &&\n-                object instanceof DateTimeSyntax &&\n-                value.equals(((DateTimeSyntax) object).value));\n+        return object instanceof DateTimeSyntax other &&\n+                value.equals(other.value);\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/DateTimeSyntax.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -348,4 +348,2 @@\n-        return\n-           attribute != null &&\n-           attribute instanceof Attribute &&\n-           attribute.equals(attrMap.get(attribute.getCategory()));\n+        return attribute != null &&\n+                attribute.equals(attrMap.get(attribute.getCategory()));\n@@ -444,1 +442,1 @@\n-        if (object == null || !(object instanceof AttributeSet)) {\n+        if (!(object instanceof AttributeSet aset)) {\n@@ -448,1 +446,0 @@\n-        AttributeSet aset = (AttributeSet)object;\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/HashAttributeSet.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -111,3 +111,2 @@\n-\n-        return (object != null && object instanceof IntegerSyntax &&\n-                value == ((IntegerSyntax) object).value);\n+        return object instanceof IntegerSyntax other &&\n+                value == other.value;\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/IntegerSyntax.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -270,7 +270,3 @@\n-\n-        return(object != null &&\n-               object instanceof ResolutionSyntax &&\n-               this.crossFeedResolution ==\n-               ((ResolutionSyntax) object).crossFeedResolution &&\n-               this.feedResolution ==\n-               ((ResolutionSyntax) object).feedResolution);\n+        return object instanceof ResolutionSyntax other &&\n+                this.crossFeedResolution == other.crossFeedResolution &&\n+                this.feedResolution == other.feedResolution;\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/ResolutionSyntax.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -486,1 +486,1 @@\n-        if (object != null && object instanceof SetOfIntegerSyntax) {\n+        if (object instanceof SetOfIntegerSyntax other) {\n@@ -488,1 +488,1 @@\n-            int[][] otherMembers = ((SetOfIntegerSyntax) object).members;\n+            int[][] otherMembers = other.members;\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/SetOfIntegerSyntax.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -267,4 +267,3 @@\n-        return(object != null &&\n-               object instanceof Size2DSyntax &&\n-               this.x == ((Size2DSyntax) object).x &&\n-               this.y == ((Size2DSyntax) object).y);\n+        return object instanceof Size2DSyntax size2DSyntax &&\n+                this.x == size2DSyntax.x &&\n+                this.y == size2DSyntax.y;\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/Size2DSyntax.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -135,4 +135,3 @@\n-        return(object != null &&\n-               object instanceof TextSyntax &&\n-               this.value.equals (((TextSyntax) object).value) &&\n-               this.locale.equals (((TextSyntax) object).locale));\n+        return object instanceof TextSyntax other &&\n+                this.value.equals(other.value) &&\n+                this.locale.equals(other.locale);\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/TextSyntax.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -104,3 +104,2 @@\n-        return(object != null &&\n-               object instanceof URISyntax &&\n-               this.uri.equals (((URISyntax) object).uri));\n+        return object instanceof URISyntax other &&\n+                this.uri.equals(other.uri);\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/URISyntax.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -93,3 +93,3 @@\n-        return(object != null && object instanceof Media &&\n-               object.getClass() == this.getClass() &&\n-               ((Media)object).getValue() == this.getValue());\n+        return object instanceof Media other &&\n+                object.getClass() == this.getClass() &&\n+                other.getValue() == this.getValue();\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/standard\/Media.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-            if (newValue == null || !(newValue instanceof Boolean)) {\n+            if (!(newValue instanceof Boolean)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/AbstractAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2397,2 +2397,2 @@\n-                if (ac != null && ac instanceof AccessibleIcon) {\n-                    return new AccessibleIcon[] { (AccessibleIcon)ac };\n+                if (ac instanceof AccessibleIcon ai) {\n+                    return new AccessibleIcon[] { ai };\n@@ -2444,2 +2444,2 @@\n-                if (model != null && model instanceof DefaultButtonModel) {\n-                    ButtonGroup group = ((DefaultButtonModel)model).getGroup();\n+                if (model instanceof DefaultButtonModel defaultModel) {\n+                    ButtonGroup group = defaultModel.getGroup();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/AbstractButton.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1420,2 +1420,2 @@\n-            while (container != null && (container instanceof JComponent)) {\n-                debugOptions |= info.getDebugOptions((JComponent)container);\n+            while (container instanceof JComponent jc) {\n+                debugOptions |= info.getDebugOptions(jc);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DebugGraphics.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,2 @@\n-@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n+@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n+                   \"doclint:missing\"})\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultListSelectionModel.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -102,1 +102,2 @@\n-@SuppressWarnings({\"serial\", \"removal\"}) \/\/ Same-version serialization only\n+@SuppressWarnings({\"serial\", \"removal\", \/\/ Same-version serialization only\n+                   \"doclint:missing\"})\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JApplet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2003,2 +2003,1 @@\n-            if (a != null &&\n-                a instanceof javax.swing.plaf.basic.ComboPopup) {\n+            if (a instanceof javax.swing.plaf.basic.ComboPopup popup) {\n@@ -2007,1 +2006,1 @@\n-                JList<?> list = ((javax.swing.plaf.basic.ComboPopup)a).getList();\n+                JList<?> list = popup.getList();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JComboBox.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -881,2 +881,1 @@\n-            if (paintingChild != null &&\n-                (paintingChild instanceof JComponent) &&\n+            if ((paintingChild instanceof JComponent) &&\n@@ -3639,1 +3638,1 @@\n-                if ((to == null) || !(to instanceof JComponent)) {\n+                if (!(to instanceof JComponent target)) {\n@@ -3643,1 +3642,1 @@\n-                if ((from == null) || !(from instanceof JComponent)) {\n+                if (!(from instanceof JComponent jFocusOwner)) {\n@@ -3647,1 +3646,0 @@\n-                JComponent target = (JComponent) to;\n@@ -3652,1 +3650,0 @@\n-                JComponent jFocusOwner = (JComponent)from;\n@@ -3777,1 +3774,1 @@\n-                if (c != null && c instanceof Accessible) {\n+                if (c instanceof Accessible) {\n@@ -3785,1 +3782,1 @@\n-                if (c != null && c instanceof Accessible) {\n+                if (c instanceof Accessible) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JComponent.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,2 @@\n-@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n+@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n+                   \"doclint:missing\"})\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JDialog.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1236,1 +1236,1 @@\n-        if(getParent() != null && getParent() instanceof JLayeredPane) {\n+        if (getParent() instanceof JLayeredPane p) {\n@@ -1239,1 +1239,0 @@\n-            JLayeredPane p = (JLayeredPane)getParent();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JInternalFrame.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1078,0 +1078,4 @@\n+            return getAccessibleNameCheckIcon(getAccessibleNameImpl());\n+        }\n+\n+        private String getAccessibleNameImpl() {\n@@ -1092,0 +1096,13 @@\n+        private String getAccessibleNameCheckIcon(String name) {\n+            if (((name == null) || name.isEmpty()) &&\n+                    (JLabel.this.getIcon() != null)) {\n+                if (JLabel.this.getIcon() instanceof Accessible) {\n+                    AccessibleContext ac = ((Accessible) JLabel.this.getIcon()).getAccessibleContext();\n+                    if (ac != null) {\n+                        name = ac.getAccessibleName();\n+                    }\n+                }\n+            }\n+            return name;\n+        }\n+\n@@ -1100,0 +1117,5 @@\n+            String name = getAccessibleNameImpl();\n+            if (((name == null) || name.isEmpty()) &&\n+                    (JLabel.this.getIcon() != null)) {\n+                return AccessibleRole.ICON;\n+            }\n@@ -1113,2 +1135,2 @@\n-                if (ac != null && ac instanceof AccessibleIcon) {\n-                    return new AccessibleIcon[] { (AccessibleIcon)ac };\n+                if (ac instanceof AccessibleIcon ai) {\n+                    return new AccessibleIcon[] { ai };\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JLabel.java","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2952,2 +2952,2 @@\n-                if (oldValue != null && oldValue instanceof ListModel) {\n-                    ((ListModel) oldValue).removeListDataListener(this);\n+                if (oldValue instanceof ListModel<?> oldModel) {\n+                    oldModel.removeListDataListener(this);\n@@ -2955,2 +2955,2 @@\n-                if (newValue != null && newValue instanceof ListModel) {\n-                    ((ListModel) newValue).addListDataListener(this);\n+                if (newValue instanceof ListModel<?> newModel) {\n+                    newModel.addListDataListener(this);\n@@ -2962,2 +2962,2 @@\n-                if (oldValue != null && oldValue instanceof ListSelectionModel) {\n-                    ((ListSelectionModel) oldValue).removeListSelectionListener(this);\n+                if (oldValue instanceof ListSelectionModel oldModel) {\n+                    oldModel.removeListSelectionListener(this);\n@@ -2965,2 +2965,2 @@\n-                if (newValue != null && newValue instanceof ListSelectionModel) {\n-                    ((ListSelectionModel) newValue).addListSelectionListener(this);\n+                if (newValue instanceof ListSelectionModel newModel) {\n+                    newModel.addListSelectionListener(this);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JList.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1601,1 +1601,1 @@\n-            if (mi != null && mi instanceof JMenu) {\n+            if (mi instanceof JMenu) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JMenu.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -709,3 +709,1 @@\n-        if (c != null && c instanceof JComponent &&\n-            ((JComponent)c).processKeyBinding(ks, e, condition, pressed)) {\n-\n+        if (c instanceof JComponent jc && jc.processKeyBinding(ks, e, condition, pressed)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JMenuBar.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2333,2 +2333,2 @@\n-        \/\/ Save the icon, if its Serializable.\n-        if(icon != null && icon instanceof Serializable) {\n+        \/\/ Save the icon, if it's Serializable.\n+        if (icon instanceof Serializable) {\n@@ -2338,2 +2338,2 @@\n-        \/\/ Save the message, if its Serializable.\n-        if(message != null && message instanceof Serializable) {\n+        \/\/ Save the message, if it's Serializable.\n+        if (message instanceof Serializable) {\n@@ -2343,1 +2343,1 @@\n-        \/\/ Save the treeModel, if its Serializable.\n+        \/\/ Save the treeModel, if it's Serializable.\n@@ -2357,2 +2357,2 @@\n-        \/\/ Save the initialValue, if its Serializable.\n-        if(initialValue != null && initialValue instanceof Serializable) {\n+        \/\/ Save the initialValue, if it's Serializable.\n+        if (initialValue instanceof Serializable) {\n@@ -2362,2 +2362,2 @@\n-        \/\/ Save the value, if its Serializable.\n-        if(value != null && value instanceof Serializable) {\n+        \/\/ Save the value, if it's Serializable.\n+        if (value instanceof Serializable) {\n@@ -2367,1 +2367,1 @@\n-        \/\/ Save the selectionValues, if its Serializable.\n+        \/\/ Save the selectionValues, if it's Serializable.\n@@ -2384,2 +2384,2 @@\n-        \/\/ Save the inputValue, if its Serializable.\n-        if(inputValue != null && inputValue instanceof Serializable) {\n+        \/\/ Save the inputValue, if it's Serializable.\n+        if (inputValue instanceof Serializable) {\n@@ -2389,3 +2389,2 @@\n-        \/\/ Save the initialSelectionValue, if its Serializable.\n-        if(initialSelectionValue != null &&\n-           initialSelectionValue instanceof Serializable) {\n+        \/\/ Save the initialSelectionValue, if it's Serializable.\n+        if (initialSelectionValue instanceof Serializable) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JOptionPane.java","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -991,2 +991,1 @@\n-              (mp.getInvoker().getParent() != null) &&\n-              (mp.getInvoker().getParent() instanceof JPopupMenu)\n+              (mp.getInvoker().getParent() instanceof JPopupMenu popupMenu)\n@@ -994,1 +993,1 @@\n-            mp = (JPopupMenu) mp.getInvoker().getParent();\n+            mp = popupMenu;\n@@ -1333,2 +1332,2 @@\n-        \/\/ Save the invoker, if its Serializable.\n-        if(invoker != null && invoker instanceof Serializable) {\n+        \/\/ Save the invoker if != null, (Component implements Serializable)\n+        if (invoker != null) {\n@@ -1338,2 +1337,2 @@\n-        \/\/ Save the popup, if its Serializable.\n-        if(popup != null && popup instanceof Serializable) {\n+        \/\/ Save the popup, if it's Serializable.\n+        if (popup instanceof Serializable) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JPopupMenu.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -86,1 +86,2 @@\n-@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n+@SuppressWarnings({\"serial\",  \/\/ Same-version serialization only\n+                   \"doclint:missing\"})\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JScrollBar.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1021,2 +1021,2 @@\n-        if (labelTable != null && (labelTable instanceof PropertyChangeListener)) {\n-            removePropertyChangeListener((PropertyChangeListener) labelTable);\n+        if (labelTable instanceof PropertyChangeListener listener) {\n+            removePropertyChangeListener(listener);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JSlider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6761,2 +6761,2 @@\n-                if (oldValue != null && oldValue instanceof TableModel) {\n-                    ((TableModel) oldValue).removeTableModelListener(this);\n+                if (oldValue instanceof TableModel oldModel) {\n+                    oldModel.removeTableModelListener(this);\n@@ -6764,2 +6764,2 @@\n-                if (newValue != null && newValue instanceof TableModel) {\n-                    ((TableModel) newValue).addTableModelListener(this);\n+                if (newValue instanceof TableModel newModel) {\n+                    newModel.addTableModelListener(this);\n@@ -6774,3 +6774,2 @@\n-                    if (oldValue != null &&\n-                        oldValue instanceof ListSelectionModel) {\n-                        ((ListSelectionModel) oldValue).removeListSelectionListener(this);\n+                    if (oldValue instanceof ListSelectionModel oldModel) {\n+                        oldModel.removeListSelectionListener(this);\n@@ -6778,3 +6777,2 @@\n-                    if (newValue != null &&\n-                        newValue instanceof ListSelectionModel) {\n-                        ((ListSelectionModel) newValue).addListSelectionListener(this);\n+                    if (newValue instanceof ListSelectionModel newModel) {\n+                        newModel.addListSelectionListener(this);\n@@ -6785,3 +6783,2 @@\n-                    if (oldValue != null &&\n-                        oldValue instanceof ListSelectionModel) {\n-                        ((ListSelectionModel) oldValue).removeListSelectionListener(this);\n+                    if (oldValue instanceof ListSelectionModel oldModel) {\n+                        oldModel.removeListSelectionListener(this);\n@@ -6789,3 +6786,2 @@\n-                    if (newValue != null &&\n-                        newValue instanceof ListSelectionModel) {\n-                        ((ListSelectionModel) newValue).addListSelectionListener(this);\n+                    if (newValue instanceof ListSelectionModel newModel) {\n+                        newModel.addListSelectionListener(this);\n@@ -6802,2 +6798,1 @@\n-                if (oldValue != null && oldValue instanceof TableColumnModel) {\n-                    TableColumnModel tcm = (TableColumnModel) oldValue;\n+                if (oldValue instanceof TableColumnModel tcm) {\n@@ -6807,2 +6802,1 @@\n-                if (newValue != null && newValue instanceof TableColumnModel) {\n-                    TableColumnModel tcm = (TableColumnModel) newValue;\n+                if (newValue instanceof TableColumnModel tcm) {\n@@ -6816,2 +6810,2 @@\n-                if (oldValue != null && oldValue instanceof TableCellEditor) {\n-                    ((TableCellEditor) oldValue).removeCellEditorListener(this);\n+                if (oldValue instanceof TableCellEditor oldEditor) {\n+                    oldEditor.removeCellEditorListener(this);\n@@ -6819,2 +6813,2 @@\n-                if (newValue != null && newValue instanceof TableCellEditor) {\n-                    ((TableCellEditor) newValue).addCellEditorListener(this);\n+                if (newValue instanceof TableCellEditor newEditor) {\n+                    newEditor.addCellEditorListener(this);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":18,"deletions":24,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -3130,2 +3130,2 @@\n-        \/\/ Save the cellRenderer, if its Serializable.\n-        if(cellRenderer != null && cellRenderer instanceof Serializable) {\n+        \/\/ Save the cellRenderer, if it's Serializable.\n+        if (cellRenderer instanceof Serializable) {\n@@ -3135,2 +3135,2 @@\n-        \/\/ Save the cellEditor, if its Serializable.\n-        if(cellEditor != null && cellEditor instanceof Serializable) {\n+        \/\/ Save the cellEditor, if it's Serializable.\n+        if (cellEditor instanceof Serializable) {\n@@ -3140,2 +3140,2 @@\n-        \/\/ Save the treeModel, if its Serializable.\n-        if(treeModel != null && treeModel instanceof Serializable) {\n+        \/\/ Save the treeModel, if it's Serializable.\n+        if (treeModel instanceof Serializable) {\n@@ -3145,2 +3145,2 @@\n-        \/\/ Save the selectionModel, if its Serializable.\n-        if(selectionModel != null && selectionModel instanceof Serializable) {\n+        \/\/ Save the selectionModel, if it's Serializable.\n+        if (selectionModel instanceof Serializable) {\n@@ -5417,8 +5417,6 @@\n-                if (parent != null) {\n-                    if (parent instanceof AccessibleJTreeNode) {\n-                        Point parentLoc = ((AccessibleJTreeNode) parent).getLocationInJTree();\n-                        if (parentLoc != null && r != null) {\n-                            r.translate(-parentLoc.x, -parentLoc.y);\n-                        } else {\n-                            return null;        \/\/ not visible!\n-                        }\n+                if (parent instanceof AccessibleJTreeNode treeNode) {\n+                    Point parentLoc = treeNode.getLocationInJTree();\n+                    if (parentLoc != null && r != null) {\n+                        r.translate(-parentLoc.x, -parentLoc.y);\n+                    } else {\n+                        return null;        \/\/ not visible!\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTree.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,2 +75,2 @@\n-                if (o != null && o instanceof ChangeListener) {\n-                    msm.addChangeListener((ChangeListener) o);\n+                if (o instanceof ChangeListener listener) {\n+                    msm.addChangeListener(listener);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/MenuSelectionManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -931,1 +931,1 @@\n-                if (c == root || c == null || !(c instanceof JComponent)) {\n+                if (c == root || !(c instanceof JComponent)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/RepaintManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,1 +457,1 @@\n-        if ((value == null) || !(value instanceof Date)) {\n+        if (!(value instanceof Date date)) {\n@@ -460,2 +460,2 @@\n-        if (!value.equals(this.value.getTime())) {\n-            this.value.setTime((Date)value);\n+        if (!date.equals(this.value.getTime())) {\n+            this.value.setTime(date);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SpinnerDateModel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -455,1 +455,1 @@\n-        if ((value == null) || !(value instanceof Number)) {\n+        if (!(value instanceof Number number)) {\n@@ -458,2 +458,2 @@\n-        if (!value.equals(this.value)) {\n-            this.value = (Number)value;\n+        if (!number.equals(this.value)) {\n+            this.value = number;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SpinnerNumberModel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2057,2 +2057,2 @@\n-        Image iconImage = (icon != null && (icon instanceof ImageIcon)) ?\n-                           ((ImageIcon)icon).getImage() : null;\n+        Image iconImage = (icon instanceof ImageIcon i) ?\n+                           i.getImage() : null;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SwingUtilities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1275,3 +1275,3 @@\n-                    if (dtListener != null && dtListener instanceof DropHandler) {\n-                        ((DropHandler)dtListener).cleanup(false);\n-                    }\n+                if (dtListener instanceof DropHandler dropHandler) {\n+                    dropHandler.cleanup(false);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/TransferHandler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-            if ((l!=null) && (l instanceof Serializable)) {\n+            if (l instanceof Serializable) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/event\/EventListenerList.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/filechooser\/FileSystemView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -572,4 +572,1 @@\n-                    if (policy != null && policy instanceof\n-                            SortingFocusTraversalPolicy) {\n-                        SortingFocusTraversalPolicy sPolicy =\n-                            (SortingFocusTraversalPolicy)policy;\n+                    if (policy instanceof SortingFocusTraversalPolicy sPolicy) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicDesktopPaneUI.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -581,3 +581,2 @@\n-        if (northPane != null &&\n-                northPane instanceof BasicInternalFrameTitlePane) {\n-            ((BasicInternalFrameTitlePane)northPane).uninstallListeners();\n+        if (northPane instanceof BasicInternalFrameTitlePane tp) {\n+            tp.uninstallListeners();\n@@ -1617,3 +1616,2 @@\n-            if (getNorthPane() != null &&\n-                getNorthPane() instanceof BasicInternalFrameTitlePane) {\n-                  result = new Dimension(getNorthPane().getMinimumSize());\n+            if (getNorthPane() instanceof BasicInternalFrameTitlePane tp) {\n+                  result = new Dimension(tp.getMinimumSize());\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicInternalFrameUI.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicMenuItemUI.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n@@ -300,1 +301,1 @@\n-                if(cnt != null && cnt instanceof JMenuBar) {\n+                if (cnt instanceof JMenuBar menuBar) {\n@@ -307,1 +308,1 @@\n-                        me[0] = (MenuElement) cnt;\n+                        me[0] = menuBar;\n@@ -313,1 +314,1 @@\n-                        me[0] = (MenuElement)cnt;\n+                        me[0] = menuBar;\n@@ -515,1 +516,1 @@\n-                    if(cnt != null && cnt instanceof JMenuBar) {\n+                    if (cnt instanceof JMenuBar menuBar) {\n@@ -517,2 +518,2 @@\n-                        me[0]=(MenuElement)cnt;\n-                        me[1]=menu;\n+                        me[0] = menuBar;\n+                        me[1] = menu;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicMenuUI.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -967,7 +967,4 @@\n-        if(inputComponent != null && (inputComponent instanceof JTextField)) {\n-            optionPane.setInputValue(((JTextField)inputComponent).getText());\n-\n-        } else if(inputComponent != null &&\n-                  (inputComponent instanceof JComboBox)) {\n-            optionPane.setInputValue(((JComboBox)inputComponent)\n-                                     .getSelectedItem());\n+        if (inputComponent instanceof JTextField textField) {\n+            optionPane.setInputValue(textField.getText());\n+        } else if (inputComponent instanceof JComboBox<?> comboBox) {\n+            optionPane.setInputValue(comboBox.getSelectedItem());\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicOptionPaneUI.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -200,2 +200,2 @@\n-        if (editor != null && editor instanceof JSpinner.DefaultEditor) {\n-            JTextField tf = ((JSpinner.DefaultEditor)editor).getTextField();\n+        if (editor instanceof JSpinner.DefaultEditor defaultEditor) {\n+            JTextField tf = defaultEditor.getTextField();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicSpinnerUI.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -347,1 +347,1 @@\n-        if (b == null || !(b instanceof UIResource)) {\n+        if (!(b instanceof UIResource)) {\n@@ -2362,2 +2362,1 @@\n-            if (c!=null && c instanceof JSplitPane) {\n-                JSplitPane sp = (JSplitPane)c;\n+            if (c instanceof JSplitPane sp) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicSplitPaneUI.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -538,1 +538,0 @@\n-        Container container;\n@@ -543,2 +542,1 @@\n-            ((container = header.getParent().getParent()) == null) ||\n-            !(container instanceof JScrollPane) ||\n+            !(header.getParent().getParent() instanceof JScrollPane) ||\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTableHeaderUI.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -936,14 +936,12 @@\n-            if (table.isEditing() && editorComp != null) {\n-                if (editorComp instanceof JComponent) {\n-                    JComponent component = (JComponent)editorComp;\n-                    map = component.getInputMap(JComponent.WHEN_FOCUSED);\n-                    Object binding = (map != null) ? map.get(keyStroke) : null;\n-                    if (binding == null) {\n-                        map = component.getInputMap(JComponent.\n-                                         WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n-                        binding = (map != null) ? map.get(keyStroke) : null;\n-                    }\n-                    if (binding != null) {\n-                        ActionMap am = component.getActionMap();\n-                        Action action = (am != null) ? am.get(binding) : null;\n-                        if (action != null && SwingUtilities.\n+            if (table.isEditing() && editorComp instanceof JComponent component) {\n+                map = component.getInputMap(JComponent.WHEN_FOCUSED);\n+                Object binding = (map != null) ? map.get(keyStroke) : null;\n+                if (binding == null) {\n+                    map = component.getInputMap(JComponent.\n+                            WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\n+                    binding = (map != null) ? map.get(keyStroke) : null;\n+                }\n+                if (binding != null) {\n+                    ActionMap am = component.getActionMap();\n+                    Action action = (am != null) ? am.get(binding) : null;\n+                    if (action != null && SwingUtilities.\n@@ -951,3 +949,2 @@\n-                                         e.getModifiers())) {\n-                            e.consume();\n-                        }\n+                                    e.getModifiers())) {\n+                        e.consume();\n@@ -1488,2 +1485,2 @@\n-            if (parent != null && parent instanceof JScrollPane) {\n-                LookAndFeel.installBorder((JScrollPane)parent, \"Table.scrollPaneBorder\");\n+            if (parent instanceof JScrollPane scrollPane) {\n+                LookAndFeel.installBorder(scrollPane, \"Table.scrollPaneBorder\");\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTableUI.java","additions":17,"deletions":20,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -185,2 +185,1 @@\n-            if ((o != null) && (o instanceof JTextComponent.KeyBinding[])) {\n-                JTextComponent.KeyBinding[] bindings = (JTextComponent.KeyBinding[]) o;\n+            if (o instanceof JTextComponent.KeyBinding[] bindings) {\n@@ -539,2 +538,1 @@\n-        if ( editorKit != null\n-             && editorKit instanceof DefaultEditorKit) {\n+        if (editorKit instanceof DefaultEditorKit) {\n@@ -620,3 +618,2 @@\n-                if (obj != null\n-                    && obj instanceof DefaultEditorKit.InsertBreakAction) {\n-                    Action action =  new TextActionWrapper((TextAction)obj);\n+                if (obj instanceof DefaultEditorKit.InsertBreakAction breakAction) {\n+                    Action action = new TextActionWrapper(breakAction);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTextUI.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -657,2 +657,2 @@\n-            if(p != null && p instanceof Window)\n-                frame = (Window) p;\n+            if (p instanceof Window window)\n+                frame = window;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicToolBarUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1134,4 +1134,2 @@\n-        if(currentCellRenderer != null &&\n-           (currentCellRenderer instanceof DefaultTreeCellRenderer)) {\n-            DefaultTreeCellEditor editor = new DefaultTreeCellEditor\n-                        (tree, (DefaultTreeCellRenderer)currentCellRenderer);\n+        if (currentCellRenderer instanceof DefaultTreeCellRenderer defaultRenderer) {\n+            DefaultTreeCellEditor editor = new DefaultTreeCellEditor(tree, defaultRenderer);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTreeUI.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1145,2 +1145,2 @@\n-            if (value != null && value instanceof FileFilter) {\n-                setText(((FileFilter)value).getDescription());\n+            if (value instanceof FileFilter fileFilter) {\n+                setText(fileFilter.getDescription());\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalFileChooserUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,2 +150,1 @@\n-            if (o != null && o instanceof Integer) {\n-                Integer rate = (Integer)o;\n+            if (o instanceof Integer rate) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTextFieldUI.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -206,3 +206,2 @@\n-        if(renderer != null && (renderer instanceof DefaultTreeCellRenderer)) {\n-            editor = new SynthTreeCellEditor(tree, (DefaultTreeCellRenderer)\n-                                             renderer);\n+        if (renderer instanceof DefaultTreeCellRenderer defaultRenderer) {\n+            editor = new SynthTreeCellEditor(tree, defaultRenderer);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTreeUI.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1153,3 +1153,3 @@\n-                if(v != null && v instanceof CompositeView) {\n-                    return ((CompositeView)v).flipEastAndWestAtEnds(position,\n-                                                                    bias);\n+                if (v instanceof CompositeView compositeView) {\n+                    return compositeView.flipEastAndWestAtEnds(position,\n+                                                               bias);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/BoxView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -441,1 +441,1 @@\n-        if ((paragraph != null) && (paragraph instanceof AbstractElement)) {\n+        if (paragraph instanceof AbstractElement abstractElement) {\n@@ -444,2 +444,2 @@\n-                StyleChangeUndoableEdit edit = new StyleChangeUndoableEdit((AbstractElement)paragraph, s);\n-                ((AbstractElement)paragraph).setResolveParent(s);\n+                StyleChangeUndoableEdit edit = new StyleChangeUndoableEdit(abstractElement, s);\n+                abstractElement.setResolveParent(s);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/DefaultStyledDocument.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3305,2 +3305,1 @@\n-            if (doc != null && doc instanceof StyledDocument) {\n-                StyledDocument sDoc = (StyledDocument)doc;\n+            if (doc instanceof StyledDocument sDoc) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/JTextComponent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/LayeredHighlighter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-        @SuppressWarnings(\"deprecation\")\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/StringContent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -373,2 +373,2 @@\n-            if (childInfo != null && childInfo instanceof Accessible) {\n-                return (Accessible)childInfo;\n+            if (childInfo instanceof Accessible accessibleChild) {\n+                return accessibleChild;\n@@ -1215,3 +1215,2 @@\n-                if (model != null && model instanceof StyledDocument) {\n-                    StyledDocument doc = (StyledDocument)model;\n-                    return model.getText(offset, length);\n+                if (model instanceof StyledDocument doc) {\n+                    return doc.getText(offset, length);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/AccessibleHTML.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1611,2 +1611,2 @@\n-                if (o != null && o instanceof AttributeSet) {\n-                    translateAttributes(tag, (AttributeSet)o, cssAttrSet);\n+                if (o instanceof AttributeSet as) {\n+                    translateAttributes(tag, as, cssAttrSet);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-            if (value != null && (value instanceof String)) {\n+            if (value instanceof String s) {\n@@ -77,1 +77,1 @@\n-                    size = Integer.parseInt((String)value);\n+                    size = Integer.parseInt(s);\n@@ -83,2 +83,2 @@\n-            if (value != null && (value instanceof CSS.LengthValue)) {\n-                widthValue = (CSS.LengthValue)value;\n+            if (value instanceof CSS.LengthValue lv) {\n+                widthValue = lv;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HRuleView.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTML.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -904,2 +904,2 @@\n-            if (maps != null && (maps instanceof Hashtable)) {\n-                return (Map)((Hashtable)maps).get(name);\n+            if (maps instanceof Hashtable<?, ?> hashtable) {\n+                return (Map) hashtable.get(name);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLDocument.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -219,1 +219,2 @@\n-@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n+@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n+                   \"doclint:missing\"})\n@@ -844,2 +845,2 @@\n-            if (useMap != null && (useMap instanceof String)) {\n-                Map m = hdoc.getMap((String)useMap);\n+            if (useMap instanceof String s) {\n+                Map m = hdoc.getMap(s);\n@@ -1470,6 +1471,2 @@\n-                Container parentContainer;\n-                if (container != null\n-                    && (container instanceof javax.swing.JEditorPane)\n-                    && (parentContainer = container.getParent()) != null\n-                    && (parentContainer instanceof javax.swing.JViewport)) {\n-                    JViewport viewPort = (JViewport)parentContainer;\n+                if ((container instanceof JEditorPane)\n+                        && (container.getParent() instanceof JViewport viewPort)) {\n@@ -2390,3 +2387,3 @@\n-            if (view != null && view instanceof ObjectView) {\n-                Component comp = ((ObjectView)view).getComponent();\n-                if (comp != null && comp instanceof Accessible) {\n+            if (view instanceof ObjectView objectView) {\n+                Component comp = objectView.getComponent();\n+                if (comp instanceof Accessible) {\n@@ -2476,1 +2473,1 @@\n-            if (d == null || !(d instanceof HTMLDocument)) {\n+            if (!(d instanceof HTMLDocument doc)) {\n@@ -2479,1 +2476,0 @@\n-            HTMLDocument doc = (HTMLDocument)d;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLEditorKit.java","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -311,3 +311,1 @@\n-            if (nameTag != null && endTag != null &&\n-                (endTag instanceof String) &&\n-                endTag.equals(\"true\")) {\n+            if (nameTag != null && \"true\".equals(endTag)) {\n@@ -735,2 +733,2 @@\n-                if (o != null && o instanceof AttributeSet) {\n-                    writeAttributes((AttributeSet)o);\n+                if (o instanceof AttributeSet as) {\n+                    writeAttributes(as);\n@@ -816,2 +814,2 @@\n-                if (o != null && o instanceof AttributeSet) {\n-                    writeAttributes((AttributeSet)o);\n+                if (o instanceof AttributeSet as) {\n+                    writeAttributes(as);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLWriter.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -274,2 +274,1 @@\n-            if (end != null && (end instanceof String) &&\n-                ((String)end).equals(\"true\")) {\n+            if (\"true\".equals(end)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HiddenTagView.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,1 +184,1 @@\n-        if (stringCoords == null || !(stringCoords instanceof String)) {\n+        if (!(stringCoords instanceof String s)) {\n@@ -188,2 +188,1 @@\n-        StringTokenizer    st = new StringTokenizer((String)stringCoords,\n-                                                    \", \\t\\n\\r\");\n+        StringTokenizer    st = new StringTokenizer(s, \", \\t\\n\\r\");\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/Map.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2214,2 +2214,1 @@\n-                    if (value != null &&\n-                        (value instanceof String)) {\n+                    if (value instanceof String s) {\n@@ -2217,1 +2216,1 @@\n-                            int iValue = Integer.parseInt((String)value);\n+                            int iValue = Integer.parseInt(s);\n@@ -2747,2 +2746,1 @@\n-                                    if (o != null && o instanceof AttributeSet) {\n-                                        AttributeSet attr = (AttributeSet)o;\n+                                    if (o instanceof AttributeSet attr) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,2 @@\n-@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n+@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n+                   \"doclint:missing\"})\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/parser\/AttributeList.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/parser\/Parser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -394,1 +394,1 @@\n-            if (basis != null && basis instanceof Style) {\n+            if (basis instanceof Style) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/RTFGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1300,2 +1300,2 @@\n-        \/\/ Save the userObject, if its Serializable.\n-        if(userObject != null && userObject instanceof Serializable) {\n+        \/\/ Save the userObject, if it's Serializable.\n+        if (userObject instanceof Serializable) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/tree\/DefaultMutableTreeNode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -693,2 +693,2 @@\n-        \/\/ Save the root, if its Serializable.\n-        if(root != null && root instanceof Serializable) {\n+        \/\/ Save the root, if it's Serializable.\n+        if (root instanceof Serializable) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/tree\/DefaultTreeModel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1220,1 +1220,1 @@\n-        if(rowMapper != null && rowMapper instanceof Serializable) {\n+        if (rowMapper instanceof Serializable) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/tree\/DefaultTreeSelectionModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/undo\/UndoableEditSupport.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -793,2 +793,2 @@\n-        if (inputMethod != null && inputMethod instanceof InputMethodAdapter) {\n-            ((InputMethodAdapter)inputMethod).stopListening();\n+        if (inputMethod instanceof InputMethodAdapter adapter) {\n+            adapter.stopListening();\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/im\/InputContext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -184,3 +184,1 @@\n-        if (file2 == null || !(file2 instanceof ShellFolder)\n-            || ((file2 instanceof ShellFolder) && ((ShellFolder)file2).isFileSystem())) {\n-\n+        if (!(file2 instanceof ShellFolder sf) || sf.isFileSystem()) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/shell\/ShellFolder.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -206,1 +206,1 @@\n-     * {@code Objects.equals(o, e)}.\n+     * {@code o == e}.\n@@ -219,1 +219,1 @@\n-     * {@code Objects.equals(o, get(i))},\n+     * {@code get(i) == o},\n@@ -221,0 +221,4 @@\n+     *\n+     * @param o element to search for\n+     * @return the index of the first occurrence of the specified element in\n+     *         this list, or -1 if this list does not contain the element\n@@ -235,1 +239,1 @@\n-     * {@code Objects.equals(o, get(i))},\n+     * {@code get(i) == o},\n@@ -237,0 +241,4 @@\n+     *\n+     * @param o element to search for\n+     * @return the index of the last occurrence of the specified element in\n+     *         this list, or -1 if this list does not contain the element\n@@ -393,1 +401,1 @@\n-     * if it is present.  If the list does not contain the element, it is\n+     * if it is present.  If this list does not contain the element, the list is\n@@ -395,1 +403,1 @@\n-     * {@code i} such that {@code Objects.equals(o, get(i))}\n+     * {@code i} such that {@code get(i) == o}\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/util\/IdentityArrayList.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -186,1 +186,1 @@\n-     * {@code Objects.equals(o, e)}.\n+     * {@code o == e}.\n@@ -221,1 +221,1 @@\n-     * {@code i} such that {@code get(i)==o}\n+     * {@code i} such that {@code get(i) == o}\n@@ -392,1 +392,1 @@\n-     * {@code get(i)==o},\n+     * {@code get(i) == o},\n@@ -414,1 +414,1 @@\n-     * {@code get(i)==o},\n+     * {@code get(i) == o},\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/util\/IdentityLinkedList.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -767,2 +767,2 @@\n-            if (obj != null && obj instanceof Number) {\n-                return max(0, min(1, ((Number)obj).floatValue()));\n+            if (obj instanceof Number number) {\n+                return max(0, min(1, number.floatValue()));\n@@ -781,2 +781,2 @@\n-            if (obj != null && obj instanceof NumericShaper) {\n-                return (NumericShaper)obj;\n+            if (obj instanceof NumericShaper shaper) {\n+                return shaper;\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/AttributeValues.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -416,1 +416,1 @@\n-        if (dialog == null || !(dialog instanceof CompositeFont)) {\n+        if (!(dialog instanceof CompositeFont dialog2D)) {\n@@ -419,1 +419,0 @@\n-        CompositeFont dialog2D = (CompositeFont)dialog;\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/FontUtilities.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3659,1 +3659,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SunGraphics2D.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -323,2 +323,1 @@\n-                if (media != null && media instanceof MediaSizeName) {\n-                    MediaSizeName msn = (MediaSizeName)media;\n+                if (media instanceof MediaSizeName msn) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PSStreamPrintService.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -898,2 +898,2 @@\n-            boolean tracking = o != null && (o instanceof Number) &&\n-                (((Number)o).floatValue() != 0f);\n+            boolean tracking = (o instanceof Number n) &&\n+                (n.floatValue() != 0f);\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PathGraphics.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1339,1 +1339,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PeekGraphics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -453,2 +453,2 @@\n-            if (media != null  && media instanceof MediaSizeName) {\n-                mediaSize = MediaSize.getMediaSizeForName((MediaSizeName)media);\n+            if (media instanceof MediaSizeName msn) {\n+                mediaSize = MediaSize.getMediaSizeForName(msn);\n@@ -593,3 +593,3 @@\n-        Media msn = (Media)attributes.get(Media.class);\n-        if (msn != null && msn instanceof MediaSizeName) {\n-            MediaType mType = unMapMedia((MediaSizeName)msn);\n+        Media media = (Media)attributes.get(Media.class);\n+        if (media instanceof MediaSizeName msn) {\n+            MediaType mType = unMapMedia(msn);\n@@ -943,1 +943,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PrintJob2D.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1102,1 +1102,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/ProxyGraphics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1267,1 +1267,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/ProxyGraphics2D.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1616,1 +1616,1 @@\n-            if (media == null || !(media instanceof MediaSizeName)) {\n+            if (!(media instanceof MediaSizeName)) {\n@@ -1619,2 +1619,1 @@\n-            if (media != null && (media instanceof MediaSizeName)) {\n-                MediaSizeName msn = (MediaSizeName)media;\n+            if (media instanceof MediaSizeName msn) {\n@@ -1702,1 +1701,1 @@\n-            if (media == null || !(media instanceof MediaSizeName)) {\n+            if (!(media instanceof MediaSizeName)) {\n@@ -1705,2 +1704,1 @@\n-            if (media != null && (media instanceof MediaSizeName)) {\n-                MediaSizeName msn = (MediaSizeName)media;\n+            if (media instanceof MediaSizeName msn) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/ServiceDialog.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,2 +135,2 @@\n-        if (iValue == null || !(iValue instanceof Number)) {\n-            return defaultValue;\n+        if (iValue instanceof Number number) {\n+            return number.intValue();\n@@ -138,1 +138,1 @@\n-        return ((Number)iValue).intValue();\n+        return defaultValue;\n@@ -149,2 +149,2 @@\n-        if (iValue == null || !(iValue instanceof Insets)) {\n-            return defaultValue;\n+        if (iValue instanceof Insets insets) {\n+            return insets;\n@@ -152,1 +152,1 @@\n-        return (Insets)iValue;\n+        return defaultValue;\n@@ -163,2 +163,2 @@\n-        if (iValue == null || !(iValue instanceof Boolean)) {\n-            return defaultValue;\n+        if (iValue instanceof Boolean b) {\n+            return b;\n@@ -166,1 +166,1 @@\n-        return ((Boolean)iValue).booleanValue();\n+        return defaultValue;\n@@ -177,2 +177,2 @@\n-        if (iValue == null || !(iValue instanceof Color)) {\n-            return defaultValue;\n+        if (iValue instanceof Color color) {\n+            return color;\n@@ -180,1 +180,1 @@\n-        return (Color)iValue;\n+        return defaultValue;\n@@ -190,2 +190,2 @@\n-        if (iValue == null || !(iValue instanceof Icon)) {\n-            return defaultValue;\n+        if (iValue instanceof Icon icon) {\n+            return icon;\n@@ -193,1 +193,1 @@\n-        return (Icon)iValue;\n+        return defaultValue;\n@@ -203,2 +203,2 @@\n-        if (iValue == null || !(iValue instanceof Border)) {\n-            return defaultValue;\n+        if (iValue instanceof Border border) {\n+            return border;\n@@ -206,1 +206,1 @@\n-        return (Border)iValue;\n+        return defaultValue;\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/DefaultLookup.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -381,2 +381,2 @@\n-        if ((value == null) || !(value instanceof Integer)) {\n-            value = 0;\n+        if (value instanceof Integer intValue) {\n+            return intValue;\n@@ -384,1 +384,1 @@\n-        return (Integer) value;\n+        return 0;\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/MenuItemLayoutHelper.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1368,2 +1368,2 @@\n-        if (gc != null && gc instanceof X11GraphicsConfig) {\n-            newVisual = ((X11GraphicsConfig)gc).getVisual();\n+        if (gc instanceof X11GraphicsConfig x11Config) {\n+            newVisual = x11Config.getVisual();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XComponentPeer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -570,2 +570,1 @@\n-        if (parent != null && parent instanceof XEmbeddedFramePeer) {\n-            XEmbeddedFramePeer embedded = (XEmbeddedFramePeer)parent;\n+        if (parent instanceof XEmbeddedFramePeer embedded) {\n@@ -580,2 +579,1 @@\n-        if (parent != null && parent instanceof XEmbeddedFramePeer) {\n-            XEmbeddedFramePeer embedded = (XEmbeddedFramePeer)parent;\n+        if (parent instanceof XEmbeddedFramePeer embedded) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XEmbedCanvasPeer.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -306,1 +306,1 @@\n-        while (!(peer instanceof XWindow))\n+        while (!(peer instanceof XWindow window))\n@@ -312,3 +312,1 @@\n-        if (peer != null && peer instanceof XWindow)\n-            return ((XWindow)peer).getContentWindow();\n-        else return 0;\n+        return window.getContentWindow();\n@@ -330,2 +328,2 @@\n-        if (peer != null && peer instanceof XWindow)\n-            return (XWindow) peer;\n+        if (peer instanceof XWindow xWindow)\n+            return xWindow;\n@@ -930,3 +928,1 @@\n-            if (child != null && child instanceof XWindow &&\n-                !child.isEventDisabled(xev))\n-            {\n+            if (child instanceof XWindow && !child.isEventDisabled(xev)) {\n@@ -1441,3 +1437,2 @@\n-                if (wpeer == null\n-                    || !(wpeer instanceof XDecoratedPeer)\n-                    || ((XDecoratedPeer)wpeer).configure_seen)\n+                if (!(wpeer instanceof XDecoratedPeer xDecoratedPeer)\n+                        || xDecoratedPeer.configure_seen)\n@@ -1450,1 +1445,1 @@\n-                                         ((XDecoratedPeer)wpeer).getContentWindow(),\n+                                         xDecoratedPeer.getContentWindow(),\n@@ -1454,1 +1449,1 @@\n-                    pt = new Point(((XBaseWindow)wpeer).getAbsoluteX(), ((XBaseWindow)wpeer).getAbsoluteY());\n+                    pt = new Point(xDecoratedPeer.getAbsoluteX(), xDecoratedPeer.getAbsoluteY());\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindow.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -419,4 +419,4 @@\n-            if (childPeer != null && childPeer instanceof XWindowPeer) {\n-                if (((XWindowPeer)childPeer).winAttr.iconsInherited) {\n-                    ((XWindowPeer)childPeer).winAttr.icons = icons;\n-                    ((XWindowPeer)childPeer).recursivelySetIcon(icons);\n+            if (childPeer instanceof XWindowPeer xWindowPeer) {\n+                if (xWindowPeer.winAttr.iconsInherited) {\n+                    xWindowPeer.winAttr.icons = icons;\n+                    xWindowPeer.recursivelySetIcon(icons);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindowPeer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11InputMethodBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,3 +210,2 @@\n-        if(sg2d.composite != null\n-                && sg2d.composite instanceof AlphaComposite) {\n-            aComp = (AlphaComposite) sg2d.composite;\n+        if (sg2d.composite instanceof AlphaComposite alphaComposite) {\n+            aComp = alphaComposite;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/java2d\/xr\/XRSurfaceData.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -674,2 +674,1 @@\n-            if (media != null && media instanceof MediaSizeName) {\n-                MediaSizeName msn = (MediaSizeName)media;\n+            if (media instanceof MediaSizeName msn) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/IPPPrintService.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -369,2 +369,1 @@\n-             if (customTray != null &&\n-                 customTray instanceof CustomMediaTray) {\n+             if (customTray != null) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintJob.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1224,2 +1224,2 @@\n-            if (value != null && value instanceof FileFilter) {\n-                setText(((FileFilter)value).getDescription());\n+            if (value instanceof FileFilter fileFilter) {\n+                setText(fileFilter.getDescription());\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsFileChooserUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-        if (o == null || !(o instanceof Win32ShellFolder2)) {\n+        if (!(o instanceof Win32ShellFolder2 rhs)) {\n@@ -550,1 +550,0 @@\n-        Win32ShellFolder2 rhs = (Win32ShellFolder2) o;\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/shell\/Win32ShellFolder2.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WInputMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -734,2 +734,1 @@\n-                        if (media == null ||\n-                            !(media instanceof MediaTray)) {\n+                        if (!(media instanceof MediaTray)) {\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WPrinterJob.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -210,0 +210,3 @@\n+     * @deprecated Finalization has been deprecated for removal.  See\n+     * {@link java.lang.Object#finalize} for details.\n+     *\n@@ -211,1 +214,3 @@\n-     * is pending.\n+     * is pending. If this MemoryMXBean contains information about a JVM in\n+     * which finalization has been disabled or removed, this method always\n+     * returns zero.\n@@ -213,0 +218,1 @@\n+    @Deprecated(since=\"18\")\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/MemoryMXBean.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+    @SuppressWarnings(\"deprecation\")\n","filename":"src\/java.management\/share\/classes\/sun\/management\/MemoryImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/AbstractLdapNamingEnumeration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -480,1 +480,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2642,1 +2642,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapCtx.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/sasl\/DefaultCallbackHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.rmi\/share\/classes\/sun\/rmi\/log\/LogInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/GSSCredElement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/GSSNameElement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -642,1 +642,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/NativeGSSContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.security.sasl\/share\/classes\/com\/sun\/security\/sasl\/CramMD5Base.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.security.sasl\/share\/classes\/com\/sun\/security\/sasl\/PlainClient.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.smartcardio\/share\/classes\/sun\/security\/smartcardio\/CardImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        InputStream is =\n+        InputStream is =    \/\/NOPMD\n@@ -354,0 +354,3 @@\n+        if (resourceName == null) {\n+            throw new NullPointerException();\n+        }\n@@ -407,0 +410,3 @@\n+        if (resourceName == null) {\n+            throw new NullPointerException();\n+        }\n@@ -482,1 +488,1 @@\n-        if (ret.isEmpty() && resourceName != null && resourceName.charAt(0) != '\/') {\n+        if (ret.isEmpty() && resourceName.charAt(0) != '\/') {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/Init.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-            if (hmacLength != null && !\"\".equals(hmacLength)) {\n+            if (hmacLength != null && hmacLength.length() != 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/algorithms\/implementations\/IntegrityHmac.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map)},\n+     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map, OutputStream)},\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/Canonicalizer20010315.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-        do {\n+        do {    \/\/NOPMD\n@@ -341,1 +341,1 @@\n-        do {\n+        do {    \/\/NOPMD\n@@ -563,1 +563,1 @@\n-        if (nsprefix != null && \"\".equals(nsprefix.getValue())) {\n+        if (nsprefix != null && nsprefix.getValue().length() == 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/CanonicalizerBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map)},\n+     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map, OutputStream)},\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/CanonicalizerPhysical.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-            if (entries[i] != null && !\"\".equals(entries[i].uri)) {\n+            if (entries[i] != null && entries[i].uri.length() != 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/NameSpaceSymbTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,181 +0,0 @@\n-\/*\n- * reserved comment block\n- * DO NOT REMOVE OR ALTER!\n- *\/\n-\/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements. See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership. The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License. You may obtain a copy of the License at\n- *\n- * http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- *\/\n-package com.sun.org.apache.xml.internal.security.exceptions;\n-\n-import java.text.MessageFormat;\n-\n-import com.sun.org.apache.xml.internal.security.utils.Constants;\n-import com.sun.org.apache.xml.internal.security.utils.I18n;\n-\n-\/**\n- * The mother of all runtime Exceptions in this bundle. It allows exceptions to have\n- * their messages translated to the different locales.\n- *\n- * The {@code xmlsecurity_en.properties} file contains this line:\n- * <pre>\n- * xml.WrongElement = Can't create a {0} from a {1} element\n- * <\/pre>\n- *\n- * Usage in the Java source is:\n- * <pre>\n- * {\n- *    Object[] exArgs = { Constants._TAG_TRANSFORMS, \"BadElement\" };\n- *\n- *    throw new XMLSecurityException(\"xml.WrongElement\", exArgs);\n- * }\n- * <\/pre>\n- *\n- * Additionally, if another Exception has been caught, we can supply it, too\n- * <pre>\n- * try {\n- *    ...\n- * } catch (Exception oldEx) {\n- *    Object[] exArgs = { Constants._TAG_TRANSFORMS, \"BadElement\" };\n- *\n- *    throw new XMLSecurityException(\"xml.WrongElement\", exArgs, oldEx);\n- * }\n- * <\/pre>\n- *\n- *\n- *\/\n-public class XMLSecurityRuntimeException extends RuntimeException {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    \/** Field msgID *\/\n-    protected String msgID;\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     *\/\n-    public XMLSecurityRuntimeException() {\n-        super(\"Missing message string\");\n-\n-        this.msgID = null;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID) {\n-        super(I18n.getExceptionMessage(msgID));\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     * @param exArgs\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID, Object[] exArgs) {\n-        super(MessageFormat.format(I18n.getExceptionMessage(msgID), exArgs));\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param originalException\n-     *\/\n-    public XMLSecurityRuntimeException(Exception originalException) {\n-        super(\"Missing message ID to locate message string in resource bundle \\\"\"\n-              + Constants.exceptionMessagesResourceBundleBase\n-              + \"\\\". Original Exception was a \"\n-              + originalException.getClass().getName() + \" and message \"\n-              + originalException.getMessage(), originalException);\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     * @param originalException\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID, Exception originalException) {\n-        super(I18n.getExceptionMessage(msgID, originalException), originalException);\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     * @param exArgs\n-     * @param originalException\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID, Object[] exArgs, Exception originalException) {\n-        super(MessageFormat.format(I18n.getExceptionMessage(msgID), exArgs), originalException);\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Method getMsgID\n-     *\n-     * @return the messageId\n-     *\/\n-    public String getMsgID() {\n-        if (msgID == null) {\n-            return \"Missing message ID\";\n-        }\n-        return msgID;\n-    }\n-\n-    \/** {@inheritDoc} *\/\n-    public String toString() {\n-        String s = this.getClass().getName();\n-        String message = super.getLocalizedMessage();\n-\n-        if (message != null) {\n-            message = s + \": \" + message;\n-        } else {\n-            message = s;\n-        }\n-\n-        if (this.getCause() != null) {\n-            message = message + \"\\nOriginal Exception was \" + this.getCause().toString();\n-        }\n-\n-        return message;\n-    }\n-\n-    \/**\n-     * Method getOriginalException\n-     *\n-     * @return the original exception\n-     *\/\n-    public Exception getOriginalException() {\n-        if (this.getCause() instanceof Exception) {\n-            return (Exception)this.getCause();\n-        }\n-        return null;\n-    }\n-\n-}\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/exceptions\/XMLSecurityRuntimeException.java","additions":0,"deletions":181,"binary":false,"changes":181,"status":"deleted"},{"patch":"@@ -173,2 +173,2 @@\n-        KeyResolverSpi keyResolverSpi =\n-            (KeyResolverSpi) JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n+        KeyResolverSpi keyResolverSpi = (KeyResolverSpi)\n+            JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n@@ -196,2 +196,2 @@\n-            keyResolverSpi = (KeyResolverSpi) JavaUtils.newInstanceWithEmptyConstructor(\n-                    ClassLoaderUtils.loadClass(className, KeyResolver.class));\n+            keyResolverSpi = (KeyResolverSpi)\n+                JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n@@ -256,2 +256,2 @@\n-            KeyResolverSpi keyResolverSpi = (KeyResolverSpi)JavaUtils\n-                    .newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n+            KeyResolverSpi keyResolverSpi = (KeyResolverSpi)\n+                JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/keys\/keyresolver\/KeyResolver.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+        referent.setSecureValidation(secureValidation);\n@@ -184,1 +185,1 @@\n-        if (referent.containsKeyInfoReference()) {\n+        if (referent.containsKeyInfoReference() || referent.containsRetrievalMethod()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/keys\/keyresolver\/implementations\/KeyInfoReferenceResolver.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -99,2 +99,0 @@\n-      <SignatureAlgorithm URI=\"http:\/\/www.w3.org\/2007\/05\/xmldsig-more#ripemd160-rsa-MGF1\"\r\n-                          JAVACLASS=\"com.sun.org.apache.xml.internal.security.algorithms.implementations.SignatureBaseRSA$SignatureRSARIPEMD160MGF1\" \/>\r\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/resource\/config.xml","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,0 +129,1 @@\n+signature.Transform.XPathError = Error evaluating XPath expression\r\n@@ -199,1 +200,1 @@\n-stax.idgenerationdisablewithmultipleparts = Id generation must not be disabled when multiple parts need signing\n\\ No newline at end of file\n+stax.idgenerationdisablewithmultipleparts = Id generation must not be disabled when multiple parts need signing\r\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/resource\/xmlsecurity_en.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityRuntimeException;\n@@ -144,1 +143,1 @@\n-     * method included the node and <I>all<\/I> his descendants in the output.\n+     * method included the node and <I>all<\/I> its descendants in the output.\n@@ -531,1 +530,1 @@\n-        try {\n+        try {   \/\/NOPMD\n@@ -542,1 +541,1 @@\n-    public void addNodeFilter(NodeFilter filter) {\n+    public void addNodeFilter(NodeFilter filter)  throws XMLParserException, IOException {\n@@ -544,7 +543,1 @@\n-            try {\n-                convertToNodes();\n-            } catch (Exception e) {\n-                throw new XMLSecurityRuntimeException(\n-                    \"signature.XMLSignatureInput.nodesetReference\", e\n-                );\n-            }\n+            convertToNodes();\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/signature\/XMLSignatureInput.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        if (os == null) {\n+        if (os == null && (input.isOctetStream() || input.isElement() || input.isNodeSet())) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformC14N.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-            if (os == null) {\n+            if (os == null && (input.isOctetStream() || input.isElement() || input.isNodeSet())) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformC14NExclusive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.io.IOException;\n@@ -27,0 +28,1 @@\n+import com.sun.org.apache.xml.internal.security.parser.XMLParserException;\n@@ -74,1 +76,5 @@\n-        input.addNodeFilter(new EnvelopedNodeFilter(signatureElement));\n+        try {\n+            input.addNodeFilter(new EnvelopedNodeFilter(signatureElement));\n+        } catch (XMLParserException | IOException ex) {\n+            throw new TransformationException(ex);\n+        }\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformEnvelopedSignature.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.io.IOException;\n@@ -29,1 +30,1 @@\n-import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityRuntimeException;\n+import com.sun.org.apache.xml.internal.security.parser.XMLParserException;\n@@ -54,0 +55,3 @@\n+    private static final com.sun.org.slf4j.internal.Logger LOG =\n+            com.sun.org.slf4j.internal.LoggerFactory.getLogger(TransformXPath.class);\n+\n@@ -105,1 +109,1 @@\n-        } catch (DOMException ex) {\n+        } catch (XMLParserException | IOException | DOMException ex) {\n@@ -147,5 +151,2 @@\n-                Object[] eArgs = {currentNode};\n-                throw new XMLSecurityRuntimeException(\"signature.Transform.node\", eArgs, e);\n-            } catch (Exception e) {\n-                Object[] eArgs = {currentNode, currentNode.getNodeType()};\n-                throw new XMLSecurityRuntimeException(\"signature.Transform.nodeAndType\",eArgs, e);\n+                LOG.debug(\"Error evaluating XPath expression\", e);\n+                return 0;\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformXPath.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+@SuppressWarnings(\"PMD\")\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/Base64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        if (namespaceURI == null) {\n+        if (namespaceURI == null && context != null) {\n@@ -132,1 +132,1 @@\n-        } else if (namespaceURI.equals(XML_NS_URI)) {\n+        } else if (XML_NS_URI.equals(namespaceURI)) {\n@@ -134,1 +134,1 @@\n-        } else if (namespaceURI.equals(XMLNS_ATTRIBUTE_NS_URI)) {\n+        } else if (XMLNS_ATTRIBUTE_NS_URI.equals(namespaceURI)) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/DOMNamespaceContext.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -193,3 +193,3 @@\n-            StringReader sr = new StringReader(value.substring(1, value.length() - 1));\n-            int i = 0;\n-            char c;\n+            try (StringReader sr = new StringReader(value.substring(1, value.length() - 1))) {\n+                int i = 0;\n+                char c;\n@@ -197,2 +197,2 @@\n-            while ((i = sr.read()) > -1) {\n-                c = (char) i;\n+                while ((i = sr.read()) > -1) {\n+                    c = (char) i;\n@@ -200,5 +200,5 @@\n-                \/\/the following char is defined at 4.Relationship with RFC1779 and LDAPv2 inrfc2253\n-                if (c == ',' || c == '=' || c == '+' || c == '<'\n-                    || c == '>' || c == '#' || c == ';') {\n-                    sb.append('\\\\');\n-                }\n+                    \/\/the following char is defined at 4.Relationship with RFC1779 and LDAPv2 inrfc2253\n+                    if (c == ',' || c == '=' || c == '+' || c == '<'\n+                            || c == '>' || c == '#' || c == ';') {\n+                        sb.append('\\\\');\n+                    }\n@@ -206,1 +206,2 @@\n-                sb.append(c);\n+                    sb.append(c);\n+                }\n@@ -266,1 +267,0 @@\n-        StringReader sr = new StringReader(string);\n@@ -270,16 +270,3 @@\n-        while ((i = sr.read()) > -1) {\n-            c = (char) i;\n-\n-            if (c == '\\\\') {\n-                sb.append(c);\n-\n-                char c1 = (char) sr.read();\n-                char c2 = (char) sr.read();\n-\n-                \/\/65 (A) 97 (a)\n-                if ((c1 >= 48 && c1 <= 57 || c1 >= 65 && c1 <= 70 || c1 >= 97 && c1 <= 102)\n-                    && (c2 >= 48 && c2 <= 57\n-                        || c2 >= 65 && c2 <= 70\n-                        || c2 >= 97 && c2 <= 102)) {\n-                    try {\n-                        char ch = (char) Byte.parseByte(\"\" + c1 + c2, 16);\n+        try (StringReader sr = new StringReader(string)) {\n+            while ((i = sr.read()) > -1) {\n+                c = (char) i;\n@@ -287,3 +274,21 @@\n-                        sb.append(ch);\n-                    } catch (NumberFormatException ex) {\n-                        throw new IOException(ex);\n+                if (c == '\\\\') {\n+                    sb.append(c);\n+\n+                    char c1 = (char) sr.read();\n+                    char c2 = (char) sr.read();\n+\n+                    \/\/65 (A) 97 (a)\n+                    if ((c1 >= 48 && c1 <= 57 || c1 >= 65 && c1 <= 70 || c1 >= 97 && c1 <= 102)\n+                            && (c2 >= 48 && c2 <= 57\n+                            || c2 >= 65 && c2 <= 70\n+                            || c2 >= 97 && c2 <= 102)) {\n+                        try {\n+                            char ch = (char) Byte.parseByte(\"\" + c1 + c2, 16);\n+\n+                            sb.append(ch);\n+                        } catch (NumberFormatException ex) {\n+                            throw new IOException(ex);\n+                        }\n+                    } else {\n+                        sb.append(c1);\n+                        sb.append(c2);\n@@ -292,2 +297,1 @@\n-                    sb.append(c1);\n-                    sb.append(c2);\n+                    sb.append(c);\n@@ -295,2 +299,0 @@\n-            } else {\n-                sb.append(c);\n@@ -312,1 +314,0 @@\n-        StringReader sr = new StringReader(string);\n@@ -315,6 +316,8 @@\n-        while ((i = sr.read()) > -1) {\n-            if (i < 32) {\n-                sb.append('\\\\');\n-                sb.append(Integer.toHexString(i));\n-            } else {\n-                sb.append((char) i);\n+        try (StringReader sr = new StringReader(string)) {\n+            while ((i = sr.read()) > -1) {\n+                if (i < 32) {\n+                    sb.append('\\\\');\n+                    sb.append(Integer.toHexString(i));\n+                } else {\n+                    sb.append((char) i);\n+                }\n@@ -336,1 +339,0 @@\n-        StringReader sr = new StringReader(string);\n@@ -340,2 +342,3 @@\n-        while ((i = sr.read()) > -1) {\n-            c = (char) i;\n+        try (StringReader sr = new StringReader(string)) {\n+            while ((i = sr.read()) > -1) {\n+                c = (char) i;\n@@ -343,2 +346,2 @@\n-            if (c == '\\\\') {\n-                char c1 = (char) sr.read();\n+                if (c == '\\\\') {\n+                    char c1 = (char) sr.read();\n@@ -346,2 +349,2 @@\n-                if (c1 == ' ') {\n-                    sb.append('\\\\');\n+                    if (c1 == ' ') {\n+                        sb.append('\\\\');\n@@ -349,1 +352,1 @@\n-                    String s = \"20\";\n+                        String s = \"20\";\n@@ -351,1 +354,5 @@\n-                    sb.append(s);\n+                        sb.append(s);\n+                    } else {\n+                        sb.append('\\\\');\n+                        sb.append(c1);\n+                    }\n@@ -353,2 +360,1 @@\n-                    sb.append('\\\\');\n-                    sb.append(c1);\n+                    sb.append(c);\n@@ -356,2 +362,0 @@\n-            } else {\n-                sb.append(c);\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/RFC2253Parser.java","additions":59,"deletions":55,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-        do {\n+        do {    \/\/NOPMD\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/XMLUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,2 +125,2 @@\n-            ResourceResolverSpi resourceResolverSpi = (ResourceResolverSpi)JavaUtils\n-                    .newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, ResourceResolver.class));\n+            ResourceResolverSpi resourceResolverSpi = (ResourceResolverSpi)\n+                JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, ResourceResolver.class));\n@@ -162,9 +162,0 @@\n-                \/\/ Check to see whether the Resolver is allowed\n-                if (context.secureValidation\n-                    && (resolver instanceof ResolverLocalFilesystem\n-                        || resolver instanceof ResolverDirectHTTP)) {\n-                    Object[] exArgs = { resolver.getClass().getName() };\n-                    throw new ResourceResolverException(\n-                        \"signature.Reference.ForbiddenResolver\", exArgs, context.uriToResolve, context.baseUri\n-                    );\n-                }\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/ResourceResolver.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/ResourceResolverContext.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -222,1 +222,2 @@\n-            context.baseUri != null && context.baseUri.startsWith(\"http:\")) {\n+            context.uriToResolve.startsWith(\"https:\") ||\n+            context.baseUri != null && (context.baseUri.startsWith(\"http:\") || context.baseUri.startsWith(\"https:\"))) {\n@@ -234,1 +235,1 @@\n-        if (baseURI == null || \"\".equals(baseURI)) {\n+        if (baseURI == null || baseURI.length() == 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverDirectHTTP.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-    private static final int FILE_URI_LENGTH = \"file:\/\".length();\n-\n@@ -56,3 +54,1 @@\n-            String fileName =\n-                ResolverLocalFilesystem.translateUriToFilename(uriNew.toString());\n-            InputStream inputStream = Files.newInputStream(Paths.get(fileName));\n+            InputStream inputStream = Files.newInputStream(Paths.get(uriNew));  \/\/NOPMD\n@@ -70,35 +66,0 @@\n-    \/**\n-     * Method translateUriToFilename\n-     *\n-     * @param uri\n-     * @return the string of the filename\n-     *\/\n-    private static String translateUriToFilename(String uri) {\n-\n-        String subStr = uri.substring(FILE_URI_LENGTH);\n-\n-        if (subStr.indexOf(\"%20\") > -1) {\n-            int offset = 0;\n-            int index = 0;\n-            StringBuilder temp = new StringBuilder(subStr.length());\n-            do {\n-                index = subStr.indexOf(\"%20\",offset);\n-                if (index == -1) {\n-                    temp.append(subStr.substring(offset));\n-                } else {\n-                    temp.append(subStr.substring(offset, index));\n-                    temp.append(' ');\n-                    offset = index + 3;\n-                }\n-            } while(index != -1);\n-            subStr = temp.toString();\n-        }\n-\n-        if (subStr.charAt(1) == ':') {\n-            \/\/ we're running M$ Windows, so this works fine\n-            return subStr;\n-        }\n-        \/\/ we're running some UNIX, so we have to prepend a slash\n-        return \"\/\" + subStr;\n-    }\n-\n@@ -114,1 +75,1 @@\n-            context.uriToResolve.startsWith(\"http:\")) {\n+            context.uriToResolve.startsWith(\"http:\") || context.uriToResolve.startsWith(\"https:\")) {\n@@ -136,1 +97,1 @@\n-        if (baseURI == null || \"\".equals(baseURI)) {\n+        if (baseURI == null || baseURI.length() == 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverLocalFilesystem.java","additions":3,"deletions":42,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -242,3 +242,0 @@\n-            if (!in.isNodeSet() && !in.isElement()) {\n-                return null;\n-            }\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/ApacheCanonicalizer.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -450,1 +450,1 @@\n-        try (OutputStream os = new UnsyncBufferedOutputStream(dos)) {\n+        try (OutputStream os = new UnsyncBufferedOutputStream(dos)) { \/\/NOPMD\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-        if (parent.getLocalName().equals(\"Transforms\")) {\n+        if (\"Transforms\".equals(parent.getLocalName())) {\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMTransform.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-            ResourceResolverContext resContext = new ResourceResolverContext(uriAttr, baseURI, false);\n+            ResourceResolverContext resContext = new ResourceResolverContext(uriAttr, baseURI, secVal);\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMURIDereferencer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,8 +46,7 @@\n-    \/\/ all restrictions are initialized to be unconstrained\n-    private static Set<URI> disallowedAlgs = new HashSet<>();\n-    private static int maxTrans = Integer.MAX_VALUE;\n-    private static int maxRefs = Integer.MAX_VALUE;\n-    private static Set<String> disallowedRefUriSchemes = new HashSet<>();\n-    private static Map<String, Integer> minKeyMap = new HashMap<>();\n-    private static boolean noDuplicateIds = false;\n-    private static boolean noRMLoops = false;\n+    private static Set<URI> disallowedAlgs;\n+    private static int maxTrans;\n+    private static int maxRefs;\n+    private static Set<String> disallowedRefUriSchemes;\n+    private static Map<String, Integer> minKeyMap;\n+    private static boolean noDuplicateIds;\n+    private static boolean noRMLoops;\n@@ -67,0 +66,10 @@\n+        \/\/ First initialized to be unconstrained and then parse the\n+        \/\/ security property \"jdk.xml.dsig.secureValidationPolicy\"\n+        disallowedAlgs = new HashSet<>();\n+        maxTrans = Integer.MAX_VALUE;\n+        maxRefs = Integer.MAX_VALUE;\n+        disallowedRefUriSchemes = new HashSet<>();\n+        minKeyMap = new HashMap<>();\n+        noDuplicateIds = false;\n+        noRMLoops = false;\n+\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/Policy.java","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        Boolean value = (Boolean)xc.getProperty(name);\n+        Boolean value = (Boolean) xc.getProperty(name);\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        \/\/ Apache Santuario XML Security for Java, version 2.2.1\n+        \/\/ Apache Santuario XML Security for Java, version 2.3.0\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/XMLDSigRI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## Apache Santuario v2.2.1\n+## Apache Santuario v2.3.0\n","filename":"src\/java.xml.crypto\/share\/legal\/santuario.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,0 +83,2 @@\n+         *\n+         * @since 10\n@@ -125,0 +127,2 @@\n+         *\n+         * @since 9\n@@ -161,0 +165,2 @@\n+         *\n+         * @since 9\n@@ -210,0 +216,2 @@\n+         *\n+         * @since 18\n@@ -222,0 +230,2 @@\n+         *\n+         * @since 12\n@@ -228,0 +238,2 @@\n+         *\n+         * @since 10\n@@ -258,0 +270,2 @@\n+         *\n+         * @since 9\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/doctree\/DocTree.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -120,1 +120,6 @@\n-    JDK18(\"18\");\n+    JDK18(\"18\"),\n+\n+    \/**\n+      * 19, tbd\n+      *\/\n+    JDK19(\"19\");\n@@ -172,0 +177,1 @@\n+        case JDK19  -> Target.JDK1_19;\n@@ -316,0 +322,1 @@\n+        case JDK19  -> RELEASE_19;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2281,0 +2281,5 @@\n+        @Override\n+        public Name name() {\n+            return name;\n+        }\n+\n@@ -2319,0 +2324,5 @@\n+        @Override\n+        public Name name() {\n+            return name;\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -348,1 +348,1 @@\n-            if (a.type.tsym.isAnnotationType()) {\n+            if (a.type.isErroneous() || a.type.tsym.isAnnotationType()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Annotate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -210,1 +210,0 @@\n-    private final DeferredCompletionFailureHandler dcfh;\n@@ -335,1 +334,0 @@\n-        dcfh = DeferredCompletionFailureHandler.instance(context);\n@@ -696,1 +694,1 @@\n-                (constants == null || !isExhaustive(tree.selector.type, constants))) {\n+                (constants == null || !isExhaustive(tree.selector.pos(), tree.selector.type, constants))) {\n@@ -731,1 +729,1 @@\n-                !isExhaustive(tree.selector.type, constants)) {\n+                !isExhaustive(tree.selector.pos(), tree.selector.type, constants)) {\n@@ -754,1 +752,1 @@\n-        private void transitiveCovers(Type seltype, Set<Symbol> covered) {\n+        private void transitiveCovers(DiagnosticPosition pos, Type seltype, Set<Symbol> covered) {\n@@ -776,1 +774,1 @@\n-                                if (isTransitivelyCovered(seltype, sup.tsym, covered) &&\n+                                if (isTransitivelyCovered(pos, seltype, sup.tsym, covered) &&\n@@ -787,3 +785,2 @@\n-        private boolean isTransitivelyCovered(Type seltype, Symbol sealed, Set<Symbol> covered) {\n-            DeferredCompletionFailureHandler.Handler prevHandler =\n-                    dcfh.setHandler(dcfh.speculativeCodeHandler);\n+        private boolean isTransitivelyCovered(DiagnosticPosition pos, Type seltype,\n+                                              Symbol sealed, Set<Symbol> covered) {\n@@ -799,1 +796,1 @@\n-                                                 .allMatch(s -> isTransitivelyCovered(seltype, s, covered));\n+                                                 .allMatch(s -> isTransitivelyCovered(pos, seltype, s, covered));\n@@ -803,4 +800,2 @@\n-                \/\/safe to ignore, the symbol will be un-completed when the speculative handler is removed.\n-                return false;\n-            } finally {\n-                dcfh.setHandler(prevHandler);\n+                chk.completionError(pos, cf);\n+                return true;\n@@ -810,2 +805,2 @@\n-        private boolean isExhaustive(Type seltype, Set<Symbol> covered) {\n-            transitiveCovers(seltype, covered);\n+        private boolean isExhaustive(DiagnosticPosition pos, Type seltype, Set<Symbol> covered) {\n+            transitiveCovers(pos, seltype, covered);\n@@ -816,1 +811,3 @@\n-                            yield ((Type.IntersectionClassType) seltype).getComponents().stream().anyMatch(t -> isExhaustive(t, covered));\n+                            yield ((Type.IntersectionClassType) seltype).getComponents()\n+                                                                        .stream()\n+                                                                        .anyMatch(t -> isExhaustive(pos, t, covered));\n@@ -822,1 +819,1 @@\n-                case TYPEVAR -> isExhaustive(((TypeVar) seltype).getUpperBound(), covered);\n+                case TYPEVAR -> isExhaustive(pos, ((TypeVar) seltype).getUpperBound(), covered);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -168,3 +168,8 @@\n-        debugLinesOrVars = options.isSet(Option.G)\n-                || options.isSet(Option.G_CUSTOM, \"lines\")\n-                || options.isSet(Option.G_CUSTOM, \"vars\");\n+        boolean lineDebugInfo =\n+            options.isUnset(Option.G_CUSTOM) ||\n+            options.isSet(Option.G_CUSTOM, \"lines\");\n+        boolean varDebugInfo =\n+            options.isUnset(Option.G_CUSTOM)\n+            ? options.isSet(Option.G)\n+            : options.isSet(Option.G_CUSTOM, \"vars\");\n+        debugLinesOrVars = lineDebugInfo || varDebugInfo;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1304,1 +1304,1 @@\n-                    result &= false;\n+                    result = false;\n@@ -1316,1 +1316,1 @@\n-                        result &= true;\n+                        \/\/ do nothing\n@@ -1318,1 +1318,1 @@\n-                        result &= false;\n+                        result = false;\n@@ -1338,1 +1338,1 @@\n-                        result &= true;\n+                        \/\/ do nothing\n@@ -1340,1 +1340,1 @@\n-                        result &= false;\n+                        result = false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -350,2 +350,3 @@\n-            statements.append(make.at(tree.pos).VarDef(temp, !hasNullCase ? attr.makeNullCheck(selector)\n-                                                                          : selector));\n+            boolean needsNullCheck = !hasNullCase && !seltype.isPrimitive();\n+            statements.append(make.at(tree.pos).VarDef(temp, needsNullCheck ? attr.makeNullCheck(selector)\n+                                                                            : selector));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -122,1 +122,2 @@\n-        V62(62, 0);   \/\/ JDK 18\n+        V62(62, 0),   \/\/ JDK 18\n+        V63(63, 0);   \/\/ JDK 19\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassFile.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -137,0 +137,5 @@\n+        \/**\n+         * The dynamic constant's name.\n+         *\/\n+        Name name();\n+\n@@ -153,1 +158,1 @@\n-            return new Pair<>(bsmKey(types), dynamicType().poolKey(types));\n+            return new PoolKey(name(), bsmKey(types), dynamicType().poolKey(types));\n@@ -195,0 +200,2 @@\n+\n+        record PoolKey(Name name, BsmKey bsmKey, Object dynamicType) {}\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/PoolConstant.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -91,1 +91,4 @@\n-    JDK1_18(\"18\", 62, 0);\n+    JDK1_18(\"18\", 62, 0),\n+\n+    \/** JDK 19. *\/\n+    JDK1_19(\"19\", 63, 0);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -760,0 +760,6 @@\n+        if (sym.kind == PCK) {\n+            TypeSymbol pkgInfo = ((PackageSymbol) sym).package_info;\n+            if (pkgInfo != null) {\n+                pkgInfo.complete();\n+            }\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-@SupportedSourceVersion(SourceVersion.RELEASE_18)\n+@SupportedSourceVersion(SourceVersion.RELEASE_19)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/PrintingProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,4 @@\n+ * <p>The {@code com.sun.source.*} packages provide the {@index \"Compiler Tree API\"}:\n+ * an API for accessing the abstract trees (ASTs) representing Java source code\n+ * and documentation comments, used by <em>javac<\/em>, <em>javadoc<\/em> and related tools.\n+ *\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-    private String functionList = \"C_GetFunctionList\";\n+    private String functionList = null;\n@@ -314,0 +314,6 @@\n+        if (functionList == null) {\n+            \/\/ defaults to \"C_GetFunctionList\" for NSS secmod\n+            if (nssUseSecmod || nssUseSecmodTrust) {\n+                return \"C_GetFunctionList\";\n+            }\n+        }\n@@ -411,21 +417,21 @@\n-            String word = st.sval;\n-            if (word.equals(\"name\")) {\n-                name = parseStringEntry(word);\n-            } else if (word.equals(\"library\")) {\n-                library = parseLibrary(word);\n-            } else if (word.equals(\"description\")) {\n-                parseDescription(word);\n-            } else if (word.equals(\"slot\")) {\n-                parseSlotID(word);\n-            } else if (word.equals(\"slotListIndex\")) {\n-                parseSlotListIndex(word);\n-            } else if (word.equals(\"enabledMechanisms\")) {\n-                parseEnabledMechanisms(word);\n-            } else if (word.equals(\"disabledMechanisms\")) {\n-                parseDisabledMechanisms(word);\n-            } else if (word.equals(\"attributes\")) {\n-                parseAttributes(word);\n-            } else if (word.equals(\"handleStartupErrors\")) {\n-                parseHandleStartupErrors(word);\n-            } else if (word.endsWith(\"insertionCheckInterval\")) {\n-                insertionCheckInterval = parseIntegerEntry(word);\n+            switch (st.sval) {\n+            case \"name\"->\n+                name = parseStringEntry(st.sval);\n+            case \"library\"->\n+                library = parseLibrary(st.sval);\n+            case \"description\"->\n+                parseDescription(st.sval);\n+            case \"slot\"->\n+                parseSlotID(st.sval);\n+            case \"slotListIndex\"->\n+                parseSlotListIndex(st.sval);\n+            case \"enabledMechanisms\"->\n+                parseEnabledMechanisms(st.sval);\n+            case \"disabledMechanisms\"->\n+                parseDisabledMechanisms(st.sval);\n+            case \"attributes\"->\n+                parseAttributes(st.sval);\n+            case \"handleStartupErrors\"->\n+                parseHandleStartupErrors(st.sval);\n+            case \"insertionCheckInterval\"-> {\n+                insertionCheckInterval = parseIntegerEntry(st.sval);\n@@ -433,1 +439,1 @@\n-                    throw excLine(word + \" must be at least 100 ms\");\n+                    throw excLine(st.sval + \" must be at least 100 ms\");\n@@ -435,2 +441,3 @@\n-            } else if (word.equals(\"cleaner.shortInterval\")) {\n-                resourceCleanerShortInterval = parseIntegerEntry(word);\n+            }\n+            case \"cleaner.shortInterval\"-> {\n+                resourceCleanerShortInterval = parseIntegerEntry(st.sval);\n@@ -438,1 +445,1 @@\n-                    throw excLine(word + \" must be at least 1000 ms\");\n+                    throw excLine(st.sval + \" must be at least 1000 ms\");\n@@ -440,2 +447,3 @@\n-            } else if (word.equals(\"cleaner.longInterval\")) {\n-                resourceCleanerLongInterval = parseIntegerEntry(word);\n+            }\n+            case \"cleaner.longInterval\"-> {\n+                resourceCleanerLongInterval = parseIntegerEntry(st.sval);\n@@ -443,1 +451,1 @@\n-                    throw excLine(word + \" must be at least 1000 ms\");\n+                    throw excLine(st.sval + \" must be at least 1000 ms\");\n@@ -445,18 +453,19 @@\n-            } else if (word.equals(\"destroyTokenAfterLogout\")) {\n-                destroyTokenAfterLogout = parseBooleanEntry(word);\n-            } else if (word.equals(\"showInfo\")) {\n-                showInfo = parseBooleanEntry(word);\n-            } else if (word.equals(\"keyStoreCompatibilityMode\")) {\n-                keyStoreCompatibilityMode = parseBooleanEntry(word);\n-            } else if (word.equals(\"explicitCancel\")) {\n-                explicitCancel = parseBooleanEntry(word);\n-            } else if (word.equals(\"omitInitialize\")) {\n-                omitInitialize = parseBooleanEntry(word);\n-            } else if (word.equals(\"allowSingleThreadedModules\")) {\n-                allowSingleThreadedModules = parseBooleanEntry(word);\n-            } else if (word.equals(\"functionList\")) {\n-                functionList = parseStringEntry(word);\n-            } else if (word.equals(\"nssUseSecmod\")) {\n-                nssUseSecmod = parseBooleanEntry(word);\n-            } else if (word.equals(\"nssLibraryDirectory\")) {\n-                nssLibraryDirectory = parseLibrary(word);\n+            }\n+            case \"destroyTokenAfterLogout\"->\n+                destroyTokenAfterLogout = parseBooleanEntry(st.sval);\n+            case \"showInfo\"->\n+                showInfo = parseBooleanEntry(st.sval);\n+            case \"keyStoreCompatibilityMode\"->\n+                keyStoreCompatibilityMode = parseBooleanEntry(st.sval);\n+            case \"explicitCancel\"->\n+                explicitCancel = parseBooleanEntry(st.sval);\n+            case \"omitInitialize\"->\n+                omitInitialize = parseBooleanEntry(st.sval);\n+            case \"allowSingleThreadedModules\"->\n+                allowSingleThreadedModules = parseBooleanEntry(st.sval);\n+            case \"functionList\"->\n+                functionList = parseStringEntry(st.sval);\n+            case \"nssUseSecmod\"->\n+                nssUseSecmod = parseBooleanEntry(st.sval);\n+            case \"nssLibraryDirectory\"-> {\n+                nssLibraryDirectory = parseLibrary(st.sval);\n@@ -464,2 +473,3 @@\n-            } else if (word.equals(\"nssSecmodDirectory\")) {\n-                nssSecmodDirectory = expand(parseStringEntry(word));\n+            }\n+            case \"nssSecmodDirectory\"-> {\n+                nssSecmodDirectory = expand(parseStringEntry(st.sval));\n@@ -467,2 +477,3 @@\n-            } else if (word.equals(\"nssModule\")) {\n-                nssModule = parseStringEntry(word);\n+            }\n+            case \"nssModule\"-> {\n+                nssModule = parseStringEntry(st.sval);\n@@ -470,2 +481,3 @@\n-            } else if (word.equals(\"nssDbMode\")) {\n-                String mode = parseStringEntry(word);\n+            }\n+            case \"nssDbMode\"-> {\n+                String mode = parseStringEntry(st.sval);\n@@ -482,2 +494,3 @@\n-            } else if (word.equals(\"nssNetscapeDbWorkaround\")) {\n-                nssNetscapeDbWorkaround = parseBooleanEntry(word);\n+            }\n+            case \"nssNetscapeDbWorkaround\"-> {\n+                nssNetscapeDbWorkaround = parseBooleanEntry(st.sval);\n@@ -485,9 +498,10 @@\n-            } else if (word.equals(\"nssArgs\")) {\n-                parseNSSArgs(word);\n-            } else if (word.equals(\"nssUseSecmodTrust\")) {\n-                nssUseSecmodTrust = parseBooleanEntry(word);\n-            } else if (word.equals(\"useEcX963Encoding\")) {\n-                useEcX963Encoding = parseBooleanEntry(word);\n-            } else if (word.equals(\"nssOptimizeSpace\")) {\n-                nssOptimizeSpace = parseBooleanEntry(word);\n-            } else {\n+            }\n+            case \"nssArgs\"->\n+                parseNSSArgs(st.sval);\n+            case \"nssUseSecmodTrust\"->\n+                nssUseSecmodTrust = parseBooleanEntry(st.sval);\n+            case \"useEcX963Encoding\"->\n+                useEcX963Encoding = parseBooleanEntry(st.sval);\n+            case \"nssOptimizeSpace\"->\n+                nssOptimizeSpace = parseBooleanEntry(st.sval);\n+            default->\n@@ -495,1 +509,2 @@\n-                        (\"Unknown keyword '\" + word + \"', line \" + st.lineno());\n+                        (\"Unknown keyword '\" + st.sval + \"', line \" +\n+                        st.lineno());\n@@ -497,1 +512,1 @@\n-            parsedKeywords.add(word);\n+            parsedKeywords.add(st.sval);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Config.java","additions":81,"deletions":66,"binary":false,"changes":147,"status":"modified"},{"patch":"@@ -404,1 +404,7 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n+        token.ensureValid();\n+        if (P11Util.trySessionCancel(token, session,\n+                (encrypt ? CKF_ENCRYPT : CKF_DECRYPT))) {\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession as some\n@@ -456,1 +462,1 @@\n-        byte[] aad = (aadBuffer.size() > 0? aadBuffer.toByteArray() : null);\n+        byte[] aad = (aadBuffer.size() > 0 ? aadBuffer.toByteArray() : null);\n@@ -510,1 +516,1 @@\n-        return (result > 0? result : 0);\n+        return (result > 0 ? result : 0);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -448,2 +448,8 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n-        \/\/ hardware vendors may require re-login\n+\n+        if (P11Util.trySessionCancel(token, session,\n+                (encrypt ? CKF_ENCRYPT : CKF_DECRYPT))) {\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession as\n+        \/\/ some hardware vendors may require re-login\n@@ -461,1 +467,1 @@\n-                \/\/ call. If the operation inside the token was already cancelled,\n+                \/\/ call. If the operation inside the token is already cancelled,\n@@ -491,1 +497,1 @@\n-            CK_MECHANISM mechParams = (blockMode == MODE_CTR?\n+            CK_MECHANISM mechParams = (blockMode == MODE_CTR ?\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Cipher.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-            int keyLength, CK_ATTRIBUTE[] attributes) {\n+            int keyLength, CK_ATTRIBUTE[] attrs) {\n@@ -126,9 +126,9 @@\n-        int n = (attributes == null) ? 0 : attributes.length;\n-        for (int i = 0; i < n; i++) {\n-            CK_ATTRIBUTE attr = attributes[i];\n-            if (attr.type == CKA_TOKEN) {\n-                tokenObject = attr.getBoolean();\n-            } else if (attr.type == CKA_SENSITIVE) {\n-                sensitive = attr.getBoolean();\n-            } else if (attr.type == CKA_EXTRACTABLE) {\n-                extractable = attr.getBoolean();\n+        if (attrs != null) {\n+            for (CK_ATTRIBUTE attr : attrs) {\n+                if (attr.type == CKA_TOKEN) {\n+                    tokenObject = attr.getBoolean();\n+                } else if (attr.type == CKA_SENSITIVE) {\n+                    sensitive = attr.getBoolean();\n+                } else if (attr.type == CKA_EXTRACTABLE) {\n+                    extractable = attr.getBoolean();\n+                }\n@@ -250,1 +250,1 @@\n-                + \" key, \" + keyLength + \" bits\";\n+                + \" key, \" + keyLength + \" bits \";\n@@ -281,1 +281,2 @@\n-    void fetchAttributes(CK_ATTRIBUTE[] attributes) {\n+    CK_ATTRIBUTE[] fetchAttributes(CK_ATTRIBUTE[] attrs) {\n+        Objects.requireNonNull(attrs, \"attrs must be non-null\");\n@@ -287,1 +288,1 @@\n-                        attributes);\n+                    attrs);\n@@ -294,0 +295,11 @@\n+        return attrs;\n+    }\n+\n+    \/\/ convenience method which returns the attribute values as BigInteger[]\n+    BigInteger[] fetchAttributesAsInts(CK_ATTRIBUTE[] attrs) {\n+        attrs = fetchAttributes(attrs);\n+        BigInteger[] res = new BigInteger[attrs.length];\n+        for (int i = 0; i < attrs.length; i++) {\n+            res[i] = attrs[i].getBigInteger();\n+        }\n+        return res;\n@@ -332,5 +344,5 @@\n-            int keyLength, CK_ATTRIBUTE[] attributes) {\n-        attributes = getAttributes(session, keyID, attributes, new CK_ATTRIBUTE[] {\n-            new CK_ATTRIBUTE(CKA_TOKEN),\n-            new CK_ATTRIBUTE(CKA_SENSITIVE),\n-            new CK_ATTRIBUTE(CKA_EXTRACTABLE),\n+            int keyLength, CK_ATTRIBUTE[] attrs) {\n+        attrs = getAttributes(session, keyID, attrs, new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_TOKEN),\n+                    new CK_ATTRIBUTE(CKA_SENSITIVE),\n+                    new CK_ATTRIBUTE(CKA_EXTRACTABLE),\n@@ -338,2 +350,1 @@\n-        return new P11SecretKey(session, keyID, algorithm, keyLength,\n-                attributes);\n+        return new P11SecretKey(session, keyID, algorithm, keyLength, attrs);\n@@ -342,6 +353,7 @@\n-    static SecretKey masterSecretKey(Session session, long keyID, String algorithm,\n-            int keyLength, CK_ATTRIBUTE[] attributes, int major, int minor) {\n-        attributes = getAttributes(session, keyID, attributes, new CK_ATTRIBUTE[] {\n-            new CK_ATTRIBUTE(CKA_TOKEN),\n-            new CK_ATTRIBUTE(CKA_SENSITIVE),\n-            new CK_ATTRIBUTE(CKA_EXTRACTABLE),\n+    static SecretKey masterSecretKey(Session session, long keyID,\n+            String algorithm, int keyLength, CK_ATTRIBUTE[] attrs,\n+            int major, int minor) {\n+        attrs = getAttributes(session, keyID, attrs, new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_TOKEN),\n+                    new CK_ATTRIBUTE(CKA_SENSITIVE),\n+                    new CK_ATTRIBUTE(CKA_EXTRACTABLE),\n@@ -349,3 +361,2 @@\n-        return new P11TlsMasterSecretKey(\n-                session, keyID, algorithm, keyLength, attributes, major,\n-                minor);\n+        return new P11TlsMasterSecretKey(session, keyID, algorithm, keyLength,\n+                attrs, major, minor);\n@@ -356,1 +367,1 @@\n-            int keyLength, CK_ATTRIBUTE[] attributes) {\n+            int keyLength, CK_ATTRIBUTE[] attrs) {\n@@ -360,1 +371,1 @@\n-                        keyLength, attributes);\n+                        keyLength, attrs);\n@@ -363,1 +374,1 @@\n-                        keyLength, attributes);\n+                        keyLength, attrs);\n@@ -366,1 +377,1 @@\n-                        keyLength, attributes);\n+                        keyLength, attrs);\n@@ -369,1 +380,1 @@\n-                        keyLength, attributes);\n+                        keyLength, attrs);\n@@ -377,5 +388,5 @@\n-            int keyLength, CK_ATTRIBUTE[] attributes) {\n-        attributes = getAttributes(session, keyID, attributes, new CK_ATTRIBUTE[] {\n-            new CK_ATTRIBUTE(CKA_TOKEN),\n-            new CK_ATTRIBUTE(CKA_SENSITIVE),\n-            new CK_ATTRIBUTE(CKA_EXTRACTABLE),\n+            int keyLength, CK_ATTRIBUTE[] attrs) {\n+        attrs = getAttributes(session, keyID, attrs, new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_TOKEN),\n+                    new CK_ATTRIBUTE(CKA_SENSITIVE),\n+                    new CK_ATTRIBUTE(CKA_EXTRACTABLE),\n@@ -383,50 +394,20 @@\n-        if (attributes[1].getBoolean() || (attributes[2].getBoolean() == false)) {\n-            return new P11PrivateKey\n-                (session, keyID, algorithm, keyLength, attributes);\n-        } else {\n-            switch (algorithm) {\n-                case \"RSA\":\n-                    \/\/ In order to decide if this is RSA CRT key, we first query\n-                    \/\/ and see if all extra CRT attributes are available.\n-                    CK_ATTRIBUTE[] attrs2 = new CK_ATTRIBUTE[] {\n-                        new CK_ATTRIBUTE(CKA_PUBLIC_EXPONENT),\n-                        new CK_ATTRIBUTE(CKA_PRIME_1),\n-                        new CK_ATTRIBUTE(CKA_PRIME_2),\n-                        new CK_ATTRIBUTE(CKA_EXPONENT_1),\n-                        new CK_ATTRIBUTE(CKA_EXPONENT_2),\n-                        new CK_ATTRIBUTE(CKA_COEFFICIENT),\n-                    };\n-                    boolean crtKey;\n-                    try {\n-                        session.token.p11.C_GetAttributeValue\n-                            (session.id(), keyID, attrs2);\n-                        crtKey = ((attrs2[0].pValue instanceof byte[]) &&\n-                                  (attrs2[1].pValue instanceof byte[]) &&\n-                                  (attrs2[2].pValue instanceof byte[]) &&\n-                                  (attrs2[3].pValue instanceof byte[]) &&\n-                                  (attrs2[4].pValue instanceof byte[]) &&\n-                                  (attrs2[5].pValue instanceof byte[])) ;\n-                    } catch (PKCS11Exception e) {\n-                        \/\/ ignore, assume not available\n-                        crtKey = false;\n-                    }\n-                    if (crtKey) {\n-                        return new P11RSAPrivateKey(session, keyID, algorithm,\n-                                keyLength, attributes, attrs2);\n-                    } else {\n-                        return new P11RSAPrivateNonCRTKey(session, keyID,\n-                                algorithm, keyLength, attributes);\n-                    }\n-                case \"DSA\":\n-                    return new P11DSAPrivateKey(session, keyID, algorithm,\n-                            keyLength, attributes);\n-                case \"DH\":\n-                    return new P11DHPrivateKey(session, keyID, algorithm,\n-                            keyLength, attributes);\n-                case \"EC\":\n-                    return new P11ECPrivateKey(session, keyID, algorithm,\n-                            keyLength, attributes);\n-                default:\n-                    throw new ProviderException\n-                            (\"Unknown private key algorithm \" + algorithm);\n-            }\n+\n+        boolean keySensitive = (attrs[0].getBoolean() ||\n+                attrs[1].getBoolean() || !attrs[2].getBoolean());\n+\n+        switch (algorithm) {\n+        case \"RSA\":\n+            return P11RSAPrivateKeyInternal.of(session, keyID, algorithm,\n+                    keyLength, attrs, keySensitive);\n+        case \"DSA\":\n+            return P11DSAPrivateKeyInternal.of(session, keyID, algorithm,\n+                    keyLength, attrs, keySensitive);\n+        case \"DH\":\n+            return P11DHPrivateKeyInternal.of(session, keyID, algorithm,\n+                    keyLength, attrs, keySensitive);\n+        case \"EC\":\n+            return P11ECPrivateKeyInternal.of(session, keyID, algorithm,\n+                    keyLength, attrs, keySensitive);\n+        default:\n+            throw new ProviderException\n+                    (\"Unknown private key algorithm \" + algorithm);\n@@ -436,3 +417,3 @@\n-    \/\/ class for sensitive and unextractable private keys\n-    private static final class P11PrivateKey extends P11Key\n-                                                implements PrivateKey {\n+    \/\/ base class for all PKCS11 private keys\n+    private static abstract class P11PrivateKey extends P11Key implements\n+            PrivateKey {\n@@ -441,0 +422,2 @@\n+        protected byte[] encoded; \/\/ guard by synchronized\n+\n@@ -442,2 +425,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(PRIVATE, session, keyID, algorithm, keyLength, attrs);\n@@ -458,1 +441,3 @@\n-        private volatile byte[] encoded;\n+\n+        private volatile byte[] encoded; \/\/ guard by double-checked locking\n+\n@@ -460,2 +445,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(SECRET, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(SECRET, session, keyID, algorithm, keyLength, attrs);\n@@ -463,0 +448,1 @@\n+\n@@ -471,0 +457,1 @@\n+\n@@ -476,0 +463,1 @@\n+\n@@ -481,5 +469,1 @@\n-                        Session tempSession = null;\n-                        long keyID = this.getKeyID();\n-                        try {\n-                            tempSession = token.getOpSession();\n-                            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n+                        b = fetchAttributes(new CK_ATTRIBUTE[] {\n@@ -487,10 +471,1 @@\n-                            };\n-                            token.p11.C_GetAttributeValue\n-                                    (tempSession.id(), keyID, attributes);\n-                            b = attributes[0].getByteArray();\n-                        } catch (PKCS11Exception e) {\n-                            throw new ProviderException(e);\n-                        } finally {\n-                            this.releaseKeyID();\n-                            token.releaseSession(tempSession);\n-                        }\n+                        })[0].getByteArray();\n@@ -505,0 +480,13 @@\n+    \/\/ base class for all PKCS11 public keys\n+    private static abstract class P11PublicKey extends P11Key implements\n+            PublicKey {\n+        private static final long serialVersionUID = 1L;\n+\n+        protected byte[] encoded; \/\/ guard by synchronized\n+\n+        P11PublicKey(Session session, long keyID, String algorithm,\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(PUBLIC, session, keyID, algorithm, keyLength, attrs);\n+        }\n+    }\n+\n@@ -512,2 +500,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes, int major, int minor) {\n-            super(session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs, int major, int minor) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -526,0 +514,72 @@\n+    \/\/ impl class for sensitive\/unextractable RSA private keys\n+    static class P11RSAPrivateKeyInternal extends P11PrivateKey {\n+        private static final long serialVersionUID = -2138581185214187615L;\n+\n+        static P11RSAPrivateKeyInternal of(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs,\n+                boolean keySensitive) {\n+            if (keySensitive) {\n+                return new P11RSAPrivateKeyInternal(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            } else {\n+                CK_ATTRIBUTE[] rsaAttrs = new CK_ATTRIBUTE[] {\n+                        new CK_ATTRIBUTE(CKA_MODULUS),\n+                        new CK_ATTRIBUTE(CKA_PRIVATE_EXPONENT),\n+                        new CK_ATTRIBUTE(CKA_PUBLIC_EXPONENT),\n+                        new CK_ATTRIBUTE(CKA_PRIME_1),\n+                        new CK_ATTRIBUTE(CKA_PRIME_2),\n+                        new CK_ATTRIBUTE(CKA_EXPONENT_1),\n+                        new CK_ATTRIBUTE(CKA_EXPONENT_2),\n+                        new CK_ATTRIBUTE(CKA_COEFFICIENT),\n+                };\n+                boolean isCRT = true;\n+                Session tempSession = null;\n+                try {\n+                    tempSession = session.token.getOpSession();\n+                    session.token.p11.C_GetAttributeValue(tempSession.id(),\n+                            keyID, rsaAttrs);\n+                    for (CK_ATTRIBUTE attr : rsaAttrs) {\n+                        isCRT &= (attr.pValue instanceof byte[]);\n+                        if (!isCRT) break;\n+                    }\n+                } catch (PKCS11Exception e) {\n+                    \/\/ ignore, assume not available\n+                    isCRT = false;\n+                } finally {\n+                    session.token.releaseSession(tempSession);\n+                }\n+                BigInteger n = rsaAttrs[0].getBigInteger();\n+                BigInteger d = rsaAttrs[1].getBigInteger();\n+                if (isCRT) {\n+                    return new P11RSAPrivateKey(session, keyID, algorithm,\n+                           keyLength, attrs, n, d,\n+                           Arrays.copyOfRange(rsaAttrs, 2, rsaAttrs.length));\n+                } else {\n+                    return new P11RSAPrivateNonCRTKey(session, keyID,\n+                           algorithm, keyLength, attrs, n, d);\n+                }\n+            }\n+        }\n+\n+        protected transient BigInteger n;\n+\n+        private P11RSAPrivateKeyInternal(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n+        }\n+\n+        private synchronized void fetchValues() {\n+            token.ensureValid();\n+            if (n != null) return;\n+\n+            n = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_MODULUS)\n+            })[0];\n+        }\n+\n+        public BigInteger getModulus() {\n+            fetchValues();\n+            return n;\n+        }\n+    }\n+\n@@ -527,2 +587,2 @@\n-    private static final class P11RSAPrivateKey extends P11Key\n-                implements RSAPrivateCrtKey {\n+    private static final class P11RSAPrivateKey extends P11RSAPrivateKeyInternal\n+            implements RSAPrivateCrtKey {\n@@ -531,5 +591,6 @@\n-        private BigInteger n, e, d, p, q, pe, qe, coeff;\n-        private byte[] encoded;\n-        P11RSAPrivateKey(Session session, long keyID, String algorithm,\n-                int keyLength, CK_ATTRIBUTE[] attrs, CK_ATTRIBUTE[] crtAttrs) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attrs);\n+        private transient BigInteger e, d, p, q, pe, qe, coeff;\n+\n+        private P11RSAPrivateKey(Session session, long keyID, String algorithm,\n+                int keyLength, CK_ATTRIBUTE[] attrs, BigInteger n, BigInteger d,\n+                CK_ATTRIBUTE[] crtAttrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -537,0 +598,2 @@\n+            this.n = n;\n+            this.d = d;\n@@ -553,13 +616,0 @@\n-        private synchronized void fetchValues() {\n-            token.ensureValid();\n-            if (n != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n-                new CK_ATTRIBUTE(CKA_MODULUS),\n-                new CK_ATTRIBUTE(CKA_PRIVATE_EXPONENT),\n-            };\n-            fetchAttributes(attributes);\n-            n = attributes[0].getBigInteger();\n-            d = attributes[1].getBigInteger();\n-        }\n@@ -571,0 +621,1 @@\n+\n@@ -574,1 +625,0 @@\n-                fetchValues();\n@@ -585,0 +635,2 @@\n+\n+        @Override\n@@ -586,1 +638,0 @@\n-            fetchValues();\n@@ -593,1 +644,0 @@\n-            fetchValues();\n@@ -614,2 +664,2 @@\n-    private static final class P11RSAPrivateNonCRTKey extends P11Key\n-                implements RSAPrivateKey {\n+    private static final class P11RSAPrivateNonCRTKey extends\n+            P11RSAPrivateKeyInternal implements RSAPrivateKey {\n@@ -618,2 +668,2 @@\n-        private BigInteger n, d;\n-        private byte[] encoded;\n+        private transient BigInteger d;\n+\n@@ -621,15 +671,5 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attributes);\n-        }\n-        private synchronized void fetchValues() {\n-            token.ensureValid();\n-            if (n != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n-                new CK_ATTRIBUTE(CKA_MODULUS),\n-                new CK_ATTRIBUTE(CKA_PRIVATE_EXPONENT),\n-            };\n-            fetchAttributes(attributes);\n-            n = attributes[0].getBigInteger();\n-            d = attributes[1].getBigInteger();\n+                int keyLength, CK_ATTRIBUTE[] attrs, BigInteger n,\n+                BigInteger d) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n+            this.n = n;\n+            this.d = d;\n@@ -637,0 +677,1 @@\n+\n@@ -641,0 +682,1 @@\n+\n@@ -644,1 +686,0 @@\n-                fetchValues();\n@@ -658,0 +699,2 @@\n+\n+        @Override\n@@ -659,1 +702,0 @@\n-            fetchValues();\n@@ -663,1 +705,0 @@\n-            fetchValues();\n@@ -668,1 +709,1 @@\n-    private static final class P11RSAPublicKey extends P11Key\n+    private static final class P11RSAPublicKey extends P11PublicKey\n@@ -671,2 +712,2 @@\n-        private BigInteger n, e;\n-        private byte[] encoded;\n+        private transient BigInteger n, e;\n+\n@@ -674,2 +715,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PUBLIC, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -677,0 +718,1 @@\n+\n@@ -679,4 +721,3 @@\n-            if (n != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n+            if (n != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n@@ -684,5 +725,4 @@\n-                new CK_ATTRIBUTE(CKA_PUBLIC_EXPONENT),\n-            };\n-            fetchAttributes(attributes);\n-            n = attributes[0].getBigInteger();\n-            e = attributes[1].getBigInteger();\n+                new CK_ATTRIBUTE(CKA_PUBLIC_EXPONENT)\n+            });\n+            n = res[0];\n+            e = res[1];\n@@ -690,0 +730,1 @@\n+\n@@ -694,0 +735,1 @@\n+\n@@ -707,0 +749,1 @@\n+\n@@ -722,1 +765,1 @@\n-    private static final class P11DSAPublicKey extends P11Key\n+    private static final class P11DSAPublicKey extends P11PublicKey\n@@ -726,4 +769,3 @@\n-        private BigInteger y;\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private DSAParams params;\n-        private byte[] encoded;\n+        private transient BigInteger y;\n+        private transient DSAParams params;\n+\n@@ -731,2 +773,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PUBLIC, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -734,0 +776,1 @@\n+\n@@ -736,4 +779,3 @@\n-            if (y != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n+            if (y != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n@@ -743,9 +785,4 @@\n-                new CK_ATTRIBUTE(CKA_BASE),\n-            };\n-            fetchAttributes(attributes);\n-            y = attributes[0].getBigInteger();\n-            params = new DSAParameterSpec(\n-                attributes[1].getBigInteger(),\n-                attributes[2].getBigInteger(),\n-                attributes[3].getBigInteger()\n-            );\n+                new CK_ATTRIBUTE(CKA_BASE)\n+            });\n+            y = res[0];\n+            params = new DSAParameterSpec(res[1], res[2], res[3]);\n@@ -753,0 +790,1 @@\n+\n@@ -757,0 +795,1 @@\n+\n@@ -786,2 +825,1 @@\n-    private static final class P11DSAPrivateKey extends P11Key\n-                                                implements DSAPrivateKey {\n+    static class P11DSAPrivateKeyInternal extends P11PrivateKey {\n@@ -790,4 +828,43 @@\n-        private BigInteger x;\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private DSAParams params;\n-        private byte[] encoded;\n+        protected transient DSAParams params;\n+\n+        static P11DSAPrivateKeyInternal of(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs,\n+                boolean keySensitive) {\n+            if (keySensitive) {\n+                return new P11DSAPrivateKeyInternal(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            } else {\n+                return new P11DSAPrivateKey(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            }\n+        }\n+\n+        private P11DSAPrivateKeyInternal(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n+        }\n+\n+        private synchronized void fetchValues() {\n+            token.ensureValid();\n+            if (params != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_PRIME),\n+                    new CK_ATTRIBUTE(CKA_SUBPRIME),\n+                    new CK_ATTRIBUTE(CKA_BASE),\n+            });\n+            params = new DSAParameterSpec(res[0], res[1], res[2]);\n+        }\n+\n+        protected DSAParams getParams() {\n+            fetchValues();\n+            return params;\n+        }\n+    }\n+\n+    private static final class P11DSAPrivateKey extends P11DSAPrivateKeyInternal\n+                                        implements DSAPrivateKey {\n+        private static final long serialVersionUID = 3119629997181999389L;\n+\n+        private transient BigInteger x; \/\/ params inside P11DSAPrivateKeyInternal\n+\n@@ -795,2 +872,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -798,0 +875,1 @@\n+\n@@ -800,16 +878,10 @@\n-            if (x != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n-                new CK_ATTRIBUTE(CKA_VALUE),\n-                new CK_ATTRIBUTE(CKA_PRIME),\n-                new CK_ATTRIBUTE(CKA_SUBPRIME),\n-                new CK_ATTRIBUTE(CKA_BASE),\n-            };\n-            fetchAttributes(attributes);\n-            x = attributes[0].getBigInteger();\n-            params = new DSAParameterSpec(\n-                attributes[1].getBigInteger(),\n-                attributes[2].getBigInteger(),\n-                attributes[3].getBigInteger()\n-            );\n+            if (x != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_VALUE),\n+                    new CK_ATTRIBUTE(CKA_PRIME),\n+                    new CK_ATTRIBUTE(CKA_SUBPRIME),\n+                    new CK_ATTRIBUTE(CKA_BASE),\n+            });\n+            x = res[0];\n+            params = new DSAParameterSpec(res[1], res[2], res[3]);\n@@ -817,0 +889,1 @@\n+\n@@ -821,0 +894,1 @@\n+\n@@ -831,0 +905,1 @@\n+\n@@ -835,0 +910,2 @@\n+\n+        @Override\n@@ -841,1 +918,40 @@\n-    private static final class P11DHPrivateKey extends P11Key\n+    static class P11DHPrivateKeyInternal extends P11PrivateKey {\n+        private static final long serialVersionUID = 1L;\n+\n+        protected transient DHParameterSpec params;\n+\n+        static P11DHPrivateKeyInternal of(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs,\n+                boolean keySensitive) {\n+            if (keySensitive) {\n+                return new P11DHPrivateKeyInternal(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            } else {\n+                return new P11DHPrivateKey(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            }\n+        }\n+\n+        private P11DHPrivateKeyInternal(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n+        }\n+\n+        private synchronized void fetchValues() {\n+            token.ensureValid();\n+            if (params != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_PRIME),\n+                    new CK_ATTRIBUTE(CKA_BASE),\n+            });\n+            params = new DHParameterSpec(res[0], res[1]);\n+        }\n+\n+        public DHParameterSpec getParams() {\n+            fetchValues();\n+            return params;\n+        }\n+    }\n+\n+    private static final class P11DHPrivateKey extends P11DHPrivateKeyInternal\n@@ -845,4 +961,2 @@\n-        private BigInteger x;\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private DHParameterSpec params;\n-        private byte[] encoded;\n+        private transient BigInteger x; \/\/ params in P11DHPrivateKeyInternal\n+\n@@ -850,2 +964,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -853,0 +967,1 @@\n+\n@@ -855,14 +970,9 @@\n-            if (x != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n-                new CK_ATTRIBUTE(CKA_VALUE),\n-                new CK_ATTRIBUTE(CKA_PRIME),\n-                new CK_ATTRIBUTE(CKA_BASE),\n-            };\n-            fetchAttributes(attributes);\n-            x = attributes[0].getBigInteger();\n-            params = new DHParameterSpec(\n-                attributes[1].getBigInteger(),\n-                attributes[2].getBigInteger()\n-            );\n+            if (x != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_VALUE),\n+                    new CK_ATTRIBUTE(CKA_PRIME),\n+                    new CK_ATTRIBUTE(CKA_BASE),\n+            });\n+            x = res[0];\n+            params = new DHParameterSpec(res[1], res[2]);\n@@ -870,0 +980,1 @@\n+\n@@ -874,0 +985,1 @@\n+\n@@ -900,0 +1012,1 @@\n+            fetchValues();\n@@ -903,1 +1016,0 @@\n-            fetchValues();\n@@ -924,1 +1036,1 @@\n-    private static final class P11DHPublicKey extends P11Key\n+    private static final class P11DHPublicKey extends P11PublicKey\n@@ -928,4 +1040,3 @@\n-        private BigInteger y;\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private DHParameterSpec params;\n-        private byte[] encoded;\n+        private transient BigInteger y;\n+        private transient DHParameterSpec params;\n+\n@@ -933,2 +1044,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PUBLIC, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -936,0 +1047,1 @@\n+\n@@ -938,14 +1050,9 @@\n-            if (y != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n-                new CK_ATTRIBUTE(CKA_VALUE),\n-                new CK_ATTRIBUTE(CKA_PRIME),\n-                new CK_ATTRIBUTE(CKA_BASE),\n-            };\n-            fetchAttributes(attributes);\n-            y = attributes[0].getBigInteger();\n-            params = new DHParameterSpec(\n-                attributes[1].getBigInteger(),\n-                attributes[2].getBigInteger()\n-            );\n+            if (y != null) return;\n+\n+            BigInteger[] res = fetchAttributesAsInts(new CK_ATTRIBUTE[] {\n+                    new CK_ATTRIBUTE(CKA_VALUE),\n+                    new CK_ATTRIBUTE(CKA_PRIME),\n+                    new CK_ATTRIBUTE(CKA_BASE),\n+            });\n+            y = res[0];\n+            params = new DHParameterSpec(res[1], res[2]);\n@@ -953,0 +1060,1 @@\n+\n@@ -957,0 +1065,1 @@\n+\n@@ -1012,1 +1121,45 @@\n-    private static final class P11ECPrivateKey extends P11Key\n+    static class P11ECPrivateKeyInternal extends P11PrivateKey {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        protected transient ECParameterSpec params;\n+\n+        static P11ECPrivateKeyInternal of(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs,\n+                boolean keySensitive) {\n+            if (keySensitive) {\n+                return new P11ECPrivateKeyInternal(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            } else {\n+                return new P11ECPrivateKey(session, keyID, algorithm,\n+                        keyLength, attrs);\n+            }\n+        }\n+\n+        private P11ECPrivateKeyInternal(Session session, long keyID,\n+                String algorithm, int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n+        }\n+\n+        private synchronized void fetchValues() {\n+            token.ensureValid();\n+            if (params != null) return;\n+\n+            try {\n+                byte[] paramBytes = fetchAttributes(new CK_ATTRIBUTE[] {\n+                        new CK_ATTRIBUTE(CKA_EC_PARAMS)\n+                })[0].getByteArray();\n+\n+                params = P11ECKeyFactory.decodeParameters(paramBytes);\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Could not parse key values\", e);\n+            }\n+        }\n+\n+        protected ECParameterSpec getParams() {\n+            fetchValues();\n+            return params;\n+        }\n+    }\n+\n+    private static final class P11ECPrivateKey extends P11ECPrivateKeyInternal\n@@ -1016,4 +1169,2 @@\n-        private BigInteger s;\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private ECParameterSpec params;\n-        private byte[] encoded;\n+        private transient BigInteger s; \/\/ params in P11ECPrivateKeyInternal\n+\n@@ -1021,2 +1172,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PRIVATE, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -1024,0 +1175,1 @@\n+\n@@ -1026,4 +1178,3 @@\n-            if (s != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n+            if (s != null) return;\n+\n+            CK_ATTRIBUTE[] attrs = fetchAttributes(new CK_ATTRIBUTE[] {\n@@ -1031,4 +1182,4 @@\n-                new CK_ATTRIBUTE(CKA_EC_PARAMS, params),\n-            };\n-            fetchAttributes(attributes);\n-            s = attributes[0].getBigInteger();\n+                new CK_ATTRIBUTE(CKA_EC_PARAMS),\n+            });\n+\n+            s = attrs[0].getBigInteger();\n@@ -1037,1 +1188,1 @@\n-                            (attributes[1].getByteArray());\n+                            (attrs[1].getByteArray());\n@@ -1042,0 +1193,1 @@\n+\n@@ -1046,0 +1198,1 @@\n+\n@@ -1047,1 +1200,0 @@\n-            token.ensureValid();\n@@ -1049,1 +1201,0 @@\n-                fetchValues();\n@@ -1051,0 +1202,1 @@\n+                    fetchValues();\n@@ -1059,0 +1211,1 @@\n+\n@@ -1063,0 +1216,1 @@\n+\n@@ -1069,1 +1223,1 @@\n-    private static final class P11ECPublicKey extends P11Key\n+    private static final class P11ECPublicKey extends P11PublicKey\n@@ -1073,5 +1227,3 @@\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private ECPoint w;\n-        @SuppressWarnings(\"serial\") \/\/ Type of field is not Serializable\n-        private ECParameterSpec params;\n-        private byte[] encoded;\n+        private transient ECPoint w;\n+        private transient ECParameterSpec params;\n+\n@@ -1079,2 +1231,2 @@\n-                int keyLength, CK_ATTRIBUTE[] attributes) {\n-            super(PUBLIC, session, keyID, algorithm, keyLength, attributes);\n+                int keyLength, CK_ATTRIBUTE[] attrs) {\n+            super(session, keyID, algorithm, keyLength, attrs);\n@@ -1082,0 +1234,1 @@\n+\n@@ -1084,4 +1237,3 @@\n-            if (w != null) {\n-                return;\n-            }\n-            CK_ATTRIBUTE[] attributes = new CK_ATTRIBUTE[] {\n+            if (w != null) return;\n+\n+            CK_ATTRIBUTE[] attrs = fetchAttributes(new CK_ATTRIBUTE[] {\n@@ -1090,2 +1242,1 @@\n-            };\n-            fetchAttributes(attributes);\n+            });\n@@ -1095,2 +1246,2 @@\n-                            (attributes[1].getByteArray());\n-                byte[] ecKey = attributes[0].getByteArray();\n+                            (attrs[1].getByteArray());\n+                byte[] ecKey = attrs[0].getByteArray();\n@@ -1118,0 +1269,1 @@\n+\n@@ -1122,0 +1274,1 @@\n+\n@@ -1420,0 +1573,1 @@\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":448,"deletions":294,"binary":false,"changes":742,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-        @SuppressWarnings(\"deprecation\")\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyStore.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-            fixedKeySize = (index == -1? -1 :\n+            fixedKeySize = (index == -1 ? -1 :\n@@ -183,1 +183,1 @@\n-        byte[] iv = (this.iv == null? type.defIv : this.iv);\n+        byte[] iv = (this.iv == null ? type.defIv : this.iv);\n@@ -216,1 +216,1 @@\n-        byte[] ivValue = (params == null? null :\n+        byte[] ivValue = (params == null ? null :\n@@ -288,1 +288,8 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n+        token.ensureValid();\n+\n+        if (P11Util.trySessionCancel(token, session,\n+                (opmode == Cipher.ENCRYPT_MODE ? CKF_ENCRYPT : CKF_DECRYPT))) {\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession as some\n@@ -382,1 +389,1 @@\n-        return (result > 0? result : 0);\n+        return (result > 0 ? result : 0);\n@@ -657,1 +664,1 @@\n-                tbwP11Key = (tbwKey instanceof SecretKey?\n+                tbwP11Key = (tbwKey instanceof SecretKey ?\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyWrapCipher.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -150,1 +150,6 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n+\n+        if (P11Util.trySessionCancel(token, session, CKF_SIGN)) {\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession as some\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Mac.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-        this.mdAlg = (idx == -1?\n+        this.mdAlg = (idx == -1 ?\n@@ -196,1 +196,1 @@\n-            this.md = (this.mdAlg == null? null :\n+            this.md = (this.mdAlg == null ? null :\n@@ -272,0 +272,1 @@\n+\n@@ -274,1 +275,7 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n+        if (P11Util.trySessionCancel(token, session,\n+                (mode == M_SIGN ? CKF_SIGN : CKF_VERIFY))) {\n+            if (DEBUG) System.out.println(\" by C_SessionCancel\");\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession call as some\n@@ -283,1 +290,1 @@\n-                        (md == null? new byte[0] : md.digest());\n+                        (md == null ? new byte[0] : md.digest());\n@@ -295,1 +302,1 @@\n-                        (md == null? new byte[0] : md.digest());\n+                        (md == null ? new byte[0] : md.digest());\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11PSSSignature.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.RV.*;\n@@ -269,1 +270,15 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n+\n+        long flags = switch(mode) {\n+            case MODE_ENCRYPT -> CKF_ENCRYPT;\n+            case MODE_DECRYPT -> CKF_DECRYPT;\n+            case MODE_SIGN -> CKF_SIGN;\n+            case MODE_VERIFY -> CKF_VERIFY;\n+            default -> {\n+                throw new AssertionError(\"Unexpected value: \" + mode);\n+            }\n+        };\n+        if (P11Util.trySessionCancel(token, session, flags)) {\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession as some\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11RSACipher.java","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -122,0 +122,3 @@\n+    \/\/ signature length expected or 0 for unknown\n+    private int sigLen;\n+\n@@ -283,1 +286,7 @@\n-        \/\/ cancel operation by finishing it; avoid killSession as some\n+\n+        if (P11Util.trySessionCancel(token, session,\n+                (mode == M_SIGN ? CKF_SIGN : CKF_VERIFY))) {\n+            return;\n+        }\n+\n+        \/\/ cancel by finishing operations; avoid killSession call as some\n@@ -288,1 +297,1 @@\n-                    token.p11.C_SignFinal(session.id(), 0);\n+                    token.p11.C_SignFinal(session.id(), sigLen);\n@@ -299,6 +308,1 @@\n-                byte[] signature;\n-                if (mechanism == CKM_DSA) {\n-                    signature = new byte[64]; \/\/ assume N = 256\n-                } else {\n-                    signature = new byte[(p11Key.length() + 7) >> 3];\n-                }\n+                byte[] signature = new byte[sigLen];\n@@ -320,3 +324,3 @@\n-                \/\/ call. If the operation inside the token was already cancelled,\n-                \/\/ do not fail here. This is part of a defensive mechanism for\n-                \/\/ PKCS#11 libraries that do not strictly follow the standard.\n+                \/\/ call. If the operation was already cancelled, do not fail\n+                \/\/ here. This is part of a defensive mechanism for PKCS#11\n+                \/\/ libraries that do not strictly follow the standard.\n@@ -375,0 +379,9 @@\n+        sigLen = 0;\n+        if (\"DSA\".equals(p11Key.getAlgorithm())) {\n+            if (p11Key instanceof P11Key.P11DSAPrivateKeyInternal) {\n+                sigLen = ((P11Key.P11DSAPrivateKeyInternal)p11Key).getParams()\n+                        .getQ().bitLength() >> 2;\n+            } else if (p11Key instanceof DSAKey) {\n+                sigLen = ((DSAKey)p11Key).getParams().getQ().bitLength() >> 2;\n+            }\n+        }\n@@ -620,1 +633,1 @@\n-                signature = token.p11.C_SignFinal(session.id(), 0);\n+                signature = token.p11.C_SignFinal(session.id(), sigLen);\n@@ -687,1 +700,1 @@\n-                    signature = asn1ToDSA(signature);\n+                    signature = asn1ToDSA(signature, sigLen);\n@@ -804,1 +817,2 @@\n-    private static byte[] asn1ToDSA(byte[] sig) throws SignatureException {\n+    private static byte[] asn1ToDSA(byte[] sig, int sigLen)\n+            throws SignatureException {\n@@ -819,2 +833,2 @@\n-            byte[] br = toByteArray(r, 20);\n-            byte[] bs = toByteArray(s, 20);\n+            byte[] br = toByteArray(r, sigLen\/2);\n+            byte[] bs = toByteArray(s, sigLen\/2);\n@@ -832,1 +846,1 @@\n-    private byte[] asn1ToECDSA(byte[] sig) throws SignatureException {\n+    private static byte[] asn1ToECDSA(byte[] sig) throws SignatureException {\n@@ -912,0 +926,1 @@\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Signature.java","additions":32,"deletions":17,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+import sun.security.pkcs11.wrapper.PKCS11Exception;\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.RV.*;\n+\n@@ -190,0 +193,18 @@\n+    \/\/ returns true if successfully cancelled\n+    static boolean trySessionCancel(Token token, Session session, long flags)\n+            throws ProviderException {\n+        if (token.p11.getVersion().major == 3) {\n+            try {\n+                token.p11.C_SessionCancel(session.id(), flags);\n+                return true;\n+            } catch (PKCS11Exception e) {\n+                \/\/ return false for CKR_OPERATION_CANCEL_FAILED, so callers\n+                \/\/ can cancel in the pre v3.0 way, i.e. by finishing off the\n+                \/\/ current operation\n+                if (!e.match(CKR_OPERATION_CANCEL_FAILED)) {\n+                    throw new ProviderException(\"cancel failed\", e);\n+                }\n+            }\n+        }\n+        return false;\n+    }\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Util.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-            System.out.println(\"SunPKCS11 loading \" + config.getFileName());\n+            debug.println(\"SunPKCS11 loading \" + config.getFileName());\n@@ -179,1 +179,0 @@\n-\n@@ -331,2 +330,1 @@\n-                tmpPKCS11 = PKCS11.getInstance(\n-                    library, functionList, initArgs,\n+                tmpPKCS11 = PKCS11.getInstance(library, functionList, initArgs,\n@@ -348,2 +346,2 @@\n-                tmpPKCS11 = PKCS11.getInstance(library,\n-                    functionList, initArgs, config.getOmitInitialize());\n+                tmpPKCS11 = PKCS11.getInstance(library, functionList, initArgs,\n+                    config.getOmitInitialize());\n@@ -353,2 +351,1 @@\n-            CK_INFO p11Info = p11.C_GetInfo();\n-            if (p11Info.cryptokiVersion.major < 2) {\n+            if (p11.getVersion().major < 2) {\n@@ -356,1 +353,1 @@\n-                + \"supported, library version is v\" + p11Info.cryptokiVersion);\n+                + \"supported, library version is v\" + p11.getVersion());\n@@ -360,0 +357,1 @@\n+                CK_INFO p11Info = p11.C_GetInfo();\n@@ -1485,1 +1483,0 @@\n-\n@@ -1490,1 +1487,0 @@\n-\n@@ -1506,0 +1502,1 @@\n+\n@@ -1525,1 +1522,0 @@\n-\n@@ -1529,1 +1525,0 @@\n-\n@@ -1532,0 +1527,1 @@\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-\n+    private final CK_VERSION version;\n@@ -144,0 +144,2 @@\n+     * @param functionList the method name for retrieving the PKCS#11\n+     *         function list; may be null if not set in config file\n@@ -147,1 +149,1 @@\n-    PKCS11(String pkcs11ModulePath, String functionListName)\n+    PKCS11(String pkcs11ModulePath, String functionList)\n@@ -149,1 +151,1 @@\n-        connect(pkcs11ModulePath, functionListName);\n+        this.version = connect(pkcs11ModulePath, functionList);\n@@ -151,0 +153,15 @@\n+        \/\/ bug in native PKCS#11 lib; workaround it by calling C_GetInfo()\n+        \/\/ and get cryptoki version from there\n+        if (this.version.major != 2 && this.version.major != 3) {\n+            try {\n+                CK_INFO p11Info = C_GetInfo();\n+                this.version.major = p11Info.cryptokiVersion.major;\n+                this.version.minor = p11Info.cryptokiVersion.minor;\n+            } catch (PKCS11Exception e) {\n+                \/\/ give up; just use what is returned by connect()\n+            }\n+        }\n+    }\n+\n+    public CK_VERSION getVersion() {\n+        return version;\n@@ -189,0 +206,3 @@\n+     * @param functionList the method name for retrieving the PKCS#11\n+     *         function list; may be null if not set in config file\n+     * @return the actual PKCS11 interface version\n@@ -192,2 +212,2 @@\n-    private native void connect(String pkcs11ModulePath, String functionListName)\n-            throws IOException;\n+    private native CK_VERSION connect(String pkcs11ModulePath,\n+            String functionList) throws IOException;\n@@ -466,0 +486,14 @@\n+    \/**\n+     * C_SessionCancel terminates active session based operations.\n+     * (Session management) (New in PKCS#11 v3.0)\n+     *\n+     * @param hSession the session's handle\n+     *         (PKCS#11 param: CK_SESSION_HANDLE hSession)\n+     * @param flags indicates the operations to cancel.\n+     *         (PKCS#11 param: CK_FLAGS flags)\n+     * @exception PKCS11Exception If function returns other value than CKR_OK.\n+     * @preconditions\n+     * @postconditions\n+     *\/\n+    public native void C_SessionCancel(long hSession, long flags)\n+            throws PKCS11Exception;\n@@ -524,0 +558,18 @@\n+    \/\/\/**\n+    \/\/ * C_LoginUser logs a user into a token. (New in PKCS#11 v3.0)\n+    \/\/ * (Session management)\n+    \/\/ *\n+    \/\/ * @param hSession the session's handle\n+    \/\/ *         (PKCS#11 param: CK_SESSION_HANDLE hSession)\n+    \/\/ * @param userType the user type\n+    \/\/ *         (PKCS#11 param: CK_USER_TYPE userType)\n+    \/\/ * @param pPin the user's PIN and the length of the PIN\n+    \/\/ *         (PKCS#11 param: CK_CHAR_PTR pPin, CK_ULONG ulPinLen)\n+    \/\/ * @param pUsername the user name and the length of the user name\n+    \/\/ *         (PKCS#11 param: CK_CHAR_PTR pUsername, CK_ULONG ulUsernameLen)\n+    \/\/ * @exception PKCS11Exception If function returns other value than CKR_OK.\n+    \/\/ * @preconditions\n+    \/\/ * @postconditions\n+    \/\/ *\/\n+    \/\/public native void C_LoginUser(long hSession, long userType, char[] pPin,\n+    \/\/        String pUsername) throws PKCS11Exception;\n@@ -810,1 +862,0 @@\n-\n@@ -905,2 +956,0 @@\n-\n-\n@@ -1618,1 +1667,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n@@ -1627,1 +1676,1 @@\n-    SynchronizedPKCS11(String pkcs11ModulePath, String functionListName)\n+    SynchronizedPKCS11(String pkcs11ModulePath, String functionList)\n@@ -1629,1 +1678,1 @@\n-        super(pkcs11ModulePath, functionListName);\n+        super(pkcs11ModulePath, functionList);\n@@ -1685,1 +1734,1 @@\n-    public synchronized void C_Login(long hSession, long userType, char[] pPin)\n+    public synchronized void C_SessionCancel(long hSession, long flags)\n@@ -1687,0 +1736,5 @@\n+        super.C_SessionCancel(hSession, flags);\n+    }\n+\n+    public synchronized void C_Login(long hSession, long userType,\n+            char[] pPin) throws PKCS11Exception {\n@@ -1690,0 +1744,6 @@\n+    \/\/public synchronized void C_LoginUser(long hSession, long userType,\n+    \/\/        char[] pPin, String pUsername)\n+    \/\/        throws PKCS11Exception {\n+    \/\/    super.C_LoginUser(hSession, userType, pPin, pUsername);\n+    \/\/}\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11.java","additions":72,"deletions":12,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -275,0 +275,27 @@\n+#ifdef P11_ENABLE_C_SESSIONCANCEL\n+\/*\n+ * Class:     sun_security_pkcs11_wrapper_PKCS11\n+ * Method:    C_SessionCancel\n+ * Signature: (JJ)V\n+ * Parametermapping:                    *PKCS11*\n+ * @param   jlong jSessionHandle        CK_SESSION_HANDLE hSession\n+ * @param   jlong jFlags                CK_FLAGS flags\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_C_1SessionCancel\n+    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jFlags)\n+{\n+    CK_SESSION_HANDLE ckSessionHandle;\n+    CK_RV rv;\n+\n+    CK_FUNCTION_LIST_3_0_PTR ckpFunctions30 = getFunctionList30(env, obj);\n+    if (ckpFunctions30 == NULL) { return; }\n+\n+    ckSessionHandle = jLongToCKULong(jSessionHandle);\n+\n+    rv = (*ckpFunctions30->C_SessionCancel)(ckSessionHandle,\n+            jLongToCKULong(jFlags));\n+\n+    ckAssertReturnValueOK(env, rv);\n+}\n+#endif\n+\n@@ -354,1 +381,1 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+    ckAssertReturnValueOK(env, rv);\n@@ -370,1 +397,2 @@\n-    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jUserType, jcharArray jPin)\n+    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jUserType,\n+     jcharArray jPin)\n@@ -377,0 +405,1 @@\n+    CK_FUNCTION_LIST_PTR ckpFunctions;\n@@ -378,2 +407,5 @@\n-    CK_FUNCTION_LIST_PTR ckpFunctions = getFunctionList(env, obj);\n-    if (ckpFunctions == NULL) { return; }\n+    ckpFunctions = getFunctionList(env, obj);\n+\n+    if (ckpFunctions == NULL) {\n+        return;\n+    }\n@@ -386,1 +418,49 @@\n-    rv = (*ckpFunctions->C_Login)(ckSessionHandle, ckUserType, ckpPinArray, ckPinLength);\n+    rv = (*ckpFunctions->C_Login)(ckSessionHandle, ckUserType, ckpPinArray,\n+            ckPinLength);\n+    free(ckpPinArray);\n+\n+    ckAssertReturnValueOK(env, rv);\n+}\n+#endif\n+\n+#ifdef P11_ENABLE_C_LOGINUSER\n+\/*\n+ * Class:     sun_security_pkcs11_wrapper_PKCS11\n+ * Method:    C_LoginUser\n+ * Signature: (JJ[C;Ljava\/lang\/String;)V\n+ * Parametermapping:                    *PKCS11*\n+ * @param   jlong jSessionHandle        CK_SESSION_HANDLE hSession\n+ * @param   jlong jUserType             CK_USER_TYPE userType\n+ * @param   jcharArray jPin             CK_CHAR_PTR pPin\n+ *                                      CK_ULONG ulPinLen\n+ * @param   jstring jUsername           CK_CHAR_PTR pUsername\n+ *                                      CK_ULONG ulUsernameLen\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_C_1LoginUser\n+    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jUserType,\n+     jcharArray jPin, jstring jUsername)\n+{\n+    CK_SESSION_HANDLE ckSessionHandle;\n+    CK_USER_TYPE ckUserType;\n+    CK_CHAR_PTR ckpPinArray = NULL_PTR;\n+    CK_ULONG ckPinLength;\n+    CK_CHAR_PTR ckpUsername = NULL_PTR;\n+    CK_ULONG ckUsernameLength;\n+    CK_RV rv;\n+    CK_FUNCTION_LIST_3_0_PTR ckpFunctions30;\n+\n+    ckpFunctions30 = getFunctionList30(env, obj);\n+\n+    ckSessionHandle = jLongToCKULong(jSessionHandle);\n+    ckUserType = jLongToCKULong(jUserType);\n+    jCharArrayToCKCharArray(env, jPin, &ckpPinArray, &ckPinLength);\n+    if ((*env)->ExceptionCheck(env)) { return; }\n+    jStringToCKUTF8CharArray(env, jUsername, &ckpUsername,\n+            &ckUsernameLength);\n+    if ((*env)->ExceptionCheck(env)) { return; }\n+\n+    if (ckpFunctions30 == NULL) {\n+        return;\n+    }\n+    rv = (*ckpFunctions30->C_LoginUser)(ckSessionHandle, ckUserType,\n+            ckpPinArray, ckPinLength, ckpUsername, ckUsernameLength);\n@@ -389,0 +469,1 @@\n+    free(ckpUsername);\n@@ -390,1 +471,1 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+    ckAssertReturnValueOK(env, rv);\n@@ -392,0 +473,1 @@\n+\n@@ -414,1 +496,1 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+    ckAssertReturnValueOK(env, rv);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_sessmgmt.c","additions":90,"deletions":8,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -139,0 +139,14 @@\n+CK_FUNCTION_LIST_3_0_PTR getFunctionList30(JNIEnv *env, jobject\n+        pkcs11Implementation) {\n+    ModuleData *moduleData;\n+    CK_FUNCTION_LIST_3_0_PTR ckpFunctions30;\n+\n+    moduleData = getModuleEntry(env, pkcs11Implementation);\n+    if (moduleData == NULL) {\n+        throwDisconnectedRuntimeException(env);\n+        return NULL;\n+    }\n+    ckpFunctions30 = moduleData->ckFunctionList30Ptr;\n+    return ckpFunctions30;\n+}\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_util.c","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -103,0 +103,1 @@\n+#define P11_ENABLE_C_SESSIONCANCEL\n@@ -106,0 +107,1 @@\n+\/\/#define P11_ENABLE_C_LOGINUSER\n@@ -212,0 +214,2 @@\n+\/\/#define TRACE3d(s, p1, p2, p3) { printf(s, p1, p2, p3); fflush(stdout); }\n+\/\/#define TRACE4d(s, p1, p2, p3, p4) { printf(s, p1, p2, p3, p4); fflush(stdout); }\n@@ -218,0 +222,1 @@\n+#define TRACE4(s, p1, p2, p3, p4) { printf(s, p1, p2, p3, p4); fflush(stdout); }\n@@ -223,0 +228,1 @@\n+#define TRACE4(s, p1, p2, p3, p4)\n@@ -415,0 +421,2 @@\n+CK_FUNCTION_LIST_3_0_PTR getFunctionList30(JNIEnv *env, jobject\n+        pkcs11Implementation);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11wrapper.h","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n- * Signature: (Ljava\/lang\/String;)V\n+ * Signature: (Ljava\/lang\/String;)Lsun\/security\/pkcs11\/wrapper\/CK_VERSION;\n@@ -77,3 +77,4 @@\n-JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_connect\n-    (JNIEnv *env, jobject obj, jstring jPkcs11ModulePath, jstring jGetFunctionList)\n-{\n+JNIEXPORT jobject JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_connect\n+    (JNIEnv *env, jobject obj, jstring jPkcs11ModulePath,\n+    jstring jGetFunctionList) {\n+\n@@ -82,1 +83,7 @@\n-    CK_C_GetFunctionList C_GetFunctionList=NULL;\n+    int i;\n+    CK_ULONG ulCount = 0;\n+    CK_C_GetInterfaceList C_GetInterfaceList = NULL;\n+    CK_INTERFACE_PTR iList = NULL;\n+    CK_C_GetInterface C_GetInterface = NULL;\n+    CK_INTERFACE_PTR interface = NULL;\n+    CK_C_GetFunctionList C_GetFunctionList = NULL;\n@@ -84,1 +91,1 @@\n-    ModuleData *moduleData;\n+    ModuleData *moduleData = NULL;\n@@ -88,1 +95,1 @@\n-    const char *getFunctionListStr;\n+    const char *getFunctionListStr = NULL;\n@@ -90,1 +97,2 @@\n-    const char *libraryNameStr = (*env)->GetStringUTFChars(env, jPkcs11ModulePath, 0);\n+    const char *libraryNameStr = (*env)->GetStringUTFChars(env,\n+            jPkcs11ModulePath, 0);\n@@ -92,1 +100,1 @@\n-        return;\n+        return NULL;\n@@ -94,1 +102,1 @@\n-    TRACE1(\"DEBUG: connect to PKCS#11 module: %s ... \", libraryNameStr);\n+    TRACE1(\"Connect: connect to PKCS#11 module: %s ... \", libraryNameStr);\n@@ -111,2 +119,1 @@\n-            (*env)->ReleaseStringUTFChars(env, jPkcs11ModulePath, libraryNameStr);\n-            return;\n+            goto cleanup;\n@@ -117,1 +124,0 @@\n-        (*env)->ReleaseStringUTFChars(env, jPkcs11ModulePath, libraryNameStr);\n@@ -119,1 +125,1 @@\n-        return;\n+        goto cleanup;\n@@ -121,1 +127,0 @@\n-    (*env)->ReleaseStringUTFChars(env, jPkcs11ModulePath, libraryNameStr);\n@@ -123,5 +128,34 @@\n-    \/*\n-     * Get function pointer to C_GetFunctionList\n-     *\/\n-    dlerror(); \/* clear any old error message not fetched *\/\n-    \/\/ with the old JAR file jGetFunctionList is null, temporarily check for that\n+    \/\/ clear any old error message not fetched\n+    dlerror();\n+\n+#ifdef DEBUG\n+    C_GetInterfaceList = (CK_C_GetInterfaceList) dlsym(hModule,\n+            \"C_GetInterfaceList\");\n+    if (C_GetInterfaceList != NULL) {\n+        TRACE0(\"Connect: Found C_GetInterfaceList func\\n\");\n+        rv = (C_GetInterfaceList)(NULL, &ulCount);\n+        if (rv == CKR_OK) {\n+            TRACE1(\"Connect: interface list size %ld \\n\", ulCount);\n+            \/\/ retrieve available interfaces and report their info\n+            iList = (CK_INTERFACE_PTR)\n+                malloc(ulCount*sizeof(CK_INTERFACE));\n+            rv = C_GetInterfaceList(iList, &ulCount);\n+            if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) {\n+                TRACE0(\"Connect: error polling interface list\\n\");\n+                goto cleanup;\n+            }\n+            for (i=0; i < (int)ulCount; i++) {\n+                TRACE4(\"Connect: name %s, version %d.%d, flags 0x%lX\\n\",\n+                        iList[i].pInterfaceName,\n+                        ((CK_VERSION *)iList[i].pFunctionList)->major,\n+                        ((CK_VERSION *)iList[i].pFunctionList)->minor,\n+                        iList[i].flags);\n+            }\n+        } else {\n+            TRACE0(\"Connect: error polling interface list size\\n\");\n+        }\n+    } else {\n+        TRACE0(\"Connect: No C_GetInterfaceList func\\n\");\n+    }\n+#endif\n+\n@@ -129,1 +163,2 @@\n-        getFunctionListStr = (*env)->GetStringUTFChars(env, jGetFunctionList, 0);\n+        getFunctionListStr = (*env)->GetStringUTFChars(env,\n+            jGetFunctionList, 0);\n@@ -131,1 +166,1 @@\n-            return;\n+            goto cleanup;\n@@ -133,9 +168,34 @@\n-        C_GetFunctionList = (CK_C_GetFunctionList) dlsym(hModule, getFunctionListStr);\n-        (*env)->ReleaseStringUTFChars(env, jGetFunctionList, getFunctionListStr);\n-    }\n-    if (C_GetFunctionList == NULL) {\n-        throwIOException(env, \"ERROR: C_GetFunctionList == NULL\");\n-        return;\n-    } else if ( (systemErrorMessage = dlerror()) != NULL ){\n-        throwIOException(env, systemErrorMessage);\n-        return;\n+        C_GetFunctionList = (CK_C_GetFunctionList) dlsym(hModule,\n+            getFunctionListStr);\n+        if ((systemErrorMessage = dlerror()) != NULL){\n+            throwIOException(env, systemErrorMessage);\n+            goto cleanup;\n+        }\n+        if (C_GetFunctionList == NULL) {\n+            TRACE1(\"Connect: No %s func\\n\", getFunctionListStr);\n+            throwIOException(env, \"ERROR: C_GetFunctionList == NULL\");\n+            goto cleanup;\n+        }\n+        TRACE1(\"Connect: Found %s func\\n\", getFunctionListStr);\n+    } else {\n+        \/\/ if none specified, then we try 3.0 API first before trying 2.40\n+        C_GetInterface = (CK_C_GetInterface) dlsym(hModule, \"C_GetInterface\");\n+        if ((C_GetInterface != NULL) && (dlerror() == NULL)) {\n+            TRACE0(\"Connect: Found C_GetInterface func\\n\");\n+            rv = (C_GetInterface)(NULL, NULL, &interface, 0L);\n+            if (ckAssertReturnValueOK(env, rv) == CK_ASSERT_OK) {\n+                goto setModuleData;\n+            }\n+        }\n+        C_GetFunctionList = (CK_C_GetFunctionList) dlsym(hModule,\n+                \"C_GetFunctionList\");\n+        if ((systemErrorMessage = dlerror()) != NULL){\n+            throwIOException(env, systemErrorMessage);\n+            goto cleanup;\n+        }\n+        if (C_GetFunctionList == NULL) {\n+            TRACE0(\"Connect: No C_GetFunctionList func\\n\");\n+            throwIOException(env, \"ERROR: C_GetFunctionList == NULL\");\n+            goto cleanup;\n+        }\n+        TRACE0(\"Connect: Found C_GetFunctionList func\\n\");\n@@ -144,0 +204,1 @@\n+setModuleData:\n@@ -151,1 +212,1 @@\n-        return;\n+        goto cleanup;\n@@ -155,1 +216,25 @@\n-    rv = (C_GetFunctionList)(&(moduleData->ckFunctionListPtr));\n+    if (C_GetFunctionList != NULL) {\n+        rv = (C_GetFunctionList)(&(moduleData->ckFunctionListPtr));\n+        if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) {\n+            goto cleanup;\n+        }\n+    } else if (interface != NULL) {\n+        moduleData->ckFunctionListPtr = interface->pFunctionList;\n+        if (((CK_VERSION *)moduleData->ckFunctionListPtr)->major == 3) {\n+            moduleData->ckFunctionList30Ptr = interface->pFunctionList;\n+        }\n+    } else {\n+        \/\/ should never happen\n+        throwIOException(env, \"ERROR: No function list ptr found\");\n+        goto cleanup;\n+    }\n+    if (((CK_VERSION *)moduleData->ckFunctionListPtr)->major == 3) {\n+        moduleData->ckFunctionList30Ptr = interface->pFunctionList;\n+    } else {\n+        moduleData->ckFunctionList30Ptr = NULL;\n+    }\n+\n+    TRACE2(\"Connect: FunctionListPtr version = %d.%d\\n\",\n+        ((CK_VERSION *)moduleData->ckFunctionListPtr)->major,\n+        ((CK_VERSION *)moduleData->ckFunctionListPtr)->minor);\n+\n@@ -159,3 +244,15 @@\n-    TRACE0(\"FINISHED\\n\");\n-\n-    if(ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+cleanup:\n+    if (jPkcs11ModulePath != NULL && libraryNameStr != NULL) {\n+        (*env)->ReleaseStringUTFChars(env, jPkcs11ModulePath, libraryNameStr);\n+    }\n+    if (jGetFunctionList != NULL && getFunctionListStr != NULL) {\n+        (*env)->ReleaseStringUTFChars(env, jGetFunctionList,\n+        getFunctionListStr);\n+    }\n+    TRACE0(\"Connect: FINISHED\\n\");\n+    if (moduleData != NULL) {\n+        return ckVersionPtrToJVersion(env,\n+                (CK_VERSION *)moduleData->ckFunctionListPtr);\n+    } else {\n+        return NULL;\n+    }\n@@ -164,0 +261,1 @@\n+\n","filename":"src\/jdk.crypto.cryptoki\/unix\/native\/libj2pkcs11\/p11_md.c","additions":135,"deletions":37,"binary":false,"changes":172,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-    \/* The pointer to the PKCS#11 functions of this module. *\/\n+    \/* The pointers to the PKCS#11 functions of this module. *\/\n@@ -88,0 +88,1 @@\n+    CK_FUNCTION_LIST_3_0_PTR ckFunctionList30Ptr;\n","filename":"src\/jdk.crypto.cryptoki\/unix\/native\/libj2pkcs11\/p11_md.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n- * Signature: (Ljava\/lang\/String;)V\n+ * Signature: (Ljava\/lang\/String;)Lsun\/security\/pkcs11\/wrapper\/CK_VERSION;\n@@ -77,1 +77,1 @@\n-JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_connect\n+JNIEXPORT jobject JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_connect\n@@ -79,1 +79,1 @@\n-        jstring jGetFunctionList)\n+    jstring jGetFunctionList)\n@@ -82,1 +82,7 @@\n-    CK_C_GetFunctionList C_GetFunctionList;\n+    int i = 0;\n+    CK_ULONG ulCount = 0;\n+    CK_C_GetInterfaceList C_GetInterfaceList = NULL;\n+    CK_INTERFACE_PTR iList = NULL;\n+    CK_C_GetInterface C_GetInterface = NULL;\n+    CK_INTERFACE_PTR interface = NULL;\n+    CK_C_GetFunctionList C_GetFunctionList = NULL;\n@@ -84,1 +90,1 @@\n-    ModuleData *moduleData;\n+    ModuleData *moduleData = NULL;\n@@ -94,4 +100,3 @@\n-\n-  \/*\n-   * Load the PKCS #11 DLL\n-   *\/\n+    \/*\n+     * Load the PKCS #11 DLL\n+     *\/\n@@ -123,0 +128,1 @@\n+#ifdef DEBUG\n@@ -124,1 +130,1 @@\n-     * Get function pointer to C_GetFunctionList\n+     * Get function pointer to C_GetInterfaceList\n@@ -126,18 +132,80 @@\n-    getFunctionListStr = (*env)->GetStringUTFChars(env, jGetFunctionList, 0);\n-    C_GetFunctionList = (CK_C_GetFunctionList) GetProcAddress(hModule,\n-            getFunctionListStr);\n-    (*env)->ReleaseStringUTFChars(env, jGetFunctionList, getFunctionListStr);\n-    if (C_GetFunctionList == NULL) {\n-        FormatMessage(\n-            FORMAT_MESSAGE_ALLOCATE_BUFFER |\n-            FORMAT_MESSAGE_FROM_SYSTEM |\n-            FORMAT_MESSAGE_IGNORE_INSERTS,\n-            NULL,\n-            GetLastError(),\n-            0, \/* Default language *\/\n-            (LPTSTR) &lpMsgBuf,\n-            0,\n-            NULL\n-        );\n-        throwIOException(env, (LPTSTR) lpMsgBuf);\n-        goto cleanup;\n+    C_GetInterfaceList = (CK_C_GetInterfaceList) GetProcAddress(hModule,\n+            \"C_GetInterfaceList\");\n+    if (C_GetInterfaceList != NULL) {\n+        TRACE0(\"Found C_GetInterfaceList func\\n\");\n+        rv = (C_GetInterfaceList)(NULL, &ulCount);\n+        if (rv == CKR_OK) {\n+            \/* get copy of interfaces *\/\n+            iList = (CK_INTERFACE_PTR)\n+                    malloc(ulCount*sizeof(CK_INTERFACE));\n+            rv = C_GetInterfaceList(iList, &ulCount);\n+            for (i=0; i < (int)ulCount; i++) {\n+                printf(\"interface %s version %d.%d funcs %p flags 0x%lu\\n\",\n+                        iList[i].pInterfaceName,\n+                        ((CK_VERSION *)iList[i].pFunctionList)->major,\n+                        ((CK_VERSION *)iList[i].pFunctionList)->minor,\n+                        iList[i].pFunctionList, iList[i].flags);\n+            }\n+        } else {\n+            TRACE0(\"Connect: error polling interface list size\\n\");\n+        }\n+    } else {\n+        TRACE0(\"Connect: No C_GetInterfaceList func\\n\");\n+    }\n+#endif\n+\n+    if (jGetFunctionList != NULL) {\n+        getFunctionListStr = (*env)->GetStringUTFChars(env,\n+                jGetFunctionList, 0);\n+        if (getFunctionListStr == NULL) {\n+            goto cleanup;\n+        }\n+        C_GetFunctionList = (CK_C_GetFunctionList) GetProcAddress(hModule,\n+                getFunctionListStr);\n+        if (C_GetFunctionList == NULL) {\n+            TRACE1(\"Connect: No %s func\\n\", getFunctionListStr);\n+            FormatMessage(\n+                FORMAT_MESSAGE_ALLOCATE_BUFFER |\n+                FORMAT_MESSAGE_FROM_SYSTEM |\n+                FORMAT_MESSAGE_IGNORE_INSERTS,\n+                NULL,\n+                GetLastError(),\n+                0, \/* Default language *\/\n+                (LPTSTR) &lpMsgBuf,\n+                0,\n+                NULL\n+            );\n+            throwIOException(env, (LPTSTR) lpMsgBuf);\n+            goto cleanup;\n+        }\n+        TRACE1(\"Connect: Found %s func\\n\", getFunctionListStr);\n+    } else {\n+        \/\/ if none specified, then we try 3.0 API first before trying 2.40\n+        C_GetInterface = (CK_C_GetInterface) GetProcAddress(hModule,\n+            \"C_GetInterface\");\n+        if (C_GetInterface != NULL) {\n+            TRACE0(\"Connect: Found C_GetInterface func\\n\");\n+            rv = (C_GetInterface)(NULL, NULL, &interface, 0);\n+            if (ckAssertReturnValueOK(env, rv) == CK_ASSERT_OK) {\n+                goto setModuleData;\n+            }\n+        }\n+        C_GetFunctionList = (CK_C_GetFunctionList) GetProcAddress(hModule,\n+                \"C_GetFunctionList\");\n+        if (C_GetFunctionList == NULL) {\n+            TRACE0(\"Connect: No C_GetFunctionList func\\n\");\n+            FormatMessage(\n+                FORMAT_MESSAGE_ALLOCATE_BUFFER |\n+                FORMAT_MESSAGE_FROM_SYSTEM |\n+                FORMAT_MESSAGE_IGNORE_INSERTS,\n+                NULL,\n+                GetLastError(),\n+                0, \/* Default language *\/\n+                (LPTSTR) &lpMsgBuf,\n+                0,\n+                NULL\n+            );\n+            throwIOException(env, (LPTSTR) lpMsgBuf);\n+            goto cleanup;\n+        }\n+        TRACE0(\"Connect: Found C_GetFunctionList func\\n\");\n@@ -146,0 +214,1 @@\n+setModuleData:\n@@ -156,1 +225,22 @@\n-    rv = (C_GetFunctionList)(&(moduleData->ckFunctionListPtr));\n+    if (C_GetFunctionList != NULL) {\n+        rv = (C_GetFunctionList)(&(moduleData->ckFunctionListPtr));\n+        if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) {\n+            goto cleanup;\n+        }\n+    } else if (interface != NULL) {\n+        moduleData->ckFunctionListPtr = interface->pFunctionList;\n+    } else {\n+        \/\/ should never happen\n+        throwIOException(env, \"ERROR: No function list ptr found\");\n+        goto cleanup;\n+    }\n+    if (((CK_VERSION *)moduleData->ckFunctionListPtr)->major == 3) {\n+        moduleData->ckFunctionList30Ptr = interface->pFunctionList;\n+    } else {\n+        moduleData->ckFunctionList30Ptr = NULL;\n+    }\n+\n+    TRACE2(\"Connect: FunctionListPtr version = %d.%d\\n\",\n+        ((CK_VERSION *)moduleData->ckFunctionListPtr)->major,\n+        ((CK_VERSION *)moduleData->ckFunctionListPtr)->minor);\n+\n@@ -160,2 +250,0 @@\n-    TRACE0(\"FINISHED\\n\");\n-\n@@ -170,0 +258,4 @@\n+    if (jGetFunctionList != NULL && getFunctionListStr != NULL) {\n+        (*env)->ReleaseStringUTFChars(env, jGetFunctionList,\n+            getFunctionListStr);\n+    }\n@@ -173,0 +265,7 @@\n+    TRACE0(\"Connect: FINISHED\\n\");\n+    if (moduleData != NULL) {\n+        return ckVersionPtrToJVersion(env,\n+                (CK_VERSION *)moduleData->ckFunctionListPtr);\n+    } else {\n+        return NULL;\n+    }\n@@ -174,1 +273,0 @@\n-    if(ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n","filename":"src\/jdk.crypto.cryptoki\/windows\/native\/libj2pkcs11\/p11_md.c","additions":131,"deletions":33,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-    \/* The pointer to the PKCS#11 functions of this module. *\/\n+    \/* The pointers to the PKCS#11 functions of this module. *\/\n@@ -98,0 +98,1 @@\n+    CK_FUNCTION_LIST_3_0_PTR ckFunctionList30Ptr;\n","filename":"src\/jdk.crypto.cryptoki\/windows\/native\/libj2pkcs11\/p11_md.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        @SuppressWarnings(\"deprecation\")\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.crypto.mscapi\/windows\/classes\/sun\/security\/mscapi\/CKey.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,5 +31,0 @@\n- *\n- * <p><b> This is NOT part of any supported API.\n- * If you write code that depends on this, you do so at your own risk.\n- * This code and its internal interface are subject to change or deletion\n- * without notice.<\/b>\n@@ -54,0 +49,5 @@\n+     * <p> If the system property \"sun.net.httpserver.maxReqTime\" has not been\n+     * set by the user, it is set to a value of 5 seconds. This is to prevent\n+     * the server from hanging indefinitely, for example in the case of an HTTPS\n+     * request.\n+     *\n@@ -59,0 +59,2 @@\n+        setMaxReqTime();\n+\n@@ -66,0 +68,9 @@\n+\n+    public static final String MAXREQTIME_KEY = \"sun.net.httpserver.maxReqTime\";\n+    public static final String MAXREQTIME_VAL = \"5\";\n+\n+    private static void setMaxReqTime() {\n+        if (System.getProperty(MAXREQTIME_KEY) == null) {\n+            System.setProperty(MAXREQTIME_KEY, MAXREQTIME_VAL);\n+        }\n+    }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/JWebServer.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,5 +31,0 @@\n- *\n- * <p><b> This is NOT part of any supported API.\n- * If you write code that depends on this, you do so at your own risk.\n- * This code and its internal interface are subject to change or deletion\n- * without notice.<\/b>\n@@ -54,0 +49,5 @@\n+     * <p> If the system property \"sun.net.httpserver.maxReqTime\" has not been\n+     * set by the user, it is set to a value of 5 seconds. This is to prevent\n+     * the server from hanging indefinitely, for example in the case of an HTTPS\n+     * request.\n+     *\n@@ -59,0 +59,2 @@\n+        setMaxReqTime();\n+\n@@ -66,0 +68,9 @@\n+\n+    public static final String MAXREQTIME_KEY = \"sun.net.httpserver.maxReqTime\";\n+    public static final String MAXREQTIME_VAL = \"5\";\n+\n+    private static void setMaxReqTime() {\n+        if (System.getProperty(MAXREQTIME_KEY) == null) {\n+            System.setProperty(MAXREQTIME_KEY, MAXREQTIME_VAL);\n+        }\n+    }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/Main.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,2 @@\n- *  MemoryAddress address = ...\n- *  int value = address.get(ValueLayout.JAVA_INT, 0);\n+ * MemoryAddress address = ...\n+ * int value = address.get(ValueLayout.JAVA_INT, 0);\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -654,0 +654,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1055,0 +1056,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1089,0 +1091,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1123,0 +1126,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1157,0 +1161,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1191,0 +1196,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1225,0 +1231,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1259,0 +1266,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1293,0 +1301,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1327,0 +1336,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1361,0 +1371,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1395,0 +1406,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1429,0 +1441,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1463,0 +1476,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1497,0 +1511,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1531,0 +1546,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n@@ -1565,0 +1581,1 @@\n+     * @throws UnsupportedOperationException if this segment is {@linkplain #isReadOnly() read-only}.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -220,0 +220,5 @@\n+\n+        @Override\n+        public boolean isAlive() {\n+            return true;\n+        }\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ResourceScopeImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -710,1 +710,1 @@\n-        long mask = -1L >>> sizeChange;\n+        long mask = -1L >>> -dsp.elementSize();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,3 +760,3 @@\n-            return VectorSupport.broadcastCoerced(Byte128Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte128Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -792,3 +792,3 @@\n-            return VectorSupport.broadcastCoerced(Byte256Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte256Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -856,3 +856,3 @@\n-            return VectorSupport.broadcastCoerced(Byte512Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte512Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -744,3 +744,3 @@\n-            return VectorSupport.broadcastCoerced(Byte64Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte64Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -730,3 +730,3 @@\n-            return VectorSupport.broadcastCoerced(ByteMaxMask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(ByteMaxMask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), byte.class, species.length(),\n-                                0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), byte.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -4152,1 +4152,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -4154,1 +4154,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -721,3 +721,3 @@\n-            return VectorSupport.broadcastCoerced(Double128Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double128Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -725,3 +725,3 @@\n-            return VectorSupport.broadcastCoerced(Double256Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double256Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -733,3 +733,3 @@\n-            return VectorSupport.broadcastCoerced(Double512Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double512Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -719,3 +719,3 @@\n-            return VectorSupport.broadcastCoerced(Double64Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double64Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -718,3 +718,3 @@\n-            return VectorSupport.broadcastCoerced(DoubleMaxMask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(DoubleMaxMask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -447,2 +447,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), double.class, species.length(),\n-                        toBits(0.0f), vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), double.class, species.length(),\n+                        toBits(0.0f), MODE_BROADCAST, vsp,\n@@ -3757,1 +3757,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3759,1 +3759,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -725,3 +725,3 @@\n-            return VectorSupport.broadcastCoerced(Float128Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float128Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -733,3 +733,3 @@\n-            return VectorSupport.broadcastCoerced(Float256Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float256Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -749,3 +749,3 @@\n-            return VectorSupport.broadcastCoerced(Float512Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float512Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -721,3 +721,3 @@\n-            return VectorSupport.broadcastCoerced(Float64Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float64Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -718,3 +718,3 @@\n-            return VectorSupport.broadcastCoerced(FloatMaxMask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(FloatMaxMask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -447,2 +447,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), float.class, species.length(),\n-                        toBits(0.0f), vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), float.class, species.length(),\n+                        toBits(0.0f), MODE_BROADCAST, vsp,\n@@ -3707,1 +3707,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3709,1 +3709,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -736,3 +736,3 @@\n-            return VectorSupport.broadcastCoerced(Int128Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int128Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -744,3 +744,3 @@\n-            return VectorSupport.broadcastCoerced(Int256Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int256Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -760,3 +760,3 @@\n-            return VectorSupport.broadcastCoerced(Int512Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int512Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -732,3 +732,3 @@\n-            return VectorSupport.broadcastCoerced(Int64Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int64Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -730,3 +730,3 @@\n-            return VectorSupport.broadcastCoerced(IntMaxMask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(IntMaxMask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), int.class, species.length(),\n-                                0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), int.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -3877,1 +3877,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3879,1 +3879,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -722,3 +722,3 @@\n-            return VectorSupport.broadcastCoerced(Long128Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long128Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -726,3 +726,3 @@\n-            return VectorSupport.broadcastCoerced(Long256Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long256Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -734,3 +734,3 @@\n-            return VectorSupport.broadcastCoerced(Long512Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long512Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -720,3 +720,3 @@\n-            return VectorSupport.broadcastCoerced(Long64Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long64Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -720,3 +720,3 @@\n-            return VectorSupport.broadcastCoerced(LongMaxMask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(LongMaxMask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), long.class, species.length(),\n-                                0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), long.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -3812,1 +3812,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3814,1 +3814,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -744,3 +744,3 @@\n-            return VectorSupport.broadcastCoerced(Short128Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short128Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -760,3 +760,3 @@\n-            return VectorSupport.broadcastCoerced(Short256Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short256Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -792,3 +792,3 @@\n-            return VectorSupport.broadcastCoerced(Short512Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short512Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -736,3 +736,3 @@\n-            return VectorSupport.broadcastCoerced(Short64Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short64Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -730,3 +730,3 @@\n-            return VectorSupport.broadcastCoerced(ShortMaxMask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(ShortMaxMask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), short.class, species.length(),\n-                                0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), short.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -4146,1 +4146,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -4148,1 +4148,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -240,20 +240,19 @@\n-        AbstractSpecies<E> vspecies = (AbstractSpecies<E>) species;\n-        int laneCount = vspecies.laneCount();\n-        if (laneCount < Long.SIZE) {\n-            int extraSignBits = Long.SIZE - laneCount;\n-            bits <<= extraSignBits;\n-            bits >>= extraSignBits;\n-        }\n-        if (bits == (bits >> 1)) {\n-            \/\/ Special case.\n-            assert(bits == 0 || bits == -1);\n-            return vspecies.maskAll(bits != 0);\n-        }\n-        \/\/ FIXME: Intrinsify this.\n-        long shifted = bits;\n-        boolean[] a = new boolean[laneCount];\n-        for (int i = 0; i < a.length; i++) {\n-            a[i] = ((shifted & 1) != 0);\n-            shifted >>= 1;  \/\/ replicate sign bit\n-        }\n-        return fromValues(vspecies, a);\n+        AbstractSpecies<E> vsp = (AbstractSpecies<E>) species;\n+        bits = bits & (0xFFFFFFFFFFFFFFFFL >>> (64 - vsp.laneCount()));\n+        return VectorSupport.fromBitsCoerced(vsp.maskType(), vsp.elementType(), vsp.laneCount(), bits,\n+                                             VectorSupport.MODE_BITS_COERCED_LONG_TO_MASK, vsp,\n+                                             (m, s) -> {\n+                                                 if (m == (m >> 1)) {\n+                                                     \/\/ Special case.\n+                                                     assert(m == 0 || m == -1);\n+                                                     return s.maskAll(m != 0);\n+                                                 }\n+\n+                                                 long shifted = m;\n+                                                 boolean[] a = new boolean[s.laneCount()];\n+                                                 for (int i = 0; i < a.length; i++) {\n+                                                     a[i] = ((shifted & 1) != 0);\n+                                                     shifted >>= 1;  \/\/ replicate sign bit\n+                                                 }\n+                                                 return fromValues(s, a);\n+                                              });\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorMask.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -473,2 +473,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), $type$.class, species.length(),\n-                        toBits(0.0f), vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), $type$.class, species.length(),\n+                        toBits(0.0f), MODE_BROADCAST, vsp,\n@@ -477,2 +477,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), $type$.class, species.length(),\n-                                0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), $type$.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -5330,1 +5330,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -5332,1 +5332,1 @@\n-                    bits, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1003,3 +1003,3 @@\n-            return VectorSupport.broadcastCoerced($masktype$.class, $bitstype$.class, VLENGTH,\n-                                                  (bit ? -1 : 0), null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced($masktype$.class, $bitstype$.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,3 @@\n- * <pre>\n- *    public boolean <b>run<\/b>(DocletEnvironment environment)\n- * <\/pre>\n+ * {@snippet id=\"entry-point\" lang=java :\n+ *    public boolean run(DocletEnvironment environment) \/\/ @highlight substring=\"run\"\n+ * }\n@@ -188,2 +188,22 @@\n- * <pre>\n- * \/\/ note imports deleted for clarity\n+ *\n+ * {@snippet lang=java id=\"Example.java\" :\n+ * \/\/ @replace region=imports replacement=\" \/\/ Note: imports deleted for clarity\"\n+ * import com.sun.source.doctree.DocCommentTree;\n+ * import com.sun.source.util.DocTrees;\n+ * import jdk.javadoc.doclet.Doclet;\n+ * import jdk.javadoc.doclet.DocletEnvironment;\n+ * import jdk.javadoc.doclet.Reporter;\n+ *\n+ * import javax.lang.model.SourceVersion;\n+ * import javax.lang.model.element.Element;\n+ * import javax.lang.model.element.TypeElement;\n+ * import javax.lang.model.util.ElementFilter;\n+ * import javax.tools.Diagnostic.Kind;\n+ * import java.io.IOException;\n+ * import java.io.PrintWriter;\n+ * import java.util.List;\n+ * import java.util.Locale;\n+ * import java.util.Set;\n+ * \/\/ @end\n+ *\n+ *\n@@ -191,101 +211,107 @@\n- *    Reporter reporter;\n- *    &#64;Override\n- *    public void init(Locale locale, Reporter reporter) {\n- *        reporter.print(Kind.NOTE, \"Doclet using locale: \" + locale);\n- *        this.reporter = reporter;\n- *    }\n- *\n- *    public void printElement(DocTrees trees, Element e) {\n- *        DocCommentTree docCommentTree = trees.getDocCommentTree(e);\n- *        if (docCommentTree != null) {\n- *            System.out.println(\"Element (\" + e.getKind() + \": \"\n- *                    + e + \") has the following comments:\");\n- *            System.out.println(\"Entire body: \" + docCommentTree.getFullBody());\n- *            System.out.println(\"Block tags: \" + docCommentTree.getBlockTags());\n- *        }\n- *    }\n- *\n- *    &#64;Override\n- *    public boolean run(DocletEnvironment docEnv) {\n- *        reporter.print(Kind.NOTE, \"overviewfile: \" + overviewfile);\n- *        \/\/ get the DocTrees utility class to access document comments\n- *        DocTrees docTrees = docEnv.getDocTrees();\n- *\n- *        \/\/ location of an element in the same directory as overview.html\n- *        try {\n- *            Element e = ElementFilter.typesIn(docEnv.getSpecifiedElements()).iterator().next();\n- *            DocCommentTree docCommentTree\n- *                    = docTrees.getDocCommentTree(e, overviewfile);\n- *            if (docCommentTree != null) {\n- *                System.out.println(\"Overview html: \" + docCommentTree.getFullBody());\n- *            }\n- *        } catch (IOException missing) {\n- *            reporter.print(Kind.ERROR, \"No overview.html found.\");\n- *        }\n- *\n- *        for (TypeElement t : ElementFilter.typesIn(docEnv.getIncludedElements())) {\n- *            System.out.println(t.getKind() + \":\" + t);\n- *            for (Element e : t.getEnclosedElements()) {\n- *                printElement(docTrees, e);\n- *            }\n- *        }\n- *        return true;\n- *    }\n- *\n- *    &#64;Override\n- *    public String getName() {\n- *        return \"Example\";\n- *    }\n- *\n- *    private String overviewfile;\n- *\n- *    &#64;Override\n- *    public Set&lt;? extends Option&gt; getSupportedOptions() {\n- *        Option[] options = {\n- *            new Option() {\n- *                private final List&lt;String&gt; someOption = Arrays.asList(\n- *                        \"-overviewfile\",\n- *                        \"--overview-file\",\n- *                        \"-o\"\n- *                );\n- *\n- *                &#64;Override\n- *                public int getArgumentCount() {\n- *                    return 1;\n- *                }\n- *\n- *                &#64;Override\n- *                public String getDescription() {\n- *                    return \"an option with aliases\";\n- *                }\n- *\n- *                &#64;Override\n- *                public Option.Kind getKind() {\n- *                    return Option.Kind.STANDARD;\n- *                }\n- *\n- *                &#64;Override\n- *                public List&lt;String&gt; getNames() {\n- *                    return someOption;\n- *                }\n- *\n- *                &#64;Override\n- *                public String getParameters() {\n- *                    return \"file\";\n- *                }\n- *\n- *                &#64;Override\n- *                public boolean process(String opt, List&lt;String&gt; arguments) {\n- *                    overviewfile = arguments.get(0);\n- *                    return true;\n- *                }\n- *            }\n- *        };\n- *        return new HashSet&lt;&gt;(Arrays.asList(options));\n- *    }\n- *\n- *    &#64;Override\n- *    public SourceVersion getSupportedSourceVersion() {\n- *        \/\/ support the latest release\n- *        return SourceVersion.latest();\n- *    }\n+ *     private Reporter reporter;\n+ *     private PrintWriter stdout;\n+ *\n+ *     @Override\n+ *     public void init(Locale locale, Reporter reporter) {\n+ *         reporter.print(Kind.NOTE, \"Doclet using locale: \" + locale);\n+ *         this.reporter = reporter;\n+ *         stdout = reporter.getStandardWriter();\n+ *     }\n+ *\n+ *     public void printElement(DocTrees trees, Element e) {\n+ *         DocCommentTree docCommentTree = trees.getDocCommentTree(e);\n+ *         if (docCommentTree != null) {\n+ *             stdout.println(\"Element (\" + e.getKind() + \": \"\n+ *                     + e + \") has the following comments:\");\n+ *             stdout.println(\"Entire body: \" + docCommentTree.getFullBody());\n+ *             stdout.println(\"Block tags: \" + docCommentTree.getBlockTags());\n+ *         }\n+ *     }\n+ *\n+ *     @Override\n+ *     public boolean run(DocletEnvironment docEnv) {\n+ *         reporter.print(Kind.NOTE, \"overviewFile: \" + overviewFile);\n+ *\n+ *         \/\/ get the DocTrees utility class to access document comments\n+ *         DocTrees docTrees = docEnv.getDocTrees();\n+ *\n+ *         \/\/ location of an element in the same directory as overview.html\n+ *         try {\n+ *             Element e = ElementFilter.typesIn(docEnv.getSpecifiedElements()).iterator().next();\n+ *             DocCommentTree docCommentTree\n+ *                     = docTrees.getDocCommentTree(e, overviewFile);\n+ *             if (docCommentTree != null) {\n+ *                 stdout.println(\"Overview html: \" + docCommentTree.getFullBody());\n+ *             }\n+ *         } catch (IOException missing) {\n+ *             reporter.print(Kind.ERROR, \"No overview.html found.\");\n+ *         }\n+ *\n+ *         for (TypeElement t : ElementFilter.typesIn(docEnv.getIncludedElements())) {\n+ *             stdout.println(t.getKind() + \":\" + t);\n+ *             for (Element e : t.getEnclosedElements()) {\n+ *                 printElement(docTrees, e);\n+ *             }\n+ *         }\n+ *         return true;\n+ *     }\n+ *\n+ *     @Override\n+ *     public String getName() {\n+ *         return \"Example\";\n+ *     }\n+ *\n+ *     private String overviewFile;\n+ *\n+ *     @Override\n+ *     public Set<? extends Option> getSupportedOptions() {\n+ *         Option[] options = {\n+ *             new Option() {\n+ *                 private final List<String> someOption = List.of(\n+ *                         \"--overview-file\",\n+ *                         \"-overviewfile\",\n+ *                         \"-o\"\n+ *                 );\n+ *\n+ *                 @Override\n+ *                 public int getArgumentCount() {\n+ *                     return 1;\n+ *                 }\n+ *\n+ *                 @Override\n+ *                 public String getDescription() {\n+ *                     return \"an option with aliases\";\n+ *                 }\n+ *\n+ *                 @Override\n+ *                 public Option.Kind getKind() {\n+ *                     return Option.Kind.STANDARD;\n+ *                 }\n+ *\n+ *                 @Override\n+ *                 public List<String> getNames() {\n+ *                     return someOption;\n+ *                 }\n+ *\n+ *                 @Override\n+ *                 public String getParameters() {\n+ *                     return \"file\";\n+ *                 }\n+ *\n+ *                 @Override\n+ *                 public boolean process(String opt, List<String> arguments) {\n+ *                     overviewFile = arguments.get(0);\n+ *                     return true;\n+ *                 }\n+ *             }\n+ *         };\n+ *\n+ *         return Set.of(options);\n+ *     }\n+ *\n+ *     @Override\n+ *     public SourceVersion getSupportedSourceVersion() {\n+ *         \/\/ support the latest release\n+ *         return SourceVersion.latest();\n+ *     }\n+ * }\n@@ -293,1 +319,1 @@\n- * <\/pre>\n+ *\n@@ -296,6 +322,7 @@\n- * <pre>\n- *     javadoc -doclet Example &#92;\n- *       -overviewfile overview.html &#92;\n- *       -sourcepath source-location &#92;\n- *       source-location\/Example.java\n- * <\/pre>\n+ * {@snippet id=\"run-doclet\":\n+ *     javadoc -docletpath doclet-classes \\     \/\/ @highlight substring=\"doclet-classes \" type=italic\n+ *       -doclet Example \\\n+ *       --overview-file overview.html \\\n+ *       --source-path source-location \\        \/\/ @highlight region substring=\"source-location\" type=italic\n+ *       source-location\/Example.java           \/\/ @end\n+ *     }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/doclet\/package-info.java","additions":141,"deletions":114,"binary":false,"changes":255,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Optional;\n@@ -899,1 +900,1 @@\n-     * @param typeElement the typeElement that we should link to. This is not\n+     * @param typeElement the typeElement that we should link to. This is\n@@ -915,1 +916,1 @@\n-     * @param typeElement the typeElement that we should link to. This is not\n+     * @param typeElement the typeElement that we should link to. This is\n@@ -932,1 +933,1 @@\n-     * @param typeElement the typeElement that we should link to. This is not\n+     * @param typeElement the typeElement that we should link to. This is\n@@ -948,1 +949,1 @@\n-     * @param typeElement the typeElement that we should link to. This is not\n+     * @param typeElement the typeElement that we should link to. This is\n@@ -1066,1 +1067,2 @@\n-                    return (labelContent.isEmpty() ? text: labelContent);\n+                    return invalidTagOutput(resources.getText(\"doclet.tag.invalid\", tagName),\n+                            Optional.of(labelContent.isEmpty() ? text: labelContent));\n@@ -1410,8 +1412,0 @@\n-    boolean isAllWhiteSpace(String body) {\n-        for (int i = 0 ; i < body.length(); i++) {\n-            if (!Character.isWhitespace(body.charAt(i)))\n-                return false;\n-        }\n-        return true;\n-    }\n-\n@@ -1508,1 +1502,1 @@\n-                        && isAllWhiteSpace(ch.getText(tag)))\n+                        && ch.getText(tag).isBlank())\n@@ -1625,3 +1619,3 @@\n-                        if (body.matches(\"(?i)\\\\{@[a-z]+.*\")) {\n-                            messages.warning(dtp,\"doclet.tag.invalid_usage\", body);\n-                        } else {\n+                        Matcher m = Pattern.compile(\"(?i)\\\\{@([a-z]+).*\").matcher(body);\n+                        String tagName = m.matches() ? m.group(1) : null;\n+                        if (tagName == null) {\n@@ -1629,0 +1623,6 @@\n+                            result.add(invalidTagOutput(resources.getText(\"doclet.tag.invalid_input\", body),\n+                                    Optional.empty()));\n+                        } else {\n+                            messages.warning(dtp, \"doclet.tag.invalid_usage\", body);\n+                            result.add(invalidTagOutput(resources.getText(\"doclet.tag.invalid\", tagName),\n+                                    Optional.of(Text.of(body))));\n@@ -1631,1 +1631,0 @@\n-                    result.add(Text.of(node.toString()));\n@@ -1785,0 +1784,18 @@\n+    \/**\n+     * Returns the output for an invalid tag. The returned content uses special styling to\n+     * highlight the problem. Depending on the presence of the {@code detail} string the method\n+     * returns a plain text span or an expandable component.\n+     *\n+     * @param summary the single-line summary message\n+     * @param detail the optional detail message which may contain preformatted text\n+     * @return the output\n+     *\/\n+    protected Content invalidTagOutput(String summary, Optional<Content> detail) {\n+        if (detail.isEmpty() || detail.get().isEmpty()) {\n+            return HtmlTree.SPAN(HtmlStyle.invalidTag, Text.of(summary));\n+        }\n+        return new HtmlTree(TagName.DETAILS).addStyle(HtmlStyle.invalidTag)\n+                .add(new HtmlTree(TagName.SUMMARY).add(Text.of(summary)))\n+                .add(new HtmlTree(TagName.PRE).add(detail.get()));\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":35,"deletions":18,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.Optional;\n@@ -539,0 +540,8 @@\n+    @Override\n+    protected Content invalidTagOutput(String summary, Optional<String> detail) {\n+        return htmlWriter.invalidTagOutput(summary,\n+                detail.isEmpty() || detail.get().isEmpty()\n+                        ? Optional.empty()\n+                        : Optional.of(Text.of(utils.normalizeNewlines(detail.get()))));\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -910,0 +910,5 @@\n+    \/**\n+     * The class of an element that acts as a notification for an invalid tag.\n+     *\/\n+    invalidTag,\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    DETAILS,\n@@ -86,0 +87,1 @@\n+    SUMMARY,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/TagName.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,0 +109,1 @@\n+doclet.tag.invalid=invalid @{0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -376,0 +376,2 @@\n+doclet.snippet.markup.spurious=\\\n+  spurious markup\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -558,0 +558,12 @@\n+details.invalid-tag, span.invalid-tag {\n+    font-size:14px;\n+    font-family:'DejaVu Serif', Georgia, \"Times New Roman\", Times, serif;\n+    background: #ffe6e6;\n+    border: thin solid #000000;\n+    border-radius:2px;\n+    padding: 2px 4px;\n+    display:inline-block;\n+}\n+details.invalid-tag summary {\n+    cursor: pointer;\n+}\n@@ -994,1 +1006,0 @@\n-\n@@ -998,1 +1009,0 @@\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/stylesheet.css","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -123,1 +123,2 @@\n-            return badSnippet(writer);\n+            String details = writer.configuration().getDocResources().getText(e.key(), e.args());\n+            return badSnippet(writer, Optional.of(details));\n@@ -272,0 +273,6 @@\n+            Diags d = (text, pos) -> {\n+                var path = writer.configuration().utils.getCommentHelper(holder)\n+                        .getDocTreePath(snippetTag.getBody());\n+                writer.configuration().getReporter().print(Diagnostic.Kind.WARNING,\n+                        path, pos, pos, pos, text);\n+            };\n@@ -273,1 +280,1 @@\n-                inlineSnippet = parse(writer.configuration().getDocResources(), language, inlineContent);\n+                inlineSnippet = parse(writer.configuration().getDocResources(), d, language, inlineContent);\n@@ -283,1 +290,1 @@\n-            return badSnippet(writer);\n+            return badSnippet(writer, Optional.of(e.getMessage()));\n@@ -287,0 +294,2 @@\n+            var finalFileObject = fileObject;\n+            Diags d = (text, pos) -> writer.configuration().getMessages().warning(finalFileObject, pos, pos, pos, text);\n@@ -288,1 +297,1 @@\n-                externalSnippet = parse(writer.configuration().getDocResources(), language, externalContent);\n+                externalSnippet = parse(writer.configuration().getDocResources(), d, language, externalContent);\n@@ -294,1 +303,1 @@\n-            return badSnippet(writer);\n+            return badSnippet(writer, Optional.of(e.getMessage()));\n@@ -366,2 +375,2 @@\n-    private StyledText parse(Resources resources, Optional<Language> language, String content) throws ParseException {\n-        Parser.Result result = new Parser(resources).parse(language, content);\n+    private StyledText parse(Resources resources, Diags diags, Optional<Language> language, String content) throws ParseException {\n+        Parser.Result result = new Parser(resources).parse(diags, language, content);\n@@ -372,0 +381,4 @@\n+    public interface Diags {\n+        void warn(String text, int pos);\n+    }\n+\n@@ -399,2 +412,3 @@\n-    private Content badSnippet(TagletWriter writer) {\n-        return writer.getOutputInstance().add(\"bad snippet\");\n+    private Content badSnippet(TagletWriter writer, Optional<String> details) {\n+        Resources resources = writer.configuration().getDocResources();\n+        return writer.invalidTagOutput(resources.getText(\"doclet.tag.invalid\", \"snippet\"), details);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Optional;\n@@ -242,0 +243,11 @@\n+    \/**\n+     * Returns the output for an invalid tag. The returned content uses special styling to\n+     * highlight the problem. Depending on the presence of the {@code detail} string the method\n+     * returns a plain text span or an expandable component.\n+     *\n+     * @param summary the single-line summary message\n+     * @param detail the optional detail message which may contain preformatted text\n+     * @return the output\n+     *\/\n+    protected abstract Content invalidTagOutput(String summary, Optional<String> detail);\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,5 +34,2 @@\n-\/\/ markup-comment = { markup-tag } ;\n-\/\/     markup-tag = \"@\" , tag-name , {attribute} [\":\"] ;\n-\/\/\n-\/\/ If optional trailing \":\" is present, the tag refers to the next line\n-\/\/ rather than to this line.\n+\/\/ markup-comment = { markup-tag } [\":\"] ;\n+\/\/     markup-tag = \"@\" , tag-name , {attribute} ;\n@@ -79,0 +76,13 @@\n+        List<Parser.Tag> tags = readTags();\n+        if (ch == ':') {\n+            tags.forEach(t -> t.appliesToNextLine = true);\n+            nextChar();\n+        }\n+        skipWhitespace();\n+        if (ch != EOI) {\n+            return List.of();\n+        }\n+        return tags;\n+    }\n+\n+    protected List<Parser.Tag> readTags() throws ParseException {\n@@ -80,1 +90,1 @@\n-        \/\/ TODO: what to do with leading and trailing unrecognized markup?\n+        skipWhitespace();\n@@ -82,3 +92,4 @@\n-            switch (ch) {\n-                case '@' -> tags.add(readTag());\n-                default -> nextChar();\n+            if (ch == '@') {\n+                tags.add(readTag());\n+            } else {\n+                break;\n@@ -87,1 +98,0 @@\n-\n@@ -97,14 +107,2 @@\n-        boolean appliesToNextLine = false;\n-        List<Attribute> attributes = List.of();\n-\n-        if (ch == ':') {\n-            appliesToNextLine = true;\n-            nextChar();\n-        } else {\n-            attributes = attrs();\n-            skipWhitespace();\n-            if (ch == ':') {\n-                appliesToNextLine = true;\n-                nextChar();\n-            }\n-        }\n+        List<Attribute> attributes = attrs();\n+        skipWhitespace();\n@@ -116,1 +114,0 @@\n-        i.appliesToNextLine = appliesToNextLine;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/snippet\/MarkupParser.java","additions":22,"deletions":25,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-    public Result parse(Optional<SnippetTaglet.Language> language, String source) throws ParseException {\n+    public Result parse(SnippetTaglet.Diags diags, Optional<SnippetTaglet.Language> language, String source) throws ParseException {\n@@ -103,1 +103,1 @@\n-        return parse(p, source);\n+        return parse(diags, p, source);\n@@ -109,1 +109,1 @@\n-    private Result parse(Pattern commentPattern, String source) throws ParseException {\n+    private Result parse(SnippetTaglet.Diags diags, Pattern commentPattern, String source) throws ParseException {\n@@ -153,1 +153,1 @@\n-                    throw new ParseException(e::getMessage, markedUpLine.start(\"markup\") + e.getPosition());\n+                    throw new ParseException(e::getMessage, next.offset() + markedUpLine.start(\"markup\") + e.getPosition());\n@@ -169,1 +169,1 @@\n-                    \/\/ TODO: log this with NOTICE;\n+                    diags.warn(resources.getText(\"doclet.snippet.markup.spurious\"), next.offset() + markedUpLine.start(\"markup\"));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/snippet\/Parser.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1239,7 +1239,1 @@\n-        String s = tree.getBody();\n-        for (int i = 0; i < s.length(); i++) {\n-            Character c = s.charAt(i);\n-            if (!Character.isWhitespace(s.charAt(i)))\n-                return true;\n-        }\n-        return false;\n+        return !tree.getBody().isBlank();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -116,0 +116,1 @@\n+    @SuppressWarnings(\"deprecation\")\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/SummaryTab.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -244,0 +244,5 @@\n+\n+    \/\/ package private\n+    boolean isVisible() {\n+        return platformEventType.isVisible();\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -206,0 +206,5 @@\n+\n+        @Override\n+        public boolean isVisible(EventType t) {\n+            return t.isVisible();\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/FlightRecorderPermission.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/ChunkInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/ChunksChannel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-            if (Utils.isSettingVisible(nc.control, type.hasEventHook())) {\n+            if (Utils.isSettingVisible(nc.control, type.hasEventHook()) && type.isVisible()) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -476,2 +476,1 @@\n-     * Sets the location of the disk repository, to be used at an emergency\n-     * dump.\n+     * Sets the location of the disk repository.\n@@ -483,0 +482,14 @@\n+    \/**\n+     * Sets the path to emergency dump.\n+     *\n+     * @param dumpPathText\n+     *\/\n+    public native void setDumpPath(String dumpPathText);\n+\n+    \/**\n+     * Gets the path to emergency dump.\n+     *\n+     * @return The path to emergency dump.\n+     *\/\n+    public native String getDumpPath();\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -128,0 +128,10 @@\n+    \/**\n+     * Called by the JVM to ensure metadata for internal events\/types become public.\n+     *\n+     * Must be called after metadata repository has been initialized (JFR created).\n+     *\n+     *\/\n+    static void unhideInternalTypes() {\n+        MetadataRepository.unhideInternalTypes();\n+    }\n+\n@@ -131,2 +141,1 @@\n-     * @param systemThreadGroup\n-     *            the system thread group\n+     * @param systemThreadGroup  the system thread group\n@@ -134,2 +143,1 @@\n-     * @param contextClassLoader\n-     *            the context class loader.\n+     * @param contextClassLoader the context class loader.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVMUpcalls.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n-    private final AnnotationElement ENABLED = new AnnotationElement(Enabled.class, false);\n+    private final AnnotationElement ENABLED = new AnnotationElement(Enabled.class, true);\n+    private final AnnotationElement DISABLED = new AnnotationElement(Enabled.class, false);\n@@ -85,0 +86,1 @@\n+        private final boolean internal;\n@@ -104,0 +106,1 @@\n+            internal = dis.readBoolean();\n@@ -318,1 +321,5 @@\n-                aes.add(ENABLED);\n+                if (t.internal) {\n+                    aes.add(ENABLED);\n+                } else {\n+                    aes.add(DISABLED);\n+                }\n@@ -331,0 +338,9 @@\n+            if (t.internal) {\n+                type.setInternal(true);\n+                \/\/ Internal types are hidden by default\n+                type.setVisible(false);\n+                \/\/ Internal events are enabled by default\n+                if (type instanceof PlatformEventType pe) {\n+                    pe.setEnabled(true);\n+                }\n+            }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataLoader.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.util.Comparator;\n@@ -74,1 +75,1 @@\n-        for (Type type : typeLibrary.getTypes()) {\n+        for (Type type : new ArrayList<>(typeLibrary.getTypes())) {\n@@ -109,1 +110,5 @@\n-        eventTypes.addAll(nativeEventTypes);\n+        for (EventType t : nativeEventTypes) {\n+            if (PrivateAccess.getInstance().isVisible(t)) {\n+                eventTypes.add(t);\n+            }\n+        }\n@@ -246,1 +251,7 @@\n-            List<Type> types = typeLibrary.getTypes();\n+            List<Type> types = typeLibrary.getVisibleTypes();\n+            if (Logger.shouldLog(LogTag.JFR_METADATA, LogLevel.DEBUG)) {\n+                Collections.sort(types,Comparator.comparing(Type::getName));\n+                for (Type t: types) {\n+                    Logger.log(LogTag.JFR_METADATA, LogLevel.INFO, \"Serialized type: \" + t.getName() + \" id=\" + t.getId());\n+                }\n+            }\n@@ -352,0 +363,16 @@\n+    static void unhideInternalTypes() {\n+        for (Type t : TypeLibrary.getInstance().getTypes()) {\n+            if (t.isInternal()) {\n+                t.setVisible(true);\n+                Logger.log(LogTag.JFR_METADATA, LogLevel.DEBUG, \"Unhiding internal type \" + t.getName());\n+            }\n+        }\n+        \/\/ Singleton should have been initialized here.\n+        \/\/ It's not possible to call MetadataRepository().getInstance(),\n+        \/\/ because it will deadlock with Java thread calling flush() or setOutput();\n+        instance.storeDescriptorInJVM();\n+    }\n+\n+    public synchronized List<Type> getVisibleTypes() {\n+        return typeLibrary.getVisibleTypes();\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":30,"deletions":3,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,5 @@\n+import java.io.IOException;\n+\n+import jdk.jfr.internal.LogLevel;\n+import jdk.jfr.internal.LogTag;\n+import jdk.jfr.internal.Logger;\n@@ -31,0 +36,2 @@\n+import static java.nio.file.LinkOption.*;\n+\n@@ -51,1 +58,1 @@\n-    private static final SafePath DEFAULT_DUMP_PATH = SecuritySupport.USER_HOME;\n+    private static final SafePath DEFAULT_DUMP_PATH = null;\n@@ -60,1 +67,0 @@\n-    private static SafePath dumpPath;\n@@ -116,2 +122,9 @@\n-    public static synchronized void setDumpPath(SafePath path) {\n-        dumpPath = path;\n+    public static synchronized void setDumpPath(SafePath path) throws IOException {\n+        if (path != null) {\n+            if (SecuritySupport.isWritable(path)) {\n+                path = SecuritySupport.toRealPath(path, NOFOLLOW_LINKS);\n+            } else {\n+                throw new IOException(\"Cannot write JFR emergency dump to \" + path.toString());\n+            }\n+        }\n+        jvm.setDumpPath(path == null ? null : path.toString());\n@@ -121,1 +134,1 @@\n-        return dumpPath;\n+        return new SafePath(jvm.getDumpPath());\n@@ -147,1 +160,5 @@\n-        setDumpPath(DEFAULT_DUMP_PATH);\n+        try {\n+            setDumpPath(DEFAULT_DUMP_PATH);\n+        } catch (IOException e) {\n+            \/\/ Ignore (depends on default value in JVM: it would be NULL)\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Options.java","additions":24,"deletions":7,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -106,0 +106,2 @@\n+\n+    public abstract boolean isVisible(EventType t);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PrivateAccess.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/RepositoryChunk.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.nio.file.LinkOption;\n@@ -80,1 +81,0 @@\n-    static final SafePath USER_HOME = getPathInProperty(\"user.home\", null);\n@@ -368,2 +368,2 @@\n-    static SafePath toRealPath(SafePath safePath) throws IOException {\n-        return new SafePath(doPrivilegedIOWithReturn(() -> safePath.toPath().toRealPath()));\n+    static SafePath toRealPath(SafePath safePath, LinkOption... options) throws IOException {\n+        return new SafePath(doPrivilegedIOWithReturn(() -> safePath.toPath().toRealPath(options)));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SecuritySupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,0 +92,2 @@\n+    private boolean visible = true;\n+    private boolean internal;\n@@ -340,0 +342,16 @@\n+\n+    public void setVisible(boolean visible) {\n+        this.visible = visible;\n+    }\n+\n+    public boolean isVisible() {\n+        return visible;\n+    }\n+\n+    public void setInternal(boolean internal) {\n+        this.internal = internal;\n+    }\n+\n+    public boolean isInternal() {\n+        return internal;\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Type.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -122,2 +122,13 @@\n-    public List<Type> getTypes() {\n-        return new ArrayList<>(types.values());\n+    public Collection<Type> getTypes() {\n+        return types.values();\n+    }\n+\n+    \/\/ Returned list should be mutable (for in-place sorting)\n+    public List<Type> getVisibleTypes() {\n+        List<Type> visible = new ArrayList<>(types.size());\n+        types.values().forEach(t -> {\n+            if (t.isVisible()) {\n+                visible.add(t);\n+            }\n+        });\n+        return visible;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-\n+import java.io.IOException;\n@@ -109,1 +109,5 @@\n-            Options.setDumpPath(new SafePath(dumpPath));\n+            try {\n+                Options.setDumpPath(new SafePath(dumpPath));\n+            } catch (IOException e) {\n+                throw new DCmdException(\"Could not set \" + dumpPath + \" to emergency dump path. \" + e.getMessage(), e);\n+            }\n@@ -186,0 +190,1 @@\n+            printDumpPath();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdConfigure.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-import jdk.jfr.internal.TypeLibrary;\n+import jdk.jfr.internal.MetadataRepository;\n@@ -233,1 +233,1 @@\n-            return TypeLibrary.getInstance().getTypes();\n+            return MetadataRepository.getInstance().getVisibleTypes();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Metadata.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private static final DateTimeFormatter TIME_FORMAT = DateTimeFormatter.ofPattern(\"HH:mm:ss.SSS (YYYY-MM-dd)\");\n+    private static final DateTimeFormatter TIME_FORMAT = DateTimeFormatter.ofPattern(\"HH:mm:ss.SSS (yyyy-MM-dd)\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/PrettyWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -778,5 +778,0 @@\n-    <event name=\"jdk.ZThreadDebug\">\n-      <setting name=\"enabled\">true<\/setting>\n-      <setting name=\"threshold\">0 ms<\/setting>\n-    <\/event>\n-\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -778,5 +778,0 @@\n-    <event name=\"jdk.ZThreadDebug\">\n-      <setting name=\"enabled\">true<\/setting>\n-      <setting name=\"threshold\">0 ms<\/setting>\n-    <\/event>\n-\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    static final boolean DEBUG = Boolean.getBoolean(\"jlink.debug\");\n+    public static final boolean DEBUG = Boolean.getBoolean(\"jlink.debug\");\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.tools.jlink.internal.JlinkTask;\n@@ -30,0 +31,4 @@\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n@@ -33,0 +38,1 @@\n+import jdk.internal.org.objectweb.asm.ClassReader;\n@@ -64,0 +70,29 @@\n+\n+    private void dumpClassFile(String path, byte[] buf) {\n+        try {\n+            String fullPath = String.format(\"%d-%s%s%s\",\n+                 ProcessHandle.current().pid(),\n+                 getName(), File.separator,\n+                 path.replace('\/', File.separatorChar));\n+            System.err.printf(\"Dumping class file %s\\n\", fullPath);\n+            new File(fullPath.substring(0, fullPath.lastIndexOf('\/'))).mkdirs();\n+            Files.write(Paths.get(fullPath), buf);\n+        } catch (IOException ioExp) {\n+            System.err.println(\"writing \" + path + \" failed\");\n+            ioExp.printStackTrace();\n+        }\n+    }\n+\n+    protected ClassReader newClassReader(String path, byte[] buf) {\n+        try {\n+            return new ClassReader(buf);\n+        } catch (IllegalArgumentException iae) {\n+            if (JlinkTask.DEBUG) {\n+                System.err.printf(\"Failed to parse class file: %s\\n\", path);\n+                iae.printStackTrace();\n+                dumpClassFile(path, buf);\n+            }\n+            throw iae;\n+        }\n+    }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/AbstractPlugin.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-                    ClassReader cr = new ClassReader(bytes);\n+                    ClassReader cr = newClassReader(path, bytes);\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-                        ClassReader reader = new ClassReader(resource.contentBytes());\n+                        ClassReader reader = newClassReader(path, resource.contentBytes());\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    private byte[] redefine(byte[] classFile) {\n+    private byte[] redefine(String path, byte[] classFile) {\n@@ -101,1 +101,1 @@\n-        var cr = new ClassReader(classFile);\n+        var cr = newClassReader(path, classFile);\n@@ -192,1 +192,1 @@\n-                        return res.copyWithContent(redefine(res.contentBytes()));\n+                        return res.copyWithContent(redefine(res.path(), res.contentBytes()));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VersionPropsPlugin.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -145,1 +145,2 @@\n-\\  --generate-cds-archive    Generate CDS archives if the runtime image supports CDS feature.\n+\\  --generate-cds-archive    Generate CDS archive if the runtime image supports\\n\\\n+\\                            the CDS feature.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+import java.util.ArrayList;\n+import java.util.Comparator;\n@@ -282,0 +284,8 @@\n+        \/\/ Order substitution data by the length of keys.\n+        \/\/ Longer keys go first.\n+        \/\/ This is needed to properly handle cases when one key is\n+        \/\/ a subtring of another and try the later first.\n+        var orderedEntries = substitutionData.entrySet().stream()\n+                .sorted(Map.Entry.<String, String>comparingByKey(\n+                        Comparator.comparingInt(String::length)).reversed())\n+                .toList();\n@@ -284,3 +294,19 @@\n-            for (var entry : substitutionData.entrySet()) {\n-                result = result.replace(entry.getKey(), Optional.ofNullable(\n-                        entry.getValue()).orElse(\"\"));\n+            var workEntries = orderedEntries;\n+            var it = workEntries.listIterator();\n+            while (it.hasNext()) {\n+                var entry = it.next();\n+                String newResult = result.replace(entry.getKey(),\n+                        Optional.ofNullable(entry.getValue()).orElse(\"\"));\n+                if (!newResult.equals(result)) {\n+                    \/\/ Substitution occured.\n+                    \/\/ Remove the matching substitution key from the list and\n+                    \/\/ go over the list of substitution entries again.\n+                    if (workEntries == orderedEntries) {\n+                        workEntries = new ArrayList<>(orderedEntries);\n+                        it = workEntries.listIterator(it.nextIndex() - 1);\n+                        it.next();\n+                    }\n+                    it.remove();\n+                    it = workEntries.listIterator();\n+                    result = newResult;\n+                }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-            Pattern.compile(OPTION_PATTERN.pattern() + \"\\\\s+(?<val>\\\\S*)\");\n+            Pattern.compile(OPTION_PATTERN.pattern() + \"\\\\s+(?<val>(\\\\S|\\\\\\\\ )*)\");\n@@ -1564,2 +1564,2 @@\n-            String path = code.substring(0, lastSlash + 1);\n-            String prefix = lastSlash != (-1) ? code.substring(lastSlash + 1) : code;\n+            String path = code.substring(0, lastSlash + 1).replace(\"\\\\ \", \" \");\n+            String prefix = (lastSlash != (-1) ? code.substring(lastSlash + 1) : code).replace(\"\\\\ \", \" \");\n@@ -1570,1 +1570,1 @@\n-                   .map(f -> new ArgSuggestion(f.getFileName() + (Files.isDirectory(f) ? \"\/\" : \"\")))\n+                   .map(f -> new ArgSuggestion(f.getFileName().toString().replace(\" \", \"\\\\ \") + (Files.isDirectory(f) ? \"\/\" : \"\")))\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.naming.dns\/share\/classes\/com\/sun\/jndi\/dns\/DnsClient.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n@@ -599,1 +599,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.naming.rmi\/share\/classes\/com\/sun\/jndi\/rmi\/registry\/RegistryContext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,11 +326,1 @@\n-\n-        \/\/ Note that Math.multiplyHigh computes the high half of the product of signed values,\n-        \/\/ but what we need is the high half of the product of unsigned values; for this we use the\n-        \/\/ formula \"unsignedMultiplyHigh(a, b) = multiplyHigh(a, b) + ((a >> 63) & b) + ((b >> 63) & a)\";\n-        \/\/ in effect, each operand is added to the result iff the sign bit of the other operand is 1.\n-        \/\/ (See Henry S. Warren, Jr., _Hacker's Delight_ (Second Edition), Addison-Wesley (2013),\n-        \/\/ Section 8-3, p. 175; or see the First Edition, Addison-Wesley (2003), Section 8-3, p. 133.)\n-        \/\/ If Math.unsignedMultiplyHigh(long, long) is ever implemented, the following line can become:\n-        \/\/         sh = (ML * sh) + Math.unsignedMultiplyHigh(ML, sl) + sl + ah;\n-        \/\/ and this entire comment can be deleted.\n-        sh = (ML * sh) + (Math.multiplyHigh(ML, sl) + ((ML >> 63) & sl) + ((sl >> 63) & ML)) + sl + ah;\n+        sh = (ML * sh) + Math.unsignedMultiplyHigh(ML, sl) + sl + ah;\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X1024MixRandom.java","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -251,10 +251,1 @@\n-       \/\/ Note that Math.multiplyHigh computes the high half of the product of signed values,\n-       \/\/ but what we need is the high half of the product of unsigned values; for this we use the\n-       \/\/ formula \"unsignedMultiplyHigh(a, b) = multiplyHigh(a, b) + ((a >> 63) & b) + ((b >> 63) & a)\";\n-       \/\/ in effect, each operand is added to the result iff the sign bit of the other operand is 1.\n-       \/\/ (See Henry S. Warren, Jr., _Hacker's Delight_ (Second Edition), Addison-Wesley (2013),\n-       \/\/ Section 8-3, p. 175; or see the First Edition, Addison-Wesley (2003), Section 8-3, p. 133.)\n-       \/\/ If Math.unsignedMultiplyHigh(long, long) is ever implemented, the following line can become:\n-       \/\/         sh = (ML * sh) + Math.unsignedMultiplyHigh(ML, sl) + sl + ah;\n-       \/\/ and this entire comment can be deleted.\n-        sh = (ML * sh) + (Math.multiplyHigh(ML, sl) + ((ML >> 63) & sl) + ((sl >> 63) & ML)) + sl + ah;\n+        sh = (ML * sh) + Math.unsignedMultiplyHigh(ML, sl) + sl + ah;\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X128MixRandom.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -272,10 +272,1 @@\n-       \/\/ Note that Math.multiplyHigh computes the high half of the product of signed values,\n-       \/\/ but what we need is the high half of the product of unsigned values; for this we use the\n-       \/\/ formula \"unsignedMultiplyHigh(a, b) = multiplyHigh(a, b) + ((a >> 63) & b) + ((b >> 63) & a)\";\n-       \/\/ in effect, each operand is added to the result iff the sign bit of the other operand is 1.\n-       \/\/ (See Henry S. Warren, Jr., _Hacker's Delight_ (Second Edition), Addison-Wesley (2013),\n-       \/\/ Section 8-3, p. 175; or see the First Edition, Addison-Wesley (2003), Section 8-3, p. 133.)\n-       \/\/ If Math.unsignedMultiplyHigh(long, long) is ever implemented, the following line can become:\n-       \/\/         sh = (ML * sh) + Math.unsignedMultiplyHigh(ML, sl) + sl + ah;\n-       \/\/ and this entire comment can be deleted.\n-        sh = (ML * sh) + (Math.multiplyHigh(ML, sl) + ((ML >> 63) & sl) + ((sl >> 63) & ML)) + sl + ah;\n+        sh = (ML * sh) + Math.unsignedMultiplyHigh(ML, sl) + sl + ah;\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X256MixRandom.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/sasl\/gsskerb\/GssKrb5Base.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -636,0 +636,6 @@\n+     *\n+     * @deprecated The guarantee that a field will always have the same offset\n+     * and base may not be true in a future release. The ability to provide an\n+     * offset and object reference to a heap memory accessor will be removed\n+     * in a future release. Use {@link java.lang.invoke.VarHandle} instead.\n+     *\n@@ -638,0 +644,1 @@\n+    @Deprecated(since=\"18\")\n@@ -668,0 +675,6 @@\n+     *\n+     * @deprecated The guarantee that a field will always have the same offset\n+     * and base may not be true in a future release. The ability to provide an\n+     * offset and object reference to a heap memory accessor will be removed\n+     * in a future release. Use {@link java.lang.invoke.VarHandle} instead.\n+     *\n@@ -670,0 +683,1 @@\n+    @Deprecated(since=\"18\")\n@@ -694,0 +708,5 @@\n+     *\n+     * @deprecated The guarantee that a field will always have the same offset\n+     * and base may not be true in a future release. The ability to provide an\n+     * offset and object reference to a heap memory accessor will be removed\n+     * in a future release. Use {@link java.lang.invoke.VarHandle} instead.\n@@ -695,0 +714,1 @@\n+    @Deprecated(since=\"18\")\n","filename":"src\/jdk.unsupported\/share\/classes\/sun\/misc\/Unsafe.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1222,1 +1222,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-                                         BOTConstants::N_bytes,\n+                                         BOTConstants::card_size(),\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_freeRegionList.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -243,1 +243,1 @@\n-    G1CardSetContainersTest::cardset_inlineptr_test(i - CardTable::card_shift);\n+    G1CardSetContainersTest::cardset_inlineptr_test(i - CardTable::card_shift());\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1CardSetContainers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,0 +109,2 @@\n+containers\/docker\/TestJcmd.java 8278102 linux-aarch64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,0 +74,7 @@\n+# Test sets for running inside container environment\n+hotspot_containers_extended = \\\n+  runtime \\\n+  serviceability \\\n+  vmTestbase\/nsk\/jvmti \\\n+  vmTestbase\/nsk\/monitoring\n+\n@@ -176,0 +183,44 @@\n+tier2_compiler = \\\n+  compiler\/allocation\/ \\\n+  compiler\/arguments\/ \\\n+  compiler\/calls\/ \\\n+  compiler\/cha\/ \\\n+  compiler\/controldependency\/ \\\n+  compiler\/conversions\/ \\\n+  compiler\/codegen\/ \\\n+  compiler\/linkage\/ \\\n+  compiler\/loopstripmining\/ \\\n+  compiler\/loopopts\/Test7052494.java \\\n+  compiler\/longcountedloops\/ \\\n+  compiler\/intrinsics\/bmi \\\n+  compiler\/intrinsics\/mathexact \\\n+  compiler\/intrinsics\/sha \\\n+  compiler\/intrinsics\/bigInteger\/TestMultiplyToLen.java \\\n+  compiler\/intrinsics\/zip\/TestAdler32.java \\\n+  compiler\/membars\/ \\\n+  compiler\/onSpinWait\/ \\\n+  compiler\/parsing\/ \\\n+  compiler\/rangechecks\/ \\\n+  compiler\/reflection\/ \\\n+  compiler\/rtm\/ \\\n+  compiler\/runtime\/Test6826736.java \\\n+  compiler\/stable\/ \\\n+  compiler\/stringopts\/ \\\n+  -:tier1_compiler \\\n+  -:hotspot_slow_compiler\n+\n+tier3_compiler = \\\n+  compiler\/c2\/ \\\n+  compiler\/ciReplay\/ \\\n+  compiler\/compilercontrol\/ \\\n+  compiler\/debug\/ \\\n+  compiler\/oracle\/ \\\n+  compiler\/print\/ \\\n+  compiler\/relocations\/ \\\n+  compiler\/tiered\/ \\\n+  compiler\/vectorapi\/ \\\n+  compiler\/whitebox\/ \\\n+  :hotspot_slow_compiler \\\n+  -:tier1_compiler \\\n+  -:tier2_compiler\n+\n@@ -471,0 +522,1 @@\n+  :tier2_compiler \\\n@@ -476,0 +528,1 @@\n+  :tier3_compiler \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":53,"deletions":0,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277882\n+ * @summary New subnode ideal optimization: converting \"c0 - (x + c1)\" into \"(c0 - c1) - x\"\n+ * @library \/test\/lib\n+ * @run main\/othervm -XX:-TieredCompilation -Xbatch\n+ *                   -XX:CompileCommand=dontinline,compiler.c2.TestSubIdealC0Minus_YPlusC1_::test*\n+ *                   -XX:CompileCommand=compileonly,compiler.c2.TestSubIdealC0Minus_YPlusC1_::test*\n+ *                   compiler.c2.TestSubIdealC0Minus_YPlusC1_\n+ *\/\n+package compiler.c2;\n+\n+import jdk.test.lib.Asserts;\n+\n+public class TestSubIdealC0Minus_YPlusC1_ {\n+\n+    private static final int I_C0_0 = 1234;\n+    private static final int I_C1 = 1234;\n+    private static final int I_C0_1 = 4321;\n+\n+    private static final long L_C0_0 = 123_456_789_123L;\n+    private static final long L_C1 = 123_456_789_123L;\n+    private static final long L_C0_1 = 654_321;\n+\n+    public static int testIC0EqualsC1(int x) {\n+        return I_C0_0 - (x + I_C1);\n+    }\n+\n+    public static long testLC0EqualsC1(long x) {\n+        return L_C0_0 - (x + L_C1);\n+    }\n+\n+    public static int testIC0NotEqualsC1(int x) {\n+        return I_C0_1 - (x + I_C1);\n+    }\n+\n+    public static long testLC0NotEqualsC1(long x) {\n+        return L_C0_1 - (x + L_C1);\n+    }\n+\n+    public static int testIXPlusC1IsOverflow(int x) {\n+        return Integer.MAX_VALUE - (x + Integer.MAX_VALUE);\n+    }\n+\n+    public static long testLXPlusC1IsOverflow(long x) {\n+        return Long.MAX_VALUE - (x + Long.MAX_VALUE);\n+    }\n+\n+    public static int testIXPlusC1IsUnderflow(int x) {\n+        return Integer.MIN_VALUE - (x + Integer.MIN_VALUE);\n+    }\n+\n+    public static long testLXPlusC1IsUnderflow(long x) {\n+        return Long.MIN_VALUE - (x + Long.MIN_VALUE);\n+    }\n+\n+    public static int testIC0MinusC1IsOverflow(int x) {\n+        return Integer.MAX_VALUE - (x + Integer.MIN_VALUE);\n+    }\n+\n+    public static long testLC0MinusC1IsOverflow(long x) {\n+        return Long.MAX_VALUE - (x + Long.MIN_VALUE);\n+    }\n+\n+    public static int testIC0MinusC1IsUnderflow(int x) {\n+        return Integer.MIN_VALUE - (x + Integer.MAX_VALUE);\n+    }\n+\n+    public static long testLC0MinusC1IsUnderflow(long x) {\n+        return Long.MIN_VALUE - (x + Long.MAX_VALUE);\n+    }\n+\n+    public static int testIResultIsOverflow(int x) {\n+        return 2147483637 - (x + 10); \/\/ Integer.MAX_VALUE == 2147483647\n+    }\n+\n+    public static long testLResultIsOverflow(long x) {\n+        return 9223372036854775797L - (x + 10); \/\/ Long.MAX_VALUE == 9223372036854775807\n+    }\n+\n+    public static int testIResultIsUnderflow(int x) {\n+        return -2147483637 - (x + 10); \/\/ Integer.MIN_VALUE == -2147483648\n+    }\n+\n+    public static long testLResultIsUnderflow(long x) {\n+        return -9223372036854775797L - (x + 10); \/\/ Long.MIN_VALUE == -9223372036854775808\n+    }\n+\n+    public static void main(String... args) {\n+        for (int i = 0; i < 50_000; i++) {\n+            Asserts.assertTrue(testIC0EqualsC1(10) == -10);\n+            Asserts.assertTrue(testIC0NotEqualsC1(100) == 2987);\n+            Asserts.assertTrue(testIXPlusC1IsOverflow(10) == -10);\n+            Asserts.assertTrue(testIXPlusC1IsUnderflow(-10) == 10);\n+            Asserts.assertTrue(testIC0MinusC1IsOverflow(10) == -11);\n+            Asserts.assertTrue(testIC0MinusC1IsUnderflow(10) == -9);\n+            Asserts.assertTrue(testIResultIsOverflow(-21) == Integer.MIN_VALUE);\n+            Asserts.assertTrue(testIResultIsUnderflow(2) == Integer.MAX_VALUE);\n+\n+            Asserts.assertTrue(testLC0EqualsC1(10) == -10);\n+            Asserts.assertTrue(testLC0NotEqualsC1(100) == -123456134902L);\n+            Asserts.assertTrue(testLXPlusC1IsOverflow(10) == -10);\n+            Asserts.assertTrue(testLXPlusC1IsUnderflow(-10) == 10);\n+            Asserts.assertTrue(testLC0MinusC1IsOverflow(10) == -11);\n+            Asserts.assertTrue(testLC0MinusC1IsUnderflow(10) == -9);\n+            Asserts.assertTrue(testLResultIsOverflow(-21) == Long.MIN_VALUE);\n+            Asserts.assertTrue(testLResultIsUnderflow(2) == Long.MAX_VALUE);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestSubIdealC0Minus_YPlusC1_.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -31,1 +31,1 @@\n- * @bug 8259609\n+ * @bug 8259609 8276116\n@@ -44,2 +44,2 @@\n-    @IR(counts = { IRNode.LOOP, \"1\"})\n-    @IR(failOn = { IRNode.COUNTEDLOOP})\n+    @IR(counts = { IRNode.LOOP, \"1\" })\n+    @IR(failOn = { IRNode.COUNTEDLOOP })\n@@ -63,0 +63,36 @@\n+\n+    @Test\n+    @IR(counts = { IRNode.LOOP, \"1\" })\n+    @IR(failOn = { IRNode.COUNTEDLOOP })\n+    public static void testStridePosScalePosInIntLoop1(int start, int stop, long length, long offset) {\n+        final long scale = 2;\n+        final int stride = 1;\n+\n+        \/\/ Same but with int loop\n+        for (int i = start; i < stop; i += stride) {\n+            Objects.checkIndex(scale * i + offset, length);\n+        }\n+    }\n+\n+    @Run(test = \"testStridePosScalePosInIntLoop1\")\n+    private void testStridePosScalePosInIntLoop1_runner() {\n+        testStridePosScalePosInIntLoop1(0, 100, 200, 0);\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.LOOP, \"1\" })\n+    @IR(failOn = { IRNode.COUNTEDLOOP })\n+    public static void testStridePosScalePosInIntLoop2(int start, int stop, long length, long offset) {\n+        final int scale = 2;\n+        final int stride = 1;\n+\n+        \/\/ Same but with int loop\n+        for (int i = start; i < stop; i += stride) {\n+            Objects.checkIndex(scale * i + offset, length);\n+        }\n+    }\n+\n+    @Run(test = \"testStridePosScalePosInIntLoop2\")\n+    private void testStridePosScalePosInIntLoop2_runner() {\n+        testStridePosScalePosInIntLoop2(0, 100, 200, 0);\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestLongRangeChecks.java","additions":39,"deletions":3,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2.irTests;\n+\n+import compiler.lib.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @bug 8277850\n+ * @summary C2: optimize mask checks in counted loops\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.irTests.TestShiftAndMask\n+ *\/\n+\n+public class TestShiftAndMask {\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    @IR(failOn = { IRNode.AND_I, IRNode.LSHIFT_I })\n+    public static int shiftMaskInt(int i) {\n+        return (i << 2) & 3; \/\/ transformed to: return 0;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    @IR(failOn = { IRNode.AND_L, IRNode.LSHIFT_L })\n+    public static long shiftMaskLong(long i) {\n+        return (i << 2) & 3; \/\/ transformed to: return 0;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    @IR(counts = { IRNode.AND_I, \"1\" })\n+    @IR(failOn = { IRNode.ADD_I, IRNode.LSHIFT_I })\n+    public static int addShiftMaskInt(int i, int j) {\n+        return (j + (i << 2)) & 3; \/\/ transformed to: return j & 3;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    @IR(counts = { IRNode.AND_L, \"1\" })\n+    @IR(failOn = { IRNode.ADD_L, IRNode.LSHIFT_L })\n+    public static long addShiftMaskLong(long i, long j) {\n+        return (j + (i << 2)) & 3; \/\/ transformed to: return j & 3;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    @IR(failOn = { IRNode.AND_I, IRNode.ADD_I, IRNode.LSHIFT_I })\n+    public static int addShiftMaskInt2(int i, int j) {\n+        return ((j << 2) + (i << 2)) & 3; \/\/ transformed to: return 0;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    @IR(failOn = { IRNode.AND_L, IRNode.ADD_L, IRNode.LSHIFT_L })\n+    public static long addShiftMaskLong2(long i, long j) {\n+        return ((j << 2) + (i << 2)) & 3; \/\/ transformed to: return 0;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    @IR(failOn = { IRNode.AND_L, IRNode.LSHIFT_I })\n+    public static long shiftConvMask(int i) {\n+        return ((long)(i << 2)) & 3; \/\/ transformed to: return 0;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    @IR(counts = { IRNode.AND_L, \"1\" })\n+    @IR(failOn = { IRNode.ADD_L, IRNode.LSHIFT_I, IRNode.CONV_I2L })\n+    public static long addShiftConvMask(int i, long j) {\n+        return (j + (i << 2)) & 3; \/\/ transformed to: return j & 3;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    @IR(failOn = { IRNode.AND_L, IRNode.ADD_L, IRNode.LSHIFT_L })\n+    public static long addShiftConvMask2(int i, int j) {\n+        return (((long)(j << 2)) + ((long)(i << 2))) & 3; \/\/ transformed to: return 0;\n+    }\n+\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestShiftAndMask.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -136,0 +136,8 @@\n+    public static final String AND_I = START + \"AndI\" + MID + END;\n+    public static final String AND_L = START + \"AndL\" + MID + END;\n+    public static final String LSHIFT_I = START + \"LShiftI\" + MID + END;\n+    public static final String LSHIFT_L = START + \"LShiftL\" + MID + END;\n+    public static final String ADD_I = START + \"AddI\" + MID + END;\n+    public static final String ADD_L = START + \"AddL\" + MID + END;\n+    public static final String CONV_I2L = START + \"ConvI2L\" + MID + END;\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277529\n+ * @summary RangeCheck should not be moved out of a loop if a node on the data input chain for the bool is dependent\n+ *          on the projection into the loop (after the predicates).\n+ * @run main\/othervm -Xbatch -XX:CompileCommand=compileonly,compiler.loopopts.TestDepBetweenLoopAndPredicate::test*\n+ *                   compiler.loopopts.TestDepBetweenLoopAndPredicate\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class TestDepBetweenLoopAndPredicate {\n+    static int x, y, z;\n+    static boolean flag;\n+    static int[] iArrFld = new int[25];\n+    static int[] iArrFld2 = new int[5];\n+    static int limit = 5;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10000; i++) {\n+            flag = !flag;\n+            test();\n+        }\n+\n+        for (int i = 0; i < 5000; i++) {\n+            flag = !flag;\n+            test2();\n+            test3();\n+            test4();\n+            test5();\n+        }\n+    }\n+\n+    public static void test()  {\n+        int[] iArr = new int[20];\n+        System.arraycopy(iArrFld, x, iArr, y, 18);\n+\n+        if (flag) {\n+            return;\n+        }\n+\n+        for (int i = 0; i < limit; i++) {\n+            iArr[19]++;\n+        }\n+    }\n+\n+    public static void test2() {\n+        for (int i = 0; i < limit; i++) {\n+            int[] iArr = new int[20];\n+            System.arraycopy(iArrFld, x, iArr, y, 18);\n+\n+            if (flag) {\n+                return;\n+            }\n+\n+            for (int j = i; j < limit; j++) {\n+                x = iArrFld[iArr[19]]; \/\/ No new offset node created\n+                iArr[19]++;\n+            }\n+        }\n+    }\n+\n+    public static void test3() {\n+        for (int i = 0; i < limit; i++) {\n+            int[] iArr = new int[20];\n+            System.arraycopy(iArrFld, x, iArr, y, 18);\n+\n+            if (flag) {\n+                return;\n+            }\n+\n+            for (int j = i + 1; j < limit; j++) {\n+                x = iArrFld[iArr[19]]; \/\/ New offset node created\n+                iArr[19]++;\n+            }\n+        }\n+    }\n+\n+    public static void test4() {\n+        for (int i = 0; i < limit; i++) {\n+            int[] iArr = new int[20];\n+            System.arraycopy(iArrFld, x, iArr, y, 18);\n+\n+            if (flag) {\n+                return;\n+            }\n+\n+            for (int j = i + 1 + z; j < limit; j++) {\n+                x = iArrFld[iArr[19]]; \/\/ New offset node created\n+                iArr[19]++;\n+            }\n+        }\n+    }\n+\n+    public static void test5() {\n+        for (int i = 0; i < limit; i++) {\n+            int[] iArr = new int[20];\n+            System.arraycopy(iArrFld, x, iArr, y, 18);\n+\n+            if (flag) {\n+                return;\n+            }\n+\n+            for (int j = i + 1 + z; j < limit; j++) {\n+                x = iArrFld[iArr[19]]; \/\/ New offset node created\n+                iArr[19]++;\n+                y += iArrFld2[3]; \/\/ Range check removed because not dependent on projection into the loop\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDepBetweenLoopAndPredicate.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @bug 8275610\n+ * @summary Null check for field access of object floats above null check resulting in a segfault.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -Xbatch -XX:CompileCommand=compileonly,compiler.loopopts.TestEliminateNullCheckWithSplitIf::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=42 compiler.loopopts.TestEliminateNullCheckWithSplitIf\n+ * @run main\/othervm -Xbatch -XX:CompileCommand=compileonly,compiler.loopopts.TestEliminateNullCheckWithSplitIf::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:+StressIGVN compiler.loopopts.TestEliminateNullCheckWithSplitIf\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class TestEliminateNullCheckWithSplitIf {\n+    public static int[] iArrFld = new int[20];\n+    public static int[] iArrFld2 = new int[20];\n+    public static int iFld = 10;\n+    public static MyClass obj;\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 10000; i++) {\n+            obj = (i % 100 == 0 ? null : new MyClass());\n+            test();\n+        }\n+    }\n+\n+    \/\/ The field access obj.iFld requires a null check NC3 and adds a not-null CastPP node on the succeeded projection.\n+    \/\/ In the first IGVN after parsing, the null check NC3 can be subsumed by the explicit null check NC2.\n+    \/\/ (done in IfNode::simple_subsuming()). The Bool node of NC2 is also shared with the same null check NC1 earlier.\n+    \/\/ However, C2 cannot remove the null check NC2, yet, because the IR in between the two checks are too complex\n+    \/\/ (IfNode::search_identical() fails).\n+    \/\/ Now, loopopts are applied:\n+    \/\/ (1) First, the split if optimization is done. It recognizes that NC1 and NC2 are back to back null checks and removes\n+    \/\/ the null check NC2 by splitting it through the region R which is removed afterwards. In this process, control dependent\n+    \/\/ data nodes on the out projections of NC2 end up at the new regions R1\/R2 created for each projection for R. They get\n+    \/\/ the last nodes of the if and else block as input. For this example, R1 is a control input to the CastPP node which\n+    \/\/ will merge both true projections.\n+    \/\/ (2) Later in loop opts, the loop L is transformed into normal code and y will become a constant 1.\n+    \/\/ After loopopts, another round of IGVN is done:\n+    \/\/ (These steps also depend on the order in which they are applied in order to trigger the bug)\n+    \/\/ (1) The region R is removed because one path is dead (a result of the split if optimization).\n+    \/\/ (2) The new If node added by the above split if optimization is also folded. This rewires the CastPP node to\n+    \/\/ the last control node in the If block which is the true projection of range check RC2. Up until now, the CastPP\n+    \/\/ is still after the null check NC1.\n+    \/\/ (3) The range check RC2 is removed because the range check RC1 already covers this range (see RangeCheck::Ideal()).\n+    \/\/ All data nodes which are control dependent on RC2 will be rewired to the dominating range check RC1, including\n+    \/\/ the non-null CastPP node - which now has a control input above the null check NC1. This also means that the field\n+    \/\/ load obj.iFld now has the same early control as the CastPP (CastPP -> AddP -> LoadI). Using StressGCM can\n+    \/\/ now schedule the obj.iFld load before the null check NC1 because the early control allows it which leads to a\n+    \/\/ segmentation fault if obj is null.\n+    public static void test() {\n+        int x = iArrFld[17]; \/\/ Emits range check RC1\n+        if (obj != null) { \/\/ Null check NC1\n+            int y = 0;\n+            for (int i = 0; i < 1; i++) { \/\/ Loop L\n+                y++;\n+            }\n+            \/\/ Use additional loop to keep the rangecheck for iArrFld[y] in before loopopts.\n+            \/\/ y will become constant 1 but only once the loop above is removed in loopopts.\n+            x = iArrFld[y]; \/\/ Emits range check RC2\n+        } else {\n+            x = iArrFld2[18];\n+        }\n+        \/\/ Region R merging the if and else paths above.\n+        if (obj != null) { \/\/ Null check NC2\n+            x = iArrFld2[obj.iFld]; \/\/ Emits Null check NC3 for obj.iFld\n+        }\n+    }\n+}\n+\n+class MyClass {\n+    int iFld;\n+}\n+\n+\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestEliminateNullCheckWithSplitIf.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8259609\n+ * @bug 8259609 8276116\n@@ -35,1 +35,1 @@\n- * @run main\/othervm -ea -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-BackgroundCompilation TestLongRangeCheck\n+ * @run main\/othervm -ea -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-BackgroundCompilation -XX:-UseOnStackReplacement TestLongRangeCheck\n@@ -196,0 +196,109 @@\n+\n+        test(\"testStridePosScalePosInIntLoop\", 0, 100, 100, 0);\n+\n+        test(\"testStrideNegScaleNegInIntLoop\", 0, 100, 100, 100);\n+\n+        test(\"testStrideNegScalePosInIntLoop\", 0, 100, 100, 0);\n+\n+        test(\"testStridePosScaleNegInIntLoop\", 0, 100, 100, 99);\n+\n+        test(\"testStridePosScalePosNotOneInIntLoop\", 0, 100, 1090, 0);\n+\n+        test(\"testStrideNegScaleNegNotOneInIntLoop\", 0, 100, 1090, 1100);\n+\n+        test(\"testStrideNegScalePosNotOneInIntLoop\", 0, 100, 1090, 0);\n+\n+        test(\"testStridePosScaleNegNotOneInIntLoop\", 0, 100, 1090, 1089);\n+\n+        v = ((long)Integer.MAX_VALUE \/ 10000) * 9999;\n+\n+        test(\"testStridePosNotOneScalePosInIntLoop\", -v, v, v * 4, 2 * v);\n+\n+        test(\"testStrideNegNotOneScaleNegInIntLoop\", -v, v, v * 4, 2 * v);\n+\n+        test(\"testStrideNegNotOneScalePosInIntLoop\", -v, v, v * 4, 2 * v);\n+\n+        test(\"testStridePosNotOneScaleNegInIntLoop\", -v, v, v * 4, 2 * v - 1);\n+\n+        \/\/ offset causes overflow\n+        {\n+            Method m = newClassLoader().loadClass(\"TestLongRangeCheck\").getDeclaredMethod(\"testStridePosScalePosInIntLoop\", long.class, long.class, long.class, long.class);\n+            m.invoke(null, 0, 100, 100, 0);\n+            compile(m);\n+\n+            m.invoke(null, 0, 100, 100, 0);\n+            assertIsCompiled(m);\n+            try {\n+                m.invoke(null, 0, 100, 100, Long.MAX_VALUE - 50);\n+                throw new RuntimeException(\"should have thrown\");\n+            } catch(InvocationTargetException e) {\n+                if (!(e.getCause() instanceof IndexOutOfBoundsException)) {\n+                    throw new RuntimeException(\"unexpected exception\");\n+                }\n+            }\n+            assertIsNotCompiled(m);\n+        }\n+        \/\/ no spurious deopt if the range check doesn't fail because not executed\n+        {\n+            Method m = newClassLoader().loadClass(\"TestLongRangeCheck\").getDeclaredMethod(\"testStridePosScalePosConditional\", long.class, long.class, long.class, long.class, long.class, long.class);\n+            m.invoke(null, 0, 100, 100, 0, 0, 100);\n+            compile(m);\n+\n+            m.invoke(null, 0, 100, 100, -50, 50, 100);\n+            assertIsCompiled(m);\n+        }\n+        {\n+            Method m = newClassLoader().loadClass(\"TestLongRangeCheck\").getDeclaredMethod(\"testStridePosScalePosConditional\", long.class, long.class, long.class, long.class, long.class, long.class);\n+            m.invoke(null, 0, 100, 100, 0, 0, 100);\n+            compile(m);\n+\n+            m.invoke(null, 0, 100, Long.MAX_VALUE, Long.MAX_VALUE - 50, 0, 50);\n+            assertIsCompiled(m);\n+        }\n+\n+        test(\"testStridePosScalePosNotOneInIntLoop2\", 0, 100, 1090, 0);\n+\n+        test(\"testStrideNegScaleNegNotOneInIntLoop2\", 0, 100, 1090, 1100);\n+\n+        test(\"testStrideNegScalePosNotOneInIntLoop2\", 0, 100, 1090, 0);\n+\n+        test(\"testStridePosScaleNegNotOneInIntLoop2\", 0, 100, 1090, 1089);\n+\n+        {\n+            Method m = newClassLoader().loadClass(\"TestLongRangeCheck\").getDeclaredMethod(\"testStridePosScalePosInIntLoopOverflow\", long.class, long.class, long.class, long.class);\n+            long stride = 1 << 14;\n+            long scale = 1 << 15;\n+            long offset = stride * scale * 4;\n+            long length = offset + stride * scale * 3 + 1;\n+            long stop = stride * 5;\n+\n+            m.invoke(null, 0, stop, length, offset);\n+            compile(m);\n+\n+            m.invoke(null, 0, stop, length, offset);\n+            \/\/ deoptimizes even though no range check fails\n+        }\n+        {\n+            Method m = newClassLoader().loadClass(\"TestLongRangeCheck\").getDeclaredMethod(\"testStridePosScalePosInIntLoopOverflow\", long.class, long.class, long.class, long.class);\n+            long stride = 1 << 14;\n+            long scale = 1 << 15;\n+            long offset = stride * scale * 4;\n+            long length = offset + stride * scale * 3 + 1;\n+            long stop = stride * 5;\n+\n+            m.invoke(null, 0, stop, length, offset);\n+            compile(m);\n+\n+            offset = 0;\n+            stop = stride * 5;\n+\n+            try {\n+                m.invoke(null, 0, stop, length, offset);\n+                throw new RuntimeException(\"should have thrown\");\n+            } catch(InvocationTargetException e) {\n+                if (!(e.getCause() instanceof IndexOutOfBoundsException)) {\n+                    throw new RuntimeException(\"unexpected exception\");\n+                }\n+            }\n+            assertIsNotCompiled(m);\n+        }\n@@ -304,0 +413,173 @@\n+\n+    private static void checkInputs(long... inputs) {\n+        for (int i = 0; i < inputs.length; i++) {\n+            if ((long)((int)inputs[i]) != inputs[i]) {\n+                throw new RuntimeException(\"bad arguments\");\n+            }\n+        }\n+    }\n+\n+    public static void testStridePosScalePosInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = 1;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegScaleNegInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = -1;\n+        final int stride = 1;\n+        for (int i = (int)stop; i > (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegScalePosInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = 1;\n+        final int stride = 1;\n+        for (int i = (int)(stop-1); i >= (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosScaleNegInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = -1;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosScalePosNotOneInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = 11;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegScaleNegNotOneInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = -11;\n+        final int stride = 1;\n+        for (int i = (int)stop; i > (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegScalePosNotOneInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = 11;\n+        final int stride = 1;\n+        for (int i = (int)(stop-1); i >= (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosScaleNegNotOneInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = -11;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosNotOneScalePosInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = 2;\n+        final int stride = Integer.MAX_VALUE \/ 10000;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegNotOneScaleNegInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = -2;\n+        final int stride = Integer.MAX_VALUE \/ 10000;\n+        for (int i = (int)stop; i > (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegNotOneScalePosInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = 2;\n+        final int stride = Integer.MAX_VALUE \/ 10000;\n+        for (int i = (int)(stop-1); i >= (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosNotOneScaleNegInIntLoop(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final long scale = -2;\n+        final int stride = Integer.MAX_VALUE \/ 10000;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosScalePosConditionalInIntLoop(long start, long stop, long length, long offset, long start2, long stop2) {\n+        checkInputs(start, stop, start2, stop2);\n+        Preconditions.checkIndex(0, length, null);\n+        final long scale = 1;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            if (i >= (int)start2 && i < (int)stop2) {\n+                Preconditions.checkIndex(scale * i + offset, length, null);\n+            }\n+        }\n+    }\n+\n+    public static void testStridePosScalePosNotOneInIntLoop2(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final int scale = 11;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegScaleNegNotOneInIntLoop2(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final int scale = -11;\n+        final int stride = 1;\n+        for (int i = (int)stop; i > (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStrideNegScalePosNotOneInIntLoop2(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final int scale = 11;\n+        final int stride = 1;\n+        for (int i = (int)(stop-1); i >= (int)start; i -= stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosScaleNegNotOneInIntLoop2(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final int scale = -11;\n+        final int stride = 1;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n+\n+    public static void testStridePosScalePosInIntLoopOverflow(long start, long stop, long length, long offset) {\n+        checkInputs(start, stop);\n+        final int scale = 1 << 15;\n+        final int stride = 1 << 14;\n+        for (int i = (int)start; i < (int)stop; i += stride) {\n+            Preconditions.checkIndex(scale * i + offset, length, null);\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestLongRangeCheck.java","additions":284,"deletions":2,"binary":false,"changes":286,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- *                   -XX:+IgnoreUnrecognizedVMOptions -XX:+TraceDeoptimization\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+TraceDeoptimization\n","filename":"test\/hotspot\/jtreg\/compiler\/uncommontrap\/TraceDeoptimizationNoRealloc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,0 +24,4 @@\n+import java.util.Arrays;\n+import java.util.ArrayList;\n+\n+import jdk.test.lib.Platform;\n@@ -42,12 +46,11 @@\n-    public static final String[][] DEPRECATED_OPTIONS = {\n-        \/\/ deprecated non-alias flags:\n-        {\"MaxGCMinorPauseMillis\",     \"1032\"},\n-        {\"MaxRAMFraction\",            \"8\"},\n-        {\"MinRAMFraction\",            \"2\"},\n-        {\"InitialRAMFraction\",        \"64\"},\n-        {\"TLABStats\",                 \"false\"},\n-        {\"AllowRedefinitionToAddDeleteMethods\", \"true\"},\n-        {\"UseSharedSpaces\",           \"false\"},\n-        {\"RequireSharedSpaces\",       \"false\"},\n-        {\"DumpSharedSpaces\",          \"false\"},\n-        {\"DynamicDumpSharedSpaces\",   \"false\"},\n+    public static final String[][] DEPRECATED_OPTIONS;\n+    static {\n+        ArrayList<String[]> deprecated = new ArrayList(\n+          Arrays.asList(new String[][] {\n+            \/\/ deprecated non-alias flags:\n+            {\"MaxGCMinorPauseMillis\",     \"1032\"},\n+            {\"MaxRAMFraction\",            \"8\"},\n+            {\"MinRAMFraction\",            \"2\"},\n+            {\"InitialRAMFraction\",        \"64\"},\n+            {\"TLABStats\",                 \"false\"},\n+            {\"AllowRedefinitionToAddDeleteMethods\", \"true\"},\n@@ -55,3 +58,6 @@\n-        \/\/ deprecated alias flags (see also aliased_jvm_flags):\n-        {\"DefaultMaxRAMFraction\", \"4\"},\n-        {\"CreateMinidumpOnCrash\", \"false\"}\n+            \/\/ deprecated alias flags (see also aliased_jvm_flags):\n+            {\"DefaultMaxRAMFraction\", \"4\"},\n+            {\"CreateMinidumpOnCrash\", \"false\"}\n+          }\n+        ));\n+        DEPRECATED_OPTIONS = deprecated.toArray(new String[][]{});\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":21,"deletions":15,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -171,0 +171,23 @@\n+        pb.command(new String[] { JDKToolFinder.getJDKTool(\"jcmd\"), pid, \"VM.metaspace\", \"chunkfreelist\"});\n+        \/\/ Output should look somewhat like this...\n+        \/\/ vvvvvvvvvvvvvvvv\n+        \/\/ Chunk freelist details:\n+        \/\/ Non-Class:\n+        \/\/ cm non-class-space: 5 chunks, total word size: 402944.\n+        \/\/         -- List[lv00]: empty\n+        \/\/         -- List[lv01]:  - <Chunk @0x00007f925c124090, state f, base 0x00007f9208600000, level lv01 (262144 words), used 0 words, committed 0 words.> - total : 1 chunks.\n+        \/\/         -- List[lv02]:  - <Chunk @0x00007f925c1240d8, state f, base 0x00007f9208500000, level lv02 (131072 words), used 0 words, committed 0 words.> - total : 1 chunks.\n+        \/\/         -- List[lv03]: empty\n+        \/\/ .....\n+        \/\/\n+        \/\/ total chunks: 5, total word size: 402944.\n+        \/\/ ^^^^^^^^^^^^^^^^^\n+        \/\/ .... but the actual number of chunks in the freelist is difficult to predict and may be low or zero since\n+        \/\/  no class unloading happened yet.\n+        output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(\"Chunk freelist details:\");\n+        \/\/ ... but we should see at least one one chunk somewhere, the list should never be empty.\n+        output.shouldMatch(\".*-- List\\\\[lv00\\\\].*\");\n+        output.shouldMatch(\".*total chunks.*total word size.*\");\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/PrintMetaspaceDcmd.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8059100\n- * @summary Test that you can decrease NMT tracking level but not increase it.\n- * @modules java.base\/jdk.internal.misc\n- * @library \/test\/lib\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:NativeMemoryTracking=detail ChangeTrackingLevel\n- *\/\n-\n-import sun.hotspot.WhiteBox;\n-\n-public class ChangeTrackingLevel {\n-\n-    public static WhiteBox wb = WhiteBox.getWhiteBox();\n-    public static void main(String args[]) throws Exception {\n-        boolean testChangeLevel = wb.NMTChangeTrackingLevel();\n-        if (testChangeLevel) {\n-            System.out.println(\"NMT level change test passed.\");\n-        } else {\n-            \/\/ it also fails if the VM asserts.\n-            throw new RuntimeException(\"NMT level change test failed\");\n-        }\n-    }\n-};\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/ChangeTrackingLevel.java","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    static final String REPLACE_OK = \"Replaced class java\/lang\/invoke\/DirectMethodHandle$Holder\";\n+    static final String REPLACE_OK = \"Regenerated class java\/lang\/invoke\/DirectMethodHandle$Holder\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassListWithLF.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,1 +115,2 @@\n-        String[] execArgs = {\"-Xlog:cds=debug\", \"-cp\", jarFile, \"Hello\"};\n+        \/\/ disable VerifySharedSpaces, it may be turned on by jtreg args\n+        String[] execArgs = {\"-Xlog:cds=debug\", \"-XX:-VerifySharedSpaces\", \"-cp\", jarFile, \"Hello\"};\n@@ -175,1 +176,1 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), 0x00000000);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), 0x3FFFFFFF);\n@@ -183,0 +184,11 @@\n+        System.out.println(\"\\n2e. Corrupt _version, should fail\\n\");\n+        String modVersion2 = startNewArchive(\"modify-version2\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, modVersion2);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), 0x00000000);\n+        output = shareAuto ? TestCommon.execAuto(execArgs) : TestCommon.execCommon(execArgs);\n+        output.shouldContain(\"Cannot handle shared archive file version 0. Must be at least 12\");\n+        output.shouldNotContain(\"Checksum verification failed\");\n+        if (shareAuto) {\n+            output.shouldContain(HELLO_WORLD);\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -33,1 +33,2 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI ArchiveConsistency\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI ArchiveConsistency on\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI ArchiveConsistency auto\n@@ -43,0 +44,2 @@\n+    private static final String HELLO_WORLD = \"Hello World\";\n+    private static boolean isAuto;\n@@ -45,0 +48,5 @@\n+        if (args.length != 1 || (!args[0].equals(\"on\") && !args[0].equals(\"auto\"))) {\n+            throw new RuntimeException(\"Must have one arg either of \\\"on\\\" or \\\"auto\\\"\");\n+        }\n+        isAuto = args[0].equals(\"auto\");\n+        setAutoMode(isAuto);\n@@ -56,0 +64,2 @@\n+    static boolean VERIFY_CRC = false;\n+\n@@ -57,1 +67,1 @@\n-                       String jarName, String mainClassName, int exitValue,\n+                       String jarName, String mainClassName, int expectedExitValue,\n@@ -62,1 +72,1 @@\n-                \"-XX:+VerifySharedSpaces\",\n+                VERIFY_CRC ? \"-XX:+VerifySharedSpaces\" : \"-XX:-VerifySharedSpaces\",\n@@ -66,1 +76,1 @@\n-        if (exitValue == 0) {\n+        if (expectedExitValue == 0) {\n@@ -71,0 +81,1 @@\n+                output.shouldContain(HELLO_WORLD);\n@@ -77,0 +88,1 @@\n+                output.shouldContain(\"Unable to use shared archive\");\n@@ -81,0 +93,4 @@\n+    private static void startTest(String str) {\n+        System.out.println(\"\\n\" + str);\n+    }\n+\n@@ -97,2 +113,1 @@\n-        \/\/ 1. Modify the CRC values in the header of the top archive.\n-        System.out.println(\"\\n1. Modify the CRC values in the header of the top archive\");\n+        startTest(\"1. Modify the CRC values in the header of the top archive\");\n@@ -103,0 +118,1 @@\n+        VERIFY_CRC = true;\n@@ -104,3 +120,3 @@\n-               appJar, mainClass, 1,\n-               new String[] {\"Header checksum verification failed\",\n-                             \"Unable to use shared archive\"});\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Header checksum verification failed\");\n+        VERIFY_CRC = false;\n@@ -108,2 +124,1 @@\n-        \/\/ 2. Make header size larger than the archive size\n-        System.out.println(\"\\n2. Make header size larger than the archive size\");\n+        startTest(\"2. Make header size larger than the archive size\");\n@@ -114,3 +129,2 @@\n-               appJar, mainClass, 1,\n-               new String[] {\"_header_size should be equal to _base_archive_name_offset plus _base_archive_name_size\",\n-                             \"Unable to use shared archive\"});\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Archive file header larger than archive file\");\n@@ -118,2 +132,1 @@\n-        \/\/ 3. Make base archive path offset beyond of header size\n-        System.out.println(\"\\n3. Make base archive path offset beyond of header size.\");\n+        startTest(\"3. Make base archive name offset beyond of header size.\");\n@@ -126,4 +139,2 @@\n-               appJar, mainClass, 1,\n-               new String[] {\"_header_size should be equal to _base_archive_name_offset plus _base_archive_name_size\",\n-                             \"The shared archive file has an incorrect header size\",\n-                             \"Unable to use shared archive\"});\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Invalid base_archive_name offset\/size (out of range)\");\n@@ -131,2 +142,1 @@\n-        \/\/ 4. Make base archive path offset points to middle of name size\n-        System.out.println(\"\\n4. Make base archive path offset points to middle of name size\");\n+        startTest(\"4. Make base archive name offset points to middle of the base archive name\");\n@@ -140,4 +150,2 @@\n-               appJar, mainClass, 1,\n-               new String[] {\"An error has occurred while processing the shared archive file.\",\n-                             \"Header checksum verification failed\",\n-                             \"Unable to use shared archive\"});\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Base archive name is damaged\");\n@@ -145,2 +153,1 @@\n-        \/\/ 5. Make base archive name not terminated with '\\0'\n-        System.out.println(\"\\n5. Make base archive name not terminated with '\\0'\");\n+        startTest(\"5. Make base archive name not terminated with '\\0'\");\n@@ -155,3 +162,2 @@\n-               appJar, mainClass, 1,\n-               new String[] {\"Base archive name is damaged\",\n-                             \"Header checksum verification failed\"});\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Base archive name is damaged\");\n@@ -159,2 +165,1 @@\n-        \/\/ 6. Modify base archive name to a file that doesn't exist.\n-        System.out.println(\"\\n6. Modify base archive name to a file that doesn't exist\");\n+        startTest(\"6. Modify base archive name to a file that doesn't exist\");\n@@ -173,3 +178,27 @@\n-               appJar, mainClass, 1,\n-               new String[] {\"Base archive \" + badName + \" does not exist\",\n-                             \"Header checksum verification failed\"});\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Base archive \" + badName + \" does not exist\");\n+\n+        \/\/ Following three tests:\n+        \/\/   -XX:SharedArchiveFile=non-exist-base.jsa:top.jsa\n+        \/\/   -XX:SharedArchiveFile=base.jsa:non-exist-top.jsa\n+        \/\/   -XX:SharedArchiveFile=non-exist-base.jsa:non-exist-top.jsa\n+        startTest(\"7. Non-exist base archive\");\n+        String nonExistBase = \"non-exist-base.jsa\";\n+        File nonExistBaseFile = new File(nonExistBase);\n+        nonExistBaseFile.delete();\n+        runTwo(nonExistBase, topArchiveName,\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Specified shared archive not found (\" + nonExistBase + \")\");\n+\n+        startTest(\"8. Non-exist top archive\");\n+        String nonExistTop = \"non-exist-top.jsa\";\n+        File nonExistTopFile = new File(nonExistTop);\n+        nonExistTopFile.delete();\n+        runTwo(baseArchiveName, nonExistTop,\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Specified shared archive not found (\" + nonExistTop + \")\");\n+\n+        startTest(\"9. nost-exist-base and non-exist-top\");\n+        runTwo(nonExistBase, nonExistTop,\n+               appJar, mainClass, isAuto ? 0 : 1,\n+               \"Specified shared archive not found (\" + nonExistBase + \")\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArchiveConsistency.java","additions":65,"deletions":36,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+    private static boolean autoMode = false;  \/\/ -Xshare:auto\n@@ -50,0 +51,1 @@\n+    public static void setAutoMode(boolean val) { autoMode = val; }\n@@ -186,1 +188,1 @@\n-            \"-Xshare:on\",\n+            autoMode ? \"-Xshare:auto\" : \"-Xshare:on\",\n@@ -205,1 +207,1 @@\n-            \"-Xshare:on\",\n+            autoMode ? \"-Xshare:auto\" : \"-Xshare:on\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicArchiveTestBase.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-                \"-Xlog:class+load,class+loader+constraints\",\n+                \"-Xlog:cds=debug,class+load,class+loader+constraints\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/loaderConstraints\/DynamicLoaderConstraintsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,13 @@\n+        \/\/ Wait until all threads have reached their blocked or timed wait state\n+        while ((classLock1.getState() != Thread.State.BLOCKED &&\n+                classLock1.getState() != Thread.State.TIMED_WAITING) ||\n+               (classLock2.getState() != Thread.State.BLOCKED &&\n+                classLock2.getState() != Thread.State.TIMED_WAITING) ||\n+               (objectLock.getState() != Thread.State.TIMED_WAITING) ||\n+               (primitiveLock.getState() != Thread.State.TIMED_WAITING)) {\n+            try {\n+                Thread.sleep(100);\n+            } catch (InterruptedException ex) {\n+            }\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/LingeredAppWithLock.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -51,0 +51,101 @@\n+\n+#if 1 \/\/ support for debug tracing\n+\n+#define LOG(...) \\\n+  { \\\n+    printf(__VA_ARGS__); \\\n+    fflush(stdout); \\\n+  }\n+\n+#define MAX_FRAME_COUNT_PRINT_STACK_TRACE 200\n+\n+static void\n+check_jvmti_status(JNIEnv* jni, jvmtiError err, const char* msg) {\n+  if (err != JVMTI_ERROR_NONE) {\n+    LOG(\"check_jvmti_status: JVMTI function returned error: %s (%d)\\n\", TranslateError(err), err);\n+    jni->FatalError(msg);\n+  }\n+}\n+\n+static void\n+deallocate(jvmtiEnv *jvmti, JNIEnv* jni, void* ptr) {\n+  jvmtiError err;\n+\n+  err = jvmti->Deallocate((unsigned char*)ptr);\n+  check_jvmti_status(jni, err, \"deallocate: error in JVMTI Deallocate call\");\n+}\n+\n+static char*\n+get_method_class_name(jvmtiEnv *jvmti, JNIEnv* jni, jmethodID method) {\n+  jclass klass = NULL;\n+  char*  cname = NULL;\n+  char*  result = NULL;\n+  jvmtiError err;\n+\n+  err = jvmti->GetMethodDeclaringClass(method, &klass);\n+  check_jvmti_status(jni, err, \"get_method_class_name: error in JVMTI GetMethodDeclaringClass\");\n+\n+  err = jvmti->GetClassSignature(klass, &cname, NULL);\n+  check_jvmti_status(jni, err, \"get_method_class_name: error in JVMTI GetClassSignature\");\n+\n+  size_t len = strlen(cname) - 2; \/\/ get rid of leading 'L' and trailing ';'\n+\n+  err = jvmti->Allocate((jlong)(len + 1), (unsigned char**)&result);\n+  check_jvmti_status(jni, err, \"get_method_class_name: error in JVMTI Allocate\");\n+\n+  strncpy(result, cname + 1, len); \/\/ skip leading 'L'\n+  result[len] = '\\0';\n+  deallocate(jvmti, jni, (void*)cname);\n+  return result;\n+}\n+\n+static void\n+print_method(jvmtiEnv *jvmti, JNIEnv* jni, jmethodID method, jint depth) {\n+  char*  cname = NULL;\n+  char*  mname = NULL;\n+  char*  msign = NULL;\n+  jvmtiError err;\n+\n+  cname = get_method_class_name(jvmti, jni, method);\n+\n+  err = jvmti->GetMethodName(method, &mname, &msign, NULL);\n+  check_jvmti_status(jni, err, \"print_method: error in JVMTI GetMethodName\");\n+\n+  LOG(\"%2d: %s: %s%s\\n\", depth, cname, mname, msign);\n+  fflush(0);\n+  deallocate(jvmti, jni, (void*)cname);\n+  deallocate(jvmti, jni, (void*)mname);\n+  deallocate(jvmti, jni, (void*)msign);\n+}\n+\n+static char*\n+get_thread_name(jvmtiEnv *jvmti, JNIEnv* jni, jthread thread) {\n+  jvmtiThreadInfo thr_info;\n+  jvmtiError err;\n+\n+  memset(&thr_info, 0, sizeof(thr_info));\n+  err = jvmti->GetThreadInfo(thread, &thr_info);\n+  check_jvmti_status(jni, err, \"get_thread_name: error in JVMTI GetThreadInfo call\");\n+\n+  return thr_info.name == NULL ? (char*)\"<Unnamed thread>\" : thr_info.name;\n+}\n+\n+static void\n+print_stack_trace(jvmtiEnv *jvmti, JNIEnv* jni, jthread thread) {\n+  jvmtiFrameInfo frames[MAX_FRAME_COUNT_PRINT_STACK_TRACE];\n+  char* tname = get_thread_name(jvmti, jni, thread);\n+  jint count = 0;\n+  jvmtiError err;\n+\n+  err = jvmti->GetStackTrace(thread, 0, MAX_FRAME_COUNT_PRINT_STACK_TRACE, frames, &count);\n+  check_jvmti_status(jni, err, \"print_stack_trace: error in JVMTI GetStackTrace\");\n+\n+  LOG(\"JVMTI Stack Trace for thread %s: frame count: %d\\n\", tname, count);\n+  for (int depth = 0; depth < count; depth++) {\n+    print_method(jvmti, jni, frames[depth].method, depth);\n+  }\n+  deallocate(jvmti, jni, (void*)tname);\n+  LOG(\"\\n\");\n+}\n+#endif \/\/ support for debug tracing\n+\n@@ -340,0 +441,3 @@\n+#ifdef DBG\n+            print_stack_trace(jvmti, env, thr_ptr);\n+#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadState\/thrstat002\/thrstat002.cpp","additions":104,"deletions":0,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -571,0 +571,1 @@\n+java\/lang\/management\/ThreadMXBean\/ThreadLists.java              8132785 generic-all\n@@ -733,1 +734,1 @@\n-# Several tests which fail on some hidpi systems\n+# Several tests which fail on some hidpi systems\/macosx12-aarch64 system\n@@ -737,0 +738,9 @@\n+javax\/swing\/text\/html\/StyleSheet\/bug4936917.java 8277816 macosx-aarch64\n+javax\/swing\/plaf\/metal\/MetalGradient\/8163193\/ButtonGradientTest.java  8277816 macosx-aarch64\n+javax\/swing\/JInternalFrame\/8160248\/JInternalFrameDraggingTest.java  8277816 macosx-aarch64\n+javax\/swing\/JInternalFrame\/8069348\/bug8069348.java 8277816 macosx-aarch64\n+java\/awt\/Robot\/HiDPIScreenCapture\/ScreenCaptureTest.java  8277816 macosx-aarch64\n+java\/awt\/Robot\/CheckCommonColors\/CheckCommonColors.java 8277816 macosx-aarch64\n+java\/awt\/ColorClass\/AlphaColorTest.java 8277816 macosx-aarch64\n+java\/awt\/AlphaComposite\/WindowAlphaCompositeTest.java 8277816 macosx-aarch64\n+\t\n@@ -743,0 +753,1 @@\n+javax\/swing\/JTree\/4908142\/bug4908142.java 8278348 macosx-aarch64\n@@ -828,0 +839,3 @@\n+tools\/jpackage\/share\/IconTest.java 8278233 macosx-x64\n+tools\/jpackage\/share\/MultiNameTwoPhaseTest.java 8278233 macosx-x64\n+\n","filename":"test\/jdk\/ProblemList.txt","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -77,1 +77,3 @@\n-    :jdk_jfr_tier3\n+    :jdk_svc \\\n+   -:jdk_svc_sanity \\\n+   -:svc_tools\n@@ -286,3 +288,0 @@\n-jdk_jfr_tier3 = \\\n-    jdk\/jfr\/event\/metadata\/TestLookForUntestedEvents.java\n-\n@@ -521,1 +520,17 @@\n-  \n+\n+#  This set of tests will be executed in an ipv6 only environment\n+\n+jdk_ipv6_only = \\\n+    :jdk_net \\\n+    :jdk_nio_networkchannel\n+\n+jdk_nio_networkchannel = \\\n+    java\/nio\/channels\/AsyncCloseAndInterrupt.java \\\n+    java\/nio\/channels\/AsynchronousServerSocketChannel \\\n+    java\/nio\/channels\/AsynchronousSocketChannel \\\n+    java\/nio\/channels\/DatagramChannel \\\n+    java\/nio\/channels\/ServerSocketChannel \\\n+    java\/nio\/channels\/SocketChannel \\\n+    java\/nio\/channels\/Selector \\\n+    java\/nio\/channels\/etc\n+\n@@ -570,0 +585,5 @@\n+# Test sets for running inside container environment\n+jdk_containers_extended = \\\n+    :jdk_io \\\n+    :jdk_nio \\\n+    :jdk_svc\n","filename":"test\/jdk\/TEST.groups","additions":25,"deletions":5,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,202 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8278312\n+ * @library \/test\/lib \/test\/jdk\/java\/net\/httpclient \/test\/jdk\/java\/net\/httpclient\/http2\/server\n+ * @build jdk.test.lib.net.SimpleSSLContext HttpServerAdapters Http2Handler\n+ *          jdk.test.lib.net.IPSupport\n+ *          Http2TestExchange\n+ *\n+ * @modules java.net.http\/jdk.internal.net.http.common\n+ *          java.net.http\/jdk.internal.net.http.frame\n+ *          java.net.http\/jdk.internal.net.http.hpack\n+ *          java.logging\n+ *          java.base\/sun.net.www.http\n+ *          java.base\/sun.net.www\n+ *          java.base\/sun.net\n+ *\n+ * @run main\/othervm SANTest\n+ * @summary Update SimpleSSLContext keystore to use SANs for localhost IP addresses\n+ *\/\n+\n+import com.sun.net.httpserver.*;\n+\n+import java.util.concurrent.*;\n+import java.io.*;\n+import java.net.*;\n+import java.net.http.*;\n+import java.nio.charset.StandardCharsets;\n+import javax.net.ssl.*;\n+import jdk.test.lib.net.SimpleSSLContext;\n+import jdk.test.lib.net.URIBuilder;\n+import jdk.test.lib.net.IPSupport;\n+\n+\/*\n+ * Will fail if the testkeys file belonging to SimpleSSLContext\n+ * does not have SAN entries for 127.0.0.1 or ::1\n+ *\/\n+public class SANTest implements HttpServerAdapters {\n+\n+    static SSLContext ctx;\n+\n+    static HttpServer getHttpsServer(InetSocketAddress addr, Executor exec, SSLContext ctx) throws Exception {\n+        HttpsServer server = HttpsServer.create(addr, 0);\n+        server.setExecutor(exec);\n+        server.setHttpsConfigurator(new HttpsConfigurator (ctx));\n+        return server;\n+    }\n+\n+    static final boolean hasIPv4 = IPSupport.hasIPv4();\n+    static final boolean hasIPv6 = IPSupport.hasIPv6();\n+\n+    static HttpTestServer initServer(boolean h2, InetAddress addr, SSLContext ctx,\n+                String sni, ExecutorService e) throws Exception {\n+        HttpTestServer s = null;\n+        InetSocketAddress ia = new InetSocketAddress (addr, 0);\n+        if ((addr instanceof Inet4Address) && !hasIPv4)\n+                return null;\n+        if ((addr instanceof Inet6Address) && !hasIPv6)\n+                return null;\n+\n+        if (!h2) {\n+            s = HttpTestServer.of(getHttpsServer(ia, e, ctx));\n+            HttpTestHandler h = new HttpTestEchoHandler();\n+            s.addHandler(h, \"\/test1\");\n+            s.start();\n+            return s;\n+        } else {\n+            s = HttpTestServer.of(new Http2TestServer(addr, sni, true, 0, e,\n+                        10, null, ctx, false));\n+            HttpTestHandler h = new HttpTestEchoHandler();\n+            s.addHandler(h, \"\/test1\");\n+            s.start();\n+            return s;\n+        }\n+    }\n+\n+    public static void main (String[] args) throws Exception {\n+        \/\/ Http\/1.1 servers\n+        HttpTestServer h1s1 = null;\n+        HttpTestServer h1s2 = null;\n+\n+        \/\/ Http\/2 servers\n+        HttpTestServer h2s1 = null;\n+        HttpTestServer h2s2 = null;\n+\n+        ExecutorService executor=null;\n+        try {\n+            System.out.print (\"SANTest: \");\n+            ctx = new SimpleSSLContext().get();\n+            executor = Executors.newCachedThreadPool();\n+\n+            InetAddress l1 = InetAddress.getByName(\"::1\");\n+            InetAddress l2 = InetAddress.getByName(\"127.0.0.1\");\n+\n+            h1s1 = initServer(false, l1, ctx, \"::1\", executor);\n+            h1s2 = initServer(false, l2, ctx, \"127.0.0.1\", executor);\n+\n+            h2s1 = initServer(true, l1, ctx, \"::1\", executor);\n+            h2s2 = initServer(true, l2, ctx, \"127.0.0.1\", executor);\n+\n+            test(\"127.0.0.1\", h1s2);\n+            test(\"::1\", h1s1);\n+            testNew(\"127.0.0.1\", h2s2, executor);\n+            testNew(\"::1\", h2s1, executor);\n+            System.out.println (\"OK\");\n+        } finally {\n+            if (h1s1 != null)\n+                h1s1.stop();\n+            if (h1s2 != null)\n+                h1s2.stop();\n+            if (h2s1 != null)\n+                h2s1.stop();\n+            if (h2s2 != null)\n+                h2s2.stop();\n+            if (executor != null)\n+                executor.shutdown ();\n+        }\n+    }\n+\n+    static void test (String host, HttpTestServer server) throws Exception {\n+        if (server == null)\n+            return;\n+        int port = server.getAddress().getPort();\n+        String body = \"Yellow world\";\n+        URL url = URIBuilder.newBuilder()\n+                 .scheme(\"https\")\n+                 .host(host)\n+                 .port(port)\n+                 .path(\"\/test1\/foo.txt\")\n+                 .toURL();\n+        System.out.println(\"URL = \" + url);\n+        HttpURLConnection urlc = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY);\n+        System.out.println(\"urlc = \" + urlc);\n+        if (urlc instanceof HttpsURLConnection) {\n+            HttpsURLConnection urlcs = (HttpsURLConnection) urlc;\n+            urlcs.setSSLSocketFactory (ctx.getSocketFactory());\n+        }\n+\n+        urlc.setRequestMethod(\"POST\");\n+        urlc.setDoOutput(true);\n+\n+        OutputStream os = urlc.getOutputStream();\n+        os.write(body.getBytes(StandardCharsets.ISO_8859_1));\n+        os.close();\n+        InputStream is = urlc.getInputStream();\n+        byte[] vv = is.readAllBytes();\n+        String ff = new String(vv, StandardCharsets.ISO_8859_1);\n+        System.out.println(\"resp = \" + ff);\n+        if (!ff.equals(body))\n+            throw new RuntimeException();\n+        is.close();\n+    }\n+\n+    static void testNew (String host, HttpTestServer server, Executor exec) throws Exception {\n+        if (server == null)\n+            return;\n+        int port = server.getAddress().getPort();\n+        String body = \"Red and Yellow world\";\n+        URI uri = URIBuilder.newBuilder()\n+                 .scheme(\"https\")\n+                 .host(host)\n+                 .port(port)\n+                 .path(\"\/test1\/foo.txt\")\n+                 .build();\n+\n+        HttpClient client = HttpClient.newBuilder()\n+                .sslContext(ctx)\n+                .executor(exec)\n+                .build();\n+        HttpRequest req = HttpRequest.newBuilder(uri)\n+                .version(HttpClient.Version.HTTP_2)\n+                .POST(HttpRequest.BodyPublishers.ofString(body))\n+                .build();\n+\n+        HttpResponse<String> resp = client.send(req, HttpResponse.BodyHandlers.ofString());\n+        System.out.println(\"resp = \" + resp.body());\n+        if (!resp.body().equals(body))\n+            throw new RuntimeException();\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/SANTest.java","additions":202,"deletions":0,"binary":false,"changes":202,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+ * @bug 8276806 8278463\n@@ -35,0 +36,1 @@\n+import java.util.Arrays;\n@@ -40,0 +42,11 @@\n+        int i = 123456;\n+        byte b = 12;\n+        short s = 45;\n+        char c = 'A';\n+        long l = 1234567890000L;\n+        float f = 3.14159f;\n+        double d = f * 2;\n+        boolean z = true;\n+        String string = \"The String\";\n+        PrimitivesTest prim = new PrimitivesTest();\n+        byte[] ba = {1, 2, 3, 4, 5, 6, 7};  \/\/ byte array to write\n@@ -41,16 +54,3 @@\n-        FileInputStream istream = null;\n-        FileOutputStream ostream = null;\n-        try {\n-            int i = 123456;\n-            byte b = 12;\n-            short s = 45;\n-            char c = 'A';\n-            long l = 1234567890000L;\n-            float f = 3.14159f;\n-            double d = f*2;\n-            boolean z = true;\n-            String string = \"The String\";\n-            PrimitivesTest prim = new PrimitivesTest();\n-\n-            ostream = new FileOutputStream(\"piotest1.tmp\");\n-            ObjectOutputStream p = new ObjectOutputStream(ostream);\n+        byte[] bytes;\n+        try (ByteArrayOutputStream ostream = new ByteArrayOutputStream();\n+             ObjectOutputStream p = new ObjectOutputStream(ostream)) {\n@@ -66,0 +66,3 @@\n+            p.write(ba); \/\/ for simple read(byte[])\n+            p.write(ba); \/\/ for readFully(byte[])\n+            p.write(ba, 0, ba.length - 2); \/\/ for readFully(byte[], 0, 7)\n@@ -71,0 +74,3 @@\n+            bytes = ostream.toByteArray();\n+\n+        }\n@@ -72,2 +78,2 @@\n-            istream = new FileInputStream(\"piotest1.tmp\");\n-            ObjectInputStream q = new ObjectInputStream(istream);\n+        ByteArrayInputStream istream = new ByteArrayInputStream(bytes);\n+        try (ObjectInputStream q = new ObjectInputStream(istream);) {\n@@ -83,0 +89,6 @@\n+            byte[] ba_readBuf = new byte[ba.length];\n+            int ba_readLen = q.read(ba_readBuf);\n+            byte[] ba_readFullyBuf = new byte[ba.length];\n+            int ba_readFullyLen = q.read(ba_readFullyBuf);\n+            byte[] ba_readFullySizedBuf = new byte[ba.length];\n+            int ba_readFullySizedLen = q.read(ba_readFullySizedBuf, 0, ba.length - 2);\n@@ -123,0 +135,4 @@\n+            checkArray(\"read(byte[])\", ba, ba.length, ba_readBuf, ba_readLen);\n+            checkArray(\"readFully(byte[])\", ba, ba.length, ba_readFullyBuf, ba_readFullyLen);\n+            checkArray(\"readFully(byte[], off, len)\", ba, ba.length - 2, ba_readFullySizedBuf, ba_readFullySizedLen);\n+\n@@ -147,1 +163,2 @@\n-            System.err.println(\"\\nInput remaining\");\n+            System.err.println(\"\\nBytes read: \" + (bytes.length - istream.available()) +\n+                    \", Input remaining: \" + istream.available());\n@@ -154,1 +171,1 @@\n-            } catch (Exception f) {\n+            } catch (Exception fex) {\n@@ -158,3 +175,8 @@\n-        } finally {\n-            if (istream != null) istream.close();\n-            if (ostream != null) ostream.close();\n+        }\n+    }\n+\n+    static void checkArray(String label, byte[] expected, int expectedLen, byte[] actual, int actualLen) {\n+        int mismatch = Arrays.mismatch(expected, 0, expectedLen, actual, 0, actualLen);\n+        if (actualLen != expectedLen || mismatch >= 0) {\n+            System.err.println(\"\\n\" + label + \":  expected \" + expectedLen + \" actual \" + actualLen + \", mismatch: \" + mismatch);\n+            throw new Error();\n","filename":"test\/jdk\/java\/io\/Serializable\/oldTests\/WritePrimitive.java","additions":46,"deletions":24,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8276422\n+ * @summary add command-line option to disable finalization\n+ * @run main\/othervm                         FinalizationOption yes\n+ * @run main\/othervm --finalization=enabled  FinalizationOption yes\n+ * @run main\/othervm --finalization=disabled FinalizationOption no\n+ *\/\n+public class FinalizationOption {\n+    static volatile boolean finalizerWasCalled = false;\n+\n+    @SuppressWarnings(\"deprecation\")\n+    protected void finalize() {\n+        finalizerWasCalled = true;\n+    }\n+\n+    static void create() {\n+        new FinalizationOption();\n+    }\n+\n+    \/**\n+     * Checks whether the finalizer thread is or is not running. The finalizer thread\n+     * is a thread in the root thread group whose named is \"Finalizer\".\n+     * @param expected boolean indicating whether a finalizer thread should exist\n+     * @return boolean indicating whether the expectation was met\n+     *\/\n+    static boolean checkFinalizerThread(boolean expected) {\n+        ThreadGroup root = Thread.currentThread().getThreadGroup();\n+        for (ThreadGroup parent = root;\n+             parent != null;\n+             root = parent, parent = root.getParent())\n+            ;\n+\n+        int nt = 100;\n+        Thread[] threads;\n+        while (true) {\n+            threads = new Thread[nt];\n+            nt = root.enumerate(threads);\n+            if (nt < threads.length)\n+                break;\n+            threads = new Thread[nt + 100];\n+        }\n+\n+        Thread ft = null;\n+        for (int i = 0; i < nt; i++) {\n+            if (\"Finalizer\".equals(threads[i].getName())) {\n+                ft = threads[i];\n+                break;\n+            }\n+        }\n+\n+        String msg = (ft == null) ? \"(none)\" : ft.toString();\n+        boolean passed = (ft != null) == expected;\n+        System.out.printf(\"Finalizer thread.    Expected: %s   Actual: %s   %s%n\",\n+            expected, msg, passed ? \"Passed.\" : \"FAILED!\");\n+        return passed;\n+    }\n+\n+    \/**\n+     * Checks whether there was a call to the finalize() method.\n+     * @param expected boolean whether finalize() should be called\n+     * @return boolean indicating whether the expecation was met\n+     *\/\n+    static boolean checkFinalizerCalled(boolean expected) {\n+        create();\n+        for (int i = 0; i < 100; i++) {\n+            System.gc();\n+            try {\n+                Thread.sleep(10L);\n+            } catch (InterruptedException ie) {\n+                Thread.currentThread().interrupt();\n+            }\n+            if (finalizerWasCalled) {\n+                break;\n+            }\n+        }\n+        boolean passed = (expected == finalizerWasCalled);\n+        System.out.printf(\"Call to finalize().  Expected: %s   Actual: %s   %s%n\",\n+            expected, finalizerWasCalled,\n+            passed ? \"Passed.\" : \"FAILED!\");\n+        return passed;\n+    }\n+\n+    public static void main(String[] args) {\n+        boolean finalizationEnabled = switch (args[0]) {\n+            case \"yes\" -> true;\n+            case \"no\"  -> false;\n+            default -> {\n+                throw new AssertionError(\"usage: FinalizationOption yes|no\");\n+            }\n+        };\n+\n+        boolean threadPass = checkFinalizerThread(finalizationEnabled);\n+        boolean calledPass = checkFinalizerCalled(finalizationEnabled);\n+\n+        if (!threadPass || !calledPass)\n+            throw new AssertionError(\"Test failed.\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Object\/FinalizationOption.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8276422\n+ * @summary Invalid\/missing values for the finalization option should be rejected\n+ * @library \/test\/lib\n+ * @run driver InvalidFinalizationOption\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class InvalidFinalizationOption {\n+    public static void main(String[] args) throws Exception {\n+        record TestData(String arg, String expected) { }\n+\n+        TestData[] testData = {\n+            new TestData(\"--finalization\",        \"Unrecognized option\"),\n+            new TestData(\"--finalization=\",       \"Invalid finalization value\"),\n+            new TestData(\"--finalization=azerty\", \"Invalid finalization value\")\n+        };\n+\n+        for (var data : testData) {\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(data.arg);\n+            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+            output.shouldContain(data.expected);\n+            output.shouldHaveExitValue(1);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Object\/InvalidFinalizationOption.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -169,0 +169,1 @@\n+            assertThrows(NPE, () -> ObjectMethods.bootstrap(null, npt.mn(),     npt.mt(), C.class, \"x;y\", C.ACCESSORS));\n","filename":"test\/jdk\/java\/lang\/runtime\/ObjectMethodsTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8278339\n+ * @summary Test that ServerSocket::isClosed returns true after async close\n+ *\/\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+\n+public class IsClosedAfterAsyncClose {\n+\n+    private static final int ITERATIONS = 100;\n+\n+    public static void main(String[] args) throws Exception {\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            System.out.printf(\"Test %d...%n\", i);\n+\n+            \/\/ create listener bound to the loopback address\n+            ServerSocket listener = new ServerSocket();\n+            InetAddress loopback = InetAddress.getLoopbackAddress();\n+            listener.bind(new InetSocketAddress(loopback, 0));\n+\n+            \/\/ task to close listener after a delay\n+            Runnable closeListener = () -> {\n+                try {\n+                    Thread.sleep(100);\n+                    listener.close();\n+                } catch (Exception e) {\n+                    e.printStackTrace();\n+                }\n+            };\n+\n+            \/\/ main thread blocks in accept. When listener is closed then accept\n+            \/\/ should wakeup with an IOException and isClosed should be true.\n+            try (listener) {\n+                Thread closer = new Thread(closeListener);\n+                closer.start();\n+                try {\n+                    while (true) {\n+                        Socket s = listener.accept();\n+                        \/\/ close spurious connection\n+                        s.close();\n+                    }\n+                } catch (IOException ioe) {\n+                    if (!listener.isClosed()) {\n+                        throw new RuntimeException(\"isClosed returned false!!\");\n+                    }\n+                } finally {\n+                    closer.join();\n+                }\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/net\/ServerSocket\/IsClosedAfterAsyncClose.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,4 @@\n- * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=ssl ManyRequests\n- * @run main\/othervm\/timeout=40 -Dtest.insertDelay=true ManyRequests\n- * @run main\/othervm\/timeout=40 -Dtest.chunkSize=64 ManyRequests\n- * @run main\/othervm\/timeout=40 -Dtest.insertDelay=true -Dtest.chunkSize=64 ManyRequests\n+ * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=ssl,channel ManyRequests\n+ * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=channel -Dtest.insertDelay=true ManyRequests\n+ * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=channel -Dtest.chunkSize=64 ManyRequests\n+ * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=channel -Dtest.insertDelay=true -Dtest.chunkSize=64 ManyRequests\n@@ -41,1 +41,1 @@\n- \/\/ * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=ssl ManyRequests\n+ \/\/ * @run main\/othervm\/timeout=40 -Djdk.httpclient.HttpClient.log=ssl,channel ManyRequests\n@@ -50,0 +50,1 @@\n+import java.net.ConnectException;\n@@ -57,0 +58,1 @@\n+import java.net.http.HttpResponse;\n@@ -63,0 +65,1 @@\n+import java.util.Map;\n@@ -64,0 +67,3 @@\n+import java.util.concurrent.CompletionException;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -71,0 +77,1 @@\n+import java.util.stream.Stream;\n@@ -72,0 +79,3 @@\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.RandomFactory;\n@@ -73,0 +83,1 @@\n+import jdk.test.lib.net.URIBuilder;\n@@ -76,1 +87,5 @@\n-    volatile static int counter = 0;\n+    static final int MAX_COUNT = 20;\n+    static final int MAX_LIMIT = 40;\n+    static final AtomicInteger COUNT = new AtomicInteger();\n+    static final AtomicInteger LIMIT = new AtomicInteger(MAX_LIMIT);\n+    static final Random RANDOM = RandomFactory.getRandom();\n@@ -82,0 +97,1 @@\n+        Stream.of(Logger.getLogger(\"\").getHandlers()).forEach((h) -> h.setLevel(Level.ALL));\n@@ -109,1 +125,1 @@\n-    static final int REQUESTS = 20;\n+    static final int REQUESTS = MAX_COUNT;\n@@ -116,1 +132,1 @@\n-        final Random rand = jdk.test.lib.RandomFactory.getRandom();\n+        final Random rand = RANDOM;\n@@ -142,0 +158,16 @@\n+    static String now(long start) {\n+        long elapsed = System.nanoTime() - start;\n+        long ms = elapsed \/ 1000_000L;\n+        long s = ms \/ 1000L;\n+        if (s == 0) return ms + \"ms: \";\n+        return s + \"s, \" + (ms - s * 1000L) + \"ms: \";\n+    }\n+\n+    static String failure(Throwable t) {\n+        String s = \"\\n\\t failed: \" + t;\n+        for (t = t.getCause(); t != null ; t = t.getCause()) {\n+            s = s + \"\\n\\t\\t  Caused by: \" + t;\n+        }\n+        return s;\n+    }\n+\n@@ -144,1 +176,6 @@\n-        URI baseURI = new URI(\"https:\/\/localhost:\" + port + \"\/foo\/x\");\n+\n+        URI baseURI = URIBuilder.newBuilder()\n+                .scheme(\"https\")\n+                .host(InetAddress.getLoopbackAddress().getHostName())\n+                .port(port)\n+                .path(\"\/foo\/x\").build();\n@@ -148,45 +185,92 @@\n-        RequestLimiter limiter = new RequestLimiter(40);\n-        Random rand = new Random();\n-        CompletableFuture<?>[] results = new CompletableFuture<?>[REQUESTS];\n-        HashMap<HttpRequest,byte[]> bodies = new HashMap<>();\n-\n-        for (int i=0; i<REQUESTS; i++) {\n-            byte[] buf = new byte[(i+1)*CHUNK_SIZE+i+1];  \/\/ different size bodies\n-            rand.nextBytes(buf);\n-            URI uri = new URI(baseURI.toString() + String.valueOf(i+1));\n-            HttpRequest r = HttpRequest.newBuilder(uri)\n-                                       .header(\"XFixed\", \"true\")\n-                                       .POST(BodyPublishers.ofByteArray(buf))\n-                                       .build();\n-            bodies.put(r, buf);\n-\n-            results[i] =\n-                limiter.whenOkToSend()\n-                       .thenCompose((v) -> {\n-                           System.out.println(\"Client: sendAsync: \" + r.uri());\n-                           return client.sendAsync(r, BodyHandlers.ofByteArray());\n-                       })\n-                       .thenCompose((resp) -> {\n-                           limiter.requestComplete();\n-                           if (resp.statusCode() != 200) {\n-                               String s = \"Expected 200, got: \" + resp.statusCode();\n-                               System.out.println(s + \" from \"\n-                                                  + resp.request().uri().getPath());\n-                               return completedWithIOException(s);\n-                           } else {\n-                               counter++;\n-                               System.out.println(\"Result (\" + counter + \") from \"\n-                                                   + resp.request().uri().getPath());\n-                           }\n-                           return CompletableFuture.completedStage(resp.body())\n-                                      .thenApply((b) -> new Pair<>(resp, b));\n-                       })\n-                      .thenAccept((pair) -> {\n-                          HttpRequest request = pair.t.request();\n-                          byte[] requestBody = bodies.get(request);\n-                          check(Arrays.equals(requestBody, pair.u),\n-                                \"bodies not equal:[\" + bytesToHexString(requestBody)\n-                                + \"] [\" + bytesToHexString(pair.u) + \"]\");\n-\n-                      });\n-        }\n+        \/\/ This loop implements a retry mechanism to work around an issue\n+        \/\/ on some systems (observed on Windows 10) that seem to be trying to\n+        \/\/ throttle the number of connections that can be made concurrently by\n+        \/\/ rejecting connection attempts.\n+        \/\/ On the first iteration of this loop, we will attempt 20 concurrent\n+        \/\/ requests. If this fails with ConnectException, we will retry the\n+        \/\/ 20 requests, but limiting the concurrency to 10 (LIMIT <- 10).\n+        \/\/ If this fails again, the test will fail.\n+        boolean done = false;\n+        LOOP: do {\n+            RequestLimiter limiter = new RequestLimiter(LIMIT.get());\n+            Random rand = RANDOM;\n+            CompletableFuture<?>[] results = new CompletableFuture<?>[REQUESTS];\n+            Map<HttpRequest,byte[]> bodies = new ConcurrentHashMap<>();\n+\n+            long start = System.nanoTime();\n+\n+            for (int i = 0; i < REQUESTS; i++) {\n+                byte[] buf = new byte[(i + 1) * CHUNK_SIZE + i + 1];  \/\/ different size bodies\n+                rand.nextBytes(buf);\n+                URI uri = new URI(baseURI.toString() + String.valueOf(i + 1));\n+                HttpRequest r = HttpRequest.newBuilder(uri)\n+                        .header(\"XFixed\", \"true\")\n+                        .POST(BodyPublishers.ofByteArray(buf))\n+                        .build();\n+                bodies.put(r, buf);\n+\n+                results[i] =\n+                        limiter.whenOkToSend()\n+                                .thenCompose((v) -> {\n+                                    System.out.println(\"Client: sendAsync: \" + r.uri());\n+                                    return client.sendAsync(r, BodyHandlers.ofByteArray());\n+                                })\n+                                .handle((resp, t) -> {\n+                                    limiter.requestComplete();\n+                                    CompletionStage<Pair<HttpResponse<byte[]>, byte[]>> res;\n+                                    String now = now(start);\n+                                    if (t == null) {\n+                                        if (resp.statusCode() != 200) {\n+                                            String s = \"Expected 200, got: \" + resp.statusCode();\n+                                            System.out.println(now + s + \" from \"\n+                                                    + resp.request().uri().getPath());\n+                                            res = completedWithIOException(s);\n+                                            return res;\n+                                        } else {\n+                                            int counter = COUNT.incrementAndGet();\n+                                            System.out.println(now + \"Result (\" + counter + \") from \"\n+                                                    + resp.request().uri().getPath());\n+                                        }\n+                                        res = CompletableFuture.completedStage(resp.body())\n+                                                .thenApply((b) -> new Pair<>(resp, b));\n+                                        return res;\n+                                    } else {\n+                                        int counter = COUNT.incrementAndGet();\n+                                        System.out.println(now + \"Result (\" + counter + \") from \"\n+                                                + r.uri().getPath()\n+                                                + failure(t));\n+                                        res = CompletableFuture.failedFuture(t);\n+                                        return res;\n+                                    }\n+                                })\n+                                .thenCompose(c -> c)\n+                                .thenAccept((pair) -> {\n+                                    HttpRequest request = pair.t.request();\n+                                    byte[] requestBody = bodies.get(request);\n+                                    check(Arrays.equals(requestBody, pair.u),\n+                                            \"bodies not equal:[\" + bytesToHexString(requestBody)\n+                                                    + \"] [\" + bytesToHexString(pair.u) + \"]\");\n+\n+                                });\n+            }\n+\n+            \/\/ wait for them all to complete and throw exception in case of err\n+            try {\n+                CompletableFuture.allOf(results).join();\n+                done = true;\n+            } catch (CompletionException e) {\n+                if (!Platform.isWindows()) throw e;\n+                if (LIMIT.get() < REQUESTS) throw e;\n+                Throwable cause = e;\n+                while ((cause = cause.getCause()) != null) {\n+                    if (cause instanceof ConnectException) {\n+                        \/\/ try again, limit concurrency by half\n+                        COUNT.set(0);\n+                        LIMIT.set(REQUESTS\/2);\n+                        System.out.println(\"*** Retrying due to \" + cause);\n+                        continue LOOP;\n+                    }\n+                }\n+                throw e;\n+            }\n+        } while (!done);\n@@ -194,2 +278,0 @@\n-        \/\/ wait for them all to complete and throw exception in case of error\n-        CompletableFuture.allOf(results).join();\n@@ -216,7 +298,1 @@\n-    static final class Pair<T,U> {\n-        Pair(T t, U u) {\n-            this.t = t; this.u = u;\n-        }\n-        T t;\n-        U u;\n-    }\n+    record Pair<T,U>(T t, U u) { }\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequests.java","additions":140,"deletions":64,"binary":false,"changes":204,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,6 @@\n- * @run main\/othervm\/timeout=40 -Dtest.XFixed=true ManyRequests2\n- * @run main\/othervm\/timeout=40 -Dtest.XFixed=true -Dtest.insertDelay=true ManyRequests2\n- * @run main\/othervm\/timeout=40 -Dtest.XFixed=true -Dtest.chunkSize=64 ManyRequests2\n+ * @run main\/othervm\/timeout=40 -Dtest.XFixed=true\n+ *                              -Djdk.httpclient.HttpClient.log=channel ManyRequests2\n+ * @run main\/othervm\/timeout=40 -Dtest.XFixed=true -Dtest.insertDelay=true\n+ *                              -Djdk.httpclient.HttpClient.log=channel ManyRequests2\n+ * @run main\/othervm\/timeout=40 -Dtest.XFixed=true -Dtest.chunkSize=64\n+ *                              -Djdk.httpclient.HttpClient.log=channel ManyRequests2\n@@ -40,0 +43,1 @@\n+ *                              -Djdk.httpclient.HttpClient.log=channel\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequests2.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,1 @@\n+\n@@ -53,0 +54,1 @@\n+import java.net.ConnectException;\n@@ -57,0 +59,1 @@\n+import java.util.Map;\n@@ -59,0 +62,4 @@\n+import java.util.concurrent.CompletionException;\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicInteger;\n@@ -76,0 +83,3 @@\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.RandomFactory;\n@@ -81,1 +91,6 @@\n-    volatile static int counter = 0;\n+    static final int MAX_COUNT = 20;\n+    static final int MAX_LIMIT = 40;\n+    static final AtomicInteger COUNT = new AtomicInteger();\n+    static final AtomicInteger LIMIT = new AtomicInteger(MAX_LIMIT);\n+    static final Random RANDOM = RandomFactory.getRandom();\n+\n@@ -113,1 +128,1 @@\n-    static final int REQUESTS = 20;\n+    static final int REQUESTS = MAX_COUNT;\n@@ -197,1 +212,1 @@\n-        final Random rand = new Random();\n+        final Random rand = RANDOM;\n@@ -223,0 +238,16 @@\n+    static String now(long start) {\n+        long elapsed = System.nanoTime() - start;\n+        long ms = elapsed \/ 1000_000L;\n+        long s = ms \/ 1000L;\n+        if (s == 0) return ms + \"ms: \";\n+        return s + \"s, \" + (ms - s * 1000L) + \"ms: \";\n+    }\n+\n+    static String failure(Throwable t) {\n+        String s = \"\\n\\t failed: \" + t;\n+        for (t = t.getCause(); t != null ; t = t.getCause()) {\n+            s = s + \"\\n\\t\\t  Caused by: \" + t;\n+        }\n+        return s;\n+    }\n+\n@@ -229,4 +260,15 @@\n-        RequestLimiter limiter = new RequestLimiter(40);\n-        Random rand = new Random();\n-        CompletableFuture<?>[] results = new CompletableFuture<?>[REQUESTS];\n-        HashMap<HttpRequest,byte[]> bodies = new HashMap<>();\n+        \/\/ This loop implements a retry mechanism to work around an issue\n+        \/\/ on some systems (observed on Windows 10) that seem to be trying to\n+        \/\/ throttle the number of connections that can be made concurrently by\n+        \/\/ rejecting connection attempts.\n+        \/\/ On the first iteration of this loop, we will attempt 20 concurrent\n+        \/\/ requests. If this fails with ConnectException, we will retry the\n+        \/\/ 20 requests, but limiting the concurrency to 10 (LIMIT <- 10).\n+        \/\/ If this fails again, the test will fail.\n+        boolean done = false;\n+        LOOP: do {\n+            RequestLimiter limiter = new RequestLimiter(LIMIT.get());\n+            Random rand = RANDOM;\n+            CompletableFuture<?>[] results = new CompletableFuture<?>[REQUESTS];\n+            Map<HttpRequest,byte[]> bodies = new ConcurrentHashMap<>();\n+            long start = System.nanoTime();\n@@ -234,9 +276,9 @@\n-        for (int i=0; i<REQUESTS; i++) {\n-            byte[] buf = new byte[(i+1)*CHUNK_SIZE+i+1];  \/\/ different size bodies\n-            rand.nextBytes(buf);\n-            URI uri = new URI(baseURI.toString() + String.valueOf(i+1));\n-            HttpRequest r = HttpRequest.newBuilder(uri)\n-                                       .header(\"XFixed\", \"true\")\n-                                       .POST(BodyPublishers.ofByteArray(buf))\n-                                       .build();\n-            bodies.put(r, buf);\n+            for (int i = 0; i < REQUESTS; i++) {\n+                byte[] buf = new byte[(i + 1) * CHUNK_SIZE + i + 1];  \/\/ different size bodies\n+                rand.nextBytes(buf);\n+                URI uri = new URI(baseURI.toString() + String.valueOf(i + 1));\n+                HttpRequest r = HttpRequest.newBuilder(uri)\n+                        .header(\"XFixed\", \"true\")\n+                        .POST(BodyPublishers.ofByteArray(buf))\n+                        .build();\n+                bodies.put(r, buf);\n@@ -244,27 +286,41 @@\n-            results[i] =\n-                limiter.whenOkToSend()\n-                       .thenCompose((v) -> {\n-                           System.out.println(\"Client: sendAsync: \" + r.uri());\n-                           return client.sendAsync(r, buf);\n-                       })\n-                       .thenCompose((resp) -> {\n-                           limiter.requestComplete();\n-                           if (resp.statusCode() != 200) {\n-                               String s = \"Expected 200, got: \" + resp.statusCode();\n-                               System.out.println(s + \" from \"\n-                                                  + resp.request().uri().getPath());\n-                               return completedWithIOException(s);\n-                           } else {\n-                               counter++;\n-                               System.out.println(\"Result (\" + counter + \") from \"\n-                                                   + resp.request().uri().getPath());\n-                           }\n-                           return CompletableFuture.completedStage(resp.body())\n-                                      .thenApply((b) -> new Pair<>(resp, b));\n-                       })\n-                      .thenAccept((pair) -> {\n-                          HttpRequest request = pair.t.request();\n-                          byte[] requestBody = bodies.get(request);\n-                          check(Arrays.equals(requestBody, pair.u),\n-                                \"bodies not equal:[\" + bytesToHexString(requestBody)\n-                                + \"] [\" + bytesToHexString(pair.u) + \"]\");\n+                results[i] =\n+                        limiter.whenOkToSend()\n+                                .thenCompose((v) -> {\n+                                    System.out.println(\"Client: sendAsync: \" + r.uri());\n+                                    return client.sendAsync(r, buf);\n+                                })\n+                                .handle((resp, t) -> {\n+                                    limiter.requestComplete();\n+                                    CompletionStage<Pair<HttpResponse<byte[]>, byte[]>> res;\n+                                    String now = now(start);\n+                                    if (t == null) {\n+                                        if (resp.statusCode() != 200) {\n+                                            String s = \"Expected 200, got: \" + resp.statusCode();\n+                                            System.out.println(now + s + \" from \"\n+                                                    + resp.request().uri().getPath());\n+                                            res = completedWithIOException(s);\n+                                            return res;\n+                                        } else {\n+                                            int counter = COUNT.incrementAndGet();\n+                                            System.out.println(now + \"Result (\" + counter + \") from \"\n+                                                    + resp.request().uri().getPath());\n+                                        }\n+                                        res = CompletableFuture.completedStage(resp.body())\n+                                                .thenApply((b) -> new Pair<>(resp, b));\n+                                        return res;\n+                                    } else {\n+                                        int counter = COUNT.incrementAndGet();\n+                                        System.out.println(now + \"Result (\" + counter + \") from \"\n+                                                + r.uri().getPath()\n+                                                + failure(t));\n+                                        res = CompletableFuture.failedFuture(t);\n+                                        return res;\n+                                    }\n+                                })\n+                                .thenCompose(c -> c)\n+                                .thenAccept((pair) -> {\n+                                    HttpRequest request = pair.t.request();\n+                                    byte[] requestBody = bodies.get(request);\n+                                    check(Arrays.equals(requestBody, pair.u),\n+                                            \"bodies not equal:[\" + bytesToHexString(requestBody)\n+                                                    + \"] [\" + bytesToHexString(pair.u) + \"]\");\n@@ -272,2 +328,2 @@\n-                      });\n-        }\n+                                });\n+            }\n@@ -275,2 +331,20 @@\n-        \/\/ wait for them all to complete and throw exception in case of error\n-        CompletableFuture.allOf(results).join();\n+            try {\n+                \/\/ wait for them all to complete and throw exception in case of error\n+                CompletableFuture.allOf(results).join();\n+                done = true;\n+            } catch (CompletionException e) {\n+                if (!Platform.isWindows()) throw e;\n+                if (LIMIT.get() < REQUESTS) throw e;\n+                Throwable cause = e;\n+                while ((cause = cause.getCause()) != null) {\n+                    if (cause instanceof ConnectException) {\n+                        \/\/ try again, limit concurrency by half\n+                        COUNT.set(0);\n+                        LIMIT.set(REQUESTS\/2);\n+                        System.out.println(\"*** Retrying due to \" + cause);\n+                        continue LOOP;\n+                    }\n+                }\n+                throw e;\n+            }\n+        } while (!done);\n@@ -297,7 +371,1 @@\n-    static final class Pair<T,U> {\n-        Pair(T t, U u) {\n-            this.t = t; this.u = u;\n-        }\n-        T t;\n-        U u;\n-    }\n+    record Pair<T,U>(T t, U u) { }\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequestsLegacy.java","additions":123,"deletions":55,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -127,0 +127,14 @@\n+    public Http2TestServer(String serverName,\n+                           boolean secure,\n+                           int port,\n+                           ExecutorService exec,\n+                           int backlog,\n+                           Properties properties,\n+                           SSLContext context,\n+                           boolean supportsHTTP11)\n+        throws Exception\n+    {\n+        this(InetAddress.getLoopbackAddress(), serverName, secure, port, exec,\n+                backlog, properties, context, supportsHTTP11);\n+    }\n+\n@@ -137,0 +151,1 @@\n+     * @param localAddr local address to bind to\n@@ -149,1 +164,2 @@\n-    public Http2TestServer(String serverName,\n+    public Http2TestServer(InetAddress localAddr,\n+                           String serverName,\n@@ -166,1 +182,1 @@\n-            server = initSecure(port, backlog);\n+            server = initSecure(localAddr, port, backlog);\n@@ -239,1 +255,1 @@\n-    final ServerSocket initSecure(int port, int backlog) throws Exception {\n+    final ServerSocket initSecure(InetAddress localAddr, int port, int backlog) throws Exception {\n@@ -246,1 +262,1 @@\n-        se.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0), backlog);\n+        se.bind(new InetSocketAddress(localAddr, 0), backlog);\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServer.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @requires vm.bits == 64\n+ * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 16g)\n@@ -33,1 +33,1 @@\n- * @run testng\/othervm\/timeout=900 -Xmx8G ReadXBytes\n+ * @run testng\/othervm\/timeout=900 -Xmx12G ReadXBytes\n@@ -41,1 +41,1 @@\n-import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n@@ -49,1 +49,0 @@\n-import static java.nio.file.StandardOpenOption.READ;\n@@ -54,0 +53,2 @@\n+import static java.nio.file.StandardOpenOption.*;\n+\n@@ -75,0 +76,3 @@\n+    \/\/ Current directory\n+    private static final Path DIR = Path.of(System.getProperty(\"test.dir\", \".\"));\n+\n@@ -77,0 +81,6 @@\n+    \/\/ Create a temporary file path\n+    static Path createFilePath() {\n+        String name = String.format(\"ReadXBytes%d.tmp\", System.nanoTime());\n+        return DIR.resolve(name);\n+    }\n+\n@@ -79,4 +89,7 @@\n-        File file = File.createTempFile(\"foo\", \".bar\");\n-        file.deleteOnExit();\n-        try (RandomAccessFile raf = new RandomAccessFile(file, \"rw\")) {\n-            raf.setLength(length);\n+        Path path = createFilePath();\n+        path.toFile().deleteOnExit();\n+        try (FileChannel fc = FileChannel.open(path, CREATE_NEW, SPARSE, WRITE)) {\n+            if (length > 0) {\n+                fc.position(length - 1);\n+                fc.write(ByteBuffer.wrap(new byte[] {27}));\n+            }\n@@ -84,1 +97,1 @@\n-        return file.toPath();\n+        return path;\n@@ -90,3 +103,13 @@\n-        try (RandomAccessFile raf = new RandomAccessFile(file.toFile(), \"rw\")) {\n-            long written = 0L;\n-            int bufLength = Math.min(32768, (int)Math.min(length, BIG_LENGTH));\n+        try (FileChannel fc = FileChannel.open(file, WRITE);) {\n+            long pos = 0L;\n+            \/\/ if the length exceeds 2 GB, skip the first 2 GB - 1 MB bytes\n+            if (length >= 2L*1024*1024*1024) {\n+                \/\/ write the last (length - 2GB - 1MB) bytes\n+                pos = 2047L*1024*1024;\n+            } else if (length > 0) {\n+                \/\/ write either the first or last bytes only\n+                long p = Math.min(Math.abs(RAND.nextLong()), length - 1);\n+                pos = RAND.nextBoolean() ? p : length - 1 - p;\n+            }\n+            fc.position(pos);\n+            int bufLength = Math.min(32768, (int)Math.min(length - pos, BIG_LENGTH));\n@@ -94,1 +117,1 @@\n-            while (written < length) {\n+            while (pos < length) {\n@@ -96,3 +119,2 @@\n-                int len = (int)Math.min(bufLength, length - written);\n-                raf.write(buf, 0, len);\n-                written += len;\n+                int len = (int)Math.min(bufLength, length - pos);\n+                pos += fc.write(ByteBuffer.wrap(buf, 0, len));\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/ReadXBytes.java","additions":38,"deletions":16,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.io.IOException;\n@@ -28,0 +27,1 @@\n+import java.io.IOException;\n@@ -29,0 +29,1 @@\n+import java.nio.ByteBuffer;\n@@ -31,0 +32,5 @@\n+import java.nio.channels.IllegalBlockingModeException;\n+import java.nio.channels.Pipe;\n+import java.nio.channels.ReadableByteChannel;\n+import java.nio.channels.SelectableChannel;\n+import java.nio.channels.WritableByteChannel;\n@@ -36,0 +42,3 @@\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n@@ -46,0 +55,1 @@\n+import static java.nio.file.StandardOpenOption.*;\n@@ -57,2 +67,2 @@\n- * @summary tests whether sun.nio.ChannelInputStream.transferTo conforms to the\n- *          InputStream.transferTo contract defined in the javadoc\n+ * @summary Tests whether sun.nio.ChannelInputStream.transferTo conforms to the\n+ *          InputStream.transferTo specification\n@@ -67,3 +77,3 @@\n-    private static final int NUM_WRITES = 3 * 1024;\n-    private static final int BYTES_PER_WRITE = 1024 * 1024;\n-    private static final long BYTES_WRITTEN = (long) NUM_WRITES * BYTES_PER_WRITE;\n+    private static final int NUM_WRITES = 3*1024;\n+    private static final int BYTES_PER_WRITE = 1024*1024;\n+    private static final long BYTES_WRITTEN = (long) NUM_WRITES*BYTES_PER_WRITE;\n@@ -73,0 +83,2 @@\n+    private static final Path CWD = Path.of(\".\");\n+\n@@ -74,1 +86,2 @@\n-     * Provides test scenarios, i. e. combinations of input and output streams to be tested.\n+     * Provides test scenarios, i.e., combinations of input and output streams\n+     * to be tested.\n@@ -82,0 +95,8 @@\n+            \/\/ tests FileChannel.transferTo(SelectableChannelOutput)\n+            \/\/ optimized case\n+            { fileChannelInput(), selectableChannelOutput() },\n+\n+            \/\/ tests FileChannel.transferTo(WritableChannelOutput)\n+            \/\/ optimized case\n+            { fileChannelInput(), writableByteChannelOutput() },\n+\n@@ -88,1 +109,2 @@\n-     * Testing API compliance: Input stream must throw NullPointerException when parameter \"out\" is null.\n+     * Testing API compliance: input stream must throw NullPointerException\n+     * when parameter \"out\" is null.\n@@ -104,1 +126,2 @@\n-     * Testing API compliance: Complete content of input stream must be transferred to output stream.\n+     * Testing API compliance: complete content of input stream must be\n+     * transferred to output stream.\n@@ -115,1 +138,2 @@\n-        \/\/ tests input stream with several data chunks, as 16k is more than a single chunk can hold\n+        \/\/ tests input stream with several data chunks, as 16k is more than a\n+        \/\/ single chunk can hold\n@@ -118,1 +142,2 @@\n-        \/\/ tests randomly chosen starting positions within source and target stream\n+        \/\/ tests randomly chosen starting positions within source and\n+        \/\/ target stream\n@@ -134,4 +159,5 @@\n-     * Special test for file-to-file transfer of more than two GB.\n-     * This test covers multiple iterations of FileChannel.transerTo(FileChannel),\n-     * which ChannelInputStream.transferTo() only applies in this particular case,\n-     * and cannot get tested using a single byte[] due to size limitation of arrays.\n+     * Special test for file-to-file transfer of more than 2 GB. This test\n+     * covers multiple iterations of FileChannel.transerTo(FileChannel),\n+     * which ChannelInputStream.transferTo() only applies in this particular\n+     * case, and cannot get tested using a single byte[] due to size limitation\n+     * of arrays.\n@@ -141,1 +167,6 @@\n-        Path sourceFile = Files.createTempFile(\"test2GBSource\", null);\n+        \/\/ prepare two temporary files to be compared at the end of the test\n+        \/\/ set the source file name\n+        String sourceName = String.format(\"test3GBSource%s.tmp\",\n+            String.valueOf(RND.nextInt(Integer.MAX_VALUE)));\n+        Path sourceFile = CWD.resolve(sourceName);\n+\n@@ -143,2 +174,5 @@\n-            \/\/ preparing two temporary files which will be compared at the end of the test\n-            Path targetFile = Files.createTempFile(\"test2GBtarget\", null);\n+            \/\/ set the target file name\n+            String targetName = String.format(\"test3GBTarget%s.tmp\",\n+                String.valueOf(RND.nextInt(Integer.MAX_VALUE)));\n+            Path targetFile = CWD.resolve(targetName);\n+\n@@ -146,3 +180,16 @@\n-                \/\/ writing 3 GB of random bytes into source file\n-                for (int i = 0; i < NUM_WRITES; i++)\n-                    Files.write(sourceFile, createRandomBytes(BYTES_PER_WRITE, 0), StandardOpenOption.APPEND);\n+                \/\/ calculate initial position to be just short of 2GB\n+                final long initPos = 2047*BYTES_PER_WRITE;\n+\n+                \/\/ create the source file with a hint to be sparse\n+                try (FileChannel fc = FileChannel.open(sourceFile, CREATE_NEW, SPARSE, WRITE, APPEND);) {\n+                    \/\/ set initial position to avoid writing nearly 2GB\n+                    fc.position(initPos);\n+\n+                    \/\/ fill the remainder of the file with random bytes\n+                    int nw = (int)(NUM_WRITES - initPos\/BYTES_PER_WRITE);\n+                    for (int i = 0; i < nw; i++) {\n+                        byte[] rndBytes = createRandomBytes(BYTES_PER_WRITE, 0);\n+                        ByteBuffer src = ByteBuffer.wrap(rndBytes);\n+                        fc.write(src);\n+                    }\n+                }\n@@ -150,6 +197,2 @@\n-                \/\/ performing actual transfer, effectively by multiple invocations of Filechannel.transferTo(FileChannel)\n-                long count;\n-                try (InputStream inputStream = Channels.newInputStream(FileChannel.open(sourceFile));\n-                     OutputStream outputStream = Channels\n-                             .newOutputStream(FileChannel.open(targetFile, StandardOpenOption.WRITE))) {\n-                    count = inputStream.transferTo(outputStream);\n+                \/\/ create the target file with a hint to be sparse\n+                try (FileChannel fc = FileChannel.open(targetFile, CREATE_NEW, WRITE, SPARSE);) {\n@@ -158,2 +201,5 @@\n-                \/\/ comparing reported transferred bytes, must be 3 GB\n-                assertEquals(count, BYTES_WRITTEN);\n+                \/\/ perform actual transfer, effectively by multiple invocations\n+                \/\/ of Filechannel.transferTo(FileChannel)\n+                try (InputStream inputStream = Channels.newInputStream(FileChannel.open(sourceFile));\n+                     OutputStream outputStream = Channels.newOutputStream(FileChannel.open(targetFile, WRITE))) {\n+                    long count = inputStream.transferTo(outputStream);\n@@ -161,1 +207,6 @@\n-                \/\/ comparing content of both files, failing in case of any difference\n+                    \/\/ compare reported transferred bytes, must be 3 GB\n+                    \/\/ less the value of the initial position\n+                    assertEquals(count, BYTES_WRITTEN - initPos);\n+                }\n+\n+                \/\/ compare content of both files, failing if different\n@@ -173,3 +224,39 @@\n-     * Asserts that the transferred content is correct, i. e. compares the actually transferred bytes\n-     * to the expected assumption. The position of the input and output stream before the transfer is\n-     * the start of stream (BOF).\n+     * Special test of whether selectable channel based transfer throws blocking\n+     * mode exception.\n+     *\/\n+    @Test\n+    public void testIllegalBlockingMode() throws IOException {\n+        Pipe pipe = Pipe.open();\n+        try {\n+            \/\/ testing arbitrary input (here: empty file) to non-blocking\n+            \/\/ selectable output\n+            try (FileChannel fc = FileChannel.open(Files.createTempFile(CWD, \"testIllegalBlockingMode\", null));\n+                InputStream is = Channels.newInputStream(fc);\n+                SelectableChannel sc = pipe.sink().configureBlocking(false);\n+                OutputStream os = Channels.newOutputStream((WritableByteChannel) sc)) {\n+\n+                \/\/ IllegalBlockingMode must be thrown when trying to perform\n+                \/\/ a transfer\n+                assertThrows(IllegalBlockingModeException.class, () -> is.transferTo(os));\n+            }\n+\n+            \/\/ testing non-blocking selectable input to arbitrary output\n+            \/\/ (here: byte array)\n+            try (SelectableChannel sc = pipe.source().configureBlocking(false);\n+                InputStream is = Channels.newInputStream((ReadableByteChannel) sc);\n+                OutputStream os = new ByteArrayOutputStream()) {\n+\n+                \/\/ IllegalBlockingMode must be thrown when trying to perform\n+                \/\/ a transfer\n+                assertThrows(IllegalBlockingModeException.class, () -> is.transferTo(os));\n+            }\n+        } finally {\n+            pipe.source().close();\n+            pipe.sink().close();\n+        }\n+    }\n+\n+    \/*\n+     * Asserts that the transferred content is correct, i.e., compares the bytes\n+     * actually transferred to those expected. The position of the input and\n+     * output streams before the transfer are zero (BOF).\n@@ -183,3 +270,3 @@\n-     * Asserts that the transferred content is correct, i. e. compares the actually transferred bytes\n-     * to the expected assumption. The position of the input and output stream before the transfer is\n-     * provided by the caller.\n+     * Asserts that the transferred content is correct, i. e. compares the bytes\n+     * actually transferred to those expected. The positions of the input and\n+     * output streams before the transfer are provided by the caller.\n@@ -191,2 +278,2 @@\n-                OutputStream out = outputStreamProvider.output(recorder::set)) {\n-            \/\/ skip bytes till starting position\n+            OutputStream out = outputStreamProvider.output(recorder::set)) {\n+            \/\/ skip bytes until starting position\n@@ -208,1 +295,2 @@\n-     * Creates an array of random size (between min and min + maxRandomAdditive) filled with random bytes\n+     * Creates an array of random size (between min and min + maxRandomAdditive)\n+     * filled with random bytes\n@@ -245,1 +333,1 @@\n-                Path path = Files.createTempFile(null, null);\n+                Path path = Files.createTempFile(CWD, \"fileChannelInput\", null);\n@@ -254,1 +342,2 @@\n-     * Creates a provider for an input stream which wraps a readable byte channel but is not a file channel\n+     * Creates a provider for an input stream which wraps a readable byte\n+     * channel but is not a file channel\n@@ -271,2 +360,2 @@\n-                Path path = Files.createTempFile(null, null);\n-                FileChannel fileChannel = FileChannel.open(path, StandardOpenOption.WRITE);\n+                Path path = Files.createTempFile(CWD, \"fileChannelOutput\", null);\n+                FileChannel fileChannel = FileChannel.open(path, WRITE);\n@@ -285,0 +374,35 @@\n+    private static OutputStreamProvider selectableChannelOutput() throws IOException {\n+        return new OutputStreamProvider() {\n+            public OutputStream output(Consumer<Supplier<byte[]>> spy) throws Exception {\n+                Pipe pipe = Pipe.open();\n+                Future<byte[]> bytes = CompletableFuture.supplyAsync(() -> {\n+                    try {\n+                        InputStream is = Channels.newInputStream(pipe.source());\n+                        return is.readAllBytes();\n+                    } catch (IOException e) {\n+                        throw new AssertionError(\"Exception while asserting content\", e);\n+                    }\n+                });\n+                final OutputStream os = Channels.newOutputStream(pipe.sink());\n+                spy.accept(() -> {\n+                    try {\n+                        os.close();\n+                        return bytes.get();\n+                    } catch (IOException | InterruptedException | ExecutionException e) {\n+                        throw new AssertionError(\"Exception while asserting content\", e);\n+                    }\n+                });\n+                return os;\n+            }\n+        };\n+    }\n+\n+    private static OutputStreamProvider writableByteChannelOutput() {\n+        return new OutputStreamProvider() {\n+            public OutputStream output(Consumer<Supplier<byte[]>> spy) throws Exception {\n+                ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n+                spy.accept(outputStream::toByteArray);\n+                return Channels.newOutputStream(Channels.newChannel(outputStream));\n+            }\n+        };\n+    }\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/TransferTo.java","additions":167,"deletions":43,"binary":false,"changes":210,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @requires (os.family == \"linux\")\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/BlockDeviceSize.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Verifies that an attempt to call Selector.open() on a non-default\n+ *          file system succeeds.\n+ * @build CustomFileSystem CustomFileSystemProvider\n+ * @run main\/othervm -Djava.nio.file.spi.DefaultFileSystemProvider=CustomFileSystemProvider CustomFileSystem\n+ *\/\n+\n+public class CustomFileSystem {\n+    public static void main(String args[]) throws java.io.IOException {\n+        java.nio.channels.Selector.open();\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/CustomFileSystem.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,204 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.SeekableByteChannel;\n+import java.nio.file.AccessMode;\n+import java.nio.file.CopyOption;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.FileStore;\n+import java.nio.file.FileSystem;\n+import java.nio.file.LinkOption;\n+import java.nio.file.OpenOption;\n+import java.nio.file.Path;\n+import java.nio.file.ReadOnlyFileSystemException;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.nio.file.attribute.FileAttribute;\n+import java.nio.file.attribute.FileAttributeView;\n+import java.nio.file.attribute.UserPrincipalLookupService;\n+import java.nio.file.spi.FileSystemProvider;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class CustomFileSystemProvider extends FileSystemProvider {\n+\n+    private final FileSystemProvider defaultProvider;\n+\n+    public CustomFileSystemProvider(FileSystemProvider defaultProvider) {\n+        this.defaultProvider = defaultProvider;\n+    }\n+\n+    FileSystemProvider defaultProvider() {\n+        return defaultProvider;\n+    }\n+\n+    @Override\n+    public String getScheme() {\n+        return \"file\";\n+    }\n+\n+    @Override\n+    public FileSystem newFileSystem(URI uri, Map<String,?> env) throws IOException {\n+        return defaultProvider.newFileSystem(uri, env);\n+    }\n+\n+    @Override\n+    public FileSystem getFileSystem(URI uri) {\n+        return defaultProvider.getFileSystem(uri);\n+    }\n+\n+    @Override\n+    public Path getPath(URI uri) {\n+        return defaultProvider.getPath(uri);\n+    }\n+\n+    @Override\n+    public void setAttribute(Path file, String attribute, Object value,\n+                             LinkOption... options)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public Map<String,Object> readAttributes(Path file, String attributes,\n+                                             LinkOption... options)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public <A extends BasicFileAttributes> A readAttributes(Path file,\n+                                                            Class<A> type,\n+                                                            LinkOption... options)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public <V extends FileAttributeView> V getFileAttributeView(Path file,\n+                                                                Class<V> type,\n+                                                                LinkOption... options)\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public boolean isHidden(Path file) throws IOException {\n+        throw new ReadOnlyFileSystemException();\n+    }\n+\n+    @Override\n+    public boolean isSameFile(Path file, Path other) throws IOException {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void checkAccess(Path file, AccessMode... modes)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void copy(Path source, Path target, CopyOption... options)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void move(Path source, Path target, CopyOption... options)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void delete(Path file) throws IOException {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void createSymbolicLink(Path link, Path target, FileAttribute<?>... attrs)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void createLink(Path link, Path existing) throws IOException {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public Path readSymbolicLink(Path link) throws IOException {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public void createDirectory(Path dir, FileAttribute<?>... attrs)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public DirectoryStream<Path> newDirectoryStream(Path dir,\n+                                                    DirectoryStream.Filter<? super Path> filter)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public SeekableByteChannel newByteChannel(Path file,\n+                                              Set<? extends OpenOption> options,\n+                                              FileAttribute<?>... attrs)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public FileChannel newFileChannel(Path file,\n+                                      Set<? extends OpenOption> options,\n+                                      FileAttribute<?>... attrs)\n+        throws IOException\n+    {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+\n+    @Override\n+    public FileStore getFileStore(Path file) throws IOException {\n+        throw new RuntimeException(\"not implemented\");\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/CustomFileSystemProvider.java","additions":204,"deletions":0,"binary":false,"changes":204,"status":"added"},{"patch":"@@ -113,2 +113,2 @@\n-                    System.err.printf(\"Content type: %s; expected: %s%n\",\n-                        type, expectedTypes);\n+                    System.err.printf(\"For extension %s we got content type: %s; expected: %s%n\",\n+                            extension, type, expectedTypes);\n@@ -158,1 +158,1 @@\n-                new ExType(\"bz2\", List.of(\"application\/bz2\", \"application\/x-bzip2\")),\n+                new ExType(\"bz2\", List.of(\"application\/bz2\", \"application\/x-bzip2\", \"application\/x-bzip\")),\n@@ -169,1 +169,1 @@\n-                new ExType(\"md\", List.of(\"text\/markdown\")),\n+                new ExType(\"md\", List.of(\"text\/markdown\", \"application\/x-genesis-rom\")),\n@@ -176,1 +176,1 @@\n-                new ExType(\"php\", List.of(\"text\/plain\", \"text\/php\")),\n+                new ExType(\"php\", List.of(\"text\/plain\", \"text\/php\", \"application\/x-php\")),\n@@ -181,1 +181,1 @@\n-                new ExType(\"rar\", List.of(\"application\/rar\", \"application\/vnd.rar\")),\n+                new ExType(\"rar\", List.of(\"application\/rar\", \"application\/vnd.rar\", \"application\/x-rar\")),\n","filename":"test\/jdk\/java\/nio\/file\/Files\/probeContentType\/Basic.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Azul Systems, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2021, Azul Systems, Inc. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8241960\n+ * @bug 8241960 8277353\n@@ -28,1 +28,1 @@\n- * @run main\/othervm ThreadSafetyTest 5 4\n+ * @run main ThreadSafetyTest 4 2\n@@ -59,1 +59,1 @@\n-        int nTasks = nProcessors * threadsFactor;\n+        int nTasks = Math.min(nProcessors, 4) * threadsFactor;\n","filename":"test\/jdk\/java\/security\/MessageDigest\/ThreadSafetyTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,0 +48,8 @@\n+\/*\n+ * @test\n+ * @summary Exercise multithreaded maps, using only heavy monitors.\n+ * @requires os.arch==\"x86\" | os.arch==\"i386\" | os.arch==\"amd64\" | os.arch==\"x86_64\" | os.arch==\"aarch64\" | os.arch == \"ppc64\" | os.arch == \"ppc64le\"\n+ * @library \/test\/lib\n+ * @run main\/othervm\/timeout=1600 -XX:+IgnoreUnrecognizedVMOptions -XX:+UseHeavyMonitors -XX:+VerifyHeavyMonitors MapLoops\n+ *\/\n+\n","filename":"test\/jdk\/java\/util\/concurrent\/ConcurrentHashMap\/MapLoops.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+            robot.delay(1000);\n@@ -73,1 +74,1 @@\n-\n+            robot.delay(500);\n@@ -77,0 +78,1 @@\n+            robot.waitForIdle();\n@@ -79,0 +81,1 @@\n+            robot.waitForIdle();\n@@ -117,0 +120,1 @@\n+        fr.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JTree\/4908142\/bug4908142.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -5515,1 +5515,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5515,1 +5515,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5515,1 +5515,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5515,1 +5515,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4894,1 +4894,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4894,1 +4894,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4894,1 +4894,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4894,1 +4894,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4872,1 +4872,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4872,1 +4872,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4872,1 +4872,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4872,1 +4872,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5469,1 +5469,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5469,1 +5469,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5469,1 +5469,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5469,1 +5469,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5353,1 +5353,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5353,1 +5353,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5353,1 +5353,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5353,1 +5353,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5494,1 +5494,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5494,1 +5494,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5494,1 +5494,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5494,1 +5494,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3337,0 +3337,321 @@\n+    @ForceInline\n+    static\n+    void testVectorUCastByteToShort(VectorSpecies<Byte> a, VectorSpecies<Short> b, byte[] input, short[] output) {\n+        assert(input.length == a.length());\n+        assert(output.length == b.length());\n+\n+        ByteVector av = ByteVector.fromArray(a, input, 0);\n+        ShortVector bv = (ShortVector) av.convertShape(VectorOperators.ZERO_EXTEND_B2S, b, 0);\n+        bv.intoArray(output, 0);\n+\n+        for (int i = 0; i < Math.min(input.length, output.length); i++) {\n+            Assert.assertEquals(output[i], Byte.toUnsignedLong(input[i]));\n+        }\n+        for(int i = input.length; i < output.length; i++) {\n+            Assert.assertEquals(output[i], (short)0);\n+        }\n+    }\n+\n+    @ForceInline\n+    static\n+    void testVectorUCastByteToInt(VectorSpecies<Byte> a, VectorSpecies<Integer> b, byte[] input, int[] output) {\n+        assert(input.length == a.length());\n+        assert(output.length == b.length());\n+\n+        ByteVector av = ByteVector.fromArray(a, input, 0);\n+        IntVector bv = (IntVector) av.convertShape(VectorOperators.ZERO_EXTEND_B2I, b, 0);\n+        bv.intoArray(output, 0);\n+\n+        for (int i = 0; i < Math.min(input.length, output.length); i++) {\n+            Assert.assertEquals(output[i], Byte.toUnsignedLong(input[i]));\n+        }\n+        for(int i = input.length; i < output.length; i++) {\n+            Assert.assertEquals(output[i], (int)0);\n+        }\n+    }\n+\n+    @ForceInline\n+    static\n+    void testVectorUCastByteToLong(VectorSpecies<Byte> a, VectorSpecies<Long> b, byte[] input, long[] output) {\n+        assert(input.length == a.length());\n+        assert(output.length == b.length());\n+\n+        ByteVector av = ByteVector.fromArray(a, input, 0);\n+        LongVector bv = (LongVector) av.convertShape(VectorOperators.ZERO_EXTEND_B2L, b, 0);\n+        bv.intoArray(output, 0);\n+\n+        for (int i = 0; i < Math.min(input.length, output.length); i++) {\n+            Assert.assertEquals(output[i], Byte.toUnsignedLong(input[i]));\n+        }\n+        for(int i = input.length; i < output.length; i++) {\n+            Assert.assertEquals(output[i], (long)0);\n+        }\n+    }\n+\n+    @ForceInline\n+    static\n+    void testVectorUCastShortToInt(VectorSpecies<Short> a, VectorSpecies<Integer> b, short[] input, int[] output) {\n+        assert(input.length == a.length());\n+        assert(output.length == b.length());\n+\n+        ShortVector av = ShortVector.fromArray(a, input, 0);\n+        IntVector bv = (IntVector) av.convertShape(VectorOperators.ZERO_EXTEND_S2I, b, 0);\n+        bv.intoArray(output, 0);\n+\n+        for (int i = 0; i < Math.min(input.length, output.length); i++) {\n+            Assert.assertEquals(output[i], Short.toUnsignedLong(input[i]));\n+        }\n+        for(int i = input.length; i < output.length; i++) {\n+            Assert.assertEquals(output[i], (int)0);\n+        }\n+    }\n+\n+    @ForceInline\n+    static\n+    void testVectorUCastShortToLong(VectorSpecies<Short> a, VectorSpecies<Long> b, short[] input, long[] output) {\n+        assert(input.length == a.length());\n+        assert(output.length == b.length());\n+\n+        ShortVector av = ShortVector.fromArray(a, input, 0);\n+        LongVector bv = (LongVector) av.convertShape(VectorOperators.ZERO_EXTEND_S2L, b, 0);\n+        bv.intoArray(output, 0);\n+\n+        for (int i = 0; i < Math.min(input.length, output.length); i++) {\n+            Assert.assertEquals(output[i], Short.toUnsignedLong(input[i]));\n+        }\n+        for(int i = input.length; i < output.length; i++) {\n+            Assert.assertEquals(output[i], (long)0);\n+        }\n+    }\n+\n+    @ForceInline\n+    static\n+    void testVectorUCastIntToLong(VectorSpecies<Integer> a, VectorSpecies<Long> b, int[] input, long[] output) {\n+        assert(input.length == a.length());\n+        assert(output.length == b.length());\n+\n+        IntVector av = IntVector.fromArray(a, input, 0);\n+        LongVector bv = (LongVector) av.convertShape(VectorOperators.ZERO_EXTEND_I2L, b, 0);\n+        bv.intoArray(output, 0);\n+\n+        for (int i = 0; i < Math.min(input.length, output.length); i++) {\n+            Assert.assertEquals(output[i], Integer.toUnsignedLong(input[i]));\n+        }\n+        for(int i = input.length; i < output.length; i++) {\n+            Assert.assertEquals(output[i], (long)0);\n+        }\n+    }\n+\n+    @Test(dataProvider = \"byteUnaryOpProvider\")\n+    static void testUCastFromByte(IntFunction<byte[]> fa) {\n+        byte[] bin64 = fa.apply(bspec64.length());\n+        byte[] bin128 = fa.apply(bspec128.length());\n+        byte[] bin256 = fa.apply(bspec256.length());\n+        byte[] bin512 = fa.apply(bspec512.length());\n+\n+        short[] sout64 = new short[sspec64.length()];\n+        short[] sout128 = new short[sspec128.length()];\n+        short[] sout256 = new short[sspec256.length()];\n+        short[] sout512 = new short[sspec512.length()];\n+\n+        int[] iout64 = new int[ispec64.length()];\n+        int[] iout128 = new int[ispec128.length()];\n+        int[] iout256 = new int[ispec256.length()];\n+        int[] iout512 = new int[ispec512.length()];\n+\n+        long[] lout64 = new long[lspec64.length()];\n+        long[] lout128 = new long[lspec128.length()];\n+        long[] lout256 = new long[lspec256.length()];\n+        long[] lout512 = new long[lspec512.length()];\n+\n+        for (int i = 0; i < NUM_ITER; i++) {\n+            \/\/ B2S exact fit\n+            testVectorUCastByteToShort(bspec64, sspec128, bin64, sout128);\n+            testVectorUCastByteToShort(bspec128, sspec256, bin128, sout256);\n+            testVectorUCastByteToShort(bspec256, sspec512, bin256, sout512);\n+\n+            \/\/ B2S expansion\n+            testVectorUCastByteToShort(bspec64, sspec64, bin64, sout64);\n+            testVectorUCastByteToShort(bspec128, sspec128, bin128, sout128);\n+            testVectorUCastByteToShort(bspec256, sspec256, bin256, sout256);\n+            testVectorUCastByteToShort(bspec512, sspec512, bin512, sout512);\n+\n+            testVectorUCastByteToShort(bspec128, sspec64, bin128, sout64);\n+            testVectorUCastByteToShort(bspec256, sspec128, bin256, sout128);\n+            testVectorUCastByteToShort(bspec512, sspec256, bin512, sout256);\n+\n+            testVectorUCastByteToShort(bspec256, sspec64, bin256, sout64);\n+            testVectorUCastByteToShort(bspec512, sspec128, bin512, sout128);\n+\n+            testVectorUCastByteToShort(bspec512, sspec64, bin512, sout64);\n+\n+            \/\/ B2S contraction\n+            testVectorUCastByteToShort(bspec64, sspec256, bin64, sout256);\n+            testVectorUCastByteToShort(bspec128, sspec512, bin128, sout512);\n+\n+            testVectorUCastByteToShort(bspec64, sspec512, bin64, sout512);\n+\n+            \/\/ B2I exact fit\n+            testVectorUCastByteToInt(bspec64, ispec256, bin64, iout256);\n+            testVectorUCastByteToInt(bspec128, ispec512, bin128, iout512);\n+\n+            \/\/ B2I expansion\n+            testVectorUCastByteToInt(bspec64, ispec128, bin64, iout128);\n+            testVectorUCastByteToInt(bspec128, ispec256, bin128, iout256);\n+            testVectorUCastByteToInt(bspec256, ispec512, bin256, iout512);\n+\n+            testVectorUCastByteToInt(bspec64, ispec64, bin64, iout64);\n+            testVectorUCastByteToInt(bspec128, ispec128, bin128, iout128);\n+            testVectorUCastByteToInt(bspec256, ispec256, bin256, iout256);\n+            testVectorUCastByteToInt(bspec512, ispec512, bin512, iout512);\n+\n+            testVectorUCastByteToInt(bspec128, ispec64, bin128, iout64);\n+            testVectorUCastByteToInt(bspec256, ispec128, bin256, iout128);\n+            testVectorUCastByteToInt(bspec512, ispec256, bin512, iout256);\n+\n+            testVectorUCastByteToInt(bspec256, ispec64, bin256, iout64);\n+            testVectorUCastByteToInt(bspec512, ispec128, bin512, iout128);\n+\n+            testVectorUCastByteToInt(bspec512, ispec64, bin512, iout64);\n+\n+            \/\/ B2I contraction\n+            testVectorUCastByteToInt(bspec64, ispec512, bin64, iout512);\n+\n+            \/\/ B2L exact fit\n+            testVectorUCastByteToLong(bspec64, lspec512, bin64, lout512);\n+\n+            \/\/ B2L expansion\n+            testVectorUCastByteToLong(bspec64, lspec256, bin64, lout256);\n+            testVectorUCastByteToLong(bspec128, lspec512, bin128, lout512);\n+\n+            testVectorUCastByteToLong(bspec64, lspec128, bin64, lout128);\n+            testVectorUCastByteToLong(bspec128, lspec256, bin128, lout256);\n+            testVectorUCastByteToLong(bspec256, lspec512, bin256, lout512);\n+\n+            testVectorUCastByteToLong(bspec64, lspec64, bin64, lout64);\n+            testVectorUCastByteToLong(bspec128, lspec128, bin128, lout128);\n+            testVectorUCastByteToLong(bspec256, lspec256, bin256, lout256);\n+            testVectorUCastByteToLong(bspec512, lspec512, bin512, lout512);\n+\n+            testVectorUCastByteToLong(bspec128, lspec64, bin128, lout64);\n+            testVectorUCastByteToLong(bspec256, lspec128, bin256, lout128);\n+            testVectorUCastByteToLong(bspec512, lspec256, bin512, lout256);\n+\n+            testVectorUCastByteToLong(bspec256, lspec64, bin256, lout64);\n+            testVectorUCastByteToLong(bspec512, lspec128, bin512, lout128);\n+\n+            testVectorUCastByteToLong(bspec512, lspec64, bin512, lout64);\n+        }\n+    }\n+\n+    @Test(dataProvider = \"shortUnaryOpProvider\")\n+    static void testUCastFromShort(IntFunction<short[]> fa) {\n+        short[] sin64 = fa.apply(sspec64.length());\n+        short[] sin128 = fa.apply(sspec128.length());\n+        short[] sin256 = fa.apply(sspec256.length());\n+        short[] sin512 = fa.apply(sspec512.length());\n+\n+        int[] iout64 = new int[ispec64.length()];\n+        int[] iout128 = new int[ispec128.length()];\n+        int[] iout256 = new int[ispec256.length()];\n+        int[] iout512 = new int[ispec512.length()];\n+\n+        long[] lout64 = new long[lspec64.length()];\n+        long[] lout128 = new long[lspec128.length()];\n+        long[] lout256 = new long[lspec256.length()];\n+        long[] lout512 = new long[lspec512.length()];\n+\n+        for (int i = 0; i < NUM_ITER; i++) {\n+            \/\/ S2I exact fit\n+            testVectorUCastShortToInt(sspec64, ispec128, sin64, iout128);\n+            testVectorUCastShortToInt(sspec128, ispec256, sin128, iout256);\n+            testVectorUCastShortToInt(sspec256, ispec512, sin256, iout512);\n+\n+            \/\/ S2I expansion\n+            testVectorUCastShortToInt(sspec64, ispec64, sin64, iout64);\n+            testVectorUCastShortToInt(sspec128, ispec128, sin128, iout128);\n+            testVectorUCastShortToInt(sspec256, ispec256, sin256, iout256);\n+            testVectorUCastShortToInt(sspec512, ispec512, sin512, iout512);\n+\n+            testVectorUCastShortToInt(sspec128, ispec64, sin128, iout64);\n+            testVectorUCastShortToInt(sspec256, ispec128, sin256, iout128);\n+            testVectorUCastShortToInt(sspec512, ispec256, sin512, iout256);\n+\n+            testVectorUCastShortToInt(sspec256, ispec64, sin256, iout64);\n+            testVectorUCastShortToInt(sspec512, ispec128, sin512, iout128);\n+\n+            testVectorUCastShortToInt(sspec512, ispec64, sin512, iout64);\n+\n+            \/\/ S2I contraction\n+            testVectorUCastShortToInt(sspec64, ispec256, sin64, iout256);\n+            testVectorUCastShortToInt(sspec128, ispec512, sin128, iout512);\n+\n+            testVectorUCastShortToInt(sspec64, ispec512, sin64, iout512);\n+\n+            \/\/ S2L exact fit\n+            testVectorUCastShortToLong(sspec64, lspec256, sin64, lout256);\n+            testVectorUCastShortToLong(sspec128, lspec512, sin128, lout512);\n+\n+            \/\/ S2L expansion\n+            testVectorUCastShortToLong(sspec64, lspec128, sin64, lout128);\n+            testVectorUCastShortToLong(sspec128, lspec256, sin128, lout256);\n+            testVectorUCastShortToLong(sspec256, lspec512, sin256, lout512);\n+\n+            testVectorUCastShortToLong(sspec64, lspec64, sin64, lout64);\n+            testVectorUCastShortToLong(sspec128, lspec128, sin128, lout128);\n+            testVectorUCastShortToLong(sspec256, lspec256, sin256, lout256);\n+            testVectorUCastShortToLong(sspec512, lspec512, sin512, lout512);\n+\n+            testVectorUCastShortToLong(sspec128, lspec64, sin128, lout64);\n+            testVectorUCastShortToLong(sspec256, lspec128, sin256, lout128);\n+            testVectorUCastShortToLong(sspec512, lspec256, sin512, lout256);\n+\n+            testVectorUCastShortToLong(sspec256, lspec64, sin256, lout64);\n+            testVectorUCastShortToLong(sspec512, lspec128, sin512, lout128);\n+\n+            testVectorUCastShortToLong(sspec512, lspec64, sin512, lout64);\n+\n+            \/\/ S2L contraction\n+            testVectorUCastShortToLong(sspec64, lspec512, sin64, lout512);\n+        }\n+    }\n+\n+    @Test(dataProvider = \"intUnaryOpProvider\")\n+    static void testUCastFromInt(IntFunction<int[]> fa) {\n+        int[] iin64 = fa.apply(ispec64.length());\n+        int[] iin128 = fa.apply(ispec128.length());\n+        int[] iin256 = fa.apply(ispec256.length());\n+        int[] iin512 = fa.apply(ispec512.length());\n+\n+        long[] lout64 = new long[lspec64.length()];\n+        long[] lout128 = new long[lspec128.length()];\n+        long[] lout256 = new long[lspec256.length()];\n+        long[] lout512 = new long[lspec512.length()];\n+\n+        \/\/ I2L exact fit\n+        testVectorUCastIntToLong(ispec64, lspec128, iin64, lout128);\n+        testVectorUCastIntToLong(ispec128, lspec256, iin128, lout256);\n+        testVectorUCastIntToLong(ispec256, lspec512, iin256, lout512);\n+\n+        \/\/ I2L expansion\n+        testVectorUCastIntToLong(ispec64, lspec64, iin64, lout64);\n+        testVectorUCastIntToLong(ispec128, lspec128, iin128, lout128);\n+        testVectorUCastIntToLong(ispec256, lspec256, iin256, lout256);\n+        testVectorUCastIntToLong(ispec512, lspec512, iin512, lout512);\n+\n+        testVectorUCastIntToLong(ispec128, lspec64, iin128, lout64);\n+        testVectorUCastIntToLong(ispec256, lspec128, iin256, lout128);\n+        testVectorUCastIntToLong(ispec512, lspec256, iin512, lout256);\n+\n+        testVectorUCastIntToLong(ispec256, lspec64, iin256, lout64);\n+        testVectorUCastIntToLong(ispec512, lspec128, iin512, lout128);\n+\n+        testVectorUCastIntToLong(ispec512, lspec64, iin512, lout64);\n+\n+        \/\/ I2L contraction\n+        testVectorUCastIntToLong(ispec64, lspec256, iin64, lout256);\n+        testVectorUCastIntToLong(ispec128, lspec512, iin128, lout512);\n+\n+        testVectorUCastIntToLong(ispec64, lspec512, iin64, lout512);\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/VectorReshapeTests.java","additions":321,"deletions":0,"binary":false,"changes":321,"status":"modified"},{"patch":"@@ -502,1 +502,1 @@\n-        Assert.assertEquals(outputLong, inputLong & (((1L << (SPECIES.length() - 1)) << 1) - 1));\n+        Assert.assertEquals(outputLong, (inputLong & (((0xFFFFFFFFFFFFFFFFL >>> (64 - SPECIES.length()))))));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Miscellaneous.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+ * @bug 8266936 8276422\n@@ -42,0 +43,1 @@\n+ * @run main\/othervm -Xlog:class+unload,finalizer -Xmx16m --finalization=disabled jdk.jfr.event.runtime.TestFinalizerStatisticsEvent disabled\n@@ -48,0 +50,1 @@\n+    private static boolean disabled = false;\n@@ -55,0 +58,4 @@\n+        if (args.length > 0 && \"disabled\".equals(args[0])) {\n+            disabled = true;\n+            System.out.println(\"Testing with finalization disabled\");\n+        }\n@@ -72,2 +79,6 @@\n-            verify(recording2);\n-            verify(recording1);\n+            if (disabled) {\n+                verifyDisabled(recording1);\n+            } else {\n+                verifyEnabled(recording2);\n+                verifyEnabled(recording1);\n+            }\n@@ -87,1 +98,2 @@\n-    private static void verify(Recording recording) throws Throwable {\n+    \/* Verify correct operation with finalization enabled *\/\n+    private static void verifyEnabled(Recording recording) throws Throwable {\n@@ -111,0 +123,13 @@\n+    \/* Verify no jdk.FinalizerStatistics events with finalization disabled *\/\n+    private static void verifyDisabled(Recording recording) throws Throwable {\n+        int f10nEvents = 0;\n+        List<RecordedEvent> events = Events.fromRecording(recording);\n+        for (RecordedEvent event : events) {\n+            System.out.println(\"Event:\" + event);\n+            if (\"jdk.FinalizerStatistics\".equals(event.getEventType().getName())) {\n+                f10nEvents++;\n+            }\n+        }\n+        Asserts.assertEquals(f10nEvents, 0, \"Finalization disabled, but recorded \" + f10nEvents + \" jdk.FinalizerStatistics events\");\n+    }\n+\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestFinalizerStatisticsEvent.java","additions":28,"deletions":3,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jfr.jcmd;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\/**\n+ * @test\n+ * @summary The test verifies JFR.configure command can only set certain options before JFR is started.\n+ * @key jfr\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib \/test\/jdk\n+ * @run main\/othervm jdk.jfr.jcmd.TestJcmdConfigureReadOnly\n+ *\/\n+public class TestJcmdConfigureReadOnly {\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Set an option before initializing JFR.\n+        OutputAnalyzer output = JcmdHelper.jcmd(\"JFR.configure\", \"stackdepth=\" + 128);\n+        output.shouldContain(\"Stack depth: 128\");\n+        \/\/ JFR.start will initialize JFR.\n+        output = JcmdHelper.jcmd(\"JFR.start\");\n+        JcmdAsserts.assertRecordingHasStarted(output);\n+        \/\/ Attempt to set a new value after JFR initialization.\n+        output = JcmdHelper.jcmd(\"JFR.configure\", \"stackdepth=\" + 256);\n+        \/\/ After initialization, the option is considered read-only.\n+        output.shouldContain(\"Stack depth: 128\");\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/jcmd\/TestJcmdConfigureReadOnly.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.ArrayList;\n@@ -77,0 +78,1 @@\n+        \/\/ Test without dumppath\n@@ -82,0 +84,11 @@\n+        \/\/ Test with dumppath\n+        Path dumppath = Files.createTempDirectory(null);\n+        try {\n+            test(CrasherIllegalAccess.class, \"\", true, dumppath.toString());\n+            test(CrasherIllegalAccess.class, \"\", false, dumppath.toString());\n+            test(CrasherHalt.class, \"\", true, dumppath.toString());\n+            test(CrasherHalt.class, \"\", false, dumppath.toString());\n+        } finally {\n+            dumppath.toFile().delete();\n+        }\n+\n@@ -88,0 +101,8 @@\n+        test(crasher, signal, disk, null);\n+    }\n+\n+    private static void test(Class<?> crasher, String signal, boolean disk, String dumppath) throws Exception {\n+        test(crasher, signal, disk, dumppath, dumppath);\n+    }\n+\n+    private static void test(Class<?> crasher, String signal, boolean disk, String dumppath, String expectedPath) throws Exception {\n@@ -92,1 +113,1 @@\n-                verify(runProcess(crasher, signal, disk));\n+                verify(runProcess(crasher, signal, disk, dumppath), expectedPath);\n@@ -108,1 +129,1 @@\n-    private static long runProcess(Class<?> crasher, String signal, boolean disk) throws Exception {\n+    private static long runProcess(Class<?> crasher, String signal, boolean disk, String dumppath) throws Exception {\n@@ -110,9 +131,11 @@\n-        final String flightRecordingOptions = \"dumponexit=true,disk=\" + Boolean.toString(disk);\n-        Process p = ProcessTools.createTestJvm(\n-                \"-Xmx64m\",\n-                \"-XX:-CreateCoredumpOnCrash\",\n-                \"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\",\n-                \"-XX:StartFlightRecording:\" + flightRecordingOptions,\n-                crasher.getName(),\n-                signal)\n-            .start();\n+        List<String> options = new ArrayList<>();\n+        options.add(\"-Xmx64m\");\n+        options.add(\"-XX:-CreateCoredumpOnCrash\");\n+        options.add(\"--add-exports=java.base\/jdk.internal.misc=ALL-UNNAMED\");\n+        options.add(\"-XX:StartFlightRecording:dumponexit=true,disk=\" + Boolean.toString(disk));\n+        if (dumppath != null) {\n+            options.add(\"-XX:FlightRecorderOptions=dumppath=\" + dumppath);\n+        }\n+        options.add(crasher.getName());\n+        options.add(signal);\n+        Process p = ProcessTools.createTestJvm(options).start();\n@@ -128,1 +151,1 @@\n-    private static void verify(long pid) throws IOException {\n+    private static void verify(long pid, String dumppath) throws IOException {\n@@ -130,1 +153,2 @@\n-        Path file = Paths.get(fileName).toAbsolutePath().normalize();\n+        Path file = (dumppath == null) ? Paths.get(fileName) : Paths.get(dumppath, fileName);\n+        file = file.toAbsolutePath().normalize();\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestDumpOnCrash.java","additions":37,"deletions":13,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc.\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.security.AlgorithmParameterGenerator;\n+import java.security.AlgorithmParameters;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n+import java.security.PrivateKey;\n+import java.security.Provider;\n+import java.security.PublicKey;\n+import java.security.SecureRandom;\n+import java.security.Signature;\n+import java.security.spec.DSAGenParameterSpec;\n+import java.security.spec.DSAParameterSpec;\n+\n+\/*\n+ * @test\n+ * @bug 8271566\n+ * @library \/test\/lib ..\n+ * @modules jdk.crypto.cryptoki\n+ * @run main\/othervm\/timeout=30 LargeDSAKey\n+ *\/\n+\n+public final class LargeDSAKey extends PKCS11Test {\n+\n+    private static final boolean enableDebug = false;\n+\n+    private static final String knownText =\n+            \"Known text known text known text\";\n+\n+    @Override\n+    public void main(Provider p) throws Exception {\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"DSA\", p);\n+        AlgorithmParameterGenerator dsaParGen =\n+                AlgorithmParameterGenerator.getInstance(\"DSA\");\n+        DSAGenParameterSpec dsaParGenSpec =\n+                new DSAGenParameterSpec(2048, 256);\n+        dsaParGen.init(dsaParGenSpec, new SecureRandom());\n+        AlgorithmParameters params = dsaParGen.generateParameters();\n+        DSAParameterSpec dsaParams =\n+                params.getParameterSpec(DSAParameterSpec.class);\n+        kpg.initialize(dsaParams);\n+        KeyPair kp = kpg.generateKeyPair();\n+        doTestSignature(kp, p);\n+    }\n+\n+    private static void doTestSignature(KeyPair kp, Provider p)\n+            throws Exception {\n+        byte[] knownTextSig = null;\n+        Signature s = Signature.getInstance(\"SHA1withDSA\", p);\n+        PrivateKey privKey = kp.getPrivate();\n+        PublicKey pubKey = kp.getPublic();\n+        if (enableDebug) {\n+            System.out.println(\"Signature algorithm: \" + s.getAlgorithm());\n+            System.out.println(\"Signature Provider: \" + s.getProvider());\n+            System.out.println(\"Private key for signature: \" + privKey);\n+            System.out.println(\"Public key for signature: \" + pubKey);\n+        }\n+        s.initSign(privKey);\n+        s.update(knownText.getBytes());\n+        knownTextSig = s.sign();\n+        s.initVerify(pubKey);\n+        s.update(knownText.getBytes());\n+        if (s.verify(knownTextSig) == false) {\n+            throw new Exception(\"Could not verify signature\");\n+        }\n+        if (enableDebug) {\n+            System.out.println(\"Signature verified\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Throwable {\n+        main(new LargeDSAKey());\n+        System.out.println(\"TEST PASS - OK\");\n+    }\n+\n+}\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/LargeDSAKey.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8225181\n+ * @summary KeyStore should have a getAttributes method\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.tools.keytool\n+ *          java.base\/sun.security.x509\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.security.tools.keytool.CertAndKeyGen;\n+import sun.security.x509.X500Name;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.security.KeyStore;\n+import java.security.cert.Certificate;\n+\n+public class GetAttributes {\n+\n+    static char[] pass = \"changeit\".toCharArray();\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ Create a keystore with one private key entry and one cert entry\n+        CertAndKeyGen cag = new CertAndKeyGen(\"EC\", \"SHA256withECDSA\");\n+        KeyStore ks = KeyStore.getInstance(\"pkcs12\");\n+        ks.load(null, null);\n+        cag.generate(\"secp256r1\");\n+        ks.setKeyEntry(\"a\", cag.getPrivateKey(), pass, new Certificate[] {\n+                cag.getSelfCertificate(new X500Name(\"CN=a\"), 1000)} );\n+        cag.generate(\"secp256r1\");\n+        ks.setCertificateEntry(\"b\",\n+                cag.getSelfCertificate(new X500Name(\"CN=b\"), 1000));\n+\n+        \/\/ Test\n+        check(ks);\n+\n+        \/\/ Test newly loaded\n+        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+        ks.store(bos, pass);\n+        KeyStore ks2 = KeyStore.getInstance(\"pkcs12\");\n+        ks2.load(new ByteArrayInputStream(bos.toByteArray()), pass);\n+        check(ks2);\n+    }\n+\n+    static void check(KeyStore ks) throws Exception {\n+        var entry = ks.getEntry(\"a\", new KeyStore.PasswordProtection(pass));\n+        Asserts.assertEQ(ks.getAttributes(\"a\"), entry.getAttributes());\n+        entry = ks.getEntry(\"b\", null);\n+        Asserts.assertEQ(ks.getAttributes(\"b\"), entry.getAttributes());\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/pkcs12\/GetAttributes.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/*\n+ * @test\n+ * @bug 8275721\n+ * @modules jdk.localedata\n+ * @summary Checks Chinese time zone names for `UTC` using CLDR are consistent\n+ * @run testng\/othervm -Djava.locale.providers=CLDR,COMPAT ChineseTimeZoneNameTest\n+ * @run testng\/othervm -Djava.locale.providers=CLDR ChineseTimeZoneNameTest\n+ *\/\n+\n+import java.time.Instant;\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Locale;\n+\n+import static org.testng.Assert.assertEquals;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+@Test\n+public class ChineseTimeZoneNameTest {\n+\n+    private static final Locale SIMPLIFIED_CHINESE = Locale.forLanguageTag(\"zh-Hans\");\n+    private static final Locale TRADITIONAL_CHINESE = Locale.forLanguageTag(\"zh-Hant\");\n+    private static final ZonedDateTime EPOCH_UTC =\n+        ZonedDateTime.ofInstant(Instant.ofEpochSecond (0), ZoneId.of (\"UTC\"));\n+\n+    @DataProvider(name=\"locales\")\n+    Object[][] data() {\n+        return new Object[][] {\n+            {Locale.CHINESE,                        SIMPLIFIED_CHINESE},\n+            {Locale.SIMPLIFIED_CHINESE,             SIMPLIFIED_CHINESE},\n+            {Locale.forLanguageTag(\"zh-SG\"),        SIMPLIFIED_CHINESE},\n+            {Locale.forLanguageTag(\"zh-Hans-TW\"),   SIMPLIFIED_CHINESE},\n+            {Locale.forLanguageTag(\"zh-HK\"),        TRADITIONAL_CHINESE},\n+            {Locale.forLanguageTag(\"zh-MO\"),        TRADITIONAL_CHINESE},\n+            {Locale.TRADITIONAL_CHINESE,            TRADITIONAL_CHINESE},\n+            {Locale.forLanguageTag(\"zh-Hant-CN\"),   TRADITIONAL_CHINESE},\n+        };\n+    }\n+\n+    @Test(dataProvider=\"locales\")\n+    public void test_ChineseTimeZoneNames(Locale testLoc, Locale resourceLoc) {\n+        assertEquals(DateTimeFormatter.ofPattern(\"z\", testLoc).format(EPOCH_UTC),\n+                DateTimeFormatter.ofPattern(\"z\", resourceLoc).format(EPOCH_UTC));\n+        assertEquals(DateTimeFormatter.ofPattern(\"zzzz\", testLoc).format(EPOCH_UTC),\n+                DateTimeFormatter.ofPattern(\"zzzz\", resourceLoc).format(EPOCH_UTC));\n+    }\n+}\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/ChineseTimeZoneNameTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+import jdk.internal.jimage.BasicImageReader;\n+import jdk.internal.jimage.ImageLocation;\n+import jdk.test.lib.compiler.InMemoryJavaCompiler;\n+import jdk.test.lib.util.JarBuilder;\n+\n+import tests.Helper;\n+import tests.JImageGenerator;\n+import tests.Result;\n+\n+\/*\n+ * @test\n+ * @bug 8278185\n+ * @summary Test non-ASCII path in custom JRE\n+ * @library ..\/lib\n+ *          \/test\/lib\n+ * @modules java.base\/jdk.internal.jimage\n+ *          jdk.jdeps\/com.sun.tools.classfile\n+ *          jdk.jlink\/jdk.tools.jimage\n+ * @build tests.*\n+ * @run main\/othervm JImageNonAsciiNameTest\n+ *\/\n+\n+public class JImageNonAsciiNameTest {\n+    private final static String moduleName = \"A_module\";\n+    private final static String packageName = \"test.\\u3042\"; \/\/non-ASCII\n+    private final static String className = \"A\";\n+    private final static String fullName = packageName + \".\" + className;\n+    private static Helper helper;\n+\n+    public static void main(String[] args) throws Exception {\n+        helper = Helper.newHelper();\n+        if (helper == null) {\n+            System.err.println(\"Test not run\");\n+            return;\n+        }\n+\n+        String source =\n+            \"package \"+packageName+\";\" +\n+            \"public class \"+className+\" {\" +\n+            \"    public static void main(String[] args) {}\" +\n+            \"}\";\n+        String moduleInfo = \"module \" + moduleName + \" {}\";\n+\n+        \/\/ Using InMemory features to avoid generating non-ASCII name file\n+        byte[] byteA = InMemoryJavaCompiler.compile(fullName, source);\n+        byte[] byteModule = InMemoryJavaCompiler.compile(\n+                \"module-info\", moduleInfo);\n+\n+        Path jarDir = helper.getJarDir();\n+        JarBuilder jb = new JarBuilder(\n+                jarDir.resolve(moduleName + \".jar\").toString());\n+        jb.addEntry(fullName.replace(\".\",\"\/\") + \".class\", byteA);\n+        jb.addEntry(\"module-info.class\", byteModule);\n+        jb.build();\n+\n+        Path outDir = helper.createNewImageDir(moduleName);\n+\n+        Result result = JImageGenerator.getJLinkTask()\n+                .modulePath(helper.defaultModulePath())\n+                .output(outDir)\n+                .addMods(moduleName)\n+                .call();\n+        Path testImage = result.assertSuccess();\n+\n+        BasicImageReader bir = BasicImageReader.open(\n+                testImage.resolve(\"lib\").resolve(\"modules\"));\n+        ImageLocation loc = bir.findLocation(moduleName,\n+                fullName.replace(\".\",\"\/\") + \".class\");\n+        if (loc == null) {\n+            throw new RuntimeException(\"Failed to find \" +\n+                    fullName + \" in module \" +moduleName);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/jimage\/JImageNonAsciiNameTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -139,2 +139,2 @@\n-        final List<String> resourceData = List.of(\"A\", \"[BB]\", \"C\", \"Foo\",\n-                \"GoodbyeHello\");\n+        final List<String> resourceData = List.of(\"A\", \"[BB]\", \"C\", \"Foo\", \"Foo\",\n+                \"GoodbyeHello\", \"_B\");\n@@ -144,1 +144,1 @@\n-                \"Bar\", \"Foo\", \"B\"));\n+                \"Bar\", \"Foo\", \"B\", \"_B\", \"JJ\"));\n@@ -148,1 +148,1 @@\n-                \"B\", \"Goodbye\");\n+                \"Bar\", \"Bar\", \"Goodbye\", \"JJ\");\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/OverridableResourceTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -169,3 +169,18 @@\n-                    <div class=\"block\"><code>java.util.Foo&lt;String&gt;<\/code>\n-                     Baz&lt;Object&gt;\n-                     <code>#b(List&lt;Integer&gt;)<\/code><\/div>\"\"\",\n+                    <div class=\"block\">\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @link<\/summary>\n+                    <pre><code>java.util.Foo&lt;String&gt;<\/code><\/pre>\n+                    <\/details>\n+\n+                    \\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @linkplain<\/summary>\n+                    <pre>Baz&lt;Object&gt;<\/pre>\n+                    <\/details>\n+\n+                    \\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @link<\/summary>\n+                    <pre><code>#b(List&lt;Integer&gt;)<\/code><\/pre>\n+                    <\/details>\n+                    <\/div>\"\"\",\n@@ -178,3 +193,18 @@\n-                    <li><code>java.util.List&lt;Bar&gt;<\/code><\/li>\n-                    <li><code>Baz&lt;Object, String&gt;<\/code><\/li>\n-                    <li><code>B#b(List&lt;Baz&gt;)<\/code><\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>java.util.List&lt;Bar&gt;<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>Baz&lt;Object, String&gt;<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>B#b(List&lt;Baz&gt;)<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testGenericTypeLink\/TestGenericTypeLink.java","additions":36,"deletions":6,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                <dd><code>i<\/code> - a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -76,1 +76,1 @@\n-                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                <dd><code>i<\/code> - a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -104,1 +104,1 @@\n-                <dd>a &lt; b<\/dd>\n+                <dd>a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -108,1 +108,1 @@\n-                <dd>a &lt; b<\/dd>\n+                <dd>a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -150,1 +150,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n@@ -153,1 +158,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n@@ -156,1 +166,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n@@ -159,1 +174,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInherited\/TestInherited.java","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                    <div class=\"block\">case1: A hanging &lt;  : xx&lt;<\/div>\"\"\");\n+                    <div class=\"block\">case1: A hanging &lt;  : xx<span class=\"invalid-tag\">invalid input: '&lt;'<\/span><\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNonInlineHtmlTagRemoval\/TestNonInlineHtmlTagRemoval.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,6 @@\n-                    <li><code>Foo&lt;String&gt;<\/code><\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>Foo&lt;String&gt;<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSeeTag\/TestSeeTag.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.file.attribute.BasicFileAttributes;\n@@ -32,0 +33,1 @@\n+import java.util.function.BiPredicate;\n@@ -125,0 +127,42 @@\n+\n+    \/\/ There's JavadocTester.diff(), but its semantics is different; hence we\n+    \/\/ use this method.\n+    protected void match(Path path1, Path path2, BiPredicate<Path, BasicFileAttributes> filter) throws IOException {\n+        checking(\"diff \" + path1 + \", \" + path2);\n+        try (var paths1 = Files.find(path1, Integer.MAX_VALUE, filter).sorted();\n+             var paths2 = Files.find(path2, Integer.MAX_VALUE, filter).sorted()) {\n+            var it1 = paths1.iterator();\n+            var it2 = paths2.iterator();\n+            while (true) {\n+                if (it1.hasNext() != it2.hasNext()) {\n+                    failed(it1.hasNext() ? it1.next() : it2.next(), \"missing\");\n+                    return;\n+                }\n+                if (!it1.hasNext()) {\n+                    passed(\"match\");\n+                    return;\n+                }\n+                Path next1 = it1.next();\n+                Path next2 = it2.next();\n+                if (!path1.relativize(next1).equals(path2.relativize(next2))) {\n+                    \/\/ compare directory tree to see the difference\n+                    failed(\"mismatching names %s %s\".formatted(next1, next2));\n+                    return;\n+                }\n+                if (Files.isDirectory(next1) != Files.isDirectory(next2)) {\n+                    \/\/ it'd be surprising to ever see this\n+                    failed(\"mismatching types %s %s\".formatted(next1, next2));\n+                    return;\n+                }\n+                if (Files.isDirectory(next1)) {\n+                    continue;\n+                }\n+                if (Files.size(next1) != Files.size(next2)\n+                        || Files.mismatch(next1, next2) != -1L) {\n+                    failed(\"mismatching contents: diff %s %s\".formatted(next1.toAbsolutePath(),\n+                            next2.toAbsolutePath()));\n+                    return;\n+                }\n+            }\n+        }\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -606,0 +606,109 @@\n+    @Test\n+    public void testPositiveInlineTagMarkup_FalseMarkup(Path base) throws Exception {\n+        var testCases = List.of(\n+                new TestCase(\n+                        \"\"\"\n+                        First line\n+                        \/\/ @formatter:off\n+                          Second Line\n+                            Third line\n+                            \/\/ @formatter:on\n+                              Fourth line\n+                        \"\"\",\n+                        \"\"\"\n+                        First line\n+                        \/\/ @formatter:off\n+                          Second Line\n+                            Third line\n+                            \/\/ @formatter:on\n+                              Fourth line\n+                        \"\"\"),\n+                new TestCase(\"showThis\",\n+                        \"\"\"\n+                        First line\n+                        \/\/ @formatter:off\n+                          \/\/ @start region=showThis\n+                          Second Line\n+                            Third line\n+                            \/\/ @end region\n+                            \/\/ @formatter:on\n+                              Fourth line\n+                        \"\"\",\n+                        \"\"\"\n+                        Second Line\n+                          Third line\n+                        \"\"\")\n+        );\n+        testPositive(base, testCases);\n+    }\n+\n+    @Test\n+    public void testPositiveInlineTagMarkup_NextLineTwoTags(Path base) throws Exception {\n+        var firstTag = new String[]{\n+                \"@highlight string=firstWord\",\n+                \"@replace string=secondWord replacement=replacedSecondWord\",\n+                \"@link substring=firstWord target=java.lang.Object\"};\n+        var secondTag = new String[]{\n+                \"@highlight string=secondWord\",\n+                \"@replace string=firstWord replacement=replacedFirstWord\",\n+                \"@link substring=secondWord target=java.lang.Thread\"};\n+        List<TestCase> testCases = new ArrayList<>();\n+        for (var f : firstTag) {\n+            for (var s : secondTag)\n+                for (var separator : List.of(\"\", \" \")) {\n+                    var t = new TestCase(\n+                            \"\"\"\n+                                first-line \/\/ %s %s%s:\n+                                firstWord secondWord thirdWord\n+                                \"\"\".formatted(f, s, separator),\n+                            \"\"\"\n+                                first-line\n+                                firstWord secondWord thirdWord \/\/ %s %s\n+                                \"\"\".formatted(f, s));\n+                    testCases.add(t);\n+            }\n+        }\n+        testEquivalence(base, testCases);\n+    }\n+\n+    record Snippet(String region, String snippet) { }\n+\n+    private void testEquivalence(Path base, List<TestCase> testCases) throws IOException {\n+        \/\/ group all the testcases in just two runs\n+        Path out1 = base.resolve(\"out1\");\n+        Path out2 = base.resolve(\"out2\");\n+        run(base.resolve(\"src1\"), out1, testCases.stream().map(t -> new Snippet(t.region(), t.input())).toList());\n+        run(base.resolve(\"src2\"), out2, testCases.stream().map(t -> new Snippet(t.region(), t.expectedOutput())).toList());\n+        match(out1, out2, (p, a) -> \/* p.toString().endsWith(\".html\") *\/ true);\n+    }\n+\n+    private void run(Path source, Path target, List<Snippet> snippets) throws IOException {\n+        StringBuilder methods = new StringBuilder();\n+        forEachNumbered(snippets, (i, n) -> {\n+            String r = i.region.isBlank() ? \"\" : \"region=\" + i.region;\n+            var methodDef = \"\"\"\n+\n+                    \/**\n+                    {@snippet %s:\n+                    %s}*\/\n+                    public void case%s() {}\n+                    \"\"\".formatted(r, i.snippet(), n);\n+            methods.append(methodDef);\n+        });\n+        var classDef = \"\"\"\n+                public class A {\n+                %s\n+                }\n+                \"\"\".formatted(methods.toString());\n+        Path src = Files.createDirectories(source);\n+        tb.writeJavaFiles(src, classDef);\n+        javadoc(\"-d\", target.toString(),\n+                \"--limit-modules\", \"java.base\",\n+                \"-quiet\", \"-nohelp\", \"-noindex\", \"-nonavbar\", \"-nosince\",\n+                \"-notimestamp\", \"-notree\", \"-Xdoclint:none\",\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"A.java\").toString());\n+        checkExit(Exit.OK);\n+        checkNoCrashes();\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266666 8275788\n+ * @bug 8266666 8275788 8276964\n@@ -1083,0 +1083,6 @@\n+        checkOutput(\"pkg\/A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>File not found: text.txt<\/pre>\n+                        <\/details>\n+                        \"\"\");\n@@ -1158,0 +1164,6 @@\n+        checkOutput(\"pkg\/A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>@snippet does not specify contents<\/pre>\n+                        <\/details>\n+                        \"\"\");\n@@ -1214,0 +1226,6 @@\n+        checkOutput(\"pkg\/A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>@snippet specifies multiple external contents, which is ambiguous<\/pre>\n+                        <\/details>\n+                        \"\"\");\n@@ -1866,9 +1884,9 @@\n-{@snippet %s:\n-    First line\n-      Second line\n-}\n-\"\"\".formatted(attrName),\n-\"\"\"\n-: error: missing value for attribute \"%s\"\n-{@snippet %s:\n-          ^\"\"\".formatted(attrName, attrName));\n+                        {@snippet %s:\n+                            First line\n+                              Second line\n+                        }\n+                        \"\"\".formatted(attrName),\n+                        \"\"\"\n+                        : error: missing value for attribute \"%s\"\n+                        {@snippet %s:\n+                                  ^\"\"\".formatted(attrName, attrName));\n@@ -1918,9 +1936,12 @@\n-{@snippet region=%s%s%s:\n-    First line\n-      Second line\n-}\n-\"\"\".formatted(quote, value, quote),\n-                      \"\"\"\n-: error: illegal value for attribute \"region\": \"%s\"\n-{@snippet region=%s%s%s:\n-          ^\"\"\".formatted(quote.isEmpty() ? \"\" : value, quote, value, quote)); \/\/ unquoted whitespace translates to empty string\n+                        {@snippet region=%s%s%s:\n+                            First line\n+                              Second line\n+                        }\n+                        \"\"\".formatted(quote, value, quote),\n+                        \"\"\"\n+                        : error: illegal value for attribute \"region\": \"%s\"\n+                        {@snippet region=%s%s%s:\n+                                  ^\n+                        \"\"\".formatted(\n+                                quote.isEmpty() ? \"\" : value, \/\/ unquoted whitespace translates to empty string\n+                                quote, value, quote));\n@@ -2018,0 +2039,11 @@\n+        checkOutput(\"pkg\/A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>contents mismatch:\n+                        ----------------- inline -------------------\n+                        Hello, Snippet!\n+                        ----------------- external -----------------\n+                        Hello, Snippet!...more\n+                        <\/pre>\n+                        <\/details>\n+                        \"\"\");\n@@ -2058,0 +2090,13 @@\n+        checkOutput(\"pkg\/A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>contents mismatch:\n+                        ----------------- inline -------------------\n+                        Hello, Snippet! ...more\n+\n+                        ----------------- external -----------------\n+                        Hello, Snippet!\n+\n+                        <\/pre>\n+                        <\/details>\n+                        \"\"\");\n@@ -2281,3 +2326,3 @@\n-{@snippet :\n-hello there \/\/   @highlight   regex =\"\\t**\"\n-}\"\"\",\n+                    {@snippet :\n+                    hello there \/\/   @highlight   regex =\"\\t**\"\n+                    }\"\"\",\n@@ -2285,4 +2330,4 @@\n-error: snippet markup: invalid regex\n-hello there \/\/   @highlight   regex =\"\\t**\"\n-                                      \\t ^\n-\"\"\"),\n+                    error: snippet markup: invalid regex\n+                    hello there \/\/   @highlight   regex =\"\\t**\"\n+                                                          \\t ^\n+                    \"\"\"),\n@@ -2290,3 +2335,3 @@\n-{@snippet :\n-hello there \/\/   @highlight   regex =\"\\\\t**\"\n-}\"\"\",\n+                    {@snippet :\n+                    hello there \/\/   @highlight   regex =\"\\\\t**\"\n+                    }\"\"\",\n@@ -2294,4 +2339,4 @@\n-error: snippet markup: invalid regex\n-hello there \/\/   @highlight   regex =\"\\\\t**\"\n-                                         ^\n-\"\"\"),\n+                    error: snippet markup: invalid regex\n+                    hello there \/\/   @highlight   regex =\"\\\\t**\"\n+                                                             ^\n+                    \"\"\"),\n@@ -2299,3 +2344,3 @@\n-{@snippet :\n-hello there \/\/ @highlight regex=\"\\\\.\\\\*\\\\+\\\\E\"\n-}\"\"\",\n+                    {@snippet :\n+                    hello there \/\/ @highlight regex=\"\\\\.\\\\*\\\\+\\\\E\"\n+                    }\"\"\",\n@@ -2303,4 +2348,4 @@\n-error: snippet markup: invalid regex\n-hello there \/\/ @highlight regex=\"\\\\.\\\\*\\\\+\\\\E\"\n-                                 \\s\\s\\s\\s   ^\n-\"\"\"), \/\/ use \\s to counteract shift introduced by \\\\ so as to visually align ^ right below E\n+                    error: snippet markup: invalid regex\n+                    hello there \/\/ @highlight regex=\"\\\\.\\\\*\\\\+\\\\E\"\n+                                                     \\s\\s\\s\\s   ^\n+                    \"\"\"), \/\/ use \\s to counteract shift introduced by \\\\ so as to visually align ^ right below E\n@@ -2308,3 +2353,3 @@\n-{@snippet :\n-hello there \/\/   @highlight  type=\"italics\" regex =\"  [\"\n-}\"\"\",\n+                    {@snippet :\n+                    hello there \/\/   @highlight  type=\"italics\" regex =\"  [\"\n+                    }\"\"\",\n@@ -2312,4 +2357,4 @@\n-error: snippet markup: invalid regex\n-hello there \/\/   @highlight  type=\"italics\" regex =\"  [\"\n-                                                      ^\n-\"\"\")\n+                    error: snippet markup: invalid regex\n+                    hello there \/\/   @highlight  type=\"italics\" regex =\"  [\"\n+                                                                          ^\n+                    \"\"\")\n@@ -2345,0 +2390,6 @@\n+        checkOutput(\"A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>invalid regex<\/pre>\n+                        <\/details>\n+                        \"\"\");\n@@ -2355,3 +2406,3 @@\n-{@snippet :\n-    hello \/\/ @link\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @link\n+                        }\"\"\",\n@@ -2359,3 +2410,3 @@\n-error: snippet markup: missing attribute \"target\"\n-    hello \/\/ @link\n-              ^\n+                        error: snippet markup: missing attribute \"target\"\n+                            hello \/\/ @link\n+                                      ^\n@@ -2364,3 +2415,3 @@\n-{@snippet :\n-    hello \/\/ @start\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @start\n+                        }\"\"\",\n@@ -2368,3 +2419,3 @@\n-error: snippet markup: missing attribute \"region\"\n-    hello \/\/ @start\n-              ^\n+                        error: snippet markup: missing attribute \"region\"\n+                            hello \/\/ @start\n+                                      ^\n@@ -2373,3 +2424,3 @@\n-{@snippet :\n-    hello \/\/ @replace\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @replace\n+                        }\"\"\",\n@@ -2377,3 +2428,3 @@\n-error: snippet markup: missing attribute \"replacement\"\n-    hello \/\/ @replace\n-              ^\n+                        error: snippet markup: missing attribute \"replacement\"\n+                            hello \/\/ @replace\n+                                      ^\n@@ -2383,3 +2434,3 @@\n-{@snippet :\n-    hello \/\/ @highlight regex=\\\\w+ substring=hello\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @highlight regex=\\\\w+ substring=hello\n+                        }\"\"\",\n@@ -2387,3 +2438,3 @@\n-error: snippet markup: attributes \"substring\" and \"regex\" used simultaneously\n-    hello \/\/ @highlight regex=\\\\w+ substring=hello\n-                                  ^\n+                        error: snippet markup: attributes \"substring\" and \"regex\" used simultaneously\n+                            hello \/\/ @highlight regex=\\\\w+ substring=hello\n+                                                          ^\n@@ -2392,3 +2443,3 @@\n-{@snippet :\n-    hello \/\/ @start region=\"x\" name=\"here\"\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @start region=\"x\" name=\"here\"\n+                        }\"\"\",\n@@ -2396,3 +2447,3 @@\n-error: snippet markup: unexpected attribute\n-    hello \/\/ @start region=\"x\" name=\"here\"\n-                               ^\n+                        error: snippet markup: unexpected attribute\n+                            hello \/\/ @start region=\"x\" name=\"here\"\n+                                                       ^\n@@ -2401,3 +2452,3 @@\n-{@snippet :\n-    hello \/\/ @start region=\"\"\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @start region=\"\"\n+                        }\"\"\",\n@@ -2405,3 +2456,3 @@\n-error: snippet markup: invalid attribute value\n-    hello \/\/ @start region=\"\"\n-                            ^\n+                        error: snippet markup: invalid attribute value\n+                            hello \/\/ @start region=\"\"\n+                                                    ^\n@@ -2410,3 +2461,3 @@\n-{@snippet :\n-    hello \/\/ @link target=\"Object#equals()\" type=fluffy\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @link target=\"Object#equals()\" type=fluffy\n+                        }\"\"\",\n@@ -2414,3 +2465,3 @@\n-error: snippet markup: invalid attribute value\n-    hello \/\/ @link target=\"Object#equals()\" type=fluffy\n-                                                 ^\n+                        error: snippet markup: invalid attribute value\n+                            hello \/\/ @link target=\"Object#equals()\" type=fluffy\n+                                                                         ^\n@@ -2420,3 +2471,4 @@\n-{@snippet :\n-    hello \/\/ @highlight substring=\"\n-}\"\"\",\n+                        {@snippet :\n+                            hello\n+                            there \/\/ @highlight substring=\"\n+                        }\"\"\",\n@@ -2424,3 +2476,3 @@\n-error: snippet markup: unterminated attribute value\n-    hello \/\/ @highlight substring=\"\n-                                  ^\n+                        error: snippet markup: unterminated attribute value\n+                            there \/\/ @highlight substring=\"\n+                                                          ^\n@@ -2429,5 +2481,5 @@\n-{@snippet :\n-    hello \/\/ @start region=\"this\"\n-    world \/\/ @start region=\"this\"\n-    !     \/\/ @end\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @start region=\"this\"\n+                            world \/\/ @start region=\"this\"\n+                            !     \/\/ @end\n+                        }\"\"\",\n@@ -2435,3 +2487,3 @@\n-error: snippet markup: duplicated region\n-    world \/\/ @start region=\"this\"\n-                            ^\n+                        error: snippet markup: duplicated region\n+                            world \/\/ @start region=\"this\"\n+                                                    ^\n@@ -2440,3 +2492,3 @@\n-{@snippet :\n-    hello \/\/ @end\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @end\n+                        }\"\"\",\n@@ -2444,3 +2496,3 @@\n-error: snippet markup: no region to end\n-    hello \/\/ @end\n-              ^\n+                        error: snippet markup: no region to end\n+                            hello \/\/ @end\n+                                      ^\n@@ -2449,3 +2501,3 @@\n-{@snippet :\n-    hello \/\/ @start region=this\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @start region=this\n+                        }\"\"\",\n@@ -2453,3 +2505,3 @@\n-error: snippet markup: unpaired region\n-    hello \/\/ @start region=this\n-              ^\n+                        error: snippet markup: unpaired region\n+                            hello \/\/ @start region=this\n+                                      ^\n@@ -2458,3 +2510,3 @@\n-{@snippet :\n-    hello \/\/ @highlight substring=\"hello\" :\n-}\"\"\",\n+                        {@snippet :\n+                            hello \/\/ @highlight substring=\"hello\" :\n+                        }\"\"\",\n@@ -2462,4 +2514,4 @@\n-error: snippet markup: tag refers to non-existent lines\n-    hello \/\/ @highlight substring=\"hello\" :\n-              ^\n-              \"\"\")\n+                        error: snippet markup: tag refers to non-existent lines\n+                            hello \/\/ @highlight substring=\"hello\" :\n+                                      ^\n+                        \"\"\")\n@@ -2495,0 +2547,6 @@\n+        checkOutput(\"A.html\", true, \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid @snippet<\/summary>\n+                        <pre>missing attribute \"target\"<\/pre>\n+                        <\/details>\n+                        \"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetTag.java","additions":180,"deletions":122,"binary":false,"changes":302,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8144095 8164825 8169818 8153402 8165405 8177079 8178013 8167554 8166232\n+ * @bug 8144095 8164825 8169818 8153402 8165405 8177079 8178013 8167554 8166232 8277328\n@@ -334,0 +334,16 @@\n+    @Test\n+    public void testClassPathWithSpace() throws IOException {\n+        Compiler compiler = new Compiler();\n+        Path outDir = compiler.getPath(\"testClassPathWithSpace\");\n+        Path dirWithSpace = Files.createDirectories(outDir.resolve(\"dir with space\"));\n+        Files.createDirectories(dirWithSpace.resolve(\"nested with space\"));\n+        String[] pathArray = new String[] {\"dir\\\\ with\\\\ space\/\"};\n+        String[] pathArray2 = new String[] {\"nested\\\\ with\\\\ space\/\"};\n+        testNoStartUp(\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/|\", false, pathArray),\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/dir|\", false, pathArray),\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/dir\\\\ with|\", false, pathArray),\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/dir\\\\ with\\\\ space\/|\", false, pathArray2)\n+        );\n+    }\n+\n@@ -341,0 +357,1 @@\n+                                  .filter(file -> file.getFileName().toString().contains(\" \"))\n@@ -342,1 +359,1 @@\n-                                  .map(file -> file.getFileName().toString())\n+                                  .map(file -> file.getFileName().toString().replace(\" \", \"\\\\ \"))\n@@ -350,2 +367,2 @@\n-                                 .filter(file -> file.getFileName().toString().startsWith(selectedFile))\n-                                 .map(file -> file.getFileName().toString() + (Files.isDirectory(file) ? \"\/\" : \"\"))\n+                                 .filter(file -> file.getFileName().toString().startsWith(selectedFile.replace(\"\\\\ \", \" \")))\n+                                 .map(file -> file.getFileName().toString().replace(\" \", \"\\\\ \") + (Files.isDirectory(file) ? \"\/\" : \"\"))\n","filename":"test\/langtools\/jdk\/jshell\/CommandCompletionTest.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- *                                      RELEASE_18\n+ *                                      RELEASE_18 RELEASE_19\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetSourceVersions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n-        EIGHTEEN(\"18\", 62);\n+        EIGHTEEN(\"18\", 62),\n+        NINETEEN(\"19\", 63);\n","filename":"test\/langtools\/tools\/javac\/classfiles\/ClassVersionChecker.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,271 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277634\n+ * @summary Verify the correct constantpool entries are created for invokedynamic instructions using\n+ *          the same bootstrap and type, but different name.\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.code\n+ *          jdk.compiler\/com.sun.tools.javac.comp\n+ *          jdk.compiler\/com.sun.tools.javac.jvm\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.tree\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ *          jdk.jdeps\/com.sun.tools.classfile\n+ *          jdk.jdeps\/com.sun.tools.javap\n+ * @build toolbox.JarTask toolbox.JavacTask toolbox.JavapTask toolbox.ToolBox\n+ * @run main IndyCorrectInvocationName\n+ *\/\n+\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import com.sun.source.util.JavacTask;\n+import com.sun.source.util.Plugin;\n+import com.sun.source.util.TaskEvent;\n+import com.sun.source.util.TaskListener;\n+\n+import com.sun.tools.classfile.Attribute;\n+import com.sun.tools.classfile.BootstrapMethods_attribute;\n+import com.sun.tools.classfile.ClassFile;\n+import com.sun.tools.classfile.Code_attribute;\n+import com.sun.tools.classfile.ConstantPool.CONSTANT_InvokeDynamic_info;\n+import com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info;\n+import com.sun.tools.classfile.Instruction;\n+\n+import com.sun.tools.javac.api.BasicJavacTask;\n+import com.sun.tools.javac.code.Symbol;\n+import com.sun.tools.javac.code.Symbol.MethodSymbol;\n+import com.sun.tools.javac.code.Symtab;\n+import com.sun.tools.javac.code.Type;\n+import com.sun.tools.javac.jvm.PoolConstant;\n+import com.sun.tools.javac.tree.JCTree;\n+import com.sun.tools.javac.tree.JCTree.JCClassDecl;\n+import com.sun.tools.javac.tree.JCTree.JCCompilationUnit;\n+import com.sun.tools.javac.tree.JCTree.JCLiteral;\n+import com.sun.tools.javac.tree.JCTree.JCMethodInvocation;\n+import com.sun.tools.javac.tree.JCTree.Tag;\n+import com.sun.tools.javac.tree.TreeMaker;\n+import com.sun.tools.javac.tree.TreeScanner;\n+import com.sun.tools.javac.util.Context;\n+import com.sun.tools.javac.util.Names;\n+\n+import toolbox.JarTask;\n+import toolbox.ToolBox;\n+\n+\n+public class IndyCorrectInvocationName implements Plugin {\n+    private static final String NL = System.lineSeparator();\n+\n+    public static void main(String... args) throws Exception {\n+        new IndyCorrectInvocationName().run();\n+    }\n+\n+    void run() throws Exception {\n+        ToolBox tb = new ToolBox();\n+        Path pluginClasses = Path.of(\"plugin-classes\");\n+        tb.writeFile(pluginClasses.resolve(\"META-INF\").resolve(\"services\").resolve(Plugin.class.getName()),\n+                IndyCorrectInvocationName.class.getName() + System.lineSeparator());\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(Path.of(ToolBox.testClasses))) {\n+            for (Path p : ds) {\n+                if (p.getFileName().toString().startsWith(\"IndyCorrectInvocationName\") ||\n+                    p.getFileName().toString().endsWith(\".class\")) {\n+                    Files.copy(p, pluginClasses.resolve(p.getFileName()));\n+                }\n+            }\n+        }\n+\n+        Path pluginJar = Path.of(\"plugin.jar\");\n+        new JarTask(tb, pluginJar)\n+                .baseDir(pluginClasses)\n+                .files(\".\")\n+                .run();\n+\n+        Path src = Path.of(\"src\");\n+            tb.writeJavaFiles(src,\n+                    \"\"\"\n+                    import java.lang.invoke.CallSite;\n+                    import java.lang.invoke.ConstantCallSite;\n+                    import java.lang.invoke.MethodHandles;\n+                    import java.lang.invoke.MethodHandles.Lookup;\n+                    import java.lang.invoke.MethodType;\n+                    public class Test{\n+                        private static final String NL = System.lineSeparator();\n+                        private static StringBuilder output = new StringBuilder();\n+                        public static void doRun() {\n+                            method(\"a\");\n+                            method(\"b\");\n+                            method(\"a\");\n+                            method(\"b\");\n+                        }\n+                        public static String run() {\n+                            doRun();\n+                            return output.toString();\n+                        }\n+                        public static void method(String name) {}\n+                        public static void actualMethod(String name) {\n+                            output.append(name).append(NL);\n+                        }\n+                        public static CallSite bootstrap(Lookup lookup, String name, MethodType type) throws Exception {\n+                            return new ConstantCallSite(MethodHandles.lookup()\n+                                                                     .findStatic(Test.class,\n+                                                                                 \"actualMethod\",\n+                                                                                 MethodType.methodType(void.class,\n+                                                                                                       String.class))\n+                                                                     .bindTo(name));\n+                        }\n+                    }\n+                    \"\"\");\n+        Path classes = Files.createDirectories(Path.of(\"classes\"));\n+\n+        new toolbox.JavacTask(tb)\n+                .classpath(pluginJar)\n+                .options(\"-XDaccessInternalAPI\")\n+                .outdir(classes)\n+                .files(tb.findJavaFiles(src))\n+                .run()\n+                .writeAll();\n+\n+        URLClassLoader cl = new URLClassLoader(new URL[] {classes.toUri().toURL()});\n+\n+        String actual = (String) cl.loadClass(\"Test\")\n+                                   .getMethod(\"run\")\n+                                   .invoke(null);\n+        String expected = \"a\" + NL + \"b\" + NL + \"a\" + NL +\"b\" + NL;\n+        if (!Objects.equals(actual, expected)) {\n+            throw new AssertionError(\"expected: \" + expected + \"; but got: \" + actual);\n+        }\n+\n+        Path testClass = classes.resolve(\"Test.class\");\n+        ClassFile cf = ClassFile.read(testClass);\n+        BootstrapMethods_attribute bootAttr =\n+                (BootstrapMethods_attribute) cf.attributes.get(Attribute.BootstrapMethods);\n+        if (bootAttr.bootstrap_method_specifiers.length != 1) {\n+            throw new AssertionError(\"Incorrect number of bootstrap methods: \" +\n+                                     bootAttr.bootstrap_method_specifiers.length);\n+        }\n+        Code_attribute codeAttr =\n+                (Code_attribute) cf.methods[1].attributes.get(Attribute.Code);\n+        Set<Integer> seenBootstraps = new HashSet<>();\n+        Set<Integer> seenNameAndTypes = new HashSet<>();\n+        Set<String> seenNames = new HashSet<>();\n+        for (Instruction i : codeAttr.getInstructions()) {\n+            switch (i.getOpcode()) {\n+                case INVOKEDYNAMIC -> {\n+                    int idx = i.getUnsignedShort(1);\n+                    CONSTANT_InvokeDynamic_info dynamicInfo =\n+                            (CONSTANT_InvokeDynamic_info) cf.constant_pool.get(idx);\n+                    seenBootstraps.add(dynamicInfo.bootstrap_method_attr_index);\n+                    seenNameAndTypes.add(dynamicInfo.name_and_type_index);\n+                    CONSTANT_NameAndType_info nameAndTypeInfo =\n+                            cf.constant_pool.getNameAndTypeInfo(dynamicInfo.name_and_type_index);\n+                    seenNames.add(nameAndTypeInfo.getName());\n+                }\n+                case RETURN -> {}\n+                default -> throw new AssertionError(\"Unexpected instruction: \" + i.getOpcode());\n+            }\n+            }\n+        if (seenBootstraps.size() != 1) {\n+            throw new AssertionError(\"Unexpected bootstraps: \" + seenBootstraps);\n+        }\n+        if (seenNameAndTypes.size() != 2) {\n+            throw new AssertionError(\"Unexpected names and types: \" + seenNameAndTypes);\n+        }\n+        if (!seenNames.equals(Set.of(\"a\", \"b\"))) {\n+            throw new AssertionError(\"Unexpected names and types: \" + seenNames);\n+        }\n+    }\n+\n+    \/\/ Plugin impl...\n+\n+    @Override\n+    public String getName() { return \"IndyCorrectInvocationName\"; }\n+\n+    @Override\n+    public void init(JavacTask task, String... args) {\n+        Context c = ((BasicJavacTask) task).getContext();\n+        task.addTaskListener(new TaskListener() {\n+            @Override\n+            public void started(TaskEvent e) {\n+                if (e.getKind() == TaskEvent.Kind.GENERATE) {\n+                    convert(c, (JCCompilationUnit) e.getCompilationUnit());\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public boolean autoStart() {\n+        return true;\n+    }\n+\n+    private void convert(Context context, JCCompilationUnit toplevel) {\n+        TreeMaker make = TreeMaker.instance(context);\n+        Names names = Names.instance(context);\n+        Symtab syms = Symtab.instance(context);\n+        new TreeScanner() {\n+            MethodSymbol bootstrap;\n+            @Override\n+            public void visitClassDef(JCClassDecl tree) {\n+                bootstrap = (MethodSymbol) tree.sym.members().getSymbolsByName(names.fromString(\"bootstrap\")).iterator().next();\n+                super.visitClassDef(tree);\n+            }\n+            @Override\n+            public void visitApply(JCMethodInvocation tree) {\n+                if (tree.args.size() == 1 && tree.args.head.hasTag(Tag.LITERAL)) {\n+                    String name = (String) ((JCLiteral) tree.args.head).value;\n+                    Type.MethodType indyType = new Type.MethodType(\n+                            com.sun.tools.javac.util.List.nil(),\n+                            syms.voidType,\n+                            com.sun.tools.javac.util.List.nil(),\n+                            syms.methodClass\n+                    );\n+                    Symbol.DynamicMethodSymbol dynSym = new Symbol.DynamicMethodSymbol(names.fromString(name),\n+                            syms.noSymbol,\n+                            bootstrap.asHandle(),\n+                            indyType,\n+                            new PoolConstant.LoadableConstant[0]);\n+\n+                    JCTree.JCFieldAccess qualifier = make.Select(make.QualIdent(bootstrap.owner), dynSym.name);\n+                    qualifier.sym = dynSym;\n+                    qualifier.type = syms.voidType;\n+                    tree.meth = qualifier;\n+                    tree.args = com.sun.tools.javac.util.List.nil();\n+                    tree.type = syms.voidType;\n+                }\n+                super.visitApply(tree);\n+            }\n+\n+        }.scan(toplevel);\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/classwriter\/IndyCorrectInvocationName.java","additions":271,"deletions":0,"binary":false,"changes":271,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-\/\/ options: --debug=dumpLambdaToMethodDeduplication\n+\/\/ options: -g:none --debug=dumpLambdaToMethodDeduplication\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/LambdaDeduplicate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test 8275233\n+ * @summary Incorrect line number reported in exception stack trace thrown from a lambda expression\n+ * @compile\/ref=DeduplicationDebugInfo.out           -XDrawDiagnostics -XDdebug.dumpLambdaToMethodDeduplication -g:none        DeduplicationDebugInfo.java\n+ * @compile\/ref=DeduplicationDebugInfo_none.out      -XDrawDiagnostics -XDdebug.dumpLambdaToMethodDeduplication                DeduplicationDebugInfo.java\n+ * @compile\/ref=DeduplicationDebugInfo_none.out      -XDrawDiagnostics -XDdebug.dumpLambdaToMethodDeduplication -g:lines       DeduplicationDebugInfo.java\n+ * @compile\/ref=DeduplicationDebugInfo_none.out      -XDrawDiagnostics -XDdebug.dumpLambdaToMethodDeduplication -g:vars        DeduplicationDebugInfo.java\n+ * @compile\/ref=DeduplicationDebugInfo_none.out      -XDrawDiagnostics -XDdebug.dumpLambdaToMethodDeduplication -g:lines,vars  DeduplicationDebugInfo.java\n+ *\/\n+\n+import java.util.function.Function;\n+\n+class DeduplicationDebugInfoTest {\n+    void f() {\n+        Function<Object, Integer> f = x -> x.hashCode();\n+        Function<Object, Integer> g = x -> x.hashCode();\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/deduplication\/DeduplicationDebugInfo.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+DeduplicationDebugInfo.java:39:39: compiler.note.verbose.l2m.deduplicate: lambda$f$0(java.lang.Object)\n","filename":"test\/langtools\/tools\/javac\/lambda\/deduplication\/DeduplicationDebugInfo.out","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"","filename":"test\/langtools\/tools\/javac\/lambda\/deduplication\/DeduplicationDebugInfo_none.out","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/langtools\/test\/TEST.ROOT","status":"copied"},{"patch":"@@ -96,0 +96,1 @@\n+                                \"-g:none\",\n","filename":"test\/langtools\/tools\/javac\/lambda\/deduplication\/DeduplicationTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -126,1 +126,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -136,1 +136,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -146,1 +146,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -167,1 +167,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -186,1 +186,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -207,1 +207,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -228,1 +228,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n@@ -249,1 +249,1 @@\n-    @SupportedSourceVersion(RELEASE_18)\n+    @SupportedSourceVersion(RELEASE_19)\n","filename":"test\/langtools\/tools\/javac\/lib\/JavacTestingAbstractProcessor.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -372,96 +372,0 @@\n-    @Test\n-    public void testInaccessiblePermitted(Path base) throws IOException {\n-        Path current = base.resolve(\".\");\n-        Path libSrc = current.resolve(\"lib-src\");\n-\n-        tb.writeJavaFiles(libSrc,\n-                           \"\"\"\n-                           package lib;\n-                           public sealed interface S permits A, B {}\n-                           \"\"\",\n-                           \"\"\"\n-                           package lib;\n-                           public final class A implements S {}\n-                           \"\"\",\n-                           \"\"\"\n-                           package lib;\n-                           final class B implements S {}\n-                           \"\"\");\n-\n-        Path libClasses = current.resolve(\"libClasses\");\n-\n-        Files.createDirectories(libClasses);\n-\n-        new JavacTask(tb)\n-                .options(\"--enable-preview\",\n-                         \"-source\", JAVA_VERSION)\n-                .outdir(libClasses)\n-                .files(tb.findJavaFiles(libSrc))\n-                .run();\n-\n-        Path src = current.resolve(\"src\");\n-        tb.writeJavaFiles(src,\n-                           \"\"\"\n-                           package test;\n-                           import lib.*;\n-                           public class Test {\n-                               private int test(S obj) {\n-                                   return switch (obj) {\n-                                       case A a -> 0;\n-                                   };\n-                               }\n-                           }\n-                           \"\"\");\n-\n-        Path classes = current.resolve(\"libClasses\");\n-\n-        Files.createDirectories(libClasses);\n-\n-        var log =\n-                new JavacTask(tb)\n-                    .options(\"--enable-preview\",\n-                             \"-source\", JAVA_VERSION,\n-                             \"-XDrawDiagnostics\",\n-                             \"-Xlint:-preview\",\n-                             \"--class-path\", libClasses.toString())\n-                    .outdir(classes)\n-                    .files(tb.findJavaFiles(src))\n-                    .run(Task.Expect.FAIL)\n-                    .writeAll()\n-                    .getOutputLines(Task.OutputKind.DIRECT);\n-\n-        List<String> expectedErrors = List.of(\n-               \"Test.java:5:16: compiler.err.not.exhaustive\",\n-               \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n-               \"- compiler.note.preview.recompile\",\n-               \"1 error\");\n-\n-        if (!expectedErrors.equals(log)) {\n-            throw new AssertionError(\"Incorrect errors, expected: \" + expectedErrors +\n-                                      \", actual: \" + log);\n-        }\n-\n-        Path bClass = libClasses.resolve(\"lib\").resolve(\"B.class\");\n-\n-        Files.delete(bClass);\n-\n-        var log2 =\n-                new JavacTask(tb)\n-                    .options(\"--enable-preview\",\n-                             \"-source\", JAVA_VERSION,\n-                             \"-XDrawDiagnostics\",\n-                             \"-Xlint:-preview\",\n-                             \"--class-path\", libClasses.toString())\n-                    .outdir(classes)\n-                    .files(tb.findJavaFiles(src))\n-                    .run(Task.Expect.FAIL)\n-                    .writeAll()\n-                    .getOutputLines(Task.OutputKind.DIRECT);\n-\n-        if (!expectedErrors.equals(log2)) {\n-            throw new AssertionError(\"Incorrect errors, expected: \" + expectedErrors +\n-                                      \", actual: \" + log2);\n-        }\n-\n-    }\n-\n","filename":"test\/langtools\/tools\/javac\/patterns\/Exhaustiveness.java","additions":0,"deletions":96,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @bug 8262891 8268333 8268896 8269802 8269808 8270151 8269113\n+ * @bug 8262891 8268333 8268896 8269802 8269808 8270151 8269113 8277864\n@@ -88,0 +88,3 @@\n+        assertEquals(5, switchOverPrimitiveInt(0));\n+        assertEquals(7, switchOverPrimitiveInt(1));\n+        assertEquals(9, switchOverPrimitiveInt(2));\n@@ -594,0 +597,8 @@\n+    private int switchOverPrimitiveInt(Integer i) {\n+        return switch (i) {\n+            case 0 -> 5 + 0;\n+            case Integer j && j == 1 -> 6 + j;\n+            case Integer j -> 7 + j;\n+        };\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Switches.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277106\n+ * @summary Verify no error is when compiling a class whose supertype is not exported.\n+ * @modules jdk.compiler\n+ *          jdk.jfr\n+ * @compile --release 17 NonExportedSuperTypes.java\n+ *\/\n+\n+import jdk.jfr.Event;\n+\n+public class NonExportedSuperTypes {\n+\n+    public void evt(Event evt) {\n+        evt.toString();\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/platform\/NonExportedSuperTypes.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8072480\n+ * @bug 8072480 8277106\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import java.util.ArrayList;\n+import java.util.HashMap;\n@@ -32,0 +34,1 @@\n+import java.util.Map;\n@@ -33,0 +36,3 @@\n+import java.io.OutputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.DirectoryStream;\n@@ -55,0 +61,8 @@\n+import com.sun.tools.classfile.Attribute;\n+import com.sun.tools.classfile.Attributes;\n+import com.sun.tools.classfile.ClassFile;\n+import com.sun.tools.classfile.ClassWriter;\n+import com.sun.tools.classfile.ConstantPool;\n+import com.sun.tools.classfile.ConstantPool.CPInfo;\n+import com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info;\n+import com.sun.tools.classfile.ModulePackages_attribute;\n@@ -644,0 +658,300 @@\n+    @Test\n+    void testNonExportedSuperclass() throws Exception {\n+        doTestComplex(\"api.Api\",\n+                      \"\"\"\n+                      package api;\n+\n+                      public class Api extends nonapi.Impl.Nested.Exp {\n+\n+                        public Api();\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      import api.Api;\n+                      public class Test {\n+                          private void t(Api api) {\n+                            api.run();\n+                          }\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      import api.Api;\n+                      public class Test {\n+                          private void t(Api api) {\n+                              fail\n+                          }\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      module m {\n+                          exports api;\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      package api;\n+                      import nonapi.Impl;\n+                      public class Api extends Impl.Nested.Exp {\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      package api;\n+                      public @interface Ann {\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      package nonapi;\n+                      import api.Ann;\n+                      public class Impl {\n+                          public static final String C = \"\";\n+                          public void test() {}\n+                          @Ann\n+                          public static class Nested {\n+                              public static class Exp extends Nested implements Runnable {\n+                                  public void run() {}\n+                                  public OtherNested get() { return null; }\n+                              }\n+                          }\n+                          public static class OtherNested {}\n+                      }\n+                      \"\"\");\n+    }\n+\n+    void doTestComplex(String printClass,\n+                      String expected,\n+                      String depSuccess,\n+                      String depFailure,\n+                      String... code) throws Exception {\n+        ToolBox tb = new ToolBox();\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path output = Paths.get(testClasses, \"test-data\" + i++);\n+        deleteRecursively(output);\n+        Files.createDirectories(output);\n+        Path ver9Jar = output.resolve(\"9.jar\");\n+        compileAndPack(output,\n+                       ver9Jar,\n+                       code);\n+\n+\n+        Path ctSym = output.resolve(\"ct.sym\");\n+\n+        deleteRecursively(ctSym);\n+\n+        CreateSymbols.ALLOW_NON_EXISTING_CLASSES = true;\n+        CreateSymbols.EXTENSION = \".class\";\n+\n+        deleteRecursively(ctSym);\n+\n+        List<VersionDescription> versions =\n+                Arrays.asList(new VersionDescription(ver9Jar.toAbsolutePath().toString(), \"9\", null));\n+\n+        ExcludeIncludeList acceptAll = new ExcludeIncludeList(null, null) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n+                return true;\n+            }\n+        };\n+        new CreateSymbols().createBaseLine(versions, acceptAll, ctSym, new String[0]);\n+        Path symbolsDesc = ctSym.resolve(\"symbols\");\n+        Path systemModules = ctSym.resolve(\"systemModules\");\n+\n+        Files.newBufferedWriter(systemModules).close();\n+\n+        Path classesZip = output.resolve(\"classes.zip\");\n+        Path classesDir = output.resolve(\"classes\");\n+\n+        new CreateSymbols().createSymbols(null, symbolsDesc.toAbsolutePath().toString(), classesZip.toAbsolutePath().toString(), 0, \"9\", systemModules.toString());\n+\n+        try (JarFile jf = new JarFile(classesZip.toFile())) {\n+            Enumeration<JarEntry> en = jf.entries();\n+\n+            while (en.hasMoreElements()) {\n+                JarEntry je = en.nextElement();\n+                if (je.isDirectory()) continue;\n+                Path target = classesDir.resolve(je.getName());\n+                Files.createDirectories(target.getParent());\n+                Files.copy(jf.getInputStream(je), target);\n+            }\n+        }\n+\n+        Path classes = classesDir;\n+        Path scratch = output.resolve(\"scratch\");\n+\n+        Files.createDirectories(scratch);\n+\n+        String modulePath;\n+\n+        try (Stream<Path> elements = Files.list(classes)) {\n+            modulePath = elements.filter(el -> el.getFileName().toString().contains(\"9\"))\n+                            .map(el -> el.resolve(\"m\"))\n+                            .map(el -> el.toAbsolutePath().toString())\n+                            .collect(Collectors.joining(File.pathSeparator));\n+        }\n+\n+        {\n+            String out = new JavacTask(tb, Task.Mode.CMDLINE)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", modulePath,\n+                             \"--add-modules\", \"m\",  \"-Xprint\", \"api.Api\")\n+                    .run(Expect.SUCCESS)\n+                    .getOutput(Task.OutputKind.STDOUT)\n+                    .replaceAll(\"\\\\R\", \"\\n\");\n+\n+            if (!out.equals(expected)) {\n+                throw new AssertionError(\"out=\" + out + \"; expected=\" + expected);\n+            }\n+        }\n+\n+        {\n+            new JavacTask(tb)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", modulePath,\n+                             \"--add-modules\", \"m\")\n+                    .sources(depSuccess)\n+                    .run(Expect.SUCCESS)\n+                    .writeAll();\n+        }\n+\n+        {\n+            String expectedFailure = new JavacTask(tb)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", output.resolve(\"temp\").toString(),\n+                             \"--add-modules\", \"m\", \"-XDrawDiagnostics\")\n+                    .sources(depFailure)\n+                    .run(Expect.FAIL)\n+                    .getOutput(Task.OutputKind.DIRECT)\n+                    .replaceAll(\"\\\\R\", \"\\n\");\n+\n+            String out = new JavacTask(tb)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", modulePath,\n+                             \"--add-modules\", \"m\", \"-XDrawDiagnostics\")\n+                    .sources(depFailure)\n+                    .run(Expect.FAIL)\n+                    .getOutput(Task.OutputKind.DIRECT)\n+                    .replaceAll(\"\\\\R\", \"\\n\");\n+\n+            if (!out.equals(expectedFailure)) {\n+                throw new AssertionError(\"out=\" + out + \"; expected=\" + expectedFailure);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testExtendsInternalData1() throws Exception {\n+        doTestData(\"\"\"\n+                   module name m\n+                   header exports api,nonapi[java.base] requires name\\\\u0020;java.base\\\\u0020;flags\\\\u0020;8000\\\\u0020;version\\\\u0020;0 flags 8000\n+\n+                   class name api\/Ann\n+                   header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601\n+\n+                   class name api\/Api\n+                   header extends nonapi\/Impl$Nested$Exp flags 21\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   method name <init> descriptor ()V flags 1\n+\n+                   class name nonapi\/Impl\n+                   header extends java\/lang\/Object nestMembers nonapi\/Impl$Nested,nonapi\/Impl$Nested$Exp flags 21\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   field name C descriptor Ljava\/lang\/String; constantValue  flags 19\n+                   method name <init> descriptor ()V flags 1\n+                   method name test descriptor ()V flags 1\n+\n+                   class name nonapi\/Impl$Nested\n+                   header extends java\/lang\/Object nestHost nonapi\/Impl flags 21 classAnnotations @Lapi\/Ann;\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   method name <init> descriptor ()V flags 1\n+\n+                   class name nonapi\/Impl$Nested$Exp\n+                   header extends nonapi\/Impl$Nested implements java\/lang\/Runnable nestHost nonapi\/Impl flags 21\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   method name <init> descriptor ()V flags 1\n+                   method name run descriptor ()V flags 1\n+                   method name get descriptor ()Lnonapi\/Impl$OtherNested; flags 1\n+\n+                   \"\"\",\n+                   \"\"\"\n+                   module m {\n+                       exports api;\n+                       exports nonapi to java.base;\n+                   }\n+                   \"\"\",\n+                   \"\"\"\n+                   package api;\n+                   import nonapi.Impl;\n+                   public class Api extends Impl.Nested.Exp {\n+                   }\n+                   \"\"\",\n+                   \"\"\"\n+                   package api;\n+                   public @interface Ann {\n+                   }\n+                   \"\"\",\n+                   \"\"\"\n+                   package nonapi;\n+                   import api.Ann;\n+                   public class Impl {\n+                       public static final String C = \"\";\n+                       public void test() {}\n+                       @Ann\n+                       public static class Nested {\n+                           public static class Exp extends Nested implements Runnable {\n+                               public void run() {}\n+                               public OtherNested get() { return null; }\n+                           }\n+                       }\n+                       public static class OtherNested {}\n+                   }\n+                   \"\"\");\n+    }\n+\n+    void doTestData(String data,\n+                          String... code) throws Exception {\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path output = Paths.get(testClasses, \"test-data\" + i++);\n+        deleteRecursively(output);\n+        Files.createDirectories(output);\n+        Path ver9Jar = output.resolve(\"9.jar\");\n+        compileAndPack(output,\n+                       ver9Jar,\n+                       code);\n+\n+        Path ctSym = output.resolve(\"ct.sym\");\n+\n+        deleteRecursively(ctSym);\n+\n+        CreateSymbols.ALLOW_NON_EXISTING_CLASSES = true;\n+        CreateSymbols.DO_NOT_MODIFY = \"\";\n+        CreateSymbols.EXTENSION = \".class\";\n+        CreateSymbols.INJECTED_VERSION = \"0\";\n+\n+        deleteRecursively(ctSym);\n+\n+        List<VersionDescription> versions =\n+                Arrays.asList(new VersionDescription(ver9Jar.toAbsolutePath().toString(), \"9\", null));\n+\n+        ExcludeIncludeList acceptAll = new ExcludeIncludeList(null, null) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n+                return true;\n+            }\n+        };\n+        new CreateSymbols().createBaseLine(versions, acceptAll, ctSym, new String[0]);\n+\n+        Path symFile = null;\n+\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(ctSym)) {\n+            for (Path p : ds) {\n+                if (p.toString().endsWith(\".sym.txt\")) {\n+                    if (symFile != null) {\n+                        throw new IllegalStateException(\"Multiple sym files!\");\n+                    } else {\n+                        symFile = p;\n+                    }\n+                }\n+            }\n+        }\n+        String acutalContent = new String(Files.readAllBytes(symFile), StandardCharsets.UTF_8);\n+        if (!acutalContent.equals(data)) {\n+            throw new AssertionError(\"out=\" + acutalContent + \"; expected=\" + data);\n+        }\n+    }\n+\n@@ -715,1 +1029,1 @@\n-            @Override public boolean accepts(String className) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n@@ -746,0 +1060,30 @@\n+        Path moduleInfo = scratch.resolve(\"module-info.class\");\n+        if (Files.exists(moduleInfo)) {\n+            Set<String> packages = new HashSet<>();\n+            for (String cf : classFiles) {\n+                int sep = cf.lastIndexOf(scratch.getFileSystem().getSeparator());\n+                if (sep != (-1)) {\n+                    packages.add(cf.substring(0, sep));\n+                }\n+            }\n+            ClassFile cf = ClassFile.read(moduleInfo);\n+            List<CPInfo> cp = new ArrayList<>();\n+            cp.add(null);\n+            cf.constant_pool.entries().forEach(cp::add);\n+            Map<String, Attribute> attrs = new HashMap<>(cf.attributes.map);\n+            int[] encodedPackages = new int[packages.size()];\n+            int i = 0;\n+            for (String p : packages) {\n+                int nameIndex = cp.size();\n+                cp.add(new CONSTANT_Utf8_info(p));\n+                encodedPackages[i++] = cp.size();\n+                cp.add(new ConstantPool.CONSTANT_Package_info(null, nameIndex));\n+            }\n+            int attrName = cp.size();\n+            cp.add(new CONSTANT_Utf8_info(Attribute.ModulePackages));\n+            attrs.put(Attribute.ModulePackages, new ModulePackages_attribute(attrName, encodedPackages));\n+            ClassFile newFile = new ClassFile(cf.magic, cf.minor_version, cf.major_version, new ConstantPool(cp.toArray(new CPInfo[0])), cf.access_flags, cf.this_class, cf.super_class, cf.interfaces, cf.fields, cf.methods, new Attributes(attrs));\n+            try (OutputStream out = Files.newOutputStream(moduleInfo)) {\n+                new ClassWriter().write(newFile, out);\n+            }\n+        }\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTestImpl.java","additions":345,"deletions":1,"binary":false,"changes":346,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.err.preview.feature.disabled.classfile: Bar.class, 18\n+- compiler.err.preview.feature.disabled.classfile: Bar.class, 19\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.nopreview.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.warn.preview.feature.use.classfile: Bar.class, 18\n+- compiler.warn.preview.feature.use.classfile: Bar.class, 19\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.preview.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.io.Writer;\n+import java.util.Set;\n+import javax.annotation.processing.AbstractProcessor;\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.annotation.processing.SupportedAnnotationTypes;\n+import javax.lang.model.SourceVersion;\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.ExecutableElement;\n+import javax.lang.model.element.AnnotationMirror;\n+import javax.lang.model.element.TypeElement;\n+import javax.lang.model.element.VariableElement;\n+import javax.tools.Diagnostic.Kind;\n+import javax.tools.JavaFileObject;\n+import java.util.List;\n+\n+@SupportedAnnotationTypes(\"*\")\n+public class Processor extends AbstractProcessor {\n+\n+  @Override\n+  public SourceVersion getSupportedSourceVersion() {\n+    return SourceVersion.latestSupported();\n+  }\n+\n+  int round = 1;\n+\n+  @Override\n+  public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+    processingEnv.getMessager().printMessage(Kind.NOTE, \"round \" + round);\n+    Element t = processingEnv.getElementUtils().getTypeElement(\"T8268575\");\n+    for (Element e : t.getEnclosedElements()) {\n+      if (e instanceof ExecutableElement) {\n+        for (VariableElement p : ((ExecutableElement) e).getParameters()) {\n+            List<? extends AnnotationMirror> annos = p.getAnnotationMirrors();\n+            if (annos.size() != 1) {\n+                throw new RuntimeException(\"Missing annotation in round \" + round);\n+            }\n+        }\n+      }\n+    }\n+    if (round == 1) {\n+      String name = \"A\";\n+      try {\n+        JavaFileObject jfo = processingEnv.getFiler().createSourceFile(name);\n+        try (Writer w = jfo.openWriter()) {\n+          w.write(\"@interface \" + name + \" {}\");\n+        }\n+      } catch (IOException e) {\n+        throw new UncheckedIOException(e);\n+      }\n+    }\n+    round++;\n+    return false;\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/8268575\/Processor.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug     8268575\n+ * @summary Annotations not visible on model elements before they are generated\n+ * @build   Processor\n+ * @compile -processor Processor T8268575.java\n+ *\/\n+\n+class T8268575 {\n+  void f(@A int x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/8268575\/T8268575.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,199 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8277105\n+ * @summary Verify missing permitted subtype is handled properly for both casts and pattern switches.\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ * @build toolbox.ToolBox toolbox.JavacTask\n+ * @run main MissingPermittedSubtypes\n+*\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import toolbox.TestRunner;\n+import toolbox.JavacTask;\n+import toolbox.Task;\n+import toolbox.ToolBox;\n+\n+public class MissingPermittedSubtypes extends TestRunner {\n+\n+    private static final String JAVA_VERSION = System.getProperty(\"java.specification.version\");\n+\n+    ToolBox tb;\n+\n+    public static void main(String... args) throws Exception {\n+        new MissingPermittedSubtypes().runTests();\n+    }\n+\n+    MissingPermittedSubtypes() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    public void runTests() throws Exception {\n+        runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void testInaccessiblePermitted(Path base) throws IOException {\n+        Path current = base.resolve(\".\");\n+        Path libSrc = current.resolve(\"lib-src\");\n+\n+        tb.writeJavaFiles(libSrc,\n+                           \"\"\"\n+                           package lib;\n+                           public sealed interface S permits A, B1, B2 {}\n+                           \"\"\",\n+                           \"\"\"\n+                           package lib;\n+                           public final class A implements S {}\n+                           \"\"\",\n+                           \"\"\"\n+                           package lib;\n+                           final class B1 implements S {}\n+                           \"\"\",\n+                           \"\"\"\n+                           package lib;\n+                           final class B2 implements S, Runnable {\n+                               public void run() {}\n+                           }\n+                           \"\"\");\n+\n+        Path libClasses = current.resolve(\"libClasses\");\n+\n+        Files.createDirectories(libClasses);\n+\n+        new JavacTask(tb)\n+                .options(\"--enable-preview\",\n+                         \"-source\", JAVA_VERSION)\n+                .outdir(libClasses)\n+                .files(tb.findJavaFiles(libSrc))\n+                .run();\n+\n+        Path b1Class = libClasses.resolve(\"lib\").resolve(\"B1.class\");\n+\n+        Files.delete(b1Class);\n+\n+        Path b2Class = libClasses.resolve(\"lib\").resolve(\"B2.class\");\n+\n+        Files.delete(b2Class);\n+\n+        {\n+            Path src1 = current.resolve(\"src1\");\n+            tb.writeJavaFiles(src1,\n+                               \"\"\"\n+                               package test;\n+                               import lib.*;\n+                               public class Test1 {\n+                                   private void test(S obj) {\n+                                       int i = switch (obj) {\n+                                           case A a -> 0;\n+                                       };\n+                                       Runnable r = () -> {obj = null;};\n+                                   }\n+                               }\n+                               \"\"\");\n+\n+            Path classes1 = current.resolve(\"classes1\");\n+\n+            Files.createDirectories(classes1);\n+\n+            var log =\n+                    new JavacTask(tb)\n+                        .options(\"--enable-preview\",\n+                                 \"-source\", JAVA_VERSION,\n+                                 \"-XDrawDiagnostics\",\n+                                 \"-Xlint:-preview\",\n+                                 \"--class-path\", libClasses.toString())\n+                        .outdir(classes1)\n+                        .files(tb.findJavaFiles(src1))\n+                        .run(Task.Expect.FAIL)\n+                        .writeAll()\n+                        .getOutputLines(Task.OutputKind.DIRECT);\n+\n+            List<String> expectedErrors = List.of(\n+                   \"Test1.java:5:24: compiler.err.cant.access: lib.B1, (compiler.misc.class.file.not.found: lib.B1)\",\n+                   \"Test1.java:8:29: compiler.err.cant.ref.non.effectively.final.var: obj, (compiler.misc.lambda)\",\n+                   \"- compiler.note.preview.filename: Test1.java, DEFAULT\",\n+                   \"- compiler.note.preview.recompile\",\n+                   \"2 errors\");\n+\n+            if (!expectedErrors.equals(log)) {\n+                throw new AssertionError(\"Incorrect errors, expected: \" + expectedErrors +\n+                                          \", actual: \" + log);\n+            }\n+        }\n+\n+        {\n+            Path src2 = current.resolve(\"src2\");\n+            tb.writeJavaFiles(src2,\n+                               \"\"\"\n+                               package test;\n+                               import lib.*;\n+                               public class Test1 {\n+                                   private void test(S obj) {\n+                                    Runnable r = (Runnable) obj;\n+                                    String s = (String) obj;\n+                                   }\n+                               }\n+                               \"\"\");\n+\n+            Path classes2 = current.resolve(\"classes2\");\n+\n+            Files.createDirectories(classes2);\n+\n+            var log =\n+                    new JavacTask(tb)\n+                        .options(\"--enable-preview\",\n+                                 \"-source\", JAVA_VERSION,\n+                                 \"-XDrawDiagnostics\",\n+                                 \"-Xlint:-preview\",\n+                                 \"--class-path\", libClasses.toString())\n+                        .outdir(classes2)\n+                        .files(tb.findJavaFiles(src2))\n+                        .run(Task.Expect.FAIL)\n+                        .writeAll()\n+                        .getOutputLines(Task.OutputKind.DIRECT);\n+\n+            List<String> expectedErrors = List.of(\n+                   \"Test1.java:5:19: compiler.err.cant.access: lib.B1, (compiler.misc.class.file.not.found: lib.B1)\",\n+                   \"Test1.java:6:26: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: lib.S, java.lang.String)\",\n+                   \"2 errors\");\n+\n+            if (!expectedErrors.equals(log)) {\n+                throw new AssertionError(\"Incorrect errors, expected: \" + expectedErrors +\n+                                          \", actual: \" + log);\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/sealed\/MissingPermittedSubtypes.java","additions":199,"deletions":0,"binary":false,"changes":199,"status":"added"},{"patch":"@@ -74,1 +74,1 @@\n-               \"15\", \"16\", \"17\", \"18\");\n+               \"15\", \"16\", \"17\", \"18\", \"19\");\n@@ -76,1 +76,1 @@\n-    public static final String LATEST_MAJOR_VERSION = \"62.0\";\n+    public static final String LATEST_MAJOR_VERSION = \"63.0\";\n@@ -90,1 +90,2 @@\n-        EIGHTEEN(false,  \"62.0\", \"18\", Versions::checksrc18);\n+        EIGHTEEN(false,  \"62.0\", \"18\", Versions::checksrc18),\n+        NINETEEN(false,  \"63.0\", \"19\", Versions::checksrc19);\n@@ -323,0 +324,7 @@\n+   protected void checksrc19(List<String> args) {\n+       printargs(\"checksrc19\", args);\n+       expectedPass(args, List.of(\"New7.java\", \"New8.java\", \"New10.java\", \"New11.java\",\n+                                  \"New14.java\", \"New15.java\", \"New16.java\", \"New17.java\"));\n+       \/\/ Add expectedFail after new language features added in a later release.\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/versions\/Versions.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"filename":"test\/lib\/jdk\/test\/lib\/net\/testkeys","binary":true,"status":"modified"},{"patch":"@@ -228,1 +228,0 @@\n-  public native boolean NMTChangeTrackingLevel();\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -229,1 +229,0 @@\n-  public native boolean NMTChangeTrackingLevel();\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.util;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Param;\n+import java.util.random.RandomGenerator;\n+import java.util.random.RandomGeneratorFactory;\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * Tests java.util.random.RandomGenerator's different random number generators which use Math.unsignedMultiplyHigh().\n+ *\/\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+public class RandomGeneratorNext {\n+\n+    RandomGenerator randomGenerator;\n+\n+    @Param({\"L128X128MixRandom\", \"L128X256MixRandom\", \"L128X1024MixRandom\"})\n+    String randomGeneratorName;\n+\n+    long[] buffer;\n+\n+    @Param(\"1024\")\n+    int size;\n+\n+    @Setup\n+    public void setup() {\n+        buffer = new long[size];\n+        randomGenerator = RandomGeneratorFactory.of(randomGeneratorName).create(randomGeneratorName.hashCode());\n+    }\n+\n+    @Benchmark\n+    public long testNextLong() {\n+        return randomGenerator.nextLong();\n+    }\n+\n+    @Benchmark\n+    public long[] testFillBufferWithNextLong() {\n+        for (int i = 0; i < size; i++) buffer[i] = randomGenerator.nextLong();\n+        return buffer;\n+    }\n+\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/RandomGeneratorNext.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,138 @@\n+\/\/\n+\/\/ Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\/\/\n+\/\/ This code is free software; you can redistribute it and\/or modify it\n+\/\/ under the terms of the GNU General Public License version 2 only, as\n+\/\/ published by the Free Software Foundation.\n+\/\/\n+\/\/ This code is distributed in the hope that it will be useful, but WITHOUT\n+\/\/ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+\/\/ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+\/\/ version 2 for more details (a copy is included in the LICENSE file that\n+\/\/ accompanied this code).\n+\/\/\n+\/\/ You should have received a copy of the GNU General Public License version\n+\/\/ 2 along with this work; if not, write to the Free Software Foundation,\n+\/\/ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\/\/\n+\/\/ Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+\/\/ or visit www.oracle.com if you need additional information or have any\n+\/\/ questions.\n+\/\/\n+\/\/\n+package org.openjdk.bench.jdk.incubator.vector;\n+\n+import jdk.incubator.vector.*;\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@OutputTimeUnit(TimeUnit.MILLISECONDS)\n+@State(Scope.Thread)\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+public class MaskFromLongBenchmark {\n+    static long val = 0;\n+\n+    @Setup(Level.Invocation)\n+    public void BmSetup() {\n+        val++;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Byte64() {\n+        VectorMask mask = VectorMask.fromLong(ByteVector.SPECIES_64, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Byte128() {\n+        VectorMask mask = VectorMask.fromLong(ByteVector.SPECIES_128, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Byte256() {\n+        VectorMask mask = VectorMask.fromLong(ByteVector.SPECIES_256, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Byte512() {\n+        VectorMask mask = VectorMask.fromLong(ByteVector.SPECIES_512, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Short64() {\n+        VectorMask mask = VectorMask.fromLong(ShortVector.SPECIES_64, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Short128() {\n+        VectorMask mask = VectorMask.fromLong(ShortVector.SPECIES_128, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Short256() {\n+        VectorMask mask = VectorMask.fromLong(ShortVector.SPECIES_256, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Short512() {\n+        VectorMask mask = VectorMask.fromLong(ShortVector.SPECIES_512, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Integer64() {\n+        VectorMask mask = VectorMask.fromLong(IntVector.SPECIES_64, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Integer128() {\n+        VectorMask mask = VectorMask.fromLong(IntVector.SPECIES_128, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Integer256() {\n+        VectorMask mask = VectorMask.fromLong(IntVector.SPECIES_256, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Integer512() {\n+        VectorMask mask = VectorMask.fromLong(IntVector.SPECIES_512, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Long64() {\n+        VectorMask mask = VectorMask.fromLong(LongVector.SPECIES_64, val);\n+        return mask.laneIsSet(0) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Long128() {\n+        VectorMask mask = VectorMask.fromLong(LongVector.SPECIES_128, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Long256() {\n+        VectorMask mask = VectorMask.fromLong(LongVector.SPECIES_256, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+    @Benchmark\n+    public int microMaskFromLong_Long512() {\n+        VectorMask mask = VectorMask.fromLong(LongVector.SPECIES_512, val);\n+        return mask.laneIsSet(1) ? 1 : 0;\n+    }\n+\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskFromLongBenchmark.java","additions":138,"deletions":0,"binary":false,"changes":138,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.CompilerControl;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * Tests transformation that converts \"c0 - (x + c1)\" into \"(c0 - c1)\n+ * - x\" in SubINode::Ideal and SubLNode::Ideal.\n+ *\/\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MILLISECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3 , jvmArgsAppend = {\"-XX:-TieredCompilation\", \"-Xbatch\", \"-Xcomp\"})\n+public class SubIdealC0Minus_YPlusC1_ {\n+\n+    private static final int I_C0 = 1234567;\n+\n+    private static final int I_C1 = 1234567;\n+\n+    private static final long L_C0 = 123_456_789_123_456L;\n+\n+    private static final long L_C1 = 123_456_789_123_456L;\n+\n+    private final int size = 100_000_000;\n+\n+    private int[] ints_a;\n+\n+    private long[] longs_a;\n+\n+    @Setup\n+    public void init() {\n+        ints_a = new int[size];\n+        longs_a = new long[size];\n+        for (int i = 0; i < size; i++) {\n+            ints_a[i] = i;\n+            longs_a[i] = i * i;\n+        }\n+    }\n+\n+    @Benchmark\n+    public void baseline() {\n+        for (int i = 0; i < size; i++) {\n+            sink(ints_a[i]);\n+            sink(longs_a[i]);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void test() {\n+        for (int i = 0; i < size; i++) {\n+            sink(helper(ints_a[i]));\n+            sink(helper(longs_a[i]));\n+        }\n+    }\n+\n+    \/\/ Convert \"c0 - (x + c1)\" into \"(c0 - c1) - x\" for int.\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    private static int helper(int x) {\n+        return I_C0 - (x + I_C1);\n+    }\n+\n+    \/\/ Convert \"c0 - (x + c1)\" into \"(c0 - c1) - x\" for long.\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    private static long helper(long x) {\n+        return L_C0 - (x + L_C1);\n+    }\n+\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    private static void sink(int v) {}\n+\n+    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n+    private static void sink(long v) {}\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SubIdealC0Minus_YPlusC1_.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"}]}