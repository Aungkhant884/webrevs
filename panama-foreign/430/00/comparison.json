{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import jdk.internal.jextract.impl.ClangException;\n@@ -74,1 +75,1 @@\n-    private static final int OUTPUT_ERROR  = 3;\n+    private static final int CLANG_ERROR   = 3;\n@@ -76,0 +77,1 @@\n+    private static final int OUTPUT_ERROR  = 5;\n@@ -237,1 +239,1 @@\n-        \/\/parse    \/\/generate\n+        List<JavaFileObject> files = null;\n@@ -250,3 +252,1 @@\n-            Path output = Path.of(options.outputDir);\n-\n-            List<JavaFileObject> files = generate(\n+            files = generate(\n@@ -255,0 +255,13 @@\n+        } catch (ClangException ce) {\n+            err.println(ce.getMessage());\n+            if (JextractTool.DEBUG) {\n+                ce.printStackTrace(err);\n+            }\n+            return CLANG_ERROR;\n+        } catch (RuntimeException re) {\n+            err.println(re.getMessage());\n+            if (JextractTool.DEBUG) {\n+                re.printStackTrace(err);\n+            }\n+            return RUNTIME_ERROR;\n+        }\n@@ -256,0 +269,2 @@\n+        try {\n+            Path output = Path.of(options.outputDir);\n@@ -258,1 +273,1 @@\n-            err.println(re);\n+            err.println(re.getMessage());\n@@ -262,1 +277,1 @@\n-            return RUNTIME_ERROR;\n+            return OUTPUT_ERROR;\n@@ -264,0 +279,1 @@\n+\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/incubator\/jextract\/JextractTool.java","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.  Oracle designates this\n+ *  particular file as subject to the \"Classpath\" exception as provided\n+ *  by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+package jdk.internal.jextract.impl;\n+\n+public class ClangException extends RuntimeException {\n+    private static final long serialVersionUID = 0L;\n+\n+    public ClangException(String message) {\n+        super(message);\n+    }\n+\n+    public ClangException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n+    public ClangException(Throwable cause) {\n+        super(cause);\n+    }\n+}\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/ClangException.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -57,1 +57,1 @@\n-                    throw new RuntimeException(d.toString());\n+                    throw new ClangException(d.toString());\n","filename":"src\/jdk.incubator.jextract\/share\/classes\/jdk\/internal\/jextract\/impl\/Parser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        run().checkFailure(); \/\/ no options\n+        run().checkFailure(OPTION_ERROR); \/\/ no options\n@@ -59,1 +59,1 @@\n-            .checkFailure()\n+            .checkFailure(INPUT_ERROR)\n@@ -63,0 +63,16 @@\n+    \/\/ error for header including non_existent.h file\n+    @Test\n+    public void testNonExistentIncluder() {\n+        run(getInputFilePath(\"non_existent_includer.h\").toString())\n+            .checkFailure(CLANG_ERROR)\n+            .checkContainsOutput(\"file not found\");\n+    }\n+\n+    \/\/ error for header with parser errors\n+    @Test\n+    public void testHeaderWithDeclarationErrors() {\n+        run(getInputFilePath(\"illegal_decls.h\").toString())\n+            .checkFailure(CLANG_ERROR)\n+            .checkContainsOutput(\"cannot combine with previous 'short' declaration specifier\");\n+    }\n+\n","filename":"test\/jdk\/tools\/jextract\/JextractToolProviderTest.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -55,0 +55,9 @@\n+\n+    \/\/ (private) exit codes from jextract tool. Copied from JextractTool.\n+    static final int SUCCESS       = 0;\n+    static final int OPTION_ERROR  = 1;\n+    static final int INPUT_ERROR   = 2;\n+    static final int CLANG_ERROR   = 3;\n+    static final int RUNTIME_ERROR = 4;\n+    static final int OUTPUT_ERROR  = 5;\n+\n@@ -97,1 +106,1 @@\n-            assertEquals(exitCode, 0, \"Sucess expected, failed: \" + exitCode);\n+            assertEquals(exitCode, SUCCESS, \"Sucess expected, failed: \" + exitCode);\n@@ -102,1 +111,6 @@\n-            assertNotEquals(exitCode, 0, \"Failure expected, succeeded!\");\n+            assertNotEquals(exitCode, SUCCESS, \"Failure expected, succeeded!\");\n+            return this;\n+        }\n+\n+        protected JextractResult checkFailure(int expectedExitCode) {\n+            assertEquals(exitCode, expectedExitCode, \"Expected error code \" + expectedExitCode);\n","filename":"test\/jdk\/tools\/jextract\/JextractToolRunner.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,24 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+short long x;\n","filename":"test\/jdk\/tools\/jextract\/illegal_decls.h","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"non_existent.h\"\n","filename":"test\/jdk\/tools\/jextract\/non_existent_includer.h","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"}]}