{"files":[{"patch":"@@ -24,0 +24,1 @@\n+import java.lang.reflect.Method;\n@@ -29,0 +30,1 @@\n+import static org.testng.Assert.assertTrue;\n@@ -63,0 +65,7 @@\n+\n+            Class<?> Foo4Class = loader.loadClass(\"test8260705_h$Foo4\");\n+            assertTrue(sizeof(Foo4Class) == 8L);\n+\n+            Class<?> Foo5Class = loader.loadClass(\"test8260705_h$Foo5\");\n+            assertTrue(sizeof(Foo5Class) == 4L);\n+\n@@ -67,0 +76,9 @@\n+\n+    private long sizeof(Class<?> cls) {\n+        Method m = findMethod(cls, \"sizeof\");\n+        try {\n+            return (long)m.invoke(null);\n+        } catch (Exception ex) {\n+            throw new RuntimeException(ex);\n+        }\n+    }\n@@ -68,0 +86,1 @@\n+\n","filename":"test\/jdk\/tools\/jextract\/Test8260705.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -40,0 +40,15 @@\n+\n+struct Foo4 {\n+  int    a:3;\n+  int    b:2;\n+  int     :0; \/\/ Force alignment to next boundary.\n+  int    c:4;\n+  int    d:3;\n+};\n+\n+struct Foo5 {\n+  int    a:3;\n+  int    b:2;\n+  int    c:4;\n+  int    d:3;\n+};\n","filename":"test\/jdk\/tools\/jextract\/test8260705.h","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}