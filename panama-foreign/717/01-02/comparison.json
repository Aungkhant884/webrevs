{"files":[{"patch":"@@ -104,2 +104,2 @@\n-     * <li>If the layout is a {@link GroupLayout}, or {@link SequenceLayout} the carrier type is {@link MemorySegment}.<\/li>\n-     * <li>If the layout is a {@link PaddingLayout} an {@link IllegalArgumentException} is thrown.<\/li>\n+     * <li>If the layout is a {@link GroupLayout} the carrier type is {@link MemorySegment}.<\/li>\n+     * <li>If the layout is a {@link PaddingLayout}, or {@link SequenceLayout} an {@link IllegalArgumentException} is thrown.<\/li>\n@@ -109,2 +109,2 @@\n-     * @throws IllegalArgumentException if one or more layouts in the function descriptor are not supported\n-     * (e.g. if they are sequence layouts or padding layouts).\n+     * @throws IllegalArgumentException if one or more layouts in the function descriptor can not be mapped to carrier\n+     *                                  types (e.g. if they are sequence layouts or padding layouts).\n@@ -112,1 +112,1 @@\n-    MethodType carrierMethodType();\n+    MethodType toMethodType();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/FunctionDescriptor.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.lang.invoke.MethodType;\n@@ -70,1 +69,1 @@\n- * {@linkplain FunctionDescriptor#carrierMethodType() derived} from the argument and return layouts in the function descriptor.\n+ * {@linkplain FunctionDescriptor#toMethodType() derived} from the argument and return layouts in the function descriptor.\n@@ -95,1 +94,1 @@\n- * The type of the provided method handle has to {@linkplain FunctionDescriptor#carrierMethodType() match} the Java\n+ * The type of the provided method handle has to {@linkplain FunctionDescriptor#toMethodType() match} the Java\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n- * {@linkplain java.lang.foreign.FunctionDescriptor#carrierMethodType() derive} a method type\n+ * {@linkplain java.lang.foreign.FunctionDescriptor#toMethodType() derive} a method type\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-        } else if (layout instanceof GroupLayout || layout instanceof SequenceLayout) {\n+        } else if (layout instanceof GroupLayout) {\n@@ -151,1 +151,1 @@\n-    public MethodType carrierMethodType() {\n+    public MethodType toMethodType() {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/FunctionDescriptorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-            MethodType type = fd.carrierMethodType();\n+            MethodType type = fd.toMethodType();\n@@ -66,1 +66,1 @@\n-        MethodType type = function.carrierMethodType();\n+        MethodType type = function.toMethodType();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-                        qsortComparFunction.carrierMethodType());\n+                        qsortComparFunction.toMethodType());\n","filename":"test\/jdk\/java\/foreign\/StdLibTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,4 +114,3 @@\n-                MemoryLayout.structLayout(C_INT, C_INT),\n-                MemoryLayout.sequenceLayout(3, C_INT));\n-        MethodType cmt = fd.carrierMethodType();\n-        assertEquals(cmt, MethodType.methodType(int.class, int.class, MemorySegment.class, MemorySegment.class));\n+                MemoryLayout.structLayout(C_INT, C_INT));\n+        MethodType cmt = fd.toMethodType();\n+        assertEquals(cmt, MethodType.methodType(int.class, int.class, MemorySegment.class));\n@@ -127,1 +126,1 @@\n-        fd.carrierMethodType(); \/\/ should throw\n+        fd.toMethodType(); \/\/ should throw\n","filename":"test\/jdk\/java\/foreign\/TestFunctionDescriptor.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}