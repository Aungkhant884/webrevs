{"files":[{"patch":"@@ -265,1 +265,1 @@\n- * {@code get} and {@code set} access modes will result in an {@code IllegalStateException}. If access is partially aligned,\n+ * {@code get} and {@code set} access modes will result in an {@code IllegalArgumentException}. If access is partially aligned,\n@@ -269,1 +269,1 @@\n- * {@code IllegalStateException} is thrown, irrespective of the access mode being used.\n+ * {@code IllegalArgumentException} is thrown, irrespective of the access mode being used.\n@@ -448,3 +448,12 @@\n-     * The physical address corresponding to the accessed offset must be <a href=\"MemorySegment.html#segment-alignment\">aligned<\/a>\n-     * according to the {@linkplain #byteAlignment() alignment constraint} of the root layout (this layout).\n-     * Note that this can be more strict (but not less) than the alignment constraint of the selected value layout.\n+     * The physical address of the accessed memory segment must be <a href=\"MemorySegment.html#segment-alignment\">aligned<\/a>\n+     * according to the {@linkplain #byteAlignment() alignment constraint} of the root layout (this layout), or\n+     * an {@link IllegalArgumentException} will be issued. Note that the alignment constraint of the root layout\n+     * can be more strict (but not less) than the alignment constraint of the selected value layout.\n+     * <p>\n+     * Moreover, if the access operation (computed as above) falls outside the spatial bounds of the\n+     * accessed memory segment, an {@link IndexOutOfBoundsException} is thrown. This is the case when {@code O + A > S},\n+     * where {@code O} is the accessed offset (computed as above), {@code A} is the size of the selected layout and {@code S}\n+     * is the size of the accessed memory segment.\n+     * <p>\n+     * Finally, if the {@linkplain MemorySegment#scope() scope} associated with the accessed segment is not\n+     * {@linkplain MemorySegment.Scope#isAlive() alive}, the access operation will result in an {@link IllegalStateException}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"}]}