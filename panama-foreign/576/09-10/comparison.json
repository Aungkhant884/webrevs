{"files":[{"patch":"@@ -69,0 +69,1 @@\n+            ((ResourceScopeImpl)scope).checkValidStateSlow();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/abi\/UpcallStubs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import jdk.incubator.foreign.Addressable;\n@@ -39,0 +40,2 @@\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n@@ -40,0 +43,1 @@\n+import jdk.incubator.foreign.VaList;\n@@ -41,0 +45,2 @@\n+\n+import static jdk.incubator.foreign.ValueLayout.ADDRESS;\n@@ -67,0 +73,31 @@\n+\n+    @Test(expectedExceptions = IllegalStateException.class)\n+    public void testClosedVaList() throws Throwable {\n+        VaList list;\n+        try (ResourceScope scope = ResourceScope.newConfinedScope()) {\n+            list = VaList.make(b -> b.addVarg(C_INT, 42), scope);\n+        }\n+        assertFalse(list.scope().isAlive());\n+        MethodHandle handle = CLinker.systemCLinker().downcallHandle(\n+                LOOKUP.lookup(\"addr_func\").get(),\n+                FunctionDescriptor.ofVoid(C_POINTER));\n+\n+        handle.invokeExact((Addressable)list);\n+    }\n+\n+    @Test(expectedExceptions = IllegalStateException.class)\n+    public void testClosedUpcall() throws Throwable {\n+        CLinker.UpcallStub upcall;\n+        try (ResourceScope scope = ResourceScope.newConfinedScope()) {\n+            MethodHandle dummy = MethodHandles.lookup().findStatic(SafeFunctionAccessTest.class, \"dummy\", MethodType.methodType(void.class));\n+            upcall = CLinker.systemCLinker().upcallStub(dummy, FunctionDescriptor.ofVoid(), scope);\n+        }\n+        assertFalse(upcall.scope().isAlive());\n+        MethodHandle handle = CLinker.systemCLinker().downcallHandle(\n+                LOOKUP.lookup(\"addr_func\").get(),\n+                FunctionDescriptor.ofVoid(C_POINTER));\n+\n+        handle.invokeExact((Addressable)upcall);\n+    }\n+\n+    static void dummy() { }\n","filename":"test\/jdk\/java\/foreign\/SafeFunctionAccessTest.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"}]}