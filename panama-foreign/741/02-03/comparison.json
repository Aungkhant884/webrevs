{"files":[{"patch":"@@ -943,1 +943,2 @@\n-     * @throws IllegalArgumentException if the provided {@code buffer} is obtained by calling either\n+     * @throws IllegalArgumentException if the provided {@code buffer} is a heap buffer but is not backed by an array.\n+     *                                  For example, buffers directly or indirectly obtained via\n@@ -945,1 +946,1 @@\n-     *                                  because these buffer objects are not backed directly by a char array.\n+     *                                  are not backed by an array.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -472,3 +472,3 @@\n-        \/\/ StringCharBuffer is packet-private\n-        if (\"java.nio.StringCharBuffer\".equals(bb.getClass().getName())) {\n-            throw new IllegalArgumentException(\"The provided CharBuffer is not backed by a char[].\");\n+        Object base = NIO_ACCESS.getBufferBase(bb);\n+        if (!bb.isDirect() && base == null) {\n+            throw new IllegalArgumentException(\"The provided heap buffer is not backed by an array.\");\n@@ -477,1 +477,0 @@\n-        Object base = NIO_ACCESS.getBufferBase(bb);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/AbstractMemorySegmentImpl.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}