{"files":[{"patch":"@@ -2799,0 +2799,1 @@\n+\n@@ -2830,0 +2831,7 @@\n+void Assembler::kunpckdql(KRegister dst, KRegister src1, KRegister src2) {\n+  assert(VM_Version::supports_avx512bw(), \"\");\n+  InstructionAttr attributes(AVX_256bit, \/* rex_w *\/ true, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = vex_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F, &attributes);\n+  emit_int16(0x4B, (0xC0 | encode));\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1520,0 +1520,2 @@\n+  void kunpckdql(KRegister dst, KRegister src1, KRegister src2);\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4281,1 +4281,3 @@\n-      kshiftrql(dst, dst, 64 - mask_len);\n+      if (mask_len != 64) {\n+        kshiftrql(dst, dst, 64 - mask_len);\n+      }\n@@ -4284,1 +4286,3 @@\n-      kshiftrdl(dst, dst, 32 - mask_len);\n+      if (mask_len != 32) {\n+        kshiftrdl(dst, dst, 32 - mask_len);\n+      }\n@@ -4289,1 +4293,3 @@\n-    kshiftrwl(dst, dst, 16 - mask_len);\n+    if (mask_len != 16) {\n+      kshiftrwl(dst, dst, 16 - mask_len);\n+    }\n@@ -4297,2 +4303,1 @@\n-  kshiftlql(dst, tmp, 32);\n-  korql(dst, dst, tmp);\n+  kunpckdql(dst, tmp, tmp);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -9454,13 +9454,0 @@\n-instruct mask_all_evexI_imm_LE32(kReg dst, immI cnt, rRegI tmp) %{\n-  predicate(Matcher::vector_length(n) <= 32);\n-  match(Set dst (MaskAll cnt));\n-  effect(TEMP dst, TEMP tmp);\n-  format %{ \"mask_all_evexI_imm_LE32 $dst, $cnt \\t! using $tmp as TEMP\" %}\n-  ins_encode %{\n-    int mask_len = Matcher::vector_length(this);\n-    __ movl($tmp$$Register, $cnt$$constant);\n-    __ vector_maskall_operation($dst$$KRegister, $tmp$$Register, mask_len);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -13886,13 +13886,0 @@\n-instruct mask_all_evexI_imm_GT32(kReg dst, immI cnt, rRegI tmp, kReg ktmp) %{\n-  predicate(Matcher::vector_length(n) > 32);\n-  match(Set dst (MaskAll cnt));\n-  effect(TEMP dst, TEMP tmp, TEMP ktmp);\n-  format %{ \"mask_all_evex_imm_GT32 $dst, $cnt \\t! using $tmp and $ktmp as TEMP\" %}\n-  ins_encode %{\n-    int mask_len = Matcher::vector_length(this);\n-    __ movl($tmp$$Register, $cnt$$constant);\n-    __ vector_maskall_operation32($dst$$KRegister, $tmp$$Register, $ktmp$$KRegister, mask_len);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -13038,13 +13038,0 @@\n-instruct mask_all_evex_imm_GT32(kReg dst, immI cnt, rRegL tmp) %{\n-  predicate(Matcher::vector_length(n) > 32);\n-  match(Set dst (MaskAll cnt));\n-  effect(TEMP dst, TEMP tmp);\n-  format %{ \"mask_all_imm_GT32 $dst, $cnt \\t! using $tmp as TEMP\" %}\n-  ins_encode %{\n-    int mask_len = Matcher::vector_length(this);\n-    __ movq($tmp$$Register, $cnt$$constant);\n-    __ vector_maskall_operation($dst$$KRegister, $tmp$$Register, mask_len);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"}]}