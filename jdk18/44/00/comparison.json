{"files":[{"patch":"@@ -253,0 +253,10 @@\n+        ClassLoader tagClassLoader = fileManager.getClassLoader(TAGLET_PATH);\n+        if (configuration.workArounds.accessInternalAPI()) {\n+            Module thisModule = getClass().getModule();\n+            Module tagletLoaderUnnamedModule = tagClassLoader.getUnnamedModule();\n+            List<String> pkgs = List.of(\n+                    \"jdk.javadoc.doclet\",\n+                    \"jdk.javadoc.internal.doclets.toolkit\",\n+                    \"jdk.javadoc.internal.doclets.formats.html\");\n+            pkgs.forEach(p -> thisModule.addOpens(p, tagletLoaderUnnamedModule));\n+        }\n@@ -254,11 +264,0 @@\n-            ClassLoader tagClassLoader;\n-            tagClassLoader = fileManager.getClassLoader(TAGLET_PATH);\n-            if (configuration.workArounds.accessInternalAPI()) {\n-                Module thisModule = getClass().getModule();\n-                Module tagletLoaderUnnamedModule = tagClassLoader.getUnnamedModule();\n-                List<String> pkgs = List.of(\n-                        \"jdk.javadoc.doclet\",\n-                        \"jdk.javadoc.internal.doclets.toolkit\",\n-                        \"jdk.javadoc.internal.doclets.formats.html\");\n-                pkgs.forEach(p -> thisModule.addOpens(p, tagletLoaderUnnamedModule));\n-            }\n@@ -269,1 +268,1 @@\n-        } catch (ReflectiveOperationException exc) {\n+        } catch (ReflectiveOperationException | ExceptionInInitializerError | ClassCastException exc) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletManager.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Taglet;\n+\n+public class ClassCastExceptionTaglet \/* does NOT implement jdk.javadoc.doclet.Taglet *\/ {\n+\n+    public Set<Taglet.Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    public String getName() {\n+        return \"ClassCastExceptionTaglet\";\n+    }\n+\n+    public String toString(List<? extends DocTree> tags, Element element) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/ClassCastExceptionTaglet.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Taglet;\n+\n+public class ExceptionInInitializerErrorTaglet implements Taglet {\n+\n+    static {\n+        if (true) {\n+            throw new RuntimeException();\n+        }\n+    }\n+\n+    @Override\n+    public Set<Taglet.Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"ExceptionInInitializerErrorTaglet\";\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element element) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/ExceptionInInitializerErrorTaglet.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Taglet;\n+\n+public abstract class InstantiationExceptionTaglet implements Taglet {\n+\n+    @Override\n+    public Set<Taglet.Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"InstantiationExceptionTaglet\";\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element element) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/InstantiationExceptionTaglet.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Taglet;\n+\n+public class InvocationTargetExceptionTaglet implements Taglet {\n+\n+    public InvocationTargetExceptionTaglet() {\n+        throw new RuntimeException();\n+    }\n+\n+    @Override\n+    public Set<Location> getAllowedLocations() {\n+        return EnumSet.allOf(Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"InvocationTargetExceptionTaglet\";\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element element) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/InvocationTargetExceptionTaglet.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Taglet;\n+\n+public class NoSuchMethodExceptionNoNullaryCtorTaglet implements Taglet {\n+\n+    public NoSuchMethodExceptionNoNullaryCtorTaglet(Object obj) {}\n+\n+    @Override\n+    public Set<Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"NoSuchMethodExceptionNoNullaryCtorTaglet\";\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element element) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/NoSuchMethodExceptionNoNullaryCtorTaglet.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Taglet;\n+\n+public class NoSuchMethodExceptionPrivateCtorTaglet implements Taglet {\n+\n+    private NoSuchMethodExceptionPrivateCtorTaglet() {}\n+\n+    @Override\n+    public Set<Taglet.Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"NoSuchMethodExceptionPrivateCtorTaglet\";\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element element) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/NoSuchMethodExceptionPrivateCtorTaglet.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8206181\n+ * @library  ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build javadoc.tester.* *\n+ * @run main TestRegistrationErrors\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n+\n+import javadoc.tester.JavadocTester;\n+\n+public class TestRegistrationErrors extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        TestRegistrationErrors tester = new TestRegistrationErrors();\n+        tester.runTests();\n+    }\n+\n+    @Test\n+    public void test() throws Exception {\n+        try (Stream<Path> tagletClasses = findTagletClasses()) {\n+            tagletClasses.forEach(p -> {\n+                String tagletName = getTagletName(p);\n+                javadoc(\"-d\", \"out-\" + tagletName, \/\/ a directory per taglet\n+                        \"-tagletpath\", System.getProperty(\"test.classes\"),\n+                        \"-taglet\", tagletName,\n+                        testSrc(\"TestRegistrationErrors.java\")); \/\/ specify this file\n+                checkExit(Exit.ERROR);\n+                new OutputChecker(Output.OUT).checkUnique(Pattern.compile(\"thrown while trying to register Taglet\"));\n+                checkNoCrashes();\n+            });\n+        }\n+    }\n+\n+    private static Stream<Path> findTagletClasses() throws IOException {\n+        var path = Path.of(System.getProperty(\"test.classes\"));\n+        return Files.find(path, Integer.MAX_VALUE,\n+                (p, a) -> a.isRegularFile() && p.toString().endsWith(\"Taglet.class\"));\n+    }\n+\n+    private static String getTagletName(Path tagletClass) {\n+        Path fileName = tagletClass.getFileName();\n+        return fileName.toString().substring(0, fileName.toString().lastIndexOf('.'));\n+    }\n+\n+    protected void checkNoCrashes() {\n+        checking(\"check crashes\");\n+        Matcher matcher = Pattern.compile(\"\\\\s*at.*\\\\(.*\\\\.java:\\\\d+\\\\)\")\n+                .matcher(getOutput(Output.STDERR));\n+        if (!matcher.find()) {\n+            passed(\"\");\n+        } else {\n+            failed(\"Looks like a stacktrace: \" + matcher.group());\n+        }\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCustomTagletRegistration\/TestRegistrationErrors.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}