{"files":[{"patch":"@@ -2012,5 +2012,8 @@\n-  \/\/ aborted the marking because of shutting down. The marking might have already\n-  \/\/ completed the abort (leading to in_progress() below to return false), however\n-  \/\/ this left marking state particularly in the shared marking bitmap that must\n-  \/\/ be cleaned up.\n-  \/\/ If there are multiple full gcs during shutdown we do too much work.\n+  \/\/ aborted the marking because of shutting down though. In this case the marking\n+  \/\/ might have already completed the abort (leading to in_progress() below to\n+  \/\/ return false), however this still left marking state particularly in the\n+  \/\/ shared marking bitmap that must be cleaned up.\n+  \/\/ If there are multiple full gcs during shutdown we do this work repeatedly for\n+  \/\/ nothing, but this situation should be extremely rare (a full gc after shutdown\n+  \/\/ has been signalled is alredy rare), and this work should be negligible compared\n+  \/\/ to actual full gc work.\n@@ -2021,2 +2024,2 @@\n-  \/\/ Clear all marks in the next bitmap for the next marking cycle. This will allow\n-  \/\/ us to skip the next concurrent bitmap clearing.\n+  \/\/ Clear all marks in the next bitmap for this full gc as it has been used by the\n+  \/\/ marking that is interrupted by this full gc.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}