{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.misc.ScopedMemoryAccess;\n@@ -43,1 +42,0 @@\n-    private int lockCount = 0;\n@@ -45,1 +43,0 @@\n-    private final Thread owner;\n@@ -59,1 +56,0 @@\n-        this.owner = owner;\n@@ -71,1 +67,1 @@\n-        if (lockCount == MAX_FORKS) {\n+        if (state == MAX_FORKS) {\n@@ -74,1 +70,1 @@\n-        lockCount++;\n+        state++;\n@@ -81,1 +77,1 @@\n-            lockCount--;\n+            state--;\n@@ -93,1 +89,1 @@\n-        if (lockCount == 0 || lockCount - ((int)ASYNC_RELEASE_COUNT.getVolatile(this)) == 0) {\n+        if (state == 0 || state - ((int)ASYNC_RELEASE_COUNT.getVolatile(this)) == 0) {\n@@ -96,1 +92,1 @@\n-            throw new IllegalStateException(\"Scope is kept alive by \" + lockCount + \" scopes\");\n+            throw new IllegalStateException(\"Scope is kept alive by \" + state + \" scopes\");\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ConfinedScope.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"}]}