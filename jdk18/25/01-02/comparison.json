{"files":[{"patch":"@@ -62,1 +62,1 @@\n-  bool do_entry(JavaThread*& key, ObjectMonitorsHashtable::PtrList*& list) {\n+  bool do_entry(void*& key, ObjectMonitorsHashtable::PtrList*& list) {\n@@ -75,2 +75,2 @@\n-void ObjectMonitorsHashtable::add_entry(JavaThread* jt, ObjectMonitor* om) {\n-  ObjectMonitorsHashtable::PtrList* list = get_entry(jt);\n+void ObjectMonitorsHashtable::add_entry(void* key, ObjectMonitor* om) {\n+  ObjectMonitorsHashtable::PtrList* list = get_entry(key);\n@@ -80,1 +80,1 @@\n-    add_entry(jt, list);\n+    add_entry(key, list);\n@@ -86,2 +86,2 @@\n-bool ObjectMonitorsHashtable::has_entry(JavaThread* jt, ObjectMonitor* om) {\n-  ObjectMonitorsHashtable::PtrList* list = get_entry(jt);\n+bool ObjectMonitorsHashtable::has_entry(void* key, ObjectMonitor* om) {\n+  ObjectMonitorsHashtable::PtrList* list = get_entry(key);\n@@ -1433,1 +1433,1 @@\n-      JavaThread* jt = (JavaThread*)mid->owner();\n+      void* key = mid->owner();\n@@ -1437,2 +1437,2 @@\n-      if (jt != nullptr && !table->has_entry(jt, mid)) {\n-        table->add_entry(jt, mid);\n+      if (key != nullptr && !table->has_entry(key, mid)) {\n+        table->add_entry(key, mid);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -40,1 +40,3 @@\n-\/\/ Hash table of JavaThread* to a list of ObjectMonitor* owned by the JavaThread*.\n+\/\/ Hash table of void* to a list of ObjectMonitor* owned by the JavaThread.\n+\/\/ The JavaThread's owner key is either a JavaThread* or a stack lock\n+\/\/ address in the JavaThread so we use \"void*\".\n@@ -44,1 +46,1 @@\n-  static unsigned int ptr_hash(JavaThread* const& s1) {\n+  static unsigned int ptr_hash(void* const& s1) {\n@@ -56,2 +58,1 @@\n-  typedef ResourceHashtable<JavaThread*, PtrList*, 1031,\n-                            ResourceObj::C_HEAP, mtThread,\n+  typedef ResourceHashtable<void*, PtrList*, 1031, ResourceObj::C_HEAP, mtThread,\n@@ -72,1 +73,1 @@\n-  void add_entry(JavaThread* jt, ObjectMonitor* om);\n+  void add_entry(void* key, ObjectMonitor* om);\n@@ -74,2 +75,2 @@\n-  void add_entry(JavaThread* jt, PtrList* list) {\n-    _ptrs->put(jt, list);\n+  void add_entry(void* key, PtrList* list) {\n+    _ptrs->put(key, list);\n@@ -79,2 +80,2 @@\n-  PtrList* get_entry(JavaThread* jt) {\n-    PtrList** listpp = _ptrs->get(jt);\n+  PtrList* get_entry(void* key) {\n+    PtrList** listpp = _ptrs->get(key);\n@@ -84,2 +85,2 @@\n-  bool has_entry(JavaThread* jt) {\n-    PtrList** listpp = _ptrs->get(jt);\n+  bool has_entry(void* key) {\n+    PtrList** listpp = _ptrs->get(key);\n@@ -89,1 +90,1 @@\n-  bool has_entry(JavaThread* jt, ObjectMonitor* om);\n+  bool has_entry(void* key, ObjectMonitor* om);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.hpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}