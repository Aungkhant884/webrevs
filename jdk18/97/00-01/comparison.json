{"files":[{"patch":"@@ -39,1 +39,1 @@\n- * Implementation for heap memory segments. An heap memory segment is composed by an offset and\n+ * Implementation for heap memory segments. A heap memory segment is composed by an offset and\n@@ -43,1 +43,5 @@\n- * {@link HeapMemorySegmentImpl#base()} method so that it returns an array of the correct (sharp) type.\n+ * {@link HeapMemorySegmentImpl#base()} method so that it returns an array of the correct (sharp) type. Note that\n+ * the field type storing the 'base' coordinate is just Object; similarly, all the constructor in the subclasses\n+ * accept an Object 'base' parameter instead of a sharper type (e.g. {@code byte[]}). This is deliberate, as\n+ * using sharper types would require use of type-conversions, which in turn would inhibit some C2 optimizations,\n+ * such as the elimination of store barriers in methods like {@link HeapMemorySegmentImpl#dup(long, long, int, ResourceScopeImpl)}.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}