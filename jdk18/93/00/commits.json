[{"commit":{"message":"8279597: [TESTBUG] ReturnBlobToWrongHeapTest.java fails with -XX:TieredStopAtLevel=1 on machines with many cores\n\nThis test failure occurred on machines with a lot of cores. Here is a\nsnippet from the log file:\n\n```\n----------System.out:(14\/1085)----------\nCompileCommand: dontinline compiler\/codecache\/stress\/Helper$TestCase.method bool dontinline = true\n[0.046s][warning][codecache] CodeHeap 'non-profiled nmethods' is full. Compiler has been disabled.\n[0.046s][warning][codecache] Try increasing the code heap size using -XX:NonProfiledCodeHeapSize=\nCodeHeap 'non-profiled nmethods': size=8Kb used=7Kb max_used=7Kb free=0Kb\n bounds [0x0000ffff97b55000, 0x0000ffff97b57000, 0x0000ffff97b57000]\nCodeHeap 'non-nmethods': size=16376Kb used=941Kb max_used=941Kb free=15434Kb\n bounds [0x0000ffff96b57000, 0x0000ffff96dc7000, 0x0000ffff97b55000]\n total_blobs=269 nmethods=8 adapters=194\n compilation: disabled (not enough contiguous free space left)\n stopped_count=1, restarted_count=0\n full_count=1\nError occurred during initialization of boot layer\njava.lang.InternalError: java.lang.NoSuchMethodException: no such method: java.lang.invoke.MethodHandle.linkToStatic(MemberName)Object\/invokeStatic\nCaused by: java.lang.NoSuchMethodException: no such method: java.lang.invoke.MethodHandle.linkToStatic(MemberName)Object\/invokeStatic\n```\n\nOn machines with many cores, the number of C1 temporary code buffers is\nbig. See [1]. In my local test on a machine with 224 cores, `c1_count`\nequals to 21, and the total size for non-nmethod heap increases to about\n16.5M.\n\nIn this test case, `ReservedCodeCacheSize` is set as 16M, which is not\nenough for the non-nmethod heap. See [2]. As a result, non-profiled heap\nis set to (twice) the minimal size. As shown in the log file, the size\nis only 8Kb, which is very small and leads to failure at initialization\nphase.\n\nIn this patch, we increase `ReservedCodeCacheSize` from 16M to 64M,\nwhich is big enough for machines with 1024 cores. Note that we continue\nto use the initial value for variable `largeBlobSize`.\n\n[1] https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/hotspot\/share\/code\/codeCache.cpp#L200\n[2] https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/hotspot\/share\/code\/codeCache.cpp#L216"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/ReturnBlobToWrongHeapTest.java"}],"sha":"6b4682d3f2dfc9426773296e4bb77f5dcf3d71ab"}]