{"files":[{"patch":"@@ -804,0 +804,5 @@\n+\n+        if (existing_value != new_state->local_at(index) && existing_value->as_Phi() == NULL) {\n+          TRACE_PHI(tty->print_cr(\"required phi for local %d is missing, irreducible loop?\", index));\n+          return false; \/\/ BAILOUT in caller\n+        }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+super public class TestC1PhiPlacementPathology\n+   version 62:0\n+{\n+  public static volatile Field sideEffect:I;\n+\n+  public Method \"<init>\":\"()V\"\n+   stack 1 locals 1\n+  {\n+      aload_0;\n+      invokespecial   Method java\/lang\/Object.\"<init>\":\"()V\";\n+      return;\n+  }\n+  private static Method effect:\"(I)V\"\n+   stack 2 locals 1\n+  {\n+      getstatic   Field sideEffect:\"I\";\n+      iload_0;\n+      iadd;\n+      putstatic   Field sideEffect:\"I\";\n+      return;\n+  }\n+  public static Method test:\"(I)V\"\n+   stack 2 locals 2\n+  {\n+      iconst_0;\n+      istore_1;\n+      iload_0;\n+      iconst_2;\n+      irem;\n+      ifne   MODIFY_LOCAL;\n+      iinc   1, 1;\n+      goto   LH2;\n+   MODIFY_LOCAL:   stack_frame_type append;\n+      locals_map int;\n+      iinc   1, 2;\n+      iinc   0, 1;\n+    goto LH1;\n+   LH1:   stack_frame_type same;\n+      iinc   1, 1;\n+      iload_1;\n+      sipush   10000;\n+      if_icmpge   EXIT;\n+   LH2:   stack_frame_type same;\n+      iinc   1, 1;\n+      goto   LH1;\n+   EXIT:   stack_frame_type same;\n+      iload_1;\n+      iload_0;\n+      iadd;\n+      invokestatic   Method effect:\"(I)V\";\n+      return;\n+  }\n+} \/\/ end Class TestC1PhiPlacementPathology\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestC1PhiPlacementPathology.jasm","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277447\n+ * @summary Test a pathological case for phi placement with an irreducible loop of a particular shape.\n+ *\n+ * @compile TestC1PhiPlacementPathology.jasm\n+ * @run main\/othervm -Xbatch -XX:CompileCommand=compileonly,TestC1PhiPlacementPathology::test\n+ *                   -XX:CompilationMode=quick-only -XX:-UseOnStackReplacement TestC1PhiPlacementPathologyMain\n+ *\/\n+\n+public class TestC1PhiPlacementPathologyMain {\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 11000; i++) {\n+            TestC1PhiPlacementPathology.test(0);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestC1PhiPlacementPathologyMain.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"}]}