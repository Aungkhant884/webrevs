{"files":[{"patch":"@@ -42,0 +42,6 @@\n+\n+    \/**\n+     * Returns true if this listener can handle being called with the same\n+     * data multiple times without generating multiple notifications\n+     *\/\n+    boolean idempotent();\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/RepositoryListener.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,17 @@\n+\/**\n+ * A RepositoryWorkItem acts on changes to a particular repository. Multiple kinds\n+ * of listeners can be notified about various types of changes. Some listeners can\n+ * handle being called multiple times with the same update while others cannot. To\n+ * avoid sending multiple emails or slack messages, we will never call such\n+ * listeners multiple times with the same update.\n+ *\n+ * This is achieved with a combination of declaring a listener idempotent and\n+ * throwing NonRetriableException. For a listener that is declared idempotent, we\n+ * will not update the history repository until after a successful notification,\n+ * which means the bot will retry until successful. For a listener that is not\n+ * idempotent, we will update the history repo before attempting to notify the\n+ * listener. If the listener fails without throwing NonRetriableException, we will\n+ * attempt a rollback of the history repo, which means the bot will likely retry\n+ * in the future, but it is not guaranteed as the bot could be killed at any time\n+ * and the state could then be lost.\n+ *\/\n@@ -102,1 +119,3 @@\n-                history.setBranchHash(branch, listener.name(), ref.hash());\n+                if (!listener.idempotent()) {\n+                    history.setBranchHash(branch, listener.name(), ref.hash());\n+                }\n@@ -107,0 +126,1 @@\n+                    continue;\n@@ -108,1 +128,1 @@\n-                    \/\/ FIXME: Attempt rollback?\n+                    \/\/ FIXME: Attempt rollback? No current listener that would use it\n@@ -110,0 +130,4 @@\n+                    continue;\n+                }\n+                if (listener.idempotent()) {\n+                    history.setBranchHash(branch, listener.name(), ref.hash());\n@@ -125,1 +149,3 @@\n-                history.setBranchHash(branch, listener.name(), ref.hash());\n+                if (!listener.idempotent()) {\n+                    history.setBranchHash(branch, listener.name(), ref.hash());\n+                }\n@@ -131,0 +157,1 @@\n+                    continue;\n@@ -133,2 +160,4 @@\n-                    log.log(Level.INFO, \"Retriable exception occurred\", e);\n-                    history.setBranchHash(branch, listener.name(), lastHash.get());\n+                    if (!listener.idempotent()) {\n+                        log.log(Level.INFO, \"Retriable exception occurred\", e);\n+                        history.setBranchHash(branch, listener.name(), lastHash.get());\n+                    }\n@@ -136,0 +165,4 @@\n+                    continue;\n+                }\n+                if (listener.idempotent()) {\n+                    history.setBranchHash(branch, listener.name(), ref.hash());\n@@ -211,1 +244,3 @@\n-            history.addTags(List.of(tag.tag()), listener.name());\n+            if (!listener.idempotent()) {\n+                history.addTags(List.of(tag.tag()), listener.name());\n+            }\n@@ -216,0 +251,1 @@\n+                continue;\n@@ -218,1 +254,7 @@\n-                history.retryTagUpdate(tag.tag(), listener.name());\n+                if (!listener.idempotent()) {\n+                    history.retryTagUpdate(tag.tag(), listener.name());\n+                }\n+                continue;\n+            }\n+            if (listener.idempotent()) {\n+                history.addTags(List.of(tag.tag()), listener.name());\n@@ -233,1 +275,3 @@\n-            history.addTags(List.of(tag), listener.name());\n+            if (!listener.idempotent()) {\n+                history.addTags(List.of(tag), listener.name());\n+            }\n@@ -238,0 +282,1 @@\n+                continue;\n@@ -240,1 +285,7 @@\n-                history.retryTagUpdate(tag, listener.name());\n+                if (!listener.idempotent()) {\n+                    history.retryTagUpdate(tag, listener.name());\n+                }\n+                continue;\n+            }\n+            if (listener.idempotent()) {\n+                history.addTags(List.of(tag), listener.name());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/RepositoryWorkItem.java","additions":60,"deletions":9,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -386,0 +386,5 @@\n+\n+    @Override\n+    public boolean idempotent() {\n+        return true;\n+    }\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -119,0 +119,5 @@\n+\n+    @Override\n+    public boolean idempotent() {\n+        return false;\n+    }\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/json\/JsonNotifier.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -383,0 +383,5 @@\n+\n+    @Override\n+    public boolean idempotent() {\n+        return false;\n+    }\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/mailinglist\/MailingListNotifier.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -114,0 +114,5 @@\n+\n+    @Override\n+    public boolean idempotent() {\n+        return false;\n+    }\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/slack\/SlackNotifier.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -88,0 +88,5 @@\n+        @Override\n+        public boolean idempotent() {\n+            return idempotent;\n+        }\n+\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/UpdaterTests.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}