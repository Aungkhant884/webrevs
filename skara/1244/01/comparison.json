{"files":[{"patch":"@@ -119,0 +119,1 @@\n+            getCsrIssue(issue.get()).ifPresent(issues::add);\n@@ -124,0 +125,23 @@\n+    private Optional<Issue> getCsrIssue(Issue issue) {\n+        var issueProject = issueProject();\n+        if (issueProject != null) {\n+            var jbsIssue = issueProject.issue(issue.shortId());\n+            if (jbsIssue.isEmpty()) {\n+                return Optional.empty();\n+            }\n+            org.openjdk.skara.issuetracker.Issue csr = null;\n+            for (var link : jbsIssue.get().links()) {\n+                var relationship = link.relationship();\n+                if (relationship.isPresent() && relationship.get().equals(\"csr for\")) {\n+                    csr = link.issue().orElseThrow(\n+                            () -> new IllegalStateException(\"Link with title 'csr for' does not contain issue\")\n+                    );\n+                }\n+            }\n+            if (csr != null) {\n+                return Issue.fromStringRelaxed(csr.id() + \": \" + csr.title());\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.skara.issuetracker.Link;\n@@ -1129,0 +1130,47 @@\n+    @Test\n+    void issueWithCsr(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issues = credentials.getIssueProject();\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                .addAuthor(author.forge().currentUser().id())\n+                                .addReviewer(reviewer.forge().currentUser().id());\n+            var checkBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues)\n+                                            .censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType(),\n+                                    Path.of(\"appendable.txt\"), Set.of(\"issues\"), null);\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            var mainIssue = issues.createIssue(\"The main issue\", List.of(\"main\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n+            var csrIssue = issues.createIssue(\"The csr issue\", List.of(\"csr\"), Map.of(\"issuetype\", JSON.of(\"CSR\")));\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", mainIssue.id() + \": \" + mainIssue.title());\n+\n+            \/\/ PR should have one issue\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            assertTrue(pr.body().contains(\"### Issue\"));\n+            assertFalse(pr.body().contains(\"### Issues\"));\n+            assertTrue(pr.body().contains(\"The main issue\"));\n+            assertFalse(pr.body().contains(\"The csr issue\"));\n+\n+            \/\/ Require CSR\n+            mainIssue.addLink(Link.create(csrIssue, \"csr for\").build());\n+            pr.addComment(\"\/csr\");\n+\n+            \/\/ PR should have two issues\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            assertTrue(pr.body().contains(\"### Issues\"));\n+            assertTrue(pr.body().contains(\"The main issue\"));\n+            assertTrue(pr.body().contains(\"The csr issue\"));\n+        }\n+    }\n+\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"modified"}]}