{"files":[{"patch":"@@ -113,1 +113,1 @@\n-    private List<Issue> issues() {\n+    private List<Issue> issues(boolean withCsr) {\n@@ -119,1 +119,3 @@\n-            getCsrIssue(issue.get()).ifPresent(issues::add);\n+            if (withCsr) {\n+                getCsrIssue(issue.get()).ifPresent(issues::add);\n+            }\n@@ -136,3 +138,1 @@\n-                    csr = link.issue().orElseThrow(\n-                            () -> new IllegalStateException(\"Link with title 'csr for' does not contain issue\")\n-                    );\n+                    csr = link.issue().orElse(null);\n@@ -209,1 +209,1 @@\n-        var issues = issues();\n+        var issues = issues(false);\n@@ -481,1 +481,1 @@\n-        var issues = issues();\n+        var issues = issues(true);\n@@ -507,0 +507,4 @@\n+                            var issueType = iss.get().properties().get(\"issuetype\");\n+                            if (issueType != null && \"CSR\".equals(issueType.asString())) {\n+                                progressBody.append(\" (**CSR**)\");\n+                            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1163,1 +1163,1 @@\n-            assertFalse(pr.body().contains(\"The csr issue\"));\n+            assertFalse(pr.body().contains(\"The csr issue (**CSR**)\"));\n@@ -1173,1 +1173,1 @@\n-            assertTrue(pr.body().contains(\"The csr issue\"));\n+            assertTrue(pr.body().contains(\"The csr issue (**CSR**)\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}