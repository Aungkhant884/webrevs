{"files":[{"patch":"@@ -263,1 +263,1 @@\n-            var localRepo = repositoryPool.materialize(repository, scratchPath.resolve(\"notify\").resolve(\"repowi\").resolve(repository.name()));\n+            var localRepo = repositoryPool.materializeBare(repository, scratchPath.resolve(\"notify\").resolve(\"repowi\").resolve(repository.name()));\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/RepositoryWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        private Repository cloneSeeded(Path path, boolean allowStale) throws IOException {\n+        private Repository cloneSeeded(Path path, boolean allowStale, boolean bare) throws IOException {\n@@ -126,2 +126,2 @@\n-            log.info(\"Using seed folder \" + seed + \" when cloning into \" + path + \" from \" + remote);\n-            return Repository.clone(remote, path, false, seed);\n+            log.info(\"Using seed folder \" + seed + \" when cloning into \" + path + \" from \" + remote + (bare ? \" (bare)\" : \"\"));\n+            return Repository.clone(remote, path, bare, seed);\n@@ -147,1 +147,1 @@\n-        private Repository materializeClone(Path path, boolean allowStale) throws IOException {\n+        private Repository materializeClone(Path path, boolean allowStale, boolean bare) throws IOException {\n@@ -151,1 +151,1 @@\n-                return cloneSeeded(path, allowStale);\n+                return cloneSeeded(path, allowStale, bare);\n@@ -156,1 +156,1 @@\n-                    return cloneSeeded(path, allowStale);\n+                    return cloneSeeded(path, allowStale, bare);\n@@ -163,1 +163,1 @@\n-                        return cloneSeeded(path, allowStale);\n+                        return cloneSeeded(path, allowStale, bare);\n@@ -172,1 +172,6 @@\n-        return hostedRepositoryInstance.materializeClone(path, false);\n+        return hostedRepositoryInstance.materializeClone(path, false, false);\n+    }\n+\n+    public Repository materializeBare(HostedRepository hostedRepository, Path path) throws IOException {\n+        var hostedRepositoryInstance = new HostedRepositoryInstance(hostedRepository);\n+        return hostedRepositoryInstance.materializeClone(path, false, true);\n@@ -177,1 +182,1 @@\n-        var localClone = hostedRepositoryInstance.materializeClone(path, true);\n+        var localClone = hostedRepositoryInstance.materializeClone(path, true, false);\n@@ -187,1 +192,1 @@\n-            localClone = hostedRepositoryInstance.materializeClone(path, false);\n+            localClone = hostedRepositoryInstance.materializeClone(path, false, false);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepositoryPool.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"}]}