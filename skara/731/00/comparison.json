{"files":[{"patch":"@@ -480,1 +480,1 @@\n-                repo.merge(remoteBranch); \/\/ should always be a fast-forward merge\n+                repo.merge(remoteBranch, Repository.FastForward.ONLY);\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,3 +119,19 @@\n-    void merge(Hash hash) throws IOException;\n-    void merge(Branch branch) throws IOException;\n-    void merge(Hash hash, String strategy) throws IOException;\n+\n+    enum FastForward {\n+        ONLY,\n+        DISABLE,\n+        AUTO\n+    }\n+\n+    default void merge(Hash hash) throws IOException {\n+        merge(hash, FastForward.AUTO);\n+    }\n+    void merge(Hash hash, FastForward ff) throws IOException;\n+    default void merge(Branch branch) throws IOException {\n+        merge(branch, FastForward.AUTO);\n+    }\n+    void merge(Branch branch, FastForward ff) throws IOException;\n+    default void merge(Hash hash, String strategy) throws IOException {\n+        merge(hash, strategy, FastForward.AUTO);\n+    }\n+    void merge(Hash hash, String strategy, FastForward ff) throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1096,2 +1096,2 @@\n-    public void merge(Hash h) throws IOException {\n-        merge(h.hex(), null);\n+    public void merge(Hash h, FastForward ff) throws IOException {\n+        merge(h.hex(), null, ff);\n@@ -1101,2 +1101,2 @@\n-    public void merge(Branch b) throws IOException {\n-        merge(b.name(), null);\n+    public void merge(Branch b, FastForward ff) throws IOException {\n+        merge(b.name(), null, ff);\n@@ -1106,2 +1106,2 @@\n-    public void merge(Hash h, String strategy) throws IOException {\n-        merge(h.hex(), strategy);\n+    public void merge(Hash h, String strategy, FastForward ff) throws IOException {\n+        merge(h.hex(), strategy, ff);\n@@ -1110,1 +1110,1 @@\n-    private void merge(String ref, String strategy) throws IOException {\n+    private void merge(String ref, String strategy, FastForward ff) throws IOException {\n@@ -1114,0 +1114,11 @@\n+\n+        if (ff == FastForward.AUTO) {\n+            cmd.add(\"--ff\");\n+        } else if (ff == FastForward.DISABLE) {\n+            cmd.add(\"--no-ff\");\n+        } else if (ff == FastForward.ONLY) {\n+            cmd.add(\"--ff-only\");\n+        } else {\n+            throw new IllegalArgumentException(\"Unexpected fast forward value: \" + ff);\n+        }\n+\n@@ -1118,0 +1129,1 @@\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -951,2 +951,2 @@\n-    public void merge(Hash h) throws IOException {\n-        merge(h.hex(), null);\n+    public void merge(Hash h, FastForward ff) throws IOException {\n+        merge(h, null, ff);\n@@ -956,2 +956,5 @@\n-    public void merge(Branch b) throws IOException {\n-        merge(b.name(), null);\n+    public void merge(Branch b, FastForward ff) throws IOException {\n+        var hash = resolve(b).orElseThrow(() ->\n+            new IOException(\"Can't lookup branch \" + b.name())\n+        );\n+        merge(hash, null, ff);\n@@ -961,3 +964,3 @@\n-    public void merge(Hash h, String strategy) throws IOException {\n-        merge(h.hex(), strategy);\n-    }\n+    public void merge(Hash other, String strategy, FastForward ff) throws IOException {\n+        var head = head();\n+        List<String> cmd = null;\n@@ -965,3 +968,3 @@\n-    private void merge(String ref, String strategy) throws IOException {\n-        var cmd = new ArrayList<String>();\n-        cmd.addAll(List.of(\"hg\", \"merge\", \"--rev=\" + ref));\n+        var update = List.of(\"hg\", \"update\", \"--rev\", other.hex());\n+        var debugsetparents = List.of(\"hg\", \"debugsetparents\", head.hex(), other.hex());\n+        var merge = new ArrayList<>(List.of(\"hg\", \"merge\", \"--rev=\" + other.hex()));\n@@ -969,1 +972,19 @@\n-            cmd.add(\"--tool=\" + strategy);\n+            merge.add(\"--tool=\" + strategy);\n+        }\n+\n+        if (ff == FastForward.ONLY) {\n+            cmd = update;\n+        } else if (ff == FastForward.DISABLE) {\n+            if (isAncestor(head, other)) {\n+                cmd = debugsetparents;\n+            } else {\n+                cmd = merge;\n+            }\n+        } else if (ff == FastForward.AUTO) {\n+            if (isAncestor(head, other)) {\n+                cmd = update;\n+            } else {\n+                cmd = merge;\n+            }\n+        } else {\n+            throw new IllegalArgumentException(\"Unexpected fast forward value: \" + ff);\n@@ -971,0 +992,1 @@\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":33,"deletions":11,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2524,0 +2524,50 @@\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testNonFastForwardMerge(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            r.add(readme);\n+            var hash1 = r.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            Files.write(readme, List.of(\"Another line\"), WRITE, APPEND);\n+            r.add(readme);\n+            var hash2 = r.commit(\"Modify README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            r.checkout(hash1, false);\n+            r.merge(hash2, Repository.FastForward.DISABLE);\n+            var hash3 = r.commit(\"Non fast-forward merge\", \"duke\", \"duke@openjdk.java.net\");\n+            var mergeCommit = r.lookup(hash3).orElseThrow();\n+            assertEquals(2, mergeCommit.parents().size());\n+        }\n+    }\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testFastForwardMerge(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            r.add(readme);\n+            var hash1 = r.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+            var other = r.branch(hash1, \"other\");\n+            r.checkout(other);\n+\n+            Files.write(readme, List.of(\"Another line\"), WRITE, APPEND);\n+            r.add(readme);\n+            var hash2 = r.commit(\"Modify README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            r.checkout(r.defaultBranch());\n+            r.merge(hash2, Repository.FastForward.AUTO);\n+            var diff = r.diff(r.head());\n+            assertEquals(List.of(), diff.patches());\n+            assertEquals(2, r.commits().asList().size());\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"}]}