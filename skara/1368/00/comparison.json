{"files":[{"patch":"@@ -38,2 +38,2 @@\n-    private final static Pattern ojVersionPattern = Pattern.compile(\"(openjdk[1-9][0-9]?)(u([0-9]{1,3}))?$\");\n-    private final static Pattern fxVersionPattern = Pattern.compile(\"(openjfx[1-9][0-9]?)(u([0-9]{1,3}))?$\");\n+    \/\/ Accept any lower case letter prefix, such as 'openjdk', 'openjfx' or 'shenandoah'.\n+    private final static Pattern prefixVersionPattern = Pattern.compile(\"([a-z]+[1-9][0-9]?)(u([0-9]{1,3}))?$\");\n@@ -52,1 +52,1 @@\n-        for (var legacyPattern : List.of(jdkVersionPattern, hsxVersionPattern, embVersionPattern, ojVersionPattern, fxVersionPattern)) {\n+        for (var legacyPattern : List.of(jdkVersionPattern, hsxVersionPattern, embVersionPattern, prefixVersionPattern)) {\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -70,0 +70,2 @@\n+        assertEquals(List.of(\"shenandoah8\", \"211\"), from(\"shenandoah8u211\").components());\n+        assertEquals(List.of(\"foobar8\", \"211\"), from(\"foobar8u211\").components());\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/JdkVersionTests.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}