{"files":[{"patch":"@@ -208,1 +208,15 @@\n-    private static final Pattern featureFamilyPattern = Pattern.compile(\"^([^\\\\d]*)(\\\\d+)$\");\n+    \/\/ For Java 8, certain interim versions are considered to be different feature versions\n+    private static String legacyFeatureSplit(JdkVersion version) {\n+        if (version.feature().equals(\"8\") && version.interim().isPresent()) {\n+            var interim = Integer.parseInt(version.interim().get());\n+            if (interim > 100) {\n+                return version.feature() + \"+100\";\n+            } else {\n+                return version.feature() + \"+0\";\n+            }\n+        } else {\n+            return version.feature();\n+        }\n+    }\n+\n+    private static final Pattern featureFamilyPattern = Pattern.compile(\"^([^\\\\d]*)(\\\\d+)u?$\");\n@@ -232,0 +246,1 @@\n+            var featureString = featureFamily + \"-\" + featureVersion;\n@@ -236,2 +251,2 @@\n-                        ret.add(jdkVersion.feature() + \"+updates-oracle\");\n-                        ret.add(jdkVersion.feature() + \"+updates-openjdk\");\n+                        ret.add(featureString + \"+updates-oracle\");\n+                        ret.add(featureString + \"+updates-openjdk\");\n@@ -241,1 +256,1 @@\n-                                ret.add(jdkVersion.feature()+ \"+bpr\");\n+                                ret.add(featureString + \"+bpr\");\n@@ -243,1 +258,1 @@\n-                                ret.add(jdkVersion.feature() + \"+updates-oracle\");\n+                                ret.add(featureString + \"+updates-oracle\");\n@@ -246,1 +261,1 @@\n-                            ret.add(jdkVersion.feature() + \"+updates-openjdk\");\n+                            ret.add(featureString + \"+updates-openjdk\");\n@@ -250,3 +265,8 @@\n-                    ret.add(\"features-\" + featureFamily);\n-                    ret.add(jdkVersion.feature() + \"+updates-oracle\");\n-                    ret.add(jdkVersion.feature() + \"+updates-openjdk\");\n+                    if (jdkVersion.opt().isPresent() && jdkVersion.opt().get().equals(\"cpu\")) {\n+                        ret.add(featureString + \"+updates-oracle\");\n+                        ret.add(featureString + \"+updates-openjdk\");\n+                    } else {\n+                        ret.add(\"features-\" + featureFamily);\n+                        ret.add(featureString + \"+updates-oracle\");\n+                        ret.add(featureString + \"+updates-openjdk\");\n+                    }\n@@ -255,0 +275,2 @@\n+                var feature = legacyFeatureSplit(jdkVersion);\n+\n@@ -260,1 +282,1 @@\n-                            ret.add(jdkVersion.feature());\n+                            ret.add(feature);\n@@ -262,1 +284,1 @@\n-                            ret.add(jdkVersion.feature() + \"+bpr\");\n+                            ret.add(feature + \"+bpr\");\n@@ -266,1 +288,1 @@\n-                    ret.add(jdkVersion.feature());\n+                    ret.add(feature);\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/Backports.java","additions":34,"deletions":12,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -68,4 +68,0 @@\n-\n-            \/\/ All components except the optional one must be numeric\n-            finalComponents.forEach(Integer::parseUnsignedInt);\n-\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -475,0 +475,96 @@\n+            backports.assertLabeled(\"14u-cpu\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest1(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"16\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"16.0.1\", \"16.0.2\");\n+            backports.assertLabeled(\"16.0.1\", \"16.0.2\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest2(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"17\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"16\", \"16.0.1\");\n+            backports.assertLabeled(\"17\", \"16.0.1\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest3(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"17\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"16u-cpu\", \"16.0.2\");\n+            backports.assertLabeled(\"16u-cpu\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest4(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"17\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"16.0.1\", \"16.0.2\");\n+            backports.assertLabeled(\"16.0.2\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest5(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"18\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"17.0.2\", \"17.0.3-oracle\");\n+            backports.assertLabeled(\"17.0.3-oracle\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest6(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"8u291\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"8u281\", \"8u271\/b34\", \"8u261\/b32\");\n+            backports.assertLabeled(\"8u291\", \"8u271\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest7(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"8u41\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"8u261\", \"8u251\");\n+            backports.assertLabeled(\"8u261\");\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest8(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"11.0.9\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"11.0.9-oracle\");\n+            backports.assertLabeled();\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest9(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"11.0.9\");\n@@ -476,0 +572,14 @@\n+\n+            backports.addBackports(\"11.0.10-oracle\");\n+            backports.assertLabeled();\n+        }\n+    }\n+\n+    @Test\n+    void exampleTest10(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"11.0.12-oracle\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"11.0.13-oracle\", \"11.0.11.0.1-oracle\");\n+            backports.assertLabeled(\"11.0.13-oracle\");\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"modified"}]}