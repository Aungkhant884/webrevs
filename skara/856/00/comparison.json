{"files":[{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.vcs.Hash;\n@@ -28,0 +29,1 @@\n+import java.util.Optional;\n@@ -35,0 +37,1 @@\n+    private final Hash original;\n@@ -42,0 +45,1 @@\n+                         Hash original,\n@@ -48,0 +52,1 @@\n+        this.original = original;\n@@ -75,0 +80,4 @@\n+    public Optional<Hash> original() {\n+        return Optional.ofNullable(original);\n+    }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessage.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.vcs.Hash;\n@@ -32,0 +33,1 @@\n+    private Hash original = null;\n@@ -108,0 +110,5 @@\n+    public CommitMessageBuilder original(Hash original) {\n+        this.original = original;\n+        return this;\n+    }\n+\n@@ -114,1 +121,1 @@\n-        return new CommitMessage(title, issues, reviewers, contributors, summaries, List.of());\n+        return new CommitMessage(title, issues, reviewers, contributors, summaries, original, List.of());\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageBuilder.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -82,1 +82,2 @@\n-            if ((message.reviewers().size() + message.contributors().size()) > 0) {\n+            if (((message.reviewers().size() + message.contributors().size()) > 0) ||\n+                 message.original().isPresent()) {\n@@ -92,0 +93,3 @@\n+                if (message.original().isPresent()) {\n+                    lines.add(\"Backport-of: \" + message.original().get().hex());\n+                }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageFormatters.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.vcs.Hash;\n@@ -85,1 +86,1 @@\n-            return new CommitMessage(null, issues, reviewers, contributors, summaries, additional);\n+            return new CommitMessage(null, issues, reviewers, contributors, summaries, null, additional);\n@@ -115,0 +116,1 @@\n+            Hash original = null;\n@@ -119,1 +121,2 @@\n-                    lines.get(i).startsWith(\"Reviewed-by:\")) {\n+                    lines.get(i).startsWith(\"Reviewed-by:\") ||\n+                    lines.get(i).startsWith(\"Backport-of:\")) {\n@@ -136,0 +139,5 @@\n+                    if ((m = matcher(BACKPORT_OF_PATTERN, lines, i)) != null) {\n+                        original = new Hash(m.group(1));\n+                        i++;\n+                    }\n+\n@@ -151,1 +159,1 @@\n-            return new CommitMessage(title, issues, reviewers, coAuthors, summaries, additional);\n+            return new CommitMessage(title, issues, reviewers, coAuthors, summaries, original, additional);\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageParsers.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+        public static final Pattern BACKPORT_OF_PATTERN = Pattern.compile(\"^Backport-of: ([0-9a-z]{40})$\");\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageSyntax.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        return new CommitMessage(null, issues, reviewers, contributors, summaries, additional);\n+        return new CommitMessage(null, issues, reviewers, contributors, summaries, null, additional);\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/convert\/ConverterCommitMessageParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import org.openjdk.skara.vcs.Hash;\n@@ -150,0 +151,18 @@\n+\n+    @Test\n+    void formatVersion1WithOriginal() {\n+        var lines = CommitMessage.title(\"01234567: A bug\")\n+                                 .summary(\"A summary\")\n+                                 .reviewer(\"foo\")\n+                                 .contributors(new Author(\"Baz Bar\", \"baz@bar.org\"))\n+                                 .original(new Hash(\"0123456789012345678901234567890123456789\"))\n+                                 .format(v1());\n+        assertEquals(List.of(\"01234567: A bug\",\n+                             \"\",\n+                             \"A summary\",\n+                             \"\",\n+                             \"Co-authored-by: Baz Bar <baz@bar.org>\",\n+                             \"Reviewed-by: foo\",\n+                             \"Backport-of: 0123456789012345678901234567890123456789\"),\n+                     lines);\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageFormattersTests.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.util.Optional;\n@@ -31,0 +32,1 @@\n+import org.openjdk.skara.vcs.Hash;\n@@ -263,0 +265,35 @@\n+\n+    @Test\n+    void backportOfTrailer() {\n+        var text = List.of(\"01234567: An issue\",\n+                           \"\",\n+                           \"Reviewed-by: ab\",\n+                           \"Backport-of: 0123456789012345678901234567890123456789\");\n+\n+        var message = CommitMessageParsers.v1.parse(text);\n+\n+        assertEquals(\"01234567: An issue\", message.title());\n+        assertEquals(List.of(new Issue(\"01234567\", \"An issue\")), message.issues());\n+        assertEquals(List.of(\"ab\"), message.reviewers());\n+        assertEquals(List.of(), message.contributors());\n+        assertEquals(List.of(), message.summaries());\n+        assertEquals(List.of(), message.additional());\n+        assertEquals(Optional.of(new Hash(\"0123456789012345678901234567890123456789\")), message.original());\n+    }\n+\n+    @Test\n+    void onlyBackportOfTrailer() {\n+        var text = List.of(\"01234567: An issue\",\n+                           \"\",\n+                           \"Backport-of: 0123456789012345678901234567890123456789\");\n+\n+        var message = CommitMessageParsers.v1.parse(text);\n+\n+        assertEquals(\"01234567: An issue\", message.title());\n+        assertEquals(List.of(new Issue(\"01234567\", \"An issue\")), message.issues());\n+        assertEquals(List.of(), message.reviewers());\n+        assertEquals(List.of(), message.contributors());\n+        assertEquals(List.of(), message.summaries());\n+        assertEquals(List.of(), message.additional());\n+        assertEquals(Optional.of(new Hash(\"0123456789012345678901234567890123456789\")), message.original());\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageParsersTests.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"}]}