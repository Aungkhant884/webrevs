{"files":[{"patch":"@@ -65,0 +65,1 @@\n+    private final static Set<String> primaryTypes = Set.of(\"Bug\", \"New Feature\", \"Enhancement\", \"Task\", \"Sub-task\");\n@@ -110,4 +111,0 @@\n-    private Set<String> allowedIssueTypes() {\n-        return workItem.bot.allowedIssueTypes();\n-    }\n-\n@@ -129,16 +126,0 @@\n-    private List<org.openjdk.skara.issuetracker.Issue> issuesOfDisallowedType() {\n-        var issueProject = issueProject();\n-        var allowed = allowedIssueTypes();\n-        if (issueProject != null && allowed != null) {\n-            return issues().stream()\n-                           .filter(i -> i.project().equals(Optional.of(issueProject.name())))\n-                           .map(i -> issueProject.issue(i.shortId()))\n-                           .filter(Optional::isPresent)\n-                           .map(Optional::get)\n-                           .filter(i -> i.properties().containsKey(\"issuetype\"))\n-                           .filter(i -> !allowed.contains(i.properties().get(\"issuetype\").asString()))\n-                           .collect(Collectors.toList());\n-        }\n-        return List.of();\n-    }\n-\n@@ -174,14 +155,0 @@\n-        var disallowedIssues = issuesOfDisallowedType();\n-        if (!disallowedIssues.isEmpty()) {\n-            var s = disallowedIssues.size() > 1 ? \"s \" : \" \";\n-            var are = disallowedIssues.size() > 1 ? \"are\" : \"is\";\n-            var links = disallowedIssues.stream()\n-                                        .map(i -> \"[\" + i.id() + \"](\" + i.webUrl() + \")\")\n-                                        .collect(Collectors.toList());\n-            var error = \"The issue\" + s + String.join(\",\", links) + \" \" + are + \" not of the expected type. The allowed issue types are:\\n\" +\n-                allowedIssueTypes().stream()\n-                .map(name -> \"   - \" + name)\n-                .collect(Collectors.joining(\"\\n\"));\n-            ret.add(error);\n-        }\n-\n@@ -580,0 +547,1 @@\n+                            var properties = iss.get().properties();\n@@ -596,0 +564,4 @@\n+                            if (properties.containsKey(\"issuetype\") && !primaryTypes.contains(properties.get(\"issuetype\").asString())) {\n+                                progressBody.append(\" ⚠️ Unexpected issue type `\").append(properties.get(\"issuetype\").asString()).append(\"`.\");\n+                                setExpiration(Duration.ofMinutes(10));\n+                            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":6,"deletions":34,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-    private final Set<String> allowedIssueTypes;\n@@ -76,1 +75,1 @@\n-                   boolean ignoreStaleReviews, Set<String> allowedIssueTypes, Pattern allowedTargetBranches,\n+                   boolean ignoreStaleReviews, Pattern allowedTargetBranches,\n@@ -91,1 +90,0 @@\n-        this.allowedIssueTypes = allowedIssueTypes;\n@@ -268,4 +266,0 @@\n-    Set<String> allowedIssueTypes() {\n-        return allowedIssueTypes;\n-    }\n-\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-    private Set<String> allowedIssueTypes = null;\n@@ -120,5 +119,0 @@\n-    public PullRequestBotBuilder allowedIssueTypes(Set<String> allowedIssueTypes) {\n-        this.allowedIssueTypes = allowedIssueTypes;\n-        return this;\n-    }\n-\n@@ -163,1 +157,1 @@\n-                                  readyComments, issueProject, ignoreStaleReviews, allowedIssueTypes,\n+                                  readyComments, issueProject, ignoreStaleReviews,\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -121,6 +121,0 @@\n-            if (repo.value().contains(\"issuetypes\")) {\n-                var types = repo.value().get(\"issuetypes\").stream()\n-                                                          .map(JSONValue::asString)\n-                                                          .collect(Collectors.toSet());\n-                botBuilder.allowedIssueTypes(types);\n-            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1445,1 +1445,0 @@\n-                                         .allowedIssueTypes(Set.of(\"Bug\"))\n@@ -1452,1 +1451,1 @@\n-                                             Map.of(\"issuetype\", JSON.of(\"Enhancement\")));\n+                                             Map.of(\"issuetype\", JSON.of(\"Backport\")));\n@@ -1482,12 +1481,4 @@\n-\n-            \/\/ Verify that the check failed for the feature PR\n-            var featureChecks = featurePR.checks(featureHash);\n-            assertEquals(1, featureChecks.size());\n-            var featureCheck = featureChecks.get(\"jcheck\");\n-            assertEquals(CheckStatus.FAILURE, featureCheck.status());\n-            var link = \"[\" + feature.id() + \"](\" + feature.webUrl() + \")\";\n-            assertTrue(featureCheck.summary()\n-                                   .orElseThrow()\n-                                   .contains(\"The issue \" + link + \" is not of the expected type. \" +\n-                                             \"The allowed issue types are:\\n\" +\n-                                             \"   - Bug\\n\"));\n+            assertTrue(featurePR.body().contains(feature.id()));\n+            assertTrue(featurePR.body().contains(\"My first feature\"));\n+            assertTrue(featurePR.body().contains(\"## Issue\\n\"));\n+            assertTrue(featurePR.body().contains(\"Unexpected issue type\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"}]}