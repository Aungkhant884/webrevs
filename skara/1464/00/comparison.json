{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private final String welcomeMarker = \"<!-- PullrequestCloserBot welcome message -->\";\n+    private static final String WELCOME_MARKER = \"<!-- PullrequestCloserBot welcome message -->\";\n@@ -54,1 +54,1 @@\n-                                    .anyMatch(comment -> comment.body().contains(welcomeMarker));\n+                                    .anyMatch(comment -> comment.body().contains(WELCOME_MARKER));\n@@ -77,1 +77,1 @@\n-            pr.addComment(welcomeMarker + \"\\n\\n\" + message);\n+            pr.addComment(WELCOME_MARKER + \"\\n\\n\" + message);\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestCloserBot.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-    private final String noticeMarker = \"<!-- PullrequestCloserBot auto close notification -->\";\n+    private static final String NOTICE_MARKER = \"<!-- PullrequestCloserBot auto close notification -->\";\n@@ -80,1 +80,1 @@\n-            if (lastComment.author().equals(pr.repository().forge().currentUser()) && lastComment.body().contains(noticeMarker)) {\n+            if (lastComment.author().equals(pr.repository().forge().currentUser()) && lastComment.body().contains(NOTICE_MARKER)) {\n@@ -98,1 +98,1 @@\n-        pr.addComment(noticeMarker + \"\\n\\n\" + message);\n+        pr.addComment(NOTICE_MARKER + \"\\n\\n\" + message);\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBot.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.skara.bots.common;\n+\n+import java.util.regex.Pattern;\n+\n+public class PullRequestConstants {\n+    \/\/ MARKERS\n+    public static final String PROGRESS_MARKER = \"<!-- Anything below this marker will be automatically updated, please do not edit manually! -->\";\n+    public static final String CSR_UPDATE_MARKER = \"<!-- csr: 'update' -->\";\n+    public static final String CSR_NEEDED_MARKER = \"<!-- csr: 'needed' -->\";\n+    public static final String CSR_UNNEEDED_MARKER = \"<!-- csr: 'unneeded' -->\";\n+    public static final String JEP_MARKER = \"<!-- jep: '%s' '%s' '%s' -->\"; \/\/ <!-- jep: 'JEP-ID' 'ISSUE-ID' 'ISSUE-TITLE' -->\n+\n+    \/\/ LABELS\n+    public static final String CSR_LABEL = \"csr\";\n+    public static final String JEP_LABEL = \"jep\";\n+\n+    \/\/ PATTERNS\n+    public static final Pattern JEP_MARKER_PATTERN = Pattern.compile(\"<!-- jep: '(.*?)' '(.*?)' '(.*?)' -->\");\n+}\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/PullRequestConstants.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    private final static String solvesMarker = \"<!-- solves: '%s' '%s' -->\";\n-    private final static Pattern markerPattern = Pattern.compile(\"<!-- solves: '(.*?)' '(.*?)' -->\");\n+    private static final String SOLVES_MARKER = \"<!-- solves: '%s' '%s' -->\";\n+    private static final Pattern MARKER_PATTERN = Pattern.compile(\"<!-- solves: '(.*?)' '(.*?)' -->\");\n@@ -40,1 +40,1 @@\n-        return String.format(solvesMarker, issue.shortId(), encodedDescription);\n+        return String.format(SOLVES_MARKER, issue.shortId(), encodedDescription);\n@@ -44,1 +44,1 @@\n-        return String.format(solvesMarker, issue.shortId(), \"\");\n+        return String.format(SOLVES_MARKER, issue.shortId(), \"\");\n@@ -51,1 +51,1 @@\n-                .map(markerPattern::matcher)\n+                .map(MARKER_PATTERN::matcher)\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/SolvesTracker.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n+\n@@ -52,3 +54,0 @@\n-    private final static String CSR_LABEL = \"csr\";\n-    final static String CSR_UPDATE_MARKER = \"<!-- csr: 'update' -->\";\n-    static final String PROGRESS_MARKER = \"<!-- Anything below this marker will be automatically updated, please do not edit manually! -->\";\n@@ -277,1 +276,1 @@\n-            if (comment.body().contains(\"<!-- csr: 'needed' -->\")) {\n+            if (comment.body().contains(CSR_NEEDED_MARKER)) {\n@@ -280,1 +279,1 @@\n-            if (comment.body().contains(\"<!-- csr: 'unneeded' -->\")) {\n+            if (comment.body().contains(CSR_UNNEEDED_MARKER)) {\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/PullRequestWorkItem.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,1 @@\n-import static org.openjdk.skara.bots.csr.PullRequestWorkItem.CSR_UPDATE_MARKER;\n-import static org.openjdk.skara.bots.csr.PullRequestWorkItem.PROGRESS_MARKER;\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,3 @@\n+    implementation project(':bots:common')\n+    implementation project(':jbs')\n+    implementation project(':jcheck')\n","filename":"bots\/jep\/build.gradle","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+    requires org.openjdk.skara.bots.common;\n+    requires org.openjdk.skara.jcheck;\n+    requires org.openjdk.skara.jbs;\n","filename":"bots\/jep\/src\/main\/java\/module-info.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.util.regex.Pattern;\n@@ -40,0 +39,1 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n@@ -42,1 +42,0 @@\n-    final static String JEP_LABEL = \"jep\";\n@@ -44,1 +43,0 @@\n-    private final static Pattern jepMarkerPattern = Pattern.compile(\"<!-- jep: '(.*?)' '(.*?)' '(.*?)' -->\");\n@@ -68,1 +66,1 @@\n-                    .map(jepMarkerPattern::matcher)\n+                    .map(JEP_MARKER_PATTERN::matcher)\n","filename":"bots\/jep\/src\/main\/java\/org\/openjdk\/skara\/bots\/jep\/JEPBot.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n@@ -43,1 +44,0 @@\n-    private static final String jepMarker = \"<!-- jep: '%s' '%s' '%s' -->\"; \/\/ <!-- jep: 'JEP-ID' 'ISSUE-ID' 'ISSUE-TITLE' -->\n@@ -78,1 +78,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -82,2 +82,2 @@\n-                pr.addComment(String.format(jepMarker, i, issueLists.get(i - 1).id(), issueLists.get(i - 1).title()));\n-                pr.removeLabel(JEPBot.JEP_LABEL);\n+                pr.addComment(String.format(JEP_MARKER, i, issueLists.get(i - 1).id(), issueLists.get(i - 1).title()));\n+                pr.removeLabel(JEP_LABEL);\n@@ -85,1 +85,1 @@\n-                assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+                assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -90,1 +90,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -92,1 +92,1 @@\n-            pr.removeLabel(JEPBot.JEP_LABEL);\n+            pr.removeLabel(JEP_LABEL);\n@@ -96,2 +96,2 @@\n-                pr.addComment(String.format(jepMarker, i, issueLists.get(i - 1).id(), issueLists.get(i - 1).title()));\n-                pr.addLabel(JEPBot.JEP_LABEL);\n+                pr.addComment(String.format(JEP_MARKER, i, issueLists.get(i - 1).id(), issueLists.get(i - 1).title()));\n+                pr.addLabel(JEP_LABEL);\n@@ -99,1 +99,1 @@\n-                assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+                assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -129,1 +129,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -132,2 +132,2 @@\n-            pr.addLabel(JEPBot.JEP_LABEL);\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            pr.addLabel(JEP_LABEL);\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -136,1 +136,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -165,1 +165,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -168,3 +168,3 @@\n-            pr.addComment(String.format(jepMarker, \"unneeded\", \"unneeded\", \"unneeded\"));\n-            pr.addLabel(JEPBot.JEP_LABEL);\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            pr.addComment(String.format(JEP_MARKER, \"unneeded\", \"unneeded\", \"unneeded\"));\n+            pr.addLabel(JEP_LABEL);\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -173,1 +173,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -202,1 +202,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -205,3 +205,3 @@\n-            pr.addComment(String.format(jepMarker, \"100\", \"TEST-100\", \"Demo jep\"));\n-            pr.addLabel(JEPBot.JEP_LABEL);\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            pr.addComment(String.format(JEP_MARKER, \"100\", \"TEST-100\", \"Demo jep\"));\n+            pr.addLabel(JEP_LABEL);\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -210,1 +210,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -239,1 +239,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -242,3 +242,3 @@\n-            pr.addComment(String.format(jepMarker, \"1\", \"TEST-2\", \"Demo jep\"));\n-            pr.addLabel(JEPBot.JEP_LABEL);\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            pr.addComment(String.format(JEP_MARKER, \"1\", \"TEST-2\", \"Demo jep\"));\n+            pr.addLabel(JEP_LABEL);\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -247,1 +247,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n","filename":"bots\/jep\/src\/test\/java\/org\/openjdk\/skara\/bots\/jep\/JEPBotTests.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    private static final Pattern commentPattern = Pattern.compile(\"<!--.*?-->\",\n+    private static final Pattern COMMENT_PATTERN = Pattern.compile(\"<!--.*?-->\",\n@@ -43,2 +43,1 @@\n-    private static final Pattern commandPattern = Pattern.compile(\"^\\\\s*\/([A-Za-z]+).*$\", Pattern.MULTILINE | Pattern.DOTALL);\n-\n+    static final Pattern COMMAND_PATTERN = Pattern.compile(\"^\\\\s*\/([A-Za-z]+).*$\", Pattern.MULTILINE | Pattern.DOTALL);\n@@ -49,1 +48,1 @@\n-        var commentMatcher = commentPattern.matcher(body);\n+        var commentMatcher = COMMENT_PATTERN.matcher(body);\n@@ -52,1 +51,1 @@\n-        var commandLineMatcher = commandPattern.matcher(body);\n+        var commandLineMatcher = COMMAND_PATTERN.matcher(body);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveMessages.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.util.regex.*;\n@@ -43,0 +42,2 @@\n+import static org.openjdk.skara.bots.mlbridge.ArchiveMessages.COMMAND_PATTERN;\n+\n@@ -119,2 +120,0 @@\n-    private static final Pattern commandPattern = Pattern.compile(\"^\\\\s*\/([A-Za-z]+).*$\", Pattern.MULTILINE | Pattern.DOTALL);\n-\n@@ -129,1 +128,1 @@\n-        var commandLineMatcher = commandPattern.matcher(body);\n+        var commandLineMatcher = COMMAND_PATTERN.matcher(body);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-    private final static String bridgedMailMarker = \"<!-- Bridged id (%s) -->\";\n-    final static Pattern bridgedMailId = Pattern.compile(\"^<!-- Bridged id \\\\(([=+\/\\\\w]+)\\\\) -->\");\n-    private final static Pattern bridgedSender = Pattern.compile(\"Mailing list message from \\\\[(.*?)]\\\\(mailto:(\\\\S+)\\\\)\");\n+    private static final String BRIDGED_MAIL_MARKER = \"<!-- Bridged id (%s) -->\";\n+    static final Pattern BRIDGED_MAIL_ID = Pattern.compile(\"^<!-- Bridged id \\\\(([=+\/\\\\w]+)\\\\) -->\");\n+    private static final Pattern BRIDGED_SENDER = Pattern.compile(\"Mailing list message from \\\\[(.*?)]\\\\(mailto:(\\\\S+)\\\\)\");\n@@ -56,1 +56,1 @@\n-        var matcher = bridgedMailId.matcher(comment.body());\n+        var matcher = BRIDGED_MAIL_ID.matcher(comment.body());\n@@ -61,1 +61,1 @@\n-        var senderMatcher = bridgedSender.matcher(comment.body());\n+        var senderMatcher = BRIDGED_SENDER.matcher(comment.body());\n@@ -77,1 +77,1 @@\n-        var marker = String.format(bridgedMailMarker,\n+        var marker = String.format(BRIDGED_MAIL_MARKER,\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/BridgedComment.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    private final Pattern pullRequestLinkPattern = Pattern.compile(\"^(?:PR: |Pull request:\\\\R)(.*?)$\", Pattern.MULTILINE);\n+    private static final Pattern PULL_REQUEST_LINK_PATTERN = Pattern.compile(\"^(?:PR: |Pull request:\\\\R)(.*?)$\", Pattern.MULTILINE);\n@@ -77,1 +77,1 @@\n-            var matcher = pullRequestLinkPattern.matcher(first.body());\n+            var matcher = PULL_REQUEST_LINK_PATTERN.matcher(first.body());\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListArchiveReaderBot.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,5 +28,5 @@\n-    private static final Pattern emojiPattern = Pattern.compile(\"(:([0-9a-z_+-]+):)\");\n-    private static final Pattern suggestionPattern = Pattern.compile(\"^```suggestion$\", Pattern.MULTILINE);\n-    private static final Pattern codePattern = Pattern.compile(\"^```+(?:\\\\w+)?$\", Pattern.MULTILINE);\n-    private static final Pattern escapesPattern = Pattern.compile(\"\\\\\\\\([!\\\"#$%&'()*+,\\\\-.\/:;<=?@\\\\[\\\\]^_`{|}~])\", Pattern.MULTILINE);\n-    private static final Pattern entitiesPattern = Pattern.compile(\"&#32;\", Pattern.MULTILINE);\n+    private static final Pattern EMOJI_PATTERN = Pattern.compile(\"(:([0-9a-z_+-]+):)\");\n+    private static final Pattern SUGGESTION_PATTERN = Pattern.compile(\"^```suggestion$\", Pattern.MULTILINE);\n+    private static final Pattern CODE_PATTERN = Pattern.compile(\"^```+(?:\\\\w+)?$\", Pattern.MULTILINE);\n+    private static final Pattern ESCAPES_PATTERN = Pattern.compile(\"\\\\\\\\([!\\\"#$%&'()*+,\\\\-.\/:;<=?@\\\\[\\\\]^_`{|}~])\", Pattern.MULTILINE);\n+    private static final Pattern ENTITIES_PATTERN = Pattern.compile(\"&#32;\", Pattern.MULTILINE);\n@@ -35,1 +35,1 @@\n-        var emojiMatcher = emojiPattern.matcher(markdown);\n+        var emojiMatcher = EMOJI_PATTERN.matcher(markdown);\n@@ -40,1 +40,1 @@\n-        var suggestionMatcher = suggestionPattern.matcher(markdown);\n+        var suggestionMatcher = SUGGESTION_PATTERN.matcher(markdown);\n@@ -45,1 +45,1 @@\n-        var codeMatcher = codePattern.matcher(markdown);\n+        var codeMatcher = CODE_PATTERN.matcher(markdown);\n@@ -50,1 +50,1 @@\n-        var escapesMatcher = escapesPattern.matcher(markdown);\n+        var escapesMatcher = ESCAPES_PATTERN.matcher(markdown);\n@@ -55,1 +55,1 @@\n-        var entitiesMatcher = entitiesPattern.matcher(markdown);\n+        var entitiesMatcher = ENTITIES_PATTERN.matcher(markdown);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MarkdownToText.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-    private static final Pattern leadingQuotesPattern = Pattern.compile(\"^([>\\\\s]+).*\");\n+    private static final Pattern LEADING_QUOTES_PATTERN = Pattern.compile(\"^([>\\\\s]+).*\");\n@@ -33,1 +33,1 @@\n-        var leadingQuotesMatcher = leadingQuotesPattern.matcher(line);\n+        var leadingQuotesMatcher = LEADING_QUOTES_PATTERN.matcher(line);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/QuoteFilter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-    private final static Pattern pushedPattern = Pattern.compile(\"Pushed as commit ([a-f0-9]{40})\\\\.\");\n+    public static final Pattern PUSHED_PATTERN = Pattern.compile(\"Pushed as commit ([a-f0-9]{40})\\\\.\");\n@@ -88,1 +88,1 @@\n-                              .map(pushedPattern::matcher)\n+                              .map(PUSHED_PATTERN::matcher)\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ReviewArchive.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,3 +29,3 @@\n-    private static final Pattern punctuationPattern = Pattern.compile(\"([!\\\"#$%&'()*+,\\\\-.\/:;<=?@\\\\[\\\\]^_`{|}~])\", Pattern.MULTILINE);\n-    private static final Pattern indentedPattern = Pattern.compile(\"^ {4}\", Pattern.MULTILINE);\n-    private static final Pattern mentionPattern = Pattern.compile(\"@(\\\\w+)\", Pattern.MULTILINE);\n+    private static final Pattern PUNCTUATION_PATTERN = Pattern.compile(\"([!\\\"#$%&'()*+,\\\\-.\/:;<=?@\\\\[\\\\]^_`{|}~])\", Pattern.MULTILINE);\n+    private static final Pattern INDENTED_PATTERN = Pattern.compile(\"^ {4}\", Pattern.MULTILINE);\n+    private static final Pattern MENTION_PATTERN = Pattern.compile(\"@(\\\\w+)\", Pattern.MULTILINE);\n@@ -38,1 +38,1 @@\n-        var punctuationMatcher = punctuationPattern.matcher(text);\n+        var punctuationMatcher = PUNCTUATION_PATTERN.matcher(text);\n@@ -43,1 +43,1 @@\n-        var indentedMatcher = indentedPattern.matcher(text);\n+        var indentedMatcher = INDENTED_PATTERN.matcher(text);\n@@ -65,1 +65,1 @@\n-        var mentionMatcher = mentionPattern.matcher(text);\n+        var mentionMatcher = MENTION_PATTERN.matcher(text);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/TextToMarkdown.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,4 +33,4 @@\n-        assertFalse(BridgedComment.bridgedMailId.matcher(\"foo\").find());\n-        assertFalse(BridgedComment.bridgedMailId.matcher(\"<-- foo -->\").find());\n-        assertTrue(BridgedComment.bridgedMailId.matcher(\"<!-- Bridged id (foo=) -->\").find());\n-        assertTrue(BridgedComment.bridgedMailId.matcher(\"<!-- Bridged id (PEEzNDJBNUQwLTM\" +\n+        assertFalse(BridgedComment.BRIDGED_MAIL_ID.matcher(\"foo\").find());\n+        assertFalse(BridgedComment.BRIDGED_MAIL_ID.matcher(\"<-- foo -->\").find());\n+        assertTrue(BridgedComment.BRIDGED_MAIL_ID.matcher(\"<!-- Bridged id (foo=) -->\").find());\n+        assertTrue(BridgedComment.BRIDGED_MAIL_ID.matcher(\"<!-- Bridged id (PEEzNDJBNUQwLTM\" +\n@@ -39,1 +39,1 @@\n-        var matcher = BridgedComment.bridgedMailId.matcher(\"<!-- Bridged id (fo+\/o=) -->\");\n+        var matcher = BridgedComment.BRIDGED_MAIL_ID.matcher(\"<!-- Bridged id (fo+\/o=) -->\");\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/BridgedCommentTests.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n+\n@@ -38,3 +40,0 @@\n-    private static final String CSR_LABEL = \"csr\";\n-    private static final String CSR_NEEDED_MARKER = \"<!-- csr: 'needed' -->\";\n-    private static final String CSR_UNNEEDED_MARKER = \"<!-- csr: 'unneeded' -->\";\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,2 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n+\n@@ -62,6 +64,5 @@\n-    private static final String progressMarker = \"<!-- Anything below this marker will be automatically updated, please do not edit manually! -->\";\n-    private static final String mergeReadyMarker = \"<!-- PullRequestBot merge is ready comment -->\";\n-    private static final String outdatedHelpMarker = \"<!-- PullRequestBot outdated help comment -->\";\n-    private static final String sourceBranchWarningMarker = \"<!-- PullRequestBot source branch warning comment -->\";\n-    private static final String mergeCommitWarningMarker = \"<!-- PullRequestBot merge commit warning comment -->\";\n-    private static final String emptyPrBodyMarker = \"<!--\\nReplace this text with a description of your pull request (also remove the surrounding HTML comment markers).\\n\" +\n+    private static final String MERGE_READY_MARKER = \"<!-- PullRequestBot merge is ready comment -->\";\n+    private static final String OUTDATED_HELP_MARKER = \"<!-- PullRequestBot outdated help comment -->\";\n+    private static final String SOURCE_BRANCH_WARNING_MARKER = \"<!-- PullRequestBot source branch warning comment -->\";\n+    private static final String MERGE_COMMIT_WARNING_MARKER = \"<!-- PullRequestBot merge commit warning comment -->\";\n+    private static final String EMPTY_PR_BODY_MARKER = \"<!--\\nReplace this text with a description of your pull request (also remove the surrounding HTML comment markers).\\n\" +\n@@ -69,2 +70,2 @@\n-    private static final String fullNameWarningMarker = \"<!-- PullRequestBot full name warning comment -->\";\n-    private final static Set<String> primaryTypes = Set.of(\"Bug\", \"New Feature\", \"Enhancement\", \"Task\", \"Sub-task\");\n+    private static final String FULL_NAME_WARNING_MARKER = \"<!-- PullRequestBot full name warning comment -->\";\n+    private static final Set<String> PRIMARY_TYPES = Set.of(\"Bug\", \"New Feature\", \"Enhancement\", \"Task\", \"Sub-task\");\n@@ -185,1 +186,1 @@\n-                .map(JEPCommand.jepMarkerPattern::matcher)\n+                .map(JEP_MARKER_PATTERN::matcher)\n@@ -344,1 +345,1 @@\n-                            if (!primaryTypes.contains(issueType)) {\n+                            if (!PRIMARY_TYPES.contains(issueType)) {\n@@ -768,1 +769,1 @@\n-        var markerIndex = description.lastIndexOf(progressMarker);\n+        var markerIndex = description.lastIndexOf(PROGRESS_MARKER);\n@@ -776,1 +777,1 @@\n-        var markerIndex = description.lastIndexOf(progressMarker);\n+        var markerIndex = description.lastIndexOf(PROGRESS_MARKER);\n@@ -784,1 +785,1 @@\n-            originalBody = emptyPrBodyMarker;\n+            originalBody = EMPTY_PR_BODY_MARKER;\n@@ -786,1 +787,1 @@\n-        var newBody = originalBody + \"\\n\\n\" + progressMarker + \"\\n\" + message;\n+        var newBody = originalBody + \"\\n\\n\" + PROGRESS_MARKER + \"\\n\" + message;\n@@ -938,1 +939,1 @@\n-        message.append(mergeReadyMarker);\n+        message.append(MERGE_READY_MARKER);\n@@ -947,1 +948,1 @@\n-        message.append(mergeReadyMarker);\n+        message.append(MERGE_READY_MARKER);\n@@ -952,1 +953,1 @@\n-        var existing = findComment(fullNameWarningMarker);\n+        var existing = findComment(FULL_NAME_WARNING_MARKER);\n@@ -981,1 +982,1 @@\n-            pr.addComment(fullNameWarningMarker + \"\\n\" + message);\n+            pr.addComment(FULL_NAME_WARNING_MARKER + \"\\n\" + message);\n@@ -986,1 +987,1 @@\n-        var existing = findComment(mergeReadyMarker);\n+        var existing = findComment(MERGE_READY_MARKER);\n@@ -1013,1 +1014,1 @@\n-        var existing = findComment(sourceBranchWarningMarker);\n+        var existing = findComment(SOURCE_BRANCH_WARNING_MARKER);\n@@ -1039,1 +1040,1 @@\n-            sourceBranchWarningMarker;\n+            SOURCE_BRANCH_WARNING_MARKER;\n@@ -1045,1 +1046,1 @@\n-        var existing = findComment(outdatedHelpMarker);\n+        var existing = findComment(OUTDATED_HELP_MARKER);\n@@ -1061,1 +1062,1 @@\n-                outdatedHelpMarker;\n+                OUTDATED_HELP_MARKER;\n@@ -1067,1 +1068,1 @@\n-        var existing = findComment(mergeCommitWarningMarker);\n+        var existing = findComment(MERGE_COMMIT_WARNING_MARKER);\n@@ -1080,1 +1081,1 @@\n-                      mergeCommitWarningMarker;\n+                      MERGE_COMMIT_WARNING_MARKER;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":27,"deletions":26,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,0 @@\n-    private final Pattern metadataComments = Pattern.compile(\"<!-- (?:backport)|(?:(add|remove) (?:contributor|reviewer))|(?:summary: ')|(?:solves: ')|(?:additional required reviewers)|(?:jep: ')|(?:csr: ')\");\n@@ -53,0 +52,1 @@\n+    private static final Pattern METADATA_COMMENTS_PATTERN = Pattern.compile(\"<!-- (?:backport)|(?:(add|remove) (?:contributor|reviewer))|(?:summary: ')|(?:solves: ')|(?:additional required reviewers)|(?:jep: ')|(?:csr: ')\");\n@@ -95,1 +95,1 @@\n-                                        .filter(line -> metadataComments.matcher(line).find())\n+                                        .filter(line -> METADATA_COMMENTS_PATTERN.matcher(line).find())\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    private static final Pattern commandPattern = Pattern.compile(\"^\\\\s*\/([A-Za-z]+)(?:\\\\s+(.*))?\");\n+    private static final Pattern COMMAND_PATTERN = Pattern.compile(\"^\\\\s*\/([A-Za-z]+)(?:\\\\s+(.*))?\");\n@@ -111,1 +111,1 @@\n-            var commandMatcher = commandPattern.matcher(line);\n+            var commandMatcher = COMMAND_PATTERN.matcher(line);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandExtractor.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n-    private static final String commandReplyMarker = \"<!-- Jmerge command reply message (%s) -->\";\n-    private static final Pattern commandReplyPattern = Pattern.compile(\"<!-- Jmerge command reply message \\\\((\\\\S+)\\\\) -->\");\n+    static final String COMMAND_REPLY_MARKER = \"<!-- Jmerge command reply message (%s) -->\";\n+    static final Pattern COMMAND_REPLY_PATTERN = Pattern.compile(\"<!-- Jmerge command reply message \\\\((\\\\S+)\\\\) -->\");\n@@ -78,1 +78,1 @@\n-                              .map(c -> commandReplyPattern.matcher(c.body()))\n+                              .map(c -> COMMAND_REPLY_PATTERN.matcher(c.body()))\n@@ -95,1 +95,1 @@\n-        printer.println(String.format(commandReplyMarker, command.id()));\n+        printer.println(String.format(COMMAND_REPLY_MARKER, command.id()));\n@@ -144,1 +144,1 @@\n-                    var comment = String.format(commandReplyMarker, command.id()) + \"\\n\" +\n+                    var comment = String.format(COMMAND_REPLY_MARKER, command.id()) + \"\\n\" +\n@@ -152,1 +152,1 @@\n-                    var comment = String.format(commandReplyMarker, command.id()) + \"\\n\" +\n+                    var comment = String.format(COMMAND_REPLY_MARKER, command.id()) + \"\\n\" +\n@@ -163,1 +163,1 @@\n-                    var comment = String.format(commandReplyMarker, command.id()) + \"\\n\" +\n+                    var comment = String.format(COMMAND_REPLY_MARKER, command.id()) + \"\\n\" +\n@@ -171,1 +171,1 @@\n-                    var comment = String.format(commandReplyMarker, command.id()) + \"\\n\" +\n+                    var comment = String.format(COMMAND_REPLY_MARKER, command.id()) + \"\\n\" +\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandWorkItem.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    private static final Pattern commandPattern = Pattern.compile(\"^(add|remove)\\\\s+(.+)$\");\n+    private static final Pattern COMMAND_PATTERN = Pattern.compile(\"^(add|remove)\\\\s+(.+)$\");\n@@ -103,1 +103,1 @@\n-        var matcher = commandPattern.matcher(command.args());\n+        var matcher = COMMAND_PATTERN.matcher(command.args());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ContributorCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,3 +34,3 @@\n-    private final static String addMarker = \"<!-- add contributor: '%s' -->\";\n-    private final static String removeMarker = \"<!-- remove contributor: '%s' -->\";\n-    private final static Pattern markerPattern = Pattern.compile(\"<!-- (add|remove) contributor: '(.*?)' -->\");\n+    private static final String ADD_MARKER = \"<!-- add contributor: '%s' -->\";\n+    private static final String REMOVE_MARKER = \"<!-- remove contributor: '%s' -->\";\n+    private static final Pattern MARKER_PATTERN = Pattern.compile(\"<!-- (add|remove) contributor: '(.*?)' -->\");\n@@ -39,1 +39,1 @@\n-        return String.format(addMarker, contributor.toString());\n+        return String.format(ADD_MARKER, contributor.toString());\n@@ -43,1 +43,1 @@\n-        return String.format(removeMarker, contributor.toString());\n+        return String.format(REMOVE_MARKER, contributor.toString());\n@@ -49,1 +49,1 @@\n-                                         .map(comment -> markerPattern.matcher(comment.body()))\n+                                         .map(comment -> MARKER_PATTERN.matcher(comment.body()))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/Contributors.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,2 +80,2 @@\n-    private static final Pattern shortIssuePattern = Pattern.compile(\"((?:[A-Za-z]+-)?[0-9]+)(?:,| |$)\");\n-    private final static Pattern subCommandPattern = Pattern.compile(\"^(add|remove|delete|create|(?:[A-Za-z]+-)?[0-9]+:?)[ ,]?.*$\");\n+    private static final Pattern SHORT_ISSUE_PATTERN = Pattern.compile(\"((?:[A-Za-z]+-)?[0-9]+)(?:,| |$)\");\n+    private static final Pattern SUBCOMMAND_PATTERN = Pattern.compile(\"^(add|remove|delete|create|(?:[A-Za-z]+-)?[0-9]+:?)[ ,]?.*$\");\n@@ -90,1 +90,1 @@\n-            var shortIssueMatcher = shortIssuePattern.matcher(issueList);\n+            var shortIssueMatcher = SHORT_ISSUE_PATTERN.matcher(issueList);\n@@ -284,1 +284,1 @@\n-        var subCommandMatcher = subCommandPattern.matcher(args);\n+        var subCommandMatcher = SUBCOMMAND_PATTERN.matcher(args);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IssueCommand.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.util.regex.Pattern;\n@@ -37,0 +36,1 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n@@ -39,4 +39,1 @@\n-    static final String JEP_LABEL = \"jep\";\n-    private static final String jepMarker = \"<!-- jep: '%s' '%s' '%s' -->\"; \/\/ <!-- jep: 'JEP-ID' 'ISSUE-ID' 'ISSUE-TITLE' -->\n-    static final Pattern jepMarkerPattern = Pattern.compile(\"<!-- jep: '(.*?)' '(.*?)' '(.*?)' -->\");\n-    private static final String unneededMarker = \"<!-- jep: 'unneeded' 'unneeded' 'unneeded' -->\";\n+    private static final String UNNEEDED_MARKER = \"<!-- jep: 'unneeded' 'unneeded' 'unneeded' -->\";\n@@ -112,1 +109,1 @@\n-            reply.println(unneededMarker);\n+            reply.println(UNNEEDED_MARKER);\n@@ -145,1 +142,1 @@\n-        reply.println(String.format(jepMarker, jepNumber, jbsIssue.id(), jbsIssue.title()));\n+        reply.println(String.format(JEP_MARKER, jepNumber, jbsIssue.id(), jbsIssue.title()));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommand.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,3 @@\n-    private static final Pattern argumentPattern = Pattern.compile(\"(?:(add|remove)\\\\s+)((?:[A-Za-z0-9_@.-]+[\\\\s,]*)+)\");\n-    private static final Pattern shortArgumentPattern = Pattern.compile(\"((?:[-+]?[A-Za-z0-9_@.-]+[\\\\s,]*)+)\");\n-    private static final Pattern ignoredSuffixes = Pattern.compile(\"^(.*)(?:-dev(?:@openjdk.org)?)$\");\n+    private static final Pattern ARGUMENT_PATTERN = Pattern.compile(\"(?:(add|remove)\\\\s+)((?:[A-Za-z0-9_@.-]+[\\\\s,]*)+)\");\n+    private static final Pattern SHORT_ARGUMENT_PATTERN = Pattern.compile(\"((?:[-+]?[A-Za-z0-9_@.-]+[\\\\s,]*)+)\");\n+    private static final Pattern IGNORED_SUFFIXES = Pattern.compile(\"^(.*)(?:-dev(?:@openjdk.org)?)$\");\n@@ -64,2 +64,2 @@\n-        var argumentMatcher = argumentPattern.matcher(command.args());\n-        var shortArgumentMatcher = shortArgumentPattern.matcher(command.args());\n+        var argumentMatcher = ARGUMENT_PATTERN.matcher(command.args());\n+        var shortArgumentMatcher = SHORT_ARGUMENT_PATTERN.matcher(command.args());\n@@ -136,1 +136,1 @@\n-            var ignoredSuffixMatcher = ignoredSuffixes.matcher(label);\n+            var ignoredSuffixMatcher = IGNORED_SUFFIXES.matcher(label);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelCommand.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,3 +33,3 @@\n-    private final static String addMarker = \"<!-- added label: '%s' -->\";\n-    private final static String removeMarker = \"<!-- removed label: '%s' -->\";\n-    private final static Pattern labelMarkerPattern = Pattern.compile(\"<!-- (added|removed) label: '(.*?)' -->\");\n+    private static final String ADD_MARKER = \"<!-- added label: '%s' -->\";\n+    private static final String REMOVE_MARKER = \"<!-- removed label: '%s' -->\";\n+    private static final Pattern LABEL_MARKER_PATTERN = Pattern.compile(\"<!-- (added|removed) label: '(.*?)' -->\");\n@@ -38,1 +38,1 @@\n-        return String.format(addMarker, label);\n+        return String.format(ADD_MARKER, label);\n@@ -42,1 +42,1 @@\n-        return String.format(removeMarker, label);\n+        return String.format(REMOVE_MARKER, label);\n@@ -50,1 +50,1 @@\n-                .map(labelMarkerPattern::matcher)\n+                .map(LABEL_MARKER_PATTERN::matcher)\n@@ -72,1 +72,1 @@\n-                                   .map(labelMarkerPattern::matcher)\n+                                   .map(LABEL_MARKER_PATTERN::matcher)\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTracker.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    private static final String initialLabelMessage = \"<!-- PullRequestBot initial label help comment -->\";\n+    private static final String INITIAL_LABEL_MESSAGE = \"<!-- PullRequestBot initial label help comment -->\";\n@@ -64,1 +64,1 @@\n-        var existing = findComment(comments, initialLabelMessage);\n+        var existing = findComment(comments, INITIAL_LABEL_MESSAGE);\n@@ -114,1 +114,1 @@\n-        message.append(initialLabelMessage);\n+        message.append(INITIAL_LABEL_MESSAGE);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,0 +40,3 @@\n+import static org.openjdk.skara.bots.pr.CommitCommandWorkItem.COMMAND_REPLY_MARKER;\n+import static org.openjdk.skara.bots.pr.CommitCommandWorkItem.COMMAND_REPLY_PATTERN;\n+\n@@ -42,5 +45,1 @@\n-\n-    private static final String commandReplyMarker = \"<!-- Jmerge command reply message (%s) -->\";\n-    private static final Pattern commandReplyPattern = Pattern.compile(\"<!-- Jmerge command reply message \\\\((\\\\S+)\\\\) -->\");\n-\n-    public static final String VALID_BOT_COMMAND_MARKER = \"<!-- Valid self-command -->\";\n+    static final String VALID_BOT_COMMAND_MARKER = \"<!-- Valid self-command -->\";\n@@ -88,1 +87,1 @@\n-                .map(comment -> commandReplyPattern.matcher(comment.body()))\n+                .map(comment -> COMMAND_REPLY_PATTERN.matcher(comment.body()))\n@@ -122,1 +121,1 @@\n-        printer.println(String.format(commandReplyMarker, command.id()));\n+        printer.println(String.format(COMMAND_REPLY_MARKER, command.id()));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCommandWorkItem.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-    private final static String marker = \"<!-- integration requested: '%s' -->\";\n-    private final static Pattern markerPattern = Pattern.compile(\"<!-- integration requested: '(.*?)' -->\");\n+    private static final String MARKER = \"<!-- integration requested: '%s' -->\";\n+    private static final Pattern MARKER_PATTERN = Pattern.compile(\"<!-- integration requested: '(.*?)' -->\");\n@@ -38,1 +38,1 @@\n-        return String.format(marker, hash.hex());\n+        return String.format(MARKER, hash.hex());\n@@ -44,1 +44,1 @@\n-                                         .map(comment -> markerPattern.matcher(comment.body()))\n+                                         .map(comment -> MARKER_PATTERN.matcher(comment.body()))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReadyForSponsorTracker.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    private static final Pattern commandPattern = Pattern.compile(\"^(credit|remove)\\\\s+(.+)$\");\n+    private static final Pattern COMMAND_PATTERN = Pattern.compile(\"^(credit|remove)\\\\s+(.+)$\");\n@@ -76,1 +76,1 @@\n-        var matcher = commandPattern.matcher(command.args());\n+        var matcher = COMMAND_PATTERN.matcher(command.args());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewerCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,3 +35,3 @@\n-    private final static String addMarker = \"<!-- add reviewer: '%s' -->\";\n-    private final static String removeMarker = \"<!-- remove reviewer: '%s' -->\";\n-    private final static Pattern markerPattern = Pattern.compile(\"<!-- (add|remove) reviewer: '(.*?)' -->\");\n+    private static final String ADD_MARKER = \"<!-- add reviewer: '%s' -->\";\n+    private static final String REMOVE_MARKER = \"<!-- remove reviewer: '%s' -->\";\n+    private static final Pattern MARKER_PATTERN = Pattern.compile(\"<!-- (add|remove) reviewer: '(.*?)' -->\");\n@@ -40,1 +40,1 @@\n-        return String.format(addMarker, contributor.username());\n+        return String.format(ADD_MARKER, contributor.username());\n@@ -44,1 +44,1 @@\n-        return String.format(addMarker, username);\n+        return String.format(ADD_MARKER, username);\n@@ -48,1 +48,1 @@\n-        return String.format(removeMarker, contributor.username());\n+        return String.format(REMOVE_MARKER, contributor.username());\n@@ -55,1 +55,1 @@\n-                                         .map(line -> markerPattern.matcher(line))\n+                                         .map(line -> MARKER_PATTERN.matcher(line))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/Reviewers.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    private static final Map<String, String> roleMappings = Map.of(\n+    private static final Map<String, String> ROLE_MAPPINGS = Map.of(\n@@ -110,1 +110,1 @@\n-            if (!roleMappings.containsKey(splitArgs[1].toLowerCase())) {\n+            if (!ROLE_MAPPINGS.containsKey(splitArgs[1].toLowerCase())) {\n@@ -115,1 +115,1 @@\n-            role = roleMappings.get(splitArgs[1].toLowerCase());\n+            role = ROLE_MAPPINGS.get(splitArgs[1].toLowerCase());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersCommand.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-    private final static String reviewersMarker = \"<!-- additional required reviewers id marker (%d) (%s) -->\";\n-    private final static Pattern reviewersMarkerPattern = Pattern.compile(\n+    private static final String REVIEWERS_MARKER = \"<!-- additional required reviewers id marker (%d) (%s) -->\";\n+    private static final Pattern REVIEWERS_MARKER_PATTERN = Pattern.compile(\n@@ -39,1 +39,1 @@\n-        return String.format(reviewersMarker, numReviewers, role);\n+        return String.format(REVIEWERS_MARKER, numReviewers, role);\n@@ -117,1 +117,1 @@\n-                                       .map(comment -> reviewersMarkerPattern.matcher(comment.body()))\n+                                       .map(comment -> REVIEWERS_MARKER_PATTERN.matcher(comment.body()))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTracker.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-    private final static String summaryMarker = \"<!-- summary: '%s' -->\";\n-    private final static Pattern markerPattern = Pattern.compile(\"<!-- summary: '(.*?)' -->\");\n+    private static final String SUMMARY_MARKER = \"<!-- summary: '%s' -->\";\n+    private static final Pattern MARKER_PATTERN = Pattern.compile(\"<!-- summary: '(.*?)' -->\");\n@@ -39,1 +39,1 @@\n-        return String.format(summaryMarker, encodedSummary);\n+        return String.format(SUMMARY_MARKER, encodedSummary);\n@@ -45,1 +45,1 @@\n-                                         .map(comment -> markerPattern.matcher(comment.body()))\n+                                         .map(comment -> MARKER_PATTERN.matcher(comment.body()))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/Summary.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n@@ -1976,1 +1977,0 @@\n-            var csrUpdateMarker = \"\\n<!-- csr: 'update' -->\\n\";\n@@ -2025,1 +2025,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2044,1 +2044,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2063,1 +2063,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2077,1 +2077,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2096,1 +2096,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2116,1 +2116,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2141,1 +2141,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n@@ -2158,1 +2158,1 @@\n-            pr.setBody(pr.store().body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + CSR_UPDATE_MARKER);\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n@@ -78,1 +79,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -85,1 +86,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -95,1 +96,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -104,1 +105,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -114,1 +115,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -123,1 +124,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -133,1 +134,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -142,1 +143,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -152,1 +153,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -161,1 +162,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -171,1 +172,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -180,1 +181,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -190,1 +191,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -199,1 +200,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -241,1 +242,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -248,1 +249,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -257,1 +258,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -267,1 +268,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -277,1 +278,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -287,1 +288,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -322,1 +323,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -329,1 +330,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -343,1 +344,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -357,1 +358,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -367,1 +368,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -377,1 +378,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -387,1 +388,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -397,1 +398,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -440,1 +441,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -446,1 +447,1 @@\n-                assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+                assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n@@ -457,1 +458,1 @@\n-                assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+                assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -497,1 +498,1 @@\n-            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEP_LABEL));\n@@ -506,1 +507,1 @@\n-            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEP_LABEL));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommandTests.java","additions":35,"deletions":34,"binary":false,"changes":69,"status":"modified"}]}