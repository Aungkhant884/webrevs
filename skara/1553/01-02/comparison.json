{"files":[{"patch":"@@ -90,1 +90,1 @@\n-                reply.println(Authors.setAuthorMarker(author.get()));\n+                reply.println(OverridingAuthor.setAuthorMarker(author.get()));\n@@ -95,1 +95,1 @@\n-                var currAuthor = Authors.author(pr.repository().forge().currentUser(), allComments);\n+                var currAuthor = OverridingAuthor.author(pr.repository().forge().currentUser(), allComments);\n@@ -108,1 +108,1 @@\n-                    reply.println(\"There is no author set in this pull request.\");\n+                    reply.println(\"There is no overriding author set for this pull request.\");\n@@ -111,2 +111,2 @@\n-                        reply.println(Authors.removeAuthorMarker(author.get()));\n-                        reply.println(\"Author `\" + author.get() + \"` successfully removed.\");\n+                        reply.println(OverridingAuthor.removeAuthorMarker(author.get()));\n+                        reply.println(\"Overriding author `\" + author.get() + \"` was successfully removed. When this pull request is integrated, the pull request author will be used as the author of the commit.\");\n@@ -114,2 +114,1 @@\n-                        reply.println(\"`\" + author.get() + \"` was not set to this pull request's author.\");\n-                        reply.println(\"Current author of this pull request is set to: `\" + currAuthor.get() + \"`\");\n+                        reply.println(\"Cannot remove `\" + author.get() + \"`, the overriding author is currently set to: `\" + currAuthor.get() + \"`\");\n@@ -125,1 +124,1 @@\n-        return \"sets or removes author for a PR\";\n+        return \"sets an overriding author to be used in the commit when the PR is integrated\";\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/AuthorCommand.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -468,1 +468,1 @@\n-        var hash = checkablePullRequest.findOriginalBackportHash();\n+        var hash = checkablePullRequest.findOriginalBackportHash(comments);\n@@ -1245,1 +1245,1 @@\n-                localHash = checkablePullRequest.commit(commitHash, censusInstance.namespace(), censusDomain, null, null);\n+                localHash = checkablePullRequest.commit(commitHash, censusInstance.namespace(), censusDomain, null, null, comments);\n@@ -1319,1 +1319,1 @@\n-            var amendedHash = checkablePullRequest.amendManualReviewers(localHash, censusInstance.namespace(), original.map(Commit::hash).orElse(null));\n+            var amendedHash = checkablePullRequest.amendManualReviewers(localHash, censusInstance.namespace(), original.map(Commit::hash).orElse(null), comments);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.skara.issuetracker.Comment;\n@@ -64,1 +65,1 @@\n-    private String commitMessage(Hash head, List<Review> activeReviews, Namespace namespace, boolean manualReviewers, Hash original) throws IOException {\n+    private String commitMessage(Hash head, List<Review> activeReviews, Namespace namespace, boolean manualReviewers, Hash original, List<Comment> comments) throws IOException {\n@@ -74,1 +75,0 @@\n-        var comments = pr.comments();\n@@ -158,1 +158,1 @@\n-    Hash commit(Hash finalHead, Namespace namespace, String censusDomain, String sponsorId, Hash original) throws IOException, CommitFailure {\n+    Hash commit(Hash finalHead, Namespace namespace, String censusDomain, String sponsorId, Hash original, List<Comment> comments) throws IOException, CommitFailure {\n@@ -181,3 +181,3 @@\n-        var authorSet = Authors.author(pr.repository().forge().currentUser(), pr.comments());\n-        if (authorSet.isPresent()) {\n-            author = new Author(authorSet.get().fullName().orElse(\"\"), authorSet.get().address());\n+        var overridingAuthor = OverridingAuthor.author(pr.repository().forge().currentUser(), comments);\n+        if (overridingAuthor.isPresent()) {\n+            author = new Author(overridingAuthor.get().fullName().orElse(\"\"), overridingAuthor.get().address());\n@@ -187,1 +187,1 @@\n-        var commitMessage = commitMessage(finalHead, activeReviews, namespace, false, original);\n+        var commitMessage = commitMessage(finalHead, activeReviews, namespace, false, original, comments);\n@@ -191,1 +191,1 @@\n-    Hash amendManualReviewers(Hash commit, Namespace namespace, Hash original) throws IOException {\n+    Hash amendManualReviewers(Hash commit, Namespace namespace, Hash original, List<Comment> comments) throws IOException {\n@@ -193,2 +193,2 @@\n-        var originalCommitMessage = commitMessage(commit, activeReviews, namespace, false, original);\n-        var amendedCommitMessage = commitMessage(commit, activeReviews, namespace, true, original);\n+        var originalCommitMessage = commitMessage(commit, activeReviews, namespace, false, original, comments);\n+        var amendedCommitMessage = commitMessage(commit, activeReviews, namespace, true, original, comments);\n@@ -296,2 +296,2 @@\n-    Hash findOriginalBackportHash() {\n-        return findOriginalBackportHash(pr);\n+    Hash findOriginalBackportHash(List<Comment> comments) {\n+        return findOriginalBackportHash(pr, comments);\n@@ -300,1 +300,1 @@\n-    static Hash findOriginalBackportHash(PullRequest pr) {\n+    static Hash findOriginalBackportHash(PullRequest pr, List<Comment> comments) {\n@@ -302,1 +302,1 @@\n-        return pr.comments()\n+        return comments\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        if (!pr.labelNames().contains(\"backport\") || CheckablePullRequest.findOriginalBackportHash(pr) == null) {\n+        if (!pr.labelNames().contains(\"backport\") || CheckablePullRequest.findOriginalBackportHash(pr, allComments) == null) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-            var original = checkablePr.findOriginalBackportHash();\n+            var original = checkablePr.findOriginalBackportHash(allComments);\n@@ -224,1 +224,1 @@\n-                    censusInstance.configuration().census().domain(), committerId, original);\n+                    censusInstance.configuration().census().domain(), committerId, original, allComments);\n@@ -242,1 +242,1 @@\n-                var amendedHash = checkablePr.amendManualReviewers(localHash, censusInstance.namespace(), original);\n+                var amendedHash = checkablePr.amendManualReviewers(localHash, censusInstance.namespace(), original, allComments);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-class Authors {\n+class OverridingAuthor {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/OverridingAuthor.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/Authors.java","status":"renamed"},{"patch":"@@ -123,1 +123,1 @@\n-            var original = checkablePr.findOriginalBackportHash();\n+            var original = checkablePr.findOriginalBackportHash(allComments);\n@@ -125,1 +125,1 @@\n-                    command.user().id(), original);\n+                    command.user().id(), original, allComments);\n@@ -132,1 +132,1 @@\n-                var amendedHash = checkablePr.amendManualReviewers(localHash, censusInstance.namespace(), original);\n+                var amendedHash = checkablePr.amendManualReviewers(localHash, censusInstance.namespace(), original, allComments);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -77,1 +77,2 @@\n-            assertLastCommentContains(pr, \"Author of this pull request has been set to `Test Person <test@test.test>` successfully.\");\n+            assertLastCommentContains(pr, \"Setting overriding author to `Test Person <test@test.test>`. \" +\n+                    \"When this pull request is integrated, the overriding author will be used in the commit.\");\n@@ -84,1 +85,2 @@\n-            assertLastCommentContains(pr, \"Author `Test Person <test@test.test>` successfully removed.\");\n+            assertLastCommentContains(pr, \"Overriding author `Test Person <test@test.test>` was successfully removed. \" +\n+                    \"When this pull request is integrated, the pull request author will be used as the author of the commit.\");\n@@ -91,1 +93,1 @@\n-            assertLastCommentContains(pr, \"There is no author set in this pull request.\");\n+            assertLastCommentContains(pr, \"There is no overriding author set for this pull request.\");\n@@ -98,1 +100,1 @@\n-            assertLastCommentContains(pr, \"There is no author set in this pull request.\");\n+            assertLastCommentContains(pr, \"There is no overriding author set for this pull request.\");\n@@ -105,1 +107,2 @@\n-            assertLastCommentContains(pr, \"Author of this pull request has been set to `Test Person <test@test.test>` successfully.\");\n+            assertLastCommentContains(pr, \"Setting overriding author to `Test Person <test@test.test>`. \" +\n+                    \"When this pull request is integrated, the overriding author will be used in the commit.\");\n@@ -112,2 +115,1 @@\n-            assertLastCommentContains(pr, \"@user1 `Test Person 2 <test2@test.test>` was not set to this pull request's author.\");\n-            assertLastCommentContains(pr, \"Current author of this pull request is set to: `Test Person <test@test.test>`\");\n+            assertLastCommentContains(pr, \"Cannot remove `Test Person 2 <test2@test.test>`, the overriding author is currently set to: `Test Person <test@test.test>`\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/AuthorCommandTests.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}