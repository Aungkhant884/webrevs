{"files":[{"patch":"@@ -48,1 +48,0 @@\n-    private Map<String, Label> labelNameToLabel;\n@@ -56,3 +55,0 @@\n-        labelNameToLabel = repository.labels()\n-                                     .stream()\n-                                     .collect(Collectors.toMap(l -> l.name(), l -> l));\n@@ -61,1 +57,1 @@\n-                     .map(s -> labelNameToLabel.get(s.asString()))\n+                     .map(s -> labelNameToLabel(s.asString()))\n@@ -638,0 +634,15 @@\n+    private Map<String, Label> labelNameToLabel;\n+\n+    \/**\n+     * Lookup a label from the repository labels. Initialize and refresh a cache\n+     * of the repository labels lazily.\n+     *\/\n+    private Label labelNameToLabel(String labelName) {\n+        if (labelNameToLabel == null || !labelNameToLabel.containsKey(labelName)) {\n+            labelNameToLabel = repository.labels()\n+                    .stream()\n+                    .collect(Collectors.toMap(Label::name, l -> l));\n+        }\n+        return labelNameToLabel.get(labelName);\n+    }\n+\n@@ -671,1 +682,1 @@\n-        this.labels = labels.stream().map(l -> labelNameToLabel.get(l)).collect(Collectors.toList());\n+        this.labels = labels.stream().map(this::labelNameToLabel).collect(Collectors.toList());\n@@ -680,1 +691,3 @@\n-                                .map(s -> labelNameToLabel.get(s.asString()))\n+                                .map(s -> labelNameToLabel(s.asString()))\n+                                \/\/ Avoid throwing NPE for unknown labels\n+                                .filter(Objects::nonNull)\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"}]}