{"files":[{"patch":"@@ -741,3 +741,8 @@\n-        \/\/ TODO? Retrieve the body again here to lower the chance of concurrent updates\n-        log.info(\"Updating PR body\");\n-        pr.setBody(newBody);\n+        \/\/ Retrieve the body again here to lower the chance of concurrent updates\n+        if (pr.body().equals(pr.latestBody())) {\n+            log.info(\"Updating PR body\");\n+            pr.setBody(newBody);\n+        } else {\n+            log.info(\"PR body has been modified, won't update PR body this time\");\n+            return description;\n+        }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -350,0 +350,5 @@\n+\n+    @Override\n+    public String latestBody() {\n+        return null;\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -251,0 +251,2 @@\n+\n+    String latestBody();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -798,0 +798,5 @@\n+\n+    @Override\n+    public String latestBody() {\n+        return request.get(\"pulls\/\" + json.get(\"number\").toString()).execute().get(\"body\").asString();\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -904,0 +904,5 @@\n+\n+    @Override\n+    public String latestBody() {\n+        return request.get().execute().get(\"description\").asString();\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -151,0 +151,11 @@\n+\n+    @Test\n+    void testLatestBody(){\n+        var testRepoOpt = githubHost.repository(\"openjdk\/playground\");\n+        assumeTrue(testRepoOpt.isPresent());\n+        var testRepo = testRepoOpt.get();\n+        var testPr = testRepo.pullRequest(\"99\");\n+\n+        String latestBody = testPr.latestBody();\n+        assertEquals(\"test\", latestBody);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRestApiTests.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -132,0 +132,15 @@\n+\n+    @Test\n+    void testLatestBody() throws IOException {\n+        var settings = ManualTestSettings.loadManualTestSettings();\n+        var username = settings.getProperty(\"gitlab.user\");\n+        var token = settings.getProperty(\"gitlab.pat\");\n+        var credential = new Credential(username, token);\n+        var uri = URIBuilder.base(settings.getProperty(\"gitlab.uri\")).build();\n+        var gitLabHost = new GitLabHost(\"gitlab\", uri, false, credential, Set.of());\n+        var gitLabRepo = gitLabHost.repository(settings.getProperty(\"gitlab.repository\")).orElseThrow();\n+        var gitLabMergeRequest = gitLabRepo.pullRequest(settings.getProperty(\"gitlab.merge.request.id\"));\n+\n+        String latestBody = gitLabMergeRequest.latestBody();\n+        assertEquals(\"This is a body\", latestBody);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRestApiTest.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -330,0 +330,5 @@\n+\n+    @Override\n+    public String latestBody() {\n+        return store().body();\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}