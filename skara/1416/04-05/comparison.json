{"files":[{"patch":"@@ -749,1 +749,2 @@\n-        if (pr.body().equals(pr.latestBody())) {\n+        var latestPR = pr.repository().pullRequest(pr.id());\n+        if (description.equals(latestPR.body())) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -350,5 +350,0 @@\n-\n-    @Override\n-    public String latestBody() {\n-        return null;\n-    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -252,2 +252,0 @@\n-\n-    String latestBody();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -811,5 +811,0 @@\n-\n-    @Override\n-    public String latestBody() {\n-        return request.get(\"pulls\/\" + json.get(\"number\").toString()).execute().get(\"body\").asString();\n-    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -904,5 +904,0 @@\n-\n-    @Override\n-    public String latestBody() {\n-        return request.get().execute().get(\"description\").asString();\n-    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -163,11 +163,0 @@\n-\n-    @Test\n-    void testLatestBody(){\n-        var testRepoOpt = githubHost.repository(\"openjdk\/playground\");\n-        assumeTrue(testRepoOpt.isPresent());\n-        var testRepo = testRepoOpt.get();\n-        var testPr = testRepo.pullRequest(\"99\");\n-\n-        String latestBody = testPr.latestBody();\n-        assertEquals(\"test\", latestBody);\n-    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRestApiTests.java","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -132,15 +132,0 @@\n-\n-    @Test\n-    void testLatestBody() throws IOException {\n-        var settings = ManualTestSettings.loadManualTestSettings();\n-        var username = settings.getProperty(\"gitlab.user\");\n-        var token = settings.getProperty(\"gitlab.pat\");\n-        var credential = new Credential(username, token);\n-        var uri = URIBuilder.base(settings.getProperty(\"gitlab.uri\")).build();\n-        var gitLabHost = new GitLabHost(\"gitlab\", uri, false, credential, Set.of());\n-        var gitLabRepo = gitLabHost.repository(settings.getProperty(\"gitlab.repository\")).orElseThrow();\n-        var gitLabMergeRequest = gitLabRepo.pullRequest(settings.getProperty(\"gitlab.merge.request.id\"));\n-\n-        String latestBody = gitLabMergeRequest.latestBody();\n-        assertEquals(\"This is a body\", latestBody);\n-    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRestApiTest.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -333,5 +333,0 @@\n-\n-    @Override\n-    public String latestBody() {\n-        return store().body();\n-    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}