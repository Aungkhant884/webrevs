{"files":[{"patch":"@@ -75,1 +75,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -106,1 +106,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -137,1 +137,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -172,1 +172,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -178,1 +178,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -212,1 +212,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -218,1 +218,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -253,1 +253,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -259,1 +259,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -326,1 +326,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -330,1 +330,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -346,1 +346,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -362,1 +362,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -370,1 +370,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -380,1 +380,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -385,1 +385,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -396,1 +396,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -413,1 +413,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -421,1 +421,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -85,1 +85,1 @@\n-                assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+                assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -90,1 +90,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -99,1 +99,1 @@\n-                assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+                assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -129,1 +129,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -133,1 +133,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -136,1 +136,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -165,1 +165,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -170,1 +170,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -173,1 +173,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -202,1 +202,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -207,1 +207,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -210,1 +210,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -239,1 +239,1 @@\n-            assertFalse(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -244,1 +244,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n@@ -247,1 +247,1 @@\n-            assertTrue(pr.labelNames().contains(JEPBot.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPBot.JEP_LABEL));\n","filename":"bots\/jep\/src\/test\/java\/org\/openjdk\/skara\/bots\/jep\/JEPBotTests.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1595,10 +1595,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -1653,10 +1643,0 @@\n-                \/\/ Make sure that the push registered\n-                lastHeadHash = pr.headHash();\n-                refreshCount = 0;\n-                do {\n-                    pr = author.pullRequest(pr.id());\n-                    if (refreshCount++ > 100) {\n-                        fail(\"The PR did not update after the new push\");\n-                    }\n-                } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -1728,10 +1708,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -1831,10 +1801,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -1942,10 +1902,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotTests.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -193,10 +193,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = repo.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -291,2 +281,1 @@\n-            followUpPr = repo.pullRequest(followUpPr.id());\n-            assertEquals(\"master\", followUpPr.targetRef());\n+            assertEquals(\"master\", followUpPr.store().targetRef());\n@@ -346,1 +335,1 @@\n-            ((TestPullRequest) pr).setLastForcePushTime(ZonedDateTime.now());\n+            pr.setLastForcePushTime(ZonedDateTime.now());\n@@ -376,1 +365,1 @@\n-            ((TestPullRequest) pr).setLastForcePushTime(ZonedDateTime.now());\n+            pr.setLastForcePushTime(ZonedDateTime.now());\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/prbranch\/PullRequestBranchNotifierTests.java","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -94,2 +94,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -195,2 +195,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -298,2 +298,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -378,1 +378,1 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n@@ -446,1 +446,1 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n@@ -517,1 +517,1 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n@@ -579,2 +579,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -585,1 +585,1 @@\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n@@ -651,2 +651,2 @@\n-            assertEquals(issue2Number + \": Another issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue2Number + \": Another issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -655,1 +655,1 @@\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n@@ -721,2 +721,2 @@\n-            assertEquals(issue2Number + \": Another issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue2Number + \": Another issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -726,1 +726,1 @@\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -795,2 +795,2 @@\n-            assertEquals(issue2Number + \": Another issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue2Number + \": Another issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -799,1 +799,1 @@\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -856,1 +856,1 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n@@ -858,4 +858,4 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -952,1 +952,1 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n@@ -954,5 +954,5 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n-            assertFalse(pr.labelNames().contains(\"sponsor\"));\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -966,1 +966,1 @@\n-            assertTrue(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"sponsor\"));\n@@ -1061,2 +1061,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1119,2 +1119,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1177,2 +1177,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1235,2 +1235,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1333,1 +1333,1 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n@@ -1381,1 +1381,1 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n@@ -1388,1 +1388,1 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n@@ -1396,2 +1396,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1404,2 +1404,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1515,3 +1515,3 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n@@ -1529,2 +1529,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -1532,1 +1532,1 @@\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportTests.java","additions":54,"deletions":54,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -81,1 +81,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -90,1 +90,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -92,1 +92,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -102,1 +102,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -104,1 +104,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -148,1 +148,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -150,1 +150,1 @@\n-            assertTrue(pr.body().contains(\"- [x] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [x] Change requires a CSR request to be approved\"));\n@@ -190,1 +190,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -192,1 +192,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -229,1 +229,1 @@\n-            assertFalse(prAsAnother.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -231,1 +231,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -238,1 +238,1 @@\n-            assertFalse(prAsAnother.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -240,1 +240,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -250,1 +250,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -252,1 +252,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -259,1 +259,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -261,1 +261,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -268,1 +268,1 @@\n-            assertTrue(prAsAnother.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -270,1 +270,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -307,1 +307,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -309,1 +309,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -350,1 +350,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -352,1 +352,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -392,1 +392,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -394,1 +394,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -403,1 +403,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -405,1 +405,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -451,1 +451,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -461,1 +461,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -463,1 +463,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -476,1 +476,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -478,1 +478,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -523,1 +523,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -533,1 +533,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -535,1 +535,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -548,1 +548,1 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -550,1 +550,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -584,1 +584,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -586,1 +586,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -626,1 +626,1 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -639,1 +639,1 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -646,1 +646,1 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n@@ -678,2 +678,2 @@\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -689,2 +689,2 @@\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n-            assertTrue(pr.body().contains(\"Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n@@ -750,2 +750,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -761,2 +761,2 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -779,2 +779,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -790,2 +790,2 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -808,2 +808,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -819,2 +819,2 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -829,2 +829,2 @@\n-            assertTrue(pr.body().contains(\"- [x] Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [x] Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -836,2 +836,2 @@\n-            assertTrue(pr.body().contains(\"- [x] Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [x] Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -853,2 +853,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -864,2 +864,2 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -878,2 +878,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -886,2 +886,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -908,2 +908,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n@@ -918,2 +918,2 @@\n-            assertFalse(pr.body().contains(\"Change requires a CSR request to be approved\"));\n-            assertFalse(pr.labelNames().contains(\"csr\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request to be approved\"));\n+            assertFalse(pr.store().labelNames().contains(\"csr\"));\n@@ -926,2 +926,2 @@\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n-            assertTrue(pr.labelNames().contains(\"csr\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n+            assertTrue(pr.store().labelNames().contains(\"csr\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":77,"deletions":77,"binary":false,"changes":154,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import static org.junit.jupiter.api.Assumptions.assumeTrue;\n@@ -83,2 +82,2 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -100,2 +99,2 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n-            assertTrue(pr.body().contains(\"https:\/\/census.com\/integrationreviewer2-profile\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().body().contains(\"https:\/\/census.com\/integrationreviewer2-profile\"));\n@@ -132,1 +131,1 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n@@ -148,1 +147,1 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n@@ -154,10 +153,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -168,1 +157,1 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n@@ -206,1 +195,1 @@\n-            assertFalse(authorPr.body().contains(\"Reviewers\"));\n+            assertFalse(authorPr.store().body().contains(\"Reviewers\"));\n@@ -213,3 +202,2 @@\n-            \/\/ Refresh the PR and check that it has been approved\n-            authorPr = author.pullRequest(authorPr.id());\n-            assertTrue(authorPr.body().contains(\"Reviewers\"));\n+            \/\/ Check that it has been approved\n+            assertTrue(authorPr.store().body().contains(\"Reviewers\"));\n@@ -221,10 +209,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = authorPr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                authorPr = author.pullRequest(authorPr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (authorPr.headHash().equals(lastHeadHash));\n-\n@@ -233,1 +211,0 @@\n-            authorPr = author.pullRequest(authorPr.id());\n@@ -235,1 +212,1 @@\n-            assertTrue(compilePattern.matcher(authorPr.body()).matches());\n+            assertTrue(compilePattern.matcher(authorPr.store().body()).matches());\n@@ -241,4 +218,3 @@\n-            \/\/ Refresh the PR and check that it has been approved (once) and is no longer stale\n-            authorPr = author.pullRequest(authorPr.id());\n-            assertTrue(authorPr.body().contains(\"Reviewers\"));\n-            assertEquals(1, authorPr.body().split(\"Generated Reviewer\", -1).length - 1);\n+            \/\/ Check that it has been approved (once) and is no longer stale\n+            assertTrue(authorPr.store().body().contains(\"Reviewers\"));\n+            assertEquals(1, authorPr.store().body().split(\"Generated Reviewer\", -1).length - 1);\n@@ -246,1 +222,1 @@\n-            assertFalse(authorPr.body().contains(\"Note\"));\n+            assertFalse(authorPr.store().body().contains(\"Note\"));\n@@ -253,4 +229,3 @@\n-            \/\/ Refresh the PR and check that it still only approved once (but two reviews) and is no longer stale\n-            authorPr = author.pullRequest(authorPr.id());\n-            assertTrue(authorPr.body().contains(\"Reviewers\"));\n-            assertEquals(1, authorPr.body().split(\"Generated Reviewer\", -1).length - 1);\n+            \/\/ Check that it still only approved once (but two reviews) and is no longer stale\n+            assertTrue(authorPr.store().body().contains(\"Reviewers\"));\n+            assertEquals(1, authorPr.store().body().split(\"Generated Reviewer\", -1).length - 1);\n@@ -258,1 +233,1 @@\n-            assertFalse(authorPr.body().contains(\"Note\"));\n+            assertFalse(authorPr.store().body().contains(\"Note\"));\n@@ -262,1 +237,1 @@\n-            assertTrue(authorPr.body().contains(reviewerString));\n+            assertTrue(authorPr.store().body().contains(reviewerString));\n@@ -290,1 +265,1 @@\n-            assertFalse(authorPr.body().contains(\"Reviewers\"));\n+            assertFalse(authorPr.store().body().contains(\"Reviewers\"));\n@@ -296,3 +271,2 @@\n-            \/\/ Refresh the PR and check that it has been approved\n-            authorPr = author.pullRequest(authorPr.id());\n-            assertTrue(authorPr.body().contains(\"Reviewers\"));\n+            \/\/ Check that it has been approved\n+            assertTrue(authorPr.store().body().contains(\"Reviewers\"));\n@@ -340,2 +314,2 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -357,2 +331,2 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n@@ -363,10 +337,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -377,2 +341,2 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -391,2 +355,1 @@\n-             var tempFolder = new TemporaryDirectory();\n-             var pushedFolder = new TemporaryDirectory()) {\n+             var tempFolder = new TemporaryDirectory()) {\n@@ -428,1 +391,1 @@\n-            pr.setBody(pr.body() + \"recheck\");\n+            pr.setBody(pr.store().body() + \"recheck\");\n@@ -444,2 +407,1 @@\n-             var tempFolder = new TemporaryDirectory();\n-             var pushedFolder = new TemporaryDirectory()) {\n+             var tempFolder = new TemporaryDirectory()) {\n@@ -471,1 +433,1 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n@@ -479,1 +441,1 @@\n-            pr.setBody(pr.body() + \"recheck\");\n+            pr.setBody(pr.store().body() + \"recheck\");\n@@ -489,2 +451,2 @@\n-            assertTrue(pr.labelNames().contains(\"merge-conflict\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"merge-conflict\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -508,1 +470,1 @@\n-            pr.setBody(pr.body() + \"recheck\");\n+            pr.setBody(pr.store().body() + \"recheck\");\n@@ -518,2 +480,2 @@\n-            assertFalse(pr.labelNames().contains(\"merge-conflict\"));\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"merge-conflict\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n@@ -557,3 +519,3 @@\n-            assertTrue(pr.labelNames().contains(\"block\"));\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"block\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -566,2 +528,2 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -608,3 +570,2 @@\n-            var updatedPr = author.pullRequest(pr.id());\n-            assertTrue(updatedPr.body().contains(\"## Error\"));\n-            assertTrue(updatedPr.body().contains(CheckRun.MSG_EMPTY_BODY));\n+            assertTrue(pr.store().body().contains(\"## Error\"));\n+            assertTrue(pr.store().body().contains(CheckRun.MSG_EMPTY_BODY));\n@@ -613,1 +574,1 @@\n-            assertTrue(updatedPr.body().contains(\"Replace this text with a description of your pull request\"));\n+            assertTrue(pr.store().body().contains(\"Replace this text with a description of your pull request\"));\n@@ -616,2 +577,2 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -624,2 +585,2 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -628,3 +589,2 @@\n-            updatedPr = author.pullRequest(pr.id());\n-            assertFalse(updatedPr.body().contains(\"## Error\"));\n-            assertFalse(updatedPr.body().contains(CheckRun.MSG_EMPTY_BODY));\n+            assertFalse(pr.store().body().contains(\"## Error\"));\n+            assertFalse(pr.store().body().contains(CheckRun.MSG_EMPTY_BODY));\n@@ -633,1 +593,1 @@\n-            assertFalse(updatedPr.body().contains(\"Replace this text with a description of your pull request\"));\n+            assertFalse(pr.store().body().contains(\"Replace this text with a description of your pull request\"));\n@@ -678,3 +638,2 @@\n-            var updatedPr = author.pullRequest(pr.id());\n-            assertTrue(updatedPr.body().contains(\"## Error\"));\n-            assertTrue(updatedPr.body().contains(\"Executable files are not allowed (file: executable.exe)\"));\n+            assertTrue(pr.store().body().contains(\"## Error\"));\n+            assertTrue(pr.store().body().contains(\"Executable files are not allowed (file: executable.exe)\"));\n@@ -683,2 +642,2 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -694,2 +653,2 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -698,3 +657,2 @@\n-            updatedPr = author.pullRequest(pr.id());\n-            assertFalse(updatedPr.body().contains(\"## Error\"));\n-            assertFalse(updatedPr.body().contains(\"Executable files are not allowed\"));\n+            assertFalse(pr.store().body().contains(\"## Error\"));\n+            assertFalse(pr.store().body().contains(\"Executable files are not allowed\"));\n@@ -734,1 +692,1 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n@@ -741,1 +699,1 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n@@ -775,1 +733,1 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n@@ -783,1 +741,1 @@\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n@@ -863,1 +821,1 @@\n-            assertTrue(prBadTitle.body().contains(\"Title mismatch between PR and JBS for issue\"));\n+            assertTrue(prBadTitle.store().body().contains(\"Title mismatch between PR and JBS for issue\"));\n@@ -870,1 +828,1 @@\n-            assertFalse(prCutOff.body().contains(\"Title mismatch between PR and JBS for issue\"));\n+            assertFalse(prCutOff.store().body().contains(\"Title mismatch between PR and JBS for issue\"));\n@@ -873,1 +831,1 @@\n-            assertEquals(\"1: My first issue with a very long title that is going to be cut off by the Git Forge provider\", prCutOff.title());\n+            assertEquals(\"1: My first issue with a very long title that is going to be cut off by the Git Forge provider\", prCutOff.store().title());\n@@ -875,1 +833,1 @@\n-            assertTrue(prCutOff.body().startsWith(\"It also has a second line!\"));\n+            assertTrue(prCutOff.store().body().startsWith(\"It also has a second line!\"));\n@@ -890,1 +848,1 @@\n-            assertEquals(\"TEST-2: My second issue ending in space\", prCutOff2.title());\n+            assertEquals(\"TEST-2: My second issue ending in space\", prCutOff2.store().title());\n@@ -930,1 +888,1 @@\n-            assertTrue(pr.body().contains(\"My first issue\"));\n+            assertTrue(pr.store().body().contains(\"My first issue\"));\n@@ -940,2 +898,2 @@\n-            assertFalse(pr.body().contains(\"My first issue\"));\n-            assertTrue(pr.body().contains(\"My second issue\"));\n+            assertFalse(pr.store().body().contains(\"My first issue\"));\n+            assertTrue(pr.store().body().contains(\"My second issue\"));\n@@ -944,2 +902,2 @@\n-            assertTrue(pr.body().contains(\"Title mismatch\"));\n-            assertTrue(pr.body().contains(\"Integration blocker\"));\n+            assertTrue(pr.store().body().contains(\"Title mismatch\"));\n+            assertTrue(pr.store().body().contains(\"Integration blocker\"));\n@@ -952,2 +910,2 @@\n-            assertFalse(pr.body().contains(\"Title mismatch\"));\n-            assertFalse(pr.body().contains(\"Integration blocker\"));\n+            assertFalse(pr.store().body().contains(\"Title mismatch\"));\n+            assertFalse(pr.store().body().contains(\"Integration blocker\"));\n@@ -961,3 +919,3 @@\n-            assertFalse(pr.body().contains(\"My first issue\"));\n-            assertFalse(pr.body().contains(\"My second issue\"));\n-            assertTrue(pr.body().contains(\"does not belong to the `TEST` project\"));\n+            assertFalse(pr.store().body().contains(\"My first issue\"));\n+            assertFalse(pr.store().body().contains(\"My second issue\"));\n+            assertTrue(pr.store().body().contains(\"does not belong to the `TEST` project\"));\n@@ -971,2 +929,2 @@\n-            assertTrue(pr.body().contains(\"My first issue\"));\n-            assertFalse(pr.body().contains(\"My second issue\"));\n+            assertTrue(pr.store().body().contains(\"My first issue\"));\n+            assertFalse(pr.store().body().contains(\"My second issue\"));\n@@ -979,3 +937,3 @@\n-            assertFalse(pr.body().contains(\"My first issue\"));\n-            assertFalse(pr.body().contains(\"My second issue\"));\n-            assertTrue(pr.body().contains(\"Failed to retrieve\"));\n+            assertFalse(pr.store().body().contains(\"My first issue\"));\n+            assertFalse(pr.store().body().contains(\"My second issue\"));\n+            assertTrue(pr.store().body().contains(\"Failed to retrieve\"));\n@@ -1027,1 +985,1 @@\n-            assertTrue(pr.body().contains(\"My first issue\"));\n+            assertTrue(pr.store().body().contains(\"My first issue\"));\n@@ -1037,2 +995,2 @@\n-            assertFalse(pr.body().contains(\"My first issue\"));\n-            assertTrue(pr.body().contains(\"My second issue\"));\n+            assertFalse(pr.store().body().contains(\"My first issue\"));\n+            assertTrue(pr.store().body().contains(\"My second issue\"));\n@@ -1041,2 +999,2 @@\n-            assertTrue(pr.body().contains(\"Title mismatch\"));\n-            assertTrue(pr.body().contains(\"Integration blocker\"));\n+            assertTrue(pr.store().body().contains(\"Title mismatch\"));\n+            assertTrue(pr.store().body().contains(\"Integration blocker\"));\n@@ -1049,2 +1007,2 @@\n-            assertTrue(pr.body().contains(\"Title mismatch\"));\n-            assertTrue(pr.body().contains(\"Integration blocker\"));\n+            assertTrue(pr.store().body().contains(\"Title mismatch\"));\n+            assertTrue(pr.store().body().contains(\"Integration blocker\"));\n@@ -1064,2 +1022,2 @@\n-            assertFalse(pr.body().contains(\"Title mismatch\"));\n-            assertFalse(pr.body().contains(\"Integration blocker\"));\n+            assertFalse(pr.store().body().contains(\"Title mismatch\"));\n+            assertFalse(pr.store().body().contains(\"Integration blocker\"));\n@@ -1108,4 +1066,4 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertFalse(pr.body().contains(\"The csr issue (**CSR**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertFalse(pr.store().body().contains(\"The csr issue (**CSR**)\"));\n@@ -1119,3 +1077,3 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertTrue(pr.body().contains(\"The csr issue (**CSR**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertTrue(pr.store().body().contains(\"The csr issue (**CSR**)\"));\n@@ -1131,3 +1089,3 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertTrue(pr.body().contains(\"The csr issue (**CSR**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertTrue(pr.store().body().contains(\"The csr issue (**CSR**)\"));\n@@ -1135,1 +1093,1 @@\n-            assertFalse(pr.body().contains(\"Issue is not open\"));\n+            assertFalse(pr.store().body().contains(\"Issue is not open\"));\n@@ -1170,4 +1128,4 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertFalse(pr.body().contains(\"The jep issue (**JEP**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertFalse(pr.store().body().contains(\"The jep issue (**JEP**)\"));\n@@ -1180,3 +1138,3 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertTrue(pr.body().contains(\"The jep issue (**JEP**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertTrue(pr.store().body().contains(\"The jep issue (**JEP**)\"));\n@@ -1198,3 +1156,3 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertTrue(pr.body().contains(\"The jep issue (**JEP**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertTrue(pr.store().body().contains(\"The jep issue (**JEP**)\"));\n@@ -1212,3 +1170,3 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(\"The main issue\"));\n-            assertTrue(pr.body().contains(\"The jep issue (**JEP**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(\"The main issue\"));\n+            assertTrue(pr.store().body().contains(\"The jep issue (**JEP**)\"));\n@@ -1216,1 +1174,1 @@\n-            assertFalse(pr.body().contains(\"Issue is not open\"));\n+            assertFalse(pr.store().body().contains(\"Issue is not open\"));\n@@ -1351,2 +1309,2 @@\n-            assertFalse(pr.labelNames().contains(\"rfr\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -1410,1 +1368,0 @@\n-            var oldConf = Files.readString(confPath, StandardCharsets.UTF_8);\n@@ -1541,2 +1498,2 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n-            assertFalse(pr.body().contains(\"Re-review required\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().body().contains(\"Re-review required\"));\n@@ -1548,10 +1505,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -1562,3 +1509,3 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n-            assertTrue(pr.labelNames().contains(\"rfr\"));\n-            assertTrue(pr.body().contains(\"Re-review required\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertTrue(pr.store().body().contains(\"Re-review required\"));\n@@ -1672,4 +1619,4 @@\n-            assertTrue(backportPR.body().contains(backport.id()));\n-            assertTrue(backportPR.body().contains(\"My first feature\"));\n-            assertTrue(backportPR.body().contains(\"### Integration blocker\"));\n-            assertTrue(backportPR.body().contains(\"Issue of type `Backport` is not allowed for integrations\"));\n+            assertTrue(backportPR.store().body().contains(backport.id()));\n+            assertTrue(backportPR.store().body().contains(\"My first feature\"));\n+            assertTrue(backportPR.store().body().contains(\"### Integration blocker\"));\n+            assertTrue(backportPR.store().body().contains(\"Issue of type `Backport` is not allowed for integrations\"));\n@@ -1708,1 +1655,1 @@\n-            assertEquals(numericId, bugPR.title());\n+            assertEquals(numericId, bugPR.store().title());\n@@ -1714,2 +1661,1 @@\n-            bugPR = author.pullRequest(bugPR.id());\n-            assertEquals(numericId + \": \" + bug.title(), bugPR.title());\n+            assertEquals(numericId + \": \" + bug.title(), bugPR.store().title());\n@@ -1747,1 +1693,1 @@\n-            assertEquals(bug.id(), bugPR.title());\n+            assertEquals(bug.id(), bugPR.store().title());\n@@ -1753,1 +1699,0 @@\n-            bugPR = author.pullRequest(bugPR.id());\n@@ -1755,1 +1700,1 @@\n-            assertEquals(numericId + \": \" + bug.title(), bugPR.title());\n+            assertEquals(numericId + \": \" + bug.title(), bugPR.store().title());\n@@ -1793,1 +1738,1 @@\n-            assertEquals(\"bad title\", bugPR.title());\n+            assertEquals(\"bad title\", bugPR.store().title());\n@@ -1799,2 +1744,1 @@\n-            bugPR = author.pullRequest(bugPR.id());\n-            assertEquals(numericId, bugPR.title());\n+            assertEquals(numericId, bugPR.store().title());\n@@ -1807,2 +1751,1 @@\n-            bugPR = author.pullRequest(bugPR.id());\n-            assertEquals(numericId + \": \" + bug.title(), bugPR.title());\n+            assertEquals(numericId + \": \" + bug.title(), bugPR.store().title());\n@@ -1846,1 +1789,0 @@\n-            bugPR = author.pullRequest(bugPR.id());\n@@ -1848,1 +1790,1 @@\n-            assertEquals(numericId + \": \" + bug.title(), bugPR.title());\n+            assertEquals(numericId + \": \" + bug.title(), bugPR.store().title());\n@@ -1855,2 +1797,1 @@\n-             var tempFolder = new TemporaryDirectory();\n-             var confFolder = new TemporaryDirectory()) {\n+             var tempFolder = new TemporaryDirectory()) {\n@@ -1891,1 +1832,1 @@\n-            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.store().labelNames()));\n@@ -1898,2 +1839,1 @@\n-             var tempFolder = new TemporaryDirectory();\n-             var confFolder = new TemporaryDirectory()) {\n+             var tempFolder = new TemporaryDirectory()) {\n@@ -1939,1 +1879,1 @@\n-            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.store().labelNames()));\n@@ -1946,2 +1886,1 @@\n-             var tempFolder = new TemporaryDirectory();\n-             var pushedFolder = new TemporaryDirectory()) {\n+             var tempFolder = new TemporaryDirectory()) {\n@@ -1974,1 +1913,0 @@\n-            pr = author.pullRequest(pr.id());\n@@ -1984,1 +1922,0 @@\n-            pr = author.pullRequest(pr.id());\n@@ -2052,1 +1989,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2056,6 +1993,6 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n@@ -2072,1 +2009,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2076,6 +2013,6 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n@@ -2092,1 +2029,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2096,6 +2033,6 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n@@ -2106,1 +2043,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2110,5 +2047,5 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertTrue(pr.body().contains(csr.id()));\n-            assertTrue(pr.body().contains(csr.title() + \" (**CSR**)\"));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertTrue(pr.store().body().contains(csr.id()));\n+            assertTrue(pr.store().body().contains(csr.title() + \" (**CSR**)\"));\n@@ -2125,1 +2062,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2129,8 +2066,8 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n-            assertFalse(pr.body().contains(backportIssue.id()));\n-            assertFalse(pr.body().contains(backportIssue.title()));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n+            assertFalse(pr.store().body().contains(backportIssue.id()));\n+            assertFalse(pr.store().body().contains(backportIssue.title()));\n@@ -2145,1 +2082,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2149,9 +2086,9 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertTrue(pr.body().contains(backportCsr.id()));\n-            assertTrue(pr.body().contains(backportCsr.title() + \" (**CSR**)\"));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n-            assertFalse(pr.body().contains(backportIssue.id()));\n-            assertFalse(pr.body().contains(backportIssue.title()));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertTrue(pr.store().body().contains(backportCsr.id()));\n+            assertTrue(pr.store().body().contains(backportCsr.title() + \" (**CSR**)\"));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n+            assertFalse(pr.store().body().contains(backportIssue.id()));\n+            assertFalse(pr.store().body().contains(backportIssue.title()));\n@@ -2171,1 +2108,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2175,9 +2112,9 @@\n-            assertTrue(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertTrue(pr.body().contains(backportCsr.id()));\n-            assertTrue(pr.body().contains(backportCsr.title() + \" (**CSR**)\"));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n-            assertFalse(pr.body().contains(backportIssue.id()));\n-            assertFalse(pr.body().contains(backportIssue.title()));\n+            assertTrue(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertTrue(pr.store().body().contains(backportCsr.id()));\n+            assertTrue(pr.store().body().contains(backportCsr.title() + \" (**CSR**)\"));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n+            assertFalse(pr.store().body().contains(backportIssue.id()));\n+            assertFalse(pr.store().body().contains(backportIssue.title()));\n@@ -2188,1 +2125,1 @@\n-            pr.setBody(pr.body() + csrUpdateMarker);\n+            pr.setBody(pr.store().body() + csrUpdateMarker);\n@@ -2192,10 +2129,10 @@\n-            assertTrue(pr.body().contains(\"### Issue\"));\n-            assertFalse(pr.body().contains(\"### Issues\"));\n-            assertTrue(pr.body().contains(issue.id()));\n-            assertTrue(pr.body().contains(issue.title()));\n-            assertFalse(pr.body().contains(csr.id()));\n-            assertFalse(pr.body().contains(csr.title()));\n-            assertFalse(pr.body().contains(backportIssue.id()));\n-            assertFalse(pr.body().contains(backportIssue.title()));\n-            assertFalse(pr.body().contains(backportCsr.id()));\n-            assertFalse(pr.body().contains(backportCsr.title()));\n+            assertTrue(pr.store().body().contains(\"### Issue\"));\n+            assertFalse(pr.store().body().contains(\"### Issues\"));\n+            assertTrue(pr.store().body().contains(issue.id()));\n+            assertTrue(pr.store().body().contains(issue.title()));\n+            assertFalse(pr.store().body().contains(csr.id()));\n+            assertFalse(pr.store().body().contains(csr.title()));\n+            assertFalse(pr.store().body().contains(backportIssue.id()));\n+            assertFalse(pr.store().body().contains(backportIssue.title()));\n+            assertFalse(pr.store().body().contains(backportCsr.id()));\n+            assertFalse(pr.store().body().contains(backportCsr.title()));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":211,"deletions":274,"binary":false,"changes":485,"status":"modified"},{"patch":"@@ -67,2 +67,2 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -73,2 +73,2 @@\n-            assertFalse(pr.labelNames().contains(\"backport\"));\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -133,2 +133,2 @@\n-            assertEquals(issue1Number + \": An issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue1Number + \": An issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -137,1 +137,1 @@\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n@@ -142,1 +142,1 @@\n-            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"clean\"));\n@@ -208,2 +208,2 @@\n-            assertEquals(issue2Number + \": Another issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue2Number + \": Another issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -212,1 +212,1 @@\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -217,1 +217,1 @@\n-            assertTrue(pr.labelNames().contains(\"clean\"), \"PR not marked clean\");\n+            assertTrue(pr.store().labelNames().contains(\"clean\"), \"PR not marked clean\");\n@@ -220,1 +220,1 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"), \"PR not marked ready\");\n+            assertTrue(pr.store().labelNames().contains(\"ready\"), \"PR not marked ready\");\n@@ -287,2 +287,2 @@\n-            assertEquals(issue2Number + \": Another issue\", pr.title());\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n+            assertEquals(issue2Number + \": Another issue\", pr.store().title());\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n@@ -291,1 +291,1 @@\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -297,1 +297,1 @@\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -335,2 +335,2 @@\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n@@ -341,2 +341,2 @@\n-            assertTrue(pr.labelNames().contains(\"backport\"));\n-            assertFalse(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.store().labelNames().contains(\"backport\"));\n+            assertFalse(pr.store().labelNames().contains(\"clean\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommandTests.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-            assertTrue(pr.labelNames().contains(\"integrated\"));\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"));\n@@ -105,1 +105,1 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -818,2 +818,1 @@\n-            pr = author.pullRequest(pr.id());\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -880,1 +879,1 @@\n-            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().labelNames().contains(\"ready\"));\n@@ -917,1 +916,1 @@\n-            assertTrue(pr.labelNames().contains(\"auto\"));\n+            assertTrue(pr.store().labelNames().contains(\"auto\"));\n@@ -923,1 +922,3 @@\n-            \/\/ The bot should post the \/integrate command and push\n+            \/\/ The bot needs two rounds, first mark the PR as ready\n+            TestBotRunner.runPeriodicItems(mergeBot);\n+            \/\/ Then post the \/integrate command and push\n@@ -942,1 +943,1 @@\n-            assertTrue(pr.labelNames().contains(\"integrated\"));\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"));\n@@ -945,1 +946,1 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -983,1 +984,1 @@\n-            assertTrue(pr.labelNames().contains(\"auto\"));\n+            assertTrue(pr.store().labelNames().contains(\"auto\"));\n@@ -989,1 +990,3 @@\n-            \/\/ The bot should post the \/integrate command and push\n+            \/\/ The bot needs two rounds, first mark the PR as ready\n+            TestBotRunner.runPeriodicItems(mergeBot);\n+            \/\/ Then post the \/integrate command and push\n@@ -1008,1 +1011,1 @@\n-            assertTrue(pr.labelNames().contains(\"integrated\"));\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"));\n@@ -1011,1 +1014,1 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -1048,1 +1051,1 @@\n-            assertTrue(pr.labelNames().contains(\"auto\"));\n+            assertTrue(pr.store().labelNames().contains(\"auto\"));\n@@ -1062,1 +1065,1 @@\n-            assertFalse(pr.labelNames().contains(\"auto\"));\n+            assertFalse(pr.store().labelNames().contains(\"auto\"));\n@@ -1099,1 +1102,1 @@\n-            assertTrue(pr.labelNames().contains(\"integrated\"));\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"));\n@@ -1102,1 +1105,1 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n@@ -1221,1 +1224,1 @@\n-    private void retryAfterInterruptVerifyIntegrated(PullRequest pr) throws IOException {\n+    private void retryAfterInterruptVerifyIntegrated(TestPullRequest pr) throws IOException {\n@@ -1226,3 +1229,3 @@\n-        assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-        assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-        assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+        assertFalse(pr.store().labelNames().contains(\"ready\"), \"ready label not removed\");\n+        assertFalse(pr.store().labelNames().contains(\"rfr\"), \"rfr label not removed\");\n+        assertTrue(pr.store().labelNames().contains(\"integrated\"), \"integrated label not added\");\n@@ -1282,1 +1285,1 @@\n-            ((TestPullRequest) pr).removeComment(commitComment);\n+            pr.removeComment(commitComment);\n@@ -1301,3 +1304,3 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            assertFalse(pr.store().labelNames().contains(\"ready\"), \"ready label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"), \"rfr label not removed\");\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"), \"integrated label not added\");\n@@ -1347,1 +1350,1 @@\n-            assertTrue(authorPr.labelNames().contains(\"deferred\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"deferred\"));\n@@ -1366,1 +1369,1 @@\n-            assertFalse(authorPr.labelNames().contains(\"deferred\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"deferred\"));\n@@ -1381,1 +1384,1 @@\n-            assertTrue(authorPr.labelNames().contains(\"deferred\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"deferred\"));\n@@ -1408,1 +1411,1 @@\n-            assertTrue(authorPr.labelNames().contains(\"integrated\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"integrated\"));\n@@ -1411,2 +1414,2 @@\n-            assertFalse(authorPr.labelNames().contains(\"ready\"));\n-            assertFalse(authorPr.labelNames().contains(\"deferred\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"ready\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"deferred\"));\n@@ -1460,4 +1463,4 @@\n-            assertFalse(authorPr.labelNames().contains(\"integrated\"));\n-            assertTrue(authorPr.labelNames().contains(\"sponsor\"));\n-            assertTrue(authorPr.labelNames().contains(\"rfr\"));\n-            assertTrue(authorPr.labelNames().contains(\"ready\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"integrated\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"sponsor\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"rfr\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"ready\"));\n@@ -1488,4 +1491,4 @@\n-            assertTrue(authorPr.labelNames().contains(\"integrated\"));\n-            assertFalse(authorPr.labelNames().contains(\"sponsor\"));\n-            assertFalse(authorPr.labelNames().contains(\"rfr\"));\n-            assertFalse(authorPr.labelNames().contains(\"ready\"));\n+            assertTrue(authorPr.store().labelNames().contains(\"integrated\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"sponsor\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(authorPr.store().labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateTests.java","additions":42,"deletions":39,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -329,2 +329,1 @@\n-            var updatedPr = author.pullRequest(pr.id());\n-            assertEquals(\"1234: An issue\", updatedPr.title());\n+            assertEquals(\"1234: An issue\", pr.store().title());\n@@ -339,2 +338,1 @@\n-            updatedPr = author.pullRequest(pr.id());\n-            assertEquals(\"1234: Yes this is an issue\", updatedPr.title());\n+            assertEquals(\"1234: Yes this is an issue\", pr.store().title());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -85,1 +85,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -95,1 +95,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -104,1 +104,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -114,1 +114,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -123,1 +123,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -133,1 +133,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -142,1 +142,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -152,1 +152,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -161,1 +161,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -171,1 +171,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -180,1 +180,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -190,1 +190,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -199,1 +199,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -241,1 +241,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -248,1 +248,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -257,1 +257,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -267,1 +267,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -277,1 +277,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -287,1 +287,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -322,1 +322,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -329,1 +329,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -343,1 +343,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -357,1 +357,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -367,1 +367,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -377,1 +377,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -387,1 +387,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -397,1 +397,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -440,1 +440,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -446,1 +446,1 @@\n-                assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+                assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -457,1 +457,1 @@\n-                assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+                assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -497,1 +497,1 @@\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n@@ -506,1 +506,1 @@\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.store().labelNames().contains(JEPCommand.JEP_LABEL));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommandTests.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -182,1 +182,1 @@\n-            assertEquals(Set.of(\"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -188,1 +188,1 @@\n-            assertEquals(Set.of(\"group\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"group\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -229,1 +229,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -241,1 +241,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -248,1 +248,1 @@\n-            assertEquals(Set.of(\"1\", \"2\", \"group\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"2\", \"group\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -510,1 +510,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -518,1 +518,1 @@\n-            assertEquals(Set.of(\"1\", \"2\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -526,1 +526,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -534,1 +534,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.store().labelNames()));\n@@ -544,1 +544,1 @@\n-            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -554,1 +554,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.store().labelNames()));\n@@ -562,1 +562,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.store().labelNames()));\n@@ -570,1 +570,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.store().labelNames()));\n@@ -583,1 +583,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.labelNames()));\n+            assertEquals(Set.of(\"1\", \"rfr\", \"group\"), new HashSet<>(pr.store().labelNames()));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-            assertTrue(pr.isClosed());\n+            assertSame(pr.store().state(), Issue.State.CLOSED);\n@@ -76,1 +76,1 @@\n-            assertTrue(pr.isOpen());\n+            assertSame(pr.store().state(), Issue.State.OPEN);\n@@ -115,1 +115,1 @@\n-            assertTrue(pr.isClosed());\n+            assertSame(pr.store().state(), Issue.State.CLOSED);\n@@ -121,1 +121,1 @@\n-            assertTrue(prAsOther.isClosed());\n+            assertSame(pr.store().state(), Issue.State.CLOSED);\n@@ -156,1 +156,1 @@\n-            assertTrue(pr.isOpen());\n+            assertSame(pr.store().state(), Issue.State.OPEN);\n@@ -159,1 +159,1 @@\n-            assertTrue(pr.isOpen());\n+            assertSame(pr.store().state(), Issue.State.OPEN);\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/OpenCommandTests.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -88,3 +88,2 @@\n-            followUpPr = author.pullRequest(followUpPr.id());\n-            assertTrue(followUpPr.body().contains(\"Integration blocker\"));\n-            assertTrue(followUpPr.body().contains(\"Dependency #\" + pr.id() + \" must be integrated\"));\n+            assertTrue(followUpPr.store().body().contains(\"Integration blocker\"));\n+            assertTrue(followUpPr.store().body().contains(\"Dependency #\" + pr.id() + \" must be integrated\"));\n@@ -117,3 +116,2 @@\n-            followUpPr = author.pullRequest(followUpPr.id());\n-            assertFalse(followUpPr.body().contains(\"Integration blocker\"));\n-            assertTrue(followUpPr.labelNames().contains(\"ready\"));\n+            assertFalse(followUpPr.store().body().contains(\"Integration blocker\"));\n+            assertTrue(followUpPr.store().labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PreIntegrateTests.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,3 +118,3 @@\n-            assertTrue(pr.labelNames().contains(\"integrated\"));\n-            assertFalse(pr.labelNames().contains(\"ready\"));\n-            assertFalse(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"));\n@@ -280,1 +280,1 @@\n-            assertTrue(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"sponsor\"));\n@@ -286,10 +286,0 @@\n-            \/\/ Make sure that the push registered\n-            var lastHeadHash = pr.headHash();\n-            var refreshCount = 0;\n-            do {\n-                pr = author.pullRequest(pr.id());\n-                if (refreshCount++ > 100) {\n-                    fail(\"The PR did not update after the new push\");\n-                }\n-            } while (pr.headHash().equals(lastHeadHash));\n-\n@@ -298,1 +288,1 @@\n-            assertFalse(pr.labelNames().contains(\"sponsor\"));\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"));\n@@ -314,1 +304,1 @@\n-            assertTrue(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"sponsor\"));\n@@ -319,1 +309,1 @@\n-            assertFalse(pr.labelNames().contains(\"sponsor\"));\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"));\n@@ -520,1 +510,1 @@\n-            assertTrue(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"sponsor\"));\n@@ -527,1 +517,1 @@\n-            assertFalse(pr.labelNames().contains(\"sponsor\"));\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"));\n@@ -540,1 +530,1 @@\n-            assertTrue(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"sponsor\"));\n@@ -545,1 +535,1 @@\n-            assertFalse(pr.labelNames().contains(\"sponsor\"));\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"));\n@@ -750,1 +740,2 @@\n-            \/\/ Let the bot see it\n+            \/\/ Let the bot see it, needs two runs to first mark ready, then add \/integrate\n+            TestBotRunner.runPeriodicItems(mergeBot);\n@@ -759,1 +750,1 @@\n-            assertTrue(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.store().labelNames().contains(\"sponsor\"));\n@@ -912,1 +903,1 @@\n-            ((TestPullRequest) pr).removeComment(commitComment);\n+            pr.removeComment(commitComment);\n@@ -923,4 +914,4 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertFalse(pr.labelNames().contains(\"sponsor\"), \"sponsor label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            assertFalse(pr.store().labelNames().contains(\"ready\"), \"ready label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"), \"rfr label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"), \"sponsor label not removed\");\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"), \"integrated label not added\");\n@@ -937,1 +928,1 @@\n-            ((TestPullRequest) pr).removeComment(commitComment2);\n+            pr.removeComment(commitComment2);\n@@ -947,4 +938,4 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertFalse(pr.labelNames().contains(\"sponsor\"), \"sponsor label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            assertFalse(pr.store().labelNames().contains(\"ready\"), \"ready label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"), \"rfr label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"), \"sponsor label not removed\");\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"), \"integrated label not added\");\n@@ -956,1 +947,1 @@\n-            ((TestPullRequest) pr).removeComment(commitComment3);\n+            pr.removeComment(commitComment3);\n@@ -966,4 +957,4 @@\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertFalse(pr.labelNames().contains(\"sponsor\"), \"sponsor label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            assertFalse(pr.store().labelNames().contains(\"ready\"), \"ready label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"rfr\"), \"rfr label not removed\");\n+            assertFalse(pr.store().labelNames().contains(\"sponsor\"), \"sponsor label not removed\");\n+            assertTrue(pr.store().labelNames().contains(\"integrated\"), \"integrated label not added\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorTests.java","additions":29,"deletions":38,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -81,1 +81,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n@@ -89,1 +89,1 @@\n-            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n@@ -97,4 +97,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -104,4 +104,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -141,4 +141,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -151,4 +151,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -171,1 +171,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -179,1 +179,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n@@ -187,1 +187,1 @@\n-            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n@@ -195,4 +195,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -203,4 +203,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labelNames());\n-            assertEquals(List.of(), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.store().labelNames());\n+            assertEquals(List.of(), issue4.store().labelNames());\n@@ -215,1 +215,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue5.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue5.store().labelNames());\n@@ -220,5 +220,5 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labelNames());\n-            assertEquals(List.of(), issue4.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue5.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.store().labelNames());\n+            assertEquals(List.of(), issue4.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue5.store().labelNames());\n@@ -231,5 +231,5 @@\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue1.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labelNames());\n-            assertEquals(List.of(), issue4.labelNames());\n-            assertEquals(List.of(), issue5.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue1.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.store().labelNames());\n+            assertEquals(List.of(), issue4.store().labelNames());\n+            assertEquals(List.of(), issue5.store().labelNames());\n@@ -252,1 +252,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -260,1 +260,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -268,1 +268,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.store().labelNames());\n@@ -277,4 +277,4 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n-            assertEquals(List.of(), issue4.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.store().labelNames());\n+            assertEquals(List.of(), issue4.store().labelNames());\n@@ -285,4 +285,4 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(), issue4.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(), issue4.store().labelNames());\n@@ -305,1 +305,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -313,1 +313,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -321,1 +321,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.store().labelNames());\n@@ -330,4 +330,4 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -338,4 +338,4 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -358,1 +358,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -367,1 +367,1 @@\n-            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n@@ -375,1 +375,1 @@\n-            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n@@ -383,4 +383,4 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(), issue3.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(), issue3.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.store().labelNames());\n@@ -417,3 +417,3 @@\n-            assertEquals(List.of(), issue1.labelNames());\n-            assertEquals(List.of(), issue2.labelNames());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n+            assertEquals(List.of(), issue1.store().labelNames());\n+            assertEquals(List.of(), issue2.store().labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.store().labelNames());\n","filename":"bots\/synclabel\/src\/test\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotTests.java","additions":73,"deletions":73,"binary":false,"changes":146,"status":"modified"},{"patch":"@@ -130,1 +130,2 @@\n-            assertEquals(link, links.get(0));\n+            assertEquals(link.relationship(), links.get(0).relationship());\n+            assertEquals(link.issue().orElseThrow().id(), links.get(0).issue().orElseThrow().id());\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/IssueTrackerTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,3 +54,3 @@\n-            assertEquals(issue1, Backports.findMainIssue(issue1).orElseThrow());\n-            assertEquals(issue1, Backports.findMainIssue(issue2).orElseThrow());\n-            assertEquals(issue1, Backports.findMainIssue(issue3).orElseThrow());\n+            assertEquals(issue1.id(), Backports.findMainIssue(issue1).orElseThrow().id());\n+            assertEquals(issue1.id(), Backports.findMainIssue(issue2).orElseThrow().id());\n+            assertEquals(issue1.id(), Backports.findMainIssue(issue3).orElseThrow().id());\n@@ -58,1 +58,2 @@\n-            assertEquals(List.of(issue2, issue3), Backports.findBackports(issue1, false));\n+            assertEquals(List.of(issue2.id(), issue3.id()),\n+                    Backports.findBackports(issue1, false).stream().map(Issue::id).toList());\n@@ -78,1 +79,1 @@\n-            assertEquals(issue1, Backports.findMainIssue(issue1).orElseThrow());\n+            assertEquals(issue1.id(), Backports.findMainIssue(issue1).orElseThrow().id());\n@@ -107,2 +108,2 @@\n-            assertEquals(issue1, Backports.findMainIssue(issue1).orElseThrow());\n-            assertEquals(issue2, Backports.findMainIssue(issue2).orElseThrow());\n+            assertEquals(issue1.id(), Backports.findMainIssue(issue1).orElseThrow().id());\n+            assertEquals(issue2.id(), Backports.findMainIssue(issue2).orElseThrow().id());\n@@ -165,3 +166,3 @@\n-            assertEquals(issue, Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow());\n-            assertEquals(backport, Backports.findIssue(issue, JdkVersion.parse(\"12.2\").orElseThrow()).orElseThrow());\n-            assertEquals(backportFoo, Backports.findIssue(issue, JdkVersion.parse(\"12.2-foo\").orElseThrow()).orElseThrow());\n+            assertEquals(issue.id(), Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow().id());\n+            assertEquals(backport.id(), Backports.findIssue(issue, JdkVersion.parse(\"12.2\").orElseThrow()).orElseThrow().id());\n+            assertEquals(backportFoo.id(), Backports.findIssue(issue, JdkVersion.parse(\"12.2-foo\").orElseThrow()).orElseThrow().id());\n@@ -169,1 +170,1 @@\n-            assertEquals(issue, Backports.findIssue(issue, JdkVersion.parse(\"11.1-foo\").orElseThrow()).orElseThrow());\n+            assertEquals(issue.id(), Backports.findIssue(issue, JdkVersion.parse(\"11.1-foo\").orElseThrow()).orElseThrow().id());\n@@ -172,1 +173,1 @@\n-            assertEquals(backport, Backports.findIssue(issue, JdkVersion.parse(\"openjfx17.0.1\").orElseThrow()).orElseThrow());\n+            assertEquals(backport.id(), Backports.findIssue(issue, JdkVersion.parse(\"openjfx17.0.1\").orElseThrow()).orElseThrow().id());\n@@ -175,1 +176,1 @@\n-            assertEquals(backportFoo, Backports.findIssue(issue, JdkVersion.parse(\"8u333-foo\").orElseThrow()).orElseThrow());\n+            assertEquals(backportFoo.id(), Backports.findIssue(issue, JdkVersion.parse(\"8u333-foo\").orElseThrow()).orElseThrow().id());\n@@ -178,1 +179,1 @@\n-            assertEquals(issue, Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow());\n+            assertEquals(issue.id(), Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow().id());\n@@ -182,2 +183,2 @@\n-            assertEquals(issue, Backports.findIssue(issue, JdkVersion.parse(\"12.2\").orElseThrow()).orElseThrow());\n-            assertEquals(backport, Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow());\n+            assertEquals(issue.id(), Backports.findIssue(issue, JdkVersion.parse(\"12.2\").orElseThrow()).orElseThrow().id());\n+            assertEquals(backport.id(), Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow().id());\n@@ -187,2 +188,2 @@\n-            assertEquals(issue, Backports.findIssue(issue, JdkVersion.parse(\"12.2\").orElseThrow()).orElseThrow());\n-            assertEquals(backport, Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow());\n+            assertEquals(issue.id(), Backports.findIssue(issue, JdkVersion.parse(\"12.2\").orElseThrow()).orElseThrow().id());\n+            assertEquals(backport.id(), Backports.findIssue(issue, JdkVersion.parse(\"11.1\").orElseThrow()).orElseThrow().id());\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -372,1 +372,1 @@\n-    public PullRequest createPullRequest(HostedRepository sourceRepository, HostedRepository targetRepository,\n+    public TestPullRequest createPullRequest(HostedRepository sourceRepository, HostedRepository targetRepository,\n@@ -374,1 +374,1 @@\n-        var pr = sourceRepository.createPullRequest(targetRepository, targetRef, sourceRef, title, body, draft);\n+        var pr = (TestPullRequest) sourceRepository.createPullRequest(targetRepository, targetRef, sourceRef, title, body, draft);\n@@ -379,1 +379,1 @@\n-    public PullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title, List<String> body, boolean draft) {\n+    public TestPullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title, List<String> body, boolean draft) {\n@@ -383,1 +383,1 @@\n-        public PullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title, boolean draft) {\n+        public TestPullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title, boolean draft) {\n@@ -387,1 +387,1 @@\n-    public PullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title, List<String> body) {\n+    public TestPullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title, List<String> body) {\n@@ -391,1 +391,1 @@\n-    public PullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title) {\n+    public TestPullRequest createPullRequest(HostedRepository targetRepository, String targetRef, String sourceRef, String title) {\n@@ -395,1 +395,1 @@\n-    public PullRequest createPullRequest(HostedRepository sourceRepository, HostedRepository targetRepository, String targetRef, String sourceRef, String title) {\n+    public TestPullRequest createPullRequest(HostedRepository sourceRepository, HostedRepository targetRepository, String targetRef, String sourceRef, String title) {\n@@ -399,2 +399,2 @@\n-    public Issue createIssue(IssueProject issueProject, String title) {\n-        var issue = issueProject.createIssue(title, List.of(), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n+    public TestIssue createIssue(IssueProject issueProject, String title) {\n+        var issue = (TestIssue) issueProject.createIssue(title, List.of(), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/HostCredentials.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.test;\n-\n-import org.openjdk.skara.host.HostUser;\n-import org.openjdk.skara.issuetracker.*;\n-import org.openjdk.skara.json.JSONValue;\n-\n-import java.time.ZonedDateTime;\n-import java.util.*;\n-\n-class IssueData {\n-    Issue.State state = Issue.State.OPEN;\n-    String body = \"\";\n-    String title = \"\";\n-    final List<Comment> comments = new ArrayList<>();\n-    final Map<String, ZonedDateTime> labels = new HashMap<>();\n-    final List<HostUser> assignees = new ArrayList<>();\n-    final List<Link> links = new ArrayList<>();\n-    final Map<String, JSONValue> properties = new HashMap<>();\n-    ZonedDateTime created = ZonedDateTime.now();\n-    ZonedDateTime lastUpdate = created;\n-    HostUser closedBy = null;\n-}\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/IssueData.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.test;\n-\n-import java.time.ZonedDateTime;\n-import org.openjdk.skara.forge.*;\n-import org.openjdk.skara.vcs.Hash;\n-\n-import java.util.*;\n-\n-class PullRequestData extends IssueData {\n-    Hash headHash;\n-    String targetRef;\n-    final List<ReviewComment> reviewComments = new ArrayList<>();\n-    final Set<Check> checks = new HashSet<>();\n-    final List<Review> reviews = new ArrayList<>();\n-    boolean draft;\n-    ZonedDateTime lastForcePushTime;\n-}\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/PullRequestData.java","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -60,2 +60,2 @@\n-        private final Map<String, TestPullRequest> pullRequests = new HashMap<>();\n-        private final Map<String, TestIssue> issues = new HashMap<>();\n+        private final Map<String, TestPullRequestStore> pullRequests = new HashMap<>();\n+        private final Map<String, TestIssueStore> issues = new HashMap<>();\n@@ -185,1 +185,2 @@\n-    TestPullRequest createPullRequest(TestHostedRepository targetRepository, TestHostedRepository sourceRepository, String targetRef, String sourceRef, String title, List<String> body, boolean draft) {\n+    TestPullRequest createPullRequest(TestHostedRepository targetRepository, TestHostedRepository sourceRepository,\n+            String targetRef, String sourceRef, String title, List<String> body, boolean draft) {\n@@ -187,3 +188,4 @@\n-        var pr = TestPullRequest.createNew(targetRepository, sourceRepository, id, targetRef, sourceRef, title, body, draft);\n-        data.pullRequests.put(id, pr);\n-        return pr;\n+        var prStore = new TestPullRequestStore(id, targetRepository.forge().currentUser(), title, body,\n+                sourceRepository, targetRef, sourceRef, draft);\n+        data.pullRequests.put(id, prStore);\n+        return new TestPullRequest(prStore, targetRepository);\n@@ -193,2 +195,2 @@\n-        var original = data.pullRequests.get(id);\n-        return TestPullRequest.createFrom(repository, original);\n+        var store = data.pullRequests.get(id);\n+        return new TestPullRequest(store, repository);\n@@ -206,3 +208,4 @@\n-        var issue = TestIssue.createNew(issueProject, id, title, body, properties);\n-        data.issues.put(id ,issue);\n-        return issue;\n+        HostUser author = issueProject.issueTracker().currentUser();\n+        var issueStore = new TestIssueStore(id, issueProject, author, title, body, properties);\n+        data.issues.put(id, issueStore);\n+        return new TestIssue(issueStore, author);\n@@ -212,2 +215,2 @@\n-        var original = data.issues.get(id);\n-        if (original == null) {\n+        var issueStore = data.issues.get(id);\n+        if (issueStore == null) {\n@@ -216,1 +219,1 @@\n-        return TestIssue.createFrom(issueProject, original);\n+        return new TestIssue(issueStore, issueProject.issueTracker().currentUser());\n@@ -224,2 +227,2 @@\n-                    var issueType = issue.data.properties.get(\"issuetype\");\n-                    var jepNumber = issue.data.properties.get(JEP_NUMBER);\n+                    var issueType = issue.properties().get(\"issuetype\");\n+                    var jepNumber = issue.properties().get(JEP_NUMBER);\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHost.java","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -284,3 +284,1 @@\n-                   .map(pr -> (TestPullRequest)pr)\n-                   .flatMap(testPr -> testPr.data.checks.stream())\n-                   .filter(check -> check.hash().equals(hash))\n+                   .flatMap(testPr -> testPr.checks(hash).values().stream())\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,7 @@\n+\/**\n+ * TestIssue is the object returned from a TestHost when queried for issues.\n+ * It's backed by a TestIssueStore, which tracks the \"server side\" state of the\n+ * issue. A TestIssue object contains a snapshot of the server side state for\n+ * all data directly related to the issue. What data is snapshotted and what\n+ * is fetched on request should be the same as for JiraIssue.\n+ *\/\n@@ -36,3 +43,1 @@\n-    protected final String id;\n-    protected final IssueProject issueProject;\n-    protected final HostUser author;\n+    private final TestIssueStore store;\n@@ -40,1 +45,0 @@\n-    protected final IssueData data;\n@@ -42,4 +46,10 @@\n-    protected TestIssue(TestIssueProject issueProject, String id, HostUser author, HostUser user, IssueData data) {\n-        this.id = id;\n-        this.issueProject = issueProject;\n-        this.author = author;;\n+    protected final HostUser author;\n+    protected final String body;\n+    protected final String title;\n+    protected final State state;\n+    \/\/ Mimic JiraIssue where labels are part of the main JSON object\n+    private final List<Label> labels;\n+    protected ZonedDateTime lastUpdate;\n+\n+    protected TestIssue(TestIssueStore store, HostUser user) {\n+        this.store = store;\n@@ -47,15 +57,6 @@\n-        this.data = data;\n-    }\n-\n-    static TestIssue createNew(TestIssueProject issueProject, String id, String title, List<String> body, Map<String, JSONValue> properties) {\n-        var data = new IssueData();\n-        data.title = title;\n-        data.body = String.join(\"\\n\", body);\n-        data.properties.putAll(properties);\n-        var issue = new TestIssue(issueProject, id, issueProject.issueTracker().currentUser(), issueProject.issueTracker().currentUser(), data);\n-        return issue;\n-    }\n-\n-    static TestIssue createFrom(TestIssueProject issueProject, TestIssue other) {\n-        var issue = new TestIssue(issueProject, other.id, other.author, issueProject.issueTracker().currentUser(), other.data);\n-        return issue;\n+        this.lastUpdate = store.lastUpdate();\n+        this.state = store.state();\n+        this.author = store.author();\n+        this.body = store.body();\n+        this.title = store.title();\n+        this.labels = store.labels().keySet().stream().map(Label::new).collect(Collectors.toList());\n@@ -66,1 +67,1 @@\n-        return issueProject;\n+        return store.issueProject();\n@@ -71,1 +72,1 @@\n-        return id;\n+        return store.id();\n@@ -76,1 +77,1 @@\n-        return author;\n+        return store.author();\n@@ -81,1 +82,1 @@\n-        return data.title.strip();\n+        return store.title().strip();\n@@ -87,2 +88,2 @@\n-        data.title = title.strip();\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.setTitle(title.strip());\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -93,1 +94,1 @@\n-        return data.body;\n+        return store.body();\n@@ -98,2 +99,2 @@\n-        data.body = body;\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.setBody(body);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -104,1 +105,1 @@\n-        return new ArrayList<>(data.comments);\n+        return new ArrayList<>(store.comments());\n@@ -109,2 +110,3 @@\n-        var size = data.comments.size();\n-        var lastId = size > 0 ? data.comments.get(size - 1).id() : null;\n+        List<Comment> comments = store.comments();\n+        var size = comments.size();\n+        var lastId = size > 0 ? comments.get(size - 1).id() : null;\n@@ -116,2 +118,2 @@\n-        data.comments.add(comment);\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.comments().add(comment);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -123,1 +125,1 @@\n-        data.comments.remove(comment);\n+        store.comments().remove(comment);\n@@ -128,2 +130,2 @@\n-        var originalComment = data.comments.stream()\n-                .filter(comment -> comment.id().equals(id)).findAny().get();\n+        var originalComment = store.comments().stream()\n+                .filter(comment -> comment.id().equals(id)).findAny().orElseThrow();\n@@ -136,2 +138,2 @@\n-        data.comments.set(index, comment);\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.comments().set(index, comment);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -143,1 +145,1 @@\n-        return data.created;\n+        return store.created();\n@@ -148,1 +150,1 @@\n-        return data.lastUpdate;\n+        return lastUpdate;\n@@ -153,1 +155,1 @@\n-        return data.state;\n+        return state;\n@@ -158,3 +160,3 @@\n-        data.state = state;\n-        data.lastUpdate = ZonedDateTime.now();\n-        data.closedBy = user;\n+        store.setState(state);\n+        store.setLastUpdate(ZonedDateTime.now());\n+        store.setClosedBy(user);\n@@ -162,1 +164,1 @@\n-            data.properties.put(\"resolution\", JSON.object().put(\"name\", JSON.of(\"Fixed\")));\n+            store.properties().put(\"resolution\", JSON.object().put(\"name\", JSON.of(\"Fixed\")));\n@@ -173,1 +175,1 @@\n-            var resolution = data.properties.get(\"resolution\");\n+            var resolution = store.properties().get(\"resolution\");\n@@ -184,2 +186,2 @@\n-        data.labels.put(label, now);\n-        data.lastUpdate = now;\n+        store.labels().put(label, now);\n+        store.setLastUpdate(now);\n@@ -190,2 +192,2 @@\n-        data.labels.remove(label);\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.labels().remove(label);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -196,1 +198,1 @@\n-        data.labels.clear();\n+        store.labels().clear();\n@@ -199,1 +201,1 @@\n-            data.labels.put(label, now);\n+            store.labels().put(label, now);\n@@ -201,1 +203,1 @@\n-        data.lastUpdate = now;\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -206,1 +208,1 @@\n-        return data.labels.keySet().stream().map(s -> new Label(s)).collect(Collectors.toList());\n+        return labels;\n@@ -211,1 +213,1 @@\n-        return URIBuilder.base(issueProject.webUrl()).appendPath(id).build();\n+        return URIBuilder.base(store.issueProject().webUrl()).appendPath(id()).build();\n@@ -216,1 +218,1 @@\n-        return new ArrayList<>(data.assignees);\n+        return new ArrayList<>(store.assignees());\n@@ -221,3 +223,3 @@\n-        data.assignees.clear();\n-        data.assignees.addAll(assignees);\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.assignees().clear();\n+        store.assignees().addAll(assignees);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -226,0 +228,3 @@\n+    \/**\n+     * When links are returned, they need to contain fresh snapshots of any TestIssue.\n+     *\/\n@@ -228,1 +233,16 @@\n-        return data.links;\n+        return store.links().stream()\n+                .map(this::updateLinkIssue)\n+                .toList();\n+    }\n+\n+    private Link updateLinkIssue(Link link) {\n+        if (link.issue().isPresent()) {\n+            var issue = (TestIssue) link.issue().get();\n+            return Link.create(issue.copy(), link.relationship().orElseThrow()).build();\n+        } else {\n+            return link;\n+        }\n+    }\n+\n+    protected TestIssue copy() {\n+        return new TestIssue(store, user);\n@@ -235,1 +255,1 @@\n-            data.links.add(link);\n+            store.links().add(link);\n@@ -237,5 +257,5 @@\n-            var existing = data.links.stream()\n-                                     .filter(l -> l.issue().equals(link.issue()))\n-                                     .findAny();\n-            existing.ifPresent(data.links::remove);\n-            data.links.add(link);\n+            var existing = store.links().stream()\n+                    .filter(l -> l.issue().isPresent() && l.issue().get().id().equals(link.issue().orElseThrow().id()))\n+                    .findAny();\n+            existing.ifPresent(store.links()::remove);\n+            store.links().add(link);\n@@ -247,1 +267,1 @@\n-                var reverseRelationship = map.getOrDefault(link.relationship().get(), link.relationship().get());\n+                var reverseRelationship = map.getOrDefault(link.relationship().orElseThrow(), link.relationship().orElseThrow());\n@@ -254,1 +274,1 @@\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -260,1 +280,1 @@\n-            data.links.removeIf(l -> l.uri().equals(link.uri()));\n+            store.links().removeIf(l -> l.uri().equals(link.uri()));\n@@ -262,2 +282,2 @@\n-            var existing = data.links.stream()\n-                                     .filter(l -> l.issue().equals(link.issue()))\n+            var existing = store.links().stream()\n+                                     .filter(l -> l.issue().orElseThrow().id().equals(link.issue().orElseThrow().id()))\n@@ -266,1 +286,1 @@\n-                data.links.remove(existing.get());\n+                store.links().remove(existing.get());\n@@ -273,1 +293,1 @@\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -278,1 +298,1 @@\n-        return data.properties;\n+        return store.properties();\n@@ -283,2 +303,2 @@\n-        data.properties.put(name, value);\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.properties().put(name, value);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -289,2 +309,2 @@\n-        data.properties.remove(name);\n-        data.lastUpdate = ZonedDateTime.now();\n+        store.properties().remove(name);\n+        store.setLastUpdate(ZonedDateTime.now());\n@@ -295,1 +315,38 @@\n-        return isClosed() ? Optional.of(data.closedBy) : Optional.empty();\n+        return isClosed() ? Optional.of(store.closedBy()) : Optional.empty();\n+    }\n+\n+    public void setLastUpdate(ZonedDateTime time) {\n+        lastUpdate = time;\n+    }\n+\n+    \/**\n+     * Equals for a TestIssue means that all the snapshotted data is the same.\n+     *\/\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        var testIssue = (TestIssue) o;\n+        return Objects.equals(author, testIssue.author) &&\n+                Objects.equals(body, testIssue.body) &&\n+                Objects.equals(title, testIssue.title) &&\n+                Objects.equals(lastUpdate, testIssue.lastUpdate) &&\n+                Objects.equals(labels, testIssue.labels) &&\n+                state == testIssue.state;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(author, body, title, lastUpdate, labels, state);\n+    }\n+\n+    \/**\n+     * Gives test code direct access to the backing store object to be able to\n+     * inspect and manipulate state directly.\n+     *\/\n+    public TestIssueStore store() {\n+        return store;\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssue.java","additions":140,"deletions":83,"binary":false,"changes":223,"status":"modified"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.test;\n+\n+import java.util.stream.Collectors;\n+import org.openjdk.skara.host.HostUser;\n+import org.openjdk.skara.issuetracker.*;\n+import org.openjdk.skara.json.JSONValue;\n+\n+import java.time.ZonedDateTime;\n+import java.util.*;\n+\n+\/**\n+ * Backing store for TestIssue. Represents the \"server side\" state of an Issue.\n+ *\n+ *\/\n+public class TestIssueStore {\n+    private final String id;\n+    private final IssueProject issueProject;\n+    private final HostUser author;\n+\n+    private Issue.State state = Issue.State.OPEN;\n+    private String body = \"\";\n+    private String title = \"\";\n+    private final List<Comment> comments = new ArrayList<>();\n+    private final Map<String, ZonedDateTime> labels = new HashMap<>();\n+    private final List<HostUser> assignees = new ArrayList<>();\n+    private final List<Link> links = new ArrayList<>();\n+    private final Map<String, JSONValue> properties = new HashMap<>();\n+    private final ZonedDateTime created = ZonedDateTime.now();\n+    private ZonedDateTime lastUpdate = created;\n+    private HostUser closedBy = null;\n+\n+    public TestIssueStore(String id, IssueProject issueProject, HostUser author, String title, List<String> body,\n+            Map<String, JSONValue> properties) {\n+        this.id = id;\n+        this.issueProject = issueProject;\n+        this.author = author;\n+        this.title = title;\n+        this.body = String.join(\"\\n\", body);\n+        if (properties != null) {\n+            this.properties.putAll(properties);\n+        }\n+    }\n+\n+    public String id() {\n+        return id;\n+    }\n+\n+    public IssueProject issueProject() {\n+        return issueProject;\n+    }\n+\n+    public HostUser author() {\n+        return author;\n+    }\n+\n+    public Issue.State state() {\n+        return state;\n+    }\n+\n+    public String body() {\n+        return body;\n+    }\n+\n+    public String title() {\n+        return title;\n+    }\n+\n+    public List<Comment> comments() {\n+        return comments;\n+    }\n+\n+    public Map<String, ZonedDateTime> labels() {\n+        return labels;\n+    }\n+\n+    public List<String> labelNames() {\n+        return labels().keySet().stream().toList();\n+    }\n+\n+    public List<HostUser> assignees() {\n+        return assignees;\n+    }\n+\n+    public List<Link> links() {\n+        return links;\n+    }\n+\n+    public Map<String, JSONValue> properties() {\n+        return properties;\n+    }\n+\n+    public ZonedDateTime created() {\n+        return created;\n+    }\n+\n+    public ZonedDateTime lastUpdate() {\n+        return lastUpdate;\n+    }\n+\n+    public HostUser closedBy() {\n+        return closedBy;\n+    }\n+\n+    public void setState(Issue.State state) {\n+        this.state = state;\n+    }\n+\n+    public void setBody(String body) {\n+        this.body = body;\n+    }\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public void setLastUpdate(ZonedDateTime lastUpdate) {\n+        this.lastUpdate = lastUpdate;\n+    }\n+\n+    public void setClosedBy(HostUser closedBy) {\n+        this.closedBy = closedBy;\n+    }\n+}\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssueStore.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"},{"patch":"@@ -28,0 +28,1 @@\n+import org.openjdk.skara.issuetracker.Label;\n@@ -40,0 +41,8 @@\n+\/**\n+ * TestPullRequest is the object returned from a TestHost when queried for pull\n+ * requests. It's backed by a TestPullRequestStore, which tracks the \"server\n+ * side\" state of the pull request. A TestPullRequest instance contains a\n+ * snapshot of the server side state for all data directly related to the pull\n+ * request. What data is snapshotted and which is fetched on request should be\n+ * the same as for GitHubPullRequest and GitLabMergeRequest.\n+ *\/\n@@ -41,4 +50,0 @@\n-    private final TestHostedRepository targetRepository;\n-    private final TestHostedRepository sourceRepository;\n-    private final String sourceRef;\n-    final PullRequestData data;\n@@ -46,7 +51,6 @@\n-    private TestPullRequest(TestHostedRepository targetRepository, TestHostedRepository sourceRepository, String id, HostUser author, HostUser user, String targetRef, String sourceRef, PullRequestData data) {\n-        super(targetRepository, id, author, user, data);\n-        this.targetRepository = targetRepository;\n-        this.sourceRepository = sourceRepository;\n-        this.sourceRef = sourceRef;\n-        data.targetRef = targetRef;\n-        this.data = data;\n+    protected final TestHostedRepository targetRepository;\n+    protected final Hash headHash;\n+    protected final String sourceRef;\n+    protected final String targetRef;\n+    protected final boolean draft;\n+    private List<Label> labels;\n@@ -54,9 +58,9 @@\n-        try {\n-            var headHash = sourceRepository.localRepository().resolve(sourceRef);\n-            if (headHash.isPresent() && !headHash.get().equals(data.headHash)) {\n-                data.headHash = headHash.get();\n-                data.lastUpdate = ZonedDateTime.now();\n-            }\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n-        }\n+    public TestPullRequest(TestPullRequestStore store, TestHostedRepository targetRepository) {\n+        super(store, targetRepository.forge().currentUser());\n+        this.targetRepository = targetRepository;\n+        this.headHash = store().headHash();\n+        this.sourceRef = store().sourceRef();\n+        this.targetRef = store().targetRef();\n+        this.draft = store().draft();\n+        \/\/ store().headHash() may have updated lastUpdate\n+        setLastUpdate(store().lastUpdate());\n@@ -65,7 +69,3 @@\n-    static TestPullRequest createNew(TestHostedRepository targetRepository, TestHostedRepository sourceRepository, String id, String targetRef, String sourceRef, String title, List<String> body, boolean draft) {\n-        var data = new PullRequestData();\n-        data.title = title;\n-        data.body = String.join(\"\\n\", body);\n-        data.draft = draft;\n-        var pr = new TestPullRequest(targetRepository, sourceRepository, id, targetRepository.forge().currentUser(), targetRepository.forge().currentUser(), targetRef, sourceRef, data);\n-        return pr;\n+    @Override\n+    protected TestPullRequest copy() {\n+        return new TestPullRequest(store(), targetRepository);\n@@ -74,3 +74,6 @@\n-    static TestPullRequest createFrom(TestHostedRepository repository, TestPullRequest other) {\n-        var pr = new TestPullRequest(repository, other.sourceRepository, other.id, other.author, repository.forge().currentUser(), other.data.targetRef, other.sourceRef, other.data);\n-        return pr;\n+    \/**\n+     * Gives test code direct access to the backing store object to be able to\n+     * inspect and manipulate state directly.\n+     *\/\n+    public TestPullRequestStore store() {\n+        return (TestPullRequestStore) super.store();\n@@ -84,5 +87,0 @@\n-    @Override\n-    public IssueProject project() {\n-        return null;\n-    }\n-\n@@ -91,1 +89,1 @@\n-        return new ArrayList<>(data.reviews);\n+        return new ArrayList<>(store().reviews());\n@@ -97,3 +95,3 @@\n-            var review = new Review(ZonedDateTime.now(), targetRepository.forge().currentUser(),\n-                                    verdict, targetRepository.localRepository().resolve(sourceRef).orElseThrow(),\n-                                    data.reviews.size(),\n+            var review = new Review(ZonedDateTime.now(), user,\n+                                    verdict, targetRepository.localRepository().resolve(store().sourceRef()).orElseThrow(),\n+                                    store().reviews().size(),\n@@ -102,2 +100,2 @@\n-            data.reviews.add(review);\n-            data.lastUpdate = ZonedDateTime.now();\n+            store().reviews().add(review);\n+            store().setLastUpdate(ZonedDateTime.now());\n@@ -117,3 +115,5 @@\n-        var comment = new ReviewComment(null, String.valueOf(data.reviewComments.size()), hash, path, line, String.valueOf(data.reviewComments.size()), body, user, ZonedDateTime.now(), ZonedDateTime.now());\n-        data.reviewComments.add(comment);\n-        data.lastUpdate = ZonedDateTime.now();\n+        var id = String.valueOf(store().reviewComments().size());\n+        var comment = new ReviewComment(null, id,\n+                hash, path, line, id, body, user, ZonedDateTime.now(), ZonedDateTime.now());\n+        store().reviewComments().add(comment);\n+        store().setLastUpdate(ZonedDateTime.now());\n@@ -128,3 +128,5 @@\n-        var comment = new ReviewComment(parent, parent.threadId(), parent.hash().orElseThrow(), parent.path(), parent.line(), String.valueOf(data.reviewComments.size()), body, user, ZonedDateTime.now(), ZonedDateTime.now());\n-        data.reviewComments.add(comment);\n-        data.lastUpdate = ZonedDateTime.now();\n+        var comment = new ReviewComment(parent, parent.threadId(), parent.hash().orElseThrow(), parent.path(),\n+                parent.line(), String.valueOf(store().reviewComments().size()), body, user,\n+                ZonedDateTime.now(), ZonedDateTime.now());\n+        store().reviewComments().add(comment);\n+        store().setLastUpdate(ZonedDateTime.now());\n@@ -136,1 +138,1 @@\n-        return new ArrayList<>(data.reviewComments);\n+        return new ArrayList<>(store().reviewComments());\n@@ -141,1 +143,1 @@\n-        return data.headHash;\n+        return headHash;\n@@ -156,1 +158,1 @@\n-        return Optional.of(sourceRepository);\n+        return Optional.of(store().sourceRepository());\n@@ -161,1 +163,1 @@\n-        return data.targetRef;\n+        return targetRef;\n@@ -166,1 +168,1 @@\n-        return data.checks.stream()\n+        return store().checks().stream()\n@@ -173,1 +175,2 @@\n-        var existing = data.checks.stream()\n+        var checks = store().checks();\n+        var existing = checks.stream()\n@@ -176,3 +179,3 @@\n-        existing.ifPresent(data.checks::remove);\n-        data.checks.add(check);\n-        data.lastUpdate = ZonedDateTime.now();\n+        existing.ifPresent(checks::remove);\n+        checks.add(check);\n+        store().setLastUpdate(ZonedDateTime.now());\n@@ -183,1 +186,2 @@\n-        var existing = data.checks.stream()\n+        var checks = store().checks();\n+        var existing = checks.stream()\n@@ -188,3 +192,3 @@\n-        data.checks.remove(existing);\n-        data.checks.add(updated);\n-        data.lastUpdate = ZonedDateTime.now();\n+        checks.remove(existing);\n+        checks.add(updated);\n+        store().setLastUpdate(ZonedDateTime.now());\n@@ -205,1 +209,1 @@\n-        return data.draft;\n+        return draft;\n@@ -219,1 +223,1 @@\n-        data.draft = false;\n+        store().setDraft(false);\n@@ -229,1 +233,1 @@\n-        return Optional.ofNullable(data.labels.get(label));\n+        return Optional.ofNullable(store().labels().get(label));\n@@ -234,2 +238,2 @@\n-        data.targetRef = targetRef;\n-        data.lastUpdate = ZonedDateTime.now();\n+        store().setTargetRef(targetRef);\n+        store().setLastUpdate(ZonedDateTime.now());\n@@ -247,1 +251,1 @@\n-            var sourceLocalRepository = sourceRepository.localRepository();\n+            var sourceLocalRepository = store().sourceRepository().localRepository();\n@@ -269,1 +273,1 @@\n-        return Optional.ofNullable(data.lastForcePushTime);\n+        return Optional.ofNullable(store().lastForcePushTime());\n@@ -273,1 +277,1 @@\n-        data.lastForcePushTime = lastForcePushTime;\n+        store().setLastForcePushTime(lastForcePushTime);\n@@ -280,0 +284,39 @@\n+\n+    \/**\n+     * Mimic GitHub\/GitLab where the labels are fetched lazily and cached.\n+     * In GitLabMergeRequest, the labels are actually part of the main json, but\n+     * are still re-fetched once on the first call to labels().\n+     *\/\n+    @Override\n+    public List<Label> labels() {\n+        if (labels == null) {\n+            labels = store().labels().keySet().stream().map(Label::new).collect(Collectors.toList());\n+        }\n+        return labels;\n+    }\n+\n+    \/**\n+     * Equals for a TestPullRequest means that all the snapshotted data is the same.\n+     *\/\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+        if (!super.equals(o)) {\n+            return false;\n+        }\n+        TestPullRequest that = (TestPullRequest) o;\n+        return draft == that.draft &&\n+                Objects.equals(headHash, that.headHash) &&\n+                Objects.equals(sourceRef, that.sourceRef) &&\n+                Objects.equals(targetRef, that.targetRef);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(super.hashCode(), headHash, sourceRef, targetRef, draft);\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":111,"deletions":68,"binary":false,"changes":179,"status":"modified"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.test;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.ZonedDateTime;\n+import org.openjdk.skara.forge.*;\n+import org.openjdk.skara.host.HostUser;\n+import org.openjdk.skara.issuetracker.IssueProject;\n+import org.openjdk.skara.vcs.Hash;\n+\n+import java.util.*;\n+\n+\/**\n+ * Backing store for TestPullRequest. Represents the \"server side\" state of a\n+ * pull request.\n+ *\/\n+public class TestPullRequestStore extends TestIssueStore {\n+    private TestHostedRepository sourceRepository;\n+    private String targetRef;\n+    private String sourceRef;\n+    private final List<ReviewComment> reviewComments = new ArrayList<>();\n+    private final Set<Check> checks = new HashSet<>();\n+    private final List<Review> reviews = new ArrayList<>();\n+    private boolean draft;\n+    private ZonedDateTime lastForcePushTime;\n+    private Hash headHash;\n+\n+    public TestPullRequestStore(String id, HostUser author, String title, List<String> body,\n+            TestHostedRepository sourceRepository, String targetRef, String sourceRef, boolean draft) {\n+        super(id, null, author, title, body, null);\n+        this.sourceRepository = sourceRepository;\n+        this.targetRef = targetRef;\n+        this.sourceRef = sourceRef;\n+        this.draft = draft;\n+    }\n+\n+    public TestHostedRepository sourceRepository() {\n+        return sourceRepository;\n+    }\n+\n+    \/**\n+     * Gets the current headHash from the underlying repository. If it has\n+     * changed since last time, updates the lastUpdated timestamp.\n+     *\/\n+    public Hash headHash() {\n+        try {\n+            var headHash = sourceRepository.localRepository().resolve(sourceRef);\n+            if (headHash.isPresent() && !headHash.get().equals(this.headHash)) {\n+                this.headHash = headHash.get();\n+                setLastUpdate(ZonedDateTime.now());\n+            }\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        return this.headHash;\n+    }\n+\n+    public String targetRef() {\n+        return targetRef;\n+    }\n+\n+    public String sourceRef() {\n+        return sourceRef;\n+    }\n+\n+    public List<ReviewComment> reviewComments() {\n+        return reviewComments;\n+    }\n+\n+    public Set<Check> checks() {\n+        return checks;\n+    }\n+\n+    public List<Review> reviews() {\n+        return reviews;\n+    }\n+\n+    public boolean draft() {\n+        return draft;\n+    }\n+\n+    public ZonedDateTime lastForcePushTime() {\n+        return lastForcePushTime;\n+    }\n+\n+    public void setSourceRepository(TestHostedRepository sourceRepository) {\n+        this.sourceRepository = sourceRepository;\n+    }\n+\n+    public void setTargetRef(String targetRef) {\n+        this.targetRef = targetRef;\n+    }\n+\n+    public void setSourceRef(String sourceRef) {\n+        this.sourceRef = sourceRef;\n+    }\n+\n+    public void setDraft(boolean draft) {\n+        this.draft = draft;\n+    }\n+\n+    public void setLastForcePushTime(ZonedDateTime lastForcePushTime) {\n+        this.lastForcePushTime = lastForcePushTime;\n+    }\n+}\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequestStore.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"}]}