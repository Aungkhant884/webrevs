{"files":[{"patch":"@@ -69,0 +69,2 @@\n+    private final boolean processPR;\n+    private final boolean processCommit;\n@@ -81,1 +83,1 @@\n-                   boolean reviewCleanBackport, String mlbridgeBotName, boolean reviewMerge) {\n+                   boolean reviewCleanBackport, String mlbridgeBotName, boolean reviewMerge, boolean processPR, boolean processCommit) {\n@@ -109,0 +111,2 @@\n+        this.processPR = processPR;\n+        this.processCommit = processCommit;\n@@ -126,1 +130,1 @@\n-    private List<WorkItem> getWorkItems(List<PullRequest> pullRequests) {\n+    private List<WorkItem> getPullRequestWorkItems(List<PullRequest> pullRequests) {\n@@ -128,1 +132,0 @@\n-        ret.add(new CommitCommentsWorkItem(this, remoteRepo, excludeCommitCommentsFrom));\n@@ -144,3 +147,9 @@\n-        List<PullRequest> prs = poller.updatedPullRequests();\n-        List<WorkItem> workItems = getWorkItems(prs);\n-        poller.lastBatchHandled();\n+        var workItems = new ArrayList<WorkItem>();\n+        if (processCommit) {\n+            workItems.add(new CommitCommentsWorkItem(this, remoteRepo, excludeCommitCommentsFrom));\n+        }\n+        if (processPR) {\n+            List<PullRequest> prs = poller.updatedPullRequests();\n+            workItems.addAll(getPullRequestWorkItems(prs));\n+            poller.lastBatchHandled();\n+        }\n@@ -156,2 +165,8 @@\n-\n-        return getWorkItems(webHook.get().updatedPullRequests());\n+        var workItems = new ArrayList<WorkItem>();\n+        if (processCommit) {\n+            workItems.add(new CommitCommentsWorkItem(this, remoteRepo, excludeCommitCommentsFrom));\n+        }\n+        if (processPR) {\n+            workItems.addAll(getPullRequestWorkItems(webHook.get().updatedPullRequests()));\n+        }\n+        return workItems;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+    private boolean processPR = true;\n+    private boolean processCommit = true;\n@@ -200,0 +202,10 @@\n+    public PullRequestBotBuilder processPR(boolean processPR) {\n+        this.processPR = processPR;\n+        return this;\n+    }\n+\n+    public PullRequestBotBuilder processCommit(boolean processCommit) {\n+        this.processCommit = processCommit;\n+        return this;\n+    }\n+\n@@ -207,1 +219,2 @@\n-                                  enableCsr, enableJep, reviewCleanBackport, mlbridgeBotName, reviewMerge);\n+                                  enableCsr, enableJep, reviewCleanBackport, mlbridgeBotName, reviewMerge,\n+                                  processPR, processCommit);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -201,0 +201,6 @@\n+            if (repo.value().contains(\"processPR\")) {\n+                botBuilder.processPR(repo.value().get(\"processPR\").asBoolean());\n+            }\n+            if (repo.value().contains(\"processCommit\")) {\n+                botBuilder.processCommit(repo.value().get(\"processCommit\").asBoolean());\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+                                    .processPR(false)\n@@ -85,0 +86,10 @@\n+\n+            editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"refs\/heads\/edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ The command would not be processed\n+            var reviewerPr = reviewer.pullRequest(pr.id());\n+            reviewerPr.addComment(\"\/help\");\n+            TestBotRunner.runPeriodicItems(bot);\n+            PullRequestAsserts.assertLastCommentContains(pr, \"\/help\");\n@@ -267,0 +278,97 @@\n+\n+    @Test\n+    void disableProcessCommit(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var bot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                    .seedStorage(seedFolder)\n+                    .processCommit(false)\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change directly on master\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"master\");\n+\n+            \/\/ Add a help command\n+            author.addCommitComment(editHash, \"\/help\");\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The command should not be processed\n+            var replies = author.commitComments(editHash);\n+            CommitCommandAsserts.assertLastCommentContains(replies, \"\/help\");\n+\n+            editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"refs\/heads\/edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ The pr command would be processed\n+            var reviewerPr = reviewer.pullRequest(pr.id());\n+            reviewerPr.addComment(\"\/help\");\n+            TestBotRunner.runPeriodicItems(bot);\n+            PullRequestAsserts.assertLastCommentContains(pr, \"Available commands:\");\n+        }\n+    }\n+\n+    @Test\n+    void disableProcessCommitAndProcessPR(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var bot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                    .seedStorage(seedFolder)\n+                    .processCommit(false)\n+                    .processPR(false)\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change directly on master\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"master\");\n+\n+            \/\/ Add a help command\n+            author.addCommitComment(editHash, \"\/help\");\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The command should not be processed\n+            var replies = author.commitComments(editHash);\n+            CommitCommandAsserts.assertLastCommentContains(replies, \"\/help\");\n+\n+            editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"refs\/heads\/edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ The pr command would not be processed\n+            var reviewerPr = reviewer.pullRequest(pr.id());\n+            reviewerPr.addComment(\"\/help\");\n+            TestBotRunner.runPeriodicItems(bot);\n+            PullRequestAsserts.assertLastCommentContains(pr, \"\/help\");\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandTests.java","additions":109,"deletions":1,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -98,1 +98,2 @@\n-                          \"reviewCleanBackport\": true\n+                          \"reviewCleanBackport\": true,\n+                          \"processCommit\": false\n@@ -117,0 +118,1 @@\n+                          \"processPR\": false\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactoryTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}