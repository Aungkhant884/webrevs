{"files":[{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -197,0 +198,9 @@\n+\n+    @Override\n+    public void addCollaborator(HostUser user, boolean canPush) {\n+    }\n+\n+    @Override\n+    public boolean canPush(HostUser user) {\n+        return false;\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -85,0 +86,2 @@\n+    void addCollaborator(HostUser user, boolean canPush);\n+    boolean canPush(HostUser user);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -516,0 +517,18 @@\n+\n+    @Override\n+    public void addCollaborator(HostUser user, boolean canPush) {\n+        var query = JSON.object().put(\"permission\", canPush ? \"push\" : \"pull\");\n+        request.put(\"collaborators\/\" + user.username())\n+               .body(query)\n+               .execute();\n+\n+    }\n+\n+    @Override\n+    public boolean canPush(HostUser user) {\n+        var permission = request.get(\"collaborators\/\" + user.username())\n+                                .execute()\n+                                .get(\"permission\")\n+                                .asString();\n+        return permission.equals(\"admin\") || permission.equals(\"write\");\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -550,0 +550,18 @@\n+\n+    @Override\n+    public void addCollaborator(HostUser user, boolean canPush) {\n+        var accessLevel = canPush ? \"30\" : \"20\";\n+        var data = \"user_id=\" + user.id() + \"&access_level=\" + accessLevel;\n+        request.post(\"members\")\n+               .body(data)\n+               .execute();\n+    }\n+\n+    @Override\n+    public boolean canPush(HostUser user) {\n+        var accessLevel = request.get(\"members\/\" + user.id())\n+                                 .execute()\n+                                 .get(\"access_level\")\n+                                 .asInt();\n+        return accessLevel >= 30;\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -44,0 +45,1 @@\n+    private Map<String, Boolean> collaborators = new HashMap<>();\n@@ -278,0 +280,10 @@\n+    @Override\n+    public void addCollaborator(HostUser user, boolean canPush) {\n+        collaborators.put(user.username(), canPush);\n+    }\n+\n+    @Override\n+    public boolean canPush(HostUser user) {\n+        return collaborators.getOrDefault(user.username(), false);\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}