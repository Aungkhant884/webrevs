{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,0 +271,5 @@\n+\n+    @Override\n+    public int deleteDeployKeys(int age) {\n+        return 0;\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -211,0 +211,7 @@\n+\n+    \/**\n+     * Delete deploy keys which are older than 'age' in this repository\n+     * The unit of age is hour\n+     * The return value is the count of deleted keys\n+     *\/\n+    int deleteDeployKeys(int age);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -730,0 +730,12 @@\n+\n+    @Override\n+    public int deleteDeployKeys(int age) {\n+        var expired = request.get(\"keys\").execute()\n+                .stream()\n+                .filter(key -> ZonedDateTime.parse(key.get(\"created_at\").asString()).isBefore(ZonedDateTime.now().minusHours(age)))\n+                .toList();\n+        for (var key : expired) {\n+            request.delete(\"keys\/\" + key.get(\"id\")).execute();\n+        }\n+        return expired.size();\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -831,0 +831,14 @@\n+\n+    @Override\n+    public int deleteDeployKeys(int age) {\n+        var expiredKeys = request.get(\"deploy_keys\").execute()\n+                .stream()\n+                .filter(key -> ZonedDateTime.parse(key.get(\"created_at\").asString()).isBefore(ZonedDateTime.now().minusHours(age)))\n+                .toList();\n+        for (var key : expiredKeys) {\n+            request.delete(\"deploy_keys\/\" + key.get(\"id\"))\n+                    .header(\"Content-Type\", \"application\/json\")\n+                    .execute();\n+        }\n+        return expiredKeys.size();\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -262,0 +262,8 @@\n+\n+    @Test\n+    void testDeleteDeployKey() {\n+        var githubRepoOpt = githubHost.repository(\"zhaosongzs\/Test\");\n+        assumeTrue(githubRepoOpt.isPresent());\n+        var githubRepo = githubRepoOpt.get();\n+        githubRepo.deleteDeployKeys(24);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRestApiTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -279,0 +279,13 @@\n+\n+    @Test\n+    void testDeleteDeployKey() throws IOException {\n+        var settings = ManualTestSettings.loadManualTestSettings();\n+        var username = settings.getProperty(\"gitlab.user\");\n+        var token = settings.getProperty(\"gitlab.pat\");\n+        var credential = new Credential(username, token);\n+        var uri = URIBuilder.base(settings.getProperty(\"gitlab.uri\")).build();\n+        var gitLabHost = new GitLabHost(\"gitlab\", uri, false, credential, Set.of());\n+        var gitLabRepo = gitLabHost.repository(settings.getProperty(\"gitlab.repository\")).orElseThrow();\n+\n+        gitLabRepo.deleteDeployKeys(24);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRestApiTest.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+    private Map<Integer, ZonedDateTime> deployKeys = new HashMap<>();\n@@ -434,0 +435,20 @@\n+\n+    @Override\n+    public int deleteDeployKeys(int age) {\n+        var expiredKeys = deployKeys.entrySet()\n+                .stream()\n+                .filter(entry -> entry.getValue().isBefore(ZonedDateTime.now().minusHours(age)))\n+                .toList();\n+        for (var key : expiredKeys) {\n+            deployKeys.remove(key.getKey());\n+        }\n+        return expiredKeys.size();\n+    }\n+\n+    public void addDeployKeys(int id, ZonedDateTime createTime) {\n+        deployKeys.put(id, createTime);\n+    }\n+\n+    public Map<Integer, ZonedDateTime> deployKeys() {\n+        return deployKeys;\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}