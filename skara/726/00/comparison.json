{"files":[{"patch":"@@ -44,0 +44,1 @@\n+    private static final Hash EMPTY_TREE = new Hash(\"4b825dc642cb6eb9a060e54bf8d69288fbee4904\");\n@@ -980,1 +981,5 @@\n-            cmd.add(from.hex());\n+            if (from.equals(Hash.zero())) {\n+                cmd.add(EMPTY_TREE.hex());\n+            } else {\n+                cmd.add(from.hex());\n+            }\n@@ -1028,2 +1033,8 @@\n-                                                         \"--no-color\",\n-                                                         from.hex()));\n+                                                         \"--no-color\"));\n+        if (from != null) {\n+            if (from.equals(Hash.zero())) {\n+                cmd.add(EMPTY_TREE.hex());\n+            } else {\n+                cmd.add(from.hex());\n+            }\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1573,0 +1573,42 @@\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testDiffAgainstInitialRevision(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+            assertTrue(r.isClean());\n+\n+            var readme = dir.path().resolve(\"README.md\");\n+            Files.writeString(readme, \"Hello world\\n\");\n+            r.add(readme);\n+            var hash = r.commit(\"Added readme\", \"duke\", \"duke@openjdk.java.net\");\n+            var commit = r.lookup(hash).orElseThrow();\n+            var parent = commit.parents().get(0);\n+\n+            var diff = r.diff(parent, commit.hash());\n+            assertEquals(parent, diff.from());\n+            assertEquals(hash, diff.to());\n+        }\n+    }\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testStatusAgainstInitialRevision(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+            assertTrue(r.isClean());\n+\n+            var readme = dir.path().resolve(\"README.md\");\n+            Files.writeString(readme, \"Hello world\\n\");\n+            r.add(readme);\n+            var hash = r.commit(\"Added readme\", \"duke\", \"duke@openjdk.java.net\");\n+            var commit = r.lookup(hash).orElseThrow();\n+            var parent = commit.parents().get(0);\n+\n+            var entries = r.status(parent, commit.hash());\n+            assertEquals(1, entries.size());\n+            var entry = entries.get(0);\n+            assertTrue(entry.status().isAdded());\n+            assertEquals(Path.of(\"README.md\"), entry.target().path().get());\n+        }\n+    }\n+\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"}]}