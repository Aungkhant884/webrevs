{"files":[{"patch":"@@ -47,0 +47,24 @@\n+    private Check testingNotConfiguredNotice(PullRequest pr) {\n+        var sourceRepoUrl = pr.sourceRepository().orElseThrow().nonTransformedWebUrl().toString();\n+        if (pr.sourceRepository().orElseThrow().forge().name().equals(\"GitHub\")) {\n+            sourceRepoUrl += \"\/actions\";\n+        }\n+\n+        return CheckBuilder.create(\"Pre-submit test status\", pr.headHash())\n+                           .skipped()\n+                           .title(\"Testing is not configured\")\n+                           .summary(\"In order to run pre-submit tests, the [source repository](\" +\n+                                            sourceRepoUrl + \")\" +\n+                                            \" must be properly configured to allow test execution. \" +\n+                                            \"See https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Testing for more information on how to configure this.\")\n+                           .build();\n+    }\n+\n+    private Check testingEnabledNotice(PullRequest pr) {\n+        return CheckBuilder.create(\"Pre-submit test status\", pr.headHash())\n+                           .complete(true)\n+                           .title(\"Tests are now enabled\")\n+                           .summary(\"Pre-submit tests have been now been enabled for the source repository\")\n+                           .build();\n+    }\n+\n@@ -66,1 +90,3 @@\n-            var summarizedChecks = TestResults.summarize(checks);\n+            var noticeCheck = checks.stream()\n+                                    .filter(check -> check.name().equals(\"Pre-submit test status\"))\n+                                    .findAny();\n@@ -68,4 +94,6 @@\n-            if (summarizedChecks.isEmpty()) {\n-                \/\/ No test related checks found, they may not have started yet, so we'll keep looking\n-                expirations.put(expirationKey, Instant.now().plus(Duration.ofMinutes(2)));\n-                continue;\n+            if (sourceRepo.workflowStatus() == WorkflowStatus.NOT_CONFIGURED) {\n+                if (noticeCheck.isEmpty()) {\n+                    ret.add(new TestInfoBotWorkItem(pr, List.of(testingNotConfiguredNotice(pr))));\n+                }\n+            } else if (sourceRepo.workflowStatus() == WorkflowStatus.DISABLED) {\n+                \/\/ Explicitly disabled - could possibly post a notice\n@@ -73,2 +101,8 @@\n-                expirations.put(expirationKey, Instant.now().plus(TestResults.expiresIn(checks).orElse(Duration.ofMinutes(30))));\n-            }\n+                var summarizedChecks = TestResults.summarize(checks);\n+                if (summarizedChecks.isEmpty()) {\n+                    \/\/ No test related checks found, they may not have started yet, so we'll keep looking\n+                    expirations.put(expirationKey, Instant.now().plus(Duration.ofMinutes(2)));\n+                    continue;\n+                } else {\n+                    expirations.put(expirationKey, Instant.now().plus(TestResults.expiresIn(checks).orElse(Duration.ofMinutes(30))));\n+                }\n@@ -76,2 +110,9 @@\n-            \/\/ Time to refresh test info\n-            ret.add(new TestInfoBotWorkItem(pr, summarizedChecks));\n+                if (noticeCheck.isPresent()) {\n+                    \/\/ If a disabled notice has been posted earlier, we can't delete it - just mark it completed\n+                    summarizedChecks = new ArrayList<>(summarizedChecks);\n+                    summarizedChecks.add(testingEnabledNotice(pr));\n+                }\n+\n+                \/\/ Time to refresh test info\n+                ret.add(new TestInfoBotWorkItem(pr, summarizedChecks));\n+            }\n","filename":"bots\/testinfo\/src\/main\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoBot.java","additions":50,"deletions":9,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -20,6 +20,0 @@\n-            var reviewer = credentials.getHostedRepository();\n-            var issues = credentials.getIssueProject();\n-\n-            var censusBuilder = credentials.getCensusBuilder()\n-                                           .addAuthor(author.forge().currentUser().id())\n-                                           .addReviewer(reviewer.forge().currentUser().id());\n@@ -80,6 +74,0 @@\n-            var reviewer = credentials.getHostedRepository();\n-            var issues = credentials.getIssueProject();\n-\n-            var censusBuilder = credentials.getCensusBuilder()\n-                                           .addAuthor(author.forge().currentUser().id())\n-                                           .addReviewer(reviewer.forge().currentUser().id());\n","filename":"bots\/testinfo\/src\/test\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoTests.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -133,0 +133,12 @@\n+    public CheckBuilder skipped() {\n+        status = CheckStatus.SKIPPED;\n+        completedAt = ZonedDateTime.now();\n+        return this;\n+    }\n+\n+    public CheckBuilder skipped(ZonedDateTime actionRequiredAt) {\n+        status = CheckStatus.SKIPPED;\n+        completedAt = ZonedDateTime.now();\n+        return this;\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/CheckBuilder.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n-    CANCELLED\n+    CANCELLED,\n+    SKIPPED\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/CheckStatus.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+    WorkflowStatus workflowStatus();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,2 +23,6 @@\n-module org.openjdk.skara.version {\n-    exports org.openjdk.skara.version;\n+package org.openjdk.skara.forge;\n+\n+public enum WorkflowStatus {\n+    NOT_CONFIGURED,\n+    ENABLED,\n+    DISABLED,\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/WorkflowStatus.java","additions":6,"deletions":2,"binary":false,"changes":8,"previous_filename":"version\/src\/main\/java\/module-info.java","status":"copied"},{"patch":"@@ -405,13 +405,5 @@\n-                                    case \"cancelled\":\n-                                        checkBuilder.cancel(completedAt);\n-                                        break;\n-                                    case \"success\":\n-                                        checkBuilder.complete(true, completedAt);\n-                                        break;\n-                                    case \"failure\":\n-                                        \/\/ fallthrough\n-                                    case \"neutral\":\n-                                        checkBuilder.complete(false, completedAt);\n-                                        break;\n-                                    default:\n-                                        throw new IllegalStateException(\"Unexpected conclusion: \" + conclusion);\n+                                    case \"cancelled\" -> checkBuilder.cancel(completedAt);\n+                                    case \"success\" -> checkBuilder.complete(true, completedAt);\n+                                    case \"action_required\", \"failure\", \"neutral\" -> checkBuilder.complete(false, completedAt);\n+                                    case \"skipped\" -> checkBuilder.skipped(completedAt);\n+                                    default -> throw new IllegalStateException(\"Unexpected conclusion: \" + conclusion);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -465,14 +465,5 @@\n-                                 case \"cancelled\":\n-                                 case \"skipped\":\n-                                     checkBuilder.cancel(completedAt);\n-                                     break;\n-                                 case \"success\":\n-                                     checkBuilder.complete(true, completedAt);\n-                                     break;\n-                                 case \"failure\":\n-                                     \/\/ fallthrough\n-                                 case \"neutral\":\n-                                     checkBuilder.complete(false, completedAt);\n-                                     break;\n-                                 default:\n-                                     throw new IllegalStateException(\"Unexpected conclusion: \" + conclusion);\n+                                 case \"cancelled\" -> checkBuilder.cancel(completedAt);\n+                                 case \"success\" -> checkBuilder.complete(true, completedAt);\n+                                 case \"action_required\", \"failure\", \"neutral\" -> checkBuilder.complete(false, completedAt);\n+                                 case \"skipped\" -> checkBuilder.skipped(completedAt);\n+                                 default -> throw new IllegalStateException(\"Unexpected conclusion: \" + conclusion);\n@@ -501,0 +492,11 @@\n+\n+    @Override\n+    public WorkflowStatus workflowStatus() {\n+        var workflows = request.get(\"actions\/workflows\").execute();\n+        var count = workflows.asObject().get(\"total_count\").asInt();\n+        if (count == 0) {\n+            return WorkflowStatus.NOT_CONFIGURED;\n+        } else {\n+            return WorkflowStatus.ENABLED;\n+        }\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -491,0 +491,9 @@\n+\n+    @Override\n+    public WorkflowStatus workflowStatus() {\n+        if (json.contains(\"jobs_enabled\")) {\n+            return json.get(\"jobs_enabled\").asBoolean() ? WorkflowStatus.ENABLED : WorkflowStatus.DISABLED;\n+        } else {\n+            return WorkflowStatus.DISABLED;\n+        }\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -266,0 +266,5 @@\n+    @Override\n+    public WorkflowStatus workflowStatus() {\n+        return WorkflowStatus.ENABLED;\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}