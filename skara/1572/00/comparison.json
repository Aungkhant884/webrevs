{"files":[{"patch":"@@ -186,1 +186,1 @@\n-        var targetBranchName = parts.length == index + 1 ? parts[index] : \"master\";\n+        var targetBranchName = parts.length == index + 1 ? parts[index] : targetRepo.defaultBranchName();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,0 +176,5 @@\n+    @Override\n+    public String defaultBranchName() {\n+        return null;\n+    }\n+\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+    String defaultBranchName();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -212,0 +212,5 @@\n+    @Override\n+    public String defaultBranchName() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/bitbucket\/BitbucketRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -356,0 +356,5 @@\n+    @Override\n+    public String defaultBranchName() {\n+        return json().get(\"default_branch\").asString();\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -437,0 +437,5 @@\n+    @Override\n+    public String defaultBranchName() {\n+        return json.get(\"default_branch\").asString();\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -302,0 +302,6 @@\n+\n+    @Test\n+    void testDefaultBranchName() {\n+        var gitHubRepo = githubHost.repository(settings.getProperty(\"github.repository\")).orElseThrow();\n+        assertEquals(settings.getProperty(\"github.repository.branch\"), gitHubRepo.defaultBranchName());\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRestApiTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -361,0 +361,13 @@\n+\n+    @Test\n+    void testDefaultBranchName() throws IOException {\n+        var settings = ManualTestSettings.loadManualTestSettings();\n+        var username = settings.getProperty(\"gitlab.user\");\n+        var token = settings.getProperty(\"gitlab.pat\");\n+        var credential = new Credential(username, token);\n+        var uri = URIBuilder.base(settings.getProperty(\"gitlab.uri\")).build();\n+        var gitLabHost = new GitLabHost(\"gitlab\", uri, false, credential, List.of());\n+        var gitLabRepo = gitLabHost.repository(settings.getProperty(\"gitlab.repository\")).orElseThrow();\n+\n+        assertEquals(settings.getProperty(\"gitlab.repository.branch\"), gitLabRepo.defaultBranchName());\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRestApiTest.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -280,0 +280,5 @@\n+    @Override\n+    public String defaultBranchName() {\n+        return \"master\";\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}