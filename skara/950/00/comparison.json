{"files":[{"patch":"@@ -250,6 +250,1 @@\n-    private boolean updateClean(Hash hash) {\n-        var result = pr.repository().forge().search(hash);\n-        if (result.isEmpty()) {\n-            throw new IllegalStateException(\"Backport comment for PR \" + pr.id() + \" contains bad hash: \" + hash.hex());\n-        }\n-\n+    private boolean updateClean(Commit commit) {\n@@ -257,2 +252,0 @@\n-\n-        var commit = result.get();\n@@ -347,1 +340,1 @@\n-    private Optional<Hash> backportedFrom() {\n+    private Optional<HostedCommit> backportedFrom() {\n@@ -356,2 +349,10 @@\n-        return backportLines.isEmpty()?\n-            Optional.empty() : Optional.of(new Hash(backportLines.get(0).group(1)));\n+        if (backportLines.isEmpty()) {\n+            return Optional.empty();\n+        }\n+\n+        var hash = new Hash(backportLines.get(0).group(1));\n+        var commit = pr.repository().forge().search(hash);\n+        if (commit.isEmpty()) {\n+            throw new IllegalStateException(\"Backport comment for PR \" + pr.id() + \" contains bad hash: \" + hash.hex());\n+        }\n+        return commit;\n@@ -986,1 +987,1 @@\n-            var amendedHash = checkablePullRequest.amendManualReviewers(localHash, censusInstance.namespace(), original.orElse(null));\n+            var amendedHash = checkablePullRequest.amendManualReviewers(localHash, censusInstance.namespace(), original.map(Commit::hash).orElse(null));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}