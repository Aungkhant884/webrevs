{"files":[{"patch":"@@ -418,0 +418,1 @@\n+        final var finalId = id;\n@@ -419,1 +420,4 @@\n-                                .onError(r -> r.statusCode() < 500 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n+                                .onError(r -> {\n+                                    log.info(\"Getting issue \" + finalId + \" failed with \" + r.statusCode());\n+                                    return r.statusCode() < 500 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty();\n+                                })\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -312,1 +312,7 @@\n-                break;\n+                \/\/ If we are using authorization and get a 401, we need to retry to give\n+                \/\/ the authorization mechanism a chance to refresh stale tokens.\n+                if (authGen == null || response.statusCode() != 401 || retryCount >= 2) {\n+                    break;\n+                } else {\n+                    log.info(\"Failed authorization for request: \" + request.build().uri() + \", retry count: \" + retryCount);\n+                }\n","filename":"network\/src\/main\/java\/org\/openjdk\/skara\/network\/RestRequest.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}