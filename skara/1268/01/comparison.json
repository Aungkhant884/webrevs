{"files":[{"patch":"@@ -418,0 +418,1 @@\n+        final var finalId = id;\n@@ -419,1 +420,4 @@\n-                                .onError(r -> r.statusCode() < 500 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n+                                .onError(r -> {\n+                                    log.info(\"Getting issue \" + finalId + \" failed with \" + r.statusCode());\n+                                    return r.statusCode() < 500 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty();\n+                                })\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -305,0 +305,2 @@\n+        var authHeaders = addAuthHeaders(request);\n+\n@@ -308,3 +310,0 @@\n-                if (authGen != null) {\n-                    request.headers(authGen.getAuthHeaders(request).toArray(new String[0]));\n-                }\n@@ -312,1 +311,10 @@\n-                break;\n+                \/\/ If we are using authorization and get a 401, we need to retry to give\n+                \/\/ the authorization mechanism a chance to refresh stale tokens. Retry if\n+                \/\/ we get a new set of authorization headers.\n+                if (response.statusCode() == 401 && retryCount < 2 && authHeaders != null\n+                        && !authHeaders.equals(addAuthHeaders(request))) {\n+                    log.info(\"Failed authorization for request: \" + request.build().uri()\n+                            + \", retry count: \" + retryCount);\n+                } else {\n+                    break;\n+                }\n@@ -334,0 +342,17 @@\n+    \/**\n+     * Adds authorization headers to the request builder. Returns the headers that\n+     * were added or null if no authorization mechanism was defined.\n+     *\/\n+    private List<String> addAuthHeaders(HttpRequest.Builder request) {\n+        if (authGen != null) {\n+            var authHeaders = authGen.getAuthHeaders(request);\n+            for (int i = 0; i < authHeaders.size() - 1; i += 2) {\n+                String name  = authHeaders.get(i);\n+                String value = authHeaders.get(i + 1);\n+                request.setHeader(name, value);\n+            }\n+            return authHeaders;\n+        }\n+        return null;\n+    }\n+\n","filename":"network\/src\/main\/java\/org\/openjdk\/skara\/network\/RestRequest.java","additions":29,"deletions":4,"binary":false,"changes":33,"status":"modified"}]}