{"files":[{"patch":"@@ -27,1 +27,1 @@\n-import org.openjdk.skara.forge.HostedRepository;\n+import org.openjdk.skara.forge.*;\n@@ -43,0 +43,4 @@\n+    private String pullRequestToKey(PullRequest pr) {\n+        return pr.id() + \"#\" + pr.headHash().hex();\n+    }\n+\n@@ -51,2 +55,4 @@\n-            if (expirations.containsKey(pr.id())) {\n-                var expiresAt = expirations.get(pr.id());\n+            var expirationKey = pullRequestToKey(pr);\n+\n+            if (expirations.containsKey(expirationKey)) {\n+                var expiresAt = expirations.get(expirationKey);\n@@ -64,1 +70,1 @@\n-                expirations.put(pr.id(), Instant.now().plus(Duration.ofMinutes(5)));\n+                expirations.put(expirationKey, Instant.now().plus(Duration.ofMinutes(2)));\n@@ -67,1 +73,1 @@\n-                expirations.put(pr.id(), Instant.now().plus(TestResults.expiresIn(checks).orElse(Duration.ofDays(1000))));\n+                expirations.put(expirationKey, Instant.now().plus(TestResults.expiresIn(checks).orElse(Duration.ofMinutes(30))));\n","filename":"bots\/testinfo\/src\/main\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoBot.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -74,0 +74,59 @@\n+\n+    @Test\n+    void update(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var issues = credentials.getIssueProject();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addAuthor(author.forge().currentUser().id())\n+                                           .addReviewer(reviewer.forge().currentUser().id());\n+            var checkBot = new TestInfoBot(author);\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType(), Path.of(\"appendable.txt\"),\n+                                                     Set.of(\"issues\"), null);\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a draft PR where we can add some checks\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"preedit\", true);\n+            var draftPr1 = credentials.createPullRequest(author, \"master\", \"preedit\", \"This is a pull request\", true);\n+            var check1 = CheckBuilder.create(\"ps1\", editHash).title(\"PS1\");\n+            draftPr1.createCheck(check1.build());\n+            draftPr1.updateCheck(check1.complete(true).build());\n+\n+            \/\/ Now make an actual PR\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(checkBot);\n+\n+            \/\/ Verify summarized checks\n+            assertEquals(1, pr.checks(pr.headHash()).size());\n+            assertEquals(\"1\/1 passed\", pr.checks(pr.headHash()).get(\"Pre-submit tests - ps1 - Build \/ test\").title().orElseThrow());\n+\n+            \/\/ And a second one\n+            var editHash2 = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash2, author.url(), \"preedit\");\n+            var draftPr2 = credentials.createPullRequest(author, \"master\", \"preedit\", \"This is a pull request\", true);\n+            var check2 = CheckBuilder.create(\"ps2\", editHash2).title(\"PS2\");\n+            draftPr2.createCheck(check2.build());\n+            draftPr2.updateCheck(check2.complete(false).build());\n+\n+            \/\/ Push an update to the PR\n+            localRepo.push(editHash2, author.url(), \"edit\", true);\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(checkBot);\n+\n+            \/\/ Verify summarized checks again\n+            var updatedPr = pr.repository().pullRequest(pr.id());\n+            assertEquals(1, updatedPr.checks(updatedPr.headHash()).size());\n+            assertEquals(\"1\/1 failed\", updatedPr.checks(updatedPr.headHash()).get(\"Pre-submit tests - ps2 - Build \/ test\").title().orElseThrow());\n+        }\n+    }\n","filename":"bots\/testinfo\/src\/test\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoTests.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"modified"}]}