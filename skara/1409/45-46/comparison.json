{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.skara.vcs.Commit;\n@@ -331,0 +332,1 @@\n+        Repository repository = null;\n@@ -332,3 +334,10 @@\n-            Repository repository = new HostedRepositoryPool(bot.seedStorage().orElse(scratchPath.resolve(\"seeds\"))).seedRepository(pr.repository(), false);\n-            Hash tip = repository.fetch(pr.repository().url(), pr.targetRef(), false);\n-            repository.push(tip, pr.repository().url(), \"integration\/\" + pr.id() + \"\/\" + pr.targetRef(), true);\n+            repository = new HostedRepositoryPool(bot.seedStorage().orElse(scratchPath.resolve(\"seeds\"))).seedRepository(pr.repository(), false);\n+            repository.fetch(pr.repository().url(), pr.targetRef(), false);\n+            List<Commit> commits = repository.commits(hash.hex(), 2, true).asList();\n+            if (commits.size() == 2) {\n+                repository.revert(commits.get(1).hash());\n+                final Hash resetHash = repository.commit(hash.hex(), \"duke\", \"duke@openjdk.org\");\n+                repository.push(resetHash, pr.repository().url(), pr.targetRef(), false);\n+            } else {\n+                repository = null; \/\/ Reset repository back to null to avoid merge logic later\n+            }\n@@ -339,1 +348,1 @@\n-        pr.setState(PullRequest.State.RESOLVED);\n+        pr.setState(repository == null ? PullRequest.State.CLOSED : PullRequest.State.RESOLVED);\n@@ -350,2 +359,9 @@\n-        reply.println(\":bulb: You may see a message that your pull request was closed with unmerged commits, or merged into a different branch.\");\n-        reply.println(\"This can be safely ignored, your pull request was correctly integrated into the `\" + pr.targetRef() + \"` branch.\");\n+        reply.println(\":bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n+        if (repository != null) {\n+            try {\n+                repository.reset(hash, true);\n+                repository.push(hash, pr.repository().url(), pr.targetRef(), true);\n+            } catch (IOException exception) {\n+                exception.printStackTrace();\n+            }\n+        }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":22,"deletions":6,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -307,3 +307,1 @@\n-        final String ref = json.get(\"base\").get(\"ref\").asString();\n-        final String marker = \"integration\/\" + this.id() + \"\/\";\n-        return ref.startsWith(marker) ? ref.substring(marker.length()) : ref;\n+        return json.get(\"base\").get(\"ref\").asString();\n@@ -426,1 +424,0 @@\n-            this.setTargetRef(\"integration\/\" + this.id() + \"\/\" + this.targetRef());\n@@ -430,1 +427,0 @@\n-            this.repository().deleteBranch(\"integration\/\" + this.id() + \"\/\" + this.targetRef());\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -346,3 +346,1 @@\n-        final String ref = json.get(\"target_branch\").asString();\n-        final String marker = \"integration\/\" + this.id() + \"\/\";\n-        return ref.startsWith(marker) ? ref.substring(marker.length()) : ref;\n+        return json.get(\"target_branch\").asString();\n@@ -465,1 +463,0 @@\n-            this.setTargetRef(\"integration\/\" + this.id() + \"\/\" + this.targetRef());\n@@ -469,1 +466,0 @@\n-            this.repository().deleteBranch(\"integration\/\" + this.id() + \"\/\" + this.targetRef());\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}