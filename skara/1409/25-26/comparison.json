{"files":[{"patch":"@@ -332,1 +332,1 @@\n-        final String integrationBranch = PreIntegrations.integrationBranch(pr, initialBranch);\n+        final String integrationBranch = \"integrated\/\" + pr.id();\n@@ -335,1 +335,1 @@\n-            Hash tip = repository.fetch(pr.repository().url(), initialBranch);\n+            Hash tip = repository.fetch(pr.repository().url(), initialBranch, false);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,2 +52,1 @@\n-                \/\/ Currently the only part of Skara fortified for integration branches\n-                candidate.setTargetRef(integratedBranch(pr).orElse(pr.targetRef()));\n+                candidate.setTargetRef(pr.targetRef());\n@@ -63,46 +62,0 @@\n-\n-    \/*\n-     * The following branch name restrictions currently apply\n-     *\n-     * A Git branch name cannot:\n-     *\n-     * - Have a path component that begins with .\n-     * - Have a double dot ..\n-     * - Have an ASCII control character, ~, ^, : or SP, anywhere\n-     * - End with a \/\n-     * - End with .lock\n-     * - Contain a \\ (backslash)\n-     *\n-     * https:\/\/github.com\/git\/git\/blob\/master\/refs.c\n-     *\/\n-    public static String integrationBranch(final PullRequest pull, final String branch) {\n-        return \"integrated\/\" + pull.id() + \"@\" + branch;\n-    }\n-\n-    public static boolean isIntegrationBranch(final String name) {\n-        return name.startsWith(\"integrated\/\");\n-    }\n-\n-    \/*\n-     * Checks if the Pull Request's target branch is an integration branch\n-     * and returns the actual target branch name if it is.\n-     *\n-     * In theory this should always be used if the Pull Request has been\n-     * integrated, but since we set its target branch back to the initial\n-     * branch after integration (to minimize disruption for now) this doesn't\n-     * see much use, and is only really used above to fortify retargetDependencies.\n-     *\n-     * See IntegrateCommand#markIntegratedAndMerged for more details.\n-     *\/\n-    public static Optional<String> integratedBranch(final PullRequest pull) {\n-        if (isIntegrationBranch(pull.targetRef())) {\n-            final String integrationMarker = \"integrated\/\" + pull.id() + \"@\";\n-            final int branchStart = pull.targetRef().indexOf(integrationMarker);\n-            if (branchStart == -1) {\n-                throw new IllegalStateException(\"Cannot parse integration branch \" + pull.targetRef());\n-            }\n-            return Optional.of(pull.targetRef().substring(branchStart + integrationMarker.length()));\n-        } else {\n-            return Optional.empty();\n-        }\n-    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PreIntegrations.java","additions":1,"deletions":48,"binary":false,"changes":49,"status":"modified"}]}