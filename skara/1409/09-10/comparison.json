{"files":[{"patch":"@@ -340,1 +340,0 @@\n-        pr.addLabel(\"integrated\");\n@@ -342,0 +341,1 @@\n+        pr.addLabel(\"integrated\");\n@@ -343,1 +343,0 @@\n-        pr.repository().deleteBranch(integrationBranch);\n@@ -356,0 +355,1 @@\n+        pr.repository().deleteBranch(integrationBranch);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,0 +63,22 @@\n+    \/*\n+     * The following branch name restrictions currently apply\n+     *\n+     * A Git branch name cannot:\n+     *\n+     * - Have a path component that begins with .\n+     * - Have a double dot ..\n+     * - Have an ASCII control character, ~, ^, : or SP, anywhere\n+     * - End with a \/\n+     * - End with .lock\n+     * - Contain a \\ (backslash)\n+     *\n+     * https:\/\/github.com\/git\/git\/blob\/master\/refs.c\n+     *\/\n+    public static String integrationBranch(final PullRequest pull, final String branch) {\n+        return \"integrated\/\" + pull.id() + \"#\" + branch;\n+    }\n+\n+    public static boolean isIntegrationBranch(final String name) {\n+        return name.startsWith(\"integrated\/\");\n+    }\n+\n@@ -65,1 +87,1 @@\n-            final String integrationMarker = \"integrated\/\" + pull.id() + \":\";\n+            final String integrationMarker = \"integrated\/\" + pull.id() + \"#\";\n@@ -75,8 +97,0 @@\n-\n-    public static boolean isIntegrationBranch(final String name) {\n-        return name.startsWith(\"integrated\/\");\n-    }\n-\n-    public static String integrationBranch(final PullRequest pull, final String branch) {\n-        return \"integrated\/\" + pull.id() + \":\" + branch;\n-    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PreIntegrations.java","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -603,5 +603,8 @@\n-\n-        \/\/ Specify what destination ref to update with what source object.\n-        \/\/ The format of a <refspec> parameter is an optional plus +, followed by\n-        \/\/ the source object, followed by a colon :, followed by the destination ref\n-        \/\/ https:\/\/git-scm.com\/docs\/git-push\n+        \n+        \/*\n+         * Specify what destination ref to update with what source object.\n+         * The format of a <refspec> parameter is an optional plus +, followed by\n+         * the source object, followed by a colon :, followed by the destination ref\n+         *\n+         * https:\/\/git-scm.com\/docs\/git-push\n+         *\/\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}