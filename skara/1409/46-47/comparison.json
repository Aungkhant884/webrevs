{"files":[{"patch":"@@ -332,1 +332,1 @@\n-        Repository repository = null;\n+        Repository repository;\n@@ -335,2 +335,3 @@\n-            repository.fetch(pr.repository().url(), pr.targetRef(), false);\n-            List<Commit> commits = repository.commits(hash.hex(), 2, true).asList();\n+            repository.fetch(pr.repository().url(), pr.targetRef(), true);\n+            final List<Commit> commits = repository.commits(hash.hex(), 2, true).asList();\n+            commits.forEach(commit -> log.info(commit.toString()));\n@@ -339,1 +340,1 @@\n-                final Hash resetHash = repository.commit(hash.hex(), \"duke\", \"duke@openjdk.org\");\n+                final Hash resetHash = repository.commit(\"Integration Merge\", \"duke\", \"duke@openjdk.org\");\n@@ -341,2 +342,0 @@\n-            } else {\n-                repository = null; \/\/ Reset repository back to null to avoid merge logic later\n@@ -348,1 +347,1 @@\n-        pr.setState(repository == null ? PullRequest.State.CLOSED : PullRequest.State.RESOLVED);\n+        pr.setState(PullRequest.State.RESOLVED);\n@@ -360,7 +359,5 @@\n-        if (repository != null) {\n-            try {\n-                repository.reset(hash, true);\n-                repository.push(hash, pr.repository().url(), pr.targetRef(), true);\n-            } catch (IOException exception) {\n-                exception.printStackTrace();\n-            }\n+        try {\n+            repository.reset(hash, true);\n+            repository.push(hash, pr.repository().url(), pr.targetRef(), true);\n+        } catch (IOException exception) {\n+            throw new UncheckedIOException(exception);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"}]}