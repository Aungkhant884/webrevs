{"files":[{"patch":"@@ -334,0 +334,4 @@\n+        Hash markMergedHash;\n+        Commit currentPostIntegrateCommit;\n+        Commit lastPostIntegrateCommit;\n+\n@@ -339,1 +343,1 @@\n-            final List<Commit> commits = repository.commits(hash.hex(), 2).asList();\n+            List<Commit> commits = repository.commits(2).asList();\n@@ -341,5 +345,41 @@\n-            \/\/ There is always at least one prior commit before the integrated one\n-            repository.revert(commits.get(1).hash());\n-            repository.addremove();\n-            final Hash resetHash = repository.commit(\"Post Integration Merging of \" + hash.hex(), \"duke\", \"duke@openjdk.org\");\n-            repository.push(resetHash, pr.repository().url(), pr.targetRef(), false);\n+            currentPostIntegrateCommit = isMarkAsMergeCommit(commits.get(0)) ? commits.get(0) : null;\n+            lastPostIntegrateCommit = isMarkAsMergeCommit(commits.get(1)) ? commits.get(1) : null;\n+\n+            \/*\n+             * Not good, have to handle this now, since commits after a post integrate one\n+             * are treated as broken)\n+             *\/\n+            if (lastPostIntegrateCommit != null) {\n+                repository.reset(lastPostIntegrateCommit.parents().get(0), true);\n+                repository.push(lastPostIntegrateCommit.parents().get(0), pr.repository().url(), pr.targetRef(), true);\n+                lastPostIntegrateCommit = null;\n+\n+                \/*\n+                 * In the unlikely and very erroneous case that 2 post integrate commits are\n+                 * back to back getting rid of the first one would remove the one that comes after\n+                 *\/\n+                currentPostIntegrateCommit = null;\n+            } else if (currentPostIntegrateCommit != null) {\n+                if (pr.state() == PullRequest.State.RESOLVED ||\n+                        !currentPostIntegrateCommit.message().get(0).substring(28).equals(hash.hex())) {\n+                    repository.reset(currentPostIntegrateCommit.parents().get(0), true);\n+                    repository.push(currentPostIntegrateCommit.parents().get(0), pr.repository().url(), pr.targetRef(), true);\n+                    currentPostIntegrateCommit = null;\n+                }\n+            }\n+\n+            \/*\n+             * Not needed if Pull Request is already marked as merged, or we are on our\n+             * own post integrate commit\n+             *\/\n+            if (pr.state() != PullRequest.State.RESOLVED && currentPostIntegrateCommit == null) {\n+                commits = repository.commits(hash.hex(), 2).asList();\n+                commits.forEach(commit -> log.fine(commit.toString()));\n+                \/\/ There is always at least one prior commit before the integrated one\n+                repository.revert(commits.get(1).hash());\n+                repository.addremove();\n+                markMergedHash = repository.commit(\"Post Integration Merging of \" + hash.hex(), \"duke\", \"duke@openjdk.org\");\n+                repository.push(markMergedHash, pr.repository().url(), pr.targetRef(), false);\n+            } else {\n+                markMergedHash = (pr.state() == PullRequest.State.RESOLVED ? null : currentPostIntegrateCommit.hash());\n+            }\n@@ -349,0 +389,1 @@\n+\n@@ -350,1 +391,1 @@\n-        pr.setState(PullRequest.State.RESOLVED);\n+        if (pr.state() != PullRequest.State.RESOLVED) pr.setState(PullRequest.State.RESOLVED);\n@@ -362,0 +403,1 @@\n+\n@@ -363,2 +405,4 @@\n-            repository.reset(hash, true);\n-            repository.push(hash, pr.repository().url(), pr.targetRef(), true);\n+            if (markMergedHash != null) {\n+                repository.reset(hash, true);\n+                repository.push(hash, pr.repository().url(), pr.targetRef(), true);\n+            }\n@@ -370,0 +414,7 @@\n+    static boolean isMarkAsMergeCommit(Commit commit) {\n+        return commit.committer().name().equals(\"duke\")\n+                && commit.committer().email().equals(\"duke@openjdk.org\")\n+                && (commit.message().size() == 1 ?\n+                    commit.message().get(0).startsWith(\"Post Integration Merging of \") : false);\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":60,"deletions":9,"binary":false,"changes":69,"status":"modified"}]}