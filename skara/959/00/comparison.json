{"files":[{"patch":"@@ -119,0 +119,3 @@\n+                if (i >= lines.size()) {\n+                    break;\n+                }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageParsers.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,3 +25,0 @@\n-import java.util.List;\n-import java.util.Optional;\n-\n@@ -29,2 +26,0 @@\n-import static org.junit.jupiter.api.Assertions.*;\n-\n@@ -34,0 +29,5 @@\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n@@ -300,0 +300,14 @@\n+\n+    @Test\n+    void parseVersion1TrailingBlankLine() {\n+        var text = List.of(\"01234567: An issue\",\n+                           \"\");\n+        var message = CommitMessageParsers.v1.parse(text);\n+\n+        assertEquals(\"01234567: An issue\", message.title());\n+        assertEquals(List.of(new Issue(\"01234567\", \"An issue\")), message.issues());\n+        assertEquals(List.of(), message.contributors());\n+        assertEquals(List.of(), message.reviewers());\n+        assertEquals(List.of(), message.summaries());\n+        assertEquals(List.of(), message.additional());\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/openjdk\/CommitMessageParsersTests.java","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"}]}