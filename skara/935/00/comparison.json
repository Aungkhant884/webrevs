{"files":[{"patch":"@@ -33,1 +33,1 @@\n-    private final Map<String, Flag> names = new HashMap<String, Flag>();\n+    private final Map<String, Flag> names = new HashMap<>();\n@@ -42,1 +42,1 @@\n-        this.flags = new ArrayList<Flag>(flags);\n+        this.flags = new ArrayList<>(flags);\n","filename":"args\/src\/main\/java\/org\/openjdk\/skara\/args\/ArgumentParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-    private final Map<String, FlagValue> names = new HashMap<String, FlagValue>();\n+    private final Map<String, FlagValue> names = new HashMap<>();\n","filename":"args\/src\/main\/java\/org\/openjdk\/skara\/args\/Arguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-                    var existing = new ArrayList<Mark>(marks.current());\n+                    var existing = new ArrayList<>(marks.current());\n","filename":"bots\/checkout\/src\/main\/java\/org\/openjdk\/skara\/bots\/checkout\/CheckoutBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-                            hourly.put(desc, new HashSet<Integer>());\n+                            hourly.put(desc, new HashSet<>());\n@@ -381,1 +381,1 @@\n-                            daily.put(desc, new HashSet<Integer>());\n+                            daily.put(desc, new HashSet<>());\n@@ -392,1 +392,1 @@\n-                            weekly.put(desc, new HashSet<Integer>());\n+                            weekly.put(desc, new HashSet<>());\n@@ -406,1 +406,1 @@\n-                            monthly.put(desc, new HashSet<Month>());\n+                            monthly.put(desc, new HashSet<>());\n@@ -419,1 +419,1 @@\n-                            yearly.put(desc, new HashSet<Integer>());\n+                            yearly.put(desc, new HashSet<>());\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-                    streamIssues.put(stream, new ArrayList<Issue>());\n+                    streamIssues.put(stream, new ArrayList<>());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/Backports.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-                perOSandArch.put(osAndArch, new ArrayList<String>());\n+                perOSandArch.put(osAndArch, new ArrayList<>());\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            project.container(ImageEnvironment.class, new NamedDomainObjectFactory<ImageEnvironment>() {\n+            project.container(ImageEnvironment.class, new NamedDomainObjectFactory<>() {\n@@ -93,1 +93,1 @@\n-        imageEnvironmentContainer.all(new Action<ImageEnvironment>() {\n+        imageEnvironmentContainer.all(new Action<>() {\n","filename":"buildSrc\/images\/src\/main\/java\/org\/openjdk\/skara\/gradle\/images\/ImagesPlugin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-        var allModules = new ArrayList<String>(uniqueModules);\n+        var allModules = new ArrayList<>(uniqueModules);\n","filename":"buildSrc\/images\/src\/main\/java\/org\/openjdk\/skara\/gradle\/images\/LinkTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                map.put(packageName, new ArrayList<String>());\n+                map.put(packageName, new ArrayList<>());\n@@ -52,2 +52,2 @@\n-    private final List<String> requires = new ArrayList<String>();\n-    private final Map<String, List<String>> opens = new TreeMap<String, List<String>>();\n+    private final List<String> requires = new ArrayList<>();\n+    private final Map<String, List<String>> opens = new TreeMap<>();\n","filename":"buildSrc\/module\/src\/main\/java\/org\/openjdk\/skara\/gradle\/module\/ModuleExtension.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-                    compileJavaTask.doFirst(new Action<Task>() {\n+                    compileJavaTask.doFirst(new Action<>() {\n@@ -67,1 +67,1 @@\n-                    compileTestJavaTask.doFirst(new Action<Task>() {\n+                    compileTestJavaTask.doFirst(new Action<>() {\n@@ -80,1 +80,1 @@\n-                            var opts = new ArrayList<String>(compileTestJavaTask.getOptions().getCompilerArgs());\n+                            var opts = new ArrayList<>(compileTestJavaTask.getOptions().getCompilerArgs());\n@@ -103,1 +103,1 @@\n-                    testTask.doFirst(new Action<Task>() {\n+                    testTask.doFirst(new Action<>() {\n@@ -116,1 +116,1 @@\n-                            var jvmArgs = new ArrayList<String>(testTask.getJvmArgs());\n+                            var jvmArgs = new ArrayList<>(testTask.getJvmArgs());\n","filename":"buildSrc\/module\/src\/main\/java\/org\/openjdk\/skara\/gradle\/module\/ModulePlugin.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final Map<String, Contributor> members = new HashMap<String, Contributor>();\n+    private final Map<String, Contributor> members = new HashMap<>();\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Group.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,4 +35,4 @@\n-    private final Map<String, Member> leaders = new HashMap<String, Member>();\n-    private final Map<String, Member> reviewers = new HashMap<String, Member>();\n-    private final Map<String, Member> committers = new HashMap<String, Member>();\n-    private final Map<String, Member> authors = new HashMap<String, Member>();\n+    private final Map<String, Member> leaders = new HashMap<>();\n+    private final Map<String, Member> reviewers = new HashMap<>();\n+    private final Map<String, Member> committers = new HashMap<>();\n+    private final Map<String, Member> authors = new HashMap<>();\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Project.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-                    corrections.put(hash, new HashMap<String, String>());\n+                    corrections.put(hash, new HashMap<>());\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/debug\/GitOpenJDKImport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        var diff = new TreeSet<T>(git);\n+        var diff = new TreeSet<>(git);\n@@ -62,1 +62,1 @@\n-        diff = new TreeSet<T>(hg);\n+        diff = new TreeSet<>(hg);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/debug\/GitVerifyImport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            return new Pair<T3, T4>(e1, e2);\n+            return new Pair<>(e1, e2);\n@@ -70,1 +70,1 @@\n-        return new TreeSet<T>(s);\n+        return new TreeSet<>(s);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/debug\/SkaraDebugHelp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-            return new Pair<T3, T4>(e1, e2);\n+            return new Pair<>(e1, e2);\n@@ -81,1 +81,1 @@\n-        return new TreeSet<T>(s);\n+        return new TreeSet<>(s);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrHelp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-        Set<String> orgs = new HashSet<String>();\n+        Set<String> orgs = new HashSet<>();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubForgeFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-        Set<String> groups = new HashSet<String>();\n+        Set<String> groups = new HashSet<>();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabForgeFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-        this.entries = new HashMap<String, INI.Value>();\n-        this.subsections = new HashMap<String, Section>();\n+        this.entries = new HashMap<>();\n+        this.subsections = new HashMap<>();\n","filename":"ini\/src\/main\/java\/org\/openjdk\/skara\/ini\/Section.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        issuesToHashes = new HashMap<String, List<Hash>>();\n+        issuesToHashes = new HashMap<>();\n@@ -55,1 +55,1 @@\n-                        issuesToHashes.put(id, new ArrayList<Hash>());\n+                        issuesToHashes.put(id, new ArrayList<>());\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/DuplicateIssuesCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private final Map<URI, Census> censuses = new HashMap<URI, Census>();\n+    private final Map<URI, Census> censuses = new HashMap<>();\n@@ -136,1 +136,1 @@\n-        var iterator = new MapIterator<CommitCheck, Iterator<Issue>>(enabled.iterator(), c -> {\n+        var iterator = new MapIterator<>(enabled.iterator(), c -> {\n@@ -140,1 +140,1 @@\n-        return new FlatMapIterator<Issue>(iterator);\n+        return new FlatMapIterator<>(iterator);\n@@ -197,2 +197,2 @@\n-        return new FlatMapIterator<Issue>(\n-                new MapIterator<Commit, Iterator<Issue>>(commits.iterator(), this::checkCommit));\n+        return new FlatMapIterator<>(\n+                new MapIterator<>(commits.iterator(), this::checkCommit));\n@@ -202,1 +202,1 @@\n-        var iterator = new MapIterator<RepositoryCheck, Iterator<Issue>>(repositoryChecks.iterator(), c -> {\n+        var iterator = new MapIterator<>(repositoryChecks.iterator(), c -> {\n@@ -206,1 +206,1 @@\n-        return new FlatMapIterator<Issue>(iterator);\n+        return new FlatMapIterator<>(iterator);\n@@ -215,1 +215,1 @@\n-        var errors = new ConcatIterator<Issue>(repositoryIssues, commitIssues);\n+        var errors = new ConcatIterator<>(repositoryIssues, commitIssues);\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/JCheck.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-        var missing = new HashMap<String, Integer>(requirements);\n+        var missing = new HashMap<>(requirements);\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/ReviewersCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-                        var removed = new HashSet<String>(hunk.source().lines());\n-                        var added = new HashSet<String>(hunk.target().lines());\n+                        var removed = new HashSet<>(hunk.source().lines());\n+                        var added = new HashSet<>(hunk.target().lines());\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/Utilities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        this.values = new ArrayList<JSONValue>();\n+        this.values = new ArrayList<>();\n@@ -36,1 +36,1 @@\n-        this.values = new ArrayList<JSONValue>(array.length);\n+        this.values = new ArrayList<>(array.length);\n@@ -43,1 +43,1 @@\n-        this.values = new ArrayList<JSONValue>(values);\n+        this.values = new ArrayList<>(values);\n","filename":"json\/src\/main\/java\/org\/openjdk\/skara\/json\/JSONArray.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        this.value = new HashMap<String, JSONValue>();\n+        this.value = new HashMap<>();\n@@ -54,1 +54,1 @@\n-        this.value = new HashMap<String, JSONValue>(map);\n+        this.value = new HashMap<>(map);\n","filename":"json\/src\/main\/java\/org\/openjdk\/skara\/json\/JSONObject.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-        return new ArrayList<String>();\n+        return new ArrayList<>();\n","filename":"process\/src\/main\/java\/org\/openjdk\/skara\/process\/Execution.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-            commitComments.put(hash, new ArrayList<CommitComment>());\n+            commitComments.put(hash, new ArrayList<>());\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,2 +137,2 @@\n-                sourceLines = new ArrayList<String>();\n-                targetLines = new ArrayList<String>();\n+                sourceLines = new ArrayList<>();\n+                targetLines = new ArrayList<>();\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/UnifiedDiffParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-            hunksPerParent.add(new ArrayList<Hunk>());\n+            hunksPerParent.add(new ArrayList<>());\n@@ -106,1 +106,1 @@\n-                linesPerParent.add(new ArrayList<String>());\n+                linesPerParent.add(new ArrayList<>());\n@@ -209,1 +209,1 @@\n-                diffsPerParent.add(new Diff(bases.get(i), head, new ArrayList<Patch>()));\n+                diffsPerParent.add(new Diff(bases.get(i), head, new ArrayList<>()));\n@@ -216,1 +216,1 @@\n-            headersPerParent.add(new ArrayList<PatchHeader>());\n+            headersPerParent.add(new ArrayList<>());\n@@ -244,1 +244,1 @@\n-            hunksPerFilePerParent.add(new ArrayList<List<Hunk>>());\n+            hunksPerFilePerParent.add(new ArrayList<>());\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitCombinedDiffParser.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-    private final List<Process> processes = new ArrayList<Process>();\n-    private final List<List<String>> commands = new ArrayList<List<String>>();\n+    private final List<Process> processes = new ArrayList<>();\n+    private final List<List<String>> commands = new ArrayList<>();\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitCommits.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,2 +35,2 @@\n-    private final List<Process> processes = new ArrayList<Process>();\n-    private final List<List<String>> commands = new ArrayList<List<String>>();;\n+    private final List<Process> processes = new ArrayList<>();\n+    private final List<List<String>> commands = new ArrayList<>();;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgCommits.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -464,1 +464,1 @@\n-        var oldHeads = new HashSet<Hash>(heads());\n+        var oldHeads = new HashSet<>(heads());\n@@ -480,1 +480,1 @@\n-        var newHeads = new HashSet<Hash>(heads());\n+        var newHeads = new HashSet<>(heads());\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private final List<Mark> marks = new ArrayList<Mark>();\n+    private final List<Mark> marks = new ArrayList<>();\n@@ -187,1 +187,1 @@\n-        var missing = new TreeSet<String>(gitTags);\n+        var missing = new TreeSet<>(gitTags);\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/convert\/GitToHgConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -118,2 +118,2 @@\n-    private final Map<Hash, Integer> hgHashesToMarks = new HashMap<Hash, Integer>();\n-    private final Map<Integer, Hash> marksToHgHashes = new HashMap<Integer, Hash>();\n+    private final Map<Hash, Integer> hgHashesToMarks = new HashMap<>();\n+    private final Map<Integer, Hash> marksToHgHashes = new HashMap<>();\n@@ -184,1 +184,1 @@\n-        var contributors = new ArrayList<Author>(contributorsFromCommit);\n+        var contributors = new ArrayList<>(contributorsFromCommit);\n@@ -247,1 +247,1 @@\n-        List<String> body = new ArrayList<String>();\n+        List<String> body = new ArrayList<>();\n@@ -356,1 +356,1 @@\n-                parentHashes = new ArrayList<Hash>();\n+                parentHashes = new ArrayList<>();\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/convert\/HgToGitConverter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-        var worklist = new LinkedList<Hunk>(originalHunks);\n+        var worklist = new LinkedList<>(originalHunks);\n","filename":"webrev\/src\/main\/java\/org\/openjdk\/skara\/webrev\/HunkCoalescer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-        map = new HashMap<String, String>(); \n+        map = new HashMap<>();\n","filename":"webrev\/src\/main\/java\/org\/openjdk\/skara\/webrev\/IndexView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-                        pathsPerCommit.put(commit.hash(), new ArrayList<Path>());\n+                        pathsPerCommit.put(commit.hash(), new ArrayList<>());\n","filename":"webrev\/src\/main\/java\/org\/openjdk\/skara\/webrev\/Webrev.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}