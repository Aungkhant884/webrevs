{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.util.stream.*;\n@@ -65,4 +66,3 @@\n-        var related = Backports.findBackports(issue.get(), true);\n-        var allIssues = new ArrayList<Issue>();\n-        allIssues.add(issue.get());\n-        allIssues.addAll(related);\n+        var allIssues = Stream.concat(Stream.of(issue.get()), Backports.findBackports(issue.get(), true).stream())\n+                              .filter(i -> !i.labels().contains(\"hgupdate-sync-ignore\"))\n+                              .collect(Collectors.toList());\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotUpdateLabelWorkItem.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -144,0 +144,81 @@\n+\n+    @Test\n+    void testIgnored(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var storageFolder = tempFolder.path().resolve(\"storage\");\n+            var issueProject = credentials.getIssueProject();\n+            var syncLabelBot = testBotBuilder(issueProject, storageFolder).create(\"synclabel\", JSON.object());\n+\n+            var issue1 = credentials.createIssue(issueProject, \"Issue 1\");\n+            issue1.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u182\")));\n+            issue1.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+            issue1.setState(RESOLVED);\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+\n+            var issue2 = credentials.createIssue(issueProject, \"Issue 2\");\n+            issue2.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u162\")));\n+            issue2.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue2.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue2, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n+\n+            var issue3 = credentials.createIssue(issueProject, \"Issue 3\");\n+            issue3.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"10\")));\n+            issue3.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue3.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue3, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue3.labels());\n+\n+            var issue4 = credentials.createIssue(issueProject, \"Issue 4\");\n+            issue4.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"11\")));\n+            issue4.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue4.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue4, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n+            assertEquals(List.of(), issue2.labels());\n+            assertEquals(List.of(), issue3.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+\n+            \/\/ Now ignore one of them - it should cause another to change\n+            issue3.addLabel(\"hgupdate-sync-ignore\");\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n+            assertEquals(List.of(), issue2.labels());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labels());\n+            assertEquals(List.of(), issue4.labels());\n+\n+            \/\/ Rearrange it a bit more\n+            var issue5 = credentials.createIssue(issueProject, \"Issue 5\");\n+            issue5.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u192\")));\n+            issue5.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue5.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue5, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync\"), issue5.labels());\n+\n+            \/\/ Now ignore another\n+            issue2.addLabel(\"hgupdate-sync-ignore\");\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labels());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labels());\n+            assertEquals(List.of(), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue5.labels());\n+\n+            \/\/ Now ignore the main issue as well\n+            issue1.addLabel(\"hgupdate-sync-ignore\");\n+\n+            \/\/ This should lead to issue 5 no longer being a sync issue\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labels());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labels());\n+            assertEquals(List.of(), issue4.labels());\n+            assertEquals(List.of(), issue5.labels());\n+        }\n+    }\n","filename":"bots\/synclabel\/src\/test\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotTests.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"modified"}]}