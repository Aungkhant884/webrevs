{"files":[{"patch":"@@ -740,1 +740,1 @@\n-        var repoUrl = pr.repository().webUrl();\n+        var repoUrl = pr.repository().remoteUrl();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -237,0 +237,5 @@\n+    @Override\n+    public URI remoteUrl() {\n+        return null;\n+    }\n+\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -86,0 +86,4 @@\n+    \/**\n+     * Returns a URL suitable for CLI interactions with the repository\n+     *\/\n+    URI remoteUrl();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -261,0 +261,6 @@\n+    @Override\n+    public URI remoteUrl() {\n+        var endpoint = \"\/\" + repository + \".git\";\n+        return gitHubHost.getWebURI(endpoint);\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -290,0 +290,7 @@\n+    @Override\n+    public URI remoteUrl() {\n+        return URIBuilder.base(gitLabHost.getUri())\n+                .setPath(\"\/\" + projectName + \".git\")\n+                .build();\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -202,0 +202,5 @@\n+    @Override\n+    public URI remoteUrl() {\n+        return url();\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}