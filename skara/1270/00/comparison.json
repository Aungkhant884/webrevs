{"files":[{"patch":"@@ -43,0 +43,2 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.RESOLVED_IN_BUILD;\n+\n@@ -260,14 +262,1 @@\n-                    requestedVersion = fixVersions != null ? fixVersions.getOrDefault(branch.name(), null) : null;\n-                    if (requestedVersion == null) {\n-                        try {\n-                            var conf = localRepository.lines(Path.of(\".jcheck\/conf\"), commit.hash());\n-                            if (conf.isPresent()) {\n-                                var parsed = JCheckConfiguration.parse(conf.get());\n-                                var version = parsed.general().version();\n-                                requestedVersion = version.orElse(null);\n-                            }\n-                        } catch (IOException e) {\n-                            throw new RuntimeException(e);\n-                        }\n-                    }\n-\n+                    requestedVersion = getRequestedVersion(localRepository, commit, branch.name());\n@@ -318,1 +307,1 @@\n-                            var oldBuild = issue.properties().getOrDefault(\"customfield_10006\", JSON.of());\n+                            var oldBuild = issue.properties().getOrDefault(RESOLVED_IN_BUILD, JSON.of());\n@@ -320,1 +309,1 @@\n-                                issue.setProperty(\"customfield_10006\", JSON.of(buildName));\n+                                issue.setProperty(RESOLVED_IN_BUILD, JSON.of(buildName));\n@@ -390,13 +379,1 @@\n-                    var requestedVersion = fixVersions != null ? fixVersions.getOrDefault(tagBranch, null) : null;\n-                    if (requestedVersion == null) {\n-                        try {\n-                            var conf = localRepository.lines(Path.of(\".jcheck\/conf\"), commit.hash());\n-                            if (conf.isPresent()) {\n-                                var parsed = JCheckConfiguration.parse(conf.get());\n-                                var version = parsed.general().version();\n-                                requestedVersion = version.orElse(null);\n-                            }\n-                        } catch (IOException e) {\n-                            throw new RuntimeException(e);\n-                        }\n-                    }\n+                    String requestedVersion = getRequestedVersion(localRepository, commit, tagBranch);\n@@ -418,2 +395,2 @@\n-                    \/\/ Check if the build name should be updated\n-                    var oldBuild = issue.properties().getOrDefault(\"customfield_10006\", JSON.of());\n+                    \/\/ Check if the build number should be updated\n+                    var oldBuild = issue.properties().getOrDefault(RESOLVED_IN_BUILD, JSON.of());\n@@ -422,1 +399,1 @@\n-                        issue.setProperty(\"customfield_10006\", JSON.of(newBuild));\n+                        issue.setProperty(RESOLVED_IN_BUILD, JSON.of(newBuild));\n@@ -431,0 +408,17 @@\n+    private String getRequestedVersion(Repository localRepository, Commit commit, String tagBranch) {\n+        var requestedVersion = fixVersions != null ? fixVersions.getOrDefault(tagBranch, null) : null;\n+        if (requestedVersion == null) {\n+            try {\n+                var conf = localRepository.lines(Path.of(\".jcheck\/conf\"), commit.hash());\n+                if (conf.isPresent()) {\n+                    var parsed = JCheckConfiguration.parse(conf.get());\n+                    var version = parsed.general().version();\n+                    requestedVersion = version.orElse(null);\n+                }\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        return requestedVersion;\n+    }\n+\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":26,"deletions":32,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.RESOLVED_IN_BUILD;\n+\n@@ -53,0 +55,1 @@\n+        finalProperties.remove(RESOLVED_IN_BUILD);\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/JbsBackport.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -47,0 +46,2 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.RESOLVED_IN_BUILD;\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.SUBCOMPONENT;\n@@ -537,1 +538,1 @@\n-            assertEquals(\"team\", updatedIssue1.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue1.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -539,1 +540,1 @@\n-            assertEquals(\"team\", updatedIssue2.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue2.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -586,1 +587,1 @@\n-            assertEquals(\"team\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -644,1 +645,1 @@\n-            assertEquals(\"team\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -658,1 +659,1 @@\n-            assertEquals(\"master\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"master\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -668,1 +669,1 @@\n-            assertEquals(\"b04\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b04\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -678,1 +679,1 @@\n-            assertEquals(\"b02\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b02\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -688,1 +689,1 @@\n-            assertEquals(\"b02\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b02\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -732,1 +733,1 @@\n-            assertEquals(\"team\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -745,1 +746,1 @@\n-            assertEquals(\"b110\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b110\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -754,1 +755,1 @@\n-            assertEquals(\"b10\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b10\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -763,1 +764,1 @@\n-            assertEquals(\"b08\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b08\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -820,1 +821,1 @@\n-            assertEquals(\"team\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -822,1 +823,1 @@\n-            assertEquals(\"team\", backportIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", backportIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -838,2 +839,2 @@\n-            assertEquals(\"b110\", updatedIssue.properties().get(\"customfield_10006\").asString());\n-            assertEquals(\"b110\", backportIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b110\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n+            assertEquals(\"b110\", backportIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -849,2 +850,2 @@\n-            assertEquals(\"b10\", updatedIssue.properties().get(\"customfield_10006\").asString());\n-            assertEquals(\"b10\", backportIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b10\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n+            assertEquals(\"b10\", backportIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -860,2 +861,2 @@\n-            assertEquals(\"b08\", updatedIssue.properties().get(\"customfield_10006\").asString());\n-            assertEquals(\"b08\", backportIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b08\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n+            assertEquals(\"b08\", backportIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -905,1 +906,1 @@\n-            assertEquals(\"team\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"team\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -918,1 +919,1 @@\n-            assertEquals(\"b110\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b110\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -940,1 +941,1 @@\n-            assertEquals(\"b110\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b110\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -955,1 +956,1 @@\n-            assertEquals(\"b10\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"b10\", updatedIssue.properties().get(RESOLVED_IN_BUILD).asString());\n@@ -1243,3 +1244,4 @@\n-                                                 Map.of(\"issuetype\", JSON.of(\"Enhancement\"),\n-                                                        \"customfield_10008\", JSON.of(\"java.io\")\n-                                                 ));\n+                    Map.of(\"issuetype\", JSON.of(\"Enhancement\"),\n+                            SUBCOMPONENT, JSON.of(\"java.io\"),\n+                            RESOLVED_IN_BUILD, JSON.of(\"b07\")\n+                    ));\n@@ -1276,1 +1278,2 @@\n-            assertEquals(\"java.io\", backport.properties().get(\"customfield_10008\").asString());\n+            assertEquals(\"java.io\", backport.properties().get(SUBCOMPONENT).asString());\n+            assertFalse(backport.properties().containsKey(RESOLVED_IN_BUILD));\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":33,"deletions":30,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.SUBCOMPONENT;\n+\n@@ -252,1 +254,1 @@\n-            properties.put(\"customfield_10008\", JSON.of(subComponent));\n+            properties.put(SUBCOMPONENT, JSON.of(subComponent));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IssueCommand.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.SUBCOMPONENT;\n@@ -570,1 +571,1 @@\n-            assertEquals(\"java.io\", issue.properties().get(\"customfield_10008\").asString());\n+            assertEquals(\"java.io\", issue.properties().get(SUBCOMPONENT).asString());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.RESOLVED_IN_BUILD;\n@@ -361,1 +362,1 @@\n-            issue2.setProperty(\"customfield_10006\", JSON.of(\"b33\"));\n+            issue2.setProperty(RESOLVED_IN_BUILD, JSON.of(\"b33\"));\n","filename":"bots\/synclabel\/src\/test\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+    exports org.openjdk.skara.issuetracker.jira;\n","filename":"issuetracker\/src\/main\/java\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,4 @@\n+\n+    public static final String RESOLVED_IN_BUILD = \"customfield_10006\";\n+    public static final String SUBCOMPONENT = \"customfield_10008\";\n+\n@@ -242,1 +246,1 @@\n-            case \"customfield_10006\":\n+            case RESOLVED_IN_BUILD:\n@@ -244,1 +248,1 @@\n-            case \"customfield_10008\":\n+            case SUBCOMPONENT:\n@@ -289,1 +293,1 @@\n-        if (name.equals(\"customfield_10006\")) {\n+        if (name.equals(RESOLVED_IN_BUILD)) {\n@@ -297,1 +301,1 @@\n-        if (!name.equals(\"customfield_10008\")) {\n+        if (!name.equals(SUBCOMPONENT)) {\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.RESOLVED_IN_BUILD;\n+\n@@ -76,2 +78,2 @@\n-        if (issue.properties().containsKey(\"customfield_10006\")) {\n-            return JdkVersion.parse(versionString.get(0), issue.properties().get(\"customfield_10006\").asString());\n+        if (issue.properties().containsKey(RESOLVED_IN_BUILD)) {\n+            return JdkVersion.parse(versionString.get(0), issue.properties().get(RESOLVED_IN_BUILD).asString());\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/Backports.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import static org.openjdk.skara.issuetracker.jira.JiraProject.RESOLVED_IN_BUILD;\n@@ -209,1 +210,1 @@\n-                issue.setProperty(\"customfield_10006\", JSON.of(resolvedInBuild));\n+                issue.setProperty(RESOLVED_IN_BUILD, JSON.of(resolvedInBuild));\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}