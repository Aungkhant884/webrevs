{"files":[{"patch":"@@ -170,0 +170,11 @@\n+    \/\/ Additional bot-specific progresses that are not handled by JCheck\n+    private Map<String, Boolean> botSpecificProgresses() {\n+        var ret = new HashMap<String, Boolean>();\n+        if (pr.labelNames().contains(\"csr\")) {\n+            ret.put(\"Change requires a CSR request to be approved\", false);\n+        } else {\n+            ret.put(\"Change doesn't require a CSR request or the CSR request has been approved\", true);\n+        }\n+        return ret;\n+    }\n+\n@@ -178,2 +189,1 @@\n-        return Map.of(\"rejected\", \"The change is currently blocked from integration by a rejection.\",\n-                      \"csr\", \"The change requires a CSR request to be approved.\");\n+        return Map.of(\"rejected\", \"The change is currently blocked from integration by a rejection.\");\n@@ -346,1 +356,1 @@\n-    private String getChecksList(PullRequestCheckIssueVisitor visitor, boolean isCleanBackport) {\n+    private String getChecksList(PullRequestCheckIssueVisitor visitor, boolean isCleanBackport, Map<String, Boolean> additionalProgresses) {\n@@ -348,0 +358,1 @@\n+        checks.putAll(additionalProgresses);\n@@ -429,2 +440,2 @@\n-                                    List<String> additionalErrors, List<String> integrationBlockers,\n-                                    boolean isCleanBackport) {\n+                                    List<String> additionalErrors, Map<String, Boolean> additionalProgresses,\n+                                    List<String> integrationBlockers, boolean isCleanBackport) {\n@@ -434,1 +445,1 @@\n-        progressBody.append(getChecksList(visitor, isCleanBackport));\n+        progressBody.append(getChecksList(visitor, isCleanBackport, additionalProgresses));\n@@ -901,0 +912,1 @@\n+            Map<String, Boolean> additionalProgresses = Map.of();\n@@ -922,0 +934,1 @@\n+                additionalProgresses = botSpecificProgresses();\n@@ -929,1 +942,2 @@\n-            var statusMessage = getStatusMessage(comments, activeReviews, visitor, additionalErrors, integrationBlockers, isCleanBackport);\n+            var statusMessage = getStatusMessage(comments, activeReviews, visitor, additionalErrors,\n+                                                additionalProgresses, integrationBlockers, isCleanBackport);\n@@ -943,0 +957,1 @@\n+                                      !additionalProgresses.containsValue(false) &&\n@@ -948,0 +963,1 @@\n+                                      !additionalProgresses.containsValue(false) &&\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -534,0 +534,3 @@\n+            \/\/ The body should contain the progress about CSR request\n+            assertTrue(pr.body().contains(\"- [x] Change doesn't require a CSR request or the CSR request has been approved\"));\n+\n@@ -551,2 +554,2 @@\n-            \/\/ The body should contain a note about why\n-            assertTrue(pr.body().contains(\"change requires a CSR request to be approved\"));\n+            \/\/ The body should contain the progress about CSR request\n+            assertTrue(pr.body().contains(\"- [ ] Change requires a CSR request to be approved\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}