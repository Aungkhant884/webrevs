{"files":[{"patch":"@@ -41,0 +41,2 @@\n+    private final static Pattern prefixPattern = Pattern.compile(\"([a-z]+)([0-9.]+)$\");\n+\n@@ -66,0 +68,6 @@\n+            var prefixMatcher = prefixPattern.matcher(raw);\n+            String prefix = null;\n+            if (prefixMatcher.matches()) {\n+                prefix = prefixMatcher.group(1);\n+                raw = prefixMatcher.group(2);\n+            }\n@@ -76,0 +84,4 @@\n+\n+            if (prefix != null) {\n+                finalComponents.set(0, prefix + finalComponents.get(0));\n+            }\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -68,0 +68,6 @@\n+    @Test\n+    void openjfx11() {\n+        assertEquals(List.of(\"openjfx11\", \"0\", \"12\"), from(\"openjfx11.0.12\").components());\n+        assertEquals(List.of(\"openjfx17\", \"3\", \"4\", \"5\", \"6\"), from(\"openjfx17.3.4.5.6\").components());\n+    }\n+\n@@ -86,0 +92,1 @@\n+        assertEquals(-1, from(\"openjfx11.0.12\").compareTo(from(\"openjfx17.3.4.5.6\")));\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/JdkVersionTests.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}