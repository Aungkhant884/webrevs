{"files":[{"patch":"@@ -41,0 +41,3 @@\n+    \/\/ Match a version string symbolizing some future, but yet undefined, update of a major version\n+    private final static Pattern futureUpdatePattern = Pattern.compile(\"([1-9][0-9]*u)(-([a-z0-9]+))?$\");\n+\n@@ -60,0 +63,13 @@\n+        \/\/ Check special placeholder versions\n+        if (finalComponents.isEmpty()) {\n+            var matcher = futureUpdatePattern.matcher(raw);\n+            if (matcher.matches()) {\n+                finalComponents.add(matcher.group(1));\n+                \/\/ Group 3 is the opt field\n+                if (matcher.group(3) != null) {\n+                    finalComponents.add(null);\n+                    finalComponents.add(matcher.group(3));\n+                }\n+            }\n+        }\n+\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -794,0 +794,14 @@\n+\n+    \/**\n+     * Verify that a release such as 16u-cpu does not ever get labeled.\n+     *\/\n+    @Test\n+    void uCpu(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"17\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"16\", \"16.0.2\", \"16u-cpu\");\n+            backports.assertLabeled(\"16.0.2\", \"17\");\n+        }\n+    }\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -74,0 +74,9 @@\n+\n+    @Test\n+    void futureUpdates() {\n+        assertEquals(List.of(\"16u\"), from(\"16u\").components());\n+        var jdk16uCpu = from(\"16u-cpu\");\n+        assertEquals(List.of(\"16u\"), jdk16uCpu.components());\n+        assertEquals(\"cpu\", jdk16uCpu.opt().orElseThrow());\n+    }\n+\n@@ -95,0 +104,7 @@\n+    @Test\n+    void cpuOrder() {\n+        assertEquals(-1, from(\"16\").compareTo(from(\"16u-cpu\")));\n+        assertEquals(-1, from(\"16.0.2\").compareTo(from(\"16u-cpu\")));\n+        assertEquals(1, from(\"17\").compareTo(from(\"16u-cpu\")));\n+    }\n+\n@@ -99,2 +115,0 @@\n-        assertEquals(Optional.empty(), JdkVersion.parse(\"12u-cpu\"));\n-        assertEquals(Optional.empty(), JdkVersion.parse(\"13u-open\"));\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/JdkVersionTests.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"}]}