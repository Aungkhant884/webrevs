{"files":[{"patch":"@@ -88,0 +88,2 @@\n+    private static final Pattern inReplyToPattern = Pattern.compile(\"<(.*@.*?)>\");\n+\n@@ -95,6 +97,18 @@\n-        for (var email : emails) {\n-            if (email.hasHeader(\"In-Reply-To\")) {\n-                var inReplyTo = EmailAddress.parse(email.headerValue(\"In-Reply-To\"));\n-                if (!idToMail.containsKey(inReplyTo)) {\n-                    log.info(\"Can't find parent: \" + inReplyTo + \" - discarding\");\n-                } else {\n+        var outOfOrder = new ArrayList<Email>();\n+        var lastOutOfOrderCount = -1;\n+        while (outOfOrder.size() != lastOutOfOrderCount) {\n+            lastOutOfOrderCount = outOfOrder.size();\n+            outOfOrder.clear();\n+\n+            for (var email : emails) {\n+                if (email.hasHeader(\"In-Reply-To\")) {\n+                    var inReplyToMatcher = inReplyToPattern.matcher(email.headerValue(\"In-Reply-To\"));\n+                    if (!inReplyToMatcher.find()) {\n+                        log.info(\"Cannot parse In-Reply-To header: \" + email.headerValue(\"In-Reply-To\"));\n+                        continue;\n+                    }\n+                    var inReplyTo = EmailAddress.from(inReplyToMatcher.group(1));\n+                    if (!idToMail.containsKey(inReplyTo)) {\n+                        log.info(\"Can't find parent: \" + inReplyTo + \" - discarding\");\n+                        continue;\n+                    }\n@@ -103,1 +117,2 @@\n-                        log.info(\"Can't find conversation: \" + inReplyTo + \" - discarding\");\n+                        outOfOrder.add(email);\n+                        log.info(\"Can't find conversation: \" + inReplyTo + \" - possibly out of order\");\n@@ -112,0 +127,3 @@\n+        if (!outOfOrder.isEmpty()) {\n+            log.info(\"Out of order remaining: \" + outOfOrder.size());\n+        }\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/Mbox.java","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.junit.jupiter.api.Test;\n@@ -28,2 +29,0 @@\n-import org.junit.jupiter.api.Test;\n-\n@@ -35,1 +34,2 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -134,4 +134,5 @@\n-            var sentMail = Email.create(sender, \"Subject\", \"From is an odd way to start\\n\" +\n-                    \"From may also be the second row\\n\" +\n-                    \">>From as a quote\\n\" +\n-                    \"And From in the middle\").build();\n+            var sentMail = Email.create(sender, \"Subject\", \"\"\"\n+                    From is an odd way to start\n+                    From may also be the second row\n+                    >>From as a quote\n+                    And From in the middle\"\"\").build();\n@@ -166,11 +167,11 @@\n-            Files.writeString(rawMbox,\n-                              \"From test at example.com  Wed Aug 21 17:22:50 2019\\n\" +\n-                                      \"From: test at example.com (test at example.com)\\n\" +\n-                                      \"Date: Wed, 21 Aug 2019 17:22:50 +0000\\n\" +\n-                                      \"Subject: this is a test\\n\" +\n-                                      \"Message-ID: <abc123@example.com>\\n\" +\n-                                      \"\\n\" +\n-                                      \"Sometimes there are unencoded from lines as well\\n\" +\n-                                      \"\\n\" +\n-                                      \"From this point onwards, it may be hard to parse this\\n\" +\n-                                      \"\\n\", StandardCharsets.UTF_8);\n+            Files.writeString(rawMbox, \"\"\"\n+                                      From test at example.com  Wed Aug 21 17:22:50 2019\n+                                      From: test at example.com (test at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:22:50 +0000\n+                                      Subject: this is a test\n+                                      Message-ID: <abc123@example.com>\n+\n+                                      Sometimes there are unencoded from lines as well\n+\n+                                      From this point onwards, it may be hard to parse this\n+                                      \"\"\", StandardCharsets.UTF_8);\n@@ -187,0 +188,74 @@\n+\n+    @Test\n+    void replyToWithExtra() throws IOException {\n+        try (var folder = new TemporaryDirectory()) {\n+            var rawMbox = folder.path().resolve(\"test.mbox\");\n+            Files.writeString(rawMbox, \"\"\"\n+                                      From test at example.com  Wed Aug 21 17:22:50 2019\n+                                      From: test at example.com (test at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:22:50 +0000\n+                                      Subject: this is a test\n+                                      Message-ID: <abc123@example.com>\n+\n+                                      First message\n+\n+                                      From test2 at example.com  Wed Aug 21 17:32:50 2019\n+                                      From: test2 at example.com (test2 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:32:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <abc123@example.com> (This be a reply)\n+                                      Message-ID: <def456@example.com>\n+\n+                                      Second message\n+                                      \"\"\",\n+                              StandardCharsets.UTF_8);\n+            var mbox = MailingListServerFactory.createMboxFileServer(folder.path());\n+            var list = mbox.getList(\"test\");\n+            var conversations = list.conversations(Duration.ofDays(365 * 100));\n+            assertEquals(1, conversations.size());\n+            var conversation = conversations.get(0);\n+            assertEquals(2, conversation.allMessages().size());\n+        }\n+    }\n+\n+    @Test\n+    void replyOutOfOrder() throws IOException {\n+        try (var folder = new TemporaryDirectory()) {\n+            var rawMbox = folder.path().resolve(\"test.mbox\");\n+            Files.writeString(rawMbox, \"\"\"\n+                                      From test at example.com  Wed Aug 21 17:22:50 2019\n+                                      From: test at example.com (test at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:22:50 +0000\n+                                      Subject: this is a test\n+                                      Message-ID: <abc123@example.com>\n+\n+                                      First message\n+\n+                                      From test3 at example.com  Wed Aug 21 17:42:50 2019\n+                                      From: test3 at example.com (test3 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:42:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <def456@example.com>\n+                                      Message-ID: <ghi789@example.com>\n+\n+                                      Third message\n+\n+                                      From test2 at example.com  Wed Aug 21 17:32:50 2019\n+                                      From: test2 at example.com (test2 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:32:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <abc123@example.com> (This be a reply)\n+                                      Message-ID: <def456@example.com>\n+\n+                                      Second message\n+                                      \"\"\",\n+                              StandardCharsets.UTF_8);\n+            var mbox = MailingListServerFactory.createMboxFileServer(folder.path());\n+            var list = mbox.getList(\"test\");\n+            var conversations = list.conversations(Duration.ofDays(365 * 100));\n+            assertEquals(1, conversations.size());\n+            var conversation = conversations.get(0);\n+            assertEquals(3, conversation.allMessages().size());\n+        }\n+    }\n+\n","filename":"mailinglist\/src\/test\/java\/org\/openjdk\/skara\/mailinglist\/MboxTests.java","additions":93,"deletions":18,"binary":false,"changes":111,"status":"modified"}]}