{"files":[{"patch":"@@ -26,1 +26,1 @@\n-import org.openjdk.skara.forge.PullRequest;\n+import org.openjdk.skara.forge.*;\n@@ -29,1 +29,2 @@\n-import org.openjdk.skara.test.HostCredentials;\n+import org.openjdk.skara.test.*;\n+import org.openjdk.skara.vcs.Repository;\n@@ -32,0 +33,1 @@\n+import java.net.URI;\n@@ -44,0 +46,5 @@\n+    private ArchiveItem fromPullRequest(PullRequest pr, Repository repo) throws IOException {\n+        var base = repo.resolve(\"master\").orElseThrow();\n+        return ArchiveItem.from(pr, repo, null, URI.create(\"http:\/\/www.example.com\"), \"\", null, null, ZonedDateTime.now(), ZonedDateTime.now(), base, base, \"\", \"\");\n+    }\n+\n@@ -50,1 +57,2 @@\n-        try (var credentials = new HostCredentials(testInfo)) {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n@@ -52,0 +60,1 @@\n+            var localRepo = CheckableRepository.init(tempFolder.path(), repo.repositoryType());\n@@ -61,0 +70,1 @@\n+            var a0 = fromPullRequest(pr, localRepo);\n@@ -64,1 +74,1 @@\n-            assertEquals(a2, ArchiveItem.findParent(List.of(a1, a2), createComment(user3, \"Plain reply\")));\n+            assertEquals(a0, ArchiveItem.findParent(List.of(a0, a1, a2), createComment(user3, \"Plain unrelated reply\")));\n@@ -66,3 +76,3 @@\n-            assertEquals(a1, ArchiveItem.findParent(List.of(a1, a2), createComment(user3, \"> First comment\\n\\nI agree\")));\n-            assertEquals(a1, ArchiveItem.findParent(List.of(a1, a2), createComment(user3, \"> First comment\\n>with two lines\\n\\nI agree\")));\n-            assertEquals(a1, ArchiveItem.findParent(List.of(a1, a2), createComment(user3, \"\\n> First comment\\n\\nI agree\")));\n+            assertEquals(a1, ArchiveItem.findParent(List.of(a0, a1, a2), createComment(user3, \"> First comment\\n\\nI agree\")));\n+            assertEquals(a1, ArchiveItem.findParent(List.of(a0, a1, a2), createComment(user3, \"> First comment\\n>with two lines\\n\\nI agree\")));\n+            assertEquals(a1, ArchiveItem.findParent(List.of(a0, a1, a2), createComment(user3, \"\\n> First comment\\n\\nI agree\")));\n@@ -70,2 +80,2 @@\n-            assertEquals(a1, ArchiveItem.findParent(List.of(a1, a2), createComment(user3, \"@user1 I agree\")));\n-            assertEquals(a1, ArchiveItem.findParent(List.of(a1, a2), createComment(user3, \"@user1\\nI agree\")));\n+            assertEquals(a1, ArchiveItem.findParent(List.of(a0, a1, a2), createComment(user3, \"@user1 I agree\")));\n+            assertEquals(a1, ArchiveItem.findParent(List.of(a0, a1, a2), createComment(user3, \"@user1\\nI agree\")));\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveItemTests.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"}]}