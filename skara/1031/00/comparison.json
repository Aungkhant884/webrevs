{"files":[{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.pr;\n+\n+import org.openjdk.skara.bot.WorkItem;\n+import org.openjdk.skara.forge.HostedRepository;\n+\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+class CommitCommentsWorkItem implements WorkItem {\n+    private final PullRequestBot bot;\n+    private final HostedRepository repo;\n+\n+    private static final ConcurrentHashMap<String, Boolean> processed = new ConcurrentHashMap<>();\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots.pr\");\n+\n+    CommitCommentsWorkItem(PullRequestBot bot, HostedRepository repo) {\n+        this.bot = bot;\n+        this.repo = repo;\n+    }\n+\n+    @Override\n+    public boolean concurrentWith(WorkItem other) {\n+        return true;\n+    }\n+\n+    @Override\n+    public Collection<WorkItem> run(Path scratchPath) {\n+        log.info(\"Looking for recent commit comments for repository \" + repo.name());\n+\n+        return repo.recentCommitComments()\n+                   .stream()\n+                   .filter(cc -> !processed.containsKey(cc.id()))\n+                   .map(cc -> {\n+                       processed.put(cc.id(), true);\n+                       return new CommitCommandWorkItem(bot, cc, e -> processed.remove(cc.id()));\n+                   })\n+                   .collect(Collectors.toList());\n+\n+    }\n+}\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommentsWorkItem.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -66,1 +66,0 @@\n-    private final ConcurrentHashMap<String, Boolean> processedCommitComments;\n@@ -103,1 +102,0 @@\n-        processedCommitComments = new ConcurrentHashMap<>();\n@@ -155,1 +153,1 @@\n-    private List<WorkItem> getWorkItems(List<PullRequest> pullRequests, List<CommitComment> commitComments) {\n+    private List<WorkItem> getWorkItems(List<PullRequest> pullRequests) {\n@@ -157,0 +155,1 @@\n+        ret.add(new CommitCommentsWorkItem(this, remoteRepo));\n@@ -172,6 +171,0 @@\n-        for (var commitComment : commitComments) {\n-            processedCommitComments.put(commitComment.id(), true);\n-            ret.add(new CommitCommandWorkItem(this, commitComment,\n-                                              e -> processedCommitComments.remove(commitComment.id())));\n-        }\n-\n@@ -193,6 +186,1 @@\n-        var commitComments = remoteRepo.recentCommitComments()\n-                                       .stream()\n-                                       .filter(cc -> !processedCommitComments.containsKey(cc.id()))\n-                                       .collect(Collectors.toList());\n-\n-        return getWorkItems(prs, commitComments);\n+        return getWorkItems(prs);\n@@ -208,1 +196,1 @@\n-        return getWorkItems(webHook.get().updatedPullRequests(), List.of());\n+        return getWorkItems(webHook.get().updatedPullRequests());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-    private int nextCommitCommentId;\n@@ -53,1 +52,0 @@\n-        nextCommitCommentId = 0;\n@@ -225,2 +223,0 @@\n-        var id = nextCommitCommentId;\n-        nextCommitCommentId += 1;\n@@ -228,0 +224,1 @@\n+        var id = createdAt.toInstant().toString();\n@@ -233,1 +230,1 @@\n-        var comment = new CommitComment(hash, null, -1, Integer.toString(id), body, host.currentUser(), createdAt, createdAt);\n+        var comment = new CommitComment(hash, null, -1, id, body, host.currentUser(), createdAt, createdAt);\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}