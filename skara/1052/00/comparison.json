{"files":[{"patch":"@@ -60,0 +60,1 @@\n+    void push(Tag tag, URI uri, boolean force) throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -587,0 +587,10 @@\n+    @Override\n+    public void push(Tag tag, URI uri, boolean force) throws IOException {\n+        var refspec = force ? \"+\" : \"\";\n+        refspec += \"refs\/tags\/\" + tag.name() + \":refs\/tags\/\" + tag.name();\n+\n+        try (var p = capture(\"git\", \"push\", uri.toString(), refspec)) {\n+            await(p);\n+        }\n+    }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -571,0 +571,13 @@\n+        }\n+    }\n+\n+    @Override\n+    public void push(Tag tag, URI uri, boolean force) throws IOException {\n+        var cmd = new ArrayList<>(List.of(\"hg\", \"push\"));\n+        if (force) {\n+            cmd.add(\"--force\");\n+        }\n+        cmd.add(tag.name());\n+        cmd.add(uri.toString());\n+        try (var p = capture(cmd)) {\n+            await(p);\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2891,0 +2891,45 @@\n+\n+    @Test\n+    void testTagPush() throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var upstream = Repository.init(dir.path(), VCS.GIT);\n+\n+            Files.write(upstream.root().resolve(\".git\").resolve(\"config\"),\n+                        List.of(\"[receive]\", \"denyCurrentBranch=ignore\"),\n+                        WRITE, APPEND);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            upstream.add(readme);\n+            var initialCommit = upstream.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            try (var dir2 = new TemporaryDirectory()) {\n+                var downstream = Repository.init(dir2.path(), VCS.GIT);\n+\n+                 \/\/ note: forcing unix path separators for URI\n+                var upstreamURI = URI.create(\"file:\/\/\/\" + dir.toString().replace('\\\\', '\/'));\n+\n+                var fetchHead = downstream.fetch(upstreamURI, downstream.defaultBranch().name());\n+                downstream.checkout(fetchHead, false);\n+\n+                var downstreamReadme = dir2.path().resolve(\"README\");\n+                Files.write(downstreamReadme, List.of(\"Downstream change\"), WRITE, APPEND);\n+\n+                downstream.add(downstreamReadme);\n+                var head = downstream.commit(\"Modify README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+                var tag = downstream.tag(initialCommit, \"v1.0\", \"Added tag v1.0\", \"duke\", \"duke@openjdk.org\");\n+\n+                downstream.push(tag, upstreamURI, false);\n+            }\n+\n+            upstream.checkout(upstream.resolve(upstream.defaultBranch().name()).get(), false);\n+\n+            var commits = upstream.commits().asList();\n+            assertEquals(1, commits.size());\n+            var tags = upstream.tags();\n+            assertEquals(1, tags.size());\n+            assertEquals(\"v1.0\", tags.get(0).name());\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"modified"}]}