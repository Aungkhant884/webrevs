{"files":[{"patch":"@@ -1,1 +1,9 @@\n-name: Build and test\n+#\n+# The pre-submit tests will only runs for forks of the TARGET_PROJECT defined below. This is set to \"skara\" by default,\n+# and can be changed by downstream projects if they also want to run pre-submit tests.\n+#\n+# The tests will attempt to merge the latest commits from TARGET_BRANCH before executing, to ensure that what is tested\n+# is as close as possible to what the final integration result will be. This is set to \"master\" by default, and can\n+# be changed by downstream projects that utilize multiple branches in order to select the correct one.\n+#\n+name: Pre-submit tests\n@@ -3,1 +11,5 @@\n-on: [push, pull_request]\n+on:\n+  push:\n+    branches-ignore:\n+      - master\n+      - pr\/*\n@@ -6,0 +18,46 @@\n+  prerequisites:\n+    name: Prerequisites\n+    runs-on: \"ubuntu-latest\"\n+    env:\n+      TARGET_PROJECT: skara\n+      TARGET_BRANCH: master\n+    outputs:\n+      should_run: ${{ steps.check_submit.outputs.should_run }}\n+      fetch_target_command: ${{ steps.merge_target.outputs.command }}\n+      merge_target_command: ${{ steps.try_merge_target.outputs.command }}\n+\n+    steps:\n+      - name: Determine target project name (fork source)\n+        id: upstream_repo\n+        uses: actions\/github-script@v3\n+        with:\n+          result-encoding: string\n+          script: \"return (await github.repos.get( {owner: context.repo.owner, repo: context.repo.repo })).data.source.name\"\n+\n+      - name: Check if submit tests should actually run\n+        id: check_submit\n+        run: echo \"::set-output name=should_run::${{ env.TARGET_PROJECT == steps.upstream_repo.outputs.result }}\"\n+\n+      - name: Checkout the source\n+        uses: actions\/checkout@v2\n+        with:\n+          fetch-depth: 1000\n+        if: steps.check_submit.outputs.should_run != 'false'\n+\n+      - name: Determine merge target hash\n+        id: merge_target\n+        run: |\n+          git fetch https:\/\/github.com\/openjdk\/${{ steps.upstream_repo.outputs.result }} ${TARGET_BRANCH}\n+          echo \"::set-output name=hash::`git rev-parse FETCH_HEAD`\"\n+          echo \"::set-output name=command::git fetch https:\/\/github.com\/openjdk\/${{ steps.upstream_repo.outputs.result }} ${TARGET_BRANCH}\"\n+        if: steps.check_submit.outputs.should_run != 'false'\n+\n+      - name: Determine merge strategy\n+        id: try_merge_target\n+        run: >\n+          (git -c user.name=\"presubmit\" -c user.email=\"presubmit@github.actions\" merge --no-edit ${{ steps.merge_target.outputs.hash }} &&\n+            echo \"::set-output name=command::git -c user.name=\"presubmit\" -c user.email=\"presubmit@github.actions\" merge --no-edit ${{ steps.merge_target.outputs.hash }}\") ||\n+          (git merge --abort && git -c user.name=\"presubmit\" -c user.email=\"presubmit@github.actions\" rebase ${{ steps.merge_target.outputs.hash }} &&\n+            echo \"::set-output name=command::git -c user.name=\"presubmit\" -c user.email=\"presubmit@github.actions\" rebase ${{ steps.merge_target.outputs.hash }}\") ||\n+          echo \"::set-output name=command::echo There are merge conflicts with the target that will have to be resolved before integration\"\n+\n@@ -8,1 +66,4 @@\n-    runs-on: 'ubuntu-20.04'\n+    runs-on: \"ubuntu-20.04\"\n+    needs: prerequisites\n+    if: needs.prerequisites.outputs.should_run\n+\n@@ -10,3 +71,12 @@\n-    - uses: actions\/checkout@v1\n-    - name: Build and test\n-      run: sh gradlew test --info --stacktrace\n+      - name: Checkout the source\n+        uses: actions\/checkout@v2\n+        with:\n+          fetch-depth: 1000\n+\n+      - name: Merge latest changes from target branch\n+        run: |\n+          ${{ needs.prerequisites.outputs.fetch_target_command }}\n+          ${{ needs.prerequisites.outputs.merge_target_command }}\n+\n+      - name: Build and test\n+        run: sh gradlew test --info --stacktrace\n@@ -16,1 +86,3 @@\n-    runs-on: 'macos-10.15'\n+    runs-on: \"macos-10.15\"\n+    needs: prerequisites\n+\n@@ -18,5 +90,15 @@\n-    - uses: actions\/checkout@v1\n-    - name: Install Mercurial\n-      run: brew install mercurial\n-    - name: Build and test\n-      run: sh gradlew test --info --stacktrace\n+      - name: Checkout the source\n+        uses: actions\/checkout@v2\n+        with:\n+          fetch-depth: 1000\n+\n+      - name: Merge latest changes from target branch\n+        run: |\n+          ${{ needs.prerequisites.outputs.fetch_target_command }}\n+          ${{ needs.prerequisites.outputs.merge_target_command }}\n+\n+      - name: Install Mercurial\n+        run: brew install mercurial\n+\n+      - name: Build and test\n+        run: sh gradlew test --info --stacktrace\n@@ -26,1 +108,3 @@\n-    runs-on: 'windows-2019'\n+    runs-on: \"windows-2019\"\n+    needs: prerequisites\n+\n@@ -28,4 +112,13 @@\n-    - uses: actions\/checkout@v1\n-    - name: Build and test\n-      run: gradlew.bat test --info --stacktrace\n-      shell: cmd\n+      - name: Checkout the source\n+        uses: actions\/checkout@v2\n+        with:\n+          fetch-depth: 1000\n+\n+      - name: Merge latest changes from target branch\n+        run: |\n+          ${{ needs.prerequisites.outputs.fetch_target_command }}\n+          ${{ needs.prerequisites.outputs.merge_target_command }}\n+\n+      - name: Build and test\n+        run: gradlew.bat test --info --stacktrace\n+        shell: cmd\n","filename":".github\/workflows\/ci.yml","additions":110,"deletions":17,"binary":false,"changes":127,"status":"modified"}]}