{"files":[{"patch":"@@ -45,2 +45,4 @@\n-                .orElse(pr.repository().fileContents(\".jcheck\/conf\", pr.targetRef())\n-                        .orElseThrow(() -> new RuntimeException(\"Could not find .jcheck\/conf in neither src or target of PR \" + pr)));\n+                .orElse(pr.repository().fileContents(\".jcheck\/conf\", pr.targetRef()).orElse(null));\n+        if(confFile == null){\n+            return Optional.empty();\n+        }\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/BotUtils.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1126,10 +1126,2 @@\n-\n-            JdkVersion version = null;\n-            try {\n-                version = BotUtils.getVersion(pr).orElse(null);\n-            } catch (Exception e) {\n-            }\n-            \/\/ issues without CSR issues and JEP issues\n-            var issues = issues();\n-            var csrIssueTrackerIssues = getCsrIssueTrackerIssues(issues, version);\n-\n+            boolean needUpdateAdditionalProgresses = false;\n+            boolean sourceBranchJCheckConfValid = true;\n@@ -1161,0 +1153,1 @@\n+                        sourceBranchJCheckConfValid = false;\n@@ -1164,0 +1157,11 @@\n+                needUpdateAdditionalProgresses = true;\n+            }\n+\n+            JdkVersion version = null;\n+            if (sourceBranchJCheckConfValid) {\n+                version = BotUtils.getVersion(pr).orElse(null);\n+            }\n+            \/\/ issues without CSR issues and JEP issues\n+            var issues = issues();\n+            var csrIssueTrackerIssues = getCsrIssueTrackerIssues(issues, version);\n+            if (needUpdateAdditionalProgresses) {\n@@ -1166,0 +1170,1 @@\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2336,0 +2336,8 @@\n+            \/\/ Restore .jcheck\/conf in source branch\n+            localRepo.checkout(editHash);\n+            Files.createDirectories(tempFolder.path().resolve(\".jcheck\"));\n+            writeToCheckConf(checkConf);\n+            localRepo.add(checkConf);\n+            var restoreEditHash = localRepo.commit(\"restore source branch conf\", \"testauthor\", \"ta@none.none\");\n+            localRepo.push(restoreEditHash, author.url(), \"edit\", true);\n+\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}