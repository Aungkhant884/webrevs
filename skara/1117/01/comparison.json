{"files":[{"patch":"@@ -26,1 +26,1 @@\n-import org.openjdk.skara.mailinglist.MailingList;\n+import org.openjdk.skara.mailinglist.MailingListReader;\n@@ -34,1 +34,1 @@\n-    private final MailingList list;\n+    private final MailingListReader list;\n@@ -36,1 +36,1 @@\n-    ArchiveReaderWorkItem(MailingListArchiveReaderBot bot, MailingList list) {\n+    ArchiveReaderWorkItem(MailingListArchiveReaderBot bot, MailingListReader list) {\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveReaderWorkItem.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,2 @@\n-import java.nio.file.Path;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.*;\n@@ -174,13 +175,0 @@\n-    private List<Email> parseArchive(MailingList archive) {\n-        var conversations = archive.conversations(Duration.ofDays(365));\n-\n-        if (conversations.size() == 0) {\n-            return new ArrayList<>();\n-        } else if (conversations.size() == 1) {\n-            var conversation = conversations.get(0);\n-            return conversation.allMessages();\n-        } else {\n-            throw new RuntimeException(\"Something is wrong with the mbox\");\n-        }\n-    }\n-\n@@ -258,3 +246,8 @@\n-        var mbox = MailingListServerFactory.createMboxFileServer(mboxBasePath);\n-        var reviewArchiveList = mbox.getList(pr.id());\n-        var sentMails = parseArchive(reviewArchiveList);\n+\n+        var sentMails = new ArrayList<Email>();\n+        try {\n+            var archiveContents = Files.readString(mboxBasePath.resolve(pr.id() + \".mbox\"), StandardCharsets.UTF_8);\n+            sentMails.addAll(Mbox.splitMbox(archiveContents, bot.emailAddress()));\n+        } catch (IOException ignored) {\n+        }\n+\n@@ -337,2 +330,0 @@\n-            var list = listServer.getList(recipients.get(0).toString());\n-\n@@ -385,1 +376,7 @@\n-            newMails.forEach(reviewArchiveList::post);\n+            var mbox = MailingListServerFactory.createMboxFileServer(mboxBasePath);\n+            for (var newMail : newMails) {\n+                var forArchiving = Email.from(newMail)\n+                                        .recipient(EmailAddress.from(pr.id() + \"@mbox\"))\n+                                        .build();\n+                mbox.post(forArchiving);\n+            }\n@@ -399,1 +396,1 @@\n-                list.post(filteredEmail);\n+                listServer.post(filteredEmail);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private final Set<MailingList> lists;\n+    private final MailingListReader list;\n@@ -48,1 +48,1 @@\n-    MailingListArchiveReaderBot(EmailAddress archivePoster, Set<MailingList> lists, Set<HostedRepository> repositories) {\n+    MailingListArchiveReaderBot(EmailAddress archivePoster, MailingListReader list, Set<HostedRepository> repositories) {\n@@ -50,1 +50,1 @@\n-        this.lists = lists;\n+        this.list = list;\n@@ -134,5 +134,3 @@\n-        var readerItems = lists.stream()\n-                               .map(list -> new ArchiveReaderWorkItem(this, list))\n-                               .collect(Collectors.toList());\n-\n-        var ret = new ArrayList<WorkItem>(readerItems);\n+        var readerItems = new ArchiveReaderWorkItem(this, list);\n+        var ret = new ArrayList<WorkItem>();\n+        ret.add(readerItems);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListArchiveReaderBot.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,1 +91,0 @@\n-        var listNamesForReading = new HashSet<EmailAddress>();\n@@ -102,0 +101,1 @@\n+        var mailmanServer = MailingListServerFactory.createMailmanServer(listArchive, listSmtp, Duration.ZERO);\n@@ -112,0 +112,1 @@\n+\n@@ -113,0 +114,12 @@\n+            if (!repoConfig.contains(\"bidirectional\") || repoConfig.get(\"bidirectional\").asBoolean()) {\n+                var listNamesForReading = new HashSet<EmailAddress>();\n+                for (var list : lists) {\n+                    listNamesForReading.add(list.list());\n+                }\n+                var listsForReading = listNamesForReading.stream()\n+                                                         .map(EmailAddress::localPart)\n+                                                         .collect(Collectors.toList());\n+                var bot = new MailingListArchiveReaderBot(from, mailmanServer.getListReader(listsForReading.toArray(new String[0])), allRepositories);\n+                ret.add(bot);\n+            }\n+\n@@ -159,5 +172,0 @@\n-            if (!repoConfig.contains(\"bidirectional\") || repoConfig.get(\"bidirectional\").asBoolean()) {\n-                for (var list : lists) {\n-                    listNamesForReading.add(list.list());\n-                }\n-            }\n@@ -167,8 +175,0 @@\n-        var mailmanServer = MailingListServerFactory.createMailmanServer(listArchive, listSmtp, Duration.ZERO);\n-        var listsForReading = listNamesForReading.stream()\n-                                   .map(name -> mailmanServer.getList(name.toString()))\n-                                   .collect(Collectors.toSet());\n-\n-        var bot = new MailingListArchiveReaderBot(from, listsForReading, allRepositories);\n-        ret.add(bot);\n-\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotFactory.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    private void addReply(Conversation conversation, EmailAddress recipient, MailingList mailingList, PullRequest pr, String reply) {\n+    private void addReply(Conversation conversation, EmailAddress recipient, MailingListServer mailingListServer, PullRequest pr, String reply) {\n@@ -50,1 +50,1 @@\n-        mailingList.post(email);\n+        mailingListServer.post(email);\n@@ -53,2 +53,2 @@\n-    private void addReply(Conversation conversation, EmailAddress recipient, MailingList mailingList, PullRequest pr) {\n-        addReply(conversation, recipient, mailingList, pr, \"Looks good\");\n+    private void addReply(Conversation conversation, EmailAddress recipient, MailingListServer mailingListServer, PullRequest pr) {\n+        addReply(conversation, recipient, mailingListServer, pr, \"Looks good\");\n@@ -89,2 +89,2 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n-            var readerBot = new MailingListArchiveReaderBot(from, Set.of(mailmanList), Set.of(archive));\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n+            var readerBot = new MailingListArchiveReaderBot(from, mailmanList, Set.of(archive));\n@@ -116,1 +116,1 @@\n-            addReply(conversations.get(0), listAddress, mailmanList, pr);\n+            addReply(conversations.get(0), listAddress, mailmanServer, pr);\n@@ -165,2 +165,2 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n-            var readerBot = new MailingListArchiveReaderBot(from, Set.of(mailmanList), Set.of(archive));\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n+            var readerBot = new MailingListArchiveReaderBot(from, mailmanList, Set.of(archive));\n@@ -188,1 +188,1 @@\n-            addReply(conversations.get(0), listAddress, mailmanList, pr);\n+            addReply(conversations.get(0), listAddress, mailmanServer, pr);\n@@ -199,1 +199,1 @@\n-            var newReaderBot = new MailingListArchiveReaderBot(from, Set.of(mailmanList), Set.of(archive));\n+            var newReaderBot = new MailingListArchiveReaderBot(from, mailmanList, Set.of(archive));\n@@ -241,2 +241,2 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n-            var readerBot = new MailingListArchiveReaderBot(from, Set.of(mailmanList), Set.of(archive));\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n+            var readerBot = new MailingListArchiveReaderBot(from, mailmanList, Set.of(archive));\n@@ -270,1 +270,1 @@\n-            addReply(conversations.get(0), listAddress, mailmanList, pr, replyBody);\n+            addReply(conversations.get(0), listAddress, mailmanServer, pr, replyBody);\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListArchiveReaderBotTests.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -799,1 +799,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -887,1 +887,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -1004,1 +1004,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -1610,1 +1610,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -1737,1 +1737,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -2902,1 +2902,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress1.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress1.address());\n@@ -3034,1 +3034,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -3351,0 +3351,6 @@\n+            listServer.processIncoming();\n+\n+            \/\/ Ensure that the PR is considered again - no duplicates should be sent\n+            pr.addLabel(\"ping\");\n+            TestBotRunner.runPeriodicItems(mlBot);\n+            assertThrows(RuntimeException.class, () -> listServer.processIncoming(Duration.ofMillis(1)));\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotTests.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import org.openjdk.skara.mailinglist.MailingList;\n+import org.openjdk.skara.mailinglist.*;\n@@ -40,1 +40,1 @@\n-    private final MailingList list;\n+    private final MailingListServer server;\n@@ -58,4 +58,4 @@\n-    MailingListNotifier(MailingList list, EmailAddress recipient, EmailAddress sender, EmailAddress author,\n-                       boolean includeBranch, boolean reportNewTags, boolean reportNewBranches, boolean reportNewBuilds,\n-                       Mode mode, Map<String, String> headers, Pattern allowedAuthorDomains) {\n-        this.list = list;\n+    MailingListNotifier(MailingListServer server, EmailAddress recipient, EmailAddress sender, EmailAddress author,\n+                        boolean includeBranch, boolean reportNewTags, boolean reportNewBranches, boolean reportNewBuilds,\n+                        Mode mode, Map<String, String> headers, Pattern allowedAuthorDomains) {\n+        this.server = server;\n@@ -211,1 +211,1 @@\n-            list.post(email);\n+            server.post(email);\n@@ -281,1 +281,1 @@\n-            list.post(email.build());\n+            server.post(email.build());\n@@ -314,1 +314,1 @@\n-            list.post(email.build());\n+            server.post(email.build());\n@@ -372,1 +372,1 @@\n-            list.post(email);\n+            server.post(email);\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/mailinglist\/MailingListNotifier.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import org.openjdk.skara.mailinglist.MailingList;\n+import org.openjdk.skara.mailinglist.*;\n@@ -32,1 +32,1 @@\n-    private MailingList list;\n+    private MailingListServer server;\n@@ -46,2 +46,2 @@\n-    public MailingListNotifierBuilder list(MailingList list) {\n-        this.list = list;\n+    public MailingListNotifierBuilder server(MailingListServer server) {\n+        this.server = server;\n@@ -102,2 +102,2 @@\n-        return new MailingListNotifier(list, recipient, sender, author, includeBranch, reportNewTags, reportNewBranches,\n-                                      reportNewBuilds, mode, headers, allowedAuthorDomains);\n+        return new MailingListNotifier(server, recipient, sender, author, includeBranch, reportNewTags, reportNewBranches,\n+                                       reportNewBuilds, mode, headers, allowedAuthorDomains);\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/mailinglist\/MailingListNotifierBuilder.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-                                         .list(listServer.getList(recipient))\n+                                         .server(listServer)\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/mailinglist\/MailingListNotifierFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -71,1 +71,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -127,1 +127,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -143,1 +143,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -199,1 +199,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -215,1 +215,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -277,1 +277,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -293,1 +293,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -341,1 +341,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -358,1 +358,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -439,1 +439,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -456,1 +456,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -489,1 +489,1 @@\n-            mailmanList.post(rfr);\n+            mailmanServer.post(rfr);\n@@ -525,1 +525,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -541,1 +541,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -573,1 +573,1 @@\n-            mailmanList.post(rfr);\n+            mailmanServer.post(rfr);\n@@ -616,1 +616,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -632,1 +632,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -672,1 +672,1 @@\n-            mailmanList.post(rfr);\n+            mailmanServer.post(rfr);\n@@ -713,1 +713,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -729,1 +729,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -758,1 +758,1 @@\n-            mailmanList.post(rfr);\n+            mailmanServer.post(rfr);\n@@ -809,1 +809,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -825,1 +825,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -834,1 +834,1 @@\n-                                                   .list(mailmanList)\n+                                                   .server(mailmanServer)\n@@ -928,1 +928,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -944,1 +944,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -953,1 +953,1 @@\n-                                                   .list(mailmanList)\n+                                                   .server(mailmanServer)\n@@ -1022,1 +1022,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -1038,1 +1038,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n@@ -1102,1 +1102,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress.address());\n+            var mailmanList = mailmanServer.getListReader(listAddress.address());\n@@ -1118,1 +1118,1 @@\n-                                             .list(mailmanList)\n+                                             .server(mailmanServer)\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/mailinglist\/MailingListNotifierTests.java","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-import org.openjdk.skara.email.Email;\n+import org.openjdk.skara.email.*;\n@@ -28,0 +28,2 @@\n+import java.util.function.Function;\n+import java.util.stream.*;\n@@ -31,2 +33,2 @@\n-    private final Map<Email, List<Email>> replies = new LinkedHashMap<>();\n-    private final Map<Email, Email> parents = new HashMap<>();\n+    private final Map<EmailAddress, LinkedHashSet<Email>> replies = new LinkedHashMap<>();\n+    private final Map<EmailAddress, Email> parents = new HashMap<>();\n@@ -36,1 +38,1 @@\n-        replies.put(first, new ArrayList<>());\n+        replies.put(first.id(), new LinkedHashSet<>());\n@@ -40,4 +42,13 @@\n-        var replyList = replies.get(parent);\n-        replyList.add(reply);\n-        replies.put(reply, new ArrayList<>());\n-        parents.put(reply, parent);\n+        if (!replies.containsKey(reply.id())) {\n+            var replyList = replies.get(parent.id());\n+            replyList.add(reply);\n+            replies.put(reply.id(), new LinkedHashSet<>());\n+        }\n+        if (!parents.containsKey(reply.id())) {\n+            parents.put(reply.id(), parent);\n+        } else {\n+            var oldParent = parents.get(reply.id());\n+            if (!parent.equals(oldParent)) {\n+                throw new RuntimeException(\"Email with id \" + reply.id() + \" seen with multiple parents: \" + oldParent.id() + \" and \" + parent.id());\n+            }\n+        }\n@@ -51,1 +62,1 @@\n-        return new ArrayList<>(replies.get(parent));\n+        return new ArrayList<>(replies.get(parent.id()));\n@@ -55,1 +66,6 @@\n-        return new ArrayList<>(replies.keySet());\n+        var unordered = Stream.concat(Stream.of(List.of(first)), replies.values().stream())\n+                             .flatMap(Collection::stream)\n+                             .collect(Collectors.toMap(Email::id, Function.identity()));\n+        return replies.keySet().stream()\n+                      .map(unordered::get)\n+                      .collect(Collectors.toList());\n@@ -59,11 +75,1 @@\n-        return parents.get(email);\n-    }\n-\n-    public List<Email> allParents(Email email) {\n-        var emailParents = new ArrayList<Email>();\n-        while (parents.containsKey(email)) {\n-            var parent = parents.get(email);\n-            emailParents.add(parent);\n-            email = parent;\n-        }\n-        return emailParents;\n+        return parents.get(email.id());\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/Conversation.java","additions":27,"deletions":21,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -25,2 +25,0 @@\n-import org.openjdk.skara.email.*;\n-\n@@ -28,1 +26,1 @@\n-import java.util.*;\n+import java.util.List;\n@@ -30,2 +28,1 @@\n-public interface MailingList {\n-    void post(Email email);\n+public interface MailingListReader {\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/MailingListReader.java","additions":2,"deletions":5,"binary":false,"changes":7,"previous_filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/MailingList.java","status":"renamed"},{"patch":"@@ -25,0 +25,2 @@\n+import org.openjdk.skara.email.Email;\n+\n@@ -26,1 +28,2 @@\n-    MailingList getList(String name);\n+    MailingListReader getListReader(String... listNames);\n+    void post(Email email);\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/MailingListServer.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/MailingListServerFactory.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    private static List<Email> splitMbox(String mbox, EmailAddress sender) {\n+    public static List<Email> splitMbox(String mbox, EmailAddress sender) {\n@@ -84,4 +84,0 @@\n-    public static List<Conversation> parseMbox(String mbox) {\n-        return parseMbox(mbox, null);\n-    }\n-\n@@ -90,2 +86,1 @@\n-    public static List<Conversation> parseMbox(String mbox, EmailAddress sender) {\n-        var emails = splitMbox(mbox, sender);\n+    public static List<Conversation> parseMbox(List<Email> emails) {\n@@ -118,1 +113,0 @@\n-                        log.info(\"Can't find conversation: \" + inReplyTo + \" - possibly out of order\");\n@@ -129,0 +123,1 @@\n+            outOfOrder.forEach(oo -> log.info(\"  \" + oo.id()));\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/Mbox.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,156 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.mailinglist.mailman;\n-\n-import org.openjdk.skara.email.*;\n-import org.openjdk.skara.mailinglist.*;\n-\n-import java.io.*;\n-import java.net.URI;\n-import java.net.http.*;\n-import java.time.*;\n-import java.util.*;\n-import java.util.concurrent.*;\n-import java.util.logging.Logger;\n-import java.util.stream.Collectors;\n-\n-public class MailmanList implements MailingList {\n-    private final MailmanServer server;\n-    private final EmailAddress listAddress;\n-    private final Logger log = Logger.getLogger(\"org.openjdk.skara.mailinglist\");\n-    private final ConcurrentMap<URI, HttpResponse<String>> pageCache = new ConcurrentHashMap<>();\n-    private List<Conversation> cachedConversations = new ArrayList<>();\n-    private static final HttpClient client = HttpClient.newBuilder()\n-                                                       .connectTimeout(Duration.ofSeconds(10))\n-                                                       .build();\n-\n-    MailmanList(MailmanServer server, EmailAddress name) {\n-        this.server = server;\n-        this.listAddress = name;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"MailmanList:\" + listAddress;\n-    }\n-\n-    @Override\n-    public void post(Email email) {\n-        server.sendMessage(email);\n-    }\n-\n-    private List<ZonedDateTime> getMonthRange(Duration maxAge) {\n-        var now = ZonedDateTime.now();\n-        var start = now.minus(maxAge);\n-        List<ZonedDateTime> ret = new ArrayList<>();\n-\n-        while (start.isBefore(now)) {\n-            ret.add(start);\n-            var next = start.plus(Duration.ofDays(1));\n-            while (start.getMonthValue() == next.getMonthValue()) {\n-                next = next.plus(Duration.ofDays(1));\n-            }\n-            start = next;\n-        }\n-        return ret;\n-    }\n-\n-    private Optional<HttpResponse<String>> getPage(HttpClient client, URI uri) {\n-        var requestBuilder = HttpRequest.newBuilder(uri)\n-                                        .timeout(Duration.ofSeconds(30))\n-                                        .GET();\n-\n-        var cached = pageCache.get(uri);\n-        if (cached != null) {\n-            var etag = cached.headers().firstValue(\"ETag\");\n-            etag.ifPresent(s -> requestBuilder.header(\"If-None-Match\", s));\n-        }\n-\n-        var request = requestBuilder.build();\n-        try {\n-            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n-            if (response.statusCode() == 200) {\n-                pageCache.put(uri, response);\n-                return Optional.of(response);\n-            } else if (response.statusCode() == 304) {\n-                return Optional.of(response);\n-            } else if (response.statusCode() == 404) {\n-                log.fine(\"Page not found for \" + uri);\n-                return Optional.empty();\n-            } else {\n-                throw new RuntimeException(\"Bad response received: \" + response);\n-            }\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    @Override\n-    public List<Conversation> conversations(Duration maxAge) {\n-        \/\/ Order pages by most recent first\n-        var potentialPages = getMonthRange(maxAge).stream()\n-                                                  .sorted(Comparator.reverseOrder())\n-                                                  .collect(Collectors.toList());\n-\n-        var actualPages = new LinkedList<String>();\n-        var useCached = false;\n-        var newContent = false;\n-        for (var month : potentialPages) {\n-            URI mboxUri = server.getMbox(listAddress.localPart(), month);\n-\n-            if (useCached) {\n-                var cachedResponse = pageCache.get(mboxUri);\n-                if (cachedResponse == null) {\n-                    break;\n-                } else {\n-                    actualPages.addFirst(cachedResponse.body());\n-                }\n-            } else {\n-                var mboxResponse = getPage(client, mboxUri);\n-                if (mboxResponse.isEmpty()) {\n-                    break;\n-                }\n-                if (mboxResponse.get().statusCode() == 304) {\n-                    actualPages.addFirst(pageCache.get(mboxUri).body());\n-                    useCached = true;\n-                } else {\n-                    actualPages.addFirst(mboxResponse.get().body());\n-                    newContent = true;\n-                }\n-            }\n-        }\n-\n-        if (newContent) {\n-            var concatenatedMbox = String.join(\"\", actualPages);\n-            var mails = Mbox.parseMbox(concatenatedMbox, listAddress);\n-            var threshold = ZonedDateTime.now().minus(maxAge);\n-            cachedConversations = mails.stream()\n-                                       .filter(mail -> mail.first().date().isAfter(threshold))\n-                                       .collect(Collectors.toList());\n-        }\n-\n-        return cachedConversations;\n-    }\n-}\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mailman\/MailmanList.java","additions":0,"deletions":156,"binary":false,"changes":156,"status":"deleted"},{"patch":"@@ -0,0 +1,162 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.mailinglist.mailman;\n+\n+import org.openjdk.skara.email.*;\n+import org.openjdk.skara.mailinglist.*;\n+\n+import java.io.*;\n+import java.net.URI;\n+import java.net.http.*;\n+import java.time.*;\n+import java.util.*;\n+import java.util.concurrent.*;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+public class MailmanListReader implements MailingListReader {\n+    private final MailmanServer server;\n+    private final List<String> names = new ArrayList<>();\n+    private final Logger log = Logger.getLogger(\"org.openjdk.skara.mailinglist\");\n+    private final ConcurrentMap<URI, HttpResponse<String>> pageCache = new ConcurrentHashMap<>();\n+    private List<Conversation> cachedConversations = new ArrayList<>();\n+    private static final HttpClient client = HttpClient.newBuilder()\n+                                                       .connectTimeout(Duration.ofSeconds(10))\n+                                                       .build();\n+\n+    MailmanListReader(MailmanServer server, Collection<String> names) {\n+        this.server = server;\n+        for (var name : names) {\n+            if (name.contains(\"@\")) {\n+                this.names.add(EmailAddress.parse(name).localPart());\n+            } else {\n+                this.names.add(name);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"MailmanList:\" + String.join(\", \", names);\n+    }\n+\n+    private List<ZonedDateTime> getMonthRange(Duration maxAge) {\n+        var now = ZonedDateTime.now();\n+        var start = now.minus(maxAge);\n+        List<ZonedDateTime> ret = new ArrayList<>();\n+\n+        while (start.isBefore(now)) {\n+            ret.add(start);\n+            var next = start.plus(Duration.ofDays(1));\n+            while (start.getMonthValue() == next.getMonthValue()) {\n+                next = next.plus(Duration.ofDays(1));\n+            }\n+            start = next;\n+        }\n+        return ret;\n+    }\n+\n+    private Optional<HttpResponse<String>> getPage(URI uri) {\n+        var requestBuilder = HttpRequest.newBuilder(uri)\n+                                        .timeout(Duration.ofSeconds(30))\n+                                        .GET();\n+\n+        var cached = pageCache.get(uri);\n+        if (cached != null) {\n+            var etag = cached.headers().firstValue(\"ETag\");\n+            etag.ifPresent(s -> requestBuilder.header(\"If-None-Match\", s));\n+        }\n+\n+        var request = requestBuilder.build();\n+        try {\n+            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n+            if (response.statusCode() == 200) {\n+                pageCache.put(uri, response);\n+                return Optional.of(response);\n+            } else if (response.statusCode() == 304) {\n+                return Optional.of(response);\n+            } else if (response.statusCode() == 404) {\n+                log.fine(\"Page not found for \" + uri);\n+                return Optional.empty();\n+            } else {\n+                throw new RuntimeException(\"Bad response received: \" + response);\n+            }\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    @Override\n+    public List<Conversation> conversations(Duration maxAge) {\n+        \/\/ Order pages by most recent first\n+        var potentialPages = getMonthRange(maxAge).stream()\n+                                                  .sorted(Comparator.reverseOrder())\n+                                                  .collect(Collectors.toList());\n+\n+        var useCached = new HashMap<String, Boolean>();\n+        for (var name : names) {\n+            useCached.put(name, false);\n+        }\n+        var newContent = false;\n+        var emails = new ArrayList<Email>();\n+        for (var month : potentialPages) {\n+            for (var name : names) {\n+                URI mboxUri = server.getMbox(name, month);\n+                var sender = EmailAddress.from(name + \"@\" + mboxUri.getHost());\n+\n+                if (useCached.get(name)) {\n+                    var cachedResponse = pageCache.get(mboxUri);\n+                    if (cachedResponse == null) {\n+                        break;\n+                    } else {\n+                        emails.addAll(0, Mbox.splitMbox(cachedResponse.body(), sender));\n+                    }\n+                } else {\n+                    var mboxResponse = getPage(mboxUri);\n+                    if (mboxResponse.isEmpty()) {\n+                        break;\n+                    }\n+                    if (mboxResponse.get().statusCode() == 304) {\n+                        emails.addAll(0, Mbox.splitMbox(pageCache.get(mboxUri).body(), sender));\n+                        useCached.put(name, true);\n+                    } else {\n+                        emails.addAll(0, Mbox.splitMbox(mboxResponse.get().body(), sender));\n+                        newContent = true;\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (newContent) {\n+            var conversations = Mbox.parseMbox(emails);\n+            var threshold = ZonedDateTime.now().minus(maxAge);\n+            cachedConversations = conversations.stream()\n+                                       .filter(mail -> mail.first().date().isAfter(threshold))\n+                                       .collect(Collectors.toList());\n+        }\n+\n+        return cachedConversations;\n+    }\n+}\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mailman\/MailmanListReader.java","additions":162,"deletions":0,"binary":false,"changes":162,"status":"added"},{"patch":"@@ -26,1 +26,0 @@\n-import org.openjdk.skara.network.URIBuilder;\n@@ -28,0 +27,1 @@\n+import org.openjdk.skara.network.URIBuilder;\n@@ -33,1 +33,1 @@\n-import java.util.Locale;\n+import java.util.*;\n@@ -38,0 +38,1 @@\n+    private final Duration sendInterval;\n@@ -39,1 +40,0 @@\n-    private Duration sendInterval;\n@@ -49,1 +49,1 @@\n-        var dateStr = DateTimeFormatter.ofPattern(\"YYYY-MMMM\", Locale.US).format(month);\n+        var dateStr = DateTimeFormatter.ofPattern(\"yyyy-MMMM\", Locale.US).format(month);\n@@ -69,2 +69,7 @@\n-    public MailingList getList(String name) {\n-        return new MailmanList(this, EmailAddress.parse(name));\n+    public void post(Email email) {\n+        sendMessage(email);\n+    }\n+\n+    @Override\n+    public MailingListReader getListReader(String... listNames) {\n+        return new MailmanListReader(this, Arrays.asList(listNames));\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mailman\/MailmanServer.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1,100 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.mailinglist.mboxfile;\n-\n-import org.openjdk.skara.email.*;\n-import org.openjdk.skara.mailinglist.*;\n-\n-import java.io.*;\n-import java.nio.charset.StandardCharsets;\n-import java.nio.file.*;\n-import java.time.*;\n-import java.util.*;\n-import java.util.logging.Logger;\n-import java.util.stream.Collectors;\n-\n-public class MboxFileList implements MailingList {\n-    private final Path file;\n-    private final EmailAddress recipient;\n-    private final Logger log = Logger.getLogger(\"org.openjdk.skara.mailinglist\");\n-\n-    MboxFileList(Path file, EmailAddress recipient) {\n-        this.file = file.resolveSibling(file.getFileName() + \".mbox\");\n-        this.recipient = recipient;\n-    }\n-\n-    private void postNewConversation(Email mail) {\n-        var mboxMail = Mbox.fromMail(mail);\n-        if (Files.notExists(file)) {\n-            if (Files.notExists(file.getParent())) {\n-                try {\n-                    Files.createDirectories(file.getParent());\n-                } catch (IOException e) {\n-                    throw new UncheckedIOException(e);\n-                }\n-            }\n-        }\n-        try {\n-            Files.writeString(file, mboxMail, StandardCharsets.UTF_8, StandardOpenOption.APPEND);\n-        } catch (IOException e) {\n-            try {\n-                Files.writeString(file, mboxMail, StandardCharsets.UTF_8, StandardOpenOption.CREATE_NEW);\n-            } catch (IOException e1) {\n-                throw new UncheckedIOException(e);\n-            }\n-        }\n-    }\n-\n-    private void postReply(Email mail) {\n-        var mboxMail = Mbox.fromMail(mail);\n-        try {\n-            Files.writeString(file, mboxMail, StandardCharsets.UTF_8, StandardOpenOption.APPEND);\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n-        }\n-    }\n-\n-    @Override\n-    public void post(Email email) {\n-        if (email.hasHeader((\"In-Reply-To\"))) {\n-            postReply(email);\n-        } else {\n-            postNewConversation(email);\n-        }\n-    }\n-\n-    @Override\n-    public List<Conversation> conversations(Duration maxAge) {\n-        String mbox;\n-        try {\n-            mbox = Files.readString(file, StandardCharsets.UTF_8);\n-        } catch (IOException e) {\n-            log.info(\"Failed to open mbox file\");\n-            return new LinkedList<>();\n-        }\n-        var cutoff = Instant.now().minus(maxAge);\n-        return Mbox.parseMbox(mbox).stream()\n-                .filter(email -> email.first().date().toInstant().isAfter(cutoff))\n-                .collect(Collectors.toList());\n-    }\n-}\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mboxfile\/MboxFileList.java","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.mailinglist.mboxfile;\n+\n+import org.openjdk.skara.email.*;\n+import org.openjdk.skara.mailinglist.*;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.*;\n+import java.time.*;\n+import java.util.*;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+\n+public class MboxFileListReader implements MailingListReader {\n+    private final Path base;\n+    private final Collection<String> names;\n+    private final Logger log = Logger.getLogger(\"org.openjdk.skara.mailinglist\");\n+\n+    MboxFileListReader(Path base, Collection<String> names) {\n+        this.base = base;\n+        this.names = names;\n+    }\n+\n+    @Override\n+    public List<Conversation> conversations(Duration maxAge) {\n+        var emails = new ArrayList<Email>();\n+        for (var name : names) {\n+            try {\n+                var file = base.resolve(name + \".mbox\");\n+                var currentMbox = Files.readString(file, StandardCharsets.UTF_8);\n+                emails.addAll(Mbox.splitMbox(currentMbox, EmailAddress.from(name + \"@mbox.file\")));\n+            } catch (IOException e) {\n+                log.info(\"Failed to open mbox file\");\n+            }\n+        }\n+        if (emails.isEmpty()) {\n+            return new LinkedList<>();\n+        }\n+        var cutoff = Instant.now().minus(maxAge);\n+        return Mbox.parseMbox(emails).stream()\n+                   .filter(email -> email.first().date().toInstant().isAfter(cutoff))\n+                   .collect(Collectors.toList());\n+    }\n+}\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mboxfile\/MboxFileListReader.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -25,1 +25,1 @@\n-import org.openjdk.skara.email.EmailAddress;\n+import org.openjdk.skara.email.Email;\n@@ -28,1 +28,1 @@\n-import java.net.URLEncoder;\n+import java.io.*;\n@@ -30,1 +30,3 @@\n-import java.nio.file.Path;\n+import java.nio.file.*;\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n@@ -39,0 +41,44 @@\n+    private void postNewConversation(Path file, Email mail) {\n+        var mboxMail = Mbox.fromMail(mail);\n+        if (Files.notExists(file)) {\n+            if (Files.notExists(file.getParent())) {\n+                try {\n+                    Files.createDirectories(file.getParent());\n+                } catch (IOException e) {\n+                    throw new UncheckedIOException(e);\n+                }\n+            }\n+        }\n+        try {\n+            Files.writeString(file, mboxMail, StandardCharsets.UTF_8, StandardOpenOption.APPEND);\n+        } catch (IOException e) {\n+            try {\n+                Files.writeString(file, mboxMail, StandardCharsets.UTF_8, StandardOpenOption.CREATE_NEW);\n+            } catch (IOException e1) {\n+                throw new UncheckedIOException(e);\n+            }\n+        }\n+    }\n+\n+    private void postReply(Path file, Email mail) {\n+        var mboxMail = Mbox.fromMail(mail);\n+        try {\n+            Files.writeString(file, mboxMail, StandardCharsets.UTF_8, StandardOpenOption.APPEND);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void post(Email email) {\n+        var recipientList = email.recipients().stream()\n+                                 .map(e -> base.resolve(e.localPart() + \".mbox\"))\n+                                 .collect(Collectors.toList());\n+\n+        if (email.hasHeader((\"In-Reply-To\"))) {\n+            recipientList.forEach(list -> postReply(list, email));\n+        } else {\n+            recipientList.forEach(list -> postNewConversation(list, email));\n+        }\n+    }\n+\n@@ -40,3 +86,2 @@\n-    public MailingList getList(String name) {\n-        var recipient = URLEncoder.encode(name, StandardCharsets.US_ASCII) + \"@localhost\";\n-        return new MboxFileList(base.resolve(name), EmailAddress.from(\"\", recipient));\n+    public MailingListReader getListReader(String... listNames) {\n+        return new MboxFileListReader(base, Arrays.asList(listNames));\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mboxfile\/MboxFileListServer.java","additions":51,"deletions":6,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.junit.jupiter.api.Test;\n@@ -28,2 +29,0 @@\n-import org.junit.jupiter.api.Test;\n-\n@@ -42,1 +41,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress);\n+            var mailmanList = mailmanServer.getListReader(listAddress);\n@@ -47,1 +46,1 @@\n-            mailmanList.post(mail);\n+            mailmanServer.post(mail);\n@@ -67,1 +66,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress);\n+            var mailmanList = mailmanServer.getListReader(listAddress);\n@@ -72,1 +71,1 @@\n-            mailmanList.post(sentParent);\n+            mailmanServer.post(sentParent);\n@@ -88,1 +87,1 @@\n-            mailmanList.post(sentReply);\n+            mailmanServer.post(sentReply);\n@@ -113,1 +112,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress);\n+            var mailmanList = mailmanServer.getListReader(listAddress);\n@@ -118,1 +117,1 @@\n-            mailmanList.post(mail);\n+            mailmanServer.post(mail);\n@@ -147,1 +146,1 @@\n-            var mailmanList = mailmanServer.getList(listAddress);\n+            var mailmanList = mailmanServer.getListReader(listAddress);\n@@ -156,2 +155,2 @@\n-                mailmanList.post(mail1);\n-                mailmanList.post(mail2);\n+                mailmanServer.post(mail1);\n+                mailmanServer.post(mail2);\n","filename":"mailinglist\/src\/test\/java\/org\/openjdk\/skara\/mailinglist\/MailmanTests.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -45,2 +45,7 @@\n-            var sentMail = Email.create(sender, \"Subject\", \"Message\").build();\n-            list.post(sentMail);\n+            var sentMail = Email.create(sender, \"Subject\", \"Message\")\n+                                .recipient(EmailAddress.from(\"test@mbox\"))\n+                                .build();\n+            var expectedMail = Email.from(sentMail)\n+                                    .sender(EmailAddress.from(\"test@mbox.file\"))\n+                                    .build();\n+            mbox.post(sentMail);\n@@ -50,1 +55,1 @@\n-            assertEquals(sentMail, conversation.first());\n+            assertEquals(expectedMail, conversation.first());\n@@ -58,1 +63,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -63,2 +68,7 @@\n-            var sentParent = Email.create(sender1, \"Subject 1\", \"Message 1\").build();\n-            list.post(sentParent);\n+            var sentParent = Email.create(sender1, \"Subject 1\", \"Message 1\")\n+                                  .recipient(EmailAddress.from(\"test@mbox\"))\n+                                  .build();\n+            var expectedParent = Email.from(sentParent)\n+                                      .sender(EmailAddress.from(\"test@mbox.file\"))\n+                                      .build();\n+            mbox.post(sentParent);\n@@ -69,0 +79,1 @@\n+                                 .recipient(EmailAddress.from(\"test@mbox\"))\n@@ -72,1 +83,4 @@\n-            list.post(sentReply);\n+            var expectedReply = Email.from(sentReply)\n+                                     .sender(EmailAddress.from(\"test@mbox.file\"))\n+                                     .build();\n+            mbox.post(sentReply);\n@@ -76,2 +90,2 @@\n-            assertEquals(sentParent, conversation.first());\n-            var replies = conversation.replies(sentParent);\n+            assertEquals(expectedParent, conversation.first());\n+            var replies = conversation.replies(expectedParent);\n@@ -80,1 +94,1 @@\n-            assertEquals(sentReply, reply);\n+            assertEquals(expectedReply, reply);\n@@ -88,1 +102,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -94,16 +108,0 @@\n-    @Test\n-    void nested() {\n-        try (var folder = new TemporaryDirectory()) {\n-            var mbox = MailingListServerFactory.createMboxFileServer(folder.path());\n-            var list = mbox.getList(\"this\/is\/a\/nested\/path\/test\");\n-\n-            var sender = EmailAddress.from(\"test\", \"test@test.mail\");\n-            var sentMail = Email.create(sender, \"Subject\", \"Message\").build();\n-            list.post(sentMail);\n-            var conversations = list.conversations(Duration.ofDays(1));\n-            assertEquals(1, conversations.size());\n-            var conversation = conversations.get(0);\n-            assertEquals(sentMail, conversation.first());\n-        }\n-    }\n-\n@@ -114,1 +112,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -118,2 +116,8 @@\n-            var sentMail = Email.create(author, \"Subject\", \"Message\").sender(sender).build();\n-            list.post(sentMail);\n+            var sentMail = Email.create(author, \"Subject\", \"Message\")\n+                                .recipient(EmailAddress.from(\"test@mbox\"))\n+                                .sender(sender)\n+                                .build();\n+            var expectedMail = Email.from(sentMail)\n+                                    .sender(EmailAddress.from(\"test@mbox.file\"))\n+                                    .build();\n+            mbox.post(sentMail);\n@@ -123,1 +127,1 @@\n-            assertEquals(sentMail, conversation.first());\n+            assertEquals(expectedMail, conversation.first());\n@@ -131,1 +135,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -135,5 +139,10 @@\n-                    From is an odd way to start\n-                    From may also be the second row\n-                    >>From as a quote\n-                    And From in the middle\"\"\").build();\n-            list.post(sentMail);\n+                                    From is an odd way to start\n+                                    From may also be the second row\n+                                    >>From as a quote\n+                                    And From in the middle\"\"\")\n+                                .recipient(EmailAddress.from(\"test@mbox\"))\n+                                .build();\n+            var expectedMail = Email.from(sentMail)\n+                                    .sender(EmailAddress.from(\"test@mbox.file\"))\n+                                    .build();\n+            mbox.post(sentMail);\n@@ -143,1 +152,1 @@\n-            assertEquals(sentMail, conversation.first());\n+            assertEquals(expectedMail, conversation.first());\n@@ -151,1 +160,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -154,2 +163,7 @@\n-            var sentMail = Email.create(sender, \"Sübjeçt\", \"(╯°□°)╯︵ ┻━┻\").build();\n-            list.post(sentMail);\n+            var sentMail = Email.create(sender, \"Sübjeçt\", \"(╯°□°)╯︵ ┻━┻\")\n+                                .recipient(EmailAddress.from(\"test@mbox\"))\n+                                .build();\n+            var expectedMail = Email.from(sentMail)\n+                                    .sender(EmailAddress.from(\"test@mbox.file\"))\n+                                    .build();\n+            mbox.post(sentMail);\n@@ -159,1 +173,1 @@\n-            assertEquals(sentMail, conversation.first());\n+            assertEquals(expectedMail, conversation.first());\n@@ -179,1 +193,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -213,1 +227,1 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n@@ -254,1 +268,63 @@\n-            var list = mbox.getList(\"test\");\n+            var list = mbox.getListReader(\"test\");\n+            var conversations = list.conversations(Duration.ofDays(365 * 100));\n+            assertEquals(1, conversations.size());\n+            var conversation = conversations.get(0);\n+            assertEquals(3, conversation.allMessages().size());\n+        }\n+    }\n+\n+    @Test\n+    void replyCross() throws IOException {\n+        try (var folder = new TemporaryDirectory()) {\n+            var rawMbox1 = folder.path().resolve(\"test1.mbox\");\n+            Files.writeString(rawMbox1, \"\"\"\n+                                      From test at example.com  Wed Aug 21 17:22:50 2019\n+                                      From: test at example.com (test at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:22:50 +0000\n+                                      Subject: this is a test\n+                                      Message-ID: <abc123@example.com>\n+\n+                                      First message\n+\n+                                      From test2 at example.com  Wed Aug 21 17:32:50 2019\n+                                      From: test2 at example.com (test2 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:32:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <abc123@example.com> (This be a reply)\n+                                      Message-ID: <def456@example.com>\n+\n+                                      Second message\n+\n+                                      From test3 at example.com  Wed Aug 21 17:42:50 2019\n+                                      From: test3 at example.com (test3 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:42:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <def456@example.com>\n+                                      Message-ID: <ghi789@example.com>\n+\n+                                      Third message\n+                                      \"\"\",\n+                              StandardCharsets.UTF_8);\n+            var rawMbox2 = folder.path().resolve(\"test2.mbox\");\n+            Files.writeString(rawMbox2, \"\"\"\n+                                      From test3 at example.com  Wed Aug 21 17:42:50 2019\n+                                      From: test3 at example.com (test3 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:42:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <def456@example.com>\n+                                      Message-ID: <ghi789@example.com>\n+\n+                                      Third message\n+\n+                                      From test2 at example.com  Wed Aug 21 17:32:50 2019\n+                                      From: test2 at example.com (test2 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:32:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <abc123@example.com> (This be a reply)\n+                                      Message-ID: <def456@example.com>\n+\n+                                      Second message\n+                                      \"\"\",\n+                              StandardCharsets.UTF_8);\n+            var mbox = MailingListServerFactory.createMboxFileServer(folder.path());\n+            var list = mbox.getListReader(\"test1\", \"test2\");\n@@ -262,0 +338,43 @@\n+    @Test\n+    void replyOutOfOrderSplit() throws IOException {\n+        try (var folder = new TemporaryDirectory()) {\n+            var rawMbox1 = folder.path().resolve(\"test1.mbox\");\n+            Files.writeString(rawMbox1, \"\"\"\n+                                      From test at example.com  Wed Aug 21 17:22:50 2019\n+                                      From: test at example.com (test at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:22:50 +0000\n+                                      Subject: this is a test\n+                                      Message-ID: <abc123@example.com>\n+\n+                                      First message\n+\n+                                      From test3 at example.com  Wed Aug 21 17:42:50 2019\n+                                      From: test3 at example.com (test3 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:42:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <def456@example.com>\n+                                      Message-ID: <ghi789@example.com>\n+\n+                                      Third message\n+                                      \"\"\",\n+                              StandardCharsets.UTF_8);\n+            var rawMbox2 = folder.path().resolve(\"test2.mbox\");\n+            Files.writeString(rawMbox2, \"\"\"\n+                                      From test2 at example.com  Wed Aug 21 17:32:50 2019\n+                                      From: test2 at example.com (test2 at example.com)\n+                                      Date: Wed, 21 Aug 2019 17:32:50 +0000\n+                                      Subject: Re: this is a test\n+                                      In-Reply-To: <abc123@example.com> (This be a reply)\n+                                      Message-ID: <def456@example.com>\n+\n+                                      Second message\n+                                      \"\"\",\n+                              StandardCharsets.UTF_8);\n+            var mbox = MailingListServerFactory.createMboxFileServer(folder.path());\n+            var list = mbox.getListReader(\"test1\", \"test2\");\n+            var conversations = list.conversations(Duration.ofDays(365 * 100));\n+            assertEquals(1, conversations.size());\n+            var conversation = conversations.get(0);\n+            assertEquals(3, conversation.allMessages().size());\n+        }\n+    }\n","filename":"mailinglist\/src\/test\/java\/org\/openjdk\/skara\/mailinglist\/MboxTests.java","additions":165,"deletions":46,"binary":false,"changes":211,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        var listName = EmailAddress.parse(name + \"@testserver.test\").toString();\n+        var listName = EmailAddress.parse(name + \"@\" + httpServer.getAddress().getHostString()).toString();\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestMailmanServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}