{"files":[{"patch":"@@ -88,1 +88,1 @@\n-    static void execute(CheckWorkItem workItem, PullRequest pr, Repository localRepo, List<Comment> comments,\n+    static Optional<Instant> execute(CheckWorkItem workItem, PullRequest pr, Repository localRepo, List<Comment> comments,\n@@ -93,0 +93,5 @@\n+        if (run.expiresIn != null) {\n+            return Optional.of(Instant.now().plus(run.expiresIn));\n+        } else {\n+            return Optional.empty();\n+        }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -199,1 +199,4 @@\n-                CheckRun.execute(this, pr, localRepo, comments, allReviews, activeReviews, labels, census, bot.ignoreStaleReviews());\n+                var expiresAt = CheckRun.execute(this, pr, localRepo, comments, allReviews, activeReviews, labels, census, bot.ignoreStaleReviews());\n+                if (expiresAt.isPresent()) {\n+                    bot.scheduleRecheckAt(pr, expiresAt.get());\n+                }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+    private final ConcurrentHashMap<String, Instant> scheduledRechecks;\n@@ -95,0 +96,1 @@\n+        scheduledRechecks = new ConcurrentHashMap<>();\n@@ -136,16 +138,4 @@\n-        var hash = pr.headHash();\n-        var currentChecks = pr.checks(hash);\n-\n-        if (currentChecks.containsKey(\"jcheck\")) {\n-            var check = currentChecks.get(\"jcheck\");\n-            if (check.metadata().isPresent()) {\n-                var metadata = check.metadata().get();\n-                if (metadata.contains(\":\")) {\n-                    var expirationString = metadata.substring(metadata.lastIndexOf(\":\") + 1);\n-                    var expiresAt = Instant.ofEpochSecond(Long.parseLong(expirationString));\n-                    if (expiresAt.isBefore(Instant.now())) {\n-                        log.info(\"Check metadata has expired (expired at: \" + expiresAt + \")\");\n-                        return true;\n-                    }\n-                }\n-            }\n+        var expiresAt = scheduledRechecks.get(pr.webUrl().toString());\n+        if (expiresAt != null && Instant.now().isAfter(expiresAt)) {\n+            log.info(\"Check metadata has expired (expired at: \" + expiresAt + \")\");\n+            return true;\n@@ -156,0 +146,4 @@\n+    void scheduleRecheckAt(PullRequest pr, Instant expiresAt) {\n+        scheduledRechecks.put(pr.webUrl().toString(), expiresAt);\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.time.*;\n@@ -1050,0 +1051,1 @@\n+            checkBot.scheduleRecheckAt(pr, Instant.now().minus(Duration.ofDays(1)));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}