{"files":[{"patch":"@@ -14,1 +14,0 @@\n-    private final Comment comment;\n@@ -16,1 +15,1 @@\n-    CommandInvocation(String id, HostUser user, CommandHandler handler, String name, String args, Comment comment) {\n+    CommandInvocation(String id, HostUser user, CommandHandler handler, String name, String args) {\n@@ -22,1 +21,0 @@\n-        this.comment = comment;\n@@ -44,12 +42,0 @@\n-\n-    Optional<Comment> comment() {\n-        return Optional.ofNullable(comment);\n-    }\n-\n-    boolean isInBody() {\n-        return comment == null;\n-    }\n-\n-    boolean isInComment() {\n-        return comment != null;\n-    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandInvocation.java","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-    private List<CommandInvocation> extractCommands(String text, String baseId, HostUser user, Comment c) {\n+    private List<CommandInvocation> extractCommands(String text, String baseId, HostUser user) {\n@@ -131,1 +131,1 @@\n-                    ret.add(new CommandInvocation(formatId(baseId, subId++), user, multiLineHandler, multiLineCommand, String.join(\"\\n\", multiLineBuffer), c));\n+                    ret.add(new CommandInvocation(formatId(baseId, subId++), user, multiLineHandler, multiLineCommand, String.join(\"\\n\", multiLineBuffer)));\n@@ -147,1 +147,1 @@\n-                    ret.add(new CommandInvocation(formatId(baseId, subId++), user, handler, command, commandMatcher.group(2), c));\n+                    ret.add(new CommandInvocation(formatId(baseId, subId++), user, handler, command, commandMatcher.group(2)));\n@@ -156,1 +156,1 @@\n-            ret.add(new CommandInvocation(formatId(baseId, subId), user, multiLineHandler, multiLineCommand, String.join(\"\\n\", multiLineBuffer), c));\n+            ret.add(new CommandInvocation(formatId(baseId, subId), user, multiLineHandler, multiLineCommand, String.join(\"\\n\", multiLineBuffer)));\n@@ -163,1 +163,1 @@\n-        var allCommands = Stream.concat(extractCommands(pr.body(), \"body\", pr.author(), null).stream(),\n+        var allCommands = Stream.concat(extractCommands(pr.body(), \"body\", pr.author()).stream(),\n@@ -166,1 +166,1 @@\n-                                                .flatMap(c -> extractCommands(c.body(), c.id(), c.author(), c).stream()))\n+                                                .flatMap(c -> extractCommands(c.body(), c.id(), c.author()).stream()))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandWorkItem.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -113,13 +113,9 @@\n-\n-            \/\/ If the command is in the PR body there cannot be any previous commands\n-            if (!command.isInBody()) {\n-                var previous = ReviewersTracker.additionalRequiredReviewers(user, allComments, command.comment().get());\n-                if (previous.isPresent()) {\n-                    if (roleIsLower(role, previous.get().role())) {\n-                        reply.println(\"Cannot lower the role for additional reviewers\");\n-                        return;\n-                    }\n-                    if (numReviewers < previous.get().number()) {\n-                        reply.println(\"Cannot decrease the number of required reviewers\");\n-                        return;\n-                    }\n+            var previous = ReviewersTracker.additionalRequiredReviewers(user, allComments);\n+            if (previous.isPresent()) {\n+                if (roleIsLower(role, previous.get().role())) {\n+                    reply.println(\"Cannot lower the role for additional reviewers\");\n+                    return;\n+                }\n+                if (numReviewers < previous.get().number()) {\n+                    reply.println(\"Cannot decrease the number of required reviewers\");\n+                    return;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersCommand.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -102,4 +102,0 @@\n-        return additionalRequiredReviewers(botUser, comments, null);\n-    }\n-\n-    static Optional<AdditionalRequiredReviewers> additionalRequiredReviewers(HostUser botUser, List<Comment> comments, Comment exclude) {\n@@ -109,1 +105,0 @@\n-                                       .filter(comment -> exclude == null || !comment.id().equals(exclude.id()))\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTracker.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}