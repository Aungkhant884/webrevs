{"files":[{"patch":"@@ -4,0 +4,1 @@\n+import org.openjdk.skara.issuetracker.Comment;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandInvocation.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            \"author\", \"author\",\n+            \"author\", \"authors\",\n@@ -50,0 +50,25 @@\n+    private static boolean roleIsLower(String updated, String existing) {\n+        if (existing.equals(\"lead\")) {\n+            return !updated.equals(\"lead\");\n+        }\n+        if (existing.equals(\"reviewers\")) {\n+            return !updated.equals(\"lead\") &&\n+                   !updated.equals(\"reviewers\");\n+        }\n+        if (existing.equals(\"committers\")) {\n+            return !updated.equals(\"lead\") &&\n+                   !updated.equals(\"reviewers\") &&\n+                   !updated.equals(\"committers\");\n+        }\n+        if (existing.equals(\"authors\")) {\n+            return !updated.equals(\"lead\") &&\n+                   !updated.equals(\"reviewers\") &&\n+                   !updated.equals(\"committers\") &&\n+                   !updated.equals(\"authors\");\n+        }\n+        if (existing.equals(\"contributors\")) {\n+            return false;\n+        }\n+        throw new IllegalArgumentException(\"Unexpected existing role: \" + existing);\n+    }\n+\n@@ -52,2 +77,2 @@\n-        if (!censusInstance.isReviewer(command.user())) {\n-            reply.println(\"Only [Reviewers](https:\/\/openjdk.java.net\/bylaws#reviewer) are allowed to change the number of required reviewers.\");\n+        if (!pr.author().equals(command.user()) && !censusInstance.isReviewer(command.user())) {\n+            reply.println(\"Only the author of the pull request or [Reviewers](https:\/\/openjdk.java.net\/bylaws#reviewer) are allowed to change the number of required reviewers.\");\n@@ -86,0 +111,15 @@\n+        if (pr.author().equals(command.user()) && !censusInstance.isReviewer(command.user())) {\n+            var user = pr.repository().forge().currentUser();\n+            var previous = ReviewersTracker.additionalRequiredReviewers(user, allComments);\n+            if (previous.isPresent()) {\n+                if (roleIsLower(role, previous.get().role())) {\n+                    reply.println(\"Cannot lower the role for additional reviewers\");\n+                    return;\n+                }\n+                if (numReviewers < previous.get().number()) {\n+                    reply.println(\"Cannot decrease the number of required reviewers\");\n+                    return;\n+                }\n+            }\n+        }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersCommand.java","additions":43,"deletions":3,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.List;\n@@ -253,0 +254,81 @@\n+\n+    @Test\n+    void prAuthorShouldBeAllowedToExecute(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addCommitter(author.forge().currentUser().id());\n+            var prBot = PullRequestBot.newBuilder().repo(bot).censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"123: This is a pull request\");\n+\n+            var authorPR = author.pullRequest(pr.id());\n+\n+            \/\/ The author deems that two reviewers are required\n+            authorPR.addComment(\"\/reviewers 2\");\n+\n+            \/\/ The bot should reply with a success message\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(authorPR, \"The number of required reviews for this PR is now set to 2 (with at least 1 of role reviewers).\");\n+        }\n+    }\n+\n+    @Test\n+    void prAuthorShouldNotBeAllowedToDecrease(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addReviewer(integrator.forge().currentUser().id())\n+                                           .addAuthor(author.forge().currentUser().id());\n+            var prBot = PullRequestBot.newBuilder().repo(bot).censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"123: This is a pull request\");\n+\n+            var authorPR = author.pullRequest(pr.id());\n+\n+            \/\/ The author deems that two reviewers are required\n+            authorPR.addComment(\"\/reviewers 2\");\n+\n+            \/\/ The bot should reply with a success message\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(authorPR, \"The number of required reviews for this PR is now set to 2 (with at least 1 of role reviewers).\");\n+\n+            \/\/ The author should not be allowed to decrease even its own \/reviewers command\n+            authorPR.addComment(\"\/reviewers 1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(authorPR, \"Cannot decrease the number of required reviewers\");\n+\n+            \/\/ Reviewer should be allowed to decrease\n+            var reviewerPr = integrator.pullRequest(pr.id());\n+            reviewerPr.addComment(\"\/reviewers 1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(authorPR, \"The number of required reviews for this PR is now set to 1\");\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTests.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"modified"}]}