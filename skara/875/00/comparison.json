{"files":[{"patch":"@@ -69,6 +69,3 @@\n-    private static JCheckConfiguration configuration(HostedRepositoryPool hostedRepositoryPool, HostedRepository remoteRepo, String name, String ref, Path folder) throws IOException {\n-        var repoName = remoteRepo.url().getHost() + \"\/\" + remoteRepo.name();\n-        var repoFolder = folder.resolve(URLEncoder.encode(repoName, StandardCharsets.UTF_8));\n-        hostedRepositoryPool.checkoutAllowStale(remoteRepo, ref, repoFolder);\n-\n-        var confFile = Files.readAllLines(repoFolder.resolve(name));\n+    private static JCheckConfiguration configuration(HostedRepositoryPool hostedRepositoryPool, HostedRepository remoteRepo, String name, String ref) throws IOException {\n+        var confFile = hostedRepositoryPool.lines(remoteRepo, Path.of(name), ref).orElseThrow(\n+                () -> new IOException(\"Failed to read jcheck configuration from \" + name + \":\" + ref));\n@@ -91,1 +88,1 @@\n-                configuration = configuration(hostedRepositoryPool, pr.repository(), \".jcheck\/conf\", pr.targetRef(), folder);\n+                configuration = configuration(hostedRepositoryPool, pr.repository(), \".jcheck\/conf\", pr.targetRef());\n@@ -93,1 +90,1 @@\n-                configuration = configuration(hostedRepositoryPool, confOverrideRepo, confOverrideName, confOverrideRef, folder);\n+                configuration = configuration(hostedRepositoryPool, confOverrideRepo, confOverrideName, confOverrideRef);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CensusInstance.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -99,0 +99,5 @@\n+        private ReadOnlyRepository seedRepository(boolean allowStale) throws IOException {\n+            refreshSeed(allowStale);\n+            return ReadOnlyRepository.get(seed).orElseThrow(() -> new IOException(\"Existing seed is corrupt?\"));\n+        }\n+\n@@ -175,0 +180,8 @@\n+\n+    public Optional<List<String>> lines(HostedRepository hostedRepository, Path p, String ref) throws IOException {\n+        var hostedRepositoryInstance = new HostedRepositoryInstance(hostedRepository);\n+        var seedRepo = hostedRepositoryInstance.seedRepository(true);\n+        var refHash = seedRepo.resolve(ref).orElseThrow(() -> new IOException(\"Ref not found: \" + ref));\n+\n+        return seedRepo.lines(p, refHash);\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepositoryPool.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}