{"files":[{"patch":"@@ -76,1 +76,2 @@\n-            if (e.getStatusCode() != 404) {\n+            \/\/ Throw the exception if the error is not exactly \"File not found\"\n+            if (e.getStatusCode() != 404 || (!e.getBody().equals(\"File Not Found\") && !e.getBody().equals(\"Not found\"))) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LimitedCensusInstance.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -294,2 +294,0 @@\n-                              log.warning(\"First time request returned bad status: \" + response.statusCode());\n-                              log.info(\"First time response body: \" + response.body());\n@@ -297,3 +295,9 @@\n-                              var escapedConfName = URLEncoder.encode(confName, StandardCharsets.UTF_8);\n-                              return Optional.of(request.get(\"repository\/files\/\" + escapedConfName)\n-                                            .param(\"ref\", ref).execute());\n+                              \/\/ Only retry when the error is exactly \"File Not Found\"\n+                              if (response.statusCode() == 404 && response.body().contains(\"File Not Found\")) {\n+                                  log.warning(\"First time request returned bad status: \" + response.statusCode());\n+                                  log.info(\"First time response body: \" + response.body());\n+                                  var escapedConfName = URLEncoder.encode(confName, StandardCharsets.UTF_8);\n+                                  return Optional.of(request.get(\"repository\/files\/\" + escapedConfName)\n+                                          .param(\"ref\", ref).execute());\n+                              }\n+                              return Optional.empty();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -377,1 +377,2 @@\n-            throw new UncheckedRestException(\"Request returned bad status: \" + response.statusCode(), response.statusCode());\n+            throw new UncheckedRestException(\"Request returned bad status: \" + response.statusCode(),\n+                    response.statusCode(), response.body());\n","filename":"network\/src\/main\/java\/org\/openjdk\/skara\/network\/RestRequest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -11,1 +11,3 @@\n-    public UncheckedRestException(String message, int statusCode) {\n+    String body;\n+\n+    public UncheckedRestException(String message, int statusCode, String body) {\n@@ -14,0 +16,1 @@\n+        this.body = body;\n@@ -19,0 +22,4 @@\n+\n+    public String getBody() {\n+        return body;\n+    }\n","filename":"network\/src\/main\/java\/org\/openjdk\/skara\/network\/UncheckedRestException.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-            throw new UncheckedRestException(\"Can't find file \" + filename, 404);\n+            throw new UncheckedRestException(\"Can't find file \" + filename, 404, \"Not Found\");\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}