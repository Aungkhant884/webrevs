{"files":[{"patch":"@@ -96,1 +96,1 @@\n-    JSONObject getProjectInfo(String name) {\n+    Optional<JSONObject> getProjectInfo(String name) {\n@@ -104,1 +104,6 @@\n-            project = request.get(\"projects\/\" + encodedName).execute();\n+            project = request.get(\"projects\/\" + encodedName)\n+                             .onError(r -> r.statusCode() == 404 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n+                             .execute();\n+            if (project.contains(\"NOT_FOUND\")) {\n+                return Optional.empty();\n+            }\n@@ -106,1 +111,1 @@\n-        return project.asObject();\n+        return Optional.of(project.asObject());\n@@ -109,4 +114,9 @@\n-    JSONObject getProjectInfo(int id) {\n-        return request.get(\"projects\/\" + Integer.toString(id))\n-                      .execute()\n-                      .asObject();\n+    Optional<JSONObject> getProjectInfo(int id) {\n+        var project = request.get(\"projects\/\" + id)\n+                      .onError(r -> r.statusCode() == 404 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n+                      .execute();\n+        if (project.contains(\"NOT_FOUND\")) {\n+            return Optional.empty();\n+        } else {\n+            return Optional.of(project.asObject());\n+        }\n@@ -169,2 +179,2 @@\n-        if (project.contains(\"import_status\")) {\n-            var status = project.get(\"import_status\").asString();\n+        if (project.isPresent() && project.get().contains(\"import_status\")) {\n+            var status = project.get().get(\"import_status\").asString();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabHost.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -276,2 +276,7 @@\n-            return Optional.of(new GitLabRepository((GitLabHost) repository.forge(),\n-                                                    json.get(\"source_project_id\").asInt()));\n+            var projectId = json.get(\"source_project_id\").asInt();\n+            var project = ((GitLabHost) repository.forge()).getProjectInfo(projectId);\n+            if (project.isEmpty()) {\n+                return Optional.empty();\n+            } else {\n+                return Optional.of(new GitLabRepository((GitLabHost) repository.forge(), project.get()));\n+            }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        this(gitLabHost, gitLabHost.getProjectInfo(projectName));\n+        this(gitLabHost, gitLabHost.getProjectInfo(projectName).orElseThrow(() -> new RuntimeException(\"Project not found: \" + projectName)));\n@@ -51,1 +51,1 @@\n-        this(gitLabHost, gitLabHost.getProjectInfo(id));\n+        this(gitLabHost, gitLabHost.getProjectInfo(id).orElseThrow(() -> new RuntimeException(\"Project not found by id: \" + id)));\n@@ -54,1 +54,1 @@\n-    private GitLabRepository(GitLabHost gitLabHost, JSONValue json) {\n+    GitLabRepository(GitLabHost gitLabHost, JSONValue json) {\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}