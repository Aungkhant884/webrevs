{"files":[{"patch":"@@ -25,1 +25,0 @@\n-import org.openjdk.skara.census.Census;\n@@ -38,1 +37,0 @@\n-import java.io.IOException;\n@@ -59,1 +57,1 @@\n-    private static JCheckConfiguration configuration(String files) {\n+    private static JCheckConfiguration configuration(String files, String ignoreTabs) {\n@@ -62,0 +60,1 @@\n+        lines.add(\"ignore-tabs = \" + ignoreTabs);\n@@ -90,1 +89,1 @@\n-        var conf = configuration(\"README\\\\.md\");\n+        var conf = configuration(\"README\\\\.md\", \"\");\n@@ -102,1 +101,1 @@\n-        var conf = configuration(\"README\\\\.md\");\n+        var conf = configuration(\"README\\\\.md\", \"\");\n@@ -122,1 +121,49 @@\n-    void tabShouldFail() {\n+    void trailingTabShouldFailWithoutIgnoreTabs() {\n+        var filename = \"README.md\";\n+        var line = \"An additional line\\t\";\n+        var commit = commit(parentDiffs(filename, line));\n+        var conf = configuration(\"README\\\\.md\", \"\");\n+        var message = message(commit);\n+        var check = new WhitespaceCheck();\n+        var issues = toList(check.check(commit, message, conf, null));\n+\n+        assertEquals(1, issues.size());\n+        assertTrue(issues.get(0) instanceof WhitespaceIssue);\n+        var issue = (WhitespaceIssue) issues.get(0);\n+        assertEquals(Path.of(filename), issue.path());\n+        assertEquals(1, issue.row());\n+        assertEquals(line, issue.line());\n+        assertEquals(List.of(new WhitespaceIssue.Error(line.length() - 1, WhitespaceIssue.Whitespace.TRAILING)),\n+                issue.errors());\n+        assertEquals(commit, issue.commit());\n+        assertEquals(check, issue.check());\n+        assertEquals(message, issue.message());\n+        assertEquals(Severity.ERROR, issue.severity());\n+    }\n+\n+    @Test\n+    void trailingTabShouldFailWithIgnoreTabs() {\n+        var filename = \"README.md\";\n+        var line = \"An additional line\\t\";\n+        var commit = commit(parentDiffs(filename, line));\n+        var conf = configuration(\"README\\\\.md\", \"\\\"README\\\\\\\\.md\");\n+        var message = message(commit);\n+        var check = new WhitespaceCheck();\n+        var issues = toList(check.check(commit, message, conf, null));\n+\n+        assertEquals(1, issues.size());\n+        assertTrue(issues.get(0) instanceof WhitespaceIssue);\n+        var issue = (WhitespaceIssue) issues.get(0);\n+        assertEquals(Path.of(filename), issue.path());\n+        assertEquals(1, issue.row());\n+        assertEquals(line, issue.line());\n+        assertEquals(List.of(new WhitespaceIssue.Error(line.length() - 1, WhitespaceIssue.Whitespace.TRAILING)),\n+                issue.errors());\n+        assertEquals(commit, issue.commit());\n+        assertEquals(check, issue.check());\n+        assertEquals(message, issue.message());\n+        assertEquals(Severity.ERROR, issue.severity());\n+    }\n+\n+    @Test\n+    void tabShouldFailWithoutIgnoreTabs() {\n@@ -126,1 +173,1 @@\n-        var conf = configuration(\"README\\\\.md\");\n+        var conf = configuration(\"README\\\\.md\", \"\");\n@@ -145,0 +192,13 @@\n+    @Test\n+    void tabShouldSucceedWithIgnoreTabs() {\n+        var filename = \"README.md\";\n+        var line = \"\\tAn additional line\";\n+        var commit = commit(parentDiffs(filename, line));\n+        var conf = configuration(\"README\\\\.md\", \"README\\\\.md\");\n+        var message = message(commit);\n+        var check = new WhitespaceCheck();\n+        var issues = toList(check.check(commit, message, conf, null));\n+\n+        assertEquals(0, issues.size());\n+    }\n+\n@@ -150,1 +210,1 @@\n-        var conf = configuration(\"README\\\\.md\");\n+        var conf = configuration(\"README\\\\.md\", \"\");\n","filename":"jcheck\/src\/test\/java\/org\/openjdk\/skara\/jcheck\/WhitespaceCheckTests.java","additions":68,"deletions":8,"binary":false,"changes":76,"status":"modified"}]}