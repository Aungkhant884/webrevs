{"files":[{"patch":"@@ -762,1 +762,4 @@\n-            var readyForIntegration = visitor.messages().isEmpty() && additionalErrors.isEmpty();\n+            var readyForIntegration = visitor.messages().isEmpty() &&\n+                                      additionalErrors.isEmpty() &&\n+                                      labels.stream().noneMatch(l -> workItem.bot.blockingReadyLabels().contains(l));\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -175,0 +175,4 @@\n+    Set<String> blockingReadyLabels() {\n+        return Set.of(\"csr\");\n+    }\n+\n@@ -176,2 +180,1 @@\n-        return Map.of(\"rejected\", \"The change is currently blocked from integration by a rejection.\",\n-                      \"csr\", \"The change is currently blocked from integration by a pending CSR.\");\n+        return Map.of(\"rejected\", \"The change is currently blocked from integration by a rejection.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -477,0 +477,55 @@\n+\n+    @Test\n+    void csrLabelShouldBlockReadyLabel(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issues = credentials.getIssueProject();\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addReviewer(reviewer.forge().currentUser().id())\n+                                           .addCommitter(author.forge().currentUser().id());\n+            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"Just a patch\");\n+\n+            \/\/ Approve the PR\n+            var prAsReviewer = reviewer.pullRequest(pr.id());\n+            prAsReviewer.addReview(Review.Verdict.APPROVED, \"Looks good\");\n+\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ PR should be ready\n+            var prAsAuthor = author.pullRequest(pr.id());\n+            assertTrue(prAsAuthor.labels().contains(\"ready\"));\n+\n+            \/\/ Require CSR\n+            prAsReviewer = reviewer.pullRequest(pr.id());\n+            prAsReviewer.addComment(\"\/csr\");\n+\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message that a CSR is needed\n+            assertLastCommentContains(pr, \"has indicated that a \" +\n+                                          \"[compatibility and specification](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) (CSR) request \" +\n+                                          \"is needed for this pull request.\");\n+            assertTrue(pr.labels().contains(\"csr\"));\n+\n+            \/\/ PR should not be ready\n+            prAsAuthor = author.pullRequest(pr.id());\n+            assertFalse(prAsAuthor.labels().contains(\"ready\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}