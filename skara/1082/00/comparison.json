{"files":[{"patch":"@@ -185,1 +185,1 @@\n-                                .sorted(Comparator.comparingInt(OpenJDKTag::buildNum))\n+                                .sorted(Comparator.comparingInt(tag -> tag.buildNum().orElse(-1)))\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/RepositoryWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,0 +284,3 @@\n+        if (tag.buildNum().isEmpty()) {\n+            return;\n+        }\n@@ -346,1 +349,1 @@\n-                var newBuild = \"b\" + String.format(\"%02d\", tag.buildNum());\n+                var newBuild = \"b\" + String.format(\"%02d\", tag.buildNum().get());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -98,1 +98,4 @@\n-        var build = String.format(\"b%02d\", tag.buildNum());\n+        if (tag.buildNum().isEmpty()) {\n+            return;\n+        }\n+        var build = String.format(\"b%02d\", tag.buildNum().get());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/json\/JsonNotifier.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-    public int buildNum() {\n+    public Optional<Integer> buildNum() {\n@@ -113,1 +113,1 @@\n-            return 0;\n+            return Optional.empty();\n@@ -115,1 +115,1 @@\n-        return Integer.parseInt(buildNum);\n+        return Optional.of(Integer.parseInt(buildNum));\n@@ -119,1 +119,1 @@\n-     * Tag of the previous build (if any).\n+     * Tag of the previous build (if any). Build 0 (and no build number at all) have no previous build.\n@@ -124,1 +124,1 @@\n-        if (buildNum() == 0) {\n+        if (buildNum().orElse(0) == 0) {\n@@ -129,1 +129,1 @@\n-        var previousBuildNum = buildNum() - 1;\n+        var previousBuildNum = buildNum().get() - 1;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/OpenJDKTag.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-        assertEquals(20, jdkTag.buildNum());\n+        assertEquals(20, jdkTag.buildNum().orElseThrow());\n@@ -38,1 +38,1 @@\n-        assertEquals(19, previousTag.buildNum());\n+        assertEquals(19, previousTag.buildNum().orElseThrow());\n@@ -45,1 +45,1 @@\n-        assertEquals(10, jdkTag.buildNum());\n+        assertEquals(10, jdkTag.buildNum().orElseThrow());\n@@ -48,1 +48,1 @@\n-        assertEquals(9, previousTag.buildNum());\n+        assertEquals(9, previousTag.buildNum().orElseThrow());\n@@ -55,1 +55,1 @@\n-        assertEquals(147, jdkTag.buildNum());\n+        assertEquals(147, jdkTag.buildNum().orElseThrow());\n@@ -57,1 +57,1 @@\n-        assertEquals(146, previousTag.buildNum());\n+        assertEquals(146, previousTag.buildNum().orElseThrow());\n@@ -64,1 +64,1 @@\n-        assertEquals(10, jdkTag.buildNum());\n+        assertEquals(10, jdkTag.buildNum().orElseThrow());\n@@ -67,1 +67,1 @@\n-        assertEquals(9, previousTag.buildNum());\n+        assertEquals(9, previousTag.buildNum().orElseThrow());\n@@ -74,1 +74,1 @@\n-        assertEquals(19, jdkTag.buildNum());\n+        assertEquals(19, jdkTag.buildNum().orElseThrow());\n@@ -76,1 +76,1 @@\n-        assertEquals(18, previousTag.buildNum());\n+        assertEquals(18, previousTag.buildNum().orElseThrow());\n@@ -83,1 +83,1 @@\n-        assertEquals(10, jdkTag.buildNum());\n+        assertEquals(10, jdkTag.buildNum().orElseThrow());\n@@ -86,1 +86,1 @@\n-        assertEquals(9, previousTag.buildNum());\n+        assertEquals(9, previousTag.buildNum().orElseThrow());\n@@ -93,1 +93,1 @@\n-        assertEquals(0, jdkTag.buildNum());\n+        assertEquals(0, jdkTag.buildNum().orElseThrow());\n@@ -102,1 +102,1 @@\n-        assertEquals(14, jdkTag.buildNum());\n+        assertEquals(14, jdkTag.buildNum().orElseThrow());\n@@ -104,1 +104,1 @@\n-        assertEquals(13, previousTag.buildNum());\n+        assertEquals(13, previousTag.buildNum().orElseThrow());\n@@ -112,1 +112,1 @@\n-        assertEquals(0, jdkTag.buildNum());\n+        assertTrue(jdkTag.buildNum().isEmpty());\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/openjdk\/OpenJDKTagTests.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}