{"files":[{"patch":"@@ -1338,1 +1338,1 @@\n-                                                newLabels, pr.targetRef(), pr.isDraft()), workItem.getIssueMetadata(updatedBody), expiresIn);\n+                    newLabels, pr.targetRef(), pr.isDraft(), pr.targetRefJCheckConf()), workItem.getIssueMetadata(updatedBody), expiresIn);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-                       List<Review> reviews, Set<String> labels, String targetRef, boolean isDraft) {\n+                       List<Review> reviews, Set<String> labels, String targetRef, boolean isDraft, String jcheckConfInTargetRef) {\n@@ -138,0 +138,1 @@\n+            digest.update(jcheckConfInTargetRef.getBytes(StandardCharsets.UTF_8));\n@@ -226,1 +227,2 @@\n-                    var currPRMetadata = getPRMetadata(censusInstance, pr.title(), pr.body(), comments, reviews, labels, pr.targetRef(), pr.isDraft());\n+                    var currPRMetadata = getPRMetadata(censusInstance, pr.title(), pr.body(), comments, reviews,\n+                            labels, pr.targetRef(), pr.isDraft(), pr.targetRefJCheckConf());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.stream.Collectors;\n@@ -78,0 +79,1 @@\n+    private final Map<String, String> jCheckConfMap = new HashMap<>();\n@@ -168,0 +170,8 @@\n+\n+            var jCheckConfUpdateRelatedPRs = getJCheckConfUpdateRelatedPRs();\n+            \/\/ Filter out duplicate prs\n+            var filteredPrs = jCheckConfUpdateRelatedPRs.stream()\n+                    .filter(pullRequest -> prs.stream()\n+                            .noneMatch(pr -> pr.isSame(pullRequest)))\n+                    .toList();\n+            workItems.addAll(getPullRequestWorkItems(filteredPrs));\n@@ -173,0 +183,24 @@\n+    private List<PullRequest> getJCheckConfUpdateRelatedPRs() {\n+        var ret = new ArrayList<PullRequest>();\n+        \/\/ Get all branches except 'pr' branch\n+        var allTargetRefs = remoteRepo.branches().stream()\n+                .map(HostedBranch::name)\n+                .filter(name -> !name.startsWith(\"pr\/\"))\n+                .toList();\n+        \/\/ Check if .jcheck\/conf updated in each target ref\n+        for (var targetRef : allTargetRefs) {\n+            var currConfOpt = remoteRepo.fileContents(\".jcheck\/conf\", targetRef);\n+            if (currConfOpt.isEmpty()) {\n+                continue;\n+            }\n+            var currConf = currConfOpt.get();\n+            if (!jCheckConfMap.containsKey(targetRef) || !jCheckConfMap.get(targetRef).equals(currConf)) {\n+                ret.addAll(remoteRepo.openPullRequests().stream()\n+                        .filter(pullRequest -> pullRequest.targetRef().equals(targetRef))\n+                        .toList());\n+                jCheckConfMap.put(targetRef, currConf);\n+            }\n+        }\n+        return ret;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2996,0 +2996,56 @@\n+\n+    @Test\n+    void targetJCheckConfUpdate(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                    .seedStorage(seedFolder)\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"refs\/heads\/edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            assertTrue(pr.store().body().contains(\"1 review required\"));\n+\n+            \/\/ Run it again\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/Make a change to .jcheck\/conf in target branch\n+            localRepo.checkout(localRepo.defaultBranch());\n+            var defaultConf = Files.readString(localRepo.root().resolve(\".jcheck\/conf\"), StandardCharsets.UTF_8);\n+            var newConf = defaultConf.replace(\"reviewers=1\", \"reviewers=2\");\n+            Files.writeString(localRepo.root().resolve(\".jcheck\/conf\"), newConf, StandardCharsets.UTF_8);\n+            localRepo.add(localRepo.root().resolve(\".jcheck\/conf\"));\n+            var confHash = localRepo.commit(\"set reviewers=2\", \"duke\", \"duke@openjdk.org\");\n+            localRepo.push(confHash, author.authenticatedUrl(), \"master\", true);\n+\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            assertTrue(pr.store().body().contains(\"2 reviews required\"));\n+\n+            \/\/ Run it again\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            TestBotRunner.runPeriodicItems(prBot);\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -370,0 +370,5 @@\n+\n+    @Override\n+    public String targetRefJCheckConf() {\n+        return null;\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -268,0 +268,6 @@\n+\n+    \/**\n+     * Returns .jcheck\/conf in the target ref of this pull request\n+     * @return\n+     *\/\n+    String targetRefJCheckConf();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+    private String targetRefJCheckConf;\n@@ -842,0 +843,8 @@\n+\n+    @Override\n+    public String targetRefJCheckConf() {\n+        if (targetRefJCheckConf == null) {\n+            targetRefJCheckConf = repository.fileContents(\".jcheck\/conf\", targetRef()).orElse(\"\");\n+        }\n+        return targetRefJCheckConf;\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+    private String targetRefJCheckConf;\n@@ -950,0 +951,8 @@\n+\n+    @Override\n+    public String targetRefJCheckConf() {\n+        if (targetRefJCheckConf == null) {\n+            targetRefJCheckConf = repository.fileContents(\".jcheck\/conf\", targetRef()).orElse(\"\");\n+        }\n+        return targetRefJCheckConf;\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    private String targetRefJCheckConf;\n@@ -358,0 +359,8 @@\n+\n+    @Override\n+    public String targetRefJCheckConf() {\n+        if (targetRefJCheckConf == null) {\n+            targetRefJCheckConf = targetRepository.fileContents(\".jcheck\/conf\", targetRef()).orElse(\"\");\n+        }\n+        return targetRefJCheckConf;\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}