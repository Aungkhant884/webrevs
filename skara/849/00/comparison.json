{"files":[{"patch":"@@ -62,0 +62,1 @@\n+    private static final String fullNameWarningMarker = \"<!-- PullRequestBot full name warning comment -->\";\n@@ -662,0 +663,34 @@\n+    private void addFullNameWarningComment() {\n+        var existing = findComment(comments, fullNameWarningMarker);\n+        if (existing.isPresent()) {\n+            \/\/ Only warn once\n+            return;\n+        }\n+\n+        if (censusInstance.namespace().get(pr.author().id()) != null) {\n+            \/\/ Known OpenJDK user\n+            return;\n+        }\n+\n+        var head = pr.repository().commitMetadata(pr.headHash()).orElseThrow(\n+            () -> new IllegalStateException(\"Cannot lookup HEAD hash for PR \" + pr.id())\n+        );\n+        if (!pr.author().fullName().equals(pr.author().userName()) &&\n+            !pr.author().fullName().equals(head.author().name())) {\n+            var headUrl = pr.headUrl().toString();\n+            var message = \":warning: @\" + pr.author().userName() + \" the full name on your profile does not match \" +\n+                \"the author name in this pull requests' [HEAD](\" + headUrl + \") commit. \" +\n+                          \"If this pull request gets integrated then the author name from this pull requests' \" +\n+                          \"[HEAD](\" + headUrl + \") commit will be used for the resulting commit. \" +\n+                          \"If you wish to push a new commit with a different author name, \" +\n+                          \"then please run the following commands in a local repository of your personal fork:\" +\n+                          \"\\n\\n\" +\n+                          \"```\\n\" +\n+                          \"$ git checkout \" + pr.sourceRef() + \"\\n\" +\n+                          \"$ git commit -c user.name='Preferred Full Name' --allow-empty -m 'Update full name'\\n\" +\n+                          \"$ git push\\n\" +\n+                          \"```\\n\";\n+            pr.addComment(fullNameWarningMarker + \"\\n\" + message);\n+        }\n+    }\n+\n@@ -665,0 +700,1 @@\n+            addFullNameWarningComment();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -118,12 +118,2 @@\n-            var headHash = pr.headHash();\n-            var headCommit = localRepo.lookup(headHash).get();\n-            var headAuthor = headCommit.author();\n-            var prAuthor = pr.author();\n-            if (!prAuthor.fullName().equals(prAuthor.userName())) {\n-                if (!headAuthor.name().equals(prAuthor.fullName())) {\n-                    throw new CommitFailure(\"The HEAD commit of this pull request, \" + headHash.abbreviate() +\n-                                            \", has a different author, `\" + headAuthor.name() + \"`\" +\n-                                            \", than the author of this pull request: `\" + prAuthor.fullName() + \"`\");\n-                }\n-            }\n-            author = headAuthor;\n+            var head = localRepo.lookup(pr.headHash()).get();\n+            author = head.author();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1661,1 +1661,3 @@\n-            \/\/ Run the bot\n+            \/\/ Approve the PR\n+            var prAsReviewer = reviewer.pullRequest(pr.id());\n+            prAsReviewer.addReview(Review.Verdict.APPROVED, \"Looks good\");\n@@ -1664,1 +1666,1 @@\n-            \/\/ The bot should respond with a failure about different authors\n+            \/\/ The bot should respond with an integration message and a warning about different authors\n@@ -1666,4 +1668,11 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n-            assertTrue(pr.body().contains(\"The HEAD commit of this pull request\"));\n-            assertTrue(pr.body().contains(\"has a different author\"));\n-            assertTrue(pr.body().contains(\"than the author of this pull request\"));\n+            var comments = pr.comments();\n+            var numComments = comments.size();\n+            var lastComment = comments.get(comments.size() - 1).body();\n+            assertTrue(lastComment.contains(\"This change now passes all *automated* pre-integration checks.\"));\n+            var nextToLastComment = comments.get(comments.size() - 2).body();\n+            assertTrue(nextToLastComment.contains(\"the full name on your profile does not match the author name\"));\n+\n+            \/\/ Run the bot again, should not result in any new comments\n+            TestBotRunner.runPeriodicItems(mergeBot);\n+            pr = author.pullRequest(pr.id());\n+            assertEquals(numComments, pr.comments().size());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -293,0 +293,5 @@\n+\n+    @Override\n+    public URI headUrl() {\n+        return null;\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,0 +76,6 @@\n+    \/**\n+     * URI to the current head of the request.\n+     * @return\n+     *\/\n+    URI headUrl();\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -657,0 +657,5 @@\n+\n+    @Override\n+    public URI headUrl() {\n+        return URI.create(webUrl() + \"\/commits\/\" + headHash().hex());\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -734,0 +734,5 @@\n+\n+    @Override\n+    public URI headUrl() {\n+        return URI.create(webUrl() + \"\/diffs?commit_id=\" + headHash().hex());\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -230,0 +230,5 @@\n+\n+    @Override\n+    public URI headUrl() {\n+        return URI.create(webUrl().toString() + \"\/commits\/\" + headHash().hex());\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}