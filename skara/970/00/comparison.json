{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import static org.openjdk.skara.forge.CheckStatus.SUCCESS;\n@@ -1085,1 +1086,48 @@\n-            assertEquals(\"- Could not determine the source for this merge. A Merge PR title must be specified on the format: Merge `project`:`branch` to allow verification of the merge contents.\", check.summary().orElseThrow());\n+            assertEquals(\"- Could not determine the source for this merge. A Merge PR title must be specified on the format: `^Merge ([-\/\\\\w:+]+)$` to allow verification of the merge contents.\", check.summary().orElseThrow());\n+        }\n+    }\n+\n+    @Test\n+    void branchWithPlus(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addCommitter(author.forge().currentUser().id())\n+                                           .addReviewer(integrator.forge().currentUser().id());\n+            var mergeBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType(), Path.of(\"appendable.txt\"), Set.of(\"merge\"), \"1.0\");\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change in another branch\n+            var otherHash = CheckableRepository.appendAndCommit(localRepo, \"Change in other\",\n+                                                                \"Other\\n\\nReviewed-by: integrationreviewer2\");\n+            localRepo.push(otherHash, author.url(), \"other\", true);\n+\n+            \/\/ Go back to the original master\n+            localRepo.checkout(masterHash, true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var unrelated = Files.writeString(localRepo.root().resolve(\"unrelated.txt\"), \"Unrelated\", StandardCharsets.UTF_8);\n+            localRepo.add(unrelated);\n+            var updatedMaster = localRepo.commit(\"Unrelated\", \"some\", \"some@one\");\n+            localRepo.push(updatedMaster, author.url(), \"master\");\n+\n+            localRepo.merge(otherHash);\n+            var mergeHash = localRepo.commit(\"Merge commit\", \"some\", \"some@one\");\n+            localRepo.push(mergeHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"Merge branch-a+b\");\n+\n+            \/\/ Let the bot check the status\n+            TestBotRunner.runPeriodicItems(mergeBot);\n+\n+            \/\/ should be successful\n+            var check = pr.checks(mergeHash).get(\"jcheck\");\n+            assertSame(SUCCESS, check.status());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/MergeTests.java","additions":49,"deletions":1,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private final static Pattern mergeSourcePattern = Pattern.compile(\"^Merge ([-\/\\\\w:]+)$\");\n+    private final static Pattern mergeSourcePattern = Pattern.compile(\"^Merge ([-\/\\\\w:+]+)$\");\n@@ -65,2 +65,2 @@\n-            throw new CommitFailure(\"Could not determine the source for this merge. A Merge PR title must be specified on the format: \" +\n-                                            \"Merge `project`:`branch` to allow verification of the merge contents.\");\n+            throw new CommitFailure(\"Could not determine the source for this merge. A Merge PR title must be specified on the format: `\" +\n+                                            mergeSourcePattern.toString() + \"` to allow verification of the merge contents.\");\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequestUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}