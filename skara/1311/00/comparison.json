{"files":[{"patch":"@@ -47,1 +47,1 @@\n-                 * `\/jep <issue-id>`\n+                 * `\/jep <jep-id>|<issue-id>`\n@@ -58,0 +58,1 @@\n+                 * `\/jep 123`\n@@ -61,3 +62,4 @@\n-                The project prefix (`JDK-` in the above examples) is optional if you use an issue ID.\n-                The issue type in that case must be `JEP`.\n-                The `JEP-` or `jep-` prefix is required if you instead provide a JEP ID.\n+                The prefix (`JDK-`, `JEP-` or `jep-` in the above examples) is optional.\n+                The bot firstly treats the ID without prefix as a JEP ID.\n+                If not found, the bot then treats the ID without prefix as an issue ID.\n+                The issue type in any case must be `JEP`.\n@@ -67,4 +69,5 @@\n-    private Optional<Issue> getJepIssue(String args, PullRequestBot bot) {\n-        Optional<Issue> jbsIssue;\n-        if (args.startsWith(\"jep-\") || args.startsWith(\"JEP-\") || args.startsWith(\"Jep-\")) {\n-            \/\/ Handle the JEP ID\n+    private Optional<Issue> getJepIssue(String args, PullRequestBot bot, PrintWriter reply) {\n+        Optional<Issue> jbsIssue = Optional.empty();\n+        var upperArgs = args.toUpperCase();\n+        if (upperArgs.startsWith(\"JEP-\")) {\n+            \/\/ Handle the JEP ID with `JEP` prefix\n@@ -73,2 +76,15 @@\n-            \/\/ Handle the issue ID\n-            jbsIssue = bot.issueProject().issue(args);\n+            if (!upperArgs.startsWith(bot.issueProject().name().toUpperCase())) {\n+                \/\/ Handle the raw JEP ID without `JEP` prefix and project prefix. If the JEP has the same ID\n+                \/\/ as any issue, the bot firstly parse the ID as JEP instead of general issue.\n+                \/\/ For example, if we have a `JEP-12345` (its issue ID is not `JDK-12345`) and an issue `JDK-12345`,\n+                \/\/ when typing `\/jep 12345`, the bot firstly parses it as `JEP-12345` instead of `JDK-12345`.\n+                jbsIssue = bot.issueProject().jepIssue(args);\n+                if (jbsIssue.isEmpty()) {\n+                    reply.println(\"The JEP issue of the JEP argument `\" + args + \"` was not found. \" +\n+                            \"We will treat the argument `\" + args + \"` as an issue ID.\");\n+                }\n+            }\n+            if (jbsIssue.isEmpty()) {\n+                \/\/ Handle the issue ID\n+                jbsIssue = bot.issueProject().issue(args);\n+            }\n@@ -104,1 +120,1 @@\n-        var jbsIssueOpt = getJepIssue(args, bot);\n+        var jbsIssueOpt = getJepIssue(args, bot, reply);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommand.java","additions":27,"deletions":11,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -137,0 +137,19 @@\n+            \/\/ Require jep with strange jep prefix\n+            pr.addComment(\"\/jep jEP-123\");\n+\n+            \/\/ Verify the behavior\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertLastCommentContains(pr, \"this pull request will not be integrated until the [JEP-\");\n+            assertLastCommentContains(pr, \"has been targeted.\");\n+            assertTrue(pr.body().contains(\"- [ ] Change requires a JEP request to be targeted\"));\n+\n+            \/\/ Not require jep\n+            prAsReviewer.addComment(\"\/jep unneeded\");\n+\n+            \/\/ Verify the behavior\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertLastCommentContains(pr, \"determined that the JEP request is not needed for this pull request.\");\n+            assertFalse(pr.body().contains(\"Change requires a JEP request to be targeted\"));\n+\n@@ -162,0 +181,2 @@\n+            assertLastCommentContains(pr, \"The JEP issue of the JEP argument `3` was not found.\");\n+            assertLastCommentContains(pr, \"We will treat the argument `3` as an issue ID.\");\n@@ -165,0 +186,19 @@\n+\n+            \/\/ Not require jep\n+            prAsReviewer.addComment(\"\/jep unneeded\");\n+\n+            \/\/ Verify the behavior\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertLastCommentContains(pr, \"determined that the JEP request is not needed for this pull request.\");\n+            assertFalse(pr.body().contains(\"Change requires a JEP request to be targeted\"));\n+\n+            \/\/ Require jep with right JEP ID without prefix\n+            pr.addComment(\"\/jep 123\");\n+\n+            \/\/ Verify the behavior\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertLastCommentContains(pr, \"this pull request will not be integrated until the [JEP-\");\n+            assertLastCommentContains(pr, \"has been targeted.\");\n+            assertTrue(pr.body().contains(\"- [ ] Change requires a JEP request to be targeted\"));\n@@ -318,2 +358,2 @@\n-            \/\/ Require jep with wrong jep prefix\n-            pr.addComment(\"\/jep jEP-123\");\n+            \/\/ Require jep with wrong jep id without prefix\n+            pr.addComment(\"\/jep 1\");\n@@ -325,1 +365,3 @@\n-            assertLastCommentContains(pr, \"The JEP issue was not found. Please make sure you have entered it correctly.\");\n+            assertLastCommentContains(pr, \"The JEP issue of the JEP argument `1` was not found.\");\n+            assertLastCommentContains(pr, \"We will treat the argument `1` as an issue ID.\");\n+            assertLastCommentContains(pr, \"The issue `TEST-1` is not a JEP. Please make sure you have entered it correctly.\");\n@@ -357,10 +399,0 @@\n-\n-            \/\/ Require jep with wrong issue type\n-            pr.addComment(\"\/jep 1\");\n-\n-            \/\/ Verify the behavior\n-            TestBotRunner.runPeriodicItems(prBot);\n-            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n-            assertEquals(17, pr.comments().size());\n-            assertLastCommentContains(pr, \"The issue `TEST-1` is not a JEP. Please make sure you have entered it correctly.\");\n-            assertFalse(pr.body().contains(\"Change requires a JEP request to be targeted\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommandTests.java","additions":45,"deletions":13,"binary":false,"changes":58,"status":"modified"}]}