{"files":[{"patch":"@@ -1373,5 +1373,6 @@\n-        return localRepo.commits(hash.hex(), 1).stream()\n-                .anyMatch(commit -> commit.parentDiffs().stream()\n-                        .anyMatch(diff -> diff.patches().stream()\n-                                .anyMatch(patch -> (patch.source().path().isPresent() && patch.source().path().get().toString().equals(filename))\n-                                        || ((patch.target().path().isPresent() && patch.target().path().get().toString().equals(filename))))));\n+        return localRepo.show(Path.of(filename), hash).isPresent() &&\n+                localRepo.commits(hash.hex(), 1).stream()\n+                        .anyMatch(commit -> commit.parentDiffs().stream()\n+                                .anyMatch(diff -> diff.patches().stream()\n+                                        .anyMatch(patch -> (patch.source().path().isPresent() && patch.source().path().get().toString().equals(filename))\n+                                                || ((patch.target().path().isPresent() && patch.target().path().get().toString().equals(filename))))));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-            throw new RuntimeException(\"Failed to parse jcheck configuration at: \" + targetHash() + \" with extra: \" + additionalConfiguration);\n+            throw new RuntimeException(\"Failed to parse jcheck configuration at: \" + hash + \" with extra: \" + additionalConfiguration);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}