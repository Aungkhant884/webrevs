{"files":[{"patch":"@@ -106,1 +106,1 @@\n-        \/\/ If nothing was left after filtering. Update the paddingNeeded state if enough time\n+        \/\/ If nothing was left after filtering, update the paddingNeeded state if enough time\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequestPoller.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,7 @@\n-                       Instant afterQuery, List<Issue> result) {}\n+                       Instant afterQuery, List<Issue> result,\n+                       \/*\n+                        * When enough time has passed since the last time we actually returned\n+                        * results, it's possible to pad the updatedAt query parameter to avoid\n+                        * receiving the same issues over and over, only to then filter them out.\n+                        *\/\n+                       boolean paddingPossible) {}\n@@ -28,7 +34,0 @@\n-    \/**\n-     * When enough time has passed since the last time we actually returned\n-     * results, it's possible to pad the updatedAt query parameter to avoid\n-     * receiving the same issues over and over, only to then filter them out.\n-     *\/\n-    private boolean paddingPossible = false;\n-\n@@ -67,3 +66,1 @@\n-        var withRetries = addRetries(filtered);\n-\n-        \/\/ If nothing will be returned, update the paddingPossible state if enough time\n+        \/\/ If nothing was left after filtering, update the paddingPossible state if enough time\n@@ -71,3 +68,9 @@\n-        if (withRetries.isEmpty()) {\n-            if (prev != null && prev.afterQuery.isBefore(beforeQuery.minus(timeStampQueryPrecision))) {\n-                paddingPossible = true;\n+        boolean paddingPossible = false;\n+        if (filtered.isEmpty()) {\n+            if (prev != null) {\n+                \/\/ The afterQuery value that we save should be the time when we last\n+                \/\/ found something after filtering.\n+                afterQuery = prev.afterQuery;\n+                if (prev.afterQuery.isBefore(beforeQuery.minus(timeStampQueryPrecision))) {\n+                    paddingPossible = true;\n+                }\n@@ -75,2 +78,0 @@\n-        } else {\n-            paddingPossible = false;\n@@ -79,0 +80,2 @@\n+        var withRetries = addRetries(filtered);\n+\n@@ -80,1 +83,1 @@\n-        current = new QueryResult(issuesMap, maxUpdatedAt, afterQuery, withRetries);\n+        current = new QueryResult(issuesMap, maxUpdatedAt, afterQuery, withRetries, paddingPossible);\n@@ -108,1 +111,1 @@\n-        } else if (paddingPossible) {\n+        } else if (prev.paddingPossible) {\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/IssuePoller.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -114,0 +114,7 @@\n+            \/\/ The query should still return the issue\n+            assertEquals(1, issuePoller.getCurrentQueryResult().issues().size());\n+\n+            \/\/ The same should happen again until we call lastBatchHandled()\n+            issues = issuePoller.updatedIssues();\n+            assertEquals(0, issues.size());\n+            assertEquals(1, issuePoller.getCurrentQueryResult().issues().size());\n@@ -121,0 +128,7 @@\n+            assertTrue(issuePoller.getCurrentQueryResult().issues().isEmpty(),\n+                    \"Nothing should have been returned by the query but contained: \"\n+                            + issuePoller.getCurrentQueryResult().issues());\n+\n+            \/\/ The same should happen again until we call lastBatchHandled()\n+            issues = issuePoller.updatedIssues();\n+            assertEquals(0, issues.size());\n@@ -131,0 +145,4 @@\n+\n+            \/\/ The same should happen again until we call lastBatchHandled()\n+            issues = issuePoller.updatedIssues();\n+            assertEquals(1, issues.size());\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/IssuePollerTests.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}