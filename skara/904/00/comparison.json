{"files":[{"patch":"@@ -216,7 +216,0 @@\n-                       .build();\n-    }\n-\n-    HostUser hostUser(String username) {\n-        return HostUser.builder()\n-                       .username(username)\n-                       .supplier(() -> user(username).orElseThrow())\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubHost.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -301,12 +301,20 @@\n-            \"query {\",\n-            \"    repository(owner: \\\"\" + owner + \"\\\", name: \\\"\" + name + \"\\\") {\",\n-            \"        commitComments(last: 200) {\",\n-            \"            nodes {\",\n-            \"                createdAt\",\n-            \"                updatedAt\",\n-            \"                author { login }\",\n-            \"                databaseId\",\n-            \"                commit { oid }\",\n-            \"                body\",\n-            \"            }\",\n-            \"        }\",\n+            \"{\",\n+            \"  repository(owner: \\\"\" + owner + \"\\\", name: \\\"\" + name + \"\\\") {\",\n+            \"    commitComments(last: 100) {\",\n+            \"      nodes {\",\n+            \"        createdAt,\",\n+            \"        updatedAt,\",\n+            \"        author {,\",\n+            \"          login,\",\n+            \"          __typename,\",\n+            \"          ... on Bot {\",\n+            \"            databaseId\",\n+            \"          },\",\n+            \"          ... on User {\",\n+            \"            databaseId\",\n+            \"          },\",\n+            \"        },\",\n+            \"        databaseId,\",\n+            \"        commit { oid },\",\n+            \"        body\",\n+            \"      }\",\n@@ -314,0 +322,1 @@\n+            \"  }\",\n@@ -322,21 +331,29 @@\n-        return data.get(\"repository\")\n-                   .get(\"commitComments\")\n-                   .get(\"nodes\")\n-                   .stream()\n-                   .map(o -> {\n-                       var hash = new Hash(o.get(\"commit\").get(\"oid\").asString());\n-                       var createdAt = ZonedDateTime.parse(o.get(\"createdAt\").asString());\n-                       var updatedAt = ZonedDateTime.parse(o.get(\"updatedAt\").asString());\n-                       var id = o.get(\"databaseId\").asString();\n-                       var body = o.get(\"body\").asString();\n-                       var user = gitHubHost.hostUser(o.get(\"login\").asString());\n-                       return new CommitComment(hash,\n-                                                null,\n-                                                -1,\n-                                                id,\n-                                                body,\n-                                                user,\n-                                                createdAt,\n-                                                updatedAt);\n-                   })\n-                   .collect(Collectors.toList());\n+        var comments = data.get(\"repository\")\n+                           .get(\"commitComments\")\n+                           .get(\"nodes\")\n+                           .stream()\n+                           .map(o -> {\n+                               var hash = new Hash(o.get(\"commit\").get(\"oid\").asString());\n+                               var createdAt = ZonedDateTime.parse(o.get(\"createdAt\").asString());\n+                               var updatedAt = ZonedDateTime.parse(o.get(\"updatedAt\").asString());\n+                               var id = String.valueOf(o.get(\"databaseId\").asInt());\n+                               var body = o.get(\"body\").asString();\n+                               var username = o.get(\"author\").get(\"login\").asString();\n+                               var typename = o.get(\"author\").get(\"__typename\").asString();\n+                               if (typename.equals(\"Bot\")) {\n+                                   username += \"[bot]\";\n+                               }\n+                               var userid = o.get(\"author\").get(\"databaseId\").asInt();\n+                               var user = gitHubHost.hostUser(userid, username);\n+                               return new CommitComment(hash,\n+                                                        null,\n+                                                        -1,\n+                                                        id,\n+                                                        body,\n+                                                        user,\n+                                                        createdAt,\n+                                                        updatedAt);\n+                           })\n+                           .collect(Collectors.toList());\n+        Collections.reverse(comments);\n+        return comments;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":50,"deletions":33,"binary":false,"changes":83,"status":"modified"}]}