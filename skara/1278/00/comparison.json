{"files":[{"patch":"@@ -237,1 +237,3 @@\n-                return List.of();\n+                \/\/ We still need to make sure any commands get run or are able to finish a\n+                \/\/ previously interrupted run\n+                return List.of(new PullRequestCommandWorkItem(bot, pr, errorHandler));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -321,0 +321,2 @@\n+        \/\/ Note that the order of operations here is tested in IntegrateTests::retryAfterInterrupt\n+        \/\/ so any change here requires careful update of that test\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,1 @@\n-import org.openjdk.skara.vcs.Branch;\n-import org.openjdk.skara.vcs.Repository;\n+import org.openjdk.skara.vcs.*;\n@@ -1148,6 +1147,3 @@\n-            \/\/ Simulate that interruption occurred after prePush comment was added, but before change was\n-            \/\/ pushed\n-            pr.setState(Issue.State.OPEN);\n-            pr.removeLabel(\"integrated\");\n-            pr.addLabel(\"ready\");\n-            pr.addLabel(\"rfr\");\n+            \/\/ Simulate that interruption occurred after prePush comment was added,\n+            \/\/ but before any labels were changed\n+            String commitCommentBody = \"Pushed as commit\";\n@@ -1155,1 +1151,1 @@\n-                    .filter(comment -> comment.body().contains(\"Pushed as commit\"))\n+                    .filter(comment -> comment.body().contains(commitCommentBody))\n@@ -1157,1 +1153,5 @@\n-            ((TestPullRequest) pr).removeComment(commitComment);\n+            pr.removeComment(commitComment);\n+            pr.addLabel(\"rfr\");\n+            pr.addLabel(\"ready\");\n+            pr.setState(Issue.State.OPEN);\n+            pr.removeLabel(\"integrated\");\n@@ -1159,1 +1159,0 @@\n-\n@@ -1162,1 +1161,0 @@\n-\n@@ -1164,7 +1162,1 @@\n-            var pushed = pr.comments().stream()\n-                    .filter(comment -> comment.body().contains(\"Pushed as commit\"))\n-                    .count();\n-            assertEquals(1, pushed, \"Commit comment not found\");\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            retryAfterInterruptVerifyIntegrated(pr);\n@@ -1172,5 +1164,2 @@\n-            \/\/ Remove some labels and the commit comment to simulate that last attempt was interrupted\n-            \/\/ after the push was made and the PR was closed\n-            pr.removeLabel(\"integrated\");\n-            pr.addLabel(\"ready\");\n-            pr.addLabel(\"rfr\");\n+            \/\/ Simulate that interruption occurred right after the integrated label was\n+            \/\/ added\n@@ -1178,1 +1167,1 @@\n-                    .filter(comment -> comment.body().contains(\"Pushed as commit\"))\n+                    .filter(comment -> comment.body().contains(commitCommentBody))\n@@ -1180,2 +1169,4 @@\n-            ((TestPullRequest) pr).removeComment(commitComment2);\n-\n+            pr.removeComment(commitComment2);\n+            pr.addLabel(\"rfr\");\n+            pr.addLabel(\"ready\");\n+            pr.setState(Issue.State.OPEN);\n@@ -1184,1 +1175,0 @@\n-\n@@ -1186,7 +1176,1 @@\n-            pushed = pr.comments().stream()\n-                    .filter(comment -> comment.body().contains(\"Pushed as commit\"))\n-                    .count();\n-            assertEquals(1, pushed, \"Commit comment not found\");\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            retryAfterInterruptVerifyIntegrated(pr);\n@@ -1194,1 +1178,1 @@\n-            \/\/ Simulate that interruption happened just before the commit comment was added\n+            \/\/ Simulate that interruption occurred right after the PR was closed\n@@ -1196,1 +1180,1 @@\n-                    .filter(comment -> comment.body().equals(commitComment2.body()))\n+                    .filter(comment -> comment.body().contains(commitCommentBody))\n@@ -1198,1 +1182,7 @@\n-            ((TestPullRequest) pr).removeComment(commitComment3);\n+            pr.removeComment(commitComment3);\n+            pr.addLabel(\"rfr\");\n+            pr.addLabel(\"ready\");\n+            \/\/ The bot should now retry\n+            TestBotRunner.runPeriodicItems(mergeBot);\n+            \/\/ The bot should reply with an ok message\n+            retryAfterInterruptVerifyIntegrated(pr);\n@@ -1200,0 +1190,6 @@\n+            \/\/ Simulate that interruption occurred right after the ready label was removed\n+            var commitComment4 = pr.comments().stream()\n+                    .filter(comment -> comment.body().contains(commitCommentBody))\n+                    .findAny().orElseThrow();\n+            pr.removeComment(commitComment4);\n+            pr.addLabel(\"rfr\");\n@@ -1202,0 +1198,2 @@\n+            \/\/ The bot should reply with an ok message\n+            retryAfterInterruptVerifyIntegrated(pr);\n@@ -1203,0 +1201,7 @@\n+            \/\/ Simulate that interruption happened just before the commit comment was added\n+            var commitComment5 = pr.comments().stream()\n+                    .filter(comment -> comment.body().contains(commitCommentBody))\n+                    .findAny().orElseThrow();\n+            pr.removeComment(commitComment5);\n+            \/\/ The bot should now retry\n+            TestBotRunner.runPeriodicItems(mergeBot);\n@@ -1204,7 +1209,1 @@\n-            pushed = pr.comments().stream()\n-                    .filter(comment -> comment.body().contains(\"Pushed as commit\"))\n-                    .count();\n-            assertEquals(1, pushed, \"Commit comment not found\");\n-            assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n-            assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n-            assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+            retryAfterInterruptVerifyIntegrated(pr);\n@@ -1214,1 +1213,0 @@\n-            var numComments = pr.comments().size();\n@@ -1223,0 +1221,10 @@\n+    private void retryAfterInterruptVerifyIntegrated(PullRequest pr) throws IOException {\n+        var pushed = pr.comments().stream()\n+                .filter(comment -> comment.body().contains(\"Pushed as commit\"))\n+                .count();\n+        assertEquals(1, pushed, \"Commit comment not found\");\n+        assertFalse(pr.labelNames().contains(\"ready\"), \"ready label not removed\");\n+        assertFalse(pr.labelNames().contains(\"rfr\"), \"rfr label not removed\");\n+        assertTrue(pr.labelNames().contains(\"integrated\"), \"integrated label not added\");\n+    }\n+\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateTests.java","additions":54,"deletions":46,"binary":false,"changes":100,"status":"modified"}]}