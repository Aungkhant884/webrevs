{"files":[{"patch":"@@ -392,1 +392,1 @@\n-            \/\/ Check Force push\n+            \/\/ Check force push\n@@ -396,1 +396,1 @@\n-                    var lastForcePushSuggestion = pr.comments().stream()\n+                    var lastForcePushSuggestion = comments.stream()\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -184,2 +184,2 @@\n-     * Get the last force-push time. If there is no force-push in pull request\n-     * or the restful api doesn't support force-push, return empty.\n+     * Return the last time something was force pushed while not in draft state.\n+     * If there is no force-push in pull request or the restful api doesn't support force-push, return empty.\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -768,9 +768,10 @@\n-        return request.get(\"issues\/\" + json.get(\"number\").toString() + \"\/timeline\")\n-                      .execute()\n-                      .stream()\n-                      .map(JSONValue::asObject)\n-                      .filter(obj -> obj.contains(\"event\"))\n-                      .filter(obj -> obj.get(\"event\").asString().equals(\"head_ref_force_pushed\"))\n-                      .filter(obj->ZonedDateTime.parse(obj.get(\"created_at\").asString()).isAfter(lastMarkedAsReadyTime()))\n-                      .reduce((a, b) -> b)\n-                      .map(obj -> ZonedDateTime.parse(obj.get(\"created_at\").asString()));\n+        var timelineJSON = request.get(\"issues\/\" + json.get(\"number\").toString() + \"\/timeline\")\n+                .execute();\n+        return timelineJSON\n+                .stream()\n+                .map(JSONValue::asObject)\n+                .filter(obj -> obj.contains(\"event\"))\n+                .filter(obj -> obj.get(\"event\").asString().equals(\"head_ref_force_pushed\"))\n+                .filter(obj -> ZonedDateTime.parse(obj.get(\"created_at\").asString()).isAfter(lastMarkedAsReadyTime(timelineJSON)))\n+                .reduce((a, b) -> b)\n+                .map(obj -> ZonedDateTime.parse(obj.get(\"created_at\").asString()));\n@@ -800,1 +801,1 @@\n-    private ZonedDateTime lastMarkedAsReadyTime() {\n+    private ZonedDateTime lastMarkedAsReadyTime(JSONValue timelineJSON) {\n@@ -802,2 +803,1 @@\n-        Optional<ZonedDateTime> latestTime = request.get(\"issues\/\" + json.get(\"number\").toString() + \"\/timeline\")\n-                .execute()\n+        Optional<ZonedDateTime> latestTime = timelineJSON\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-        if(store().lastForcePushTime()!= null && store().lastForcePushTime().isAfter(store().lastMarkedAsReadyTime())) {\n+        if (store().lastForcePushTime() != null && store().lastForcePushTime().isAfter(store().lastMarkedAsReadyTime())) {\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        if(!draft){\n+        if (!draft) {\n@@ -132,1 +132,1 @@\n-        if(!draft){\n+        if (!draft) {\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequestStore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}