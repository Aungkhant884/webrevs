{"files":[{"patch":"@@ -67,1 +67,1 @@\n-            reply.println(\"this repository is not allowed to use the `csr` command.\");\n+            reply.println(\"This repository has not been configured to use the `csr` command.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,0 +82,5 @@\n+        if (!bot.enableJep()) {\n+            reply.println(\"This repository has not been configured to use the `jep` command.\");\n+            return;\n+        }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommand.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+    private final boolean enableJep;\n@@ -79,1 +80,1 @@\n-                   Set<String> integrators, Set<Integer> excludeCommitCommentsFrom, boolean enableCsr) {\n+                   Set<String> integrators, Set<Integer> excludeCommitCommentsFrom, boolean enableCsr, boolean enableJep) {\n@@ -103,0 +104,1 @@\n+        this.enableJep = enableJep;\n@@ -286,0 +288,4 @@\n+    public boolean enableJep() {\n+        return enableJep;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    private boolean enableJep = false;\n@@ -161,0 +162,5 @@\n+    public PullRequestBotBuilder enableJep(boolean enableJep) {\n+        this.enableJep = enableJep;\n+        return this;\n+    }\n+\n@@ -182,1 +188,1 @@\n-                                  confOverrideRef, censusLink, forks, integrators, excludeCommitCommentsFrom, enableCsr);\n+                                  confOverrideRef, censusLink, forks, integrators, excludeCommitCommentsFrom, enableCsr, enableJep);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -164,0 +164,3 @@\n+            if (repo.value().contains(\"jep\")) {\n+                botBuilder.enableJep(repo.value().get(\"jep\").asBoolean());\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -672,1 +672,1 @@\n-            assertLastCommentContains(pr, \"this repository is not allowed to use the `csr` command.\");\n+            assertLastCommentContains(pr, \"This repository has not been configured to use the `csr` command.\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1206,1 +1206,1 @@\n-                    .censusRepo(censusBuilder.build()).build();\n+                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-                    .censusRepo(censusBuilder.build()).build();\n+                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n@@ -182,1 +182,1 @@\n-                    .censusRepo(censusBuilder.build()).build();\n+                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n@@ -265,1 +265,1 @@\n-                    .censusRepo(censusBuilder.build()).build();\n+                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n@@ -380,1 +380,1 @@\n-                    .censusRepo(censusBuilder.build()).build();\n+                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n@@ -431,0 +431,45 @@\n+\n+    @Test\n+    void testEnableJepConfig(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issueProject = credentials.getIssueProject();\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id());\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType(),\n+                    Path.of(\"appendable.txt\"), Set.of(\"issues\"), null);\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            var mainIssue = issueProject.createIssue(\"The main issue\", List.of(\"main\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n+            var jepIssue = issueProject.createIssue(\"The jep issue\", List.of(\"Jep body\"),\n+                    Map.of(\"issuetype\", JSON.of(\"JEP\"), \"status\", JSON.object().put(\"name\", \"Submitted\"), JEP_NUMBER, JSON.of(\"123\")));\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", mainIssue.id() + \": \" + mainIssue.title());\n+\n+            \/\/ Test the PR bot with jep disable\n+            var disableJepBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n+                            .enableJep(false).censusRepo(censusBuilder.build()).build();\n+            pr.addComment(\"\/jep TEST-2\");\n+            TestBotRunner.runPeriodicItems(disableJepBot);\n+            assertLastCommentContains(pr, \"This repository has not been configured to use the `jep` command.\");\n+            assertFalse(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertFalse(pr.body().contains(\"- [ ] Change requires a JEP request to be targeted\"));\n+\n+            \/\/ Test the PR bot with jep enable\n+            var enableJepBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n+                    .enableJep(true).censusRepo(censusBuilder.build()).build();\n+            pr.addComment(\"\/jep TEST-2\");\n+            TestBotRunner.runPeriodicItems(enableJepBot);\n+            assertLastCommentContains(pr, \"pull request will not be integrated until the\");\n+            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n+            assertTrue(pr.body().contains(\"- [ ] Change requires a JEP request to be targeted\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommandTests.java","additions":49,"deletions":4,"binary":false,"changes":53,"status":"modified"}]}