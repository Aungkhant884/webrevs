{"files":[{"patch":"@@ -84,1 +84,1 @@\n-                var message = \"@\" + pr.author().userName() + \" This pull request has been inactive for more than \" +\n+                var message = \"@\" + pr.author().username() + \" This pull request has been inactive for more than \" +\n@@ -94,1 +94,1 @@\n-        var message = \"@\" + pr.author().userName() + \" This pull request has been inactive for more than \" +\n+        var message = \"@\" + pr.author().username() + \" This pull request has been inactive for more than \" +\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-    static ArchiveItem from(PullRequest pr, Review review, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole, ArchiveItem parent) {\n+    static ArchiveItem from(PullRequest pr, Review review, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUsername hostUserToUsername, HostUserToRole hostUserToRole, ArchiveItem parent) {\n@@ -205,2 +205,2 @@\n-                               () -> ArchiveMessages.composeReview(pr, review, hostUserToUserName, hostUserToRole),\n-                               () -> ArchiveMessages.composeReviewFooter(pr, review, hostUserToUserName, hostUserToRole));\n+                               () -> ArchiveMessages.composeReview(pr, review, hostUserToUsername, hostUserToRole),\n+                               () -> ArchiveMessages.composeReviewFooter(pr, review, hostUserToUsername, hostUserToRole));\n@@ -240,1 +240,1 @@\n-                if (eligibleParents.get(i).author.userName().equals(username)) {\n+                if (eligibleParents.get(i).author.username().equals(username)) {\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveItem.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-    private static String composeReviewVerdict(Review review, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole) {\n+    private static String composeReviewVerdict(Review review, HostUserToUsername hostUserToUsername, HostUserToRole hostUserToRole) {\n@@ -362,1 +362,1 @@\n-            result.append(hostUserToUserName.userName(review.reviewer()));\n+            result.append(hostUserToUsername.username(review.reviewer()));\n@@ -370,1 +370,1 @@\n-    static String composeReview(PullRequest pr, Review review, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole) {\n+    static String composeReview(PullRequest pr, Review review, HostUserToUsername hostUserToUsername, HostUserToRole hostUserToRole) {\n@@ -374,1 +374,1 @@\n-            return composeReviewVerdict(review, hostUserToUserName, hostUserToRole);\n+            return composeReviewVerdict(review, hostUserToUsername, hostUserToRole);\n@@ -378,1 +378,1 @@\n-    static String composeReviewFooter(PullRequest pr, Review review, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole) {\n+    static String composeReviewFooter(PullRequest pr, Review review, HostUserToUsername hostUserToUsername, HostUserToRole hostUserToRole) {\n@@ -381,1 +381,1 @@\n-            var verdict = composeReviewVerdict(review, hostUserToUserName, hostUserToRole);\n+            var verdict = composeReviewVerdict(review, hostUserToUsername, hostUserToRole);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveMessages.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        if (bot.ignoredUsers().contains(author.userName())) {\n+        if (bot.ignoredUsers().contains(author.username())) {\n@@ -183,1 +183,1 @@\n-                                             originalAuthor.id() + \"+\" + originalAuthor.userName() + \"@\" +\n+                                             originalAuthor.id() + \"+\" + originalAuthor.username() + \"@\" +\n@@ -191,1 +191,1 @@\n-    private String getAuthorUserName(CensusInstance censusInstance, HostUser originalAuthor) {\n+    private String getAuthorUsername(CensusInstance censusInstance, HostUser originalAuthor) {\n@@ -193,2 +193,2 @@\n-        var userName = contributor != null ? contributor.username() : originalAuthor.userName() + \"@\" + censusInstance.namespace().name();\n-        return userName;\n+        var username = contributor != null ? contributor.username() : originalAuthor.username() + \"@\" + censusInstance.namespace().name();\n+        return username;\n@@ -270,1 +270,1 @@\n-                    if (comment.author().userName().equals(readyComment.getKey())) {\n+                    if (comment.author().username().equals(readyComment.getKey())) {\n@@ -356,1 +356,1 @@\n-                                                      user -> getAuthorUserName(census, user),\n+                                                      user -> getAuthorUsername(census, user),\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-interface HostUserToUserName {\n-    String userName(HostUser user);\n+interface HostUserToUsername {\n+    String username(HostUser user);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/HostUserToUsername.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/HostUserToUserName.java","status":"renamed"},{"patch":"@@ -78,1 +78,1 @@\n-    private List<ArchiveItem> generateArchiveItems(List<Email> sentEmails, Repository localRepo, URI issueTracker, String issuePrefix, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole, WebrevStorage.WebrevGenerator webrevGenerator, WebrevNotification webrevNotification, String subjectPrefix) throws IOException {\n+    private List<ArchiveItem> generateArchiveItems(List<Email> sentEmails, Repository localRepo, URI issueTracker, String issuePrefix, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUsername hostUserToUsername, HostUserToRole hostUserToRole, WebrevStorage.WebrevGenerator webrevGenerator, WebrevNotification webrevNotification, String subjectPrefix) throws IOException {\n@@ -131,1 +131,1 @@\n-            var reply = ArchiveItem.from(pr, review, hostUserToEmailAuthor, hostUserToUserName, hostUserToRole, parent);\n+            var reply = ArchiveItem.from(pr, review, hostUserToEmailAuthor, hostUserToUsername, hostUserToRole, parent);\n@@ -272,1 +272,1 @@\n-    List<Email> generateNewEmails(List<Email> sentEmails, Duration cooldown, Repository localRepo, URI issueTracker, String issuePrefix, WebrevStorage.WebrevGenerator webrevGenerator, WebrevNotification webrevNotification, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUserName hostUserToUserName, HostUserToRole hostUserToRole, String subjectPrefix, Consumer<Instant> retryConsumer) throws IOException {\n+    List<Email> generateNewEmails(List<Email> sentEmails, Duration cooldown, Repository localRepo, URI issueTracker, String issuePrefix, WebrevStorage.WebrevGenerator webrevGenerator, WebrevNotification webrevNotification, HostUserToEmailAuthor hostUserToEmailAuthor, HostUserToUsername hostUserToUsername, HostUserToRole hostUserToRole, String subjectPrefix, Consumer<Instant> retryConsumer) throws IOException {\n@@ -274,1 +274,1 @@\n-        var allItems = generateArchiveItems(sentEmails, localRepo, issueTracker, issuePrefix, hostUserToEmailAuthor, hostUserToUserName, hostUserToRole, webrevGenerator, webrevNotification, subjectPrefix);\n+        var allItems = generateArchiveItems(sentEmails, localRepo, issueTracker, issuePrefix, hostUserToEmailAuthor, hostUserToUsername, hostUserToRole, webrevGenerator, webrevNotification, subjectPrefix);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ReviewArchive.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -151,1 +151,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -228,1 +228,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListArchiveReaderBotTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-                repository.forge().currentUser().userName() +\n+                repository.forge().currentUser().username() +\n@@ -127,1 +127,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -136,1 +136,1 @@\n-                                            .readyComments(Map.of(ignored.forge().currentUser().userName(), Pattern.compile(\"ready\")))\n+                                            .readyComments(Map.of(ignored.forge().currentUser().username(), Pattern.compile(\"ready\")))\n@@ -295,1 +295,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -369,1 +369,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -443,1 +443,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -522,1 +522,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -599,1 +599,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -682,1 +682,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -736,1 +736,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -1150,1 +1150,1 @@\n-            pr.addComment(\"@\" + reviewer.forge().currentUser().userName() + \" reply to first\");\n+            pr.addComment(\"@\" + reviewer.forge().currentUser().username() + \" reply to first\");\n@@ -1215,1 +1215,1 @@\n-            pr.addReviewCommentReply(comment, \"@\" + reviewer.forge().currentUser().userName() + \" reply to first\");\n+            pr.addReviewCommentReply(comment, \"@\" + reviewer.forge().currentUser().username() + \" reply to first\");\n@@ -2060,1 +2060,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -2230,1 +2230,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -2354,1 +2354,1 @@\n-                                                   .ignoredUsers(Set.of(bot.forge().currentUser().userName()))\n+                                                   .ignoredUsers(Set.of(bot.forge().currentUser().username()))\n@@ -2419,1 +2419,1 @@\n-                                                   .ignoredUsers(Set.of(bot.forge().currentUser().userName()))\n+                                                   .ignoredUsers(Set.of(bot.forge().currentUser().username()))\n@@ -2486,1 +2486,1 @@\n-                                                   .ignoredUsers(Set.of(bot.forge().currentUser().userName()))\n+                                                   .ignoredUsers(Set.of(bot.forge().currentUser().username()))\n@@ -2750,1 +2750,1 @@\n-                                                   .ignoredUsers(Set.of(bot.forge().currentUser().userName()))\n+                                                   .ignoredUsers(Set.of(bot.forge().currentUser().username()))\n@@ -2924,1 +2924,1 @@\n-                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))\n+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().username()))\n@@ -2935,1 +2935,1 @@\n-                                            .readyComments(Map.of(ignored.forge().currentUser().userName(), Pattern.compile(\"ready\")))\n+                                            .readyComments(Map.of(ignored.forge().currentUser().username(), Pattern.compile(\"ready\")))\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotTests.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-                if (comment.author().userName().equals(readyComment.getKey())) {\n+                if (comment.author().username().equals(readyComment.getKey())) {\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/NotifyBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-                return Optional.of(user.get().userName());\n+                return Optional.of(user.get().username());\n@@ -97,1 +97,1 @@\n-                return Optional.of(user.get().userName());\n+                return Optional.of(user.get().username());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-                                     .readyComments(Map.of(reviewer.forge().currentUser().userName(), Pattern.compile(\"This is now ready\")))\n+                                     .readyComments(Map.of(reviewer.forge().currentUser().username(), Pattern.compile(\"This is now ready\")))\n@@ -272,1 +272,1 @@\n-                                     .readyComments(Map.of(reviewer.forge().currentUser().userName(), Pattern.compile(\"This is now ready\")))\n+                                     .readyComments(Map.of(reviewer.forge().currentUser().username(), Pattern.compile(\"This is now ready\")))\n@@ -390,1 +390,1 @@\n-            var authorEmailAddress = issueProject.issueTracker().currentUser().userName() + \"@openjdk.org\";\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().username() + \"@openjdk.org\";\n@@ -448,1 +448,1 @@\n-            var authorEmailAddress = issueProject.issueTracker().currentUser().userName() + \"@openjdk.org\";\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().username() + \"@openjdk.org\";\n@@ -536,1 +536,1 @@\n-            var authorEmailAddress = issueProject.issueTracker().currentUser().userName() + \"@openjdk.org\";\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().username() + \"@openjdk.org\";\n@@ -589,1 +589,1 @@\n-            var authorEmailAddress = issueProject.issueTracker().currentUser().email().orElse(issueProject.issueTracker().currentUser().userName() + \"@otherjdk.org\");\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().email().orElse(issueProject.issueTracker().currentUser().username() + \"@otherjdk.org\");\n@@ -832,1 +832,1 @@\n-            var authorEmailAddress = issueProject.issueTracker().currentUser().userName() + \"@openjdk.org\";\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().username() + \"@openjdk.org\";\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        writer.println(\"@\" + pr.author().userName() + \" this pull request must refer to an issue in \" +\n+        writer.println(\"@\" + pr.author().username() + \" this pull request must refer to an issue in \" +\n@@ -53,1 +53,1 @@\n-        writer.println(\"@\" + pr.author().userName() + \" please create a CSR request and add link to it in \" +\n+        writer.println(\"@\" + pr.author().username() + \" please create a CSR request and add link to it in \" +\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-            return \"@\" + reviewer.userName() + \" (no known \" + namespace.name() + \" user name \/ role)\";\n+            return \"@\" + reviewer.username() + \" (no known \" + namespace.name() + \" user name \/ role)\";\n@@ -306,1 +306,1 @@\n-            ret.append(reviewer.userName());\n+            ret.append(reviewer.username());\n@@ -576,1 +576,1 @@\n-        message.append(pr.author().userName());\n+        message.append(pr.author().username());\n@@ -677,1 +677,1 @@\n-                                    .map(review -> \"@\" + review.reviewer().userName())\n+                                    .map(review -> \"@\" + review.reviewer().username())\n@@ -701,1 +701,1 @@\n-        message.append(pr.author().userName());\n+        message.append(pr.author().username());\n@@ -722,1 +722,1 @@\n-        if (!pr.author().fullName().equals(pr.author().userName()) &&\n+        if (!pr.author().fullName().equals(pr.author().username()) &&\n@@ -725,1 +725,1 @@\n-            var message = \":warning: @\" + pr.author().userName() + \" the full name on your profile does not match \" +\n+            var message = \":warning: @\" + pr.author().username() + \" the full name on your profile does not match \" +\n@@ -763,1 +763,1 @@\n-        var message = \":warning: @\" + pr.author().userName() + \" \" +\n+        var message = \":warning: @\" + pr.author().username() + \" \" +\n@@ -793,1 +793,1 @@\n-        var message = \"@\" + pr.author().userName() + \" this pull request can not be integrated into \" +\n+        var message = \"@\" + pr.author().username() + \" this pull request can not be integrated into \" +\n@@ -816,1 +816,1 @@\n-        var message = \"⚠️  @\" + pr.author().userName() +\n+        var message = \"⚠️  @\" + pr.author().username() +\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -63,4 +63,4 @@\n-            var userName = contributor.username();\n-            return contributor.username() + project.isLead(userName, censusVersion) +\n-                    project.isReviewer(userName, censusVersion) + project.isCommitter(userName, censusVersion) +\n-                    project.isAuthor(userName, censusVersion);\n+            var username = contributor.username();\n+            return contributor.username() + project.isLead(username, censusVersion) +\n+                    project.isReviewer(username, censusVersion) + project.isCommitter(username, censusVersion) +\n+                    project.isAuthor(username, censusVersion);\n@@ -236,1 +236,1 @@\n-                                   \":warning: @\" + pr.author().userName() + \" could not find any commit with hash `\" +\n+                                   \":warning: @\" + pr.author().username() + \" could not find any commit with hash `\" +\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-        printer.print(command.user().userName());\n+        printer.print(command.user().username());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            reply.println(\"Only the author (@\" + pr.author().userName() + \") is allowed to issue the `contributor` command.\");\n+            reply.println(\"Only the author (@\" + pr.author().username() + \") is allowed to issue the `contributor` command.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ContributorCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-            reply.print(\"Only the author (@\" + pr.author().userName() + \") is allowed to issue the `integrate` command.\");\n+            reply.print(\"Only the author (@\" + pr.author().username() + \") is allowed to issue the `integrate` command.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -277,1 +277,1 @@\n-            reply.println(\"Only the author (@\" + pr.author().userName() + \") is allowed to issue the `\/\" + name + \"` command.\");\n+            reply.println(\"Only the author (@\" + pr.author().username() + \") is allowed to issue the `\/\" + name + \"` command.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IssueCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        message.append(pr.author().userName());\n+        message.append(pr.author().username());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-                if (comment.author().userName().equals(readyComment.getKey())) {\n+                if (comment.author().username().equals(readyComment.getKey())) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        reply.print(\"@\" + pr.author().userName() + \" \");\n+        reply.print(\"@\" + pr.author().username() + \" \");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/RejectCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-            reply.println(\"Only the author (@\" + pr.author().userName() + \") is allowed to issue the `reviewer` command.\");\n+            reply.println(\"Only the author (@\" + pr.author().username() + \") is allowed to issue the `reviewer` command.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewerCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-            reply.println(\"The change author (@\" + pr.author().userName() + \") must issue an `integrate` command before the integration can be sponsored.\");\n+            reply.println(\"The change author (@\" + pr.author().username() + \") must issue an `integrate` command before the integration can be sponsored.\");\n@@ -62,1 +62,1 @@\n-            reply.print(\"The PR has been updated since the change author (@\" + pr.author().userName() + \") \");\n+            reply.print(\"The PR has been updated since the change author (@\" + pr.author().username() + \") \");\n@@ -74,1 +74,1 @@\n-        reply.print(\"@\" + pr.author().userName() + \" \");\n+        reply.print(\"@\" + pr.author().username() + \" \");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-            reply.println(\"Only the author (@\" + pr.author().userName() + \") is allowed to issue the `\/summary` command.\");\n+            reply.println(\"Only the author (@\" + pr.author().username() + \") is allowed to issue the `\/summary` command.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SummaryCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-            var reviewerString = \"Generated Reviewer 2 (@\" + reviewer.forge().currentUser().userName() + \" - **Reviewer**)\";\n+            var reviewerString = \"Generated Reviewer 2 (@\" + reviewer.forge().currentUser().username() + \" - **Reviewer**)\";\n@@ -426,1 +426,1 @@\n-            assertTrue(comment.body().contains(reviewer.forge().currentUser().userName()));\n+            assertTrue(comment.body().contains(reviewer.forge().currentUser().username()));\n@@ -439,1 +439,1 @@\n-            assertTrue(comment.body().contains(reviewer.forge().currentUser().userName()));\n+            assertTrue(comment.body().contains(reviewer.forge().currentUser().username()));\n@@ -816,1 +816,1 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).readyComments(Map.of(reviewer.forge().currentUser().userName(), Pattern.compile(\"proceed\"))).build();\n+            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).readyComments(Map.of(reviewer.forge().currentUser().username(), Pattern.compile(\"proceed\"))).build();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-            pr.addComment(\"\/contributor add @\" + author.forge().currentUser().userName());\n+            pr.addComment(\"\/contributor add @\" + author.forge().currentUser().username());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ContributorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-            pr.addComment(\"\/reviewer credit @\" + integrator.forge().currentUser().userName());\n+            pr.addComment(\"\/reviewer credit @\" + integrator.forge().currentUser().username());\n@@ -78,1 +78,1 @@\n-            pr.addComment(\"\/reviewer remove @\" + integrator.forge().currentUser().userName());\n+            pr.addComment(\"\/reviewer remove @\" + integrator.forge().currentUser().username());\n@@ -85,1 +85,1 @@\n-            pr.addComment(\"\/reviewer remove @\" + integrator.forge().currentUser().userName());\n+            pr.addComment(\"\/reviewer remove @\" + integrator.forge().currentUser().username());\n@@ -257,1 +257,1 @@\n-            pr.addComment(\"\/reviewer credit @\" + author.forge().currentUser().userName());\n+            pr.addComment(\"\/reviewer credit @\" + author.forge().currentUser().username());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewerTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-                                var requestor = state.requested().author().userName();\n+                                var requestor = state.requested().author().username();\n@@ -344,1 +344,1 @@\n-                   \"@\" + state.requested().author().userName() + \" the test \" + wording + String.join(\",\", nonExistingJobs) + \" does not exist\"\n+                   \"@\" + state.requested().author().username() + \" the test \" + wording + String.join(\",\", nonExistingJobs) + \" does not exist\"\n@@ -353,1 +353,1 @@\n-                        \"@\" + state.requested().author().userName() + \" you need to get approval to run the tests in \" +\n+                        \"@\" + state.requested().author().username() + \" you need to get approval to run the tests in \" +\n@@ -390,1 +390,1 @@\n-                       \"@\" + state.requested().author().userName() + \" the test \" + wording + String.join(\",\", nonExistingJobs) + \" does not exist\"\n+                       \"@\" + state.requested().author().username() + \" the test \" + wording + String.join(\",\", nonExistingJobs) + \" does not exist\"\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItem.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-            System.out.println(pr.author().userName());\n+            System.out.println(pr.author().username());\n@@ -235,1 +235,1 @@\n-            var usernames = pr.assignees().stream().map(u -> u.userName()).collect(Collectors.toList());\n+            var usernames = pr.assignees().stream().map(u -> u.username()).collect(Collectors.toList());\n@@ -247,1 +247,1 @@\n-            var usernames = pr.reviews().stream().map(u -> u.reviewer().userName()).collect(Collectors.toList());\n+            var usernames = pr.reviews().stream().map(u -> u.reviewer().username()).collect(Collectors.toList());\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-            var prAuthor = pr.author().userName();\n+            var prAuthor = pr.author().username();\n@@ -186,1 +186,1 @@\n-                                .map(HostUser::userName)\n+                                .map(HostUser::username)\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -196,2 +196,2 @@\n-    private String getFullName(String userName) {\n-        var details = user(userName);\n+    private String getFullName(String username) {\n+        var details = user(username);\n@@ -323,1 +323,1 @@\n-        var username = URLEncoder.encode(user.userName(), StandardCharsets.UTF_8);\n+        var username = URLEncoder.encode(user.username(), StandardCharsets.UTF_8);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubHost.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -561,1 +561,1 @@\n-            assignee_ids.add(assignee.userName());\n+            assignee_ids.add(assignee.username());\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-        var user = forge().currentUser().userName();\n+        var user = forge().currentUser().username();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-                            .filter(obj -> obj.get(\"user\").get(\"username\").asString().equals(repository.forge().currentUser().userName()))\n+                            .filter(obj -> obj.get(\"user\").get(\"username\").asString().equals(repository.forge().currentUser().username()))\n@@ -673,1 +673,1 @@\n-                                .map(HostUser::userName)\n+                                .map(HostUser::username)\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-        var namespace = gitLabHost.currentUser().userName();\n+        var namespace = gitLabHost.currentUser().username();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    public String userName() {\n+    public String username() {\n","filename":"host\/src\/main\/java\/org\/openjdk\/skara\/host\/HostUser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,3 +51,3 @@\n-            var userName = project.issueTracker().currentUser().userName();\n-            var user = project.issueTracker().user(userName);\n-            assertEquals(userName, user.get().userName());\n+            var username = project.issueTracker().currentUser().username();\n+            var user = project.issueTracker().user(username);\n+            assertEquals(username, user.get().username());\n@@ -85,3 +85,3 @@\n-            var userName = project.issueTracker().currentUser().userName();\n-            var user = project.issueTracker().user(userName);\n-            assertEquals(userName, user.get().userName());\n+            var username = project.issueTracker().currentUser().username();\n+            var user = project.issueTracker().user(username);\n+            assertEquals(username, user.get().username());\n@@ -117,3 +117,3 @@\n-            var userName = project.issueTracker().currentUser().userName();\n-            var user = project.issueTracker().user(userName);\n-            assertEquals(userName, user.get().userName());\n+            var username = project.issueTracker().currentUser().username();\n+            var user = project.issueTracker().user(username);\n+            assertEquals(username, user.get().username());\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/IssueTrackerTests.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-                         .filter(user -> user.userName().equals(username))\n+                         .filter(user -> user.username().equals(username))\n@@ -137,2 +137,2 @@\n-                         .filter(user -> user.userName().equals(findBy) ||\n-                                 user.userName().equals(findByLocalPart))\n+                         .filter(user -> user.username().equals(findBy) ||\n+                                 user.username().equals(findByLocalPart))\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHost.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-                                                .filter(comment -> author == null || comment.author().userName().equals(author))\n+                                                .filter(comment -> author == null || comment.author().username().equals(author))\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}