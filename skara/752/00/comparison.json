{"files":[{"patch":"@@ -308,0 +308,3 @@\n+                                  \"-c\",\n+                                  \"--no-patch\",\n+                                  \"--full-history\",\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2644,0 +2644,49 @@\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testFollowMergeCommit(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory(false)) {\n+            var r = Repository.init(dir.path(), vcs);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            r.add(readme);\n+            var first = r.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            Files.write(readme, List.of(\"Hello, again!!\"));\n+            r.add(readme);\n+            var second = r.commit(\"Update README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            r.checkout(first);\n+            Files.write(readme, List.of(\"Greetings, world\"));\n+            r.add(readme);\n+            var third = r.commit(\"Update README concurrently\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            if (vcs == VCS.GIT) {\n+                r.checkout(r.defaultBranch());\n+                r.merge(third, \"ours\", Repository.FastForward.DISABLE);\n+            } else if (vcs == VCS.HG) {\n+                r.checkout(second);\n+                r.merge(third, \":local\", Repository.FastForward.DISABLE);\n+            } else {\n+                fail(\"Unexpected VCS: \" + vcs);\n+            }\n+            Files.write(readme, List.of(\"Resolve merge\"));\n+            r.add(readme);\n+            var merge = r.commit(\"Merge\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            Files.write(readme, List.of(\"Final update\"));\n+            r.add(readme);\n+            var fourth = r.commit(\"Final README update\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            var commits = r.follow(readme);\n+            var hashes = commits.stream().map(CommitMetadata::hash).collect(Collectors.toList());\n+            assertEquals(5, hashes.size());\n+            assertTrue(hashes.contains(first));\n+            assertTrue(hashes.contains(second));\n+            assertTrue(hashes.contains(third));\n+            assertTrue(hashes.contains(merge));\n+            assertTrue(hashes.contains(fourth));\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"modified"}]}