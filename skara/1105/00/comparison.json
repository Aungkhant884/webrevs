{"files":[{"patch":"@@ -66,8 +66,1 @@\n-\n-        var hostedRepositoryPool = new HostedRepositoryPool(seedFolder);\n-        try {\n-            var seedRepo = hostedRepositoryPool.seedRepository(pr.repository(), false);\n-            seedRepo.prune(new Branch(PreIntegrations.preIntegrateBranch(pr)), pr.repository().url().toString());\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n-        }\n+        pr.repository().deleteBranch(PreIntegrations.preIntegrateBranch(pr));\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/prbranch\/PullRequestBranchNotifier.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -134,0 +134,11 @@\n+\n+            \/\/ Make sure that the push registered\n+            var lastHeadHash = pr.headHash();\n+            var refreshCount = 0;\n+            do {\n+                pr = repo.pullRequest(pr.id());\n+                if (refreshCount++ > 100) {\n+                    fail(\"The PR did not update after the new push\");\n+                }\n+            } while (pr.headHash().equals(lastHeadHash));\n+\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/prbranch\/PullRequestBranchNotifierTests.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -156,0 +156,4 @@\n+    @Override\n+    public void deleteBranch(String ref) {\n+    }\n+\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,0 +75,1 @@\n+    void deleteBranch(String ref);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -273,0 +273,6 @@\n+    @Override\n+    public void deleteBranch(String ref) {\n+        request.delete(\"git\/refs\/heads\/\" + ref)\n+               .execute();\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -316,0 +316,6 @@\n+    @Override\n+    public void deleteBranch(String ref) {\n+        request.delete(\"repository\/branches\/\" + URLEncoder.encode(ref, StandardCharsets.US_ASCII))\n+               .execute();\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -207,0 +207,9 @@\n+    @Override\n+    public void deleteBranch(String ref) {\n+        try {\n+            localRepository.delete(new Branch(ref));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}