{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-        for (var pr : remoteRepo.pullRequests()) {\n+        for (var pr : remoteRepo.openPullRequests()) {\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestCloserBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-            pullRequestToCheck.addAll(nextRepository.pullRequests());\n+            pullRequestToCheck.addAll(nextRepository.openPullRequests());\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-            var prs = author.pullRequests();\n+            var prs = author.openPullRequests();\n@@ -87,1 +87,1 @@\n-            var prs = author.pullRequests();\n+            var prs = author.openPullRequests();\n@@ -92,1 +92,1 @@\n-            prs = author.pullRequests();\n+            prs = author.openPullRequests();\n@@ -97,1 +97,1 @@\n-            prs = author.pullRequests();\n+            prs = author.openPullRequests();\n@@ -129,1 +129,1 @@\n-            var prs = author.pullRequests();\n+            var prs = author.openPullRequests();\n@@ -134,1 +134,1 @@\n-            prs = author.pullRequests();\n+            prs = author.openPullRequests();\n@@ -139,1 +139,1 @@\n-            prs = author.pullRequests();\n+            prs = author.openPullRequests();\n","filename":"bots\/bridgekeeper\/src\/test\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestCloserBotTests.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            var prs = author.pullRequests();\n+            var prs = author.openPullRequests();\n@@ -110,1 +110,1 @@\n-            var prs = author.pullRequests();\n+            var prs = author.openPullRequests();\n","filename":"bots\/bridgekeeper\/src\/test\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBotTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        var prs = lastUpdatedAt != null ? repo.openPullRequestsAfter(lastUpdatedAt) : repo.pullRequests();\n+        var prs = lastUpdatedAt != null ? repo.openPullRequestsAfter(lastUpdatedAt) : repo.openPullRequests();\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/CSRPullRequestBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        var prs = repo.pullRequests();\n+        var prs = repo.openPullRequests();\n","filename":"bots\/jep\/src\/main\/java\/org\/openjdk\/skara\/bots\/jep\/JEPBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -297,1 +297,1 @@\n-            var prs = prTarget.pullRequests();\n+            var prs = prTarget.openPullRequests();\n@@ -402,1 +402,1 @@\n-                        var openMergeConflictPRs = prereq.pullRequests()\n+                        var openMergeConflictPRs = prereq.openPullRequests()\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-            assertEquals(0, toHostedRepo.pullRequests().size());\n+            assertEquals(0, toHostedRepo.openPullRequests().size());\n@@ -361,1 +361,1 @@\n-            var pullRequests = toHostedRepo.pullRequests();\n+            var pullRequests = toHostedRepo.openPullRequests();\n@@ -432,1 +432,1 @@\n-            var pullRequests = toHostedRepo.pullRequests();\n+            var pullRequests = toHostedRepo.openPullRequests();\n@@ -565,1 +565,1 @@\n-            var pullRequests = toHostedRepo.pullRequests();\n+            var pullRequests = toHostedRepo.openPullRequests();\n@@ -677,1 +677,1 @@\n-            assertEquals(0, toHostedRepo.pullRequests().size());\n+            assertEquals(0, toHostedRepo.openPullRequests().size());\n@@ -792,1 +792,1 @@\n-            assertEquals(0, toHostedRepo.pullRequests().size());\n+            assertEquals(0, toHostedRepo.openPullRequests().size());\n@@ -913,1 +913,1 @@\n-            assertEquals(0, toHostedRepo.pullRequests().size());\n+            assertEquals(0, toHostedRepo.openPullRequests().size());\n@@ -1034,1 +1034,1 @@\n-            assertEquals(0, toHostedRepo.pullRequests().size());\n+            assertEquals(0, toHostedRepo.openPullRequests().size());\n@@ -1155,1 +1155,1 @@\n-            assertEquals(0, toHostedRepo.pullRequests().size());\n+            assertEquals(0, toHostedRepo.openPullRequests().size());\n","filename":"bots\/merge\/src\/test\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBotTests.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,1 +214,1 @@\n-            prs = codeRepo.pullRequests();\n+            prs = codeRepo.openPullRequests();\n@@ -217,1 +217,1 @@\n-            prs = codeRepo.pullRequests(ZonedDateTime.now().minus(Duration.ofDays(14)));\n+            prs = codeRepo.pullRequestsAfter(ZonedDateTime.now().minus(Duration.ofDays(14)));\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBot.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-                prs = repository.pullRequests();\n+                prs = repository.openPullRequests();\n@@ -128,1 +128,1 @@\n-                prs = repository.pullRequests(ZonedDateTime.now().minus(Duration.ofDays(14)));\n+                prs = repository.pullRequestsAfter(ZonedDateTime.now().minus(Duration.ofDays(14)));\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/NotifyBot.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-            prs = remoteRepo.pullRequests();\n+            prs = remoteRepo.openPullRequests();\n@@ -192,1 +192,1 @@\n-            prs = remoteRepo.pullRequests(ZonedDateTime.now().minus(Duration.ofDays(1)));\n+            prs = remoteRepo.pullRequestsAfter(ZonedDateTime.now().minus(Duration.ofDays(1)));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-            assertEquals(List.of(), author.pullRequests());\n+            assertEquals(List.of(), author.openPullRequests());\n@@ -162,1 +162,1 @@\n-            assertEquals(List.of(), author.pullRequests());\n+            assertEquals(List.of(), author.openPullRequests());\n@@ -203,1 +203,1 @@\n-            assertEquals(List.of(), author.pullRequests());\n+            assertEquals(List.of(), author.openPullRequests());\n@@ -255,1 +255,1 @@\n-            assertEquals(List.of(), author.pullRequests());\n+            assertEquals(List.of(), author.openPullRequests());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommitCommandTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        return repository.pullRequests().stream()\n+        return repository.openPullRequests().stream()\n","filename":"bots\/submit\/src\/main\/java\/org\/openjdk\/skara\/bots\/submit\/SubmitBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,1 +122,1 @@\n-        for (var pr : repo.pullRequests()) {\n+        for (var pr : repo.openPullRequests()) {\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,6 @@\n-    public List<PullRequest> pullRequests(ZonedDateTime updatedAfter) {\n+    public List<PullRequest> openPullRequests() {\n+        return null;\n+    }\n+\n+    @Override\n+    public List<PullRequest> pullRequestsAfter(ZonedDateTime updatedAfter) {\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        var prs = repo.pullRequests(ZonedDateTime.now().minus(Duration.ofDays(1)));\n+        var prs = repo.pullRequestsAfter(ZonedDateTime.now().minus(Duration.ofDays(1)));\n","filename":"bots\/testinfo\/src\/main\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-        var prs = remoteRepo.pullRequests();\n+        var prs = remoteRepo.openPullRequests();\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-     * Returns a list of all open pull requests.\n+     * Returns a list of all the pull requests (included open and closed).\n@@ -50,0 +50,5 @@\n+    \/**\n+     * Returns a list of all open pull requests.\n+     *\/\n+    List<PullRequest> openPullRequests();\n+\n@@ -55,1 +60,1 @@\n-    List<PullRequest> pullRequests(ZonedDateTime updatedAfter);\n+    List<PullRequest> pullRequestsAfter(ZonedDateTime updatedAfter);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        var candidates = pr.repository().pullRequests();\n+        var candidates = pr.repository().openPullRequests();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PreIntegrations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -148,1 +148,15 @@\n-        return request.get(\"pulls\").execute().asArray().stream()\n+        return request.get(\"pulls\")\n+                      .param(\"state\", \"all\")\n+                      .param(\"sort\", \"updated\")\n+                      .param(\"direction\", \"desc\")\n+                      .maxPages(1)\n+                      .execute().asArray().stream()\n+                      .map(jsonValue -> new GitHubPullRequest(this, jsonValue, request))\n+                      .collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public List<PullRequest> openPullRequests() {\n+        return request.get(\"pulls\")\n+                      .param(\"state\", \"open\")\n+                      .execute().asArray().stream()\n@@ -154,1 +168,1 @@\n-    public List<PullRequest> pullRequests(ZonedDateTime updatedAfter) {\n+    public List<PullRequest> pullRequestsAfter(ZonedDateTime updatedAfter) {\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -135,0 +135,11 @@\n+        return request.get(\"merge_requests\")\n+                      .param(\"order_by\", \"updated_at\")\n+                      .maxPages(1)\n+                      .execute().stream()\n+                      .filter(this::hasHeadHash)\n+                      .map(value -> new GitLabMergeRequest(this, gitLabHost, value, request))\n+                      .collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public List<PullRequest> openPullRequests() {\n@@ -144,1 +155,1 @@\n-    public List<PullRequest> pullRequests(ZonedDateTime updatedAfter) {\n+    public List<PullRequest> pullRequestsAfter(ZonedDateTime updatedAfter) {\n@@ -148,0 +159,1 @@\n+                      .maxPages(1)\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -80,0 +80,5 @@\n+        return new ArrayList<>(host.getPullRequests(this));\n+    }\n+\n+    @Override\n+    public List<PullRequest> openPullRequests() {\n@@ -86,1 +91,1 @@\n-    public List<PullRequest> pullRequests(ZonedDateTime updatedAfter) {\n+    public List<PullRequest> pullRequestsAfter(ZonedDateTime updatedAfter) {\n@@ -103,1 +108,1 @@\n-        return pullRequests().stream()\n+        return openPullRequests().stream()\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}