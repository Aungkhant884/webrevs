{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import java.util.regex.Pattern;\n@@ -34,0 +35,2 @@\n+    private final Pattern inspect;\n+    private final Pattern ignore;\n@@ -40,1 +43,1 @@\n-    SyncLabelBot(IssueProject issueProject) {\n+    SyncLabelBot(IssueProject issueProject, Pattern inspect, Pattern ignore) {\n@@ -42,0 +45,14 @@\n+        this.inspect = inspect;\n+        this.ignore = ignore;\n+    }\n+\n+    IssueProject issueProject() {\n+        return issueProject;\n+    }\n+\n+    Pattern inspect() {\n+        return inspect;\n+    }\n+\n+    Pattern ignore() {\n+        return ignore;\n@@ -64,1 +81,1 @@\n-            ret.add(new SyncLabelBotFindMainIssueWorkItem(issueProject, issue.id()));\n+            ret.add(new SyncLabelBotFindMainIssueWorkItem(this, issue.id()));\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBot.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.regex.Pattern;\n@@ -43,1 +44,4 @@\n-            bots.add(new SyncLabelBot(configuration.issueProject(issueproject.asString())));\n+            var project = configuration.issueProject(issueproject.get(\"project\").asString());\n+            var inspect = issueproject.contains(\"inspect\") ? Pattern.compile(issueproject.get(\"inspect\").asString()) : Pattern.compile(\".*\");\n+            var ignore = issueproject.contains(\"ignore\") ? Pattern.compile(issueproject.get(\"ignore\").asString()) : Pattern.compile(\"\\\\b\\\\B\");\n+            bots.add(new SyncLabelBot(project, inspect, ignore));\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotFactory.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import org.openjdk.skara.issuetracker.IssueProject;\n@@ -34,1 +33,0 @@\n-    private final IssueProject issueProject;\n@@ -37,0 +35,1 @@\n+    private final SyncLabelBot bot;\n@@ -38,2 +37,2 @@\n-    SyncLabelBotFindMainIssueWorkItem(IssueProject issueProject, String issueId) {\n-        this.issueProject = issueProject;\n+    SyncLabelBotFindMainIssueWorkItem(SyncLabelBot bot, String issueId) {\n+        this.bot = bot;\n@@ -54,1 +53,1 @@\n-        var issue = issueProject.issue(issueId);\n+        var issue = bot.issueProject().issue(issueId);\n@@ -66,1 +65,1 @@\n-        return List.of(new SyncLabelBotUpdateLabelWorkItem(issueProject, primary.get().id()));\n+        return List.of(new SyncLabelBotUpdateLabelWorkItem(bot, primary.get().id()));\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotFindMainIssueWorkItem.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import org.openjdk.skara.issuetracker.*;\n@@ -35,1 +34,1 @@\n-    private final IssueProject issueProject;\n+    private final SyncLabelBot bot;\n@@ -39,2 +38,2 @@\n-    SyncLabelBotUpdateLabelWorkItem(IssueProject issueProject, String mainIssueId) {\n-        this.issueProject = issueProject;\n+    SyncLabelBotUpdateLabelWorkItem(SyncLabelBot bot, String mainIssueId) {\n+        this.bot = bot;\n@@ -60,1 +59,1 @@\n-        var issue = issueProject.issue(mainIssueId);\n+        var issue = bot.issueProject().issue(mainIssueId);\n@@ -68,0 +67,3 @@\n+                              .filter(i -> Backports.mainFixVersion(i).isPresent())\n+                              .filter(i -> bot.inspect().matcher(Backports.mainFixVersion(i).get().raw()).matches())\n+                              .filter(i -> !bot.ignore().matcher(Backports.mainFixVersion(i).get().raw()).matches())\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotUpdateLabelWorkItem.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,0 +39,11 @@\n+        return testBotBuilder(issueProject, storagePath, null, null);\n+    }\n+\n+    private TestBotFactory testBotBuilder(IssueProject issueProject, Path storagePath, String inspect, String ignore) {\n+        var cfg = JSON.object().put(\"project\", issueProject.name());\n+        if (inspect != null) {\n+            cfg.put(\"inspect\", inspect);\n+        }\n+        if (ignore != null) {\n+            cfg.put(\"ignore\", ignore);\n+        }\n@@ -43,1 +54,1 @@\n-                                                                    .add(issueProject.name()))\n+                                                                    .add(cfg))\n@@ -146,1 +157,1 @@\n-    void testIgnored(TestInfo testInfo) throws IOException {\n+    void testManualIgnore(TestInfo testInfo) throws IOException {\n@@ -225,0 +236,106 @@\n+\n+    @Test\n+    void testIgnore(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var storageFolder = tempFolder.path().resolve(\"storage\");\n+            var issueProject = credentials.getIssueProject();\n+            var syncLabelBot = testBotBuilder(issueProject, storageFolder).create(\"synclabel\", JSON.object());\n+\n+            var issue1 = credentials.createIssue(issueProject, \"Issue 1\");\n+            issue1.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u41\")));\n+            issue1.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+            issue1.setState(RESOLVED);\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+\n+            var issue2 = credentials.createIssue(issueProject, \"Issue 2\");\n+            issue2.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u261\")));\n+            issue2.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue2.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue2, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+\n+            var issue3 = credentials.createIssue(issueProject, \"Issue 3\");\n+            issue3.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u251\")));\n+            issue3.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue3.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue3, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+\n+            var issue4 = credentials.createIssue(issueProject, \"Issue 4\");\n+            issue4.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"emb-8u251\")));\n+            issue4.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue4.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue4, \"backported by\").build());\n+\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+            assertEquals(List.of(), issue4.labels());\n+\n+            \/\/ Now try it with a configured ignore - issue 3 should lose its label\n+            var syncLabelBotWithIgnore = testBotBuilder(issueProject, storageFolder, null, \"8u4\\\\d\").create(\"synclabel\", JSON.object());\n+            TestBotRunner.runPeriodicItems(syncLabelBotWithIgnore);\n+            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.labels());\n+            assertEquals(List.of(), issue3.labels());\n+            assertEquals(List.of(), issue4.labels());\n+        }\n+    }\n+\n+    @Test\n+    void testInspect(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var storageFolder = tempFolder.path().resolve(\"storage\");\n+            var issueProject = credentials.getIssueProject();\n+            var syncLabelBot = testBotBuilder(issueProject, storageFolder).create(\"synclabel\", JSON.object());\n+\n+            var issue1 = credentials.createIssue(issueProject, \"Issue 1\");\n+            issue1.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u41\")));\n+            issue1.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+            issue1.setState(RESOLVED);\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+\n+            var issue2 = credentials.createIssue(issueProject, \"Issue 2\");\n+            issue2.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u261\")));\n+            issue2.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue2.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue2, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+\n+            var issue3 = credentials.createIssue(issueProject, \"Issue 3\");\n+            issue3.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u251\")));\n+            issue3.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue3.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue3, \"backported by\").build());\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+\n+            var issue4 = credentials.createIssue(issueProject, \"Issue 4\");\n+            issue4.setProperty(\"fixVersions\", JSON.array().add(JSON.of(\"8u361\")));\n+            issue4.setProperty(\"issuetype\", JSON.of(\"Backport\"));\n+            issue4.setState(RESOLVED);\n+            issue1.addLink(Link.create(issue4, \"backported by\").build());\n+\n+            TestBotRunner.runPeriodicItems(syncLabelBot);\n+            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+\n+            \/\/ Now try it with a configured include - issue 2 will now lose its label\n+            var syncLabelBotWithIgnore = testBotBuilder(issueProject, storageFolder, \"8u\\\\d6\\\\d\", null).create(\"synclabel\", JSON.object());\n+            TestBotRunner.runPeriodicItems(syncLabelBotWithIgnore);\n+            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue2.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+        }\n+    }\n","filename":"bots\/synclabel\/src\/test\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotTests.java","additions":119,"deletions":2,"binary":false,"changes":121,"status":"modified"}]}