{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -35,1 +36,1 @@\n-    private final Map<String, Instant> expirations = new HashMap<>();\n+    private final Map<String, Instant> expirations = new ConcurrentHashMap<>();\n@@ -47,24 +48,0 @@\n-    private Check testingNotConfiguredNotice(PullRequest pr) {\n-        var sourceRepoUrl = pr.sourceRepository().orElseThrow().nonTransformedWebUrl().toString();\n-        if (pr.sourceRepository().orElseThrow().forge().name().equals(\"GitHub\")) {\n-            sourceRepoUrl += \"\/actions\";\n-        }\n-\n-        return CheckBuilder.create(\"Pre-submit test status\", pr.headHash())\n-                           .skipped()\n-                           .title(\"Testing is not configured\")\n-                           .summary(\"In order to run pre-submit tests, the [source repository](\" +\n-                                            sourceRepoUrl + \")\" +\n-                                            \" must be properly configured to allow test execution. \" +\n-                                            \"See https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Testing for more information on how to configure this.\")\n-                           .build();\n-    }\n-\n-    private Check testingEnabledNotice(PullRequest pr) {\n-        return CheckBuilder.create(\"Pre-submit test status\", pr.headHash())\n-                           .complete(true)\n-                           .title(\"Tests are now enabled\")\n-                           .summary(\"Pre-submit tests have been now been enabled for the source repository\")\n-                           .build();\n-    }\n-\n@@ -79,1 +56,0 @@\n-            var expirationKey = pullRequestToKey(pr);\n@@ -81,0 +57,1 @@\n+            var expirationKey = pullRequestToKey(pr);\n@@ -88,31 +65,1 @@\n-            var sourceRepo = pr.sourceRepository().get();\n-            var checks = sourceRepo.allChecks(pr.headHash());\n-            var noticeCheck = checks.stream()\n-                                    .filter(check -> check.name().equals(\"Pre-submit test status\"))\n-                                    .findAny();\n-\n-            if (sourceRepo.workflowStatus() == WorkflowStatus.NOT_CONFIGURED) {\n-                if (noticeCheck.isEmpty()) {\n-                    ret.add(new TestInfoBotWorkItem(pr, List.of(testingNotConfiguredNotice(pr))));\n-                }\n-            } else if (sourceRepo.workflowStatus() == WorkflowStatus.DISABLED) {\n-                \/\/ Explicitly disabled - could possibly post a notice\n-            } else {\n-                var summarizedChecks = TestResults.summarize(checks);\n-                if (summarizedChecks.isEmpty()) {\n-                    \/\/ No test related checks found, they may not have started yet, so we'll keep looking\n-                    expirations.put(expirationKey, Instant.now().plus(Duration.ofMinutes(2)));\n-                    continue;\n-                } else {\n-                    expirations.put(expirationKey, Instant.now().plus(TestResults.expiresIn(checks).orElse(Duration.ofMinutes(30))));\n-                }\n-\n-                if (noticeCheck.isPresent()) {\n-                    \/\/ If a disabled notice has been posted earlier, we can't delete it - just mark it completed\n-                    summarizedChecks = new ArrayList<>(summarizedChecks);\n-                    summarizedChecks.add(testingEnabledNotice(pr));\n-                }\n-\n-                \/\/ Time to refresh test info\n-                ret.add(new TestInfoBotWorkItem(pr, summarizedChecks));\n-            }\n+            ret.add(new TestInfoBotWorkItem(pr, expiresIn -> expirations.put(expirationKey, Instant.now().plus(expiresIn))));\n","filename":"bots\/testinfo\/src\/main\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoBot.java","additions":4,"deletions":57,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.time.*;\n@@ -30,0 +31,2 @@\n+import java.util.function.Consumer;\n+import java.util.logging.Logger;\n@@ -33,1 +36,2 @@\n-    private final List<Check> summarizedChecks;\n+    private final Consumer<Duration> expiresIn;\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");\n@@ -35,1 +39,1 @@\n-    TestInfoBotWorkItem(PullRequest pr, List<Check> summarizedChecks) {\n+    TestInfoBotWorkItem(PullRequest pr, Consumer<Duration> expiresIn) {\n@@ -37,1 +41,1 @@\n-        this.summarizedChecks = summarizedChecks;\n+        this.expiresIn = expiresIn;\n@@ -54,0 +58,24 @@\n+    private Check testingNotConfiguredNotice(PullRequest pr) {\n+        var sourceRepoUrl = pr.sourceRepository().orElseThrow().nonTransformedWebUrl().toString();\n+        if (pr.sourceRepository().orElseThrow().forge().name().equals(\"GitHub\")) {\n+            sourceRepoUrl += \"\/actions\";\n+        }\n+\n+        return CheckBuilder.create(\"Pre-submit test status\", pr.headHash())\n+                           .skipped()\n+                           .title(\"Testing is not configured\")\n+                           .summary(\"In order to run pre-submit tests, the [source repository](\" +\n+                                            sourceRepoUrl + \")\" +\n+                                            \" must be properly configured to allow test execution. \" +\n+                                            \"See https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Testing for more information on how to configure this.\")\n+                           .build();\n+    }\n+\n+    private Check testingEnabledNotice(PullRequest pr) {\n+        return CheckBuilder.create(\"Pre-submit test status\", pr.headHash())\n+                           .complete(true)\n+                           .title(\"Tests are now enabled\")\n+                           .summary(\"Pre-submit tests have been now been enabled for the source repository\")\n+                           .build();\n+    }\n+\n@@ -56,4 +84,41 @@\n-        var existing = pr.checks(pr.headHash());\n-        for (var check : summarizedChecks) {\n-            if (!existing.containsKey(check.name())) {\n-                pr.createCheck(check);\n+        var sourceRepo = pr.sourceRepository().get();\n+        var sourceChecks = sourceRepo.allChecks(pr.headHash());\n+\n+        var targetChecks = pr.checks(pr.headHash());\n+        var noticeCheck = targetChecks.get(\"Pre-submit test status\");\n+\n+        if (sourceRepo.workflowStatus() == WorkflowStatus.NOT_CONFIGURED) {\n+            if (noticeCheck == null) {\n+                pr.createCheck(testingNotConfiguredNotice(pr));\n+                expiresIn.accept(Duration.ofMinutes(2));\n+            }\n+        } else if (sourceRepo.workflowStatus() == WorkflowStatus.DISABLED) {\n+            \/\/ Explicitly disabled - could possibly post a notice\n+        } else {\n+            var summarizedChecks = TestResults.summarize(sourceChecks);\n+            if (summarizedChecks.isEmpty()) {\n+                \/\/ No test related checks found, they may not have started yet, so we'll keep looking\n+                log.fine(\"No checks found to summarize - waiting\");\n+                expiresIn.accept(Duration.ofMinutes(2));\n+            } else {\n+                expiresIn.accept(TestResults.expiresIn(sourceChecks).orElse(Duration.ofMinutes(30)));\n+            }\n+\n+            if (noticeCheck != null && noticeCheck.status() == CheckStatus.SKIPPED) {\n+                \/\/ If a disabled notice has been posted earlier, we can't delete it - just mark it completed\n+                pr.updateCheck(testingEnabledNotice(pr));\n+            }\n+\n+            for (var check : summarizedChecks) {\n+                if (!targetChecks.containsKey(check.name())) {\n+                    pr.createCheck(check);\n+                    targetChecks.put(check.name(), check);\n+                }\n+                var current = targetChecks.get(check.name());\n+                if ((current.status() != check.status()) ||\n+                        (!current.summary().equals(check.summary())) ||\n+                        (!current.title().equals(check.summary()))) {\n+                    pr.updateCheck(check);\n+                } else {\n+                    log.fine(\"Not updating unchanged check: \" + check.name());\n+                }\n@@ -61,1 +126,0 @@\n-            pr.updateCheck(check);\n","filename":"bots\/testinfo\/src\/main\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoBotWorkItem.java","additions":72,"deletions":8,"binary":false,"changes":80,"status":"modified"}]}