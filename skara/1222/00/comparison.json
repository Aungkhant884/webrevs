{"files":[{"patch":"@@ -61,1 +61,1 @@\n-    private AtomicInteger workIdCounter = new AtomicInteger();\n+    private final AtomicInteger workIdCounter = new AtomicInteger();\n@@ -74,0 +74,5 @@\n+        private final int workId = workIdCounter.incrementAndGet();\n+        private final Instant createTime = Instant.now();\n+        \/\/ This gets updated by the watchdog when a timeout occurs to avoid\n+        \/\/ repeating the timeout log messages too often.\n+        private Instant timeoutWarningTime = createTime;\n@@ -182,1 +187,1 @@\n-                    \"work_id\", String.valueOf(workIdCounter.incrementAndGet())))) {\n+                    \"work_id\", String.valueOf(workId)))) {\n@@ -228,2 +233,3 @@\n-                        executor.submit(new RunnableWorkItem(candidate));\n-                        active.put(candidate, Instant.now());\n+                        RunnableWorkItem runnableWorkItem = new RunnableWorkItem(candidate);\n+                        executor.submit(runnableWorkItem);\n+                        active.put(candidate, runnableWorkItem);\n@@ -237,0 +243,1 @@\n+    \/\/ Mapping of pending items to the active item preventing them from running\n@@ -238,1 +245,2 @@\n-    private final Map<WorkItem, Instant> active;\n+    \/\/ Mapping of active WorkItem to their RunnableWorkItem\n+    private final Map<WorkItem, RunnableWorkItem> active;\n@@ -252,1 +260,1 @@\n-                    for (var pendingItem : pending.entrySet()) {\n+                    for (var pendingItem : pending.keySet()) {\n@@ -254,2 +262,2 @@\n-                        if (item.replaces(pendingItem.getKey())) {\n-                            log.finer(\"Discarding obsoleted item \" + pendingItem.getKey() +\n+                        if (item.replaces(pendingItem)) {\n+                            log.finer(\"Discarding obsoleted item \" + pendingItem +\n@@ -258,1 +266,1 @@\n-                            pending.remove(pendingItem.getKey());\n+                            pending.remove(pendingItem);\n@@ -269,2 +277,3 @@\n-            executor.submit(new RunnableWorkItem(item));\n-            active.put(item, Instant.now());\n+            RunnableWorkItem runnableWorkItem = new RunnableWorkItem(item);\n+            executor.submit(runnableWorkItem);\n+            active.put(item, runnableWorkItem);\n@@ -373,5 +382,6 @@\n-            for (var activeItem : active.entrySet()) {\n-                var activeDuration = Duration.between(activeItem.getValue(), Instant.now());\n-                if (activeDuration.compareTo(watchdogWarnTimeout) > 0) {\n-                    log.severe(\"Item \" + activeItem.getKey() + \" has been active more than \" + activeDuration +\n-                                       \" - this may be an error!\");\n+            for (var activeRunnableItem : active.values()) {\n+                Instant now = Instant.now();\n+                var timeoutDuration = Duration.between(activeRunnableItem.timeoutWarningTime, now);\n+                if (timeoutDuration.compareTo(watchdogWarnTimeout) > 0) {\n+                    log.severe(\"Item \" + activeRunnableItem.item + \" with workId \" + activeRunnableItem.workId + \" has been active more than \" +\n+                            Duration.between(activeRunnableItem.createTime, now) + \" - this may be an error!\");\n@@ -379,1 +389,1 @@\n-                    activeItem.setValue(Instant.now());\n+                    activeRunnableItem.timeoutWarningTime = now;\n","filename":"bot\/src\/main\/java\/org\/openjdk\/skara\/bot\/BotRunner.java","additions":27,"deletions":17,"binary":false,"changes":44,"status":"modified"}]}