{"files":[{"patch":"@@ -260,0 +260,2 @@\n+                \/\/ We used to store URLs with just the abbreviated hash, so need to check for both\n+                var shortHashUrl = repository.webUrl(new Hash(commit.hash().abbreviate())).toString();\n@@ -261,2 +263,2 @@\n-                                                           .filter(comment -> comment.author().equals(issueProject.issueTracker().currentUser()))\n-                                                           .anyMatch(comment -> comment.body().contains(hashUrl));\n+                        .filter(comment -> comment.author().equals(issueProject.issueTracker().currentUser()))\n+                        .anyMatch(comment -> comment.body().contains(hashUrl) || comment.body().contains(shortHashUrl));\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-        var endpoint = \"\/\" + repository + \"\/commit\/\" + hash.abbreviate();\n+        var endpoint = \"\/\" + repository + \"\/commit\/\" + hash;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                         .setPath(\"\/\" + projectName + \"\/commit\/\" + hash.abbreviate())\n+                         .setPath(\"\/\" + projectName + \"\/commit\/\" + hash)\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}