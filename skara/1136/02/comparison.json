{"files":[{"patch":"@@ -260,0 +260,2 @@\n+                \/\/ We used to store URLs with just the abbreviated hash, so need to check for both\n+                var shortHashUrl = repository.webUrl(new Hash(commit.hash().abbreviate())).toString();\n@@ -261,2 +263,2 @@\n-                                                           .filter(comment -> comment.author().equals(issueProject.issueTracker().currentUser()))\n-                                                           .anyMatch(comment -> comment.body().contains(hashUrl));\n+                        .filter(comment -> comment.author().equals(issueProject.issueTracker().currentUser()))\n+                        .anyMatch(comment -> comment.body().contains(hashUrl) || comment.body().contains(shortHashUrl));\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.bots.notify.CommitFormatters;\n@@ -418,1 +419,1 @@\n-            assertTrue(comment1.body().contains(editHash.abbreviate()));\n+            assertTrue(comment1.body().contains(editHash.toString()));\n@@ -422,1 +423,1 @@\n-            assertTrue(comment2.body().contains(editHash.abbreviate()));\n+            assertTrue(comment2.body().contains(editHash.toString()));\n@@ -426,1 +427,1 @@\n-            assertTrue(comment3.body().contains(editHash.abbreviate()));\n+            assertTrue(comment3.body().contains(editHash.toString()));\n@@ -475,1 +476,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -533,1 +534,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -621,1 +622,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -702,1 +703,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -707,1 +708,1 @@\n-            assertTrue(backportComment.body().contains(editHash.abbreviate()));\n+            assertTrue(backportComment.body().contains(editHash.toString()));\n@@ -792,1 +793,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -889,1 +890,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -928,1 +929,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -963,1 +964,1 @@\n-            assertTrue(comment.body().contains(editHash.abbreviate()));\n+            assertTrue(comment.body().contains(editHash.toString()));\n@@ -1005,0 +1006,60 @@\n+            assertTrue(comment.body().contains(editHash.toString()));\n+\n+            \/\/ As well as a fixVersion\n+            assertEquals(Set.of(\"0.1\"), fixVersions(issue));\n+\n+            \/\/ Wipe the history\n+            localRepo.push(historyState, repo.url(), \"history\", true);\n+\n+            \/\/ Run it again\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ There should be no new comments or fixVersions\n+            var updatedIssue = issueProject.issue(issue.id()).orElseThrow();\n+            assertEquals(1, updatedIssue.comments().size());\n+            assertEquals(Set.of(\"0.1\"), fixVersions(updatedIssue));\n+        }\n+    }\n+\n+    \/**\n+     * The format used for commit URLs in bug comments and elsewhere was changed\n+     * to use the full hash instead of an abbreviated hash. This test verifies\n+     * that the idempotence of the IssueNotifier holds true even when\n+     * encountering old bug comments containing the old commit URL format.\n+     *\/\n+    @Test\n+    void testIssueIdempotenceOldUrlFormat(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var repo = credentials.getHostedRepository();\n+            var repoFolder = tempFolder.path().resolve(\"repo\");\n+            var localRepo = CheckableRepository.init(repoFolder, repo.repositoryType());\n+            credentials.commitLock(localRepo);\n+            localRepo.pushAll(repo.url());\n+\n+            var storageFolder = tempFolder.path().resolve(\"storage\");\n+            var issueProject = credentials.getIssueProject();\n+            var jbsNotifierConfig = JSON.object().put(\"fixversions\", JSON.object());\n+            var notifyBot = testBotBuilder(repo, issueProject, storageFolder, jbsNotifierConfig).create(\"notify\", JSON.object());\n+\n+            \/\/ Initialize history\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ Save the state\n+            var historyState = localRepo.fetch(repo.url(), \"history\");\n+\n+            \/\/ Create an issue and commit a fix\n+            var issue = issueProject.createIssue(\"This is an issue\", List.of(\"Indeed\"), Map.of(\"issuetype\", JSON.of(\"Enhancement\")));\n+            var editHash = CheckableRepository.appendAndCommit(localRepo, \"Another line\", issue.id() + \": Fix that issue\");\n+            localRepo.push(editHash, repo.url(), \"master\");\n+\n+            \/\/ Add a comment for the fix with the old url hash format\n+            var lastCommit = localRepo.commits().stream().findFirst().orElseThrow();\n+            issue.addComment(CommitFormatters.toTextBrief(repo, lastCommit).replace(editHash.toString(), editHash.abbreviate()));\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ Verify that the planted comment is still the only one\n+            var comments = issue.comments();\n+            assertEquals(1, comments.size());\n+            var comment = comments.get(0);\n+            \/\/ We expect the abbreviated hash in the planted comment\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":73,"deletions":12,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-        var endpoint = \"\/\" + repository + \"\/commit\/\" + hash.abbreviate();\n+        var endpoint = \"\/\" + repository + \"\/commit\/\" + hash;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                         .setPath(\"\/\" + projectName + \"\/commit\/\" + hash.abbreviate())\n+                         .setPath(\"\/\" + projectName + \"\/commit\/\" + hash)\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}