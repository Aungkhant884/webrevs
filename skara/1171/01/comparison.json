{"files":[{"patch":"@@ -34,0 +34,2 @@\n+    requires java.management;\n+    requires jdk.management;\n","filename":"bot\/src\/main\/java\/module-info.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import org.openjdk.skara.metrics.Counter;\n+import org.openjdk.skara.metrics.*;\n@@ -37,0 +37,2 @@\n+import java.lang.management.ManagementFactory;\n+import com.sun.management.ThreadMXBean;\n@@ -60,2 +62,9 @@\n-        private static final Counter.WithOneLabel EXCEPTIONS_COUNTER =\n-            Counter.name(\"skara_runner_exceptions\").labels(\"bot\").register();\n+        private static final Counter.WithThreeLabels EXCEPTIONS_COUNTER =\n+            Counter.name(\"skara_runner_exceptions\").labels(\"bot\", \"work-item\", \"exception\").register();\n+        private static final Gauge.WithTwoLabels CPU_TIME_GAUGE =\n+            Gauge.name(\"skara_runner_cpu_time\").labels(\"bot\", \"work-item\").register();\n+        private static final Gauge.WithTwoLabels USER_TIME_GAUGE =\n+            Gauge.name(\"skara_runner_user_time\").labels(\"bot\", \"work-item\").register();\n+        private static final Gauge.WithTwoLabels ALLOCATED_BYTES_GAUGE =\n+            Gauge.name(\"skara_runner_allocated_bytes\").labels(\"bot\", \"work-item\").register();\n+\n@@ -72,0 +81,50 @@\n+        private static Optional<ThreadMXBean> getThreadMXBean() {\n+            var bean = ManagementFactory.getThreadMXBean();\n+            return bean instanceof ThreadMXBean ?\n+                Optional.of((ThreadMXBean) bean) : Optional.empty();\n+        }\n+\n+        private static void enableThreadCpuTime() {\n+            var bean = getThreadMXBean();\n+            if (bean.get().isCurrentThreadCpuTimeSupported() && !bean.get().isThreadCpuTimeEnabled()) {\n+                bean.get().setThreadCpuTimeEnabled(true);\n+            }\n+        }\n+\n+        private static long getCurrentThreadCpuTime() {\n+            var bean = getThreadMXBean();\n+            if (bean.isEmpty()) {\n+                return -1L;\n+            }\n+            return bean.get().isCurrentThreadCpuTimeSupported()?\n+                bean.get().getCurrentThreadCpuTime() :\n+                -1L;\n+        }\n+\n+        private static long getCurrentThreadUserTime() {\n+            var bean = getThreadMXBean();\n+            if (bean.isEmpty()) {\n+                return -1L;\n+            }\n+            return bean.get().isCurrentThreadCpuTimeSupported()?\n+                bean.get().getCurrentThreadUserTime() :\n+                -1L;\n+        }\n+\n+        private static long getCurrentThreadAllocatedBytes() {\n+            var bean = getThreadMXBean();\n+            if (bean.isEmpty()) {\n+                return -1L;\n+            }\n+\n+            if (!bean.get().isThreadAllocatedMemorySupported()) {\n+                return -1L;\n+            }\n+\n+            if (!bean.get().isThreadAllocatedMemoryEnabled()) {\n+                bean.get().setThreadAllocatedMemoryEnabled(true);\n+            }\n+\n+            return bean.get().getCurrentThreadAllocatedBytes();\n+        }\n+\n@@ -74,0 +133,34 @@\n+            enableThreadCpuTime();\n+            long startCpuTimeNs = getCurrentThreadCpuTime();\n+            long startUserTimeNs = getCurrentThreadUserTime();\n+            long startAllocatedBytes = getCurrentThreadAllocatedBytes();\n+\n+            try {\n+                runMeasured();\n+            } finally {\n+                long stopCpuTimeNs = getCurrentThreadCpuTime();\n+                long stopUserTimeNs = getCurrentThreadUserTime();\n+                long stopAllocatedBytes = getCurrentThreadAllocatedBytes();\n+\n+                var cpuTimeNs = (startCpuTimeNs == -1L && stopCpuTimeNs == -1L)?\n+                    -1L : stopCpuTimeNs - startCpuTimeNs;\n+                var userTimeNs = (startUserTimeNs == -1L && stopUserTimeNs == -1L)?\n+                    -1L : stopUserTimeNs - startUserTimeNs;\n+                var allocatedBytes = (startAllocatedBytes == -1L && stopAllocatedBytes == -1L)?\n+                    -1L : stopAllocatedBytes - startAllocatedBytes;\n+\n+                if (cpuTimeNs != -1L) {\n+                    double cpuTimeSeconds = cpuTimeNs \/ 1_000_000.0;\n+                    CPU_TIME_GAUGE.labels(item.botName(), item.workItemName()).set(cpuTimeSeconds);\n+                }\n+                if (userTimeNs != -1L) {\n+                    double userTimeSeconds = userTimeNs \/ 1_000_000.0;\n+                    USER_TIME_GAUGE.labels(item.botName(), item.workItemName()).set(userTimeSeconds);\n+                }\n+                if (allocatedBytes != -1L) {\n+                    ALLOCATED_BYTES_GAUGE.labels(item.botName(), item.workItemName()).set(allocatedBytes);\n+                }\n+            }\n+        }\n+\n+        private void runMeasured() {\n@@ -92,1 +185,1 @@\n-                    EXCEPTIONS_COUNTER.labels(item.botName()).inc();\n+                    EXCEPTIONS_COUNTER.labels(item.botName(), item.workItemName(), e.getClass().getName()).inc();\n@@ -140,4 +233,4 @@\n-    private static final Counter.WithOneLabel SCHEDULED_COUNTER =\n-        Counter.name(\"skara_runner_scheduled\").labels(\"bot\").register();\n-    private static final Counter.WithOneLabel DISCARDED_COUNTER =\n-        Counter.name(\"skara_runner_discarded\").labels(\"bot\").register();\n+    private static final Counter.WithTwoLabels SCHEDULED_COUNTER =\n+        Counter.name(\"skara_runner_scheduled\").labels(\"bot\", \"work-item\").register();\n+    private static final Counter.WithTwoLabels DISCARDED_COUNTER =\n+        Counter.name(\"skara_runner_discarded\").labels(\"bot\", \"work-item\").register();\n@@ -146,1 +239,1 @@\n-        SCHEDULED_COUNTER.labels(item.botName()).inc();\n+        SCHEDULED_COUNTER.labels(item.botName(), item.workItemName()).inc();\n@@ -156,1 +249,1 @@\n-                            DISCARDED_COUNTER.labels(item.botName()).inc();\n+                            DISCARDED_COUNTER.labels(item.botName(), item.workItemName()).inc();\n","filename":"bot\/src\/main\/java\/org\/openjdk\/skara\/bot\/BotRunner.java","additions":103,"deletions":10,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+    String workItemName();\n","filename":"bot\/src\/main\/java\/org\/openjdk\/skara\/bot\/WorkItem.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,0 +80,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n@@ -133,0 +138,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bot\/src\/test\/java\/org\/openjdk\/skara\/bot\/BotRunnerTests.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -118,0 +118,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"closer\";\n+    }\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestCloserBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -114,0 +114,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"pruner\";\n+    }\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -264,0 +264,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"split\";\n+    }\n","filename":"bots\/censussync\/src\/main\/java\/org\/openjdk\/skara\/bots\/censussync\/CensusSyncSplitBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -158,0 +158,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"unitfy\";\n+    }\n","filename":"bots\/censussync\/src\/main\/java\/org\/openjdk\/skara\/bots\/censussync\/CensusSyncUnifyBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -167,0 +167,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/checkout\/src\/main\/java\/org\/openjdk\/skara\/bots\/checkout\/CheckoutBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -93,0 +93,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/cli\/src\/test\/java\/org\/openjdk\/skara\/bots\/cli\/LoggingBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -146,0 +146,5 @@\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n+\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -116,0 +116,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/forward\/src\/main\/java\/org\/openjdk\/skara\/bots\/forward\/ForwardBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -158,0 +158,4 @@\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/hgbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/hgbridge\/JBridgeBot.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -620,0 +620,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -123,0 +123,5 @@\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n+\n","filename":"bots\/mirror\/src\/main\/java\/org\/openjdk\/skara\/bots\/mirror\/MirrorBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -72,0 +72,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"archive-reader\";\n+    }\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveReaderWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -422,0 +422,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"archive\";\n+    }\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -103,0 +103,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"comment-poster\";\n+    }\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/CommentPosterWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -280,0 +280,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"pr\";\n+    }\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/PullRequestWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -311,0 +311,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"repository\";\n+    }\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/RepositoryWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -321,0 +321,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"check\";\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -192,0 +192,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"commit-command\";\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -113,0 +113,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"commit-comments\";\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommentsWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -176,0 +176,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"labeler\";\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -243,0 +243,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"pr-command\";\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCommandWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -109,0 +109,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/submit\/src\/main\/java\/org\/openjdk\/skara\/bots\/submit\/SubmitBotWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -77,0 +77,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"find-main-issue\";\n+    }\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotFindMainIssueWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -100,0 +100,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"update-label\";\n+    }\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotUpdateLabelWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -109,0 +109,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"updater\";\n+    }\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestUpdateNeededWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -468,0 +468,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return \"command\";\n+    }\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -135,0 +135,5 @@\n+\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n","filename":"bots\/testinfo\/src\/main\/java\/org\/openjdk\/skara\/bots\/testinfo\/TestInfoBotWorkItem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -188,0 +188,5 @@\n+    @Override\n+    public String workItemName() {\n+        return botName();\n+    }\n+\n","filename":"bots\/topological\/src\/main\/java\/org\/openjdk\/skara\/bots\/topological\/TopologicalBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}