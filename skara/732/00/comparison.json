{"files":[{"patch":"@@ -150,0 +150,1 @@\n+    void deleteUntrackedFiles() throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -368,0 +368,11 @@\n+    @Override\n+    public void deleteUntrackedFiles() throws IOException {\n+        var root = root();\n+        try (var p = capture(\"git\", \"ls-files\", \"--full-name\", \"--other\")) {\n+            var res = await(p);\n+            for (var line : res.stdout()) {\n+                Files.delete(root.resolve(line));\n+            }\n+        }\n+    }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -361,0 +361,11 @@\n+    @Override\n+    public void deleteUntrackedFiles() throws IOException {\n+        var root = root();\n+        try (var p = capture(\"hg\", \"status\", \"--unknown\", \"--no-status\")) {\n+            var res = await(p);\n+            for (var line : res.stdout()) {\n+                Files.delete(root.resolve(line));\n+            }\n+        }\n+    }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2574,0 +2574,25 @@\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testDeleteUntrackedFiles(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            r.add(readme);\n+            var hash1 = r.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+            var untracked = dir.path().resolve(\"UNTRACKED\");\n+            Files.write(untracked, List.of(\"Hello, untracked!\"));\n+\n+            var paths = Files.list(r.root()).collect(Collectors.toList());\n+            assertTrue(paths.contains(untracked));\n+            assertTrue(paths.contains(readme));\n+\n+            r.deleteUntrackedFiles();\n+            paths = Files.list(r.root()).collect(Collectors.toList());\n+            assertFalse(paths.contains(untracked));\n+            assertTrue(paths.contains(readme));\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"}]}