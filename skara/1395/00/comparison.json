{"files":[{"patch":"@@ -40,1 +40,3 @@\n-    private static final Duration CLOSED_PR_AGE_LIMIT = Duration.ofDays(7);\n+    \/\/ The max age for closed PRs for the initial query, and the furthest\n+    \/\/ back subsequent queries will ever search.\n+    private static final ZonedDateTime UPDATED_AT_QUERY_LIMIT = ZonedDateTime.now().minus(Duration.ofDays(7));\n@@ -95,0 +97,1 @@\n+                .filter(updatedAt -> updatedAt.isAfter(UPDATED_AT_QUERY_LIMIT))\n@@ -96,1 +99,1 @@\n-                .orElseGet(() -> prev != null ? prev.maxUpdatedAt : null);\n+                .orElseGet(() -> prev != null ? prev.maxUpdatedAt : UPDATED_AT_QUERY_LIMIT);\n@@ -191,1 +194,1 @@\n-                var allPrs = repository.pullRequestsAfter(ZonedDateTime.now().minus(CLOSED_PR_AGE_LIMIT));\n+                var allPrs = repository.pullRequestsAfter(UPDATED_AT_QUERY_LIMIT);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequestPoller.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -360,0 +360,30 @@\n+\n+    \/**\n+     * Tests that an old open PR will not cause subsequent calls to return a younger\n+     * but still too old closed PR.\n+     *\/\n+    @Test\n+    void noResurrectClosed(TestInfo testInfo) throws IOException, InterruptedException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var repo = credentials.getHostedRepository();\n+            var prPoller = new PullRequestPoller(repo, true);\n+\n+            var pr1 = credentials.createPullRequest(repo, null, null, \"Foo\");\n+            pr1.setState(Issue.State.CLOSED);\n+            pr1.store().setLastUpdate(ZonedDateTime.now().minus(Duration.ofDays(10)));\n+\n+            var pr2 = credentials.createPullRequest(repo, null, null, \"Foo2\");\n+            pr2.store().setLastUpdate(ZonedDateTime.now().minus(Duration.ofDays(20)));\n+\n+            \/\/ First run should find the open PR but not the closed one, as it's older than 7 days\n+            var prs = prPoller.updatedPullRequests();\n+            assertEquals(1, prs.size());\n+            assertEquals(pr2.id(), prs.get(0).id());\n+            prPoller.lastBatchHandled();\n+\n+            \/\/ Second call should not find any PR\n+            prs = prPoller.updatedPullRequests();\n+            assertEquals(0, prs.size());\n+            prPoller.lastBatchHandled();\n+        }\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/PullRequestPollerTests.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"}]}