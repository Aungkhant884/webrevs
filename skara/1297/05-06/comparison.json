{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import org.openjdk.skara.vcs.*;\n@@ -40,0 +39,16 @@\n+\n+    \/**\n+     * Overload the method with a parameter `changeLabelsAfterComment`.\n+     * If the command need to change the labels after commenting to avoid a race condition,\n+     * please use this method with the argument `changeLabelsAfterComment` as true.\n+     * If you don't meet a race condition, please use another method without parameter `changeLabelsAfterComment`,\n+     * and never use this method with the argument `changeLabelsAfterComment` as false.\n+     *\n+     * @param changeLabelsAfterComment just a tag to distinguish another method\n+     * @return the labels to change\n+     *\/\n+    default LabelsToChange handle(PullRequestBot bot, PullRequest pr, CensusInstance censusInstance, Path scratchPath,\n+                        CommandInvocation command, List<Comment> allComments, PrintWriter reply, boolean changeLabelsAfterComment) {\n+        return new LabelsToChange(null, null);\n+    }\n+\n@@ -55,0 +70,4 @@\n+\n+    default boolean changeLabelsAfterComment() {\n+        return false;\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandHandler.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.ArrayList;\n@@ -66,1 +67,1 @@\n-    private Optional<Issue> getJepIssue(String args, PullRequestBot bot, PrintWriter reply) {\n+    private Optional<Issue> getJepIssue(String args, PullRequestBot bot) {\n@@ -79,2 +80,3 @@\n-    public void handle(PullRequestBot bot, PullRequest pr, CensusInstance censusInstance, Path scratchPath,\n-                       CommandInvocation command, List<Comment> allComments, PrintWriter reply) {\n+    public LabelsToChange handle(PullRequestBot bot, PullRequest pr, CensusInstance censusInstance, Path scratchPath,\n+                       CommandInvocation command, List<Comment> allComments, PrintWriter reply, boolean changeLabelsAfterComment) {\n+        LabelsToChange labelsToChange = new LabelsToChange(new ArrayList<>(), new ArrayList<>());\n@@ -83,1 +85,1 @@\n-            return;\n+            return labelsToChange;\n@@ -89,1 +91,1 @@\n-            return;\n+            return labelsToChange;\n@@ -95,1 +97,1 @@\n-                pr.removeLabel(JEP_LABEL);\n+                labelsToChange.labelsToRemove().add(JEP_LABEL);\n@@ -100,1 +102,1 @@\n-            return;\n+            return labelsToChange;\n@@ -104,1 +106,1 @@\n-        var jbsIssueOpt = getJepIssue(args, bot, reply);\n+        var jbsIssueOpt = getJepIssue(args, bot);\n@@ -108,1 +110,1 @@\n-            return;\n+            return labelsToChange;\n@@ -117,1 +119,1 @@\n-            return;\n+            return labelsToChange;\n@@ -136,1 +138,1 @@\n-                pr.removeLabel(JEP_LABEL);\n+                labelsToChange.labelsToRemove().add(JEP_LABEL);\n@@ -143,1 +145,1 @@\n-                pr.addLabel(JEP_LABEL);\n+                labelsToChange.labelsToAdd().add(JEP_LABEL);\n@@ -146,0 +148,1 @@\n+        return labelsToChange;\n@@ -157,0 +160,5 @@\n+\n+    @Override\n+    public boolean changeLabelsAfterComment() {\n+        return true;\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommand.java","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.pr;\n+\n+import org.openjdk.skara.forge.PullRequest;\n+\n+import java.util.List;\n+\n+public record LabelsToChange(List<String> labelsToAdd, List<String> labelsToRemove) {\n+    \/**\n+     * Change the labels in the pull request.\n+     * @param pr the pull request\n+     *\/\n+    public void changeLabels(PullRequest pr) {\n+        if (labelsToAdd != null && !labelsToAdd.isEmpty()) {\n+            for (var label : labelsToAdd) {\n+                if (!pr.labelNames().contains(label)) {\n+                    pr.addLabel(label);\n+                }\n+            }\n+        }\n+        if (labelsToRemove != null && !labelsToRemove.isEmpty()) {\n+            for (var label : labelsToRemove) {\n+                if (pr.labelNames().contains(label)) {\n+                    pr.removeLabel(label);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelsToChange.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -161,30 +161,1 @@\n-        if (handler.isPresent()) {\n-            if (isCommit) {\n-                if (handler.get().allowedInCommit()) {\n-                    var hash = resultingCommitHash(allComments);\n-                    if (hash.isPresent()) {\n-                        var commit = pr.repository().commit(hash.get()).orElseThrow();\n-                        handler.get().handle(bot, commit, censusInstance, scratchPath, command, allComments, printer);\n-                    } else {\n-                        printer.print(\"The command `\");\n-                        printer.print(command.name());\n-                        printer.println(\"` can only be used in a pull request that has been integrated.\");\n-                    }\n-                } else {\n-                    printer.print(\"The command `\");\n-                    printer.print(command.name());\n-                    printer.println(\"` can only be used in open pull requests.\");\n-                }\n-            } else {\n-                if (handler.get().allowedInPullRequest()) {\n-                    if (command.id().startsWith(\"body\") && !handler.get().allowedInBody()) {\n-                        handler = Optional.of(new PullRequestCommandWorkItem.InvalidBodyCommandHandler());\n-                    }\n-                    handler.get().handle(bot, pr, censusInstance, scratchPath, command, allComments, printer);\n-                } else {\n-                    printer.print(\"The command `\");\n-                    printer.print(command.name());\n-                    printer.println(\"` can only be used in a pull request that has not yet been integrated.\");\n-                }\n-            }\n-        } else {\n+        if (handler.isEmpty()) {\n@@ -194,0 +165,40 @@\n+            pr.addComment(writer.toString());\n+            return;\n+        }\n+\n+        if (isCommit && !handler.get().allowedInCommit()) {\n+            \/\/ isCommit && !handler.get().allowedInCommit() -> true\n+            printer.print(\"The command `\");\n+            printer.print(command.name());\n+            printer.println(\"` can only be used in open pull requests.\");\n+        } else if (isCommit) {\n+            \/\/ isCommit && handler.get().allowedInCommit() -> true\n+            var hash = resultingCommitHash(allComments);\n+            if (hash.isEmpty()) {\n+                printer.print(\"The command `\");\n+                printer.print(command.name());\n+                printer.println(\"` can only be used in a pull request that has been integrated.\");\n+                pr.addComment(writer.toString());\n+                return;\n+            }\n+            var commit = pr.repository().commit(hash.get()).orElseThrow();\n+            handler.get().handle(bot, commit, censusInstance, scratchPath, command, allComments, printer);\n+        } else if (!handler.get().allowedInPullRequest()) {\n+            \/\/ !isCommit && !handler.get().allowedInPullRequest() -> true\n+            printer.print(\"The command `\");\n+            printer.print(command.name());\n+            printer.println(\"` can only be used in a pull request that has not yet been integrated.\");\n+        } else {\n+            \/\/ !isCommit && handler.get().allowedInPullRequest() -> true\n+            if (command.id().startsWith(\"body\") && !handler.get().allowedInBody()) {\n+                handler = Optional.of(new PullRequestCommandWorkItem.InvalidBodyCommandHandler());\n+            }\n+            if (handler.get().changeLabelsAfterComment()) {\n+                var labelsToChange = handler.get().handle(bot, pr, censusInstance, scratchPath, command, allComments, printer, true);\n+                pr.addComment(writer.toString());\n+                \/\/ change labels after commenting\n+                labelsToChange.changeLabels(pr);\n+                return;\n+            } else {\n+                handler.get().handle(bot, pr, censusInstance, scratchPath, command, allComments, printer);\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCommandWorkItem.java","additions":41,"deletions":30,"binary":false,"changes":71,"status":"modified"}]}