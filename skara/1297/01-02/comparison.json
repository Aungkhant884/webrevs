{"files":[{"patch":"@@ -94,4 +94,0 @@\n-            if (pr.author().equals(command.user()) && !censusInstance.isReviewer(command.user())) {\n-                reply.println(\"only [Reviewers](https:\/\/openjdk.java.net\/bylaws#reviewer) can determine that a JEP request is not needed.\");\n-                return;\n-            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommand.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -228,9 +228,0 @@\n-            \/\/ Not require jep by the PR author who is not a reviewer\n-            pr.addComment(\"\/jep uneeded\");\n-\n-            \/\/ Verify the behavior\n-            TestBotRunner.runPeriodicItems(prBot);\n-            assertTrue(pr.labelNames().contains(JEPCommand.JEP_LABEL));\n-            assertLastCommentContains(pr, \"only [Reviewers](https:\/\/openjdk.java.net\/bylaws#reviewer) can determine that a JEP request is not needed.\");\n-            assertTrue(pr.body().contains(\"- [ ] Change requires a JEP request to be targeted\"));\n-\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommandTests.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -440,1 +440,1 @@\n-                .body(\"jql\", \"project = \" + projectName + \" AND \"  + JEP_NUMBER + \" = \" + jepId)\n+                .body(\"jql\", \"project = \" + projectName + \" AND \\\"JEP Number\\\" ~ \\\"\" + jepId + \"\\\"\")\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}