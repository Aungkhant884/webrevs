{"files":[{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -28,0 +29,2 @@\n+import java.util.function.Predicate;\n+\n@@ -80,1 +83,1 @@\n-    static State from(PullRequest pr, String approverGroupId) {\n+    static State from(PullRequest pr, Predicate<HostUser> validate) {\n@@ -130,1 +133,1 @@\n-                    if (host.isMemberOf(approverGroupId, author)) {\n+                    if (validate.test(author)) {\n@@ -138,1 +141,1 @@\n-                    if (host.isMemberOf(approverGroupId, author)) {\n+                    if (validate.test(author)) {\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/State.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    private final Set<String> allowlist;\n@@ -60,0 +61,1 @@\n+            Set<String> allowlist,\n@@ -67,0 +69,1 @@\n+        this.allowlist = allowlist;\n@@ -86,0 +89,1 @@\n+                                         allowlist,\n@@ -124,0 +128,1 @@\n+                                                 allowlist,\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestBot.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+        var allowlist = specific.get(\"allowlist\").stream().map(JSONValue::asString).collect(Collectors.toSet());\n@@ -61,1 +62,1 @@\n-            ret.add(new TestBot(ci, approvers, availableJobs, defaultJobs, name, storage, hostedRepo));\n+            ret.add(new TestBot(ci, approvers, allowlist, availableJobs, defaultJobs, name, storage, hostedRepo));\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestBotFactory.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -37,0 +38,1 @@\n+import java.util.function.Predicate;\n@@ -42,0 +44,1 @@\n+    private final Set<String> allowlist;\n@@ -49,1 +52,1 @@\n-    TestWorkItem(ContinuousIntegration ci, String approversGroupId, List<String> availableJobs,\n+    TestWorkItem(ContinuousIntegration ci, String approversGroupId, Set<String> allowlist, List<String> availableJobs,\n@@ -53,0 +56,1 @@\n+        this.allowlist = allowlist;\n@@ -249,0 +253,5 @@\n+    private boolean validate(HostUser u) {\n+        var forge = pr.repository().forge();\n+        return forge.isMemberOf(approversGroupId, u) || allowlist.contains(u.id());\n+    }\n+\n@@ -251,1 +260,1 @@\n-        var state = State.from(pr, approversGroupId);\n+        var state = State.from(pr, this::validate);\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItem.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        var state = State.from(pr, \"0\");\n+        var state = State.from(pr, u -> host.isMemberOf(\"0\", u));\n@@ -81,1 +81,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -111,1 +111,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -146,1 +146,1 @@\n-        var state = State.from(pr, \"0\");\n+        var state = State.from(pr, u -> host.isMemberOf(\"0\", u));\n@@ -194,1 +194,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -225,1 +225,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -259,1 +259,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -292,1 +292,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -329,1 +329,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n@@ -384,1 +384,1 @@\n-        var state = State.from(pr, approvers);\n+        var state = State.from(pr, u -> host.isMemberOf(approvers, u));\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/StateTests.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-            var bot = new TestBot(ci, \"0\", List.of(), List.of(), \"\", storage, upstreamHostedRepo);\n+            var bot = new TestBot(ci, \"0\", Set.of(), List.of(), List.of(), \"\", storage, upstreamHostedRepo);\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/TestBotTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -102,1 +102,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -138,1 +138,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -176,1 +176,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -223,1 +223,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -304,1 +304,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -345,1 +345,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -429,1 +429,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -516,1 +516,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -624,1 +624,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -749,1 +749,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -837,1 +837,1 @@\n-            var item = new TestWorkItem(ci, approvers, available, defaultJobs, name, storage, pr);\n+            var item = new TestWorkItem(ci, approvers, Set.of(), available, defaultJobs, name, storage, pr);\n@@ -948,0 +948,78 @@\n+\n+    @Test\n+    void userOnApprovelistDoesNotNeedApproval() throws IOException {\n+        try (var tmp = new TemporaryDirectory()) {\n+            var localRepoDir = tmp.path().resolve(\"repository.git\");\n+            var localRepo = Repository.init(localRepoDir, VCS.GIT);\n+            var readme = localRepoDir.resolve(\"README\");\n+            Files.writeString(readme, \"Hello\\n\");\n+            localRepo.add(readme);\n+            var head = localRepo.commit(\"Add README\", \"duke\", \"duke@openjdk.org\");\n+\n+            var ci = new InMemoryContinuousIntegration();\n+            var approvers = \"0\";\n+            var available = List.of(\"tier1\", \"tier2\", \"tier3\");\n+            var defaultJobs = List.of(\"tier1\");\n+            var name = \"test\";\n+            var storage = tmp.path().resolve(\"storage\");\n+            var scratch = tmp.path().resolve(\"storage\");\n+\n+            var bot = new HostUser(1, \"bot\", \"openjdk [bot]\");\n+            var host = new InMemoryHost();\n+            host.currentUserDetails = bot;\n+            host.groups = Map.of(approvers, Set.of());\n+\n+            var repo = new InMemoryHostedRepository();\n+            repo.host = host;\n+            repo.webUrl = URI.create(\"file:\/\/\" + localRepoDir.toAbsolutePath());\n+            repo.url = URI.create(\"file:\/\/\" + localRepoDir.toAbsolutePath());\n+            repo.id = 1337L;\n+\n+            var pr = new InMemoryPullRequest();\n+            pr.repository = repo;\n+            pr.id = \"17\";\n+\n+            var duke = new HostUser(0, \"duke\", \"Duke\");\n+            pr.author = duke;\n+            pr.headHash = head;\n+\n+            var now = ZonedDateTime.now();\n+            var comment = new Comment(\"0\", \"\/test tier1\", duke, now, now);\n+            pr.comments = new ArrayList<>(List.of(comment));\n+\n+            var item = new TestWorkItem(ci, approvers, Set.of(\"0\"), available, defaultJobs, name, storage, pr);\n+\n+            var expectedJobId = \"null-1337-17-0\";\n+            var expectedJob = new InMemoryJob();\n+            expectedJob.status = new Job.Status(0, 1, 7);\n+            ci.jobs.put(expectedJobId, expectedJob);\n+\n+            item.run(scratch);\n+\n+            var comments = pr.comments();\n+            assertEquals(2, comments.size());\n+            assertEquals(comment, comments.get(0));\n+            var secondComment = comments.get(1);\n+            assertEquals(bot, secondComment.author());\n+\n+            var lines = secondComment.body().split(\"\\n\");\n+            assertEquals(\"<!-- TEST STARTED -->\", lines[0]);\n+            assertEquals(\"<!-- \" + expectedJobId + \" -->\", lines[1]);\n+            assertEquals(\"<!-- \" + head.hex() + \" -->\", lines[2]);\n+            assertEquals(\"A test job has been started with id: \" + expectedJobId, lines[3]);\n+\n+            assertEquals(1, ci.submissions.size());\n+            var submission = ci.submissions.get(0);\n+            assertTrue(submission.source.startsWith(storage));\n+            assertEquals(List.of(\"tier1\"), submission.jobs);\n+            assertEquals(expectedJobId, submission.id);\n+\n+            var checks = pr.checks(pr.headHash());\n+            assertEquals(1, checks.keySet().size());\n+            var check = checks.get(\"test\");\n+            assertEquals(\"Summary\", check.title().get());\n+            assertTrue(check.summary()\n+                            .get()\n+                            .contains(\"0 jobs completed, 1 job running, 7 jobs not yet started\"));\n+        }\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItemTests.java","additions":90,"deletions":12,"binary":false,"changes":102,"status":"modified"}]}