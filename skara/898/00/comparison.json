{"files":[{"patch":"@@ -182,0 +182,7 @@\n+    private boolean exists(Hash h) throws IOException {\n+        try (var p = capture(\"git\", \"cat-file\", \"-e\", h.hex())) {\n+            var res = p.await();\n+            return res.status() == 0;\n+        }\n+    }\n+\n@@ -184,0 +191,4 @@\n+        if (!exists(h)) {\n+            return Optional.empty();\n+        }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -238,0 +238,7 @@\n+    private boolean exists(Hash h) throws IOException {\n+        try (var p = capture(\"hg\", \"log\", \"--rev=\" + h.hex(), \"--template={node}\\n\")) {\n+            var res = p.await();\n+            return res.status() == 0;\n+        }\n+    }\n+\n@@ -240,0 +247,3 @@\n+        if (!exists(h)) {\n+            return Optional.empty();\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2729,0 +2729,17 @@\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testNonExistingLookup(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+            assertTrue(r.isClean());\n+\n+            var readme = dir.path().resolve(\"README.md\");\n+            Files.writeString(readme, \"Hello world\\n\");\n+            r.add(readme);\n+            var hash = r.commit(\"Added readme\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            var nonExisting = r.lookup(new Hash(\"0123456789012345678901234567890123456789\"));\n+            assertEquals(Optional.empty(), nonExisting);\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}