{"files":[{"patch":"@@ -298,0 +298,5 @@\n+\n+    @Override\n+    public Diff diff() {\n+        return null;\n+    }\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.vcs.Diff;\n@@ -123,0 +124,5 @@\n+    \/** Returns a diff of the changes between PR HEAD and target branch.\n+     * @return\n+     *\/\n+    Diff diff();\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.skara.vcs.Diff;\n@@ -665,0 +666,6 @@\n+\n+    @Override\n+    public Diff diff() {\n+        var files = request.get(\"pulls\/\" + json.get(\"number\").toString() + \"\/files\").execute();\n+        return host.toDiff(targetHash(), headHash(), files);\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.skara.vcs.Diff;\n@@ -45,0 +46,1 @@\n+    private final GitLabHost host;\n@@ -49,1 +51,1 @@\n-    GitLabMergeRequest(GitLabRepository repository, JSONValue jsonValue, RestRequest request) {\n+    GitLabMergeRequest(GitLabRepository repository, GitLabHost host, JSONValue jsonValue, RestRequest request) {\n@@ -51,0 +53,1 @@\n+        this.host = host;\n@@ -739,0 +742,6 @@\n+\n+    @Override\n+    public Diff diff() {\n+        var changes = request.get(\"changes\").execute();\n+        return host.toDiff(targetHash(), headHash(), changes.get(\"changes\"));\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-        return new GitLabMergeRequest(targetRepo, pr, targetRepo.request);\n+        return new GitLabMergeRequest(targetRepo, gitLabHost, pr, targetRepo.request);\n@@ -113,1 +113,1 @@\n-        return new GitLabMergeRequest(this, pr, request);\n+        return new GitLabMergeRequest(this, gitLabHost, pr, request);\n@@ -121,1 +121,1 @@\n-                      .map(value -> new GitLabMergeRequest(this, value, request))\n+                      .map(value -> new GitLabMergeRequest(this, gitLabHost, value, request))\n@@ -131,1 +131,1 @@\n-                      .map(value -> new GitLabMergeRequest(this, value, request))\n+                      .map(value -> new GitLabMergeRequest(this, gitLabHost, value, request))\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.skara.vcs.Diff;\n@@ -235,0 +236,18 @@\n+\n+    @Override\n+    public Diff diff() {\n+        try {\n+            var targetLocalRepository = targetRepository.localRepository();\n+            var sourceLocalRepository = sourceRepository.localRepository();\n+            if (targetLocalRepository.root().equals(sourceLocalRepository.root())) {\n+                \/\/ same target and source repo, must contain both commits\n+                return targetLocalRepository.diff(targetHash(), headHash());\n+            } else {\n+                var uri = URI.create(\"file:\/\/\" + sourceLocalRepository.root().toString());\n+                var fetchHead = targetLocalRepository.fetch(uri, sourceRef);\n+                return targetLocalRepository.diff(targetHash(), fetchHead);\n+            }\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"}]}