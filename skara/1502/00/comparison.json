{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            return arguments.get(name).asString();\n+            return getArgument(name, arguments);\n@@ -93,0 +93,25 @@\n+    \/\/ Returning null means that this option is not displayed in the command.\n+    \/\/ If this option is not followed by an argument, the program will exit and report an error.\n+    public static String getOption(String name, Arguments arguments) {\n+        if (arguments.contains(name)) {\n+            return getArgument(name, arguments);\n+        }\n+        return null;\n+    }\n+\n+    public static String getOption(String name, Arguments arguments, String defaultVal) {\n+        if (arguments.contains(name)) {\n+            return getArgument(name, arguments);\n+        }\n+        return defaultVal;\n+    }\n+\n+    private static String getArgument(String name, Arguments arguments) {\n+        var arg = arguments.get(name);\n+        if (!arg.isPresent()) {\n+            System.err.printf(\"error: a non-empty value is needed for '%s'%n\", name);\n+            System.exit(1);\n+        }\n+        return arg.asString();\n+    }\n+\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/ForgeUtils.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import org.openjdk.skara.forge.*;\n-import org.openjdk.skara.issuetracker.Comment;\n@@ -37,1 +35,0 @@\n-import java.util.function.Supplier;\n@@ -39,1 +36,0 @@\n-import java.util.stream.Collectors;\n@@ -43,2 +39,3 @@\n-        if (arguments.contains(name)) {\n-            return arguments.get(name).asString();\n+        var arg = ForgeUtils.getOption(name, arguments);\n+        if (arg != null) {\n+            return arg;\n@@ -46,1 +43,0 @@\n-\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitBackport.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import org.openjdk.skara.forge.Forge;\n@@ -28,1 +27,0 @@\n-import org.openjdk.skara.vcs.Repository;\n@@ -34,1 +32,0 @@\n-import java.nio.file.*;\n@@ -63,5 +60,1 @@\n-        if (arguments.contains(name)) {\n-            return arguments.get(name).asString();\n-        }\n-\n-        return gitConfig(\"cc.\" + name);\n+        return ForgeUtils.getOption(name, \"cc\", null, arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitCommitComments.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import org.openjdk.skara.forge.Forge;\n@@ -29,1 +28,0 @@\n-import org.openjdk.skara.webrev.*;\n@@ -221,1 +219,1 @@\n-        var remote = arguments.contains(\"remote\") ? arguments.get(\"remote\").asString() : null;\n+        var remote = ForgeUtils.getOption(\"remote\", arguments);\n@@ -240,1 +238,1 @@\n-        var fallback = arguments.contains(\"secondary\") ? arguments.get(\"secondary\").asString() : null;\n+        var fallback = ForgeUtils.getOption(\"secondary\", arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitDefpath.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,10 +74,1 @@\n-        if (arguments.contains(name)) {\n-            return arguments.get(name).asString();\n-        }\n-\n-        var subsectionSpecific = gitConfig(\"fork.\" + sourceArg + \".\" + name);\n-        if (subsectionSpecific != null) {\n-            return subsectionSpecific;\n-        }\n-\n-        return gitConfig(\"fork.\" + name);\n+        return ForgeUtils.getOption(name, \"fork\", sourceArg, arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitFork.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,5 +68,1 @@\n-        if (arguments.contains(name)) {\n-            return arguments.get(name).asString();\n-        }\n-\n-        return gitConfig(\"jcheck.\" + name);\n+        return ForgeUtils.getOption(name, \"jcheck\", null, arguments);\n@@ -286,5 +282,1 @@\n-            var rev = arguments.get(\"conf-rev\").asString();\n-            if (rev == null || rev.startsWith(\"--\")) {\n-                System.err.println(String.format(\"error: must enter rev after --conf-rev\"));\n-                return 1;\n-            }\n+            var rev = ForgeUtils.getOption(\"conf-rev\", arguments);\n@@ -319,1 +311,1 @@\n-            var fileName = confFile ? arguments.get(\"conf-file\").asString() : \".jcheck\/conf\";\n+            var fileName = ForgeUtils.getOption(\"conf-file\", arguments, \".jcheck\/conf\");\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitJCheck.java","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,2 +122,3 @@\n-        if (arguments.contains(name)) {\n-            return arguments.get(name).asString();\n+        var arg = ForgeUtils.getOption(name, arguments);\n+        if (arg != null) {\n+            return arg;\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitPublish.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -78,2 +78,3 @@\n-        if (arguments.contains(name)) {\n-            return arguments.get(name).asString();\n+        var arg = ForgeUtils.getOption(name, arguments);\n+        if (arg != null) {\n+            return arg;\n@@ -81,1 +82,0 @@\n-\n@@ -333,2 +333,3 @@\n-        if (arguments.contains(\"branches\")) {\n-            var requested = arguments.get(\"branches\").asString().split(\",\");\n+        var branchesArg = getOption(\"branches\");\n+        if (branchesArg != null) {\n+            var requested = branchesArg.split(\",\");\n@@ -338,8 +339,0 @@\n-        } else {\n-            var lines = repo.config(\"sync.branches\");\n-            if (lines.size() == 1) {\n-                var requested = lines.get(0).split(\",\");\n-                for (var branch : requested) {\n-                    branches.add(branch.trim());\n-                }\n-            }\n@@ -349,7 +342,3 @@\n-        if (arguments.contains(\"ignore\")) {\n-            ignore = Pattern.compile(arguments.get(\"ignore\").asString());\n-        } else {\n-            var lines = repo.config(\"sync.ignore\");\n-            if (lines.size() == 1) {\n-                ignore = Pattern.compile(lines.get(0));\n-            }\n+        var ignoreArg = getOption(\"ignore\");\n+        if (ignoreArg != null) {\n+            ignore = Pattern.compile(ignoreArg);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitSync.java","additions":9,"deletions":20,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,5 @@\n-        var rev = arguments.contains(\"rev\") ? resolve(repo, arguments.get(\"rev\").asString()) : null;\n+        Hash rev = null;\n+        var revArg = ForgeUtils.getOption(\"rev\", arguments);\n+        if (revArg != null) {\n+            rev = resolve(repo, revArg);\n+        }\n@@ -335,2 +339,10 @@\n-        var base = arguments.contains(\"base\") ? resolve(repo, arguments.get(\"base\").asString()) : rev;\n-        var head = arguments.contains(\"head\") ? resolve(repo, arguments.get(\"head\").asString()) : null;\n+        var base = rev;\n+        var baseArg = ForgeUtils.getOption(\"base\", arguments);\n+        if (baseArg != null) {\n+            base = resolve(repo, baseArg);\n+        }\n+        Hash head = null;\n+        var headArg = ForgeUtils.getOption(\"head\", arguments);\n+        if (headArg != null) {\n+            head = resolve(repo, headArg);\n+        }\n@@ -338,1 +350,1 @@\n-        var issue = arguments.contains(\"cr\") ? arguments.get(\"cr\").asString() : null;\n+        String issue = ForgeUtils.getOption(\"cr\", arguments);\n@@ -370,2 +382,1 @@\n-        var title = arguments.contains(\"title\") ?\n-            arguments.get(\"title\").asString() : null;\n+        String title = ForgeUtils.getOption(\"title\", arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitWebrev.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,1 @@\n-import org.openjdk.skara.issuetracker.Comment;\n-import org.openjdk.skara.forge.PullRequest;\n+import org.openjdk.skara.cli.ForgeUtils;\n@@ -77,1 +76,1 @@\n-            var username = arguments.get(\"add\").asString();\n+            var username = ForgeUtils.getOption(\"add\", arguments);\n@@ -81,1 +80,1 @@\n-            var username = arguments.get(\"remove\").asString();\n+            var username = ForgeUtils.getOption(\"remove\", arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrContributor.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -26,2 +26,1 @@\n-import org.openjdk.skara.issuetracker.Comment;\n-import org.openjdk.skara.forge.PullRequest;\n+import org.openjdk.skara.cli.ForgeUtils;\n@@ -91,1 +90,1 @@\n-            var issueId = arguments.get(\"add\").asString();\n+            var issueId = ForgeUtils.getOption(\"add\", arguments);\n@@ -95,1 +94,1 @@\n-            var issueId = arguments.get(\"remove\").asString();\n+            var issueId = ForgeUtils.getOption(\"remove\", arguments);\n@@ -103,2 +102,2 @@\n-            var component = arguments.get(\"component\").asString();\n-            var prio = arguments.get(\"priority\").orString(\"4\");\n+            var component = ForgeUtils.getOption(\"component\", arguments);\n+            var prio = ForgeUtils.getOption(\"priority\", arguments, \"4\");\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrIssue.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import org.openjdk.skara.cli.ForgeUtils;\n@@ -85,4 +86,2 @@\n-        var message = arguments.contains(\"message\") ?\n-            arguments.get(\"message\").asString() :\n-            null;\n-        var type = arguments.get(\"type\").asString();\n+        var message = ForgeUtils.getOption(\"message\", arguments);\n+        var type = ForgeUtils.getOption(\"type\", arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrReview.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import org.openjdk.skara.cli.ForgeUtils;\n@@ -75,1 +76,1 @@\n-            var username = arguments.get(\"credit\").asString();\n+            var username = ForgeUtils.getOption(\"credit\", arguments);\n@@ -79,1 +80,1 @@\n-            var username = arguments.get(\"remove\").asString();\n+            var username = ForgeUtils.getOption(\"remove\", arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrReviewer.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import org.openjdk.skara.cli.ForgeUtils;\n@@ -94,1 +95,1 @@\n-            command += arguments.get(\"job\").asString();\n+            command += ForgeUtils.getOption(\"job\", arguments);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}