{"files":[{"patch":"@@ -160,1 +160,1 @@\n-            if (updateCache.needsUpdate(pr, Duration.ofMinutes(5)) || checkHasExpired(pr)) {\n+            if (updateCache.needsUpdate(pr) || checkHasExpired(pr)) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import java.time.*;\n+import java.time.ZonedDateTime;\n@@ -33,1 +33,0 @@\n-    private final Map<String, ZonedDateTime> expirations = new HashMap<>();\n@@ -37,9 +36,0 @@\n-        return needsUpdate(pr, Duration.ofHours(1));\n-    }\n-\n-    private synchronized void updateCacheEntry(String uniqueId, ZonedDateTime lastPrUpdate, Duration maxAge) {\n-        lastUpdates.put(uniqueId, lastPrUpdate);\n-        expirations.put(uniqueId, ZonedDateTime.now().plus(maxAge));\n-    }\n-\n-    public synchronized boolean needsUpdate(PullRequest pr, Duration maxAge) {\n@@ -55,2 +45,1 @@\n-            log.info(\"Pull request not found in update cache - needs update \" + pr.repository().name() + \"#\" + pr.id());\n-            updateCacheEntry(uniqueId, update, maxAge);\n+            lastUpdates.put(uniqueId, update);\n@@ -61,8 +50,1 @@\n-            log.info(\"Pull request has been updated - needs update \" + pr.repository().name() + \"#\" + pr.id());\n-            updateCacheEntry(uniqueId, update, maxAge);\n-            return true;\n-        }\n-        var expiresAt = expirations.get(uniqueId);\n-        if (expiresAt.isBefore(ZonedDateTime.now())) {\n-            log.info(\"Pull request update cache entry has expired - needs update \" + pr.repository().name() + \"#\" + pr.id());\n-            updateCacheEntry(uniqueId, update, maxAge);\n+            lastUpdates.put(uniqueId, update);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequestUpdateCache.java","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"}]}