{"files":[{"patch":"@@ -36,1 +36,0 @@\n-import java.util.stream.Collectors;\n@@ -63,0 +62,23 @@\n+    \/**\n+     * A wrapper for a WorkItem while it's tracked as pending. Used to track\n+     * when a particular WorkItem entered the pending state so that metrics\n+     * and log messages can use this information.\n+     *\/\n+    private static class PendingWorkItem {\n+        private final WorkItem item;\n+        private final Instant createTime;\n+\n+        public PendingWorkItem(WorkItem item) {\n+            this(item, null);\n+        }\n+\n+        public PendingWorkItem(WorkItem item, Instant originalCreateTime) {\n+            this.item = item;\n+            if (originalCreateTime != null) {\n+                this.createTime = originalCreateTime;\n+            } else {\n+                this.createTime = Instant.now();\n+            }\n+        }\n+    }\n+\n@@ -72,0 +94,12 @@\n+        \/**\n+         * Gauge that tracks the time WorkItems have been pending before\n+         * being submitted.\n+         *\/\n+        private static final Gauge.WithTwoLabels PENDING_TIME_GAUGE =\n+            Gauge.name(\"skara_runner_pending_time\").labels(\"bot\", \"work_item\").register();\n+        \/**\n+         * Gauge that tracks the time WorkItems have been submitted before\n+         * starting to run.\n+         *\/\n+        private static final Gauge.WithTwoLabels SUBMITTED_TIME_GAUGE =\n+                Gauge.name(\"skara_runner_submitted_time\").labels(\"bot\", \"work_item\").register();\n@@ -178,2 +212,2 @@\n-                    log.finer(\"No scratch paths available - postponing \" + item);\n-                    addPending(item, null);\n+                    log.warning(\"No scratch paths available - postponing \" + item);\n+                    addPending(new PendingWorkItem(item), null);\n@@ -188,1 +222,4 @@\n-                log.log(Level.FINE, \"Executing item \" + item + \" on repository \" + scratchPath, TaskPhases.BEGIN);\n+                var submittedDuration = Duration.between(createTime, Instant.now());\n+                SUBMITTED_TIME_GAUGE.labels(item.botName(), item.workItemName()).set(submittedDuration.toMillis() \/ 1_000_000.0);\n+                log.log(Level.FINE, \"Executing item \" + item + \" on repository \" + scratchPath\n+                        + \" after being submitted for \" + submittedDuration, TaskPhases.BEGIN);\n@@ -221,3 +258,3 @@\n-                                            .filter(e -> e.getValue().isEmpty() || !active.containsKey(e.getValue().get()))\n-                                            .map(Map.Entry::getKey)\n-                                            .collect(Collectors.toList());\n+                        .filter(e -> e.getValue().isEmpty() || !active.containsKey(e.getValue().get()))\n+                        .map(Map.Entry::getKey)\n+                        .toList();\n@@ -229,1 +266,1 @@\n-                        if (!activeItem.concurrentWith(candidate)) {\n+                        if (!activeItem.concurrentWith(candidate.item)) {\n@@ -239,2 +276,6 @@\n-                        submit(candidate);\n-                        log.finer(\"Submitting candidate: \" + candidate);\n+                        submit(candidate.item);\n+                        var timeSinceCreation = Duration.between(candidate.createTime, Instant.now());\n+                        PENDING_TIME_GAUGE.labels(candidate.item.botName(), candidate.item.workItemName())\n+                                .set(timeSinceCreation.toMillis() \/ 1_000_000.0);\n+                        log.fine(\"Submitting candidate: \" + candidate.item\n+                                + \" after being pending for \" + timeSinceCreation);\n@@ -248,1 +289,1 @@\n-    private final Map<WorkItem, Optional<WorkItem>> pending;\n+    private final Map<PendingWorkItem, Optional<WorkItem>> pending;\n@@ -274,0 +315,1 @@\n+                    Instant originalCreateTime = null;\n@@ -276,1 +318,1 @@\n-                        if (item.replaces(pendingItem)) {\n+                        if (item.replaces(pendingItem.item)) {\n@@ -281,0 +323,1 @@\n+                            originalCreateTime = pendingItem.createTime;\n@@ -286,1 +329,1 @@\n-                    addPending(item, activeItem);\n+                    addPending(new PendingWorkItem(item, originalCreateTime), activeItem);\n@@ -297,1 +340,1 @@\n-     * @param item Item to queue\n+     * @param pendingItem Item to queue\n@@ -300,3 +343,3 @@\n-    private void addPending(WorkItem item, WorkItem activeItem) {\n-        pending.put(item, Optional.ofNullable(activeItem));\n-        pendingGauge.labels(item.botName(), item.workItemName()).inc();\n+    private void addPending(PendingWorkItem pendingItem, WorkItem activeItem) {\n+        pending.put(pendingItem, Optional.ofNullable(activeItem));\n+        pendingGauge.labels(pendingItem.item.botName(), pendingItem.item.workItemName()).inc();\n@@ -308,3 +351,3 @@\n-    private void removePending(WorkItem item) {\n-        pending.remove(item);\n-        pendingGauge.labels(item.botName(), item.workItemName()).dec();\n+    private void removePending(PendingWorkItem pendingItem) {\n+        pending.remove(pendingItem);\n+        pendingGauge.labels(pendingItem.item.botName(), pendingItem.item.workItemName()).dec();\n","filename":"bot\/src\/main\/java\/org\/openjdk\/skara\/bot\/BotRunner.java","additions":63,"deletions":20,"binary":false,"changes":83,"status":"modified"}]}