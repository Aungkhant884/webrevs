{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.skara.issuetracker.Comment;\n@@ -35,1 +36,1 @@\n-import java.util.regex.Pattern;\n+import java.util.regex.*;\n@@ -53,15 +54,15 @@\n-    private Hash resultingCommitHashFor(PullRequest pr) {\n-       if (pr.labels().contains(\"integrated\")) {\n-           for (var comment : pr.comments()) {\n-               if (comment.author().id().equals(integratorId)) {\n-                   for (var line : comment.body().split(\"\\n\")) {\n-                       if (line.startsWith(\"Pushed as commit\")) {\n-                           var parts = line.split(\" \");\n-                           var hash = parts[parts.length - 1].replace(\".\", \"\");\n-                           return new Hash(hash);\n-                       }\n-                   }\n-               }\n-           }\n-       }\n-       return null;\n+    private final static Pattern pushedPattern = Pattern.compile(\"Pushed as commit ([a-f0-9]{40})\\\\.\");\n+\n+    private Hash resultingCommitHash() {\n+        if (pr.labels().contains(\"integrated\")) {\n+            return pr.comments().stream()\n+                     .filter(comment -> comment.author().id().equals(integratorId))\n+                     .map(Comment::body)\n+                     .map(pushedPattern::matcher)\n+                     .filter(Matcher::find)\n+                     .map(m -> m.group(1))\n+                     .map(Hash::new)\n+                     .findAny()\n+                     .orElse(null);\n+        }\n+        return null;\n@@ -182,1 +183,1 @@\n-        var commit = resultingCommitHashFor(pr);\n+        var commit = resultingCommitHash();\n@@ -196,1 +197,1 @@\n-            var hash = resultingCommitHashFor(pr);\n+            var hash = resultingCommitHash();\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/PullRequestWorkItem.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import org.openjdk.skara.bots.notify.*;\n+import org.openjdk.skara.bots.notify.NotifyBot;\n@@ -31,1 +31,0 @@\n-import java.net.URI;\n@@ -79,1 +78,1 @@\n-            pr.addComment(\"Pushed as commit \" + editHash.hex() + \".\");\n+            pr.addComment(\"More text!\\n\\n@user Pushed as commit \" + editHash.hex() + \". Even more text.\\n\\nAnd some additional text.\");\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/comment\/CommitCommentNotifierTests.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -158,1 +158,3 @@\n-                reply.println(\"Pushed as commit \" + localHash.hex() + \". :bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n+                reply.println(\"Pushed as commit \" + localHash.hex() + \".\");\n+                reply.println();\n+                reply.println(\":bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            message.append(\"However, no automatic labelling rule matches the changes in this pull request. \");\n+            message.append(\"However, no automatic labelling rule matches the changes in this pull request.\\n\\n\");\n@@ -83,1 +83,1 @@\n-                            .collect(Collectors.joining(\", \"));\n+                            .collect(Collectors.joining(\" \"));\n@@ -87,1 +87,5 @@\n-            message.append(\"The following labels will be automatically applied to this pull request: \");\n+            message.append(\"The following label\");\n+            if (newLabels.size() > 1) {\n+                message.append(\"s\");\n+            }\n+            message.append(\" will be automatically applied to this pull request: \");\n@@ -91,2 +95,1 @@\n-                                  .collect(Collectors.joining(\", \"));\n-            message.append(\"`\");\n+                                  .collect(Collectors.joining(\" \"));\n@@ -94,1 +97,1 @@\n-            message.append(\"`. When this pull request is ready to be reviewed, an RFR email will be sent to the \");\n+            message.append(\".\\n\\nWhen this pull request is ready to be reviewed, an RFR email will be sent to the \");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -132,1 +132,3 @@\n-                reply.println(\"Pushed as commit \" + localHash.hex() + \". :bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n+                reply.println(\"Pushed as commit \" + localHash.hex() + \".\");\n+                reply.println();\n+                reply.println(\":bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorCommand.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-            assertLastCommentContains(pr, \"The following labels will be automatically applied\");\n+            assertLastCommentContains(pr, \"The following label will be automatically applied\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-            assertLastCommentContains(pr, \"The following labels are valid: `test1`, `test2`\");\n+            assertLastCommentContains(pr, \"The following labels are valid: `test1` `test2`\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}