{"files":[{"patch":"@@ -86,2 +86,2 @@\n-        for (var label : labels) {\n-            issue.removeLabel(label);\n+        if (!labels.isEmpty()) {\n+            issue.setLabels(List.of());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/JbsBackport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -220,0 +220,5 @@\n+    @Override\n+    public void setLabels(List<String> labels) {\n+        this.labels = new HashSet<>(labels);\n+    }\n+\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -541,0 +541,13 @@\n+    @Override\n+    public void setLabels(List<String> labels) {\n+        var labelArray = JSON.array();\n+        for (var label : labels) {\n+            labelArray.add(label);\n+        }\n+        var query = JSON.object().put(\"labels\", labelArray);\n+        request.put(\"issues\/\" + json.get(\"number\").toString() + \"\/labels\")\n+               .body(query)\n+               .execute();\n+        this.labels = labels;\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -649,0 +649,8 @@\n+    @Override\n+    public void setLabels(List<String> labels) {\n+        request.put(\"\")\n+               .body(\"labels\", String.join(\",\", labels))\n+               .execute();\n+        this.labels = labels;\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -148,0 +148,5 @@\n+    \/**\n+     * Set the given labels and remove any others.\n+     *\/\n+    void setLabels(List<String> labels);\n+\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Issue.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -253,0 +253,13 @@\n+    @Override\n+    public void setLabels(List<String> labels) {\n+        var labelsArray = JSON.array();\n+        for (var label : labels) {\n+            labelsArray.add(label);\n+        }\n+        var query = JSON.object()\n+                        .put(\"update\", JSON.object()\n+                                           .put(\"labels\", JSON.array().add(JSON.object()\n+                                                                               .put(\"set\", labelsArray))));\n+        request.put(\"\").body(query).execute();\n+    }\n+\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssue.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -166,0 +166,10 @@\n+    @Override\n+    public void setLabels(List<String> labels) {\n+        data.labels.clear();\n+        var now = ZonedDateTime.now();\n+        for (var label : labels) {\n+            data.labels.put(label, now);\n+        }\n+        data.lastUpdate = now;\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssue.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}