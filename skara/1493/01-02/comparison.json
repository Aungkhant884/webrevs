{"files":[{"patch":"@@ -136,1 +136,7 @@\n-        if (!branchPatterns.isEmpty()) {\n+        if (branchPatterns.isEmpty()) {\n+            if (onlyTags) {\n+                name += \" ()\";\n+            } else {\n+                name += \" (*)\";\n+            }\n+        } else {\n","filename":"bots\/mirror\/src\/main\/java\/org\/openjdk\/skara\/bots\/mirror\/MirrorBot.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -86,2 +86,2 @@\n-                if (!Set.of(\"include\", \"only\", \"exclude\").contains(tags)) {\n-                    throw new IllegalStateException(\"\\\"tags\\\" field can only have values \\\"include\\\", \\\"only\\\" or \\\"exclude\\\"\");\n+                if (!Set.of(\"include\", \"only\").contains(tags)) {\n+                    throw new IllegalStateException(\"\\\"tags\\\" field can only have value \\\"include\\\" or \\\"only\\\"\");\n","filename":"bots\/mirror\/src\/main\/java\/org\/openjdk\/skara\/bots\/mirror\/MirrorBotFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.util.regex.Pattern;\n@@ -93,1 +94,1 @@\n-            assertEquals(\"MirrorBot@from3->to3 [tags included]\", mirrorBot3.toString());\n+            assertEquals(\"MirrorBot@from3->to3 (*) [tags included]\", mirrorBot3.toString());\n@@ -181,28 +182,0 @@\n-    @Test\n-    public void testPassesWithBranchesAndTagsExplicitlyExcluded() {\n-        try (var tempFolder = new TemporaryDirectory()) {\n-            String jsonString = \"\"\"\n-                    {\n-                      \"repositories\": [\n-                        {\n-                          \"from\": \"from1\",\n-                          \"to\": \"to1\",\n-                          \"branches\": \"master\",\n-                          \"tags\": \"exclude\"\n-                        }\n-                      ]\n-                    }\n-                    \"\"\";\n-            var jsonConfig = JWCC.parse(jsonString).asObject();\n-\n-            var testBotFactory = TestBotFactory.newBuilder()\n-                    .addHostedRepository(\"from1\", new TestHostedRepository(\"from1\"))\n-                    .addHostedRepository(\"to1\", new TestHostedRepository(\"to1\"))\n-                    .storagePath(tempFolder.path().resolve(\"storage\"))\n-                    .build();\n-\n-            var bots = testBotFactory.createBots(MirrorBotFactory.NAME, jsonConfig);\n-            assertEquals(1, bots.size());\n-        }\n-    }\n-\n@@ -228,1 +201,0 @@\n-                          \"tags\": \"only\"\n@@ -233,1 +205,6 @@\n-                          \"tags\": \"exclude\"\n+                          \"tags\": \"only\"\n+                        },\n+                        {\n+                          \"from\": \"from5\",\n+                          \"to\": \"to5\",\n+                          \"branches\": [\"master\", \"dev\"]\n@@ -245,0 +222,1 @@\n+                    .addHostedRepository(\"from5\", new TestHostedRepository(\"from5\"))\n@@ -249,0 +227,1 @@\n+                    .addHostedRepository(\"to5\", new TestHostedRepository(\"to5\"))\n@@ -253,1 +232,1 @@\n-            assertEquals(4, bots.size());\n+            assertEquals(5, bots.size());\n@@ -258,1 +237,3 @@\n-            assertEquals(\"master\", mirrorBot1.getBranchPatterns().get(0).toString());\n+            assertFalse(mirrorBot1.isOnlyTags());\n+            assertEquals(List.of(\"master\"),\n+                         mirrorBot1.getBranchPatterns().stream().map(Pattern::toString).toList());\n@@ -261,1 +242,1 @@\n-            assertEquals(\"MirrorBot@from2->to2 [tags included]\", mirrorBot2.toString());\n+            assertEquals(\"MirrorBot@from2->to2 (*) [tags included]\", mirrorBot2.toString());\n@@ -263,0 +244,1 @@\n+            assertFalse(mirrorBot2.isOnlyTags());\n@@ -266,1 +248,1 @@\n-            assertEquals(\"MirrorBot@from3->to3 [tags only]\", mirrorBot3.toString());\n+            assertEquals(\"MirrorBot@from3->to3 (*) [tags included]\", mirrorBot3.toString());\n@@ -268,2 +250,2 @@\n-            assertTrue(mirrorBot3.isOnlyTags());\n-            assertEquals(0, mirrorBot3.getBranchPatterns().size());\n+            assertFalse(mirrorBot3.isOnlyTags());\n+            assertEquals(List.of(), mirrorBot3.getBranchPatterns());\n@@ -272,4 +254,11 @@\n-            assertEquals(\"MirrorBot@from4->to4 [tags excluded]\", mirrorBot4.toString());\n-            assertFalse(mirrorBot4.isIncludeTags());\n-            assertFalse(mirrorBot4.isOnlyTags());\n-            assertEquals(0, mirrorBot3.getBranchPatterns().size());\n+            assertEquals(\"MirrorBot@from4->to4 () [tags only]\", mirrorBot4.toString());\n+            assertTrue(mirrorBot4.isIncludeTags());\n+            assertTrue(mirrorBot4.isOnlyTags());\n+            assertEquals(List.of(), mirrorBot4.getBranchPatterns());\n+\n+            MirrorBot mirrorBot5 = (MirrorBot) bots.get(4);\n+            assertEquals(\"MirrorBot@from5->to5 (master,dev) [tags excluded]\", mirrorBot5.toString());\n+            assertFalse(mirrorBot5.isIncludeTags());\n+            assertFalse(mirrorBot5.isOnlyTags());\n+            assertEquals(List.of(\"master\", \"dev\"),\n+                         mirrorBot5.getBranchPatterns().stream().map(Pattern::toString).toList());\n","filename":"bots\/mirror\/src\/test\/java\/org\/openjdk\/skara\/bots\/mirror\/MirrorBotFactoryTest.java","additions":30,"deletions":41,"binary":false,"changes":71,"status":"modified"}]}