{"files":[{"patch":"@@ -35,0 +35,1 @@\n+    public static final String WEBREV_COMMENT_MARKER = \"<!-- mlbridge webrev comment -->\";\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/PullRequestConstants.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.WEBREV_COMMENT_MARKER;\n@@ -151,1 +152,0 @@\n-    private static final String webrevCommentMarker = \"<!-- mlbridge webrev comment -->\";\n@@ -161,1 +161,1 @@\n-                               .filter(comment -> comment.body().contains(webrevCommentMarker))\n+                               .filter(comment -> comment.body().contains(WEBREV_COMMENT_MARKER))\n@@ -166,1 +166,1 @@\n-        var comment = webrevCommentMarker + \"\\n\";\n+        var comment = WEBREV_COMMENT_MARKER + \"\\n\";\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -728,0 +728,5 @@\n+        var webrevCommentLink = getWebrevCommentLink();\n+        if (webrevCommentLink.isPresent()) {\n+            progressBody.append(\"\\n\\n### Webrev\\n\");\n+            progressBody.append(webrevCommentLink.get());\n+        }\n@@ -731,0 +736,8 @@\n+    private Optional<String> getWebrevCommentLink() {\n+        var webrevComment = comments.stream()\n+                .filter(comment -> comment.author().username().equals(workItem.bot.mlbridgeBotName()))\n+                .filter(comment -> comment.body().contains(WEBREV_COMMENT_MARKER))\n+                .findFirst();\n+        return webrevComment.map(comment -> \"[Link to Webrev Comment](\" + pr.commentUrl(comment).toString() + \")\");\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+import static org.openjdk.skara.bots.common.PullRequestConstants.WEBREV_COMMENT_MARKER;\n+\n@@ -97,0 +99,6 @@\n+            commentString = commentString + comments.stream()\n+                    .filter(comment -> comment.author().username().equals(bot.mlbridgeBotName()))\n+                    .flatMap(comment -> comment.body().lines())\n+                    .filter(line -> line.equals(WEBREV_COMMENT_MARKER))\n+                    .findFirst().orElse(\"\");\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,0 +68,1 @@\n+    private final String mlbridgeBotName;\n@@ -80,1 +81,1 @@\n-                   boolean reviewCleanBackport) {\n+                   boolean reviewCleanBackport, String mlbridgeBotName) {\n@@ -106,0 +107,2 @@\n+        this.mlbridgeBotName = mlbridgeBotName;\n+\n@@ -271,0 +274,4 @@\n+    public String mlbridgeBotName() {\n+        return mlbridgeBotName;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+    private String mlbridgeBotName;\n+\n@@ -188,0 +190,5 @@\n+    public PullRequestBotBuilder mlbridgeBotName(String mlbridgeBotName) {\n+        this.mlbridgeBotName = mlbridgeBotName;\n+        return this;\n+    }\n+\n@@ -195,1 +202,1 @@\n-                                  enableCsr, enableJep, reviewCleanBackport);\n+                                  enableCsr, enableJep, reviewCleanBackport, mlbridgeBotName);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -76,0 +76,5 @@\n+        var mlbridgeBotName = \"\";\n+        if (specific.contains(\"mlbridge\")) {\n+            mlbridgeBotName = specific.get(\"mlbridge\").asString();\n+        }\n+\n@@ -120,1 +125,2 @@\n-                                           .forks(forks);\n+                                           .forks(forks)\n+                                           .mlbridgeBotName(mlbridgeBotName);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2806,0 +2806,46 @@\n+\n+    @Test\n+    void testWebrevLinkinPRBody(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            reviewer.forge().currentUser().changeUserName(\"mlbridge[bot]\");\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                    .seedStorage(seedFolder)\n+                    .mlbridgeBotName(\"mlbridge[bot]\")\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"refs\/heads\/edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            var reviewPr = reviewer.pullRequest(pr.id());\n+            reviewPr.addComment(\"comment1\");\n+\n+            \/\/ This one should not trigger update\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ Add Webrev comment\n+            reviewPr.addComment(WEBREV_COMMENT_MARKER + \"\\n\" + \"00:Full(1afrv2f)\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertTrue(pr.store().body().contains(\"Link to Webrev Comment\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -87,1 +87,2 @@\n-                      }\n+                      },\n+                      \"mlbridge\": \"mlbridge[bot]\"\n@@ -125,0 +126,1 @@\n+            assertEquals(\"mlbridge[bot]\", pullRequestBot1.mlbridgeBotName());\n@@ -127,1 +129,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactoryTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -166,0 +166,4 @@\n+\n+    public void changeUserName(String username) {\n+        this.username = username;\n+    }\n","filename":"host\/src\/main\/java\/org\/openjdk\/skara\/host\/HostUser.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}