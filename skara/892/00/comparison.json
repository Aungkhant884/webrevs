{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.util.logging.Logger;\n@@ -35,0 +36,1 @@\n+    private final Logger log = Logger.getLogger(\"org.openjdk.skara.bots.notify\");\n@@ -56,0 +58,8 @@\n+        var branchExists = pr.repository().branches().stream()\n+                         .map(HostedBranch::name)\n+                         .anyMatch(name -> name.equals(PreIntegrations.preIntegrateBranch(pr)));\n+        if (!branchExists) {\n+            log.info(\"Pull request pre-integration branch \" + PreIntegrations.preIntegrateBranch(pr) + \" doesn't exist on remote - ignoring\");\n+            return;\n+        }\n+\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/prbranch\/PullRequestBranchNotifier.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n-import org.openjdk.skara.issuetracker.*;\n-import org.openjdk.skara.json.*;\n+import org.openjdk.skara.issuetracker.Issue;\n+import org.openjdk.skara.json.JSON;\n@@ -30,0 +30,1 @@\n+import org.openjdk.skara.vcs.Branch;\n@@ -140,0 +141,38 @@\n+\n+    @Test\n+    void branchMissing(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+\n+            var repo = credentials.getHostedRepository();\n+            var repoFolder = tempFolder.path().resolve(\"repo\");\n+            var localRepo = CheckableRepository.init(repoFolder, repo.repositoryType());\n+            credentials.commitLock(localRepo);\n+            localRepo.pushAll(repo.url());\n+\n+            var storageFolder = tempFolder.path().resolve(\"storage\");\n+            var notifyBot = testBotBuilder(repo, storageFolder).create(\"notify\", JSON.object());\n+\n+            \/\/ Initialize history\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ Create a PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo, \"Another line\");\n+            localRepo.push(editHash, repo.url(), \"source\", true);\n+            var pr = credentials.createPullRequest(repo, \"master\", \"source\", \"This is a PR\", false);\n+            pr.addLabel(\"rfr\");\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ The target repo should now contain the new branch\n+            var hash = localRepo.fetch(repo.url(), PreIntegrations.preIntegrateBranch(pr));\n+            assertEquals(editHash, hash);\n+            try {\n+                localRepo.prune(new Branch(PreIntegrations.preIntegrateBranch(pr)), repo.url().toString());\n+            } catch (IOException ignored) {\n+            }\n+\n+            \/\/ Now close it - no exception should be raised\n+            pr.setState(Issue.State.CLOSED);\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+        }\n+    }\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/prbranch\/PullRequestBranchNotifierTests.java","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"}]}