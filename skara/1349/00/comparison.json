{"files":[{"patch":"@@ -53,2 +53,2 @@\n-    CheckWorkItem(PullRequestBot bot, PullRequest pr, Consumer<RuntimeException> errorHandler) {\n-        super(bot, pr, errorHandler);\n+    CheckWorkItem(PullRequestBot bot, String prId, Consumer<RuntimeException> errorHandler) {\n+        super(bot, prId, errorHandler);\n@@ -217,1 +217,1 @@\n-        return \"CheckWorkItem@\" + pr.repository().name() + \"#\" + pr.id();\n+        return \"CheckWorkItem@\" + pr.repository().name() + \"#\" + prId;\n@@ -221,1 +221,1 @@\n-    public Collection<WorkItem> run(Path scratchPath) {\n+    public Collection<WorkItem> prRun(Path scratchPath) {\n@@ -239,1 +239,1 @@\n-                return List.of(new PullRequestCommandWorkItem(bot, pr, errorHandler));\n+                return List.of(new PullRequestCommandWorkItem(bot, prId, errorHandler));\n@@ -303,1 +303,1 @@\n-                    return List.of(new CheckWorkItem(bot, pr.repository().pullRequest(pr.id()), errorHandler));\n+                    return List.of(new CheckWorkItem(bot, prId, errorHandler));\n@@ -342,1 +342,1 @@\n-                return List.of(new CheckWorkItem(bot, pr.repository().pullRequest(pr.id()), errorHandler));\n+                return List.of(new CheckWorkItem(bot, prId, errorHandler));\n@@ -347,1 +347,1 @@\n-                return List.of(new CheckWorkItem(bot, pr.repository().pullRequest(pr.id()), errorHandler));\n+                return List.of(new CheckWorkItem(bot, prId, errorHandler));\n@@ -366,3 +366,1 @@\n-        \/\/ Must re-fetch PR after executing CheckRun\n-        var updatedPR = pr.repository().pullRequest(pr.id());\n-        return List.of(new PullRequestCommandWorkItem(bot, updatedPR, errorHandler));\n+        return List.of(new PullRequestCommandWorkItem(bot, prId, errorHandler));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-    LabelerWorkItem(PullRequestBot bot, PullRequest pr, Consumer<RuntimeException> errorHandler) {\n-        super(bot, pr, errorHandler);\n+    LabelerWorkItem(PullRequestBot bot, String prId, Consumer<RuntimeException> errorHandler) {\n+        super(bot, prId, errorHandler);\n@@ -45,1 +45,1 @@\n-        return \"LabelerWorkItem@\" + pr.repository().name() + \"#\" + pr.id();\n+        return \"LabelerWorkItem@\" + pr.repository().name() + \"#\" + prId;\n@@ -117,1 +117,1 @@\n-    public Collection<WorkItem> run(Path scratchPath) {\n+    public Collection<WorkItem> prRun(Path scratchPath) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-                    ret.add(new CheckWorkItem(this, pr, e -> updateCache.invalidate(pr)));\n+                    ret.add(new CheckWorkItem(this, pr.id(), e -> updateCache.invalidate(pr)));\n@@ -175,1 +175,1 @@\n-                    ret.add(new PullRequestCommandWorkItem(this, pr, e -> updateCache.invalidate(pr)));\n+                    ret.add(new PullRequestCommandWorkItem(this, pr.id(), e -> updateCache.invalidate(pr)));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-    PullRequestCommandWorkItem(PullRequestBot bot, PullRequest pr, Consumer<RuntimeException> errorHandler) {\n-        super(bot, pr, errorHandler);\n+    PullRequestCommandWorkItem(PullRequestBot bot, String prId, Consumer<RuntimeException> errorHandler) {\n+        super(bot, prId, errorHandler);\n@@ -103,1 +103,1 @@\n-        return pr.repository().name() + \"#\" + pr.id();\n+        return pr.repository().name() + \"#\" + prId;\n@@ -164,1 +164,1 @@\n-    public Collection<WorkItem> run(Path scratchPath) {\n+    public Collection<WorkItem> prRun(Path scratchPath) {\n@@ -175,3 +175,1 @@\n-                \/\/ Must re-fetch PR after running the command, the command might have updated the PR\n-                var updatedPR = pr.repository().pullRequest(pr.id());\n-                return List.of(new LabelerWorkItem(bot, updatedPR, errorHandler));\n+                return List.of(new LabelerWorkItem(bot, prId, errorHandler));\n@@ -196,3 +194,0 @@\n-            \/\/ Must re-fetch PR after running the command, the command might have updated the PR\n-            var updatedPR = pr.repository().pullRequest(pr.id());\n-\n@@ -200,1 +195,1 @@\n-            return List.of(new CheckWorkItem(bot, updatedPR, errorHandler));\n+            return List.of(new CheckWorkItem(bot, prId, errorHandler));\n@@ -209,1 +204,1 @@\n-        return \"PullRequestCommandWorkItem@\" + pr.repository().name() + \"#\" + pr.id();\n+        return \"PullRequestCommandWorkItem@\" + pr.repository().name() + \"#\" + prId;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCommandWorkItem.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+import java.nio.file.Path;\n+import java.util.Collection;\n@@ -33,1 +35,2 @@\n-    final PullRequest pr;\n+    final String prId;\n+    PullRequest pr;\n@@ -35,1 +38,1 @@\n-    PullRequestWorkItem(PullRequestBot bot, PullRequest pr, Consumer<RuntimeException> errorHandler) {\n+    PullRequestWorkItem(PullRequestBot bot, String prId, Consumer<RuntimeException> errorHandler) {\n@@ -37,1 +40,1 @@\n-        this.pr = pr;\n+        this.prId = prId;\n@@ -43,1 +46,1 @@\n-        if (!(other instanceof PullRequestWorkItem)) {\n+        if (!(other instanceof PullRequestWorkItem otherItem)) {\n@@ -46,2 +49,1 @@\n-        PullRequestWorkItem otherItem = (PullRequestWorkItem)other;\n-        if (!pr.isSame(otherItem.pr)) {\n+        if (!(prId.equals(otherItem.prId) && bot.repo().isSame(otherItem.bot.repo()))) {\n@@ -53,0 +55,16 @@\n+    \/**\n+     * Loads the PR from the remote repo at the start of run to guarantee that all\n+     * PullRequestWorkItems have a coherent and current view of the PR to avoid\n+     * races. When the run method is called, we are guaranteed to be the only\n+     * WorkItem executing on this specific PR through the concurrentWith method.\n+     * <p>\n+     * Subclasses should override prRun instead of this method.\n+     *\/\n+    @Override\n+    public final Collection<WorkItem> run(Path scratchPath) {\n+        pr = bot.repo().pullRequest(prId);\n+        return prRun(scratchPath);\n+    }\n+\n+    abstract Collection<WorkItem> prRun(Path scratchPath);\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestWorkItem.java","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"}]}