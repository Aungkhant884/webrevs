{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import java.util.logging.Logger;\n@@ -43,0 +44,1 @@\n+    private static final Logger log = Logger.getLogger(GitLabRepository.class.getName());\n@@ -140,0 +142,1 @@\n+                      .map(this::refetchMergeRequest)\n@@ -150,0 +153,1 @@\n+                      .map(this::refetchMergeRequest)\n@@ -162,0 +166,1 @@\n+                      .map(this::refetchMergeRequest)\n@@ -173,0 +178,1 @@\n+                .map(this::refetchMergeRequest)\n@@ -177,0 +183,32 @@\n+    \/**\n+     * This method is used to work around a bug in GitLab where list query\n+     * results for merge requests sometimes return stale data. Fetching them\n+     * directly using the ID will always return up-to-date data. The method\n+     * logs when stale data is actually detected to give us a way to\n+     * empirically verify when the bug is no longer present.\n+     *\/\n+    private JSONValue refetchMergeRequest(JSONValue origData) {\n+        var updatedAt = ZonedDateTime.parse(origData.get(\"updated_at\").asString());\n+        \/\/ Only do the refetch on merge requests that have been updated recently.\n+        \/\/ The 3 hours cut off is rather arbitrarily chosen. We will have to see\n+        \/\/ if it is enough. Having some kind of cut off is reasonable as we would\n+        \/\/ otherwise risk running a lot of queries on the first run after a\n+        \/\/ restart.\n+        if (updatedAt.isAfter(ZonedDateTime.now().minus(Duration.ofHours(3)))) {\n+            var id = origData.get(\"iid\");\n+            var newData = request.get(\"merge_requests\/\" + id).execute();\n+            \/\/ We can't compare the full json object returned from a list query\n+            \/\/ and get query call as they will always be different. The part we\n+            \/\/ worry about is the labels, so compare just that.\n+            JSONValue origLabels = origData.get(\"labels\");\n+            JSONValue newLabels = newData.get(\"labels\");\n+            if (!origLabels.equals(newLabels)) {\n+                log.warning(\"Possibly stale merge request data received for \" + name() + \"#\" + id\n+                        + \" orig: \" + origLabels + \" new: \" + newLabels);\n+            }\n+            return newData;\n+        } else {\n+            return origData;\n+        }\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"}]}