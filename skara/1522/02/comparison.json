{"files":[{"patch":"@@ -58,1 +58,1 @@\n-    JiraHost(URI uri, String cookie) {\n+    JiraHost(URI uri, String header, String value) {\n@@ -66,1 +66,1 @@\n-        request = new RestRequest(baseApi, \"test\", (r) -> Arrays.asList(\"Cookie\", cookie));\n+        request = new RestRequest(baseApi, \"test\", (r) -> Arrays.asList(header, value));\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraHost.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+    private static final List<String> FILTER_OUT_FIELDS = List.of(\"fields.customfield_11700\");\n@@ -607,0 +608,1 @@\n+     * Filter out the fields in FILTER_OUT_FIELDS\n@@ -617,1 +619,24 @@\n-        return Objects.equals(json, jiraIssue.json);\n+        var copiedJson = JSON.parse(json.toString());\n+        var copiedJiraIssueJson = JSON.parse(jiraIssue.json.toString());\n+        filterOutJSONFields(copiedJson);\n+        filterOutJSONFields(copiedJiraIssueJson);\n+        return Objects.equals(copiedJson, copiedJiraIssueJson);\n+    }\n+\n+    private void filterOutJSONFields(JSONValue json) {\n+        for (String field : FILTER_OUT_FIELDS) {\n+            var parts = field.split(\"\\\\.\");\n+            var tempJson = json.asObject();\n+            var length = parts.length;\n+            for (int i = 0; i < length; i++) {\n+                if (i != length - 1) {\n+                    if (tempJson.contains(parts[i])) {\n+                        tempJson = tempJson.get(parts[i]).asObject();\n+                    } else {\n+                        break;\n+                    }\n+                } else {\n+                    tempJson.remove(parts[i]);\n+                }\n+            }\n+        }\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssue.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -62,1 +62,9 @@\n-        return new JiraHost(uri, cookie);\n+        return new JiraHost(uri, \"Cookie\", cookie);\n+    }\n+\n+    \/**\n+     * Get the issue tracker according to personal access token\n+     * This method is only used by the manual test code.\n+     *\/\n+    public IssueTracker createWithPat(URI uri, String pat) {\n+        return new JiraHost(uri, \"Authorization\", pat);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssueTrackerFactory.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import org.openjdk.skara.proxy.HttpProxy;\n@@ -86,0 +87,17 @@\n+\n+    @Test\n+    void testEquals() throws IOException {\n+        HttpProxy.setup();\n+        var uri = URIBuilder.base(\"https:\/\/bugs.openjdk.org\").build();\n+        var settings = ManualTestSettings.loadManualTestSettings();\n+        var pat = settings.getProperty(\"jira.pat\");\n+        var project = settings.getProperty(\"jira.project\");\n+        var issueId = settings.getProperty(\"jira.issue\");\n+        var jiraHost = new JiraIssueTrackerFactory().createWithPat(uri, \"Bearer \" + pat);\n+        var jiraProject = jiraHost.project(project);\n+\n+        var issue = jiraProject.issue(issueId).orElseThrow();\n+        var issue2 = jiraProject.issue(issueId).orElseThrow();\n+\n+        assertEquals(issue, issue2);\n+    }\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProjectTests.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,0 +112,5 @@\n+    public JSONObject remove(String k) {\n+        value.remove(k);\n+        return this;\n+    }\n+\n","filename":"json\/src\/main\/java\/org\/openjdk\/skara\/json\/JSONObject.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}