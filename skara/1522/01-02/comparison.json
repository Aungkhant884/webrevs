{"files":[{"patch":"@@ -65,0 +65,4 @@\n+    \/**\n+     * Get the issue tracker according to personal access token\n+     * This method is only used by the manual test code.\n+     *\/\n@@ -66,1 +70,1 @@\n-        return new JiraHost(uri, \"Bearer\", pat);\n+        return new JiraHost(uri, \"Authorization\", pat);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssueTrackerFactory.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import org.openjdk.skara.proxy.HttpProxy;\n@@ -42,1 +43,1 @@\n-\/\/@Disabled(\"Manual\")\n+@Disabled(\"Manual\")\n@@ -89,1 +90,1 @@\n-        var settings = ManualTestSettings.loadManualTestSettings();\n+        HttpProxy.setup();\n@@ -91,0 +92,1 @@\n+        var settings = ManualTestSettings.loadManualTestSettings();\n@@ -92,2 +94,4 @@\n-        var jiraHost = new JiraIssueTrackerFactory().createWithPat(uri, pat);\n-        var jiraProject = jiraHost.project(\"SKARA\");\n+        var project = settings.getProperty(\"jira.project\");\n+        var issueId = settings.getProperty(\"jira.issue\");\n+        var jiraHost = new JiraIssueTrackerFactory().createWithPat(uri, \"Bearer \" + pat);\n+        var jiraProject = jiraHost.project(project);\n@@ -95,2 +99,2 @@\n-        var issue = jiraProject.issue(\"1914\").orElseThrow();\n-        var issue2 = jiraProject.issue(\"1914\").orElseThrow();\n+        var issue = jiraProject.issue(issueId).orElseThrow();\n+        var issue2 = jiraProject.issue(issueId).orElseThrow();\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProjectTests.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}