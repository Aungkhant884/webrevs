{"files":[{"patch":"@@ -226,0 +226,3 @@\n+        \/\/ Must re-fetch PR after running the command, the command might have updated the PR\n+        var updatedPR = pr.repository().pullRequest(pr.id());\n+\n@@ -227,1 +230,1 @@\n-        return List.of(new CheckWorkItem(bot, pr, errorHandler));\n+        return List.of(new CheckWorkItem(bot, updatedPR, errorHandler));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandWorkItem.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -567,0 +567,48 @@\n+\n+    @Test\n+    void multipleIssuesInBody(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+\n+            var issueProject = credentials.getIssueProject();\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addAuthor(author.forge().currentUser().id());\n+            var prBot = PullRequestBot.newBuilder()\n+                                      .repo(integrator)\n+                                      .censusRepo(censusBuilder.build())\n+                                      .issueProject(issueProject)\n+                                      .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            var issue1 = credentials.createIssue(issueProject, \"Issue 1\");\n+            var issue2 = credentials.createIssue(issueProject, \"Issue 2\");\n+            var issue3 = credentials.createIssue(issueProject, \"Issue 3\");\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"Pull request title\",\n+                     List.of(\"\/issue add \" + issue1.id(),\n+                             \"\/issue add \" + issue2.id(),\n+                             \"\/issue add \" + issue3.id()));\n+\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The first issue should be the title\n+            assertTrue(pr.title().startsWith(issue1.id().split(\"-\")[1] + \": \"));\n+\n+            var comments = pr.comments();\n+            assertEquals(3, comments.size());\n+\n+            assertTrue(comments.get(0).body().contains(\"current title does not contain an issue reference\"));\n+            assertTrue(comments.get(1).body().contains(\"Adding additional issue to\"));\n+            assertTrue(comments.get(2).body().contains(\"Adding additional issue to\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -357,2 +357,2 @@\n-    public PullRequest createPullRequest(HostedRepository hostedRepository, String targetRef, String sourceRef, String title, boolean draft) {\n-        var pr = hostedRepository.createPullRequest(hostedRepository, targetRef, sourceRef, title, List.of(\"PR body\"), draft);\n+    public PullRequest createPullRequest(HostedRepository hostedRepository, String targetRef, String sourceRef, String title, List<String> body, boolean draft) {\n+        var pr = hostedRepository.createPullRequest(hostedRepository, targetRef, sourceRef, title, body, draft);\n@@ -363,0 +363,8 @@\n+    public PullRequest createPullRequest(HostedRepository hostedRepository, String targetRef, String sourceRef, String title, boolean draft) {\n+        return createPullRequest(hostedRepository, targetRef, sourceRef, title, List.of(\"PR body\"), draft);\n+    }\n+\n+    public PullRequest createPullRequest(HostedRepository hostedRepository, String targetRef, String sourceRef, String title, List<String> body) {\n+        return createPullRequest(hostedRepository, targetRef, sourceRef, title, body, false);\n+    }\n+\n@@ -364,1 +372,1 @@\n-        return createPullRequest(hostedRepository, targetRef, sourceRef, title, false);\n+        return createPullRequest(hostedRepository, targetRef, sourceRef, title, List.of(\"PR body\"), false);\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/HostCredentials.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}