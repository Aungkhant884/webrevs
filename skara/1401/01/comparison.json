{"files":[{"patch":"@@ -1068,0 +1068,1 @@\n+            var integrationBlockers = botSpecificIntegrationBlockers();\n@@ -1077,1 +1078,5 @@\n-                checkablePullRequest.executeChecks(localHash, censusInstance, visitor, additionalConfiguration);\n+                try {\n+                    checkablePullRequest.executeChecks(localHash, censusInstance, visitor, additionalConfiguration);\n+                } catch (BadCommitMessageException badCommitMessageException) {\n+                    integrationBlockers.add(badCommitMessageException.getMessage());\n+                }\n@@ -1084,1 +1089,0 @@\n-            var integrationBlockers = botSpecificIntegrationBlockers();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,6 @@\n+class BadCommitMessageException extends RuntimeException {\n+    BadCommitMessageException(String msg) {\n+        super(msg);\n+    }\n+}\n+\n@@ -152,1 +158,1 @@\n-        throw new IllegalStateException(\"Invalid reviewers \" + invalid);\n+        throw new BadCommitMessageException(\"Invalid reviewers \" + invalid);\n@@ -239,1 +245,1 @@\n-        throw new IllegalStateException(\"Incorrectly formatted commit message: \" + message);\n+        throw new BadCommitMessageException(\"Incorrectly formatted commit message: \" + message);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCheckIssueVisitor.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.regex.Pattern;\n@@ -34,0 +35,1 @@\n+    private static final Pattern INVALID_SUMMARY_PATTERN = Pattern.compile(\"(^(Co-authored-by:)(.*))|(^(Reviewed-by:)(.*))|(^(Backport-of:)(.*))|(^[0-9]+:(.*))\");\n@@ -53,7 +55,7 @@\n-            var action = currentSummary.isPresent() ? \"Updating existing\" : \"Setting\";\n-            if (summary.contains(\"\\n\")) {\n-                reply.println(action + \" summary to:\\n\" +\n-                                      \"\\n\" +\n-                                      \"```\\n\" +\n-                                      summary +\n-                                      \"\\n```\");\n+            if (!checkSummary(summary)) {\n+                reply.println(\"Invalid summary:\\n\" +\n+                        \"\\n\" +\n+                        \"```\\n\" +\n+                        summary +\n+                        \"\\n```\\n\" +\n+                        \"A summary line cannot start with any of the following: `<issue-id>:`, `Co-authored-by:`, `Reviewed-by:`, `Backport-of:`. See [JEP](https:\/\/openjdk.org\/jeps\/357) for details.\");\n@@ -61,1 +63,11 @@\n-                reply.println(action + \" summary to `\" + summary + \"`\");\n+                var action = currentSummary.isPresent() ? \"Updating existing\" : \"Setting\";\n+                if (summary.contains(\"\\n\")) {\n+                    reply.println(action + \" summary to:\\n\" +\n+                            \"\\n\" +\n+                            \"```\\n\" +\n+                            summary +\n+                            \"\\n```\");\n+                } else {\n+                    reply.println(action + \" summary to `\" + summary + \"`\");\n+                }\n+                reply.println(Summary.setSummaryMarker(summary));\n@@ -63,1 +75,0 @@\n-            reply.println(Summary.setSummaryMarker(summary));\n@@ -81,0 +92,10 @@\n+\n+    private boolean checkSummary(String summary) {\n+        String[] lines = summary.split(\"\\n\");\n+        for (String line : lines) {\n+            if (INVALID_SUMMARY_PATTERN.matcher(line).matches()) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SummaryCommand.java","additions":30,"deletions":9,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -389,0 +389,48 @@\n+\n+    @Test\n+    void invalidSummaryTest(TestInfo testInfo) throws IOException{\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addReviewer(integrator.forge().currentUser().id())\n+                    .addCommitter(author.forge().currentUser().id());\n+            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            pr.addComment(\"\/summary Co-authored-by: user1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr, \"Invalid summary\");\n+\n+            pr.addComment(\"\/summary first line\\n Reviewed-by: user1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr, \"Invalid summary\");\n+\n+            pr.addComment(\"\/summary Backport-of: 12434\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr, \"Invalid summary\");\n+\n+            pr.addComment(\"\/summary 1642: TITLE\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr, \"Invalid summary\");\n+\n+            pr.addComment(\"\/summary normal comment\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr,\"Setting summary to `normal comment`\");\n+\n+            System.out.println(pr.store().comments());\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/SummaryTests.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"modified"}]}