{"files":[{"patch":"@@ -40,1 +40,1 @@\n-    \/\/ Notable values for rib are 'team', 'master', and numbered builds\n+    \/\/ Notable values for \"Resolved in Build\" are 'team', 'master', and numbered builds\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/BuildCompare.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-                    log.severe(\"Cannot update RIB for issue \" + commitIssue.id()\n+                    log.severe(\"Cannot update \\\"Resolved in Build\\\" for issue \" + commitIssue.id()\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -431,1 +431,1 @@\n-                                        .put(\"buildname\", \"main\");\n+                                        .put(\"buildname\", \"master\");\n@@ -478,1 +478,1 @@\n-            assertEquals(\"main\", updatedIssue.properties().get(\"customfield_10006\").asString());\n+            assertEquals(\"master\", updatedIssue.properties().get(\"customfield_10006\").asString());\n@@ -589,1 +589,1 @@\n-            var authorEmailAddress = issueProject.issueTracker().currentUser().userName() + \"@otherjdk.org\";\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().email().orElse(issueProject.issueTracker().currentUser().userName() + \"@otherjdk.org\");\n@@ -747,1 +747,1 @@\n-            var jbsNotifierConfig = JSON.object().put(\"fixversions\", JSON.object().put(\"master\", \"12u14\"));\n+            var jbsNotifierConfig = JSON.object().put(\"fixversions\", JSON.object().put(\"master\", \"12.0.1\"));\n@@ -755,1 +755,1 @@\n-            issue.setProperty(\"fixVersions\", JSON.array().add(\"12-pool\").add(\"tbd13\").add(\"unknown\"));\n+            issue.setProperty(\"fixVersions\", JSON.array().add(\"12-pool\").add(\"tbd_major\").add(\"unknown\"));\n@@ -762,1 +762,1 @@\n-            assertEquals(Set.of(\"12u14\"), fixVersions(issue));\n+            assertEquals(Set.of(\"12.0.1\"), fixVersions(issue));\n@@ -778,1 +778,1 @@\n-            var jbsNotifierConfig = JSON.object().put(\"fixversions\", JSON.object().put(\"master\", \"12u14\"));\n+            var jbsNotifierConfig = JSON.object().put(\"fixversions\", JSON.object().put(\"master\", \"12.0.1\"));\n@@ -786,1 +786,1 @@\n-            issue.setProperty(\"fixVersions\", JSON.array().add(\"12-pool\").add(\"tbd13\").add(\"unknown\"));\n+            issue.setProperty(\"fixVersions\", JSON.array().add(\"12-pool\").add(\"tbd_major\").add(\"unknown\"));\n@@ -793,1 +793,1 @@\n-            assertEquals(Set.of(\"12u14\"), fixVersions(issue));\n+            assertEquals(Set.of(\"12.0.1\"), fixVersions(issue));\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+    private HostUser currentUser;\n+\n@@ -113,5 +115,8 @@\n-        var data = request.get(\"myself\").execute();\n-        var user = new HostUser(data.get(\"name\").asString(),\n-                                data.get(\"name\").asString(),\n-                                data.get(\"displayName\").asString());\n-        return user;\n+        if (currentUser == null) {\n+            var data = request.get(\"myself\").execute();\n+            currentUser = new HostUser(data.get(\"name\").asString(),\n+                                       data.get(\"name\").asString(),\n+                                       data.get(\"displayName\").asString(),\n+                                       data.get(\"emailAddress\").asString());\n+        }\n+        return currentUser;\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraHost.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -537,1 +537,2 @@\n-        var query = JSON.object().put(\"fields\", JSON.object().put(name, encoded.get()));\n+        var customEncoded = jiraProject.encodeCustomFields(name, encoded.get(), properties(), id());\n+        var query = JSON.object().put(\"fields\", JSON.object().put(name, customEncoded));\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssue.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    private JSONObject editMetaCache = null;\n@@ -70,0 +71,9 @@\n+    private JSONObject editMeta(String issueId) {\n+        if (editMetaCache == null) {\n+            editMetaCache = request.get(\"issue\/\" + issueId + \"\/editmeta\")\n+                                     .execute()\n+                                     .asObject();\n+        }\n+        return editMetaCache;\n+    }\n+\n@@ -186,1 +196,6 @@\n-            case \"customfield_10008\": \/\/ fall-through\n+            case \"customfield_10006\":\n+                return Optional.of(JSON.of(value.get(\"value\").asString()));\n+            case \"customfield_10008\":\n+                if (value.isString()) {\n+                    return Optional.of(value);\n+                } \/\/ fall-through\n@@ -222,1 +237,1 @@\n-    JSONValue encodeCustomFields(String name, JSONValue value, Map<String, JSONValue> allProperties) {\n+    JSONValue encodeCustomFields(String name, JSONValue value, Map<String, JSONValue> allProperties, String forIssue) {\n@@ -227,0 +242,8 @@\n+        if (name.equals(\"customfield_10006\")) {\n+            var editMeta = editMeta(forIssue);\n+            var valueToId = editMeta.get(\"fields\").get(name).get(\"allowedValues\").stream()\n+                                    .collect(Collectors.toMap(o -> o.get(\"value\").asString(),\n+                                                              o -> o.get(\"id\")));\n+            return JSON.object().put(\"id\", valueToId.get(value.asString()));\n+        }\n+\n@@ -255,0 +278,3 @@\n+        if (!field.contains(\"allowedValues\")) {\n+             return value.get(\"name\");\n+        }\n@@ -327,1 +353,2 @@\n-                                                                                       finalProperties)));\n+                                                                                       finalProperties,\n+                                                                                       null)));\n@@ -336,0 +363,5 @@\n+        var id = data.get(\"key\").asString();\n+        if (id.indexOf('-') < 0) {\n+            id = projectName.toUpperCase() + \"-\" + id;\n+        }\n+        var finalId = id;\n@@ -341,2 +373,2 @@\n-                                                                                           finalProperties)));\n-\n+                                                                                           finalProperties,\n+                                                                                           finalId)));\n@@ -344,4 +376,0 @@\n-            var id = data.get(\"key\").asString();\n-            if (id.indexOf('-') < 0) {\n-                id = projectName.toUpperCase() + \"-\" + id;\n-            }\n@@ -400,1 +428,5 @@\n-        if (user.asArray().size() != 1) {\n+        if (user.asArray().size() == 0) {\n+            log.info(\"No results returned for user query: \" + findBy);\n+            return Optional.empty();\n+        }\n+        if (user.asArray().size() > 1) {\n@@ -408,1 +440,1 @@\n-                                        data.get(\"emailAddresss\").asString()));\n+                                        data.get(\"emailAddress\").asString()));\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":43,"deletions":11,"binary":false,"changes":54,"status":"modified"}]}