{"files":[{"patch":"@@ -114,1 +114,4 @@\n-    Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail) throws IOException;\n+    default Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail) throws IOException {\n+        return tag(hash, tagName, message, authorName, authorEmail, null);\n+    }\n+    Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -764,1 +764,1 @@\n-    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail) throws IOException {\n+    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException {\n@@ -771,0 +771,4 @@\n+        if (date != null) {\n+            cmd = cmd.environ(\"GIT_AUTHOR_DATE\", date.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME));\n+            cmd = cmd.environ(\"GIT_COMMITTER_DATE\", date.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME));\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -663,1 +663,1 @@\n-    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail) throws IOException {\n+    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException {\n@@ -667,5 +667,11 @@\n-        try (var p = capture(\"hg\", \"tag\",\n-                             \"--message\", message,\n-                             \"--user\", user,\n-                             \"--rev\", hash.hex(),\n-                             name)) {\n+        var cmd = new ArrayList<String>();\n+        cmd.addAll(List.of(\"hg\", \"tag\",\n+                           \"--message\", message,\n+                           \"--user\", user,\n+                           \"--rev\", hash.hex()));\n+        if (date != null) {\n+            cmd.add(\"--date\");\n+            cmd.add(date.format(DateTimeFormatter.ISO_OFFSET_DATE_TIME));\n+        }\n+        cmd.add(name);\n+        try (var p = capture(cmd)) {\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2599,0 +2599,19 @@\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testTimestampOnTags(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            r.add(readme);\n+            var hash = r.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+            var date = ZonedDateTime.parse(\"2007-12-03T10:15:30+01:00\");\n+            var tag = r.tag(hash, \"1.0\", \"Added tag 1.0\", \"duke\", \"duke@openjdk.org\", date);\n+            var annotated = r.annotate(tag);\n+            assertTrue(annotated.isPresent());\n+            assertEquals(date, annotated.get().date());\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"}]}