{"files":[{"patch":"@@ -42,1 +42,1 @@\n-    private final static Pattern futureUpdatePattern = Pattern.compile(\"([1-9][0-9]*u)(-([a-z0-9]+))?$\");\n+    private final static Pattern futureUpdatePattern = Pattern.compile(\"((openjdk)?[1-9][0-9]*u)(-([a-z0-9]+))?$\");\n@@ -68,2 +68,2 @@\n-                \/\/ Group 3 is the opt field\n-                if (matcher.group(3) != null) {\n+                \/\/ Group 4 is the opt field\n+                if (matcher.group(4) != null) {\n@@ -71,1 +71,1 @@\n-                    finalComponents.add(matcher.group(3));\n+                    finalComponents.add(matcher.group(4));\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -808,0 +808,11 @@\n+\n+    @Test\n+    void openjdk7u(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"17\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"openjdk7u\", \"7u321\", \"openjdk8u302\", \"openjdk8u312\");\n+            backports.assertLabeled(\"openjdk8u312\");\n+        }\n+    }\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+        assertEquals(List.of(\"openjdk7u\"), from(\"openjdk7u\").components());\n@@ -115,0 +116,1 @@\n+        assertEquals(Optional.empty(), JdkVersion.parse(\"foobar7u\"));\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/JdkVersionTests.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}