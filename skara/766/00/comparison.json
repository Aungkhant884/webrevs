{"files":[{"patch":"@@ -36,1 +36,2 @@\n-    private static final Pattern argumentPattern = Pattern.compile(\"(?:(add|remove)\\\\s+)?((?:[A-Za-z0-9_-]+[\\\\s,]*)+)\");\n+    private static final Pattern argumentPattern = Pattern.compile(\"(?:(add|remove)\\\\s+)?((?:[A-Za-z0-9_@.-]+[\\\\s,]*)+)\");\n+    private static final Pattern ignoredSuffixes = Pattern.compile(\"^(.*)(?:-dev(?:@openjdk.java.net)?)$\");\n@@ -66,1 +67,7 @@\n-        for (var label : labels) {\n+        for (int i = 0; i < labels.length; ++i) {\n+            var label = labels[i];\n+            var ignoredSuffixMatcher = ignoredSuffixes.matcher(label);\n+            if (ignoredSuffixMatcher.matches()) {\n+                label = ignoredSuffixMatcher.group(1);\n+                labels[i] = label;\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelCommand.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -310,0 +310,50 @@\n+\n+    @Test\n+    void stripSuffix(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addReviewer(integrator.forge().currentUser().id())\n+                                           .addCommitter(author.forge().currentUser().id());\n+            var labelConfiguration = LabelConfiguration.builder()\n+                                                       .addMatchers(\"1\", List.of(Pattern.compile(\"cpp$\")))\n+                                                       .addMatchers(\"2\", List.of(Pattern.compile(\"hpp$\")))\n+                                                       .addGroup(\"group\", List.of(\"1\", \"2\"))\n+                                                       .addExtra(\"extra\")\n+                                                       .build();\n+            var prBot = PullRequestBot.newBuilder()\n+                                      .repo(integrator)\n+                                      .censusRepo(censusBuilder.build())\n+                                      .labelConfiguration(labelConfiguration)\n+                                      .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"123: This is a pull request\");\n+\n+            \/\/ Add a label with -dev suffix\n+            pr.addComment(\"\/label add 1-dev\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a success message\n+            assertLastCommentContains(pr,\"The `1` label was successfully added.\");\n+\n+            \/\/ One more\n+            pr.addComment(\"\/cc group-dev@openjdk.java.net\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a success message\n+            assertLastCommentContains(pr,\"The `group` label was successfully added.\");\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"}]}