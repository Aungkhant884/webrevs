{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.util.Optional;\n@@ -110,0 +111,13 @@\n+    public static Optional<Forge> from(URI uri) {\n+        return from(uri, null);\n+    }\n+\n+    public static Optional<Forge> from(URI uri, Credential credentials) {\n+        var name = gitConfig(\"forge.name\");\n+        if (name != null) {\n+            var forge = credentials == null ? Forge.from(name, uri) : Forge.from(name, uri, credentials);\n+            return Optional.of(forge);\n+        }\n+        return credentials == null ? Forge.from(uri) : Forge.from(uri, credentials);\n+    }\n+\n@@ -119,2 +133,2 @@\n-                Forge.from(forgeURI) :\n-                Forge.from(forgeURI, new Credential(credentials.username(), credentials.password()));\n+                from(forgeURI) :\n+                from(forgeURI, new Credential(credentials.username(), credentials.password()));\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/ForgeUtils.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-                var forge = Forge.from(forgeURI, new Credential(credentials.username(), credentials.password()));\n+                var forge = ForgeUtils.from(forgeURI, new Credential(credentials.username(), credentials.password()));\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitBackport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-        var host = Forge.from(webURI, new Credential(credentials.username(), credentials.password()));\n+        var host = ForgeUtils.from(webURI, new Credential(credentials.username(), credentials.password()));\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitCommitComments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -292,5 +292,5 @@\n-                    upstreamURI = Forge.from(uri)\n-                                       .flatMap(f -> f.repository(uri.getPath().substring(1)))\n-                                       .flatMap(r -> r.parent())\n-                                       .map(p -> p.webUrl())\n-                                       .orElse(null);\n+                    upstreamURI = ForgeUtils.from(uri)\n+                                            .flatMap(f -> f.repository(uri.getPath().substring(1)))\n+                                            .flatMap(r -> r.parent())\n+                                            .map(p -> p.webUrl())\n+                                            .orElse(null);\n@@ -327,5 +327,5 @@\n-                    forkURI = Forge.from(uri, new Credential(credentials.username(), credentials.password()))\n-                                   .flatMap(f -> f.repository(uri.getPath().substring(1)))\n-                                   .map(r -> r.fork())\n-                                   .map(fork -> fork.webUrl())\n-                                   .orElse(null);\n+                    forkURI = ForgeUtils.from(uri, new Credential(credentials.username(), credentials.password()))\n+                                        .flatMap(f -> f.repository(uri.getPath().substring(1)))\n+                                        .map(r -> r.fork())\n+                                        .map(fork -> fork.webUrl())\n+                                        .orElse(null);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitDefpath.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-        var host = Forge.from(webURI, new Credential(credentials.username(), credentials.password()));\n+        var host = ForgeUtils.from(webURI, new Credential(credentials.username(), credentials.password()));\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitFork.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,5 +159,5 @@\n-                            from = Forge.from(uri)\n-                                        .flatMap(f -> f.repository(uri.getPath().substring(1)))\n-                                        .flatMap(r -> r.parent())\n-                                        .map(p -> p.webUrl().toString())\n-                                        .orElse(null);\n+                            from = ForgeUtils.from(uri)\n+                                             .flatMap(f -> f.repository(uri.getPath().substring(1)))\n+                                             .flatMap(r -> r.parent())\n+                                             .map(p -> p.webUrl().toString())\n+                                             .orElse(null);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitSync.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,0 +49,8 @@\n+    static Forge from(String name, URI uri, Credential credential) {\n+        return from(name, uri, credential, null);\n+    }\n+\n+    static Forge from(String name, URI uri) {\n+        return from(name, uri, null);\n+    }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/Forge.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}