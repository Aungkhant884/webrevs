{"files":[{"patch":"@@ -401,1 +401,1 @@\n-            var webrevGenerator = bot.webrevStorage().generator(pr, localRepo, webrevPath);\n+            var webrevGenerator = bot.webrevStorage().generator(pr, localRepo, webrevPath, hostedRepositoryPool);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -287,1 +287,2 @@\n-    private URI createAndArchive(PullRequest pr, Repository localRepository, Path scratchPath, Diff diff, Hash base, Hash head, String identifier) {\n+    private URI createAndArchive(PullRequest pr, Repository localRepository, Path scratchPath, Diff diff, Hash base, Hash head, String identifier,\n+                                 Repository jsonLocalStorage, Repository htmlLocalStorage) {\n@@ -298,2 +299,0 @@\n-                var jsonLocalStorage = Repository.materialize(scratchPath, jsonStorage.authenticatedUrl(),\n-                                                              \"+\" + storageRef + \":mlbridge_webrevs\");\n@@ -311,2 +310,0 @@\n-                var htmlLocalStorage = Repository.materialize(scratchPath, htmlStorage.authenticatedUrl(),\n-                                                              \"+\" + storageRef + \":mlbridge_webrevs\");\n@@ -331,0 +328,1 @@\n+\n@@ -334,1 +332,4 @@\n-    WebrevGenerator generator(PullRequest pr, Repository localRepository, Path scratchPath) {\n+    WebrevGenerator generator(PullRequest pr, Repository localRepository, Path scratchPath, HostedRepositoryPool hostedRepositoryPool) throws IOException {\n+        var jsonLocalStorage = jsonStorage == null ? null : hostedRepositoryPool.checkout(jsonStorage, storageRef, scratchPath);\n+        var htmlLocalStorage = htmlStorage == null ? null : hostedRepositoryPool.checkout(htmlStorage, storageRef, scratchPath);\n+\n@@ -338,1 +339,1 @@\n-                var uri = createAndArchive(pr, localRepository, scratchPath, null, base, head, identifier);\n+                var uri = createAndArchive(pr, localRepository, scratchPath, null, base, head, identifier, jsonLocalStorage, htmlLocalStorage);\n@@ -344,1 +345,1 @@\n-                var uri = createAndArchive(pr, localRepository, scratchPath, diff, diff.from(), diff.to(), identifier);\n+                var uri = createAndArchive(pr, localRepository, scratchPath, diff, diff.from(), diff.to(), identifier, jsonLocalStorage, htmlLocalStorage);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/WebrevStorage.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.skara.forge.HostedRepositoryPool;\n@@ -73,1 +74,2 @@\n-            var generator = storage.generator(pr, prRepo, scratchFolder);\n+            var seedPath = tempFolder.path().resolve(\"seed\");\n+            var generator = storage.generator(pr, prRepo, scratchFolder, new HostedRepositoryPool(seedPath));\n@@ -126,1 +128,2 @@\n-            var generator = storage.generator(pr, prRepo, scratchFolder);\n+            var seedPath = tempFolder.path().resolve(\"seed\");\n+            var generator = storage.generator(pr, prRepo, scratchFolder, new HostedRepositoryPool(seedPath));\n@@ -210,1 +213,2 @@\n-            var generator = storage.generator(pr, prRepo, scratchFolder);\n+            var seedPath = tempFolder.path().resolve(\"seed\");\n+            var generator = storage.generator(pr, prRepo, scratchFolder, new HostedRepositoryPool(seedPath));\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/WebrevStorageTests.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+        private static Set<String> healthySet = new HashSet<>();\n@@ -150,1 +151,1 @@\n-                if (!localRepoInstance.isHealthy()) {\n+                if (!isHealthy(localRepoInstance, path)) {\n@@ -167,0 +168,12 @@\n+\n+        private boolean isHealthy(Repository localRepoInstance, Path path) throws IOException {\n+            if (healthySet.contains(path.toString())) {\n+                return true;\n+            } else {\n+                boolean isHealthy = localRepoInstance.isHealthy();\n+                if (isHealthy) {\n+                    healthySet.add(path.toString());\n+                }\n+                return isHealthy;\n+            }\n+        }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepositoryPool.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}