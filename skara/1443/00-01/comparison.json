{"files":[{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.common;\n+\n+import org.openjdk.skara.host.HostUser;\n+import org.openjdk.skara.issuetracker.Comment;\n+import org.openjdk.skara.vcs.openjdk.Issue;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.*;\n+import java.util.regex.*;\n+import java.util.stream.Collectors;\n+\n+public class SolvesTracker {\n+    private final static String solvesMarker = \"<!-- solves: '%s' '%s' -->\";\n+    private final static Pattern markerPattern = Pattern.compile(\"<!-- solves: '(.*?)' '(.*?)' -->\");\n+\n+    public static String setSolvesMarker(Issue issue) {\n+        var encodedDescription = Base64.getEncoder().encodeToString(issue.description().getBytes(StandardCharsets.UTF_8));\n+        return String.format(solvesMarker, issue.shortId(), encodedDescription);\n+    }\n+\n+    public static String removeSolvesMarker(Issue issue) {\n+        return String.format(solvesMarker, issue.shortId(), \"\");\n+    }\n+\n+    public static List<Issue> currentSolved(HostUser botUser, List<Comment> comments) {\n+        var solvesActions = comments.stream()\n+                .filter(comment -> comment.author().equals(botUser))\n+                .flatMap(comment -> comment.body().lines())\n+                .map(markerPattern::matcher)\n+                .filter(Matcher::find)\n+                .collect(Collectors.toList());\n+        var current = new LinkedHashMap<String, Issue>();\n+        for (var action : solvesActions) {\n+            var key = action.group(1);\n+            if (action.group(2).equals(\"\")) {\n+                current.remove(key);\n+            } else {\n+                var decodedDescription = new String(Base64.getDecoder().decode(action.group(2)), StandardCharsets.UTF_8);\n+                var issue = new Issue(key, decodedDescription);\n+                current.put(key, issue);\n+            }\n+        }\n+\n+        return new ArrayList<>(current.values());\n+    }\n+}\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/SolvesTracker.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -46,1 +46,0 @@\n-    implementation project(\":bots:pr\")\n","filename":"bots\/csr\/build.gradle","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-    requires org.openjdk.skara.bots.pr;\n","filename":"bots\/csr\/src\/main\/java\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import org.openjdk.skara.bots.pr.SolvesTracker;\n+import org.openjdk.skara.bots.common.SolvesTracker;\n@@ -96,2 +96,2 @@\n-                (statusMessage.contains(\"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\") ||\n-                        statusMessage.contains(\"- [x] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+                (statusMessage.contains(\"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\") ||\n+                        statusMessage.contains(\"- [x] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -102,1 +102,1 @@\n-        return hasCsrIssue(statusMessage, csr) && statusMessage.contains(\"- [x] Change requires a CSR request (\" + csr.id() + \") to be approved\");\n+        return hasCsrIssue(statusMessage, csr) && statusMessage.contains(\"- [x] Change requires CSR request \" + csr.id() + \" to be approved\");\n@@ -150,0 +150,2 @@\n+        boolean needToAddUpdateMarker = false;\n+        boolean existingCSR = false;\n@@ -154,1 +156,1 @@\n-                \/\/ One issue could not be found in JBS, so the csr label cannot be removed until the problem is solved\n+                \/\/ An issue could not be found, so the csr label cannot be removed\n@@ -157,2 +159,2 @@\n-                log.info(\"No issue found in JBS related with this issue \" + issueId + \"for \" + describe(pr));\n-                \/\/ allCSRApproved is false now, so we could break now\n+                log.info(issueId + \" for \" + describe(pr) + \" not found\");\n+                \/\/ allCSRApproved is now false, so there is no point in continuing\n@@ -168,0 +170,1 @@\n+            existingCSR = true;\n@@ -175,1 +178,1 @@\n-                addUpdateMarker(pr);\n+                needToAddUpdateMarker = true;\n@@ -187,1 +190,1 @@\n-                \/\/ allCSRApproved is false now, so we could break now\n+                \/\/ allCSRApproved is now false, so there is no point in continuing\n@@ -200,1 +203,1 @@\n-                \/\/ allCSRApproved is false now, so we could break now\n+                \/\/ allCSRApproved is now false, so there is no point in continuing\n@@ -212,1 +215,1 @@\n-                \/\/ allCSRApproved is false now, so we could break now\n+                \/\/ allCSRApproved is now false, so there is no point in continuing\n@@ -240,1 +243,1 @@\n-                addUpdateMarker(pr);\n+                needToAddUpdateMarker = true;\n@@ -243,1 +246,4 @@\n-        if (allCSRApproved && pr.labelNames().contains(CSR_LABEL)) {\n+        if (needToAddUpdateMarker) {\n+            addUpdateMarker(pr);\n+        }\n+        if (allCSRApproved && existingCSR && pr.labelNames().contains(CSR_LABEL)) {\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/PullRequestWorkItem.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-import org.openjdk.skara.bots.pr.SolvesTracker;\n+import org.openjdk.skara.bots.common.SolvesTracker;\n@@ -470,1 +470,1 @@\n-                    + \"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\");\n+                    + \"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\");\n@@ -486,1 +486,1 @@\n-                    + \"- [x] Change requires a CSR request (\" + csr.id() + \") to be approved\");\n+                    + \"- [x] Change requires CSR request \" + csr.id() + \" to be approved\");\n@@ -494,1 +494,1 @@\n-                    + \"- [ ] Change requires a CSR request (\" +  csr.id() + \") to be approved\" + csrUpdateMarker);\n+                    + \"- [ ] Change requires CSR request \" +  csr.id() + \" to be approved\" + csrUpdateMarker);\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.bots.common.SolvesTracker;\n@@ -58,3 +59,3 @@\n-    private static void csrCreateReply(PullRequest pr,  PrintWriter writer) {\n-        writer.println(\"@\" + pr.author().username() + \" please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) \" +\n-                \"request for any issue associated with this pr with the correct fix version \" +\n+    private static void linkReply(PullRequest pr, Issue issue, PrintWriter writer) {\n+        writer.println(\"@\" + pr.author().username() + \" please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for issue \" +\n+                \"[\" + issue.id() + \"](\" + issue.webUrl() + \") with the correct fix version. \" +\n@@ -136,2 +137,2 @@\n-                            jbsIssue.id() + \"](\" + jbsIssue.webUrl() + \") of this pull request. Please withdraw the CSR [\"\n-                            + csrIssue.id() + \"](\" + csrIssue.webUrl() + \") and then use the command `\/csr unneeded` again.\");\n+                            jbsIssue.id() + \"](\" + jbsIssue.webUrl() + \"). Please withdraw the CSR [\" + csrIssue.id() +\n+                            \"](\" + csrIssue.webUrl() + \") and then use the command `\/csr unneeded` again.\");\n@@ -142,1 +143,1 @@\n-            \/\/ All the issue associated with this pr don't have csr issue or the csr issue has already been withdrawn,\n+            \/\/ All the issues associated with this pr either don't have csr issue or the csr issue has already been withdrawn,\n@@ -193,1 +194,1 @@\n-            \/\/ Could find a csr issue for one of the issues associated with this pr\n+            \/\/ Found a csr issue for one of the issues associated with this pr\n@@ -219,1 +220,1 @@\n-        \/\/ All the issues associated with pr don't have csr issue or the csr issue has already been withdrawn\n+        \/\/ All the issues associated with pr either don't have csr issue or the csr issue has already been withdrawn\n@@ -221,1 +222,3 @@\n-        csrCreateReply(pr, reply);\n+        if (issues.size() == 1) {\n+            linkReply(pr, jbsMainIssueOpt.get(), reply);\n+        }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.bots.common.SolvesTracker;\n@@ -268,1 +269,1 @@\n-            ret.put(\"Change requires a CSR request (need to be created) to be approved\", false);\n+            ret.put(\"Change requires a CSR request (needs to be created) to be approved\", false);\n@@ -272,1 +273,1 @@\n-                ret.put(\"Change requires a CSR request (\" + csrIssue.id() + \") to be approved\", false);\n+                ret.put(\"Change requires CSR request \" + csrIssue.id() + \" to be approved\", false);\n@@ -277,1 +278,1 @@\n-                ret.put(\"Change requires a CSR request (\" + csrIssue.id() + \") to be approved\", false);\n+                ret.put(\"Change requires CSR request \" + csrIssue.id() + \" to be approved\", false);\n@@ -282,1 +283,1 @@\n-                ret.put(\"Change requires a CSR request (\" + csrIssue.id() + \") to be approved\", false);\n+                ret.put(\"Change requires CSR request \" + csrIssue.id() + \" to be approved\", false);\n@@ -286,1 +287,1 @@\n-                ret.put(\"Change requires a CSR request (\" + csrIssue.id() + \") to be approved\", false);\n+                ret.put(\"Change requires CSR request \" + csrIssue.id() + \" to be approved\", false);\n@@ -289,1 +290,1 @@\n-            ret.put(\"Change requires a CSR request (\" + csrIssue.id() + \") to be approved\", true);\n+            ret.put(\"Change requires CSR request \" + csrIssue.id() + \" to be approved\", true);\n@@ -661,1 +662,1 @@\n-                                if(isWithdrawnCSR(iss.get())){\n+                                if (isWithdrawnCSR(iss.get())) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.skara.bots.common.SolvesTracker;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.bots.common.SolvesTracker;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.bots.common.SolvesTracker;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IssueCommand.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.bots.pr;\n-\n-import org.openjdk.skara.host.HostUser;\n-import org.openjdk.skara.issuetracker.Comment;\n-import org.openjdk.skara.vcs.openjdk.Issue;\n-\n-import java.nio.charset.StandardCharsets;\n-import java.util.*;\n-import java.util.regex.*;\n-import java.util.stream.Collectors;\n-\n-public class SolvesTracker {\n-    private final static String solvesMarker = \"<!-- solves: '%s' '%s' -->\";\n-    private final static Pattern markerPattern = Pattern.compile(\"<!-- solves: '(.*?)' '(.*?)' -->\");\n-\n-    public static String setSolvesMarker(Issue issue) {\n-        var encodedDescription = Base64.getEncoder().encodeToString(issue.description().getBytes(StandardCharsets.UTF_8));\n-        return String.format(solvesMarker, issue.shortId(), encodedDescription);\n-    }\n-\n-    static String removeSolvesMarker(Issue issue) {\n-        return String.format(solvesMarker, issue.shortId(), \"\");\n-    }\n-\n-    public static List<Issue> currentSolved(HostUser botUser, List<Comment> comments) {\n-        var solvesActions = comments.stream()\n-                                    .filter(comment -> comment.author().equals(botUser))\n-                                    .flatMap(comment -> comment.body().lines())\n-                                    .map(markerPattern::matcher)\n-                                    .filter(Matcher::find)\n-                                    .collect(Collectors.toList());\n-        var current = new LinkedHashMap<String, Issue>();\n-        for (var action : solvesActions) {\n-            var key = action.group(1);\n-            if (action.group(2).equals(\"\")) {\n-                current.remove(key);\n-            } else {\n-                var decodedDescription = new String(Base64.getDecoder().decode(action.group(2)), StandardCharsets.UTF_8);\n-                var issue = new Issue(key, decodedDescription);\n-                current.put(key, issue);\n-            }\n-        }\n-\n-        return new ArrayList<>(current.values());\n-    }\n-}\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SolvesTracker.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -82,1 +82,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -93,1 +93,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -105,1 +105,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -152,1 +152,1 @@\n-            assertTrue(pr.store().body().contains(\"- [x] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [x] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -194,1 +194,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -233,1 +233,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -242,1 +242,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -254,1 +254,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -263,1 +263,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -272,1 +272,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -311,1 +311,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -354,1 +354,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -396,1 +396,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -407,1 +407,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -454,1 +454,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -462,1 +462,1 @@\n-                    issue.id() + \"](\" + issue.webUrl() + \") of this pull request. Please withdraw the CSR [\"\n+                    issue.id() + \"](\" + issue.webUrl() + \"). Please withdraw the CSR [\"\n@@ -467,1 +467,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -482,1 +482,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -528,1 +528,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -536,1 +536,1 @@\n-                    issue.id() + \"](\" + issue.webUrl() + \") of this pull request. Please withdraw the CSR [\"\n+                    issue.id() + \"](\" + issue.webUrl() + \"). Please withdraw the CSR [\"\n@@ -541,1 +541,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -556,1 +556,1 @@\n-            assertFalse(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertFalse(pr.store().body().contains(\"- [ ] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -592,1 +592,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -632,1 +632,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -652,1 +652,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -685,1 +685,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -696,1 +696,1 @@\n-            assertTrue(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -756,1 +756,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -761,1 +761,1 @@\n-            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for any issue associated with this pr\");\n+            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for issue\");\n@@ -767,1 +767,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -785,1 +785,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -790,1 +790,1 @@\n-            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for any issue associated with this pr\");\n+            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for issue\");\n@@ -796,1 +796,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -814,1 +814,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -819,1 +819,1 @@\n-            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for any issue associated with this pr\");\n+            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for issue\");\n@@ -825,1 +825,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -835,1 +835,1 @@\n-            assertTrue(pr.store().body().contains(\"- [x] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [x] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -842,1 +842,1 @@\n-            assertTrue(pr.store().body().contains(\"- [x] Change requires a CSR request (\" + csr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [x] Change requires CSR request \" + csr.id() + \" to be approved\"));\n@@ -845,1 +845,1 @@\n-                    issue.id() + \"](\" + issue.webUrl() + \") of this pull request. Please withdraw the CSR [\"\n+                    issue.id() + \"](\" + issue.webUrl() + \"). Please withdraw the CSR [\"\n@@ -860,1 +860,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -865,1 +865,1 @@\n-            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for any issue associated with this pr\");\n+            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for issue\");\n@@ -871,1 +871,1 @@\n-            assertFalse(pr.store().body().contains(\"Change requires a CSR request (need to be created) to be approved\"));\n+            assertFalse(pr.store().body().contains(\"Change requires a CSR request (needs to be created) to be approved\"));\n@@ -885,1 +885,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + backportCsr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + backportCsr.id() + \" to be approved\"));\n@@ -893,1 +893,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + backportCsr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + backportCsr.id() + \" to be approved\"));\n@@ -896,1 +896,1 @@\n-                            issue.id() + \"](\" + issue.webUrl() + \") of this pull request. Please withdraw the CSR [\"\n+                            issue.id() + \"](\" + issue.webUrl() + \"). Please withdraw the CSR [\"\n@@ -916,1 +916,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + backportCsr.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + backportCsr.id() + \" to be approved\"));\n@@ -926,1 +926,1 @@\n-            assertFalse(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + backportCsr.id() + \") to be approved\"));\n+            assertFalse(pr.store().body().contains(\"- [ ] Change requires CSR request \" + backportCsr.id() + \" to be approved\"));\n@@ -934,1 +934,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -939,1 +939,1 @@\n-            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for any issue associated with this pr\");\n+            assertLastCommentContains(pr, \"please create a [CSR](https:\/\/wiki.openjdk.org\/display\/csr\/Main) request for issue\");\n@@ -994,1 +994,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n@@ -1007,1 +1007,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (\" + csr2.id() + \") to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires CSR request \" + csr2.id() + \" to be approved\"));\n@@ -1014,1 +1014,1 @@\n-                    issue2.id() + \"](\" + issue2.webUrl() + \") of this pull request. Please withdraw the CSR [\"\n+                    issue2.id() + \"](\" + issue2.webUrl() + \"). Please withdraw the CSR [\"\n@@ -1034,1 +1034,1 @@\n-            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (need to be created) to be approved\"));\n+            assertTrue(pr.store().body().contains(\"- [ ] Change requires a CSR request (needs to be created) to be approved\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":53,"deletions":53,"binary":false,"changes":106,"status":"modified"}]}