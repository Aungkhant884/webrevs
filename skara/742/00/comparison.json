{"files":[{"patch":"@@ -48,0 +48,1 @@\n+    private Hash targetHash = null;\n@@ -260,1 +261,6 @@\n-        return json.get(\"base\").get(\"ref\").asString();\n+        var targetRef = json.get(\"base\").get(\"ref\").asString();\n+        if (targetHash == null) {\n+            \/\/ Read this value before returning, to ensure that future fetches of this ref contains the hash\n+            targetHash = repository.branchHash(targetRef);\n+        }\n+        return targetRef;\n@@ -265,1 +271,3 @@\n-        return repository.branchHash(targetRef());\n+        \/\/ Ensure that the field is populated\n+        targetRef();\n+        return targetHash;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+    private Hash targetHash = null;\n+\n@@ -281,1 +283,6 @@\n-        return json.get(\"target_branch\").asString();\n+        var targetRef = json.get(\"target_branch\").asString();\n+        if (targetHash == null) {\n+            \/\/ Read this value before returning, to ensure that future fetches of this ref contains the hash\n+            targetHash = repository.branchHash(targetRef);\n+        }\n+        return targetRef;\n@@ -286,1 +293,3 @@\n-        return repository.branchHash(targetRef());\n+        \/\/ Ensure that the field is populated\n+        targetRef();\n+        return targetHash;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}