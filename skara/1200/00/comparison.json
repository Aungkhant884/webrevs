{"files":[{"patch":"@@ -47,1 +47,2 @@\n-    static final Pattern ISSUE_ID_PATTERN = Pattern.compile(\"^(?:(?<prefix>[A-Za-z][A-Za-z0-9]+)-)?(?<id>[0-9]+)(?::\\\\s+(?<title>.+))?$\");\n+    static final Pattern ISSUE_ID_PATTERN = Pattern.compile(\"^(?:(?<prefix>[A-Za-z][A-Za-z0-9]+)-)?(?<id>[0-9]+)\"\n+            + \"(?::(?<space>[\\\\s\\u00A0\\u2007\\u202F]+)(?<title>.+))?$\");\n@@ -164,0 +165,1 @@\n+            var space = getMatchGroup(m, \"space\");\n@@ -200,0 +202,7 @@\n+\n+            if (!space.equals(\" \")) {\n+                \/\/ If the space separating the issue and the title is not a single space, rewrite it\n+                var newPrTitle = id + \": \" + title;\n+                pr.setTitle(newPrTitle);\n+                return true;\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1721,0 +1721,40 @@\n+    @Test\n+    void removeNonBreakableSpaceInTitle(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var issues = credentials.getIssueProject();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .build();\n+\n+            var bug = issues.createIssue(\"My first bug\", List.of(\"A bug\"), Map.of());\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var bugHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(bugHash, author.url(), \"bug\", true);\n+            var bugPR = credentials.createPullRequest(author, \"master\", \"bug\",\n+                    bug.id() + \":\\u00A0\" + bug.title(), true);\n+\n+            \/\/ Check the status (should expand title)\n+            TestBotRunner.runPeriodicItems(checkBot);\n+\n+            \/\/ Verify that the title is expanded\n+            bugPR = author.pullRequest(bugPR.id());\n+            var numericId = bug.id().split(\"-\")[1];\n+            assertEquals(numericId + \": \" + bug.title(), bugPR.title());\n+        }\n+    }\n+\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"modified"}]}