{"files":[{"patch":"@@ -700,1 +700,1 @@\n-        throw new RuntimeException(\"Not implemented yet\");\n+        return mergeBase(ancestor, descendant).equals(ancestor);\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -558,0 +558,28 @@\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testIsAncestor(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = Repository.init(dir.path(), vcs);\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            r.add(readme);\n+            var hash1 = r.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            Files.write(readme, List.of(\"Another line\"), WRITE, APPEND);\n+            r.add(readme);\n+            var hash2 = r.commit(\"Modify README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            assertTrue(r.isAncestor(hash1, hash2));\n+\n+            r.checkout(hash1, false);\n+            Files.write(readme, List.of(\"A conflicting line\"), WRITE, APPEND);\n+            r.add(readme);\n+            var hash3 = r.commit(\"Branching README modification\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            assertTrue(r.isAncestor(hash1, hash3));\n+            assertFalse(r.isAncestor(hash2, hash3));\n+        }\n+    }\n+\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"}]}