{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Optional;\n@@ -32,63 +33,65 @@\n-    public static void main(String[] args) throws Exception {\n-        var commands = List.of(\n-                    Default.name(\"help\")\n-                           .helptext(\"show help text\")\n-                           .main(GitPrHelp::main),\n-                    Command.name(\"list\")\n-                           .helptext(\"list open pull requests\")\n-                           .main(GitPrList::main),\n-                    Command.name(\"fetch\")\n-                           .helptext(\"fetch a pull request\")\n-                           .main(GitPrFetch::main),\n-                    Command.name(\"show\")\n-                           .helptext(\"show a pull request\")\n-                           .main(GitPrShow::main),\n-                    Command.name(\"checkout\")\n-                           .helptext(\"checkout a pull request\")\n-                           .main(GitPrCheckout::main),\n-                    Command.name(\"apply\")\n-                           .helptext(\"apply a pull request\")\n-                           .main(GitPrApply::main),\n-                    Command.name(\"integrate\")\n-                           .helptext(\"integrate a pull request\")\n-                           .main(GitPrIntegrate::main),\n-                    Command.name(\"approve\")\n-                           .helptext(\"approve a pull request\")\n-                           .main(GitPrApprove::main),\n-                    Command.name(\"create\")\n-                           .helptext(\"create a pull request\")\n-                           .main(GitPrCreate::main),\n-                    Command.name(\"close\")\n-                           .helptext(\"close a pull request\")\n-                           .main(GitPrClose::main),\n-                    Command.name(\"set\")\n-                           .helptext(\"set properties of a pull request\")\n-                           .main(GitPrSet::main),\n-                    Command.name(\"sponsor\")\n-                           .helptext(\"sponsor a pull request\")\n-                           .main(GitPrSet::main),\n-                    Command.name(\"test\")\n-                           .helptext(\"test a pull request\")\n-                           .main(GitPrTest::main),\n-                    Command.name(\"info\")\n-                           .helptext(\"show status of a pull request\")\n-                           .main(GitPrInfo::main),\n-                    Command.name(\"issue\")\n-                           .helptext(\"add, remove or create issues\")\n-                           .main(GitPrIssue::main),\n-                    Command.name(\"reviewer\")\n-                           .helptext(\"add or remove reviewers\")\n-                           .main(GitPrReviewer::main),\n-                    Command.name(\"summary\")\n-                           .helptext(\"add a summary to the commit message for the pull request\")\n-                           .main(GitPrSummary::main),\n-                    Command.name(\"cc\")\n-                           .helptext(\"add one or more labels\")\n-                           .main(GitPrCC::main),\n-                    Command.name(\"csr\")\n-                           .helptext(\"require CSR for the pull request\")\n-                           .main(GitPrCSR::main),\n-                    Command.name(\"contributor\")\n-                           .helptext(\"add or remove contributors\")\n-                           .main(GitPrContributor::main)\n-        );\n+    private static final List<Command> commands = List.of(\n+            Default.name(\"help\")\n+                    .helptext(\"show help text\")\n+                    .main(GitPrHelp::main),\n+            Command.name(\"list\")\n+                    .helptext(\"list open pull requests\")\n+                    .main(GitPrList::main),\n+            Command.name(\"fetch\")\n+                    .helptext(\"fetch a pull request\")\n+                    .main(GitPrFetch::main),\n+            Command.name(\"show\")\n+                    .helptext(\"show a pull request\")\n+                    .main(GitPrShow::main),\n+            Command.name(\"checkout\")\n+                    .helptext(\"checkout a pull request\")\n+                    .main(GitPrCheckout::main),\n+            Command.name(\"apply\")\n+                    .helptext(\"apply a pull request\")\n+                    .main(GitPrApply::main),\n+            Command.name(\"integrate\")\n+                    .helptext(\"integrate a pull request\")\n+                    .main(GitPrIntegrate::main),\n+            Command.name(\"approve\")\n+                    .helptext(\"approve a pull request\")\n+                    .main(GitPrApprove::main),\n+            Command.name(\"create\")\n+                    .helptext(\"create a pull request\")\n+                    .main(GitPrCreate::main),\n+            Command.name(\"close\")\n+                    .helptext(\"close a pull request\")\n+                    .main(GitPrClose::main),\n+            Command.name(\"set\")\n+                    .helptext(\"set properties of a pull request\")\n+                    .main(GitPrSet::main),\n+            Command.name(\"sponsor\")\n+                    .helptext(\"sponsor a pull request\")\n+                    .main(GitPrSet::main),\n+            Command.name(\"test\")\n+                    .helptext(\"test a pull request\")\n+                    .main(GitPrTest::main),\n+            Command.name(\"info\")\n+                    .helptext(\"show status of a pull request\")\n+                    .main(GitPrInfo::main)\n+            Command.name(\"issue\")\n+                    .helptext(\"add, remove or create issues\")\n+                    .main(GitPrIssue::main),\n+            Command.name(\"reviewer\")\n+                    .helptext(\"add or remove reviewers\")\n+                    .main(GitPrReviewer::main),\n+            Command.name(\"summary\")\n+                    .helptext(\"add a summary to the commit message for the pull request\")\n+                    .main(GitPrSummary::main),\n+            Command.name(\"cc\")\n+                    .helptext(\"add one or more labels\")\n+                    .main(GitPrCC::main),\n+            Command.name(\"csr\")\n+                    .helptext(\"require CSR for the pull request\")\n+                    .main(GitPrCSR::main),\n+            Command.name(\"contributor\")\n+                    .helptext(\"add or remove contributors\")\n+                    .main(GitPrContributor::main)\n+    );\n+\n+    public static String getHelpForCommand(String command) {\n+        Optional<Command> foundCommand = commands.stream().filter(c -> c.name().equals(command)).findFirst();\n@@ -96,0 +99,8 @@\n+        if (foundCommand.isPresent()) {\n+            return foundCommand.get().helpText();\n+        } else {\n+            return \"\";\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitPr.java","additions":74,"deletions":63,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    static List<Flag> flags = List.of(\n+    static final List<Flag> flags = List.of(\n@@ -63,1 +63,1 @@\n-    static List<Input> inputs = List.of(\n+    static final List<Input> inputs = List.of(\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrApply.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.cli.GitPr;\n@@ -133,0 +134,1 @@\n+               System.out.println(\"pr \" + command + \" -- \" + GitPr.getHelpForCommand(command));\n@@ -147,1 +149,1 @@\n-        System.out.println(\"The following commands are available:\");\n+        System.out.println(\"The following sub-commands are available:\");\n@@ -149,1 +151,2 @@\n-            System.out.println(\"- \" + command);\n+            System.out.println();\n+            System.out.println(\"- \" + command + \" -- \" + GitPr.getHelpForCommand(command));\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrHelp.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}