{"files":[{"patch":"@@ -548,0 +548,8 @@\n+        if (labels.stream().anyMatch(label -> workItem.bot.twoReviewersLabels().contains(label))) {\n+            message.append(\"\\n\\n\");\n+            message.append(\":mag: One or more changes in this pull request modifies files in areas of \");\n+            message.append(\"the source code that often require two reviewers. Please consider if this is \");\n+            message.append(\"the case for this pull request, and if so, await a second reviewer to approve \");\n+            message.append(\"this pull request before you integrate it.\");\n+        }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    private final Set<String> twoReviewersLabels;\n@@ -64,4 +65,4 @@\n-                   Map<String, Pattern> readyComments, IssueProject issueProject, boolean ignoreStaleReviews,\n-                   Set<String> allowedIssueTypes, Pattern allowedTargetBranches, Path seedStorage,\n-                   HostedRepository confOverrideRepo, String confOverrideName, String confOverrideRef,\n-                   String censusLink) {\n+                   Set<String> twoReviewersLabels, Map<String, Pattern> readyComments, IssueProject issueProject,\n+                   boolean ignoreStaleReviews, Set<String> allowedIssueTypes, Pattern allowedTargetBranches,\n+                   Path seedStorage, HostedRepository confOverrideRepo, String confOverrideName,\n+                   String confOverrideRef, String censusLink) {\n@@ -75,0 +76,1 @@\n+        this.twoReviewersLabels = twoReviewersLabels;\n@@ -175,0 +177,4 @@\n+    Set<String> twoReviewersLabels() {\n+        return twoReviewersLabels;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    private Set<String> twoReviewersLabels = Set.of();\n@@ -91,0 +92,5 @@\n+    public PullRequestBotBuilder twoReviewersLabels(Set<String> twoReviewersLabels) {\n+        this.twoReviewersLabels = twoReviewersLabels;\n+        return this;\n+    }\n+\n@@ -143,1 +149,1 @@\n-                                  blockingCheckLabels, readyLabels, readyComments, issueProject,\n+                                  blockingCheckLabels, readyLabels, twoReviewersLabels, readyComments, issueProject,\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -100,0 +100,7 @@\n+            if (repo.value().contains(\"two-reviewers\")) {\n+                var labels = repo.value().get(\"two-reviewers\")\n+                                         .stream()\n+                                         .map(label -> label.asString())\n+                                         .collect(Collectors.toSet());\n+                botBuilder.twoReviewersLabels(labels);\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -359,0 +359,54 @@\n+\n+    @Test\n+    void twoReviewersLabels(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addReviewer(integrator.forge().currentUser().id())\n+                                           .addCommitter(author.forge().currentUser().id());\n+            var labelConfiguration = LabelConfigurationJson.builder()\n+                                                       .addMatchers(\"1\", List.of(Pattern.compile(\"cpp$\")))\n+                                                       .addMatchers(\"2\", List.of(Pattern.compile(\"hpp$\")))\n+                                                       .addGroup(\"group\", List.of(\"1\", \"2\"))\n+                                                       .addExtra(\"extra\")\n+                                                       .build();\n+            var prBot = PullRequestBot.newBuilder()\n+                                      .repo(integrator)\n+                                      .censusRepo(censusBuilder.build())\n+                                      .twoReviewersLabels(Set.of(\"1\"))\n+                                      .labelConfiguration(labelConfiguration)\n+                                      .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"123: This is a pull request\");\n+\n+            \/\/ Add a label with -dev suffix\n+            pr.addComment(\"\/label add 1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a success message\n+            assertLastCommentContains(pr,\"The `1` label was successfully added.\");\n+\n+            \/\/ Review the PR\n+            var prAsReviewer = integrator.pullRequest(pr.id());\n+            prAsReviewer.addReview(Review.Verdict.APPROVED, \"Looks good!\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a integration message\n+            assertLastCommentContains(pr,\"This change now passes all *automated* pre-integration checks\");\n+            assertLastCommentContains(pr,\":mag: One or more changes in this pull request modifies files\");\n+            assertLastCommentContains(pr,\"in areas of the source code that often require two reviewers.\");\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"modified"}]}