{"files":[{"patch":"@@ -289,0 +289,13 @@\n+\n+\n+    @Test\n+    void testBackportCleanIgnoreCopyRight() {\n+        var gitHubRepo = githubHost.repository(settings.getProperty(\"github.repository\")).orElseThrow();\n+\n+        var pr = gitHubRepo.pullRequest(settings.getProperty(\"github.prId\"));\n+        var commit = pr.repository().forge().search(new Hash(settings.getProperty(\"github.commitHash\")), true);\n+        var backportDiff = commit.get().parentDiffs().get(0);\n+        var prDiff = pr.diff();\n+        var isClean = DiffComparator.areFuzzyEqual(backportDiff, prDiff);\n+        assertTrue(isClean);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRestApiTests.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import org.openjdk.skara.vcs.DiffComparator;\n@@ -38,1 +39,0 @@\n-import java.util.Set;\n@@ -270,1 +270,0 @@\n-        System.out.println(gitLabMergeRequest.webUrl());\n@@ -307,0 +306,18 @@\n+\n+    @Test\n+    void testBackportCleanIgnoreCopyRight() throws IOException {\n+        var settings = ManualTestSettings.loadManualTestSettings();\n+        var username = settings.getProperty(\"gitlab.user\");\n+        var token = settings.getProperty(\"gitlab.pat\");\n+        var credential = new Credential(username, token);\n+        var uri = URIBuilder.base(settings.getProperty(\"gitlab.uri\")).build();\n+        var gitLabHost = new GitLabHost(\"gitlab\", uri, false, credential, List.of(settings.getProperty(\"gitlab.group\").split(\",\")));\n+        var gitLabRepo = gitLabHost.repository(settings.getProperty(\"gitlab.repository\")).orElseThrow();\n+\n+        var pr = gitLabRepo.pullRequest(settings.getProperty(\"gitlab.prId\"));\n+        var commit = pr.repository().forge().search(new Hash(settings.getProperty(\"gitlab.commitHash\")), true);\n+        var backportDiff = commit.get().parentDiffs().get(0);\n+        var prDiff = pr.diff();\n+        var isClean = DiffComparator.areFuzzyEqual(backportDiff, prDiff);\n+        assertTrue(isClean);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRestApiTest.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.regex.Pattern;\n@@ -66,2 +67,14 @@\n-        var aHunks = a.asTextualPatch().hunks();\n-        var bHunks = b.asTextualPatch().hunks();\n+        Pattern copyRightPattern = Pattern.compile(\"\"\"\n+                -(.)*Copyright \\\\(c\\\\) (?:\\\\d|\\\\s|,)* Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\n+                \\\\+(.)*Copyright \\\\(c\\\\) (?:\\\\d|\\\\s|,)* Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\n+                \"\"\");\n+\n+        var aHunks = a.asTextualPatch().hunks()\n+                .stream()\n+                .filter(hunk -> !copyRightPattern.matcher(hunk.toString()).find())\n+                .toList();\n+        var bHunks = b.asTextualPatch().hunks()\n+                .stream()\n+                .filter(hunk -> !copyRightPattern.matcher(hunk.toString()).find())\n+                .toList();\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/DiffComparator.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"}]}