{"files":[{"patch":"@@ -99,1 +99,1 @@\n-            fromRepo.pull(\"origin\", branch.name());\n+            fromRepo.pull(\"origin\", branch.name(), true);\n","filename":"bots\/checkout\/src\/main\/java\/org\/openjdk\/skara\/bots\/checkout\/CheckoutBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,3 +69,16 @@\n-    void pull() throws IOException;\n-    void pull(String remote) throws IOException;\n-    void pull(String remote, String refspec) throws IOException;\n+\n+    void pull(boolean includeTags) throws IOException;\n+    default void pull() throws IOException {\n+        pull(false);\n+    }\n+\n+    void pull(String remote, boolean includeTags) throws IOException;\n+    default void pull(String remote) throws IOException {\n+        pull(remote, false);\n+    }\n+\n+    void pull(String remote, String refspec, boolean includeTags) throws IOException;\n+    default void pull(String remote, String refspec) throws IOException {\n+        pull(remote, refspec, false);\n+    }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1314,2 +1314,2 @@\n-    public void pull() throws IOException {\n-        pull(null, null);\n+    public void pull(boolean includeTags) throws IOException {\n+        pull(null, null, includeTags);\n@@ -1319,2 +1319,2 @@\n-    public void pull(String remote) throws IOException {\n-        pull(remote, null);\n+    public void pull(String remote, boolean includeTags) throws IOException {\n+        pull(remote, null, includeTags);\n@@ -1325,1 +1325,1 @@\n-    public void pull(String remote, String refspec) throws IOException {\n+    public void pull(String remote, String refspec, boolean includeTags) throws IOException {\n@@ -1330,0 +1330,5 @@\n+        if (includeTags) {\n+            cmd.add(\"--tags\");\n+        } else {\n+            cmd.add(\"--no-tags\");\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1254,2 +1254,2 @@\n-    public void pull() throws IOException {\n-        pull(null, null);\n+    public void pull(boolean includeTags) throws IOException {\n+        pull(null, null, includeTags);\n@@ -1259,2 +1259,2 @@\n-    public void pull(String remote) throws IOException {\n-        pull(remote, null);\n+    public void pull(String remote, boolean includeTags) throws IOException {\n+        pull(remote, null, includeTags);\n@@ -1264,1 +1264,2 @@\n-    public void pull(String remote, String refspec) throws IOException {\n+    public void pull(String remote, String refspec, boolean includeTags) throws IOException {\n+        \/\/ ignore includeTags, hg always pulls tags\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2693,0 +2693,36 @@\n+\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testPull(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var upstream = Repository.init(dir.path(), vcs);\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            upstream.add(readme);\n+            var head = upstream.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+            upstream.tag(head, \"1.0\", \"Added tag 1.0\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            try (var dir2 = new TemporaryDirectory()) {\n+                var downstream = Repository.init(dir2.path(), vcs);\n+\n+                 \/\/ note: forcing unix path separators for URI\n+                var upstreamURI = URI.create(\"file:\/\/\/\" + dir.toString().replace('\\\\', '\/'));\n+                if (vcs == VCS.GIT) {\n+                    downstream.addRemote(\"origin\", upstreamURI.toString());\n+                    downstream.pull(\"origin\", \"master\");\n+                    assertEquals(1, downstream.commitMetadata().size());\n+                    assertEquals(head, downstream.commitMetadata().get(0).hash());\n+                    assertEquals(List.of(), downstream.tags());\n+                    downstream.pull(\"origin\", \"master\", true);\n+                    assertEquals(List.of(new Tag(\"1.0\")), downstream.tags());\n+                } else {\n+                    downstream.addRemote(\"default\", upstreamURI.toString());\n+                    downstream.pull(\"default\");\n+                    assertEquals(2, downstream.commitMetadata().size());\n+                    assertEquals(head, downstream.commitMetadata().get(1).hash());\n+                    assertEquals(List.of(new Tag(\"tip\"), new Tag(\"1.0\")), downstream.tags());\n+                }\n+            }\n+        }\n+    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}