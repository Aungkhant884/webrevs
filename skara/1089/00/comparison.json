{"files":[{"patch":"@@ -72,1 +72,1 @@\n-            if (pr.labels().contains(CSR_LABEL)) {\n+            if (pr.labelNames().contains(CSR_LABEL)) {\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-            assertFalse(pr.labels().contains(\"csr\"));\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n@@ -103,1 +103,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -134,1 +134,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -172,1 +172,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -325,1 +325,1 @@\n-                        if (pr.labels().contains(\"ready\") && !pr.labels().contains(\"sponsor\")) {\n+                        if (pr.labelNames().contains(\"ready\") && !pr.labelNames().contains(\"sponsor\")) {\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-            assertTrue(pr.labels().contains(\"failed-auto-merge\"));\n+            assertTrue(pr.labelNames().contains(\"failed-auto-merge\"));\n@@ -640,1 +640,1 @@\n-            assertTrue(pr.labels().contains(\"failed-auto-merge\"));\n+            assertTrue(pr.labelNames().contains(\"failed-auto-merge\"));\n","filename":"bots\/merge\/src\/test\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBotTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-        var labels = new HashSet<>(pr.labels());\n+        var labels = new HashSet<>(pr.labelNames());\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-            if (pr.labels().contains(\"integrated\")) {\n+            if (pr.labelNames().contains(\"integrated\")) {\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ReviewArchive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        var labels = new HashSet<>(pr.labels());\n+        var labels = new HashSet<>(pr.labelNames());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/NotifyBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        if (pr.labels().contains(\"integrated\")) {\n+        if (pr.labelNames().contains(\"integrated\")) {\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/PullRequestWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-        var labels = issue.labels();\n+        var labels = issue.labelNames();\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/JbsBackport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -968,1 +968,1 @@\n-            assertEquals(0, backport.labels().size());\n+            assertEquals(0, backport.labelNames().size());\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        var labels = pr.labels();\n+        var labels = pr.labelNames();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -477,1 +477,1 @@\n-                                if (!pr.labels().contains(\"backport\")) {\n+                                if (!pr.labelNames().contains(\"backport\")) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-        var labels = new HashSet<>(pr.labels());\n+        var labels = new HashSet<>(pr.labelNames());\n@@ -313,1 +313,1 @@\n-        if (pr.labels().contains(\"auto\") && pr.labels().contains(\"ready\") && !pr.labels().contains(\"sponsor\")) {\n+        if (pr.labelNames().contains(\"auto\") && pr.labelNames().contains(\"ready\") && !pr.labelNames().contains(\"sponsor\")) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        if (!pr.labels().contains(\"backport\")) {\n+        if (!pr.labelNames().contains(\"backport\")) {\n@@ -69,1 +69,1 @@\n-        if (pr.labels().contains(\"clean\")) {\n+        if (pr.labelNames().contains(\"clean\")) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-                if (pr.labels().contains(\"auto\")) {\n+                if (pr.labelNames().contains(\"auto\")) {\n@@ -119,1 +119,1 @@\n-        var labels = new HashSet<>(pr.labels());\n+        var labels = new HashSet<>(pr.labelNames());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        var currentLabels = new HashSet<>(pr.labels());\n+        var currentLabels = new HashSet<>(pr.labelNames());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-        var existingAllowed = new HashSet<>(pr.labels());\n+        var existingAllowed = new HashSet<>(pr.labelNames());\n@@ -152,1 +152,1 @@\n-            var currentLabels = pr.labels().stream()\n+            var currentLabels = pr.labelNames().stream()\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        var labels = new HashSet<>(pr.labels());\n+        var labels = new HashSet<>(pr.labelNames());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-        if (!pr.labels().contains(\"integrated\")) {\n+        if (!pr.labelNames().contains(\"integrated\")) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCommandWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        var labels = new HashSet<>(pr.labels());\n+        var labels = new HashSet<>(pr.labelNames());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -198,1 +198,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -302,1 +302,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -382,1 +382,1 @@\n-            assertFalse(pr.labels().contains(\"backport\"));\n+            assertFalse(pr.labelNames().contains(\"backport\"));\n@@ -446,1 +446,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -449,1 +449,1 @@\n-            assertTrue(pr.labels().contains(\"clean\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n@@ -517,1 +517,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -520,1 +520,1 @@\n-            assertTrue(pr.labels().contains(\"clean\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n@@ -588,1 +588,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -591,1 +591,1 @@\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n@@ -662,1 +662,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -665,1 +665,1 @@\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n@@ -725,4 +725,4 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertTrue(pr.labels().contains(\"clean\"));\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -822,5 +822,5 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertTrue(pr.labels().contains(\"clean\"));\n-            assertFalse(pr.labels().contains(\"sponsor\"));\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -834,1 +834,1 @@\n-            assertTrue(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"sponsor\"));\n@@ -931,1 +931,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -990,1 +990,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -1049,1 +1049,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -1108,1 +1108,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -1206,1 +1206,1 @@\n-            assertFalse(pr.labels().contains(\"backport\"));\n+            assertFalse(pr.labelNames().contains(\"backport\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportTests.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -84,1 +84,1 @@\n-            assertFalse(pr.labels().contains(\"csr\"));\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n@@ -94,1 +94,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -138,1 +138,1 @@\n-            assertFalse(pr.labels().contains(\"csr\"));\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n@@ -178,1 +178,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -215,1 +215,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -222,1 +222,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -259,1 +259,1 @@\n-            assertFalse(pr.labels().contains(\"csr\"));\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n@@ -300,1 +300,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -340,1 +340,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -349,1 +349,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -470,1 +470,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -508,1 +508,1 @@\n-            assertTrue(prAsAuthor.labels().contains(\"ready\"));\n+            assertTrue(prAsAuthor.labelNames().contains(\"ready\"));\n@@ -521,1 +521,1 @@\n-            assertTrue(pr.labels().contains(\"csr\"));\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -525,1 +525,1 @@\n-            assertFalse(prAsAuthor.labels().contains(\"ready\"));\n+            assertFalse(prAsAuthor.labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -80,2 +80,2 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -97,1 +97,1 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -129,1 +129,1 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n@@ -145,1 +145,1 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n@@ -165,1 +165,1 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -336,2 +336,2 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -353,2 +353,2 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -373,2 +373,2 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -531,1 +531,1 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -549,2 +549,2 @@\n-            assertTrue(pr.labels().contains(\"merge-conflict\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"merge-conflict\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -578,2 +578,2 @@\n-            assertFalse(pr.labels().contains(\"merge-conflict\"));\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"merge-conflict\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -617,3 +617,3 @@\n-            assertTrue(pr.labels().contains(\"block\"));\n-            assertFalse(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"block\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -626,2 +626,2 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -676,2 +676,2 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -684,2 +684,2 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -743,2 +743,2 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -754,2 +754,2 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -794,1 +794,1 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n@@ -801,1 +801,1 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n@@ -835,1 +835,1 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n@@ -843,1 +843,1 @@\n-            assertTrue(pr.labels().contains(\"rfr\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n@@ -1260,2 +1260,2 @@\n-            assertFalse(pr.labels().contains(\"rfr\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -1410,1 +1410,1 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -1431,2 +1431,2 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n-            assertTrue(pr.labels().contains(\"rfr\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"rfr\"));\n@@ -1720,1 +1720,1 @@\n-            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.labelNames()));\n@@ -1768,1 +1768,1 @@\n-            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\", \"ready\"), new HashSet<>(pr.labelNames()));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":41,"deletions":41,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -67,2 +67,2 @@\n-            assertFalse(pr.labels().contains(\"backport\"));\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n@@ -73,2 +73,2 @@\n-            assertFalse(pr.labels().contains(\"backport\"));\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"backport\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n@@ -134,1 +134,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -137,1 +137,1 @@\n-            assertTrue(pr.labels().contains(\"clean\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n@@ -142,1 +142,1 @@\n-            assertTrue(pr.labels().contains(\"clean\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n@@ -209,1 +209,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -212,1 +212,1 @@\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n@@ -217,1 +217,1 @@\n-            assertTrue(pr.labels().contains(\"clean\"));\n+            assertTrue(pr.labelNames().contains(\"clean\"));\n@@ -286,1 +286,1 @@\n-            assertTrue(pr.labels().contains(\"backport\"));\n+            assertTrue(pr.labelNames().contains(\"backport\"));\n@@ -289,1 +289,1 @@\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n@@ -295,1 +295,1 @@\n-            assertFalse(pr.labels().contains(\"clean\"));\n+            assertFalse(pr.labelNames().contains(\"clean\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommandTests.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-            assertTrue(pr.labels().contains(\"integrated\"));\n+            assertTrue(pr.labelNames().contains(\"integrated\"));\n@@ -105,1 +105,1 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -815,1 +815,1 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -876,1 +876,1 @@\n-            assertTrue(pr.labels().contains(\"ready\"));\n+            assertTrue(pr.labelNames().contains(\"ready\"));\n@@ -913,1 +913,1 @@\n-            assertTrue(pr.labels().contains(\"auto\"));\n+            assertTrue(pr.labelNames().contains(\"auto\"));\n@@ -938,1 +938,1 @@\n-            assertTrue(pr.labels().contains(\"integrated\"));\n+            assertTrue(pr.labelNames().contains(\"integrated\"));\n@@ -941,1 +941,1 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -979,1 +979,1 @@\n-            assertTrue(pr.labels().contains(\"auto\"));\n+            assertTrue(pr.labelNames().contains(\"auto\"));\n@@ -1004,1 +1004,1 @@\n-            assertTrue(pr.labels().contains(\"integrated\"));\n+            assertTrue(pr.labelNames().contains(\"integrated\"));\n@@ -1007,1 +1007,1 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n@@ -1044,1 +1044,1 @@\n-            assertTrue(pr.labels().contains(\"auto\"));\n+            assertTrue(pr.labelNames().contains(\"auto\"));\n@@ -1058,1 +1058,1 @@\n-            assertFalse(pr.labels().contains(\"auto\"));\n+            assertFalse(pr.labelNames().contains(\"auto\"));\n@@ -1095,1 +1095,1 @@\n-            assertTrue(pr.labels().contains(\"integrated\"));\n+            assertTrue(pr.labelNames().contains(\"integrated\"));\n@@ -1098,1 +1098,1 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateTests.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.labelNames()));\n@@ -182,1 +182,1 @@\n-            assertEquals(Set.of(\"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\"), new HashSet<>(pr.labelNames()));\n@@ -188,1 +188,1 @@\n-            assertEquals(Set.of(\"group\", \"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"group\", \"rfr\"), new HashSet<>(pr.labelNames()));\n@@ -229,1 +229,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labelNames()));\n@@ -241,1 +241,1 @@\n-            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"1\", \"rfr\"), new HashSet<>(pr.labelNames()));\n@@ -248,1 +248,1 @@\n-            assertEquals(Set.of(\"1\", \"2\", \"group\", \"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"1\", \"2\", \"group\", \"rfr\"), new HashSet<>(pr.labelNames()));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-            assertEquals(Set.of(\"rfr\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\"), new HashSet<>(pr.labelNames()));\n@@ -122,1 +122,1 @@\n-            assertEquals(Set.of(\"rfr\", \"test1\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\", \"test1\"), new HashSet<>(pr.labelNames()));\n@@ -170,1 +170,1 @@\n-            assertEquals(Set.of(\"rfr\", \"test2\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\", \"test2\"), new HashSet<>(pr.labelNames()));\n@@ -217,1 +217,1 @@\n-            assertEquals(Set.of(\"rfr\", \"test2\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\", \"test2\"), new HashSet<>(pr.labelNames()));\n@@ -264,1 +264,1 @@\n-            assertEquals(Set.of(\"rfr\", \"test1\", \"test42\"), new HashSet<>(pr.labels()));\n+            assertEquals(Set.of(\"rfr\", \"test1\", \"test42\"), new HashSet<>(pr.labelNames()));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerTests.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-            assertTrue(followUpPr.labels().contains(\"ready\"));\n+            assertTrue(followUpPr.labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PreIntegrateTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-            assertFalse(pr.labels().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-            assertFalse(updatedPr.labels().contains(\"ready\"));\n+            assertFalse(updatedPr.labelNames().contains(\"ready\"));\n@@ -116,1 +116,1 @@\n-            assertTrue(updatedPr.labels().contains(\"ready\"));\n+            assertTrue(updatedPr.labelNames().contains(\"ready\"));\n@@ -126,1 +126,1 @@\n-            assertFalse(updatedPr.labels().contains(\"ready\"));\n+            assertFalse(updatedPr.labelNames().contains(\"ready\"));\n@@ -136,1 +136,1 @@\n-            assertTrue(updatedPr.labels().contains(\"ready\"));\n+            assertTrue(updatedPr.labelNames().contains(\"ready\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -117,3 +117,3 @@\n-            assertTrue(pr.labels().contains(\"integrated\"));\n-            assertFalse(pr.labels().contains(\"ready\"));\n-            assertFalse(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"integrated\"));\n+            assertFalse(pr.labelNames().contains(\"ready\"));\n+            assertFalse(pr.labelNames().contains(\"sponsor\"));\n@@ -279,1 +279,1 @@\n-            assertTrue(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"sponsor\"));\n@@ -297,1 +297,1 @@\n-            assertFalse(pr.labels().contains(\"sponsor\"));\n+            assertFalse(pr.labelNames().contains(\"sponsor\"));\n@@ -313,1 +313,1 @@\n-            assertTrue(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"sponsor\"));\n@@ -318,1 +318,1 @@\n-            assertFalse(pr.labels().contains(\"sponsor\"));\n+            assertFalse(pr.labelNames().contains(\"sponsor\"));\n@@ -515,1 +515,1 @@\n-            assertTrue(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"sponsor\"));\n@@ -522,1 +522,1 @@\n-            assertFalse(pr.labels().contains(\"sponsor\"));\n+            assertFalse(pr.labelNames().contains(\"sponsor\"));\n@@ -535,1 +535,1 @@\n-            assertTrue(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"sponsor\"));\n@@ -540,1 +540,1 @@\n-            assertFalse(pr.labels().contains(\"sponsor\"));\n+            assertFalse(pr.labelNames().contains(\"sponsor\"));\n@@ -754,1 +754,1 @@\n-            assertTrue(pr.labels().contains(\"sponsor\"));\n+            assertTrue(pr.labelNames().contains(\"sponsor\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorTests.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-                              .filter(i -> !i.labels().contains(\"hgupdate-sync-ignore\"))\n+                              .filter(i -> !i.labelNames().contains(\"hgupdate-sync-ignore\"))\n@@ -77,1 +77,1 @@\n-                if (i.labels().contains(\"hgupdate-sync\")) {\n+                if (i.labelNames().contains(\"hgupdate-sync\")) {\n@@ -84,1 +84,1 @@\n-                if (i.labels().contains(\"hgupdate-sync\")) {\n+                if (i.labelNames().contains(\"hgupdate-sync\")) {\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotUpdateLabelWorkItem.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -79,1 +79,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n@@ -87,1 +87,1 @@\n-            assertEquals(List.of(), issue3.labels());\n+            assertEquals(List.of(), issue3.labelNames());\n@@ -95,4 +95,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -102,4 +102,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -139,4 +139,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -149,4 +149,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -169,1 +169,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -177,1 +177,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n@@ -185,1 +185,1 @@\n-            assertEquals(List.of(), issue3.labels());\n+            assertEquals(List.of(), issue3.labelNames());\n@@ -193,4 +193,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -201,4 +201,4 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labels());\n-            assertEquals(List.of(), issue4.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labelNames());\n+            assertEquals(List.of(), issue4.labelNames());\n@@ -213,1 +213,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue5.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue5.labelNames());\n@@ -218,5 +218,5 @@\n-            assertEquals(List.of(), issue1.labels());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labels());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labels());\n-            assertEquals(List.of(), issue4.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue5.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labelNames());\n+            assertEquals(List.of(), issue4.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue5.labelNames());\n@@ -229,5 +229,5 @@\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue1.labels());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labels());\n-            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labels());\n-            assertEquals(List.of(), issue4.labels());\n-            assertEquals(List.of(), issue5.labels());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue2.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync-ignore\"), issue3.labelNames());\n+            assertEquals(List.of(), issue4.labelNames());\n+            assertEquals(List.of(), issue5.labelNames());\n@@ -250,1 +250,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -258,1 +258,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -266,1 +266,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n@@ -275,4 +275,4 @@\n-            assertEquals(List.of(), issue1.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue2.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n-            assertEquals(List.of(), issue4.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n+            assertEquals(List.of(), issue4.labelNames());\n@@ -283,4 +283,4 @@\n-            assertEquals(List.of(), issue1.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(), issue4.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(), issue4.labelNames());\n@@ -303,1 +303,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -311,1 +311,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -319,1 +319,1 @@\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n@@ -328,4 +328,4 @@\n-            assertEquals(List.of(), issue1.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue2.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue2.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -336,4 +336,4 @@\n-            assertEquals(List.of(), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n@@ -356,1 +356,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -365,1 +365,1 @@\n-            assertEquals(List.of(), issue1.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n@@ -373,1 +373,1 @@\n-            assertEquals(List.of(), issue3.labels());\n+            assertEquals(List.of(), issue3.labelNames());\n@@ -381,4 +381,4 @@\n-            assertEquals(List.of(), issue1.labels());\n-            assertEquals(List.of(), issue2.labels());\n-            assertEquals(List.of(), issue3.labels());\n-            assertEquals(List.of(\"hgupdate-sync\"), issue4.labels());\n+            assertEquals(List.of(), issue1.labelNames());\n+            assertEquals(List.of(), issue2.labelNames());\n+            assertEquals(List.of(), issue3.labelNames());\n+            assertEquals(List.of(\"hgupdate-sync\"), issue4.labelNames());\n","filename":"bots\/synclabel\/src\/test\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotTests.java","additions":70,"deletions":70,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-            if (pr.labels().contains(TEST_REQUEST_LABEL)) {\n+            if (pr.labelNames().contains(TEST_REQUEST_LABEL)) {\n@@ -366,1 +366,1 @@\n-            if (pr.labels().contains(TEST_REQUEST_LABEL)) {\n+            if (pr.labelNames().contains(TEST_REQUEST_LABEL)) {\n","filename":"bots\/tester\/src\/main\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.stream.Collectors;\n@@ -226,2 +227,2 @@\n-    public List<String> labels() {\n-        return new ArrayList<String>(labels);\n+    public List<Label> labels() {\n+        return labels.stream().map(s -> new Label(s)).collect(Collectors.toList());\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryPullRequest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1190,1 +1190,1 @@\n-            assertEquals(List.of(\"test-request\"), pr.labels());\n+            assertEquals(List.of(\"test-request\"), pr.labelNames());\n@@ -1273,1 +1273,1 @@\n-            assertEquals(List.of(\"test-request\"), pr.labels());\n+            assertEquals(List.of(\"test-request\"), pr.labelNames());\n@@ -1298,1 +1298,1 @@\n-            assertEquals(List.of(), pr.labels());\n+            assertEquals(List.of(), pr.labelNames());\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/TestWorkItemTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-                if (i.labels().contains(\"hgupdate-sync\")) {\n+                if (i.labelNames().contains(\"hgupdate-sync\")) {\n@@ -101,1 +101,1 @@\n-                if (i.labels().contains(\"hgupdate-sync\")) {\n+                if (i.labelNames().contains(\"hgupdate-sync\")) {\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/debug\/IssueRedecorate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-            System.out.println(String.join(\", \", pr.labels()));\n+            System.out.println(String.join(\", \", pr.labelNames()));\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-            var prLabels = new HashSet<>(pr.labels());\n+            var prLabels = pr.labelNames();\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrList.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        var labels = pr.labels();\n+        var labels = pr.labelNames();\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private List<String> labels = null;\n+    private List<Label> labels = null;\n@@ -58,1 +58,1 @@\n-                     .map(v -> v.get(\"name\").asString())\n+                     .map(v -> new Label(v.get(\"name\").asString(), v.get(\"description\").asString()))\n@@ -555,4 +555,7 @@\n-        request.put(\"issues\/\" + json.get(\"number\").toString() + \"\/labels\")\n-               .body(query)\n-               .execute();\n-        this.labels = labels;\n+        var newLabels = request.put(\"issues\/\" + json.get(\"number\").toString() + \"\/labels\")\n+                               .body(query)\n+                               .execute()\n+                               .stream()\n+                               .map(o -> new Label(o.get(\"name\").asString(), o.get(\"description\").asString()))\n+                               .collect(Collectors.toList());\n+        this.labels = newLabels;\n@@ -562,1 +565,1 @@\n-    public List<String> labels() {\n+    public List<Label> labels() {\n@@ -566,1 +569,1 @@\n-                            .map(obj -> obj.get(\"name\").asString())\n+                            .map(obj -> new Label(obj.get(\"name\").asString(), obj.get(\"description\").asString()))\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubPullRequest.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -47,1 +47,2 @@\n-    private List<String> labels;\n+    private List<Label> labels;\n+    private Map<String, Label> labelNameToLabel;\n@@ -55,4 +56,8 @@\n-        labels = json.get(\"labels\").stream()\n-                            .map(JSONValue::asString)\n-                            .sorted()\n-                            .collect(Collectors.toList());\n+        labelNameToLabel = repository.labels()\n+                                     .stream()\n+                                     .collect(Collectors.toMap(l -> l.name(), l -> l));\n+        labels = json.get(\"labels\")\n+                     .stream()\n+                     .map(s -> labelNameToLabel.get(s.asString()))\n+                     .sorted()\n+                     .collect(Collectors.toList());\n@@ -654,1 +659,1 @@\n-        this.labels = labels;\n+        this.labels = labels.stream().map(l -> labelNameToLabel.get(l)).collect(Collectors.toList());\n@@ -658,1 +663,1 @@\n-    public List<String> labels() {\n+    public List<Label> labels() {\n@@ -661,4 +666,5 @@\n-            labels = currentJson.get(\"labels\").stream()\n-                              .map(JSONValue::asString)\n-                              .sorted()\n-                              .collect(Collectors.toList());\n+            labels = currentJson.get(\"labels\")\n+                                .stream()\n+                                .map(s -> labelNameToLabel.get(s.asString()))\n+                                .sorted()\n+                                .collect(Collectors.toList());\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.skara.issuetracker.Label;\n@@ -583,0 +584,8 @@\n+\n+    List<Label> labels() {\n+        return request.get(\"labels\")\n+                      .execute()\n+                      .stream()\n+                      .map(o -> new Label(o.get(\"name\").asString(), o.get(\"description\").asString()))\n+                      .collect(Collectors.toList());\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.stream.Collectors;\n@@ -147,0 +148,3 @@\n+    default void removeLabel(Label label) {\n+        removeLabel(label.name());\n+    }\n@@ -157,1 +161,4 @@\n-    List<String> labels();\n+    List<Label> labels();\n+    default List<String> labelNames() {\n+        return labels().stream().map(Label::name).collect(Collectors.toList());\n+    }\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Issue.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.skara.issuetracker;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+public class Label implements Comparable<Label> {\n+    private final String name;\n+    private final String description;\n+\n+    public Label(String name) {\n+        this(name, null);\n+    }\n+\n+    public Label(String name, String description) {\n+        this.name = name;\n+        this.description = description;\n+    }\n+\n+    public String name() {\n+        return name;\n+    }\n+\n+    public Optional<String> description() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    @Override\n+    public int compareTo(Label l) {\n+        return name.compareTo(l.name);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+\n+        if (!(o instanceof Label)) {\n+            return false;\n+        }\n+\n+        var l = (Label) o;\n+        return Objects.equals(name, l.name) &&\n+               Objects.equals(description, l.description);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(name, description);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+}\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Label.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -267,1 +267,1 @@\n-    public List<String> labels() {\n+    public List<Label> labels() {\n@@ -269,1 +269,1 @@\n-                   .map(JSONValue::asString)\n+                   .map(s -> new Label(s.asString()))\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            assertEquals(List.of(\"another\"), updated.labels());\n+            assertEquals(List.of(\"another\"), updated.labelNames());\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/IssueTrackerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.stream.Collectors;\n@@ -178,2 +179,2 @@\n-    public List<String> labels() {\n-        return new ArrayList<>(data.labels.keySet());\n+    public List<Label> labels() {\n+        return data.labels.keySet().stream().map(s -> new Label(s)).collect(Collectors.toList());\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssue.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}