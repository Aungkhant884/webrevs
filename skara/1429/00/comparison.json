{"files":[{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module {\n+    name = 'org.openjdk.skara.bots.common'\n+    test {\n+        requires 'org.junit.jupiter.api'\n+        requires 'org.openjdk.skara.test'\n+        opens 'org.openjdk.skara.bots.common' to 'org.junit.platform.commons'\n+    }\n+}\n+\n+dependencies {\n+    implementation project(':vcs')\n+    implementation project(':host')\n+    implementation project(':forge')\n+    implementation project(':issuetracker')\n+    implementation project(':jbs')\n+    implementation project(':json')\n+    implementation project(':network')\n+    implementation project(':jcheck')\n+    implementation project(':census')\n+\n+    testImplementation project(':test')\n+}\n","filename":"bots\/common\/build.gradle","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * The bots.common module is meant for application level logic that needs to be\n+ * shared between multiple bots. This is needed for functionality that ties\n+ * together multiple different libraries that we don't want to create\n+ * dependencies between.\n+ *\/\n+module org.openjdk.skara.bots.common {\n+    requires org.openjdk.skara.vcs;\n+    requires transitive org.openjdk.skara.forge;\n+    requires org.openjdk.skara.network;\n+    requires transitive org.openjdk.skara.jbs;\n+    requires transitive org.openjdk.skara.jcheck;\n+    requires java.logging;\n+\n+    exports org.openjdk.skara.bots.common;\n+}\n\\ No newline at end of file\n","filename":"bots\/common\/src\/main\/java\/module-info.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.common;\n+\n+import java.util.Optional;\n+import org.openjdk.skara.forge.PullRequest;\n+import org.openjdk.skara.jbs.JdkVersion;\n+import org.openjdk.skara.jcheck.JCheckConfiguration;\n+import org.openjdk.skara.network.UncheckedRestException;\n+\n+\/**\n+ * This class contains utility methods used by more than one bot. These methods\n+ * can't reasonably be located in the various libraries as they combine\n+ * functionality and knowledge unique to bot applications. As this class grows,\n+ * it should be encouraged to split it up into more cohesive units.\n+ *\/\n+public class BotUtils {\n+\n+    \/**\n+     * Gets jcheck configured fix version from a pull request. This only works for\n+     * repositories where the fix version is configured in .jcheck\/conf.\n+     *\/\n+    public static Optional<JdkVersion> getVersion(PullRequest pr) {\n+        String confFile;\n+        try {\n+            confFile = pr.repository().fileContents(\".jcheck\/conf\", pr.headHash().hex());\n+        } catch (UncheckedRestException e) {\n+            if (e.getStatusCode() == 404) {\n+                confFile = pr.repository().fileContents(\".jcheck\/conf\", pr.targetRef());\n+            } else {\n+                throw e;\n+            }\n+        }\n+        var configuration = JCheckConfiguration.parse(confFile.lines().toList());\n+        var version = configuration.general().version().orElse(null);\n+        if (version == null || \"\".equals(version)) {\n+            return Optional.empty();\n+        }\n+        return JdkVersion.parse(version);\n+    }\n+}\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/BotUtils.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -45,0 +45,1 @@\n+    implementation project(':bots:common')\n","filename":"bots\/csr\/build.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+    requires org.openjdk.skara.bots.common;\n","filename":"bots\/csr\/src\/main\/java\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Optional;\n@@ -35,0 +34,1 @@\n+import org.openjdk.skara.bots.common.BotUtils;\n@@ -40,2 +40,0 @@\n-import org.openjdk.skara.jbs.JdkVersion;\n-import org.openjdk.skara.jcheck.JCheckConfiguration;\n@@ -92,13 +90,0 @@\n-    \/**\n-     * Get the fix version from the provided PR.\n-     *\/\n-    private static Optional<JdkVersion> getVersion(PullRequest pullRequest) {\n-        var confFile = pullRequest.repository().fileContents(\".jcheck\/conf\", pullRequest.targetRef());\n-        var configuration = JCheckConfiguration.parse(confFile.lines().toList());\n-        var version = configuration.general().version().orElse(null);\n-        if (version == null || \"\".equals(version)) {\n-            return Optional.empty();\n-        }\n-        return JdkVersion.parse(version);\n-    }\n-\n@@ -156,1 +141,1 @@\n-        var versionOpt = getVersion(pr);\n+        var versionOpt = BotUtils.getVersion(pr);\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/PullRequestWorkItem.java","additions":2,"deletions":17,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -318,2 +318,1 @@\n-            \/\/ Remove `version=0.1` from `.jcheck\/conf`, set the version as null\n-            localRepo.checkout(localRepo.defaultBranch());\n+            \/\/ Remove `version=0.1` from `.jcheck\/conf`, set the version as null in the edit branch\n@@ -325,1 +324,1 @@\n-            localRepo.push(confHash, repo.url(), \"master\", true);\n+            localRepo.push(confHash, repo.url(), \"edit\", true);\n@@ -332,3 +331,0 @@\n-            \/\/ Test the method `TestPullRequest#diff`.\n-            assertEquals(1, pr.diff().patches().size());\n-\n@@ -336,1 +332,0 @@\n-            localRepo.checkout(localRepo.defaultBranch());\n@@ -342,1 +337,1 @@\n-            localRepo.push(confHash, repo.url(), \"master\", true);\n+            localRepo.push(confHash, repo.url(), \"edit\", true);\n@@ -352,1 +347,0 @@\n-            localRepo.checkout(localRepo.defaultBranch());\n@@ -358,1 +352,1 @@\n-            localRepo.push(confHash, repo.url(), \"master\", true);\n+            localRepo.push(confHash, repo.url(), \"edit\", true);\n@@ -402,1 +396,0 @@\n-            localRepo.checkout(localRepo.defaultBranch());\n@@ -408,1 +401,1 @@\n-            localRepo.push(confHash, repo.url(), \"master\", true);\n+            localRepo.push(confHash, repo.url(), \"edit\", true);\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+    implementation project(':bots:common')\n","filename":"bots\/pr\/build.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+    requires org.openjdk.skara.bots.common;\n","filename":"bots\/pr\/src\/main\/java\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.bots.common.BotUtils;\n@@ -109,1 +110,1 @@\n-            var versionOpt = CheckRun.getVersion(pr);\n+            var versionOpt = BotUtils.getVersion(pr);\n@@ -165,1 +166,1 @@\n-        var versionOpt = CheckRun.getVersion(pr);\n+        var versionOpt = BotUtils.getVersion(pr);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.bots.common.BotUtils;\n@@ -33,0 +34,1 @@\n+import org.openjdk.skara.network.UncheckedRestException;\n@@ -134,13 +136,0 @@\n-    \/**\n-     * Get the fix version from the provided PR.\n-     *\/\n-    public static Optional<JdkVersion> getVersion(PullRequest pullRequest) {\n-        var confFile = pullRequest.repository().fileContents(\".jcheck\/conf\", pullRequest.targetRef());\n-        var configuration = JCheckConfiguration.parse(confFile.lines().toList());\n-        var version = configuration.general().version().orElse(null);\n-        if (version == null || \"\".equals(version)) {\n-            return Optional.empty();\n-        }\n-        return JdkVersion.parse(version);\n-    }\n-\n@@ -160,1 +149,1 @@\n-        var versionOpt = getVersion(pr);\n+        var versionOpt = BotUtils.getVersion(pr);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+        requires 'org.openjdk.skara.proxy'\n@@ -47,0 +48,1 @@\n+    testImplementation project(':proxy')\n","filename":"issuetracker\/build.gradle","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+include 'bots:common'\n","filename":"settings.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}