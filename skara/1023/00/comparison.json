{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    static final Pattern ISSUE_ID_PATTERN = Pattern.compile(\"^(?:[A-Za-z][A-Za-z0-9]+-)?([0-9]+)$\");\n+    static final Pattern ISSUE_ID_PATTERN = Pattern.compile(\"^(?:(?<prefix>[A-Za-z][A-Za-z0-9]+)-)?(?<id>[0-9]+)(?::\\\\s+(?<title>.+))?$\");\n@@ -49,0 +49,1 @@\n+    private static final String ELLIPSIS = \"…\";\n@@ -140,0 +141,15 @@\n+    \/**\n+     * Return the matching group, or the empty string if no match is found\n+     *\/\n+    private String getMatchGroup(java.util.regex.Matcher m, String group) {\n+        var prefix = m.group(group);\n+        if (prefix == null) {\n+            return \"\";\n+        }\n+        return prefix;\n+    }\n+\n+    \/**\n+     * Help the user by fixing up an \"almost correct\" PR title\n+     * @return true if the PR was modified\n+     *\/\n@@ -141,2 +157,1 @@\n-        var title = pr.title();\n-        var m = ISSUE_ID_PATTERN.matcher(title);\n+        var m = ISSUE_ID_PATTERN.matcher(pr.title());\n@@ -145,1 +160,0 @@\n-        var newTitle = title;\n@@ -147,1 +161,10 @@\n-            var id = m.group(1);\n+            var prefix = getMatchGroup(m, \"prefix\");\n+            var id = getMatchGroup(m,\"id\");\n+            var title = getMatchGroup(m,\"title\");\n+\n+            if (!prefix.isEmpty() && !prefix.equalsIgnoreCase(project.name())) {\n+                \/\/ If [project-] prefix does not match our project, something is odd;\n+                \/\/ don't touch the PR title in that case\n+                return false;\n+            }\n+\n@@ -150,1 +173,25 @@\n-                newTitle = id + \": \" + issue.get().title();\n+                var issueTitle = issue.get().title();\n+                if (title.isEmpty()) {\n+                    \/\/ If the title is in the form of \"[project-]<bugid>\" only\n+                    \/\/ we add the title from JBS\n+                    var newPrTitle = id + \": \" + issue.get().title();\n+                    pr.setTitle(newPrTitle);\n+                    return true;\n+                } else {\n+                    \/\/ If it is \"[project-]<bugid>: <title-pre>\", where <title-pre>\n+                    \/\/ is a cut-off version of the title, we restore the full title\n+                    if (title.endsWith(ELLIPSIS)) {\n+                        title = title.substring(0, title.length() - 1);\n+                    }\n+                    if (issueTitle.startsWith(title) && issueTitle.length() > title.length()) {\n+                        var newPrTitle = id + \": \" + issue.get().title();\n+                        pr.setTitle(newPrTitle);\n+                        var remainingTitle = issue.get().title().substring(title.length());\n+                        if (pr.body().startsWith(ELLIPSIS + remainingTitle + \"\\n\\n\")) {\n+                            \/\/ Remove remaning title, plus decorations\n+                            var newPrBody = pr.body().substring(remainingTitle.length() + 3);\n+                            pr.setBody(newPrBody);\n+                        }\n+                        return true;\n+                    }\n+                }\n@@ -154,5 +201,0 @@\n-        if (!title.equals(newTitle)) {\n-            pr.setTitle(newTitle);\n-            return true;\n-        }\n-\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":54,"deletions":12,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -893,0 +893,45 @@\n+    @Test\n+    void issueTitleCutOff(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var issues = credentials.getIssueProject();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType(), Path.of(\"appendable.txt\"),\n+                    Set.of(\"issues\"), null);\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            var issue1 = issues.createIssue(\"My first issue with a very long title that is going to be cut off by the Git Forge provider\", List.of(\"Hello\"), Map.of());\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var prBadTitle =  credentials.createPullRequest(author, \"master\", \"edit\", issue1.id() + \": My OTHER issue with a very long title that is going to be cut off by …\", List.of(\"…the Git Forge provider\"), false);\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(checkBot);\n+\n+            assertTrue(prBadTitle.body().contains(\"Title mismatch between PR and JBS for issue\"));\n+\n+            var prCutOff =  credentials.createPullRequest(author, \"master\", \"edit\", issue1.id() + \": My first issue with a very long title that is going to be cut off by …\", List.of(\"…the Git Forge provider\", \"\", \"It also has a second line!\"), false);\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(checkBot);\n+\n+            assertFalse(prCutOff.body().contains(\"Title mismatch between PR and JBS for issue\"));\n+\n+            \/\/ The PR title should contain the full issue title\n+            assertEquals(\"1: My first issue with a very long title that is going to be cut off by the Git Forge provider\", prCutOff.title());\n+            \/\/ And the body should not contain the issue title\n+            assertTrue(prCutOff.body().startsWith(\"It also has a second line!\"));\n+        }\n+    }\n+\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"}]}