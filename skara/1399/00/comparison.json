{"files":[{"patch":"@@ -146,0 +146,10 @@\n+                    \/\/ If current review is just a comment, the verdict should inherit from the previous review\n+                    if (review.verdict().equals(Review.Verdict.NONE)) {\n+                        review = new Review(review.createdAt(),\n+                                review.reviewer(),\n+                                prevReview.verdict(),\n+                                review.hash().isPresent() ? review.hash().get() : null,\n+                                review.id(),\n+                                review.body().isPresent() ? review.body().get() : null,\n+                                review.targetRef());\n+                    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -616,0 +616,69 @@\n+\n+    @Test\n+    void testReviewCommentsAfterApprovedReview(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var integrator = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addReviewer(integrator.forge().currentUser().id())\n+                    .addAuthor(author.forge().currentUser().id());\n+            var prBot = PullRequestBot.newBuilder().repo(bot).censusRepo(censusBuilder.build()).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"123: This is a pull request\");\n+\n+            var reviewerPr = integrator.pullRequest(pr.id());\n+\n+            \/\/ Approve it as another user\n+            reviewerPr.addReview(Review.Verdict.APPROVED, \"Approved\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ The pr should contain 'Ready' label\n+            var updatedPr = author.pullRequest(pr.id());\n+            assertTrue(updatedPr.labelNames().contains(\"ready\"));\n+\n+            \/\/ Add a review comment\n+            reviewerPr.addReview(Review.Verdict.NONE, \"Just a comment1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ The pr should still contain 'Ready' label\n+            updatedPr = author.pullRequest(pr.id());\n+            assertTrue(updatedPr.labelNames().contains(\"ready\"));\n+\n+            \/\/ Add a review comment\n+            reviewerPr.addReview(Review.Verdict.NONE, \"Just a comment2\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ The pr should still contain 'Ready' label\n+            updatedPr = author.pullRequest(pr.id());\n+            assertTrue(updatedPr.labelNames().contains(\"ready\"));\n+\n+            \/\/ Disapprove this pr\n+            reviewerPr.addReview(Review.Verdict.DISAPPROVED, \"Disapproved\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ The pr should not contain 'Ready' label\n+            updatedPr = author.pullRequest(pr.id());\n+            assertFalse(updatedPr.labelNames().contains(\"ready\"));\n+\n+            \/\/ Add a review comment\n+            reviewerPr.addReview(Review.Verdict.NONE, \"Just a comment3\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ The pr should still not contain 'Ready' label\n+            updatedPr = author.pullRequest(pr.id());\n+            assertFalse(updatedPr.labelNames().contains(\"ready\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTests.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"modified"}]}