{"files":[{"patch":"@@ -514,1 +514,1 @@\n-        message.append(\" This change now passes all automated pre-integration checks\");\n+        message.append(\" This change now passes all *automated* pre-integration checks.\");\n@@ -520,2 +520,2 @@\n-                message.append(\". In addition to the automated checks, the change must also fulfill all \");\n-                message.append(\"[project specific requirements](https:\/\/github.com\/\");\n+                message.append(\"\\n\\nℹ️ This project also has non-automated pre-integration requirements. Please see the file \");\n+                message.append(\"[CONTRIBUTING.md](https:\/\/github.com\/\");\n@@ -525,1 +525,1 @@\n-                message.append(\"\/CONTRIBUTING.md)\");\n+                message.append(\"\/CONTRIBUTING.md) for more details.\");\n@@ -532,1 +532,1 @@\n-        message.append(\"After integration, the commit message will be:\\n\");\n+        message.append(\"After integration, the commit message for the final commit will be:\\n\");\n@@ -537,3 +537,5 @@\n-        message.append(\"- If you would like to add a summary, use the `\/summary` command.\\n\");\n-        message.append(\"- To credit additional contributors, use the `\/contributor` command.\\n\");\n-        message.append(\"- To add additional solved issues, use the `\/issue` command.\\n\");\n+        message.append(\"You can use [pull request commands](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Pull+Request+Commands) \");\n+        message.append(\"such as [\/summary](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/summary), \");\n+        message.append(\"[\/contributor](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/contributor) and \");\n+        message.append(\"[\/issue](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/issue) to adjust it as needed.\");\n+        message.append(\"\\n\\n\");\n@@ -544,1 +546,1 @@\n-            message.append(\"Since the source branch of this PR was last updated there \");\n+            message.append(\"At the time when this comment was updated there had been \");\n@@ -546,1 +548,1 @@\n-                message.append(\"has been 1 commit \");\n+                message.append(\"1 new commit \");\n@@ -548,1 +550,0 @@\n-                message.append(\"have been \");\n@@ -550,1 +551,1 @@\n-                message.append(\" commits \");\n+                message.append(\" new commits \");\n@@ -561,0 +562,7 @@\n+            } else {\n+                message.append(\"\\n\");\n+                message.append(\"Please see [this link](\");\n+                message.append(pr.repository().webUrl(baseHash.hex(), pr.targetRef()));\n+                message.append(\") for an up-to-date comparison between the source branch of this pull request and the `\");\n+                message.append(pr.targetRef());\n+                message.append(\"` branch.\");\n@@ -565,6 +573,1 @@\n-            message.append(\"these commits when integrating. If you prefer to avoid automatic rebasing, please merge `\");\n-            message.append(pr.targetRef());\n-            message.append(\"` into your branch, and then specify the current head hash when integrating, like this: \");\n-            message.append(\"`\/integrate \");\n-            message.append(pr.targetHash());\n-            message.append(\"`.\\n\");\n+            message.append(\"these commits when integrating. If you prefer to avoid this automatic rebasing\");\n@@ -573,1 +576,1 @@\n-            message.append(\"There are currently no new commits on the `\");\n+            message.append(\"At the time when this comment was updated there had been no new commits pushed to the `\");\n@@ -575,6 +578,3 @@\n-            message.append(\"` branch since the last update of the source branch of this PR. If another commit should be pushed before \");\n-            message.append(\"you perform the `\/integrate` command, your PR will be automatically rebased. If you would like to avoid \");\n-            message.append(\"potential automatic rebasing, specify the current head hash when integrating, like this: \");\n-            message.append(\"`\/integrate \");\n-            message.append(pr.targetHash());\n-            message.append(\"`.\\n\");\n+            message.append(\"` branch. If another commit should be pushed before \");\n+            message.append(\"you perform the `\/integrate` command, your PR will be automatically rebased. If you prefer to avoid \");\n+            message.append(\"any potential automatic rebasing\");\n@@ -582,0 +582,3 @@\n+        message.append(\", please check the documentation for the \");\n+        message.append(\"[\/integrate](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/integrate) \");\n+        message.append(\"command for further details.\\n\");\n@@ -589,2 +592,1 @@\n-            message.append(\")\");\n-            message.append(\"an existing Committer must agree to \");\n+            message.append(\") an existing Committer must agree to \");\n@@ -607,2 +609,3 @@\n-            message.append(\"➡️ To integrate this PR with the above commit message to the `\" + pr.targetRef() + \"` branch, type \");\n-            message.append(\"`\/integrate` in a new comment.\\n\");\n+            message.append(\"➡️ To integrate this PR with the above commit message to the `\").append(pr.targetRef()).append(\"` branch, type \");\n+            message.append(\"[\/integrate](https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Pull+Request+Commands#PullRequestCommands-\/integrate) \");\n+            message.append(\"in a new comment.\\n\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":32,"deletions":29,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -540,1 +540,1 @@\n-                            .filter(comment -> comment.body().contains(\"there has been 1 commit\"))\n+                            .filter(comment -> comment.body().contains(\"there had been 1 new commit\"))\n@@ -542,1 +542,1 @@\n-                            .filter(comment -> comment.body().contains(\"please merge\"))\n+                            .filter(comment -> comment.body().contains(\"automatic rebasing\"))\n@@ -618,1 +618,1 @@\n-                        .filter(comment -> comment.body().contains(\"change now passes all automated\"))\n+                        .filter(comment -> comment.body().contains(\"change now passes all *automated*\"))\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-                           .filter(comment -> comment.body().contains(\"change now passes all automated\"))\n+                           .filter(comment -> comment.body().contains(\"change now passes all *automated*\"))\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ContributorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,2 +77,1 @@\n-                                      .filter(c -> c.body().contains(\"If you would like to avoid potential automatic rebasing\"))\n-                                      .filter(c -> c.body().contains(\"`\/integrate \" + masterHash.hex() + \"`\"))\n+                                      .filter(c -> c.body().contains(\"If you prefer to avoid any potential automatic rebasing\"))\n@@ -367,1 +366,1 @@\n-                           .filter(comment -> comment.body().contains(\"change now passes all automated\"))\n+                           .filter(comment -> comment.body().contains(\"change now passes all *automated*\"))\n@@ -394,1 +393,1 @@\n-                       .filter(comment -> comment.body().contains(\"change now passes all automated\"))\n+                       .filter(comment -> comment.body().contains(\"change now passes all *automated*\"))\n@@ -406,1 +405,1 @@\n-                       .filter(comment -> comment.body().contains(\"change now passes all automated\"))\n+                       .filter(comment -> comment.body().contains(\"change now passes all *automated*\"))\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateTests.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-                            .filter(comment -> comment.body().contains(\"the commit message will be\"))\n+                            .filter(comment -> comment.body().contains(\"the commit message for the final commit will be\"))\n@@ -230,1 +230,1 @@\n-                            .filter(comment -> comment.body().contains(\"the commit message will be\"))\n+                            .filter(comment -> comment.body().contains(\"the commit message for the final commit will be\"))\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-                           .filter(comment -> comment.body().contains(\"change now passes all automated\"))\n+                           .filter(comment -> comment.body().contains(\"change now passes all *automated*\"))\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}