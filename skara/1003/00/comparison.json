{"files":[{"patch":"@@ -55,0 +55,1 @@\n+    implementation project(':bots:synclabel')\n@@ -91,1 +92,2 @@\n-                   'org.openjdk.skara.bots.testinfo']\n+                   'org.openjdk.skara.bots.testinfo',\n+                   'org.openjdk.skara.bots.synclabel']\n","filename":"bots\/cli\/build.gradle","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-    name = 'org.openjdk.skara.bots.testinfo'\n+    name = 'org.openjdk.skara.bots.synclabel'\n@@ -45,0 +45,1 @@\n+    implementation project(':jbs')\n","filename":"bots\/synclabel\/build.gradle","additions":3,"deletions":2,"binary":false,"changes":5,"previous_filename":"bots\/testinfo\/build.gradle","status":"copied"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module org.openjdk.skara.bots.synclabel {\n+    requires org.openjdk.skara.vcs;\n+    requires org.openjdk.skara.host;\n+    requires org.openjdk.skara.network;\n+    requires org.openjdk.skara.bot;\n+    requires org.openjdk.skara.process;\n+    requires org.openjdk.skara.storage;\n+    requires org.openjdk.skara.jbs;\n+    requires java.logging;\n+\n+    provides org.openjdk.skara.bot.BotFactory with org.openjdk.skara.bots.synclabel.SyncLabelBotFactory;\n+}\n","filename":"bots\/synclabel\/src\/main\/java\/module-info.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.synclabel;\n+\n+import org.openjdk.skara.bot.*;\n+import org.openjdk.skara.issuetracker.IssueProject;\n+\n+import java.time.*;\n+import java.util.*;\n+import java.util.logging.Logger;\n+\n+public class SyncLabelBot implements Bot {\n+    private final IssueProject issueProject;\n+    private final Map<String, ZonedDateTime> issueUpdatedAt = new HashMap<>();\n+\n+    private ZonedDateTime lastUpdate;\n+\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");\n+\n+    SyncLabelBot(IssueProject issueProject) {\n+        this.issueProject = issueProject;\n+    }\n+\n+    @Override\n+    public List<WorkItem> getPeriodicItems() {\n+        ZonedDateTime updatedAfter;\n+        if (lastUpdate == null) {\n+            updatedAfter = ZonedDateTime.now().minus(Duration.ofHours(2));\n+        } else {\n+            updatedAfter = lastUpdate.minus(Duration.ofMinutes(30));\n+            lastUpdate = ZonedDateTime.now();\n+        }\n+\n+        var issues = issueProject.issues(updatedAfter);\n+        var ret = new ArrayList<WorkItem>();\n+        for (var issue : issues) {\n+            var lastUpdate = issueUpdatedAt.get(issue.id());\n+            if (lastUpdate != null) {\n+                if (!issue.updatedAt().isAfter(lastUpdate)) {\n+                    continue;\n+                }\n+            }\n+            issueUpdatedAt.put(issue.id(), issue.updatedAt());\n+            ret.add(new SyncLabelBotCheckWorkItem(issueProject, issue.id()));\n+        }\n+        return ret;\n+    }\n+}\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBot.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.synclabel;\n+\n+import org.openjdk.skara.bot.WorkItem;\n+import org.openjdk.skara.issuetracker.*;\n+import org.openjdk.skara.jbs.*;\n+\n+import java.nio.file.Path;\n+import java.util.*;\n+import java.util.logging.Logger;\n+\n+public class SyncLabelBotCheckWorkItem implements WorkItem {\n+    private final IssueProject issueProject;\n+    private final String issueId;\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");\n+\n+    SyncLabelBotCheckWorkItem(IssueProject issueProject, String issueId) {\n+        this.issueProject = issueProject;\n+        this.issueId = issueId;\n+    }\n+\n+    @Override\n+    public boolean concurrentWith(WorkItem other) {\n+        if (!(other instanceof SyncLabelBotCheckWorkItem)) {\n+            return true;\n+        }\n+        var o = (SyncLabelBotCheckWorkItem) other;\n+        return !o.issueId.equals(issueId);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"SyncLabelBotCheckWorkItem@\" + issueId;\n+    }\n+\n+    @Override\n+    public Collection<WorkItem> run(Path scratch) {\n+        var ret = new ArrayList<WorkItem>();\n+        var issue = issueProject.issue(issueId);\n+        if (issue.isEmpty()) {\n+            log.severe(\"Issue \" + issueId + \" is no longer present!\");\n+            return List.of();\n+        }\n+\n+        var related = Backports.findBackports(issue.get(), true);\n+        var allIssues = new ArrayList<Issue>();\n+        allIssues.add(issue.get());\n+        allIssues.addAll(related);\n+\n+        var needsLabel = Backports.releaseStreamDuplicates(allIssues);\n+        for (var i : allIssues) {\n+            var version = Backports.mainFixVersion(i);\n+            var versionString = version.map(JdkVersion::raw).orElse(\"no fix version\");\n+            if (needsLabel.contains(i)) {\n+                if (i.labels().contains(\"hgupdate-sync\")) {\n+                    log.finer(i.id() + \" (\" + versionString + \") - already labeled\");\n+                } else {\n+                    ret.add(new SyncLabelBotLabelWorkItem(i, SyncLabelBotLabelWorkItem.LabelAction.ADD));\n+                    log.info(i.id() + \" (\" + versionString + \") - needs to be labeled\");\n+                }\n+            } else {\n+                if (i.labels().contains(\"hgupdate-sync\")) {\n+                    ret.add(new SyncLabelBotLabelWorkItem(i, SyncLabelBotLabelWorkItem.LabelAction.REMOVE));\n+                    log.info(i.id() + \" (\" + versionString + \") - labeled incorrectly!\");\n+                } else {\n+                    log.finer(i.id() + \" (\" + versionString + \") - not labeled\");\n+                }\n+            }\n+        }\n+\n+        return ret;\n+    }\n+}\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotCheckWorkItem.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.synclabel;\n+\n+import org.openjdk.skara.bot.*;\n+\n+import java.util.*;\n+import java.util.logging.Logger;\n+\n+public class SyncLabelBotFactory implements BotFactory {\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");\n+\n+    @Override\n+    public String name() {\n+        return \"synclabel\";\n+    }\n+\n+    @Override\n+    public List<Bot> create(BotConfiguration configuration) {\n+        var bots = new ArrayList<Bot>();\n+        var specific = configuration.specific();\n+        for (var issueproject : specific.get(\"issueprojects\").asArray()) {\n+            bots.add(new SyncLabelBot(configuration.issueProject(issueproject.asString())));\n+        }\n+        return bots;\n+    }\n+}\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotFactory.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.synclabel;\n+\n+import org.openjdk.skara.bot.WorkItem;\n+import org.openjdk.skara.issuetracker.Issue;\n+\n+import java.nio.file.Path;\n+import java.util.*;\n+import java.util.logging.Logger;\n+\n+public class SyncLabelBotLabelWorkItem implements WorkItem {\n+    private final Issue issue;\n+    private final LabelAction labelAction;\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");\n+\n+    enum LabelAction {\n+        ADD,\n+        REMOVE\n+    }\n+\n+    SyncLabelBotLabelWorkItem(Issue issue, LabelAction labelAction) {\n+        this.issue = issue;\n+        this.labelAction = labelAction;\n+    }\n+\n+    @Override\n+    public boolean concurrentWith(WorkItem other) {\n+        if (!(other instanceof SyncLabelBotLabelWorkItem)) {\n+            return true;\n+        }\n+        var o = (SyncLabelBotLabelWorkItem) other;\n+        return !o.issue.webUrl().equals(issue.webUrl());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"SyncLabelBotLabelWorkItem@\" + issue.project().name() + \"#\" + issue.id();\n+    }\n+\n+    @Override\n+    public Collection<WorkItem> run(Path scratch) {\n+        switch (labelAction) {\n+            case ADD -> log.severe(\"Adding hgupdate-sync label to \" + issue.id());\n+            case REMOVE -> log.severe(\"Removing hgupdate-sync label from \" + issue.id());\n+        }\n+        return List.of();\n+    }\n+}\n","filename":"bots\/synclabel\/src\/main\/java\/org\/openjdk\/skara\/bots\/synclabel\/SyncLabelBotLabelWorkItem.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -29,0 +29,1 @@\n+import java.time.ZonedDateTime;\n@@ -37,0 +38,1 @@\n+    List<Issue> issues(ZonedDateTime updatedAfter);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/IssueProject.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.time.*;\n@@ -426,0 +427,26 @@\n+    @Override\n+    public List<Issue> issues(ZonedDateTime updatedAfter) {\n+        var ret = new ArrayList<Issue>();\n+        var jql = \"project = \" + projectName + \" AND updated >= '-\" + Duration.between(updatedAfter, ZonedDateTime.now()).toMinutes() + \"m'\";\n+        var issues = request.get(\"search\")\n+                            .param(\"jql\", jql)\n+                            .execute();\n+        var startAt = 0;\n+        while (issues.get(\"issues\").asArray().size() > 0) {\n+            for (var issue : issues.get(\"issues\").asArray()) {\n+                ret.add(new JiraIssue(this, request, issue));\n+            }\n+\n+            if (ret.size() < issues.get(\"total\").asInt()) {\n+                startAt += issues.get(\"issues\").asArray().size();\n+                issues = request.get(\"search\")\n+                                .param(\"jql\", jql)\n+                                .param(\"startAt\", String.valueOf(startAt))\n+                                .execute();\n+            } else {\n+                break;\n+            }\n+        }\n+        return ret;\n+    }\n+\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.regex.Pattern;\n@@ -207,0 +208,2 @@\n+    private static final Pattern featureFamilyPattern = Pattern.compile(\"^([^\\\\d]*)(\\\\d+)$\");\n+\n@@ -221,1 +224,8 @@\n-            var numericFeature = Integer.parseInt(jdkVersion.feature());\n+            var featureFamilyMatcher = featureFamilyPattern.matcher(jdkVersion.feature());\n+            if (!featureFamilyMatcher.matches()) {\n+                log.warning(\"Cannot parse feature family: \" + jdkVersion.feature());\n+                return ret;\n+            }\n+            var featureFamily = featureFamilyMatcher.group(1);\n+            var featureVersion = featureFamilyMatcher.group(2);\n+            var numericFeature = Integer.parseInt(featureVersion);\n@@ -240,1 +250,1 @@\n-                    ret.add(\"features\");\n+                    ret.add(\"features-\" + featureFamily);\n@@ -261,2 +271,2 @@\n-        } catch (NumberFormatException ignored) {\n-            log.info(\"Cannot determine release streams for version: \" + jdkVersion);\n+        } catch (NumberFormatException e) {\n+            log.info(\"Cannot determine release streams for version: \" + jdkVersion + \" (\" + e + \")\");\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/Backports.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -273,0 +273,8 @@\n+            backports.assertLabeled(\"openjfx15\", \"openjfx16\");\n+        }\n+    }\n+\n+    @Test\n+    void labelOpenJdkFeatureReleaseStream(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"openjdk8u292\");\n@@ -274,0 +282,3 @@\n+\n+            backports.addBackports(\"openjdk8u302\");\n+            backports.assertLabeled(\"openjdk8u302\");\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+include 'bots:synclabel'\n","filename":"settings.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.time.ZonedDateTime;\n@@ -75,0 +76,5 @@\n+    @Override\n+    public List<Issue> issues(ZonedDateTime updatedAfter) {\n+        return new ArrayList<>(host.getIssues(this));\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssueProject.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}