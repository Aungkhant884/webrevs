{"files":[{"patch":"@@ -80,0 +80,5 @@\n+        } else {\n+            var user = issueProject.findUser(authorEmail.address());\n+            if (user.isPresent()) {\n+                return Optional.of(user.get().userName());\n+            }\n@@ -83,1 +88,8 @@\n-        if (!committerEmail.domain().equals(\"openjdk.org\")) {\n+        if (committerEmail.domain().equals(\"openjdk.org\")) {\n+            return Optional.of(committerEmail.localPart());\n+        } else {\n+            var user = issueProject.findUser(committerEmail.address());\n+            if (user.isPresent()) {\n+                return Optional.of(user.get().userName());\n+            }\n+\n@@ -87,1 +99,0 @@\n-        return Optional.of(committerEmail.localPart());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifier.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -403,0 +403,43 @@\n+            assertEquals(Set.of(\"0.1\"), fixVersions(updatedIssue));\n+\n+            \/\/ The issue should be assigned and resolved\n+            assertEquals(RESOLVED, updatedIssue.state());\n+            assertEquals(List.of(issueProject.issueTracker().currentUser()), updatedIssue.assignees());\n+        }\n+    }\n+\n+    @Test\n+    void testIssueOtherDomain(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+\n+            var repo = credentials.getHostedRepository();\n+            var repoFolder = tempFolder.path().resolve(\"repo\");\n+            var localRepo = CheckableRepository.init(repoFolder, repo.repositoryType());\n+            credentials.commitLock(localRepo);\n+            localRepo.pushAll(repo.url());\n+\n+            var issueProject = credentials.getIssueProject();\n+            var storageFolder = tempFolder.path().resolve(\"storage\");\n+            var jbsNotifierConfig = JSON.object().put(\"fixversions\", JSON.object());\n+            var notifyBot = testBotBuilder(repo, issueProject, storageFolder, jbsNotifierConfig).create(\"notify\", JSON.object());\n+\n+            \/\/ Initialize history\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ Create an issue and commit a fix\n+            var authorEmailAddress = issueProject.issueTracker().currentUser().userName() + \"@otherjdk.org\";\n+            var issue = issueProject.createIssue(\"This is an issue\", List.of(\"Indeed\"), Map.of(\"issuetype\", JSON.of(\"Enhancement\")));\n+            var editHash = CheckableRepository.appendAndCommit(localRepo, \"Another line\", issue.id() + \": Fix that issue\", \"Duke\", authorEmailAddress);\n+            localRepo.push(editHash, repo.url(), \"master\");\n+            TestBotRunner.runPeriodicItems(notifyBot);\n+\n+            \/\/ The changeset should be reflected in a comment\n+            var updatedIssue = issueProject.issue(issue.id()).orElseThrow();\n+\n+            var comments = updatedIssue.comments();\n+            assertEquals(1, comments.size());\n+            var comment = comments.get(0);\n+            assertTrue(comment.body().contains(editHash.abbreviate()));\n+\n+            \/\/ As well as a fixVersion\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -37,0 +38,1 @@\n+    Optional<HostUser> findUser(String findBy);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/IssueProject.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -389,0 +390,20 @@\n+\n+    @Override\n+    public Optional<HostUser> findUser(String findBy) {\n+        var user = request.get(\"user\/search\")\n+                          .param(\"username\", findBy)\n+                          .onError(r -> r.statusCode() == 404 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n+                          .execute();\n+        if (user.contains(\"NOT_FOUND\")) {\n+            return Optional.empty();\n+        }\n+        if (user.asArray().size() != 1) {\n+            log.severe(\"Multiple results returned for user query: \" + findBy);\n+            return Optional.empty();\n+        }\n+        var data = user.asArray().get(0);\n+        return Optional.of(new HostUser(data.get(\"name\").asString(),\n+                                        data.get(\"name\").asString(),\n+                                        data.get(\"displayName\").asString(),\n+                                        data.get(\"emailAddresss\").asString()));\n+    }\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.email.EmailAddress;\n@@ -132,0 +133,8 @@\n+    Optional<HostUser> findUser(String findBy) {\n+        var findByLocalPart = EmailAddress.parse(findBy).localPart();\n+        return data.users.stream()\n+                         .filter(user -> user.userName().equals(findBy) ||\n+                                 user.userName().equals(findByLocalPart))\n+                         .findAny();\n+    }\n+\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHost.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.host.HostUser;\n@@ -78,0 +79,5 @@\n+\n+    @Override\n+    public Optional<HostUser> findUser(String findBy) {\n+        return host.findUser(findBy);\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssueProject.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}