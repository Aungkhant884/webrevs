{"files":[{"patch":"@@ -286,1 +286,0 @@\n-        readyForReview = false;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCheckIssueVisitor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-import java.io.IOException;\n+import java.io.*;\n@@ -2176,0 +2176,51 @@\n+\n+    @Test\n+    void testProblemListsIssue(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var issueProject = credentials.getIssueProject();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).issueProject(issueProject).build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType(),\n+                    Path.of(\"appendable.txt\"), Set.of(\"author\", \"reviewers\", \"whitespace\", \"problemlists\"), \"0.1\");\n+\n+            \/\/ Add problemlists configuration to conf\n+            try (var output = new FileWriter(tempFolder.path().resolve(\".jcheck\/conf\").toFile(), true)) {\n+                output.append(\"\\n[checks \\\"problemlists\\\"]\\n\");\n+                output.append(\"dirs=test\/jdk\\n\");\n+            }\n+\n+            \/\/ Create ProblemList.txt\n+            Files.createDirectories(tempFolder.path().resolve(\"test\/jdk\"));\n+            var problemList = tempFolder.path().resolve(\"test\/jdk\/ProblemList.txt\");\n+            try (var output = Files.newBufferedWriter(problemList)) {\n+                output.append(\"test 1 windows-all\");\n+            }\n+            localRepo.add(tempFolder.path().resolve(\".jcheck\/conf\"));\n+            localRepo.add(problemList);\n+            localRepo.commit(\"add problemList.txt\", \"testauthor\", \"ta@none.none\");\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo, \"A line\");\n+            localRepo.push(editHash, author.url(), \"refs\/heads\/edit\", true);\n+\n+            var issue = issueProject.createIssue(\"The main issue\", List.of(\"main\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n+\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", issue.id());\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            assertTrue(pr.store().labelNames().contains(\"rfr\"));\n+            assertFalse(pr.store().labelNames().contains(\"ready\"));\n+            assertTrue(pr.store().body().contains(\"1 is used in problem lists\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"}]}