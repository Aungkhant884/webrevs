{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,5 @@\n+        if (!bot.enableCsr()) {\n+            reply.println(\"this repository is not allowed to use the `csr` command.\");\n+            return;\n+        }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,1 @@\n+    private final boolean enableCsr;\n@@ -78,1 +79,1 @@\n-                   Set<String> integrators, Set<Integer> excludeCommitCommentsFrom) {\n+                   Set<String> integrators, Set<Integer> excludeCommitCommentsFrom, boolean enableCsr) {\n@@ -101,0 +102,1 @@\n+        this.enableCsr = enableCsr;\n@@ -280,0 +282,4 @@\n+    public boolean enableCsr() {\n+        return enableCsr;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+    private boolean enableCsr = true;\n@@ -155,0 +156,5 @@\n+    public PullRequestBotBuilder enableCsr(boolean enableCsr) {\n+        this.enableCsr = enableCsr;\n+        return this;\n+    }\n+\n@@ -176,1 +182,1 @@\n-                                  confOverrideRef, censusLink, forks, integrators, excludeCommitCommentsFrom);\n+                                  confOverrideRef, censusLink, forks, integrators, excludeCommitCommentsFrom, enableCsr);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,0 +161,3 @@\n+            if (repo.value().contains(\"enable-csr\")) {\n+                botBuilder.enableCsr(repo.value().get(\"enable-csr\").asBoolean());\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -644,0 +644,42 @@\n+\n+    @Test\n+    void testEnableCsrConfig(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issues = credentials.getIssueProject();\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addCommitter(author.forge().currentUser().id());\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"Just a patch\");\n+\n+            \/\/ Test the pull request bot with csr disable\n+            var disableCsrBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues)\n+                    .enableCsr(false).censusRepo(censusBuilder.build()).build();\n+            pr.addComment(\"\/csr\");\n+            TestBotRunner.runPeriodicItems(disableCsrBot);\n+            assertLastCommentContains(pr, \"this repository is not allowed to use the `csr` command.\");\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ Test the pull request bot with csr enable\n+            var enableCsrBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues)\n+                    .enableCsr(true).censusRepo(censusBuilder.build()).build();\n+            pr.addComment(\"\/csr\");\n+            TestBotRunner.runPeriodicItems(enableCsrBot);\n+            assertLastCommentContains(pr, \"has indicated that a \" +\n+                    \"[compatibility and specification](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) (CSR) request \" +\n+                    \"is needed for this pull request.\");\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":43,"deletions":1,"binary":false,"changes":44,"status":"modified"}]}