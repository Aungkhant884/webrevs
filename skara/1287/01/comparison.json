{"files":[{"patch":"@@ -96,1 +96,1 @@\n-                } else {\n+                } else if (github.contains(\"username\")) {\n@@ -99,0 +99,2 @@\n+                } else {\n+                    ret.put(entry.name(), Forge.from(\"github\", uri, github.asObject()));\n","filename":"bot\/src\/main\/java\/org\/openjdk\/skara\/bot\/BotRunnerConfiguration.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,5 @@\n-        return from(name, uri, null);\n+        return from(name, uri, null, null);\n+    }\n+\n+    static Forge from(String name, URI uri, JSONObject configuration) {\n+        return from(name, uri, null, configuration);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/Forge.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,0 +56,5 @@\n+        var offline = false;\n+        if (configuration.contains(\"offline\")) {\n+            offline = configuration.get(\"offline\").asBoolean();\n+        }\n+\n@@ -75,1 +80,1 @@\n-            return new GitHubHost(uri, webUriPattern, webUriReplacement, orgs);\n+            return new GitHubHost(uri, webUriPattern, webUriReplacement, orgs, offline);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubForgeFactory.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -53,0 +53,4 @@\n+    \/\/ If this Forge is created as offline, it will avoid making remote calls\n+    \/\/ when not needed. This is currently limited to only prevent validation\n+    \/\/ when creating a repository object.\n+    private final boolean offline;\n@@ -61,0 +65,1 @@\n+        offline = false;\n@@ -102,0 +107,1 @@\n+        offline = false;\n@@ -129,1 +135,1 @@\n-    GitHubHost(URI uri, Pattern webUriPattern, String webUriReplacement, Set<String> orgs) {\n+    GitHubHost(URI uri, Pattern webUriPattern, String webUriReplacement, Set<String> orgs, boolean offline) {\n@@ -136,0 +142,1 @@\n+        this.offline = offline;\n@@ -274,2 +281,6 @@\n-        return getProjectInfo(name)\n-                .map(jsonObject -> new GitHubRepository(this, name, jsonObject));\n+        if (offline) {\n+            return Optional.of(new GitHubRepository(this, name));\n+        } else {\n+            return getProjectInfo(name)\n+                    .map(jsonObject -> new GitHubRepository(this, name, jsonObject));\n+        }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubHost.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                                      Set.of());\n+                                      Set.of(), false);\n@@ -52,1 +52,1 @@\n-                                      Set.of());\n+                                      Set.of(), false);\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubHostTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}