{"files":[{"patch":"@@ -95,1 +95,0 @@\n-                        log.info(\"CSR issue resolution is null for \" + describe(pr) + \", not removing CSR label\");\n@@ -97,0 +96,1 @@\n+                            log.info(\"CSR issue resolution is null for \" + describe(pr) + \", adding the CSR label\");\n@@ -98,0 +98,2 @@\n+                        } else {\n+                            log.info(\"CSR issue resolution is null for \" + describe(pr) + \", not removing the CSR label\");\n@@ -103,1 +105,0 @@\n-                        log.info(\"CSR issue resolution name is null for \" + describe(pr) + \", not removing CSR label\");\n@@ -105,0 +106,1 @@\n+                            log.info(\"CSR issue resolution name is null for \" + describe(pr) + \", adding the CSR label\");\n@@ -106,0 +108,2 @@\n+                        } else {\n+                            log.info(\"CSR issue resolution name is null for \" + describe(pr) + \", not removing the CSR label\");\n@@ -111,1 +115,0 @@\n-                        log.info(\"CSR issue state is not closed for \" + describe(pr) + \", not removing CSR label\");\n@@ -113,0 +116,1 @@\n+                            log.info(\"CSR issue state is not closed for \" + describe(pr) + \", adding the CSR label\");\n@@ -114,0 +118,2 @@\n+                        } else {\n+                            log.info(\"CSR issue state is not closed for \" + describe(pr) + \", not removing the CSR label\");\n@@ -119,1 +125,0 @@\n-                        log.info(\"CSR issue resolution is not 'Approved' for \" + describe(pr) + \", not removing CSR label\");\n@@ -121,0 +126,1 @@\n+                            log.info(\"CSR issue resolution is not 'Approved' for \" + describe(pr) + \", adding the CSR label\");\n@@ -122,0 +128,2 @@\n+                        } else {\n+                            log.info(\"CSR issue resolution is not 'Approved' for \" + describe(pr) + \", not removing the CSR label\");\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBot.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-            \/\/ The bot should have kept the CSR label\n+            \/\/ The bot added the csr label automatically\n@@ -171,3 +171,0 @@\n-            \/\/ Add CSR label\n-            pr.addLabel(\"csr\");\n-\n@@ -211,1 +208,1 @@\n-            \/\/ The bot should have kept the CSR label\n+            \/\/ The bot added the csr label automatically\n@@ -214,3 +211,0 @@\n-            \/\/ Add CSR label\n-            pr.addLabel(\"csr\");\n-\n@@ -255,1 +249,1 @@\n-            \/\/ The bot should have kept the CSR label\n+            \/\/ The bot added the csr label automatically\n@@ -258,3 +252,0 @@\n-            \/\/ Add CSR label\n-            pr.addLabel(\"csr\");\n-\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.ArrayList;\n@@ -80,2 +79,2 @@\n-            \/\/ Change the CSR link relationship from `csr for` to `relates to`\n-            \/\/ so that the CSRBot won't add the `csr` label automatically.\n+            \/\/ Remove the csr label if the issue has no csr or the csr has been withdrawn.\n+            \/\/ If the issue has a non-withdrawn csr, the bot should direct the user to withdraw the csr firstly.\n@@ -88,1 +87,0 @@\n-                        List<Link> csrLinks = new ArrayList<>();\n@@ -92,1 +90,15 @@\n-                                csrLinks.add(link);\n+                                var csrIssue = link.issue().orElse(null);\n+                                if (csrIssue != null) {\n+                                    var resolution = csrIssue.properties().get(\"resolution\");\n+                                    if (resolution == null || resolution.isNull()\n+                                            || resolution.get(\"name\") == null || resolution.get(\"name\").isNull()\n+                                            || csrIssue.state() != Issue.State.CLOSED\n+                                            || !resolution.get(\"name\").asString().equals(\"Withdrawn\")) {\n+                                        reply.println(\"the issue for this pull request, [\" + jbsIssue.get().id() + \"](\" + jbsIssue.get().webUrl() + \"), has \" +\n+                                                \"a non-withdrawn CSR request: [\" + csrIssue.id() + \"](\" + csrIssue.webUrl() + \"). \");\n+                                        reply.println(\"So you can't directly indicate that a CSR request is not needed for this pull request. \");\n+                                        reply.println(\"Please firstly withdraw the CSR request: [\" + csrIssue.id() + \"](\" + csrIssue.webUrl() + \"), \"\n+                                                + \"and then use the command `\/csr unneeded` again\");\n+                                        return;\n+                                    }\n+                                }\n@@ -95,5 +107,0 @@\n-                        for (var link : csrLinks) {\n-                            jbsIssue.get().removeLink(link);\n-                            Link newLink = Link.create(link, \"relates to\").build();\n-                            jbsIssue.get().addLink(newLink);\n-                        }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -419,1 +419,17 @@\n-            \/\/ Don't require CSR\n+            \/\/ Indicate the PR doesn't require CSR, but it doesn't work.\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message which directs the user to withdraw the csr firstly.\n+            assertLastCommentContains(pr, \"the issue for this pull request\");\n+            assertLastCommentContains(pr, \"a non-withdrawn CSR request\");\n+            assertLastCommentContains(pr, \"So you can't directly indicate that a CSR request is not needed for this pull request\");\n+            assertLastCommentContains(pr, \"Please firstly withdraw the CSR request\");\n+            assertLastCommentContains(pr, \"and then use the command `\/csr unneeded` again\");\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ withdraw the csr\n+            csr.setState(Issue.State.CLOSED);\n+            csr.setProperty(\"resolution\", JSON.object().put(\"name\", \"Withdrawn\"));\n+\n+            \/\/ Indicate the PR doesn't require CSR, now it works\n@@ -427,3 +443,0 @@\n-\n-            \/\/ The bot should change the CSR link relationship from `csr for` to `relates to`\n-            assertEquals(\"relates to\", issue.links().get(0).relationship().orElseThrow());\n@@ -474,1 +487,17 @@\n-            \/\/ Don't require CSR\n+            \/\/ Indicate the PR doesn't require CSR, but it doesn't work.\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message which directs the user to withdraw the csr firstly.\n+            assertLastCommentContains(pr, \"the issue for this pull request\");\n+            assertLastCommentContains(pr, \"a non-withdrawn CSR request\");\n+            assertLastCommentContains(pr, \"So you can't directly indicate that a CSR request is not needed for this pull request\");\n+            assertLastCommentContains(pr, \"Please firstly withdraw the CSR request\");\n+            assertLastCommentContains(pr, \"and then use the command `\/csr unneeded` again\");\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ withdraw the csr\n+            csr.setState(Issue.State.CLOSED);\n+            csr.setProperty(\"resolution\", JSON.object().put(\"name\", \"Withdrawn\"));\n+\n+            \/\/ Indicate the PR doesn't require CSR, now it works\n@@ -482,3 +511,0 @@\n-\n-            \/\/ The bot should change the CSR link relationship from `csr for` to `relates to`\n-            assertEquals(\"relates to\", issue.links().get(0).relationship().orElseThrow());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":34,"deletions":8,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,2 +25,0 @@\n-import java.net.URI;\n-\n@@ -28,9 +26,0 @@\n-    private URI uri;\n-    private String title;\n-    private final String relationship;\n-    private String summary;\n-    private URI iconUrl;\n-    private String iconTitle;\n-    private URI statusIconUrl;\n-    private String statusIconTitle;\n-    private boolean resolved;\n@@ -38,0 +27,1 @@\n+    private final String relationship;\n@@ -44,40 +34,0 @@\n-    public IssueLinkBuilder uri(URI uri) {\n-        this.uri = uri;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder title(String title) {\n-        this.title = title;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder summary(String summary) {\n-        this.summary = summary;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder iconUrl(URI iconUrl) {\n-        this.iconUrl = iconUrl;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder iconTitle(String iconTitle) {\n-        this.iconTitle = iconTitle;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder statusIconUrl(URI statusIconUrl) {\n-        this.statusIconUrl = statusIconUrl;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder statusIconTitle(String statusIconTitle) {\n-        this.statusIconTitle = statusIconTitle;\n-        return this;\n-    }\n-\n-    public IssueLinkBuilder resolved(boolean resolved) {\n-        this.resolved = resolved;\n-        return this;\n-    }\n-\n@@ -85,1 +35,1 @@\n-        return new Link(uri, title, relationship, summary, iconUrl, iconTitle, statusIconUrl, statusIconTitle, resolved, linked);\n+        return new Link(null, null, relationship, null, null, null, null, null, false, linked);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/IssueLinkBuilder.java","additions":3,"deletions":53,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,12 +61,0 @@\n-    public static IssueLinkBuilder create(Link oldLink, String newRelationship) {\n-        return Link.create(oldLink.issue().orElse(null), newRelationship)\n-                .uri(oldLink.uri().orElse(null))\n-                .title(oldLink.title().orElse(null))\n-                .summary(oldLink.summary().orElse(null))\n-                .iconUrl(oldLink.iconUrl().orElse(null))\n-                .iconTitle(oldLink.iconTitle().orElse(null))\n-                .statusIconUrl(oldLink.statusIconUrl().orElse(null))\n-                .statusIconTitle(oldLink.statusIconTitle().orElse(null))\n-                .resolved(oldLink.resolved());\n-    }\n-\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Link.java","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"}]}