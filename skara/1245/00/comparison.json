{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n-    private final Set<String> hasCSRLabel = new HashSet<>();\n@@ -66,12 +65,0 @@\n-        for (var pr : prs) {\n-            if (!cache.needsUpdate(pr)) {\n-                continue;\n-            }\n-\n-            log.info(\"Checking CSR label for \" + describe(pr) + \"...\");\n-            if (pr.labelNames().contains(CSR_LABEL)) {\n-                hasCSRLabel.add(pr.id());\n-            } else {\n-                hasCSRLabel.remove(pr.id());\n-            }\n-        }\n@@ -80,1 +67,1 @@\n-            if (!hasCSRLabel.contains(pr.id())) {\n+            if (!cache.needsUpdate(pr)) {\n@@ -109,0 +96,3 @@\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            pr.addLabel(CSR_LABEL);\n+                        }\n@@ -114,0 +104,3 @@\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            pr.addLabel(CSR_LABEL);\n+                        }\n@@ -119,0 +112,3 @@\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            pr.addLabel(CSR_LABEL);\n+                        }\n@@ -124,0 +120,3 @@\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            pr.addLabel(CSR_LABEL);\n+                        }\n@@ -127,3 +126,4 @@\n-                    log.info(\"CSR closed and approved for \" + describe(pr) + \", removing CSR label\");\n-                    pr.removeLabel(CSR_LABEL);\n-                    hasCSRLabel.remove(pr.id());\n+                    if (pr.labelNames().contains(CSR_LABEL)) {\n+                        log.info(\"CSR closed and approved for \" + describe(pr) + \", removing CSR label\");\n+                        pr.removeLabel(CSR_LABEL);\n+                    }\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBot.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,0 +165,6 @@\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n@@ -171,1 +177,1 @@\n-            \/\/ The bot should have removed the CSR label\n+            \/\/ The bot should have kept the CSR label\n@@ -202,0 +208,6 @@\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n@@ -207,0 +219,3 @@\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -237,0 +252,6 @@\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n@@ -242,0 +263,3 @@\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.ArrayList;\n@@ -79,0 +80,2 @@\n+            \/\/ Change the CSR link relationship from `csr for` to `relates to`\n+            \/\/ so that the CSRBot won't add the `csr` label automatically.\n@@ -80,0 +83,19 @@\n+                var issueProject = bot.issueProject();\n+                var issue = org.openjdk.skara.vcs.openjdk.Issue.fromStringRelaxed(pr.title());\n+                if (issueProject != null && issue.isPresent()) {\n+                    var jbsIssue = issueProject.issue(issue.get().shortId());\n+                    if (jbsIssue.isPresent()) {\n+                        List<Link> csrLinks = new ArrayList<>();\n+                        for (var link : jbsIssue.get().links()) {\n+                            var relationship = link.relationship();\n+                            if (relationship.isPresent() && relationship.get().equals(\"csr for\")) {\n+                                csrLinks.add(link);\n+                            }\n+                        }\n+                        for (var link : csrLinks) {\n+                            jbsIssue.get().removeLink(link);\n+                            Link newLink = Link.create(link, \"relates to\").build();\n+                            jbsIssue.get().addLink(newLink);\n+                        }\n+                    }\n+                }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -418,0 +418,12 @@\n+\n+            \/\/ Don't require CSR\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message that a CSR is no longer needed\n+            assertLastCommentContains(pr, \"determined that a [CSR](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) request \" +\n+                    \"is not needed for this pull request.\");\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ The bot should change the CSR link relationship from `csr for` to `relates to`\n+            assertEquals(\"relates to\", issue.links().get(0).relationship().orElseThrow());\n@@ -461,0 +473,12 @@\n+\n+            \/\/ Don't require CSR\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message that a CSR is no longer needed\n+            assertLastCommentContains(pr, \"determined that a [CSR](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) request \" +\n+                    \"is not needed for this pull request.\");\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ The bot should change the CSR link relationship from `csr for` to `relates to`\n+            assertEquals(\"relates to\", issue.links().get(0).relationship().orElseThrow());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,2 @@\n+import java.net.URI;\n+\n@@ -26,1 +28,2 @@\n-    private final Issue linked;\n+    private URI uri;\n+    private String title;\n@@ -28,0 +31,7 @@\n+    private String summary;\n+    private URI iconUrl;\n+    private String iconTitle;\n+    private URI statusIconUrl;\n+    private String statusIconTitle;\n+    private boolean resolved;\n+    private final Issue linked;\n@@ -34,0 +44,40 @@\n+    public IssueLinkBuilder uri(URI uri) {\n+        this.uri = uri;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder title(String title) {\n+        this.title = title;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder summary(String summary) {\n+        this.summary = summary;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder iconUrl(URI iconUrl) {\n+        this.iconUrl = iconUrl;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder iconTitle(String iconTitle) {\n+        this.iconTitle = iconTitle;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder statusIconUrl(URI statusIconUrl) {\n+        this.statusIconUrl = statusIconUrl;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder statusIconTitle(String statusIconTitle) {\n+        this.statusIconTitle = statusIconTitle;\n+        return this;\n+    }\n+\n+    public IssueLinkBuilder resolved(boolean resolved) {\n+        this.resolved = resolved;\n+        return this;\n+    }\n+\n@@ -35,1 +85,1 @@\n-        return new Link(null, null, relationship, null, null, null, null, null, false, linked);\n+        return new Link(uri, title, relationship, summary, iconUrl, iconTitle, statusIconUrl, statusIconTitle, resolved, linked);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/IssueLinkBuilder.java","additions":53,"deletions":3,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,12 @@\n+    public static IssueLinkBuilder create(Link oldLink, String newRelationship) {\n+        return Link.create(oldLink.issue().orElse(null), newRelationship)\n+                .uri(oldLink.uri().orElse(null))\n+                .title(oldLink.title().orElse(null))\n+                .summary(oldLink.summary().orElse(null))\n+                .iconUrl(oldLink.iconUrl().orElse(null))\n+                .iconTitle(oldLink.iconTitle().orElse(null))\n+                .statusIconUrl(oldLink.statusIconUrl().orElse(null))\n+                .statusIconTitle(oldLink.statusIconTitle().orElse(null))\n+                .resolved(oldLink.resolved());\n+    }\n+\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Link.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}