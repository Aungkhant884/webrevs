{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n-    private final Set<String> hasCSRLabel = new HashSet<>();\n@@ -66,12 +65,0 @@\n-        for (var pr : prs) {\n-            if (!cache.needsUpdate(pr)) {\n-                continue;\n-            }\n-\n-            log.info(\"Checking CSR label for \" + describe(pr) + \"...\");\n-            if (pr.labelNames().contains(CSR_LABEL)) {\n-                hasCSRLabel.add(pr.id());\n-            } else {\n-                hasCSRLabel.remove(pr.id());\n-            }\n-        }\n@@ -80,1 +67,1 @@\n-            if (!hasCSRLabel.contains(pr.id())) {\n+            if (!cache.needsUpdate(pr)) {\n@@ -108,1 +95,6 @@\n-                        log.info(\"CSR issue resolution is null for \" + describe(pr) + \", not removing CSR label\");\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            log.info(\"CSR issue resolution is null for \" + describe(pr) + \", adding the CSR label\");\n+                            pr.addLabel(CSR_LABEL);\n+                        } else {\n+                            log.info(\"CSR issue resolution is null for \" + describe(pr) + \", not removing the CSR label\");\n+                        }\n@@ -113,1 +105,6 @@\n-                        log.info(\"CSR issue resolution name is null for \" + describe(pr) + \", not removing CSR label\");\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            log.info(\"CSR issue resolution name is null for \" + describe(pr) + \", adding the CSR label\");\n+                            pr.addLabel(CSR_LABEL);\n+                        } else {\n+                            log.info(\"CSR issue resolution name is null for \" + describe(pr) + \", not removing the CSR label\");\n+                        }\n@@ -118,1 +115,6 @@\n-                        log.info(\"CSR issue state is not closed for \" + describe(pr) + \", not removing CSR label\");\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            log.info(\"CSR issue state is not closed for \" + describe(pr) + \", adding the CSR label\");\n+                            pr.addLabel(CSR_LABEL);\n+                        } else {\n+                            log.info(\"CSR issue state is not closed for \" + describe(pr) + \", not removing the CSR label\");\n+                        }\n@@ -123,1 +125,6 @@\n-                        log.info(\"CSR issue resolution is not 'Approved' for \" + describe(pr) + \", not removing CSR label\");\n+                        if (!pr.labelNames().contains(CSR_LABEL)) {\n+                            log.info(\"CSR issue resolution is not 'Approved' for \" + describe(pr) + \", adding the CSR label\");\n+                            pr.addLabel(CSR_LABEL);\n+                        } else {\n+                            log.info(\"CSR issue resolution is not 'Approved' for \" + describe(pr) + \", not removing the CSR label\");\n+                        }\n@@ -127,3 +134,4 @@\n-                    log.info(\"CSR closed and approved for \" + describe(pr) + \", removing CSR label\");\n-                    pr.removeLabel(CSR_LABEL);\n-                    hasCSRLabel.remove(pr.id());\n+                    if (pr.labelNames().contains(CSR_LABEL)) {\n+                        log.info(\"CSR closed and approved for \" + describe(pr) + \", removing CSR label\");\n+                        pr.removeLabel(CSR_LABEL);\n+                    }\n","filename":"bots\/csr\/src\/main\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBot.java","additions":30,"deletions":22,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,2 +165,5 @@\n-            \/\/ Add CSR label\n-            pr.addLabel(\"csr\");\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The bot added the csr label automatically\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -171,1 +174,1 @@\n-            \/\/ The bot should have removed the CSR label\n+            \/\/ The bot should have kept the CSR label\n@@ -202,2 +205,5 @@\n-            \/\/ Add CSR label\n-            pr.addLabel(\"csr\");\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The bot added the csr label automatically\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -207,0 +213,3 @@\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -237,2 +246,5 @@\n-            \/\/ Add CSR label\n-            pr.addLabel(\"csr\");\n+            \/\/ Run bot\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ The bot added the csr label automatically\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n@@ -242,0 +254,3 @@\n+\n+            \/\/ The bot should have kept the CSR label\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n","filename":"bots\/csr\/src\/test\/java\/org\/openjdk\/skara\/bots\/csr\/CSRBotTests.java","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -79,0 +79,2 @@\n+            \/\/ Remove the csr label if the issue has no csr or the csr has been withdrawn.\n+            \/\/ If the issue has a non-withdrawn csr, the bot should direct the user to withdraw the csr firstly.\n@@ -80,0 +82,27 @@\n+                var issueProject = bot.issueProject();\n+                var issue = org.openjdk.skara.vcs.openjdk.Issue.fromStringRelaxed(pr.title());\n+                if (issueProject != null && issue.isPresent()) {\n+                    var jbsIssue = issueProject.issue(issue.get().shortId());\n+                    if (jbsIssue.isPresent()) {\n+                        for (var link : jbsIssue.get().links()) {\n+                            var relationship = link.relationship();\n+                            if (relationship.isPresent() && relationship.get().equals(\"csr for\")) {\n+                                var csrIssue = link.issue().orElse(null);\n+                                if (csrIssue != null) {\n+                                    var resolution = csrIssue.properties().get(\"resolution\");\n+                                    if (resolution == null || resolution.isNull()\n+                                            || resolution.get(\"name\") == null || resolution.get(\"name\").isNull()\n+                                            || csrIssue.state() != Issue.State.CLOSED\n+                                            || !resolution.get(\"name\").asString().equals(\"Withdrawn\")) {\n+                                        reply.println(\"the issue for this pull request, [\" + jbsIssue.get().id() + \"](\" + jbsIssue.get().webUrl() + \"), has \" +\n+                                                \"a non-withdrawn CSR request: [\" + csrIssue.id() + \"](\" + csrIssue.webUrl() + \"). \");\n+                                        reply.println(\"So you can't directly indicate that a CSR request is not needed for this pull request. \");\n+                                        reply.println(\"Please firstly withdraw the CSR request: [\" + csrIssue.id() + \"](\" + csrIssue.webUrl() + \"), \"\n+                                                + \"and then use the command `\/csr unneeded` again\");\n+                                        return;\n+                                    }\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommand.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -418,0 +418,25 @@\n+\n+            \/\/ Indicate the PR doesn't require CSR, but it doesn't work.\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message which directs the user to withdraw the csr firstly.\n+            assertLastCommentContains(pr, \"the issue for this pull request\");\n+            assertLastCommentContains(pr, \"a non-withdrawn CSR request\");\n+            assertLastCommentContains(pr, \"So you can't directly indicate that a CSR request is not needed for this pull request\");\n+            assertLastCommentContains(pr, \"Please firstly withdraw the CSR request\");\n+            assertLastCommentContains(pr, \"and then use the command `\/csr unneeded` again\");\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ withdraw the csr\n+            csr.setState(Issue.State.CLOSED);\n+            csr.setProperty(\"resolution\", JSON.object().put(\"name\", \"Withdrawn\"));\n+\n+            \/\/ Indicate the PR doesn't require CSR, now it works\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message that a CSR is no longer needed\n+            assertLastCommentContains(pr, \"determined that a [CSR](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) request \" +\n+                    \"is not needed for this pull request.\");\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n@@ -461,0 +486,25 @@\n+\n+            \/\/ Indicate the PR doesn't require CSR, but it doesn't work.\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message which directs the user to withdraw the csr firstly.\n+            assertLastCommentContains(pr, \"the issue for this pull request\");\n+            assertLastCommentContains(pr, \"a non-withdrawn CSR request\");\n+            assertLastCommentContains(pr, \"So you can't directly indicate that a CSR request is not needed for this pull request\");\n+            assertLastCommentContains(pr, \"Please firstly withdraw the CSR request\");\n+            assertLastCommentContains(pr, \"and then use the command `\/csr unneeded` again\");\n+            assertTrue(pr.labelNames().contains(\"csr\"));\n+\n+            \/\/ withdraw the csr\n+            csr.setState(Issue.State.CLOSED);\n+            csr.setProperty(\"resolution\", JSON.object().put(\"name\", \"Withdrawn\"));\n+\n+            \/\/ Indicate the PR doesn't require CSR, now it works\n+            prAsReviewer.addComment(\"\/csr unneeded\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+\n+            \/\/ The bot should reply with a message that a CSR is no longer needed\n+            assertLastCommentContains(pr, \"determined that a [CSR](https:\/\/wiki.openjdk.java.net\/display\/csr\/Main) request \" +\n+                    \"is not needed for this pull request.\");\n+            assertFalse(pr.labelNames().contains(\"csr\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRTests.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"}]}