{"files":[{"patch":"@@ -47,0 +47,1 @@\n+import static org.openjdk.skara.forge.PullRequestUtils.mergeSourcePattern;\n@@ -303,0 +304,25 @@\n+            \/\/ If source repo of Merge-style pr is not allowed, reply warning to the user and return\n+            if (PullRequestUtils.isMerge(pr)) {\n+                var sourceMatcher = mergeSourcePattern.matcher(pr.title());\n+                if (sourceMatcher.matches()) {\n+                    var source = sourceMatcher.group(1);\n+                    if (source.contains(\":\")) {\n+                        var repoName = source.split(\":\", 2)[0];\n+                        if (!repoName.contains(\"\/\")) {\n+                            repoName = Path.of(pr.repository().name()).resolveSibling(repoName).toString();\n+                        }\n+                        \/\/ Check repo name\n+                        var mergeSources = bot.mergeSources();\n+                        if (!mergeSources.isEmpty() && !mergeSources.contains(repoName) && !pr.repository().name().equals(repoName)) {\n+                            var mergeSourceInvalidText = \"<!-- merge error -->\\n\" +\n+                                    \":warning: @\" + pr.author().username() + \" \" + repoName +\n+                                    \" can not be source repo for merge-style pull requests in this repository.\\n\" +\n+                                    \"List of valid source repositories: \\n\" +\n+                                    String.join(\", \", bot.mergeSources().stream().sorted().toList()) + \".\";\n+                            addErrorComment(mergeSourceInvalidText, comments);\n+                            return List.of();\n+                        }\n+                    }\n+                }\n+            }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+    private final Set<String> mergeSources;\n@@ -85,1 +86,1 @@\n-                   boolean enableMerge) {\n+                   boolean enableMerge, Set<String> mergeSources) {\n@@ -116,0 +117,1 @@\n+        this.mergeSources = mergeSources;\n@@ -305,0 +307,4 @@\n+    public Set<String> mergeSources() {\n+        return mergeSources;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+    private Set<String> mergeSources = Set.of();\n@@ -218,0 +219,5 @@\n+    public PullRequestBotBuilder mergeSources(Set<String> mergeSources) {\n+        this.mergeSources = mergeSources;\n+        return this;\n+    }\n+\n@@ -226,1 +232,1 @@\n-                                  processPR, processCommit, enableMerge);\n+                                  processPR, processCommit, enableMerge, mergeSources);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -211,0 +211,7 @@\n+            if (repo.value().contains(\"mergeSources\")) {\n+                var mergeSources = repo.value().get(\"mergeSources\").stream()\n+                        .map(JSONValue::asString)\n+                        .collect(Collectors.toSet());\n+                botBuilder.mergeSources(mergeSources);\n+            }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1700,0 +1700,32 @@\n+\n+    @Test\n+    void mergeSourceInvalid(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+\n+            var author = credentials.getHostedRepository(\"openjdk\/jdk\");\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addCommitter(author.forge().currentUser().id());\n+            var mergeBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .mergeSources(Set.of(\"openjdk\/playground\", \"openjdk\/skara\"))\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"Merge openjdk\/test:other_\/-1.2\");\n+\n+            \/\/ Let the bot check the status\n+            TestBotRunner.runPeriodicItems(mergeBot);\n+            var comment = pr.store().comments().get(pr.store().comments().size() - 1);\n+            assertEquals(1, pr.store().comments().size());\n+            assertTrue(comment.body().contains(\"can not be source repo for merge-style pull requests in this repository.\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/MergeTests.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -82,1 +82,5 @@\n-                          \"reviewCleanBackport\": true\n+                          \"reviewCleanBackport\": true,\n+                          \"mergeSources\": [\n+                            \"openjdk\/playground\",\n+                            \"openjdk\/skara\",\n+                          ]\n@@ -179,0 +183,2 @@\n+            assertTrue(pullRequestBot3.mergeSources().contains(\"openjdk\/skara\"));\n+            assertTrue(pullRequestBot3.mergeSources().contains(\"openjdk\/playground\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactoryTest.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private final static Pattern mergeSourcePattern = Pattern.compile(\"^Merge ([-\/.\\\\w:+]+)$\");\n+    public final static Pattern mergeSourcePattern = Pattern.compile(\"^Merge ([-\/.\\\\w:+]+)$\");\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequestUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}