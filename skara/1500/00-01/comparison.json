{"files":[{"patch":"@@ -449,0 +449,1 @@\n+            isClean = true;\n@@ -451,2 +452,6 @@\n-                if (commitMessageBody.get().equals(\"\")) {\n-                    isClean = true;\n+                var lines = commitMessageBody.get();\n+                for (int i = 0; i < lines.size() - 1; i++) {\n+                    if (lines.get(i).startsWith(\"diff\") && lines.get(i + 1).startsWith(\"index\")) {\n+                        isClean = false;\n+                        break;\n+                    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1648,1 +1648,1 @@\n-            localRepo.commit(\"xxx\", \"xxx\", \"xxx@gmail.com\");\n+            localRepo.commit(\"updated\", \"test\", \"test@test.com\");\n@@ -1651,1 +1651,1 @@\n-            var mergeHash = localRepo.commit(\"Merge commit\", \"some\", \"some@one\");\n+            var mergeHash = localRepo.commit(\"Merge commit\\n\\n This is Body\", \"some\", \"some@one\");\n@@ -1689,1 +1689,1 @@\n-            var mergeHash = localRepo.commit(\"merged\", \"xxx\", \"xxx@gmail.com\");\n+            var mergeHash = localRepo.commit(\"merged\\n\\n This is Body\", \"xxx\", \"xxx@gmail.com\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/MergeTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-    Optional<String> commitMessageBody(Hash hash);\n+    Optional<List<String>> commitMessageBody(Hash hash);\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1732,1 +1732,1 @@\n-    public Optional<String> commitMessageBody(Hash hash) {\n+    public Optional<List<String>> commitMessageBody(Hash hash) {\n@@ -1735,1 +1735,1 @@\n-            return res.status() == 0 ? Optional.of(String.join(\"\", res.stdout())) : Optional.empty();\n+            return res.status() == 0 ? Optional.of(res.stdout()) : Optional.empty();\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1528,1 +1528,1 @@\n-    public Optional<String> commitMessageBody(Hash hash) {\n+    public Optional<List<String>> commitMessageBody(Hash hash) {\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}