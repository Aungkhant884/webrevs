{"files":[{"patch":"@@ -176,1 +176,9 @@\n-            reply.print(\"The following commits have been pushed to \");\n+            reply.print(\"Since your change was applied there \");\n+            if (divergingCommits.size() == 1) {\n+                reply.print(\"has been 1 commit \");\n+            } else {\n+                reply.print(\"have been \");\n+                reply.print(divergingCommits.size());\n+                reply.print(\" commits \");\n+            }\n+            reply.print(\"pushed to the `\");\n@@ -178,2 +186,14 @@\n-            reply.println(\" since your change was applied:\");\n-            divergingCommits.forEach(c -> reply.println(\" * \" + c.hash().hex() + \": \" + c.message().get(0)));\n+            reply.print(\"` branch:\\n\\n\");\n+            divergingCommits.stream()\n+                            .limit(10)\n+                            .forEach(c -> reply.println(\" * \" + c.hash().hex() + \": \" + c.message().get(0)));\n+            if (divergingCommits.size() > 10) {\n+                try {\n+                    var baseHash = localRepo.mergeBase(pr.targetHash(), pr.headHash());\n+                    reply.println(\" * ... and \" + (divergingCommits.size() - 10) + \" more: \" +\n+                                          pr.repository().webUrl(baseHash.hex(), pr.targetRef()));\n+                } catch (IOException e) {\n+                    throw new UncheckedIOException(e);\n+                }\n+            }\n+            reply.println();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -154,2 +154,5 @@\n-                reply.println(rebaseMessage.toString());\n-                reply.println(\"Pushed as commit \" + localHash.hex() + \".\");\n+                var finalRebaseMessage = rebaseMessage.toString();\n+                if (!finalRebaseMessage.isBlank()) {\n+                    reply.println(rebaseMessage.toString());\n+                }\n+                reply.println(\"Pushed as commit \" + localHash.hex() + \". :bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateCommand.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -128,2 +128,5 @@\n-                reply.println(rebaseMessage.toString());\n-                reply.println(\"Pushed as commit \" + localHash.hex() + \".\");\n+                var finalRebaseMessage = rebaseMessage.toString();\n+                if (!finalRebaseMessage.isBlank()) {\n+                    reply.println(rebaseMessage.toString());\n+                }\n+                reply.println(\"Pushed as commit \" + localHash.hex() + \". :bulb: You may see a message that your pull request was closed with unmerged commits. This can be safely ignored.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorCommand.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}