{"files":[{"patch":"@@ -3,0 +3,1 @@\n+import org.openjdk.skara.forge.HostedRepositoryPool;\n@@ -4,0 +5,1 @@\n+import org.openjdk.skara.forge.PullRequestUtils;\n@@ -6,0 +8,1 @@\n+import java.io.IOException;\n@@ -7,0 +10,1 @@\n+import java.io.UncheckedIOException;\n@@ -8,1 +12,1 @@\n-import java.time.Instant;\n+import java.util.HashSet;\n@@ -19,1 +23,16 @@\n-        bot.scheduleRecheckAt(pr, Instant.now());\n+        try {\n+            var workItem = new CheckWorkItem(bot, pr, e -> {});\n+\n+            var path = scratchPath.resolve(\"check\").resolve(pr.repository().name());\n+            var seedPath = bot.seedStorage().orElse(scratchPath.resolve(\"seeds\"));\n+            var hostedRepositoryPool = new HostedRepositoryPool(seedPath);\n+            var localRepo = PullRequestUtils.materialize(hostedRepositoryPool, pr, path);\n+\n+            var allReviews = pr.reviews();\n+            var activeReviews = CheckablePullRequest.filterActiveReviews(allReviews);\n+            var activeLabels = new HashSet<>(pr.labels());\n+\n+            CheckRun.execute(workItem, pr, localRepo, allComments, allReviews, activeReviews, activeLabels, censusInstance, bot.ignoreStaleReviews());\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckCommand.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"}]}