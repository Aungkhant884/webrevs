{"files":[{"patch":"@@ -35,1 +35,1 @@\n-    private final static Pattern jdkVersionPattern = Pattern.compile(\"(5\\\\.0|[1-9][0-9]?)(u([0-9]{1,3}))?$\");\n+    private final static Pattern jdkVersionPattern = Pattern.compile(\"(5\\\\.0|[1-9][0-9]?)(u([0-9]{1,3}))?(?:-(.*))?$\");\n@@ -59,0 +59,4 @@\n+                if (legacyMatcher.groupCount() >= 4 && legacyMatcher.group(4) != null) {\n+                    finalComponents.add(null);\n+                    finalComponents.add(legacyMatcher.group(4));\n+                }\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -171,0 +171,6 @@\n+            backport.setProperty(\"fixVersions\", JSON.array().add(\"openjfx17-pool\"));\n+            assertEquals(backport, Backports.findIssue(issue, JdkVersion.parse(\"openjfx17.0.1\").orElseThrow()).orElseThrow());\n+\n+            backportFoo.setProperty(\"fixVersions\", JSON.array().add(\"8-pool-foo\"));\n+            assertEquals(backportFoo, Backports.findIssue(issue, JdkVersion.parse(\"8u333-foo\").orElseThrow()).orElseThrow());\n+\n@@ -665,1 +671,1 @@\n-            backports.addBackports(\"8u301\", \"8u281-b31\");\n+            backports.addBackports(\"8u301\", \"8u281\/b31\");\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -136,0 +136,6 @@\n+\n+    @Test\n+    void legacyOpt() {\n+        assertEquals(List.of(\"8\", \"333\"), from(\"8u333-foo\").components());\n+        assertEquals(\"foo\", from(\"8u333-foo\").opt().orElseThrow());\n+    }\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/JdkVersionTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}