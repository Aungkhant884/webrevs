{"files":[{"patch":"@@ -160,0 +160,7 @@\n+                \/\/ Check that applying the change actually created a diff\n+                if (localRepo.diff(head).patches().isEmpty()) {\n+                    reply.println(\"Could **not** apply backport `\" + hash.abbreviate() + \"` to \" +\n+                            \"[\" + repoName + \"](\" + targetRepo.webUrl() + \") because the change is already present in the target.\");\n+                    localRepo.reset(head, true);\n+                    return;\n+                }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommand.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -378,0 +378,43 @@\n+\n+    @Test\n+    void alreadyPresent(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var bot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                    .seedStorage(seedFolder)\n+                    .forks(Map.of(author.name(), author))\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+            var masterHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Make a change in another branch\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\");\n+\n+            \/\/ Make the same change in the master branch\n+            localRepo.push(editHash, author.url(), \"master\");\n+\n+            \/\/ Add a backport command\n+            author.addCommitComment(editHash, \"\/backport \" + author.name());\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            var recentCommitComments = author.recentCommitComments();\n+            assertEquals(2, recentCommitComments.size());\n+            var botReply = recentCommitComments.get(0);\n+            assertTrue(botReply.body().contains(\"Could **not** apply backport\"));\n+            assertTrue(botReply.body().contains(\"because the change is already present in the target.\"));\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommitCommandTests.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"}]}