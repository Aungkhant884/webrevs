{"files":[{"patch":"@@ -249,1 +249,1 @@\n-            assertTrue(botReply.body().contains(\"could **not** automatically backport\"));\n+            assertTrue(botReply.body().contains(\"Could **not** automatically backport\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommitCommandTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-            assertLastCommentContains(pr, \"can only mark [backport pull requests]\");\n+            assertLastCommentContains(pr, \"Can only mark [backport pull requests]\");\n@@ -143,1 +143,1 @@\n-            assertLastCommentContains(pr, \"this backport pull request is already marked as clean\");\n+            assertLastCommentContains(pr, \"This backport pull request is already marked as clean\");\n@@ -218,1 +218,1 @@\n-            assertLastCommentContains(pr, \"this backport pull request is now marked as clean\");\n+            assertLastCommentContains(pr, \"This backport pull request is now marked as clean\");\n@@ -296,1 +296,1 @@\n-            assertLastCommentContains(pr, \"only OpenJDK [Committers]\");\n+            assertLastCommentContains(pr, \"Only OpenJDK [Committers]\");\n@@ -341,1 +341,1 @@\n-            assertLastCommentContains(pr, \"can only mark [backport pull requests]\");\n+            assertLastCommentContains(pr, \"Can only mark [backport pull requests]\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommandTests.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-            assertLastCommentContains(pr, \"this pull request is now open\");\n+            assertLastCommentContains(pr, \"This pull request is now open\");\n@@ -122,1 +122,1 @@\n-            assertLastCommentContains(prAsOther, \"only the pull request author can set the pull request state to \\\"open\\\"\");\n+            assertLastCommentContains(prAsOther, \"Only the pull request author can set the pull request state to \\\"open\\\"\");\n@@ -160,1 +160,1 @@\n-            assertLastCommentContains(pr, \"this pull request is already open\");\n+            assertLastCommentContains(pr, \"This pull request is already open\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/OpenCommandTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-            assertTrue(botReply.body().contains(\"a tag with name `v1.0` already exists\"));\n+            assertTrue(botReply.body().contains(\"A tag with name `v1.0` already exists\"));\n@@ -250,1 +250,1 @@\n-            assertTrue(botReply.body().contains(\"only integrators for this repository are allowed to use the `\/tag` command\"));\n+            assertTrue(botReply.body().contains(\"Only integrators for this repository are allowed to use the `\/tag` command\"));\n@@ -296,1 +296,1 @@\n-            assertTrue(botReply.body().contains(\"the given tag name `bar` is not of the form `foo`\"));\n+            assertTrue(botReply.body().contains(\"The given tag name `bar` is not of the form `foo`\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/TagCommitCommandTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}