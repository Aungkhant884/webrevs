{"files":[{"patch":"@@ -61,1 +61,0 @@\n-        var username = command.user().username();\n@@ -63,1 +62,1 @@\n-            reply.println(\"@\" + username + \" only OpenJDK [contributors](https:\/\/openjdk.java.net\/bylaws#contributor) can use the `\/backport` command\");\n+            reply.println(\"Only OpenJDK [contributors](https:\/\/openjdk.java.net\/bylaws#contributor) can use the `\/backport` command\");\n@@ -95,1 +94,1 @@\n-            reply.println(\"@\" + username + \" the target repository `\" + repoNameArg + \"` is not a valid target for backports. \");\n+            reply.println(\"The target repository `\" + repoNameArg + \"` is not a valid target for backports. \");\n@@ -107,1 +106,1 @@\n-            reply.println(\"@\" + username + \" the target branch `\" + targetBranchName + \"` does not exist\");\n+            reply.println(\"The target branch `\" + targetBranchName + \"` does not exist\");\n@@ -115,1 +114,1 @@\n-            var backportBranchName = username + \"-backport-\" + hash.abbreviate();\n+            var backportBranchName = command.user().username() + \"-backport-\" + hash.abbreviate();\n@@ -131,1 +130,1 @@\n-                    lines.add(\"@\" + username + \" could **not** automatically backport `\" + hash.abbreviate() + \"` to \" +\n+                    lines.add(\"Could **not** automatically backport `\" + hash.abbreviate() + \"` to \" +\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommand.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-        var username = command.user().username();\n@@ -60,1 +59,1 @@\n-            reply.println(\"@\" + username + \" only OpenJDK [Committers](https:\/\/openjdk.java.net\/bylaws#committer) can use the `\/clean` command\");\n+            reply.println(\"Only OpenJDK [Committers](https:\/\/openjdk.java.net\/bylaws#committer) can use the `\/clean` command\");\n@@ -65,1 +64,1 @@\n-            reply.println(\"@\" + username + \" can only mark [backport pull requests]\" +\n+            reply.println(\"Can only mark [backport pull requests]\" +\n@@ -72,1 +71,1 @@\n-            reply.println(\"@\" + username + \" this backport pull request is already marked as clean\");\n+            reply.println(\"This backport pull request is already marked as clean\");\n@@ -77,1 +76,1 @@\n-        reply.println(\"@\" + username + \" this backport pull request is now marked as clean\");\n+        reply.println(\"This backport pull request is now marked as clean\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommand.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -123,0 +123,3 @@\n+        printer.print(\"@\");\n+        printer.print(command.user().username());\n+        printer.print(\" \");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandWorkItem.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,3 +59,2 @@\n-        var user = command.user();\n-        if (!user.equals(pr.author())) {\n-            reply.println(\"@\" + user + \" only the pull request author can set the pull request state to \\\"open\\\"\");\n+        if (!command.user().equals(pr.author())) {\n+            reply.println(\"Only the pull request author can set the pull request state to \\\"open\\\"\");\n@@ -66,1 +65,1 @@\n-            reply.println(\"@\" + user + \" this pull request is already open\");\n+            reply.println(\"This pull request is already open\");\n@@ -72,1 +71,1 @@\n-        reply.println(\"@\" + user + \" this pull request is now open\");\n+        reply.println(\"This pull request is now open\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/OpenCommand.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-            var username = command.user().username();\n@@ -66,1 +65,1 @@\n-                reply.println(\"@\" + username + \" only OpenJDK [contributors](https:\/\/openjdk.java.net\/bylaws#contributor) can use the `\/tag` command.\");\n+                reply.println(\"Only OpenJDK [contributors](https:\/\/openjdk.java.net\/bylaws#contributor) can use the `\/tag` command.\");\n@@ -69,2 +68,2 @@\n-            if (!bot.integrators().contains(username)) {\n-                reply.println(\"@\" + username + \" only integrators for this repository are allowed to use the `\/tag` command.\");\n+            if (!bot.integrators().contains(command.user().username())) {\n+                reply.println(\"Only integrators for this repository are allowed to use the `\/tag` command.\");\n@@ -98,1 +97,1 @@\n-                reply.println(\"@\" + username + \" a tag with name `\" + tagName + \"` already exists that refers to commit [\" + hash.abbreviate() + \"](\" + hashUrl + \"].\");\n+                reply.println(\"A tag with name `\" + tagName + \"` already exists that refers to commit [\" + hash.abbreviate() + \"](\" + hashUrl + \"].\");\n@@ -105,1 +104,1 @@\n-                reply.println(\"@\" + username + \" the given tag name `\" + tagName + \"` is not of the form `\" + tagPattern + \"`.\");\n+                reply.println(\"The given tag name `\" + tagName + \"` is not of the form `\" + tagPattern + \"`.\");\n@@ -115,1 +114,1 @@\n-            reply.println(\"@\" + username + \" the tag [\" + tag.name() + \"](\" + bot.repo().webUrl(tag) + \") was successfully created.\");\n+            reply.println(\"The tag [\" + tag.name() + \"](\" + bot.repo().webUrl(tag) + \") was successfully created.\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/TagCommand.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}