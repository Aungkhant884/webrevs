{"files":[{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module {\n+    name = 'org.openjdk.skara.bots.censussync'\n+    test {\n+        requires 'org.junit.jupiter.api'\n+        requires 'org.openjdk.skara.test'\n+        opens 'org.openjdk.skara.bots.censussync' to 'org.junit.platform.commons'\n+    }\n+}\n+\n+dependencies {\n+    implementation project(':bot')\n+    implementation project(':ci')\n+    implementation project(':vcs')\n+    implementation project(':host')\n+    implementation project(':forge')\n+    implementation project(':issuetracker')\n+    implementation project(':census')\n+    implementation project(':process')\n+    implementation project(':json')\n+    implementation project(':network')\n+    implementation project(':storage')\n+\n+    testImplementation project(':test')\n+}\n","filename":"bots\/censussync\/build.gradle","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module org.openjdk.skara.bots.censusssync {\n+    requires org.openjdk.skara.vcs;\n+    requires org.openjdk.skara.host;\n+    requires org.openjdk.skara.network;\n+    requires org.openjdk.skara.bot;\n+    requires org.openjdk.skara.process;\n+    requires org.openjdk.skara.storage;\n+    requires java.logging;\n+\n+    provides org.openjdk.skara.bot.BotFactory with org.openjdk.skara.bots.censussync.CensusSyncBotFactory;\n+}\n","filename":"bots\/censussync\/src\/main\/java\/module-info.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,141 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.skara.bots.censussync;\n+\n+import org.openjdk.skara.bot.*;\n+import org.openjdk.skara.census.Census;\n+import org.openjdk.skara.forge.*;\n+import org.openjdk.skara.vcs.*;\n+import org.openjdk.skara.vcs.openjdk.convert.*;\n+import org.openjdk.skara.storage.StorageBuilder;\n+\n+import java.io.*;\n+import java.util.*;\n+import java.util.stream.Collectors;\n+import java.nio.file.*;\n+import java.nio.charset.StandardCharsets;\n+import java.net.URI;\n+import java.net.URLEncoder;\n+import java.util.logging.Logger;\n+import java.time.*;\n+import java.time.format.*;\n+\n+public class CensusSyncBot implements Bot, WorkItem {\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");;\n+    private final HostedRepository from;\n+    private final HostedRepository to;\n+    private final int version;\n+    private Hash last;\n+\n+    CensusSyncBot(HostedRepository from, HostedRepository to, int version) {\n+        this.from = from;\n+        this.to = to;\n+        this.version = version;\n+        this.last = null;\n+    }\n+\n+    @Override\n+    public boolean concurrentWith(WorkItem other) {\n+        if (!(other instanceof CensusSyncBot)) {\n+            return true;\n+        }\n+        var o = (CensusSyncBot) other;\n+        return !o.to.equals(to);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CensusSyncBot(\" + from.name() + \"->\" + to.name() + \"@\" + version + \")\";\n+    }\n+\n+    @Override\n+    public List<WorkItem> getPeriodicItems() {\n+        return List.of(this);\n+    }\n+\n+    @Override\n+    public Collection<WorkItem> run(Path scratch) {\n+        try {\n+            var fromDir = scratch.resolve(\"from.git\");\n+            var fromRepo = Repository.materialize(fromDir, from.url(), \"master\");\n+            if (last != null && last.equals(fromRepo.head())) {\n+                \/\/ Nothing to do\n+                return List.of();\n+            }\n+\n+            var census = Census.parse(fromDir);\n+\n+            var toDir = scratch.resolve(\"to.git\");\n+            var toRepo = Repository.materialize(toDir, to.url(), \"master\");\n+\n+            var censusXML = toRepo.root().resolve(\"census.xml\");\n+            if (!Files.exists(censusXML)) {\n+                Files.createFile(censusXML);\n+            }\n+            try (var file = new PrintWriter(Files.newBufferedWriter(censusXML))) {\n+                file.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\");\n+                var formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'H:m:sZ\");\n+                file.println(\"<census time=\\\"\" + ZonedDateTime.now().format(formatter) + \"\\\">\");\n+                for (var contributor : census.contributors()) {\n+                    file.println(\"<person name=\\\"\" + contributor.username() + \"\\\">\");\n+                    file.println(\"  <full-name>\" + contributor.fullName().orElse(\"\") + \"<\/full-name>\");\n+                    file.println(\"<\/person>\");\n+                }\n+                for (var group : census.groups()) {\n+                    file.println(\"<group name=\\\"\" + group.name() + \"\\\">\");\n+                    file.println(\"  <full-name>\" + group.fullName() + \"<\/full-name>\");\n+                    file.println(\"  <person ref=\\\"\" + group.lead().username() + \"\\\" role=\\\"lead\\\" \/>\");\n+                    for (var member : group.members()) {\n+                        if (!member.username().equals(group.lead().username())) {\n+                            file.println(\"  <person ref=\\\"\" + member.username() + \"\\\" \/>\");\n+                        }\n+                    }\n+                    file.println(\"<\/group>\");\n+                }\n+                for (var project : census.projects()) {\n+                    file.println(\"<project name=\\\"\" + project.name() + \"\\\">\");\n+                    file.println(\"  <full-name>\" + project.fullName() + \"<\/full-name>\");\n+                    file.println(\"  <sponsor ref=\\\"\" + project.sponsor().name() + \"\\\" \/>\");\n+\n+                    var roles = project.roles(version);\n+                    for (var role : roles.keySet()) {\n+                        for (var member : roles.get(role)) {\n+                            file.println(\"  <person role=\\\"\" + role + \"\\\" ref=\\\"\" + member.username() + \"\\\" \/>\");\n+                        }\n+                    }\n+\n+                    file.println(\"<\/project>\");\n+                }\n+                file.println(\"<\/census>\");\n+            }\n+            toRepo.add(censusXML);\n+            var head = toRepo.commit(\"Updated census.xml\", \"duke\", \"duke@openjdk.org\");\n+            toRepo.push(head, to.url(), \"master\", false);\n+            last = fromRepo.head();\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+        return List.of();\n+    }\n+}\n","filename":"bots\/censussync\/src\/main\/java\/org\/openjdk\/skara\/bots\/censussync\/CensusSyncBot.java","additions":141,"deletions":0,"binary":false,"changes":141,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.censussync;\n+\n+import org.openjdk.skara.bot.*;\n+import org.openjdk.skara.vcs.*;\n+import org.openjdk.skara.vcs.openjdk.convert.Mark;\n+\n+import java.util.*;\n+import java.net.URI;\n+import java.nio.file.Path;\n+import java.util.logging.Logger;\n+\n+public class CensusSyncBotFactory implements BotFactory {\n+    private static final Logger log = Logger.getLogger(\"org.openjdk.skara.bots\");\n+\n+    @Override\n+    public String name() {\n+        return \"censussync\";\n+    }\n+\n+    @Override\n+    public List<Bot> create(BotConfiguration configuration) {\n+        var bots = new ArrayList<Bot>();\n+        var specific = configuration.specific();\n+        for (var spec : specific.get(\"mirrors\").asArray()) {\n+            var from = configuration.repository(spec.get(\"from\").asString());\n+            var to = configuration.repository(spec.get(\"to\").asString());\n+            var version = spec.get(\"version\").asInt();\n+            bots.add(new CensusSyncBot(from, to, version));\n+        }\n+        return bots;\n+    }\n+}\n","filename":"bots\/censussync\/src\/main\/java\/org\/openjdk\/skara\/bots\/censussync\/CensusSyncBotFactory.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -53,0 +53,1 @@\n+    implementation project(':bots:censussync')\n","filename":"bots\/cli\/build.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -113,0 +113,10 @@\n+    public Map<String, Set<Contributor>> roles(int version) {\n+        var res = new HashMap<String, Set<Contributor>>();\n+        var lead = lead(version);\n+        res.put(\"lead\", lead == null ? Set.of() : Set.of(lead));\n+        res.put(\"reviewer\", members(reviewers, version));\n+        res.put(\"comitter\", members(committers, version));\n+        res.put(\"author\", members(authors, version));\n+        return res;\n+    }\n+\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Project.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+include 'bots:censussync'\n","filename":"settings.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}