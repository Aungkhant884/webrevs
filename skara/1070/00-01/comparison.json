{"files":[{"patch":"@@ -165,6 +165,5 @@\n-                var writer = new StringWriter();\n-                var printer = new PrintWriter(writer);\n-                printer.println(String.format(commandReplyMarker, command.id()));\n-                printer.println(\"@\" + command.user().username() +\n-                                \" there is no `.jcheck\/conf` present at revision \" +\n-                                commit.hash().abbreviate() + \" - cannot process command.\");\n+                var comment = String.format(commandReplyMarker, command.id()) + \"\\n\" +\n+                              \"@\" + command.user().username() +\n+                              \" there is no `.jcheck\/conf` present at revision \" +\n+                              commit.hash().abbreviate() + \" - cannot process command.\";\n+                bot.repo().addCommitComment(commit.hash(), comment);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandWorkItem.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import org.openjdk.skara.vcs.Hash;\n+import org.openjdk.skara.vcs.*;\n@@ -31,0 +31,1 @@\n+import java.nio.file.Files;\n@@ -207,0 +208,38 @@\n+\n+    @Test\n+    void missingJcheckConf(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                                           .addAuthor(author.forge().currentUser().id())\n+                                           .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var bot = PullRequestBot.newBuilder()\n+                                    .repo(author)\n+                                    .censusRepo(censusBuilder.build())\n+                                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                                    .externalCommitCommands(Map.of(\"external\", \"Help for external command\"))\n+                                    .seedStorage(seedFolder)\n+                                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = Repository.init(tempFolder.path(), author.repositoryType());\n+            var readme = localRepo.root().resolve(\"README\");\n+            Files.writeString(readme, \"Hello, world!\");\n+            localRepo.add(readme);\n+            var masterHash = localRepo.commit(\"Added README\", \"duke\", \"duke@openjdk.org\");\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Add a help command\n+            author.addCommitComment(masterHash, \"\/help\");\n+            TestBotRunner.runPeriodicItems(bot);\n+\n+            \/\/ Look at the reply\n+            var replies = author.commitComments(masterHash);\n+            CommitCommandAsserts.assertLastCommentContains(replies, \"there is no `.jcheck\/conf` present\");\n+            CommitCommandAsserts.assertLastCommentContains(replies, \"cannot process command\");\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandTests.java","additions":40,"deletions":1,"binary":false,"changes":41,"status":"modified"}]}