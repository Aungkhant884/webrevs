{"files":[{"patch":"@@ -272,1 +272,1 @@\n-        repo.fetchAll(false);\n+        repo.fetchAllRemotes(false);\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-                repo.fetchAll(false);\n+                repo.fetchAll(from.url(), false);\n","filename":"bots\/mirror\/src\/main\/java\/org\/openjdk\/skara\/bots\/mirror\/MirrorBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-            localRepo.fetchAll(true);\n+            localRepo.fetchAll(repository.url(), true);\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/RepositoryWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-            repo.fetchAll(false);\n+            repo.fetchAll(hostedRepo.url(), false);\n","filename":"bots\/topological\/src\/main\/java\/org\/openjdk\/skara\/bots\/topological\/TopologicalBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-                    seedRepo.fetch(hostedRepository.url(), \"+*:*\", true);\n+                    seedRepo.fetchAll(hostedRepository.url(), true);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepositoryPool.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n-    default void fetchAll() throws IOException {\n-        fetchAll(false);\n+    default void fetchAll(URI uri) throws IOException {\n+        fetchAll(uri, true);\n@@ -51,1 +51,5 @@\n-    void fetchAll(boolean includeTags) throws IOException;\n+    void fetchAll(URI uri, boolean includeTags) throws IOException;\n+    default void fetchAllRemotes() throws IOException {\n+        fetchAllRemotes(false);\n+    }\n+    void fetchAllRemotes(boolean includeTags) throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -472,1 +472,13 @@\n-    public void fetchAll(boolean includeTags) throws IOException {\n+    public void fetchAll(URI uri, boolean includeTags) throws IOException {\n+        var cmd = new ArrayList<>(List.of(\"git\", \"fetch\", \"--recurse-submodules=on-demand\", \"--prune\", uri.toString()));\n+        cmd.add(\"+refs\/heads\/*:refs\/heads\/*\");\n+        if (includeTags) {\n+            cmd.add(\"+refs\/tags\/*:refs\/tags\/*\");\n+        }\n+        try (var p = capture(cmd)) {\n+            await(p);\n+        }\n+    }\n+\n+    @Override\n+    public void fetchAllRemotes(boolean includeTags) throws IOException {\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -451,0 +451,12 @@\n+    @Override\n+    public void fetchAll(URI uri, boolean includeTags) throws IOException {\n+        \/\/ Ignore includeTags, Mercurial always fetches tags\n+        var cmd = new ArrayList<String>();\n+        cmd.add(\"hg\");\n+        cmd.add(\"pull\");\n+        cmd.add(uri.toString());\n+        try (var p = capture(cmd)) {\n+            await(p);\n+        }\n+    }\n+\n@@ -481,1 +493,1 @@\n-    public void fetchAll(boolean includeTags) throws IOException {\n+    public void fetchAllRemotes(boolean includeTags) throws IOException {\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}