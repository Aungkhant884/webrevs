{"files":[{"patch":"@@ -25,0 +25,4 @@\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n@@ -32,0 +36,3 @@\n+    private static final String lineSep = \"(?:\\\\n|\\\\r|\\\\r\\\\n|\\\\n\\\\r)\";\n+    private static final Pattern issuesBlockPattern = Pattern.compile(lineSep + lineSep + \"###? Issues?((?:\" + lineSep + \"(?: \\\\* )?\\\\[.*)+)\", Pattern.MULTILINE);\n+    private static final Pattern issuePattern = Pattern.compile(\"^(?: \\\\* )?\\\\[(\\\\S+)]\\\\(.*\\\\): (.*$)\", Pattern.MULTILINE);\n@@ -36,0 +43,12 @@\n+\n+    public static Set<String> parseIssues(String body) {\n+        var issuesBlockMatcher = issuesBlockPattern.matcher(body);\n+        if (!issuesBlockMatcher.find()) {\n+            return Set.of();\n+        }\n+        var issueMatcher = issuePattern.matcher(issuesBlockMatcher.group(1));\n+        return issueMatcher.results()\n+                .filter(mr -> !mr.group(2).endsWith(\" (**CSR**)\") && !mr.group(2).endsWith(\" (**CSR**) (Withdrawn)\") && !mr.group(2).endsWith(\" (**JEP**)\"))\n+                .map(mo -> mo.group(1))\n+                .collect(Collectors.toSet());\n+    }\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/BotUtils.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.skara.bots.common.BotUtils;\n@@ -142,16 +143,0 @@\n-    private final String lineSep = \"(?:\\\\n|\\\\r|\\\\r\\\\n|\\\\n\\\\r)\";\n-    private final Pattern issuesBlockPattern = Pattern.compile(lineSep + lineSep + \"###? Issues?((?:\" + lineSep + \"(?: \\\\* )?\\\\[.*)+)\", Pattern.MULTILINE);\n-    private final Pattern issuePattern = Pattern.compile(\"^(?: \\\\* )?\\\\[(\\\\S+)]\\\\(.*\\\\): (.*$)\", Pattern.MULTILINE);\n-\n-    private Set<String> parseIssues() {\n-        var issuesBlockMatcher = issuesBlockPattern.matcher(pr.body());\n-        if (!issuesBlockMatcher.find()) {\n-            return Set.of();\n-        }\n-        var issueMatcher = issuePattern.matcher(issuesBlockMatcher.group(1));\n-        return issueMatcher.results()\n-                           .filter(mr -> !mr.group(2).endsWith(\" (**CSR**)\") && !mr.group(2).endsWith(\" (**CSR**) (Withdrawn)\") && !mr.group(2).endsWith(\" (**JEP**)\"))\n-                           .map(mo -> mo.group(1))\n-                           .collect(Collectors.toSet());\n-    }\n-\n@@ -246,1 +231,1 @@\n-        var issues = parseIssues();\n+        var issues = BotUtils.parseIssues(pr.body());\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/PullRequestWorkItem.java","additions":2,"deletions":17,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.logging.Logger;\n@@ -46,1 +47,0 @@\n-\n@@ -48,0 +48,2 @@\n+    private final Map<String, List<String>> issuePRMap;\n+    private final Logger log = Logger.getLogger(\"org.openjdk.skara.bots.pr\");\n@@ -49,1 +51,2 @@\n-    public CSRIssueBot(IssueProject issueProject, List<HostedRepository> repositories, Map<String, PullRequestBot> pullRequestBotMap) {\n+    public CSRIssueBot(IssueProject issueProject, List<HostedRepository> repositories, Map<String, PullRequestBot> pullRequestBotMap,\n+                       Map<String, List<String>> issuePRMap) {\n@@ -53,0 +56,1 @@\n+        this.issuePRMap = issuePRMap;\n@@ -76,0 +80,1 @@\n+        log.info(\"Found \" + issues.size() + \" updated csr issues\");\n@@ -95,0 +100,4 @@\n+\n+    Map<String, List<String>> issuePRMap() {\n+        return issuePRMap;\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRIssueBot.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import org.openjdk.skara.forge.PullRequestUtils;\n@@ -40,1 +39,1 @@\n- * The IssueWorkItem is read-only. Its purpose is to create PullRequestWorkItems for\n+ * The CSRIssueWorkItem is read-only. Its purpose is to create PullRequestWorkItems for\n@@ -59,1 +58,1 @@\n-        return botName() + \"\/IssueWorkItem@\" + csrIssue.id();\n+        return botName() + \"\/CSRIssueWorkItem@\" + csrIssue.id();\n@@ -63,1 +62,1 @@\n-     * Concurrency between IssueWorkItems is ok as long as they aren't processing the\n+     * Concurrency between CSRIssueWorkItems is ok as long as they aren't processing the\n@@ -98,3 +97,7 @@\n-                .flatMap(i -> PullRequestUtils.pullRequestCommentLink(i).stream())\n-                .flatMap(uri -> bot.repositories().stream()\n-                        .flatMap(r -> r.parsePullRequestUrl(uri.toString()).stream()))\n+                \/\/ Get all pull request ids related with all the issues\n+                .flatMap(i -> bot.issuePRMap().get(i.id()) == null ? Stream.of() : bot.issuePRMap().get(i.id()).stream())\n+                \/\/ Get all the pull requests\n+                .flatMap(id -> bot.repositories().stream()\n+                        .filter(r -> r.name().equals(id.split(\"#\")[0]))\n+                        .map(r -> r.pullRequest(id.split(\"#\")[1]))\n+                )\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CSRIssueWorkItem.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -658,0 +658,1 @@\n+        var currentIssues = new HashSet<String>();\n@@ -684,4 +685,23 @@\n-                            if (issueType != null && \"CSR\".equals(issueType.asString())) {\n-                                progressBody.append(\" (**CSR**)\");\n-                                if (isWithdrawnCSR(iss.get())) {\n-                                    progressBody.append(\" (Withdrawn)\");\n+                            if (issueType != null) {\n+                                if (\"CSR\".equals(issueType.asString())) {\n+                                    progressBody.append(\" (**CSR**)\");\n+                                    if (isWithdrawnCSR(iss.get())) {\n+                                        progressBody.append(\" (Withdrawn)\");\n+                                    }\n+                                } else if (\"JEP\".equals(issueType.asString())) {\n+                                    progressBody.append(\" (**JEP**)\");\n+                                } else if (\"Bug\".equals(issueType.asString())) {\n+                                    progressBody.append(\" (**\" + issueType.asString() + \"**\");\n+                                    var issuePriority = iss.get().properties().get(\"priority\");\n+                                    if (issuePriority == null) {\n+                                        progressBody.append(\")\");\n+                                    } else {\n+                                        progressBody.append(\" - `\" + issuePriority + \"`)\");\n+                                    }\n+                                    currentIssues.add(iss.get().id());\n+                                } else if (\"Enhancement\".equals(issueType.asString())) {\n+                                    progressBody.append(\" (**Enhancement**)\");\n+                                    currentIssues.add(iss.get().id());\n+                                } else {\n+                                    progressBody.append(\" (⚠️ Uncommon issue type: \" + issueType.asString() + \")\");\n+                                    currentIssues.add(iss.get().id());\n@@ -690,3 +710,0 @@\n-                            if (issueType != null && \"JEP\".equals(issueType.asString())) {\n-                                progressBody.append(\" (**JEP**)\");\n-                            }\n@@ -726,0 +743,26 @@\n+\n+            \/\/ Update the issuePRMap\n+            var map = workItem.bot.issuePRMap();\n+            var prId = pr.repository().name() + \"#\" + pr.id();\n+\n+            \/\/ Need previousIssues to delete associations\n+            var previousIssues = BotUtils.parseIssues(pr.body());\n+            \/\/ Add associations\n+            for (String issueId : currentIssues) {\n+                if (!previousIssues.contains(issueId)) {\n+                    map.putIfAbsent(issueId, new LinkedList<>());\n+                    List<String> prIds = map.get(issueId);\n+                    if (!prIds.contains(prId)) {\n+                        prIds.add(prId);\n+                    }\n+                }\n+            }\n+            \/\/ Delete associations\n+            for (String oldIssueId : previousIssues) {\n+                if (!currentIssues.contains(oldIssueId)) {\n+                    List<String> prIds = map.get(oldIssueId);\n+                    if (prIds != null) {\n+                        prIds.remove(prId);\n+                    }\n+                }\n+            }\n@@ -1307,2 +1350,2 @@\n-            var metadata = workItem.getMetadata(censusInstance, title, updatedBody, pr.comments(), activeReviews,\n-                                                newLabels, pr.targetRef(), pr.isDraft(), expiresIn);\n+            var metadata = workItem.getMetadata(workItem.getPRMetadata(censusInstance, title, updatedBody, pr.comments(), activeReviews,\n+                                                newLabels, pr.targetRef(), pr.isDraft()), workItem.getIssueMetadata(updatedBody), expiresIn);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":52,"deletions":9,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+\n@@ -27,0 +28,1 @@\n+import org.openjdk.skara.bots.common.BotUtils;\n@@ -31,0 +33,1 @@\n+import org.openjdk.skara.issuetracker.Issue;\n@@ -65,0 +68,1 @@\n+    private final boolean spawnedFromIssueBot;\n@@ -70,0 +74,8 @@\n+        this.spawnedFromIssueBot = false;\n+    }\n+\n+    CheckWorkItem(PullRequestBot bot, String prId, Consumer<RuntimeException> errorHandler, ZonedDateTime triggerUpdatedAt,\n+                  boolean needsReadyCheck, boolean forceUpdate, boolean spawnedFromIssueBot) {\n+        super(bot, prId, errorHandler, triggerUpdatedAt, needsReadyCheck);\n+        this.forceUpdate = forceUpdate;\n+        this.spawnedFromIssueBot = spawnedFromIssueBot;\n@@ -76,0 +88,1 @@\n+        this.spawnedFromIssueBot = false;\n@@ -94,2 +107,2 @@\n-    String getMetadata(CensusInstance censusInstance, String title, String body, List<Comment> comments,\n-                       List<Review> reviews, Set<String> labels, String targetRef, boolean isDraft, Duration expiresIn) {\n+    String getPRMetadata(CensusInstance censusInstance, String title, String body, List<Comment> comments,\n+                       List<Review> reviews, Set<String> labels, String targetRef, boolean isDraft) {\n@@ -127,3 +140,11 @@\n-            var ret = Base64.getUrlEncoder().encodeToString(digest.digest());\n-            if (expiresIn != null) {\n-                ret += \":\" + Instant.now().plus(expiresIn).getEpochSecond();\n+            return Base64.getUrlEncoder().encodeToString(digest.digest());\n+        } catch (NoSuchAlgorithmException e) {\n+            throw new RuntimeException(\"Cannot find SHA-256\");\n+        }\n+    }\n+\n+    String getIssueMetadata(String prBody) {\n+        try {\n+            var issueProject = bot.issueProject();\n+            if (issueProject == null) {\n+                return \"\";\n@@ -131,1 +152,20 @@\n-            return ret;\n+            var issueIds = BotUtils.parseIssues(prBody);\n+            var sortedIssueIds = issueIds.stream().sorted().toList();\n+            var issues = sortedIssueIds.stream()\n+                    .map(issueProject::issue)\n+                    .filter(Optional::isPresent)\n+                    .map(Optional::get)\n+                    .toList();\n+            String ids = issues.stream().map(Issue::id).collect(Collectors.joining());\n+            String priorities = issues.stream()\n+                    .map(issue -> issue.properties().get(\"priority\") == null ? \"\" : issue.properties().get(\"priority\").asString())\n+                    .collect(Collectors.joining());\n+            String types = issues.stream()\n+                    .map(issue -> issue.properties().get(\"issueType\") == null ? \"\" : issue.properties().get(\"issueType\").asString())\n+                    .collect(Collectors.joining());\n+\n+            var digest = MessageDigest.getInstance(\"SHA-256\");\n+            digest.update(ids.strip().getBytes(StandardCharsets.UTF_8));\n+            digest.update(priorities.strip().getBytes(StandardCharsets.UTF_8));\n+            digest.update(types.strip().getBytes(StandardCharsets.UTF_8));\n+            return Base64.getUrlEncoder().encodeToString(digest.digest());\n@@ -137,0 +177,8 @@\n+    String getMetadata(String PRMetadata, String issueMetadata, Duration expiresIn) {\n+        var ret = PRMetadata + \"#\" + issueMetadata;\n+        if (expiresIn != null) {\n+            ret += \":\" + Instant.now().plus(expiresIn).getEpochSecond();\n+        }\n+        return ret;\n+    }\n+\n@@ -139,1 +187,0 @@\n-        var metadata = getMetadata(censusInstance, pr.title(), pr.body(), comments, reviews, labels, pr.targetRef(), pr.isDraft(), null);\n@@ -147,0 +194,2 @@\n+                Instant expiresAt = null;\n+\n@@ -149,5 +198,19 @@\n-                    var stableMetadata = previousMetadata.substring(0, splitIndex);\n-                    var expiresAt = Instant.ofEpochSecond(Long.parseLong(previousMetadata.substring(splitIndex + 1)));\n-                    if (stableMetadata.equals(metadata) && expiresAt.isAfter(Instant.now())) {\n-                        log.finer(\"Metadata with expiration time is still valid, not checking again\");\n-                        return true;\n+                    expiresAt = Instant.ofEpochSecond(Long.parseLong(previousMetadata.substring(splitIndex + 1)));\n+                    previousMetadata = previousMetadata.substring(0, splitIndex);\n+                }\n+\n+                String[] substrings = previousMetadata.split(\"#\");\n+                String previousPRMetadata = substrings[0];\n+                String previousIssueMetadata = (substrings.length > 1) ? substrings[1] : \"\";\n+\n+\n+                \/\/ triggered by issue update\n+                if (spawnedFromIssueBot) {\n+                    var currIssueMetadata = getIssueMetadata(pr.body());\n+                    if (expiresAt != null) {\n+                        if (previousIssueMetadata.equals(currIssueMetadata) && expiresAt.isAfter(Instant.now())) {\n+                            log.finer(\"[Issue]Metadata with expiration time is still valid, not checking again\");\n+                            return true;\n+                        } else {\n+                            log.finer(\"[Issue]Metadata expiration time has expired - checking again\");\n+                        }\n@@ -155,1 +218,6 @@\n-                        log.finer(\"Metadata expiration time has expired - checking again\");\n+                        if (previousIssueMetadata.equals(currIssueMetadata)) {\n+                            log.fine(\"[Issue]No activity since last check, not checking again.\");\n+                            return true;\n+                        } else {\n+                            log.fine(\"[Issue]Previous metadata: \" + previousIssueMetadata + \" - current: \" + currIssueMetadata);\n+                        }\n@@ -157,0 +225,1 @@\n+                    \/\/ triggered by pr updates\n@@ -158,3 +227,8 @@\n-                    if (previousMetadata.equals(metadata)) {\n-                        log.fine(\"No activity since last check, not checking again.\");\n-                        return true;\n+                    var currPRMetadata = getPRMetadata(censusInstance, pr.title(), pr.body(), comments, reviews, labels, pr.targetRef(), pr.isDraft());\n+                    if (expiresAt != null) {\n+                        if (previousPRMetadata.equals(currPRMetadata) && expiresAt.isAfter(Instant.now())) {\n+                            log.finer(\"[PR]Metadata with expiration time is still valid, not checking again\");\n+                            return true;\n+                        } else {\n+                            log.finer(\"[PR]Metadata expiration time has expired - checking again\");\n+                        }\n@@ -162,1 +236,6 @@\n-                        log.fine(\"Previous metadata: \" + check.metadata().get() + \" - current: \" + metadata);\n+                        if (previousPRMetadata.equals(currPRMetadata)) {\n+                            log.fine(\"[PR]No activity since last check, not checking again.\");\n+                            return true;\n+                        } else {\n+                            log.fine(\"[PR]Previous metadata: \" + previousPRMetadata + \" - current: \" + currPRMetadata);\n+                        }\n@@ -244,0 +323,17 @@\n+    private void initializeIssuePRMap() {\n+        \/\/ When bot restarts, the issuePRMap needs to get updated with this pr\n+        var prId = pr.repository().name() + \"#\" + pr.id();\n+        if (!bot.initializedPRs().containsKey(prId)) {\n+            var issueIds = BotUtils.parseIssues(pr.body());\n+            for (String issueId : issueIds) {\n+                bot.issuePRMap().putIfAbsent(issueId, new ArrayList<>());\n+                List<String> prIds = bot.issuePRMap().get(issueId);\n+                if (!prIds.contains(prId)) {\n+                    prIds.add(prId);\n+                }\n+            }\n+            bot.initializedPRs().put(prId, true);\n+            log.info(\"Map after initialization with pr \" + pr.id() + \" : \" + bot.issuePRMap());\n+        }\n+    }\n+\n@@ -293,0 +389,2 @@\n+        \/\/ initialize issue associations for this pr\n+        initializeIssuePRMap();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":115,"deletions":17,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.pr;\n+\n+import org.openjdk.skara.bot.Bot;\n+import org.openjdk.skara.bot.WorkItem;\n+import org.openjdk.skara.forge.HostedRepository;\n+import org.openjdk.skara.issuetracker.Issue;\n+import org.openjdk.skara.issuetracker.IssuePoller;\n+import org.openjdk.skara.issuetracker.IssueProject;\n+\n+import java.time.Duration;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.logging.Logger;\n+\n+public class IssueBot implements Bot {\n+    private final IssueProject issueProject;\n+    private final List<HostedRepository> repositories;\n+    private final IssuePoller poller;\n+\n+    private final Map<String, PullRequestBot> pullRequestBotMap;\n+    private final Map<String, List<String>> issuePRMap;\n+    private final Logger log = Logger.getLogger(\"org.openjdk.skara.bots.pr\");\n+\n+    public IssueBot(IssueProject issueProject, List<HostedRepository> repositories, Map<String, PullRequestBot> pullRequestBotMap,\n+                    Map<String, List<String>> issuePRMap) {\n+        this.issueProject = issueProject;\n+        this.repositories = repositories;\n+        this.pullRequestBotMap = pullRequestBotMap;\n+        this.issuePRMap = issuePRMap;\n+        \/\/ The PullRequestBot will initially evaluate all active PRs so there\n+        \/\/ is no need to look at any issues older than the start time of the bot\n+        \/\/ here. A padding of 10 minutes for the initial query should cover any\n+        \/\/ potential time difference between local and remote, as well as timing\n+        \/\/ issues between the first run of each bot, without the risk of\n+        \/\/ returning excessive amounts of Issues in the first run.\n+        this.poller = new IssuePoller(issueProject, Duration.ofMinutes(10)) {\n+            \/\/ Query for non-CSR and non-JEP issues in this poller.\n+            @Override\n+            protected List<Issue> queryIssues(IssueProject issueProject, ZonedDateTime updatedAfter) {\n+                return issueProject.issues(updatedAfter).stream()\n+                        .filter(issue -> {\n+                            var issueType = issue.properties().get(\"issuetype\");\n+                            return issueType != null && !\"CSR\".equals(issueType.asString()) && !\"JEP\".equals(issueType.asString());\n+                        })\n+                        .toList();\n+            }\n+        };\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"IssueBot@\" + issueProject.name();\n+    }\n+\n+    @Override\n+    public List<WorkItem> getPeriodicItems() {\n+        var issues = poller.updatedIssues();\n+        log.info(\"Found \" + issues.size() + \" updated issues(exclude CSR and JEP issues)\");\n+        var items = issues.stream()\n+                .map(i -> (WorkItem) new IssueWorkItem(this, i, e -> poller.retryIssue(i)))\n+                .toList();\n+        poller.lastBatchHandled();\n+        return items;\n+    }\n+\n+    @Override\n+    public String name() {\n+        return PullRequestBotFactory.NAME + \"-issue\";\n+    }\n+\n+    List<HostedRepository> repositories() {\n+        return repositories;\n+    }\n+\n+    PullRequestBot getPRBot(String repo) {\n+        return pullRequestBotMap.get(repo);\n+    }\n+\n+    Map<String, List<String>> issuePRMap() {\n+        return issuePRMap;\n+    }\n+}\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IssueBot.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,117 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.pr;\n+\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.function.Consumer;\n+import java.util.logging.Logger;\n+\n+import org.openjdk.skara.bot.WorkItem;\n+import org.openjdk.skara.issuetracker.Issue;\n+\n+\/**\n+ * The IssueWorkItem is read-only. Its purpose is to create PullRequestWorkItems for\n+ * every pull request associated with an updated issue.\n+ * It should only be triggered when an updated issue(exclude CSR and JEP) has been found.\n+ *\/\n+class IssueWorkItem implements WorkItem {\n+    private final Logger log = Logger.getLogger(\"org.openjdk.skara.bots.pr\");\n+\n+    private final IssueBot bot;\n+    private final Issue issue;\n+    private final Consumer<RuntimeException> errorHandler;\n+\n+    public IssueWorkItem(IssueBot bot, Issue issue, Consumer<RuntimeException> errorHandler) {\n+        this.bot = bot;\n+        this.issue = issue;\n+        this.errorHandler = errorHandler;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return botName() + \"\/IssueWorkItem@\" + issue.id();\n+    }\n+\n+    \/**\n+     * Concurrency between IssueWorkItems is ok as long as they aren't processing the\n+     * same issue and are spawned from the same bot instance.\n+     *\/\n+    @Override\n+    public boolean concurrentWith(WorkItem other) {\n+        if (!(other instanceof IssueWorkItem otherItem)) {\n+            return true;\n+        }\n+\n+        if (!issue.project().name().equals(otherItem.issue.project().name())) {\n+            return true;\n+        }\n+\n+        if (!issue.id().equals(otherItem.issue.id())) {\n+            return true;\n+        }\n+\n+        if (!bot.equals(otherItem.bot)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public Collection<WorkItem> run(Path scratchPath) {\n+        var ret = new ArrayList<WorkItem>();\n+\n+        \/\/ Get related prs according to the issue id\n+        var prIds = bot.issuePRMap().get(issue.id());\n+        if (prIds == null) {\n+            return ret;\n+        }\n+        prIds.stream()\n+                .flatMap(id -> bot.repositories().stream()\n+                        .filter(r -> r.name().equals(id.split(\"#\")[0]))\n+                        .map(r -> r.pullRequest(id.split(\"#\")[1]))\n+                )\n+                .filter(Issue::isOpen)\n+                \/\/ This will mix time stamps from the IssueTracker and the Forge hosting PRs, but it's the\n+                \/\/ best we can do.\n+                .map(pr -> new CheckWorkItem(bot.getPRBot(pr.repository().name()), pr.id(), errorHandler, issue.updatedAt(), true, false, true))\n+                .forEach(ret::add);\n+        return ret;\n+    }\n+\n+    @Override\n+    public String botName() {\n+        return bot.name();\n+    }\n+\n+    @Override\n+    public String workItemName() {\n+        return \"issue\";\n+    }\n+\n+    @Override\n+    public void handleRuntimeException(RuntimeException e) {\n+        errorHandler.accept(e);\n+    }\n+}\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/IssueWorkItem.java","additions":117,"deletions":0,"binary":false,"changes":117,"status":"added"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -75,0 +76,2 @@\n+    private final Map<String, List<String>> issuePRMap;\n+    private final Map<String, Boolean> initializedPRs = new ConcurrentHashMap<>();\n@@ -88,1 +91,2 @@\n-                   boolean enableMerge, Set<String> mergeSources, boolean jcheckMerge, boolean enableBackport) {\n+                   boolean enableMerge, Set<String> mergeSources, boolean jcheckMerge, boolean enableBackport,\n+                   Map<String, List<String>> issuePRMap) {\n@@ -122,0 +126,1 @@\n+        this.issuePRMap = issuePRMap;\n@@ -327,0 +332,8 @@\n+    public Map<String, List<String>> issuePRMap() {\n+        return issuePRMap;\n+    }\n+\n+    public Map<String, Boolean> initializedPRs() {\n+        return initializedPRs;\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+    private Map<String, List<String>> issuePRMap;\n@@ -236,0 +237,5 @@\n+    public PullRequestBotBuilder issuePRMap(Map<String, List<String>> issuePRMap) {\n+        this.issuePRMap = issuePRMap;\n+        return this;\n+    }\n+\n@@ -244,1 +250,1 @@\n-                                  processPR, processCommit, enableMerge, mergeSources, jcheckMerge, enableBackport);\n+                                  processPR, processCommit, enableMerge, mergeSources, jcheckMerge, enableBackport, issuePRMap);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotBuilder.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -45,1 +46,0 @@\n-        var issueProjects = new HashMap<String, IssueProject>();\n@@ -47,0 +47,1 @@\n+        var repositoriesForCSR = new HashMap<IssueProject, List<HostedRepository>>();\n@@ -48,0 +49,1 @@\n+        var issueProjectToIssuePRMapMap = new HashMap<IssueProject, Map<String, List<String>>>();\n@@ -153,1 +155,1 @@\n-            var issueString = \"\";\n+            IssueProject issueProject = null;\n@@ -155,2 +157,6 @@\n-                issueString = repo.value().get(\"issues\").asString();\n-                botBuilder.issueProject(configuration.issueProject(issueString));\n+                issueProject = configuration.issueProject(repo.value().get(\"issues\").asString());\n+                botBuilder.issueProject(issueProject);\n+                repositories.putIfAbsent(issueProject, new ArrayList<>());\n+                repositories.get(issueProject).add(repository);\n+                issueProjectToIssuePRMapMap.putIfAbsent(issueProject, new ConcurrentHashMap<>());\n+                botBuilder.issuePRMap(issueProjectToIssuePRMapMap.get(issueProject));\n@@ -177,10 +183,3 @@\n-                if (enableCsr && !issueString.equals(\"\")) {\n-                    var issueProject = issueProjects.get(issueString);\n-                    if (issueProject == null) {\n-                        issueProject = configuration.issueProject(issueString);\n-                        issueProjects.put(issueString, issueProject);\n-                    }\n-                    if (!repositories.containsKey(issueProject)) {\n-                        repositories.put(issueProject, new ArrayList<>());\n-                    }\n-                    repositories.get(issueProject).add(repository);\n+                if (enableCsr && issueProject != null) {\n+                    repositoriesForCSR.putIfAbsent(issueProject, new ArrayList<>());\n+                    repositoriesForCSR.get(issueProject).add(repository);\n@@ -233,2 +232,10 @@\n-        for (IssueProject issueProject : issueProjects.values()) {\n-            ret.add(new CSRIssueBot(issueProject, repositories.get(issueProject), pullRequestBotMap));\n+        \/\/ Create a CSRIssueBot for each issueProject which associated with at least one csr enabled repository\n+        for (var issueProject : repositoriesForCSR.keySet()) {\n+            ret.add(new CSRIssueBot(issueProject, repositoriesForCSR.get(issueProject), pullRequestBotMap,\n+                    issueProjectToIssuePRMapMap.get(issueProject)));\n+        }\n+\n+        \/\/ Create an IssueBot for each issueProject\n+        for (var issueProject : issueProjectToIssuePRMapMap.keySet()) {\n+            ret.add(new IssueBot(issueProject, repositories.get(issueProject), pullRequestBotMap,\n+                    issueProjectToIssuePRMapMap.get(issueProject)));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactory.java","additions":23,"deletions":16,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,4 +56,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -154,4 +155,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -255,4 +257,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -358,0 +361,1 @@\n+\n@@ -359,4 +363,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -408,0 +413,1 @@\n+                    .issuePRMap(new HashMap<>())\n@@ -476,0 +482,1 @@\n+                    .issuePRMap(new HashMap<>())\n@@ -540,4 +547,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -604,4 +612,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -674,4 +683,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -745,4 +755,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -818,4 +829,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -914,4 +926,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1023,4 +1036,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1081,4 +1095,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1139,4 +1154,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1197,4 +1213,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1295,4 +1312,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1355,0 +1373,1 @@\n+                    .issuePRMap(new HashMap<>())\n@@ -1471,0 +1490,1 @@\n+                    .issuePRMap(new HashMap<>())\n@@ -1598,0 +1618,1 @@\n+                    .issuePRMap(new HashMap<>())\n@@ -1718,0 +1739,1 @@\n+                    .issuePRMap(new HashMap<>())\n@@ -1819,0 +1841,1 @@\n+                    .issuePRMap(new HashMap<>())\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportTests.java","additions":84,"deletions":61,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import org.openjdk.skara.forge.PullRequestUtils;\n@@ -39,0 +38,1 @@\n+import java.util.HashMap;\n@@ -59,2 +59,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject).censusRepo(censusBuilder.build()).enableCsr(true).build();\n-            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -81,1 +88,1 @@\n-            PullRequestUtils.postPullRequestLinkComment(issue, pr);\n+            TestBotRunner.runPeriodicItems(prBot);\n@@ -196,1 +203,8 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -241,1 +255,8 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -287,1 +308,8 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -327,3 +355,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject).censusRepo(censusBuilder.build()).enableCsr(true).build();\n-\n-            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -376,3 +410,0 @@\n-            \/\/ Add the notification link to the PR in the issue. This is needed for the CSRIssueBot to\n-            \/\/ be able to trigger on CSR issue updates\n-            PullRequestUtils.postPullRequestLinkComment(issue, pr);\n@@ -506,1 +537,8 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot).issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -508,1 +546,0 @@\n-            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot));\n@@ -523,3 +560,0 @@\n-            \/\/ Add the notification link to the PR in the issue. This is needed for the CSRIssueBot to\n-            \/\/ be able to trigger on CSR issue updates\n-            PullRequestUtils.postPullRequestLinkComment(issue, pr);\n@@ -532,1 +566,0 @@\n-            PullRequestUtils.postPullRequestLinkComment(issue2, pr);\n@@ -553,1 +586,0 @@\n-            PullRequestUtils.postPullRequestLinkComment(issue3, pr);\n@@ -607,2 +639,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject).censusRepo(censusBuilder.build()).enableCsr(true).build();\n-            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -630,1 +669,1 @@\n-            PullRequestUtils.postPullRequestLinkComment(issue, pr);\n+            TestBotRunner.runPeriodicItems(prBot);\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRBotTests.java","additions":62,"deletions":23,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -57,1 +57,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -132,1 +138,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -170,1 +182,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -214,1 +232,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -290,1 +314,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -330,1 +360,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -374,1 +410,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -433,2 +475,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n-            var csrIssueBot = new CSRIssueBot(issues, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issues, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -512,2 +561,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n-            var csrIssueBot = new CSRIssueBot(issues, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issues, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -581,1 +637,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -619,1 +681,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -691,2 +759,7 @@\n-            var disableCsrBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues)\n-                    .enableCsr(false).censusRepo(censusBuilder.build()).build();\n+            var disableCsrBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .enableCsr(false)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -735,5 +808,9 @@\n-\n-            var prBot = PullRequestBot.newBuilder().repo(bot).enableCsr(true)\n-                    .censusRepo(censusBuilder.build()).issueProject(issueProject).build();\n-\n-            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .enableCsr(true)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issueProject)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -995,2 +1072,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n-            var csrIssueBot = new CSRIssueBot(issues, List.of(author), Map.of(bot.name(), prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issues, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n@@ -1100,1 +1184,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -1152,1 +1242,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues).censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRCommandTests.java","additions":120,"deletions":24,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -805,1 +805,7 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -866,1 +872,7 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -963,1 +975,7 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -1041,2 +1059,8 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(bot).issueProject(issues)\n-                                            .censusRepo(censusBuilder.build()).enableCsr(true).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issues)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -1111,2 +1135,8 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableJep(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -1621,3 +1651,7 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build())\n-                                         .issueProject(issues)\n-                                         .build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -1676,0 +1710,1 @@\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n@@ -1677,4 +1712,5 @@\n-                                         .repo(author)\n-                                         .censusRepo(censusBuilder.build())\n-                                         .issueProject(issues)\n-                                         .build();\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -1715,0 +1751,1 @@\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n@@ -1716,4 +1753,5 @@\n-                                         .repo(author)\n-                                         .censusRepo(censusBuilder.build())\n-                                         .issueProject(issues)\n-                                         .build();\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n@@ -1805,0 +1843,1 @@\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n@@ -1809,0 +1848,1 @@\n+                    .issuePRMap(issuePRMap)\n@@ -1976,4 +2016,9 @@\n-            var prBot = PullRequestBot.newBuilder().repo(botRepo)\n-                    .censusRepo(censusBuilder.build()).issueProject(issueProject)\n-                    .enableCsr(true).build();\n-            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(\"test\", prBot));\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(botRepo)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issueProject)\n+                    .enableCsr(true)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var csrIssueBot = new CSRIssueBot(issueProject, List.of(author), Map.of(\"test\", prBot), issuePRMap);\n@@ -2178,1 +2223,7 @@\n-            var checkBot = PullRequestBot.newBuilder().repo(author).censusRepo(censusBuilder.build()).issueProject(issueProject).build();\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issueProject)\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":74,"deletions":23,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.HashMap;\n@@ -47,3 +48,4 @@\n-                                      .repo(integrator)\n-                                      .censusRepo(censusBuilder.build())\n-                                      .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -90,4 +92,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -157,4 +160,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -236,4 +240,5 @@\n-                                    .repo(integrator)\n-                                    .censusRepo(censusBuilder.build())\n-                                    .issueProject(issues)\n-                                    .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -315,0 +320,1 @@\n+                    .issuePRMap(new HashMap<>())\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CleanCommandTests.java","additions":22,"deletions":16,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -0,0 +1,296 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.pr;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInfo;\n+import org.openjdk.skara.forge.CheckStatus;\n+import org.openjdk.skara.json.JSON;\n+import org.openjdk.skara.test.CheckableRepository;\n+import org.openjdk.skara.test.HostCredentials;\n+import org.openjdk.skara.test.TemporaryDirectory;\n+import org.openjdk.skara.test.TestBotRunner;\n+\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class IssueBotTests {\n+    @Test\n+    void simple(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issueProject = credentials.getIssueProject();\n+            var issue = issueProject.createIssue(\"This is an issue\", List.of(), Map.of());\n+            issue.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addReviewer(reviewer.forge().currentUser().id())\n+                    .addCommitter(author.forge().currentUser().id());\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var issueBot = new IssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", issue.id() + \": This is an issue\");\n+\n+            TestBotRunner.runPeriodicItems(prBot);\n+            var checks = pr.checks(editHash);\n+            assertEquals(1, checks.size());\n+            var check = checks.get(\"jcheck\");\n+            var completedTime1 = check.completedAt().get();\n+            assertEquals(CheckStatus.SUCCESS, check.status());\n+            var substrings = check.metadata().get().split(\"#\");\n+            var prMetadata1 = substrings[0];\n+            var issueMetadata1 = (substrings.length > 1) ? substrings[1] : \"\";\n+            assertNotEquals(\"\", issueMetadata1);\n+\n+            \/\/ Run issueBot, there is no update in the issue, so the metadata should not change\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime2 = check.completedAt().get();\n+            assertEquals(completedTime1, completedTime2);\n+\n+            \/\/ Update the issue and run prBot first\n+            \/\/ The check should not be updated\n+            issue.setProperty(\"priority\", JSON.of(\"4\"));\n+            TestBotRunner.runPeriodicItems(prBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime3 = check.completedAt().get();\n+            assertEquals(completedTime2, completedTime3);\n+\n+            \/\/ Run issueBot\n+            \/\/ The check should be updated\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime4 = check.completedAt().get();\n+            substrings = check.metadata().get().split(\"#\");\n+            var prMetadata2 = substrings[0];\n+            var issueMetadata2 = (substrings.length > 1) ? substrings[1] : \"\";\n+            assertNotEquals(completedTime3, completedTime4);\n+            \/\/ PR body has been updated, so the metadata for pr is also changed\n+            assertNotEquals(prMetadata1, prMetadata2);\n+            assertNotEquals(issueMetadata1, issueMetadata2);\n+            assertTrue(pr.store().body().contains(\"(**Bug** - `\\\"4\\\"`)\"));\n+\n+            \/\/ Update the PR and run issueBot first\n+            \/\/ There should be no update in the check\n+            pr.setBody(\"updated body\");\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime5 = check.completedAt().get();\n+            assertEquals(completedTime4, completedTime5);\n+\n+            \/\/ Run prBot\n+            TestBotRunner.runPeriodicItems(prBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime6 = check.completedAt().get();\n+            substrings = check.metadata().get().split(\"#\");\n+            var prMetadata3 = substrings[0];\n+            var issueMetadata3 = (substrings.length > 1) ? substrings[1] : \"\";\n+            assertNotEquals(completedTime5, completedTime6);\n+            assertNotEquals(prMetadata2, prMetadata3);\n+            \/\/ issue metadata should not be updated because no update in the issue\n+            assertEquals(issueMetadata2, issueMetadata3);\n+\n+            \/\/ Extra run of prBot and issueBot\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime7 = check.completedAt().get();\n+            assertEquals(completedTime6, completedTime7);\n+        }\n+    }\n+\n+    @Test\n+    void normalCommentInIssue(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issueProject = credentials.getIssueProject();\n+            var issue = issueProject.createIssue(\"This is an issue\", List.of(), Map.of());\n+            issue.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addReviewer(reviewer.forge().currentUser().id())\n+                    .addCommitter(author.forge().currentUser().id());\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var issueBot = new IssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", issue.id() + \": This is an issue\");\n+\n+            TestBotRunner.runPeriodicItems(prBot);\n+            var checks = pr.checks(editHash);\n+            assertEquals(1, checks.size());\n+            var check = checks.get(\"jcheck\");\n+            var completedTime1 = check.completedAt().get();\n+            assertEquals(CheckStatus.SUCCESS, check.status());\n+            var substrings = check.metadata().get().split(\"#\");\n+            var prMetadata1 = substrings[0];\n+            var issueMetadata1 = (substrings.length > 1) ? substrings[1] : \"\";\n+            assertNotEquals(\"\", issueMetadata1);\n+\n+            \/\/ Add a normal comment in the issue\n+            issue.addComment(\"The issue commment!\");\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime2 = check.completedAt().get();\n+            assertEquals(completedTime1, completedTime2);\n+\n+            \/\/ Extra run of prBot and issueBot\n+            TestBotRunner.runPeriodicItems(prBot);\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime3 = check.completedAt().get();\n+            assertEquals(completedTime2, completedTime3);\n+        }\n+    }\n+\n+    @Test\n+    void multipleIssue(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+            var bot = credentials.getHostedRepository();\n+            var issueProject = credentials.getIssueProject();\n+            var issue = issueProject.createIssue(\"This is an issue\", List.of(), Map.of());\n+            issue.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+            var issue2 = issueProject.createIssue(\"This is an issue2\", List.of(), Map.of());\n+            issue2.setProperty(\"issuetype\", JSON.of(\"Bug\"));\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addReviewer(reviewer.forge().currentUser().id())\n+                    .addCommitter(author.forge().currentUser().id());\n+            Map<String, List<String>> issuePRMap = new HashMap<>();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(issuePRMap)\n+                    .build();\n+            var issueBot = new IssueBot(issueProject, List.of(author), Map.of(bot.name(), prBot), issuePRMap);\n+\n+            \/\/ Populate the projects repository\n+            var localRepoFolder = tempFolder.path().resolve(\"localrepo\");\n+            var localRepo = CheckableRepository.init(localRepoFolder, author.repositoryType());\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            assertFalse(CheckableRepository.hasBeenEdited(localRepo));\n+            localRepo.push(masterHash, author.authenticatedUrl(), \"master\", true);\n+\n+            \/\/ Make a change with a corresponding PR\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.authenticatedUrl(), \"edit\", true);\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", issue.id() + \": This is an issue\");\n+            pr.addComment(\"\/issue \" + issue2.id());\n+\n+            TestBotRunner.runPeriodicItems(prBot);\n+            var checks = pr.checks(editHash);\n+            assertEquals(1, checks.size());\n+            var check = checks.get(\"jcheck\");\n+            var completedTime1 = check.completedAt().get();\n+            assertEquals(CheckStatus.SUCCESS, check.status());\n+            var substrings = check.metadata().get().split(\"#\");\n+            var prMetadata1 = substrings[0];\n+            var issueMetadata1 = (substrings.length > 1) ? substrings[1] : \"\";\n+            assertNotEquals(\"\", issueMetadata1);\n+\n+            \/\/ Run issueBot, check should not be updated\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime2 = check.completedAt().get();\n+            assertEquals(completedTime1, completedTime2);\n+\n+            \/\/ Update issue2\n+            issue2.setProperty(\"priority\", JSON.of(\"4\"));\n+            \/\/ Run prBot first, check should not be updated\n+            TestBotRunner.runPeriodicItems(prBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime3 = check.completedAt().get();\n+            assertEquals(completedTime2, completedTime3);\n+\n+            \/\/ Run issueBot, check should be updated\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var completedTime4 = check.completedAt().get();\n+            assertNotEquals(completedTime3, completedTime4);\n+            substrings = check.metadata().get().split(\"#\");\n+            var prMetadata2 = substrings[0];\n+            var issueMetadata2 = (substrings.length > 1) ? substrings[1] : \"\";\n+            assertNotEquals(prMetadata1, prMetadata2);\n+            assertNotEquals(issueMetadata1, issueMetadata2);\n+            assertTrue(pr.store().body().contains(\"This is an issue (**Bug**)\"));\n+            assertTrue(pr.store().body().contains(\"This is an issue2 (**Bug** - `\\\"4\\\"`)\"));\n+\n+            \/\/ Update issue\n+            issue.setProperty(\"priority\", JSON.of(\"1\"));\n+            \/\/ Run prBot first\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertFalse(pr.store().body().contains(\"This is an issue (**Bug** - `\\\"1\\\"`)\"));\n+            \/\/ Run issueBot\n+            TestBotRunner.runPeriodicItems(issueBot);\n+            assertTrue(pr.store().body().contains(\"This is an issue (**Bug** - `\\\"1\\\"`)\"));\n+            assertTrue(pr.store().body().contains(\"This is an issue2 (**Bug** - `\\\"4\\\"`)\"));\n+        }\n+    }\n+}\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueBotTests.java","additions":296,"deletions":0,"binary":false,"changes":296,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).build();\n+\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -176,4 +181,5 @@\n-                                      .repo(integrator)\n-                                      .censusRepo(censusBuilder.build())\n-                                      .issueProject(issues)\n-                                      .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -275,1 +281,5 @@\n-            var mergeBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).build();\n+            var mergeBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -310,1 +320,5 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -353,1 +367,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -400,1 +419,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -436,1 +460,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -471,1 +500,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -517,1 +551,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -557,1 +596,6 @@\n-            var prBot = PullRequestBot.newBuilder().repo(integrator).censusRepo(censusBuilder.build()).issueProject(issues).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issues)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -621,4 +665,5 @@\n-                                      .repo(integrator)\n-                                      .censusRepo(censusBuilder.build())\n-                                      .issueProject(issueProject)\n-                                      .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issueProject)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -688,4 +733,5 @@\n-                                      .repo(integrator)\n-                                      .censusRepo(censusBuilder.build())\n-                                      .issueProject(issueProject)\n-                                      .build();\n+                    .repo(integrator)\n+                    .censusRepo(censusBuilder.build())\n+                    .issueProject(issueProject)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -740,0 +786,1 @@\n+                    .issuePRMap(new HashMap<>())\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":69,"deletions":22,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.HashMap;\n@@ -56,2 +57,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableJep(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -220,2 +226,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableJep(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -303,2 +314,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableJep(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -414,2 +430,7 @@\n-            var prBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                    .censusRepo(censusBuilder.build()).enableJep(true).build();\n+            var prBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .censusRepo(censusBuilder.build())\n+                    .enableJep(true)\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -493,2 +514,7 @@\n-            var disableJepBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                            .enableJep(false).censusRepo(censusBuilder.build()).build();\n+            var disableJepBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .enableJep(false)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n@@ -502,2 +528,7 @@\n-            var enableJepBot = PullRequestBot.newBuilder().repo(bot).issueProject(issueProject)\n-                    .enableJep(true).censusRepo(censusBuilder.build()).build();\n+            var enableJepBot = PullRequestBot.newBuilder()\n+                    .repo(bot)\n+                    .issueProject(issueProject)\n+                    .enableJep(true)\n+                    .censusRepo(censusBuilder.build())\n+                    .issuePRMap(new HashMap<>())\n+                    .build();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/JEPCommandTests.java","additions":43,"deletions":12,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -177,0 +177,1 @@\n+            \/\/ A IssueBot for every configured issue project\n@@ -178,15 +179,35 @@\n-            assertEquals(6, bots.size());\n-\n-            var pullRequestBot0 = (PullRequestBot) bots.get(0);\n-            assertEquals(\"PullRequestBot@repo6\", pullRequestBot0.toString());\n-            assertEquals(\"used to run tests\", pullRequestBot0.externalPullRequestCommands().get(\"test\"));\n-            assertEquals(\"TEST2\", pullRequestBot0.issueProject().name());\n-            assertEquals(\"census\", pullRequestBot0.censusRepo().name());\n-            assertEquals(\"master\", pullRequestBot0.censusRef());\n-            assertEquals(\"{test=used to run tests}\", pullRequestBot0.externalPullRequestCommands().toString());\n-            assertEquals(\"{test=Signature needs verify}\", pullRequestBot0.blockingCheckLabels().toString());\n-            assertEquals(\"[rfr]\", pullRequestBot0.twoReviewersLabels().toString());\n-            assertEquals(\"[24h_test]\", pullRequestBot0.twentyFourHoursLabels().toString());\n-            assertFalse(pullRequestBot0.ignoreStaleReviews());\n-            assertEquals(\".*\", pullRequestBot0.allowedTargetBranches().toString());\n-            var integrators = pullRequestBot0.integrators();\n+            assertEquals(9, bots.size());\n+\n+            var pullRequestBot2 = (PullRequestBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"PullRequestBot@repo2\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"PullRequestBot@repo2\", pullRequestBot2.toString());\n+            assertFalse(pullRequestBot2.enableMerge());\n+            assertTrue(pullRequestBot2.mergeSources().contains(\"openjdk\/skara\"));\n+            assertTrue(pullRequestBot2.mergeSources().contains(\"openjdk\/playground\"));\n+            assertFalse(pullRequestBot2.jcheckMerge());\n+            assertFalse(pullRequestBot2.enableBackport());\n+\n+            var pullRequestBot5 = (PullRequestBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"PullRequestBot@repo5\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"PullRequestBot@repo5\", pullRequestBot5.toString());\n+            assertTrue(pullRequestBot5.enableMerge());\n+            assertFalse(pullRequestBot5.jcheckMerge());\n+            assertTrue(pullRequestBot5.enableBackport());\n+\n+            var pullRequestBot6 = (PullRequestBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"PullRequestBot@repo6\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"PullRequestBot@repo6\", pullRequestBot6.toString());\n+            assertEquals(\"used to run tests\", pullRequestBot6.externalPullRequestCommands().get(\"test\"));\n+            assertEquals(\"TEST2\", pullRequestBot6.issueProject().name());\n+            assertEquals(\"census\", pullRequestBot6.censusRepo().name());\n+            assertEquals(\"master\", pullRequestBot6.censusRef());\n+            assertEquals(\"{test=used to run tests}\", pullRequestBot6.externalPullRequestCommands().toString());\n+            assertEquals(\"{test=Signature needs verify}\", pullRequestBot6.blockingCheckLabels().toString());\n+            assertEquals(\"[rfr]\", pullRequestBot6.twoReviewersLabels().toString());\n+            assertEquals(\"[24h_test]\", pullRequestBot6.twentyFourHoursLabels().toString());\n+            assertFalse(pullRequestBot6.ignoreStaleReviews());\n+            assertEquals(\".*\", pullRequestBot6.allowedTargetBranches().toString());\n+            var integrators = pullRequestBot6.integrators();\n@@ -196,16 +217,6 @@\n-            assertTrue(pullRequestBot0.reviewCleanBackport());\n-            assertTrue(pullRequestBot0.reviewMerge());\n-            assertEquals(\"mlbridge[bot]\", pullRequestBot0.mlbridgeBotName());\n-            assertTrue(pullRequestBot0.enableMerge());\n-            assertTrue(pullRequestBot0.jcheckMerge());\n-            assertTrue(pullRequestBot0.enableBackport());\n-\n-            var pullRequestBot1 = (PullRequestBot) bots.get(1);\n-            assertEquals(\"PullRequestBot@repo7\", pullRequestBot1.toString());\n-            assertFalse(pullRequestBot1.jcheckMerge());\n-\n-            var pullRequestBot2 = (PullRequestBot) bots.get(2);\n-            assertEquals(\"PullRequestBot@repo5\", pullRequestBot2.toString());\n-            assertTrue(pullRequestBot2.enableMerge());\n-            assertFalse(pullRequestBot2.jcheckMerge());\n-            assertTrue(pullRequestBot2.enableBackport());\n+            assertTrue(pullRequestBot6.reviewCleanBackport());\n+            assertTrue(pullRequestBot6.reviewMerge());\n+            assertEquals(\"mlbridge[bot]\", pullRequestBot6.mlbridgeBotName());\n+            assertTrue(pullRequestBot6.enableMerge());\n+            assertTrue(pullRequestBot6.jcheckMerge());\n+            assertTrue(pullRequestBot6.enableBackport());\n@@ -213,7 +224,5 @@\n-            var pullRequestBot3 = (PullRequestBot) bots.get(3);\n-            assertEquals(\"PullRequestBot@repo2\", pullRequestBot3.toString());\n-            assertFalse(pullRequestBot3.enableMerge());\n-            assertTrue(pullRequestBot3.mergeSources().contains(\"openjdk\/skara\"));\n-            assertTrue(pullRequestBot3.mergeSources().contains(\"openjdk\/playground\"));\n-            assertFalse(pullRequestBot3.jcheckMerge());\n-            assertFalse(pullRequestBot3.enableBackport());\n+            var pullRequestBot7 = (PullRequestBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"PullRequestBot@repo7\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"PullRequestBot@repo7\", pullRequestBot7.toString());\n+            assertFalse(pullRequestBot7.jcheckMerge());\n@@ -221,1 +230,4 @@\n-            var csrIssueBot1 = (CSRIssueBot) bots.get(4);\n+            var csrIssueBot1 = (CSRIssueBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"CSRIssueBot@TEST\"))\n+                    .findFirst().orElseThrow();\n+            \/\/ repo5 and repo6 are both configured with issueProject TEST2, but only repo5 is enabled csr\n@@ -224,0 +236,1 @@\n+            assertEquals(\"CSRIssueBot@TEST\", csrIssueBot1.toString());\n@@ -225,1 +238,3 @@\n-            var csrIssueBot2 = (CSRIssueBot) bots.get(5);\n+            var csrIssueBot2 = (CSRIssueBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"CSRIssueBot@TEST2\"))\n+                    .findFirst().orElseThrow();\n@@ -228,0 +243,36 @@\n+            assertEquals(\"CSRIssueBot@TEST2\", csrIssueBot2.toString());\n+\n+            var issueBot1 = (IssueBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"IssueBot@TEST\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"IssueBot@TEST\", issueBot1.toString());\n+            \/\/ repo2 is configured with issueProject TEST\n+            assertEquals(1, issueBot1.repositories().size());\n+\n+            var issueBot2 = (IssueBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"IssueBot@TEST2\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"IssueBot@TEST2\", issueBot2.toString());\n+            \/\/ repo5 and repo6 are both configured with issueProject TEST2\n+            assertEquals(2, issueBot2.repositories().size());\n+\n+            var issueBot3 = (IssueBot) bots.stream()\n+                    .filter(bot -> bot.toString().equals(\"IssueBot@TEST3\"))\n+                    .findFirst().orElseThrow();\n+            assertEquals(\"IssueBot@TEST3\", issueBot3.toString());\n+            \/\/ repo7 is configured with issueProject TEST3\n+            assertEquals(1, issueBot3.repositories().size());\n+\n+            \/\/ prBot for repo2, issueBot for TEST and csrIssueBot for TEST should share the same map\n+            assertSame(pullRequestBot2.issuePRMap(), issueBot1.issuePRMap());\n+            assertSame(pullRequestBot2.issuePRMap(), csrIssueBot1.issuePRMap());\n+            \/\/ prBot for repo5, repo6, issueBot for TEST2 and csrIssueBot for TEST2 should share the same map\n+            assertSame(pullRequestBot6.issuePRMap(), pullRequestBot5.issuePRMap());\n+            assertSame(pullRequestBot6.issuePRMap(), issueBot2.issuePRMap());\n+            assertSame(pullRequestBot6.issuePRMap(), csrIssueBot2.issuePRMap());\n+            \/\/ prBot for repo7 and issueBot for TEST3 should share the same map\n+            assertSame(pullRequestBot7.issuePRMap(), issueBot3.issuePRMap());\n+\n+            assertNotSame(pullRequestBot6.issuePRMap(), pullRequestBot2.issuePRMap());\n+            assertNotSame(pullRequestBot6.issuePRMap(), pullRequestBot7.issuePRMap());\n+            assertNotSame(pullRequestBot7.issuePRMap(), pullRequestBot2.issuePRMap());\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBotFactoryTest.java","additions":91,"deletions":40,"binary":false,"changes":131,"status":"modified"}]}