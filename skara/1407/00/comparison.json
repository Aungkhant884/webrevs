{"files":[{"patch":"@@ -228,0 +228,16 @@\n+        if (bot.confOverrideRepository().isEmpty()) {\n+            \/\/check whether this repo contains .jcheck\/conf, if not, let the pr author to notify the repo owner\n+            try {\n+                pr.repository().fileContents(\".jcheck\/conf\", pr.targetRef());\n+            } catch (NoSuchElementException e) {\n+                String message = \"@\" + pr.author().username() + \" This repo doesn't contain `.jcheck\/conf`,\"\n+                        + \" please close this pr and notify the repo owner.\"\n+                        + \" After uploading `.jcheck\/conf` to the target branch, you can create a new pull request.\";\n+                boolean messageSent = pr.comments().stream().anyMatch(comment -> comment.body().equals(message));\n+                if (!messageSent) {\n+                    pr.addComment(message);\n+                }\n+                return List.of();\n+            }\n+        }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2176,0 +2176,50 @@\n+\n+    @Test\n+    void jCheckConfMissing(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo);\n+             var tempFolder = new TemporaryDirectory()) {\n+            var author = credentials.getHostedRepository();\n+            var reviewer = credentials.getHostedRepository();\n+\n+            var censusBuilder = credentials.getCensusBuilder()\n+                    .addAuthor(author.forge().currentUser().id())\n+                    .addReviewer(reviewer.forge().currentUser().id());\n+            var seedFolder = tempFolder.path().resolve(\"seed\");\n+            var checkBot = PullRequestBot.newBuilder()\n+                    .repo(author)\n+                    .censusRepo(censusBuilder.build())\n+                    .censusLink(\"https:\/\/census.com\/{{contributor}}-profile\")\n+                    .seedStorage(seedFolder)\n+                    .build();\n+\n+            \/\/ Populate the projects repository\n+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());\n+\n+            \/\/ Remove .jcheck\/conf\n+            localRepo.remove(localRepo.root().resolve(\".jcheck\/conf\"));\n+            localRepo.commit(\"no conf\", \"testauthor\", \"ta@none.none\");\n+\n+            var masterHash = localRepo.resolve(\"master\").orElseThrow();\n+            localRepo.push(masterHash, author.url(), \"master\", true);\n+\n+            \/\/ Create a new branch\n+            var editBranch = localRepo.branch(masterHash, \"edit\");\n+            localRepo.checkout(editBranch);\n+            var editHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(editHash, author.url(), \"edit\", true);\n+\n+            var pr = credentials.createPullRequest(author, \"master\", \"edit\", \"This is a pull request\");\n+\n+            \/\/ Check the status\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            var comments = pr.store().comments();\n+            assertTrue(comments.get(comments.size() - 1).body().contains(\"@\" + pr.author().username() + \" This repo doesn't contain `.jcheck\/conf`,\"\n+                    + \" please close this pr and notify the repo owner.\"\n+                    + \" After uploading `.jcheck\/conf` to the target branch, you can create a new pull request.\"));\n+\n+            \/\/ Make sure the warning message will be sent only once\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            assertEquals(1, pr.store().comments().size());\n+        }\n+    }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"}]}