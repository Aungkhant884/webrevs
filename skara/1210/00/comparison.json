{"files":[{"patch":"@@ -184,1 +184,1 @@\n-        var refHash = localClone.fetch(remote, \"+\" + ref + \":hostedrepositorypool\");\n+        var refHash = localClone.fetch(remote, \"+\" + ref + \":hostedrepositorypool\", true, true);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepositoryPool.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,4 @@\n-    Hash fetch(URI uri, String refspec, boolean includeTags) throws IOException;\n+    default Hash fetch(URI uri, String refspec, boolean includeTags) throws IOException {\n+        return fetch(uri, refspec, includeTags, false);\n+    }\n+    Hash fetch(URI uri, String refspec, boolean includeTags, boolean forceUpdateTags) throws IOException;\n@@ -138,1 +141,4 @@\n-    Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException;\n+    default Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException {\n+        return tag(hash, tagName, message, authorName, authorEmail, date, false);\n+    }\n+    Tag tag(Hash hash, String tagName, String message, String authorName, String authorEmail, ZonedDateTime date, boolean force) throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-    public Hash fetch(URI uri, String refspec, boolean includeTags) throws IOException {\n+    public Hash fetch(URI uri, String refspec, boolean includeTags, boolean forceUpdateTags) throws IOException {\n@@ -495,0 +495,3 @@\n+            if (forceUpdateTags) {\n+                cmd.add(\"--force\");\n+            }\n@@ -502,1 +505,1 @@\n-            return resolve(\"FETCH_HEAD\").get();\n+            return resolve(\"FETCH_HEAD\").orElseThrow();\n@@ -876,2 +879,6 @@\n-    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException {\n-        var cmd = Process.capture(\"git\", \"tag\", \"--annotate\", \"--message=\" + message, name, hash.hex())\n+    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail, ZonedDateTime date, boolean force) throws IOException {\n+        var cmdLine = new ArrayList<>(List.of(\"git\", \"tag\", \"--annotate\", \"--message=\" + message, name, hash.hex()));\n+        if (force) {\n+            cmdLine.add(\"--force\");\n+        }\n+        var cmd = Process.capture(cmdLine.toArray(new String[0]))\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -463,2 +463,2 @@\n-    public Hash fetch(URI uri, String refspec, boolean includeTags) throws IOException {\n-        \/\/ Ignore includeTags, Mercurial always fetches tags\n+    public Hash fetch(URI uri, String refspec, boolean includeTags, boolean forceUpdateTags) throws IOException {\n+        \/\/ Ignore includeTags and forceUpdateTags, Mercurial always fetches tags\n@@ -734,1 +734,1 @@\n-    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail, ZonedDateTime date) throws IOException {\n+    public Tag tag(Hash hash, String name, String message, String authorName, String authorEmail, ZonedDateTime date, boolean force) throws IOException {\n@@ -747,0 +747,3 @@\n+        if (force) {\n+            cmd.add(\"--force\");\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -835,0 +835,44 @@\n+    @ParameterizedTest\n+    @EnumSource(VCS.class)\n+    void testFetchUpdatedTag(VCS vcs) throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var upstream = TestableRepository.init(dir.path(), vcs);\n+\n+            if (vcs == VCS.GIT) {\n+                Files.write(upstream.root().resolve(\".git\").resolve(\"config\"),\n+                        List.of(\"[receive]\", \"denyCurrentBranch=ignore\"),\n+                        WRITE, APPEND);\n+            }\n+\n+            var readme = dir.path().resolve(\"README\");\n+            Files.write(readme, List.of(\"Hello, readme!\"));\n+\n+            upstream.add(readme);\n+            var firstHash = upstream.commit(\"Add README\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            var firstTag = upstream.tag(firstHash, \"my-tag\", \"First tag message\", \"duke\", \"duke@openjdk.java.net\");\n+\n+            try (var dir2 = new TemporaryDirectory()) {\n+                var downstream = TestableRepository.init(dir2.path(), vcs);\n+\n+                \/\/ note: forcing unix path separators for URI\n+                var upstreamURI = URI.create(\"file:\/\/\/\" + dir.toString().replace('\\\\', '\/'));\n+\n+                downstream.fetch(upstreamURI, downstream.defaultBranch().name());\n+                var tagHash = downstream.resolve(firstTag).orElseThrow();\n+                downstream.checkout(tagHash, false);\n+\n+                Files.write(readme, List.of(\"Readme change\"), WRITE, APPEND);\n+                upstream.add(readme);\n+                var secondHash = upstream.commit(\"Modify README\", \"duke\", \"duke@openjdk.java.net\");\n+                var secondTag = upstream.tag(secondHash, \"my-tag\", \"Second tag message\",\"duke\",\n+                        \"duke@openjdk.java.net\", null, true);\n+\n+                downstream.fetch(upstreamURI, downstream.defaultBranch().name(), true, true);\n+                tagHash = downstream.resolve(secondTag).orElseThrow();\n+                downstream.checkout(tagHash, false);\n+                assertEquals(secondHash, tagHash, \"Tag not updated to second hash\");\n+            }\n+        }\n+    }\n+\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"modified"}]}