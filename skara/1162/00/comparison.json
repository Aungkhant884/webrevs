{"files":[{"patch":"@@ -198,0 +198,13 @@\n+\n+                        var properties = iss.get().properties();\n+                        if (!properties.containsKey(\"issuetype\")) {\n+                            var issueString = \"[\" + iss.get().id() + \"](\" + iss.get().webUrl() + \")\";\n+                            ret.add(\"Issue \" + issueString + \" does not contain property `issuetype`\");\n+                            setExpiration(Duration.ofMinutes(10));\n+                        } else {\n+                            var issueType = properties.get(\"issuetype\").asString();\n+                            if (!primaryTypes.contains(issueType)) {\n+                                ret.add(\"Issue of type `\" + issueType + \"` is not allowed for integrations\");\n+                                setExpiration(Duration.ofMinutes(10));\n+                            }\n+                        }\n@@ -481,4 +494,0 @@\n-                            if (properties.containsKey(\"issuetype\") && !primaryTypes.contains(properties.get(\"issuetype\").asString())) {\n-                                progressBody.append(\" ⚠️ Unexpected issue type `\").append(properties.get(\"issuetype\").asString()).append(\"`.\");\n-                                setExpiration(Duration.ofMinutes(10));\n-                            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-            var issue1 = issues.createIssue(\"My first issue\", List.of(\"Hello\"), Map.of());\n+            var issue1 = issues.createIssue(\"My first issue\", List.of(\"Hello\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n@@ -993,1 +993,1 @@\n-            var issue2 = issues.createIssue(\"My second issue\", List.of(\"Body\"), Map.of());\n+            var issue2 = issues.createIssue(\"My second issue\", List.of(\"Body\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n@@ -1070,1 +1070,1 @@\n-            var issue1 = issues.createIssue(\"My first issue\", List.of(\"Hello\"), Map.of());\n+            var issue1 = issues.createIssue(\"My first issue\", List.of(\"Hello\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n@@ -1090,1 +1090,1 @@\n-            var issue2 = issues.createIssue(\"My second issue\", List.of(\"Body\"), Map.of());\n+            var issue2 = issues.createIssue(\"My second issue\", List.of(\"Body\"), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n@@ -1510,2 +1510,2 @@\n-            var feature = issues.createIssue(\"My first feature\", List.of(\"A feature\"),\n-                                             Map.of(\"issuetype\", JSON.of(\"Backport\")));\n+            var backport = issues.createIssue(\"My first feature\", List.of(\"A feature\"),\n+                                              Map.of(\"issuetype\", JSON.of(\"Backport\")));\n@@ -1534,4 +1534,4 @@\n-            var featureHash = CheckableRepository.appendAndCommit(localRepo);\n-            localRepo.push(featureHash, author.url(), \"feature\", true);\n-            var featurePR = credentials.createPullRequest(author, \"master\", \"feature\",\n-                                                          feature.id() + \": My first feature\", true);\n+            var backportHash = CheckableRepository.appendAndCommit(localRepo);\n+            localRepo.push(backportHash, author.url(), \"backport\", true);\n+            var backportPR = credentials.createPullRequest(author, \"master\", \"backport\",\n+                                                           backport.id() + \": My first backport\", true);\n@@ -1541,4 +1541,4 @@\n-            assertTrue(featurePR.body().contains(feature.id()));\n-            assertTrue(featurePR.body().contains(\"My first feature\"));\n-            assertTrue(featurePR.body().contains(\"## Issue\\n\"));\n-            assertTrue(featurePR.body().contains(\"Unexpected issue type\"));\n+            assertTrue(backportPR.body().contains(backport.id()));\n+            assertTrue(backportPR.body().contains(\"My first feature\"));\n+            assertTrue(backportPR.body().contains(\"### Integration blocker\"));\n+            assertTrue(backportPR.body().contains(\"Issue of type `Backport` is not allowed for integrations\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -381,1 +381,1 @@\n-        var issue = issueProject.createIssue(title, List.of(), Map.of());\n+        var issue = issueProject.createIssue(title, List.of(), Map.of(\"issuetype\", JSON.of(\"Bug\")));\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/HostCredentials.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}