{"files":[{"patch":"@@ -132,0 +132,7 @@\n+        \/\/ The role name of the configuration should be changed to the official role name.\n+        var formatLimits = new LinkedHashMap<String, Integer>();\n+        formatLimits.put(\"Lead\", updatedLimits.get(\"lead\"));\n+        formatLimits.put(\"Reviewer\", updatedLimits.get(\"reviewers\"));\n+        formatLimits.put(\"Committer\", updatedLimits.get(\"committers\"));\n+        formatLimits.put(\"Author\", updatedLimits.get(\"authors\"));\n+        formatLimits.put(\"Contributor\", updatedLimits.get(\"contributors\"));\n@@ -134,1 +141,1 @@\n-        var totalRequired = updatedLimits.values().stream().mapToInt(Integer::intValue).sum();\n+        var totalRequired = formatLimits.values().stream().mapToInt(Integer::intValue).sum();\n@@ -139,1 +146,1 @@\n-        var nonZeroDescriptions = updatedLimits.entrySet().stream()\n+        var nonZeroDescriptions = formatLimits.entrySet().stream()\n@@ -141,1 +148,1 @@\n-                .map(entry -> entry.getValue() + \" of role \" + entry.getKey())\n+                .map(entry -> entry.getValue() + \" \" + entry.getKey() + (entry.getValue() > 1 ? \"s\" : \"\"))\n@@ -144,1 +151,1 @@\n-            reply.print(\" (with \" + String.join(\", \", nonZeroDescriptions) + \")\");\n+            reply.print(\" (with at least \" + String.join(\", \", nonZeroDescriptions) + \")\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersCommand.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-    private static final String reviewersCommandFinallyOutput = \"The total number of required reviews for this PR \" +\n-            \"(including the jcheck configuration and the last \/reviewers command) is now set to \";\n+    private static final String REVIEWERS_COMMAND_OUTPUT = \"The total number of required reviews for this PR \" +\n+            \"(including the jcheck configuration and the last \/reviewers command) is now set to %d (with at least %s).\";\n@@ -46,1 +46,1 @@\n-    private static final String ZERO_REVIEW_PROGRESS = \"Change must be properly reviewed (no reviews required)\";\n+    private static final String ZERO_REVIEW_PROGRESS = \"Change must be properly reviewed (no review required)\";\n@@ -81,1 +81,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -89,1 +89,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -95,1 +95,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -101,1 +101,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -107,1 +107,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -114,2 +114,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role authors).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Author\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -122,2 +122,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role committers).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 committer\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Committer\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Committer\")));\n@@ -130,2 +130,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"2 (with 2 of role reviewers).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"2 reviewers\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"2 Reviewers\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"2 Reviewers\")));\n@@ -141,1 +141,1 @@\n-            assertTrue(updatedPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"2 reviewers\")));\n+            assertTrue(updatedPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"2 Reviewers\")));\n@@ -151,1 +151,1 @@\n-            assertTrue(updatedPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(updatedPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -157,2 +157,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"1 (with 1 of role lead).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 lead\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 1, \"1 Lead\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Lead\")));\n@@ -168,2 +168,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"1 (with 1 of role reviewers).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertLastCommentContains(reviewerPr,  String.format(REVIEWERS_COMMAND_OUTPUT, 1, \"1 Reviewer\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -209,2 +209,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role authors).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Author\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -221,1 +221,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -226,1 +226,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -232,1 +232,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -267,1 +267,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -273,1 +273,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -280,2 +280,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role authors).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Author\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -287,1 +287,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -292,1 +292,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -298,1 +298,1 @@\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -332,2 +332,2 @@\n-            assertLastCommentContains(authorPR, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role authors).\");\n-            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertLastCommentContains(authorPR, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Author\"));\n+            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -369,2 +369,2 @@\n-            assertLastCommentContains(authorPR, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role authors).\");\n-            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertLastCommentContains(authorPR, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Author\"));\n+            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -375,1 +375,1 @@\n-            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -381,2 +381,2 @@\n-            assertLastCommentContains(reviewerPr, reviewersCommandFinallyOutput + \"1 (with 1 of role reviewers).\");\n-            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 reviewer\")));\n+            assertLastCommentContains(reviewerPr, String.format(REVIEWERS_COMMAND_OUTPUT, 1, \"1 Reviewer\"));\n+            assertTrue(reviewerPr.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 1, \"\", \"1 Reviewer\")));\n@@ -412,2 +412,2 @@\n-            assertLastCommentContains(authorPR, reviewersCommandFinallyOutput + \"2 (with 1 of role reviewers, 1 of role authors).\");\n-            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 reviewer, 1 author\")));\n+            assertLastCommentContains(authorPR, String.format(REVIEWERS_COMMAND_OUTPUT, 2, \"1 Reviewer, 1 Author\"));\n+            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"1 Reviewer, 1 Author\")));\n@@ -518,8 +518,0 @@\n-        StringBuilder builder = new StringBuilder();\n-        builder.append(reviewersCommandFinallyOutput);\n-        builder.append(totalNum);\n-        if (leadNum == 0 && reviewerNum == 0 && committerNum == 0 && authorNum == 0 && contributorNum == 0) {\n-            builder.append(\".\");\n-            return builder.toString();\n-        }\n-        builder.append(\" (with\");\n@@ -528,5 +520,5 @@\n-        map.put(\"lead\", leadNum);\n-        map.put(\"reviewers\", reviewerNum);\n-        map.put(\"committers\", committerNum);\n-        map.put(\"authors\", authorNum);\n-        map.put(\"contributors\", contributorNum);\n+        map.put(\"Lead\", leadNum);\n+        map.put(\"Reviewer\", reviewerNum);\n+        map.put(\"Committer\", committerNum);\n+        map.put(\"Author\", authorNum);\n+        map.put(\"Contributor\", contributorNum);\n@@ -535,1 +527,1 @@\n-                list.add(\" \" + entry.getValue() + \" of role \" + entry.getKey());\n+                list.add(entry.getValue() + \" \" + entry.getKey() + (entry.getValue() > 1 ? \"s\" : \"\"));\n@@ -538,3 +530,1 @@\n-        builder.append(String.join(\",\", list));\n-        builder.append(\").\");\n-        return builder.toString();\n+        return String.format(REVIEWERS_COMMAND_OUTPUT, totalNum, String.join(\", \", list));\n@@ -546,5 +536,5 @@\n-        reviewRequirementMap.put(\"lead\", leadNum);\n-        reviewRequirementMap.put(\"reviewer\", reviewerNum);\n-        reviewRequirementMap.put(\"committer\", committerNum);\n-        reviewRequirementMap.put(\"author\", authorNum);\n-        reviewRequirementMap.put(\"contributor\", contributorNum);\n+        reviewRequirementMap.put(\"Lead\", leadNum);\n+        reviewRequirementMap.put(\"Reviewer\", reviewerNum);\n+        reviewRequirementMap.put(\"Committer\", committerNum);\n+        reviewRequirementMap.put(\"Author\", authorNum);\n+        reviewRequirementMap.put(\"Contributor\", contributorNum);\n@@ -611,1 +601,1 @@\n-            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"2 reviewers\")));\n+            assertTrue(authorPR.body().contains(String.format(REVIEW_PROGRESS_TEMPLATE, 2, \"s\", \"2 Reviewers\")));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTests.java","additions":54,"deletions":64,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -88,5 +88,5 @@\n-        reviewRequirementMap.put(\"lead\", lead);\n-        reviewRequirementMap.put(\"reviewer\", reviewers);\n-        reviewRequirementMap.put(\"committer\", committers);\n-        reviewRequirementMap.put(\"author\", authors);\n-        reviewRequirementMap.put(\"contributor\", contributors);\n+        reviewRequirementMap.put(\"Lead\", lead);\n+        reviewRequirementMap.put(\"Reviewer\", reviewers);\n+        reviewRequirementMap.put(\"Committer\", committers);\n+        reviewRequirementMap.put(\"Author\", authors);\n+        reviewRequirementMap.put(\"Contributor\", contributors);\n@@ -101,1 +101,1 @@\n-            reviewRequirements = \"no reviews required\";\n+            reviewRequirements = \"no review required\";\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/ReviewersConfiguration.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -564,1 +564,1 @@\n-        var noReview = \"no reviews required\";\n+        var noReview = \"no review required\";\n@@ -576,1 +576,1 @@\n-        assertEquals(String.format(hasReview, 1, \"1 reviewer\"),\n+        assertEquals(String.format(hasReview, 1, \"1 Reviewer\"),\n@@ -581,1 +581,1 @@\n-        assertEquals(String.format(hasReview, 1, \"1 committer\"),\n+        assertEquals(String.format(hasReview, 1, \"1 Committer\"),\n@@ -588,1 +588,1 @@\n-        assertEquals(String.format(hasReviews, 2, \"1 reviewer, 1 committer\"),\n+        assertEquals(String.format(hasReviews, 2, \"1 Reviewer, 1 Committer\"),\n@@ -593,1 +593,1 @@\n-        assertEquals(String.format(hasReviews, 2, \"2 reviewers\"),\n+        assertEquals(String.format(hasReviews, 2, \"2 Reviewers\"),\n@@ -601,1 +601,1 @@\n-        assertEquals(String.format(hasReviews, 3, \"1 reviewer, 1 committer, 1 author\"),\n+        assertEquals(String.format(hasReviews, 3, \"1 Reviewer, 1 Committer, 1 Author\"),\n@@ -607,1 +607,1 @@\n-        assertEquals(String.format(hasReviews, 3, \"1 reviewer, 2 committers\"),\n+        assertEquals(String.format(hasReviews, 3, \"1 Reviewer, 2 Committers\"),\n@@ -612,1 +612,1 @@\n-        assertEquals(String.format(hasReviews, 3, \"3 committers\"),\n+        assertEquals(String.format(hasReviews, 3, \"3 Committers\"),\n@@ -621,1 +621,1 @@\n-        assertEquals(String.format(hasReviews, 4, \"1 reviewer, 1 committer, 1 author, 1 contributor\"),\n+        assertEquals(String.format(hasReviews, 4, \"1 Reviewer, 1 Committer, 1 Author, 1 Contributor\"),\n@@ -628,1 +628,1 @@\n-        assertEquals(String.format(hasReviews, 4, \"1 reviewer, 1 committer, 2 authors\"),\n+        assertEquals(String.format(hasReviews, 4, \"1 Reviewer, 1 Committer, 2 Authors\"),\n@@ -634,1 +634,1 @@\n-        assertEquals(String.format(hasReviews, 4, \"1 reviewer, 3 authors\"),\n+        assertEquals(String.format(hasReviews, 4, \"1 Reviewer, 3 Authors\"),\n@@ -639,1 +639,1 @@\n-        assertEquals(String.format(hasReviews, 4, \"4 authors\"),\n+        assertEquals(String.format(hasReviews, 4, \"4 Authors\"),\n@@ -649,1 +649,1 @@\n-        assertEquals(String.format(hasReviews, 5, \"1 lead, 1 reviewer, 1 committer, 1 author, 1 contributor\"),\n+        assertEquals(String.format(hasReviews, 5, \"1 Lead, 1 Reviewer, 1 Committer, 1 Author, 1 Contributor\"),\n@@ -657,1 +657,1 @@\n-        assertEquals(String.format(hasReviews, 5, \"1 reviewer, 1 committer, 1 author, 2 contributors\"),\n+        assertEquals(String.format(hasReviews, 5, \"1 Reviewer, 1 Committer, 1 Author, 2 Contributors\"),\n@@ -664,1 +664,1 @@\n-        assertEquals(String.format(hasReviews, 5, \"1 reviewer, 1 committer, 3 contributors\"),\n+        assertEquals(String.format(hasReviews, 5, \"1 Reviewer, 1 Committer, 3 Contributors\"),\n@@ -670,1 +670,1 @@\n-        assertEquals(String.format(hasReviews, 5, \"1 reviewer, 4 contributors\"),\n+        assertEquals(String.format(hasReviews, 5, \"1 Reviewer, 4 Contributors\"),\n@@ -675,1 +675,1 @@\n-        assertEquals(String.format(hasReviews, 5, \"5 contributors\"),\n+        assertEquals(String.format(hasReviews, 5, \"5 Contributors\"),\n","filename":"jcheck\/src\/test\/java\/org\/openjdk\/skara\/jcheck\/ReviewersCheckTests.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}