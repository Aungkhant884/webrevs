{"files":[{"patch":"@@ -45,0 +45,1 @@\n+    implementation project(':xml')\n","filename":"bots\/censussync\/build.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+    requires org.openjdk.skara.xml;\n","filename":"bots\/censussync\/src\/main\/java\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import org.openjdk.skara.census.Census;\n@@ -31,0 +30,1 @@\n+import org.openjdk.skara.xml.XML;\n@@ -38,1 +38,0 @@\n-import java.time.format.DateTimeFormatter;\n","filename":"bots\/censussync\/src\/main\/java\/org\/openjdk\/skara\/bots\/censussync\/CensusSyncUpgradeBot.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,82 +0,0 @@\n-\/\/ Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n-\/\/ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-package org.openjdk.skara.bots.censussync;\n-\n-import org.w3c.dom.*;\n-import org.xml.sax.*;\n-\n-import javax.xml.parsers.*;\n-import java.io.*;\n-import java.nio.charset.StandardCharsets;\n-import java.nio.file.*;\n-import java.util.*;\n-\n-class XML {\n-    static Document parse(String p) throws IOException {\n-        try {\n-            var factory = DocumentBuilderFactory.newInstance();\n-            var builder = factory.newDocumentBuilder();\n-            return builder.parse(new InputSource(new ByteArrayInputStream(p.getBytes(StandardCharsets.UTF_8))));\n-        } catch (ParserConfigurationException | SAXException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    static List<Element> children(Element element, String name) {\n-        var result = new ArrayList<Element>();\n-\n-        var nodes = element.getChildNodes();\n-        for (int i = 0; i < nodes.getLength(); i++) {\n-            var node = nodes.item(i);\n-            if (node.getNodeType() == Node.ELEMENT_NODE) {\n-                Element child = (Element) node;\n-                if (child.getTagName().equals(name)) {\n-                    result.add(child);\n-                }\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    static List<Element> children(Document document, String name) {\n-        var result = new ArrayList<Element>();\n-\n-        var nodes = document.getElementsByTagName(name);\n-        for (int i = 0; i < nodes.getLength(); i++) {\n-            var node = nodes.item(i);\n-            if (node.getNodeType() == Node.ELEMENT_NODE) {\n-                result.add((Element) node);\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    private static Element single(List<Element> elements) {\n-        if (elements.size() > 1) {\n-            throw new IllegalArgumentException(\"Too many children with name\");\n-        }\n-\n-        return elements.isEmpty() ? null : elements.get(0);\n-    }\n-\n-    static Element child(Element element, String name) {\n-        var elements = children(element, name);\n-        return single(elements);\n-    }\n-\n-    static Element child(Document document, String name) {\n-        var elements = children(document, name);\n-        return single(elements);\n-    }\n-\n-    static String attribute(Element element, String name) {\n-        return element.getAttribute(name);\n-    }\n-\n-    static boolean hasAttribute(Element element, String name) {\n-        return element.hasAttribute(name);\n-    }\n-}\n","filename":"bots\/censussync\/src\/main\/java\/org\/openjdk\/skara\/bots\/censussync\/XML.java","additions":0,"deletions":82,"binary":false,"changes":82,"status":"deleted"},{"patch":"@@ -32,0 +32,4 @@\n+dependencies {\n+    implementation project(':xml')\n+}\n+\n","filename":"census\/build.gradle","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+    requires org.openjdk.skara.xml;\n","filename":"census\/src\/main\/java\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.stream.*;\n@@ -33,0 +32,2 @@\n+\n+import org.openjdk.skara.xml.XML;\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Census.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+import org.openjdk.skara.xml.XML;\n+\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Contributors.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+\n+import org.openjdk.skara.xml.XML;\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Group.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+import org.openjdk.skara.xml.XML;\n+\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Namespace.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+\n+import org.openjdk.skara.xml.XML;\n@@ -27,2 +29,0 @@\n-import org.xml.sax.*;\n-import javax.xml.parsers.*;\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Parser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+\n+import org.openjdk.skara.xml.XML;\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Project.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+import org.openjdk.skara.xml.XML;\n+\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/Version.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,110 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.census;\n-\n-import java.nio.file.*;\n-import java.io.IOException;\n-import java.io.StringReader;\n-import java.util.*;\n-import org.w3c.dom.*;\n-import org.xml.sax.*;\n-import javax.xml.parsers.*;\n-\n-class XML {\n-    static Document parse(Path p) throws IOException {\n-        return parse(new InputSource(Files.newInputStream(p)));\n-    }\n-\n-    static Document parse(List<String> lines) throws IOException {\n-        return parse(new InputSource(new StringReader(String.join(\"\\n\", lines))));\n-    }\n-\n-    private static Document parse(InputSource source) throws IOException {\n-        try {\n-            var factory = DocumentBuilderFactory.newInstance();\n-            var builder = factory.newDocumentBuilder();\n-            return builder.parse(source);\n-        } catch (ParserConfigurationException e) {\n-            throw new RuntimeException(e);\n-        } catch (SAXException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    static List<Element> children(Element element, String name) {\n-        var result = new ArrayList<Element>();\n-\n-        var nodes = element.getChildNodes();\n-        for (int i = 0; i < nodes.getLength(); i++) {\n-            var node = nodes.item(i);\n-            if (node.getNodeType() == Node.ELEMENT_NODE) {\n-                Element child = (Element) node;\n-                if (child.getTagName().equals(name)) {\n-                    result.add(child);\n-                }\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    static List<Element> children(Document document, String name) {\n-        var result = new ArrayList<Element>();\n-\n-        var nodes = document.getElementsByTagName(name);\n-        for (int i = 0; i < nodes.getLength(); i++) {\n-            var node = nodes.item(i);\n-            if (node.getNodeType() == Node.ELEMENT_NODE) {\n-                result.add((Element) node);\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    private static Element single(List<Element> elements) {\n-        if (elements.size() > 1) {\n-            throw new IllegalArgumentException(\"Too many children with name\");\n-        }\n-\n-        return elements.isEmpty() ? null : elements.get(0);\n-    }\n-\n-    static Element child(Element element, String name) {\n-        var elements = children(element, name);\n-        return single(elements);\n-    }\n-\n-    static Element child(Document document, String name) {\n-        var elements = children(document, name);\n-        return single(elements);\n-    }\n-\n-    static String attribute(Element element, String name) {\n-        return element.getAttribute(name);\n-    }\n-\n-    static boolean hasAttribute(Element element, String name) {\n-        return element.hasAttribute(name);\n-    }\n-}\n","filename":"census\/src\/main\/java\/org\/openjdk\/skara\/census\/XML.java","additions":0,"deletions":110,"binary":false,"changes":110,"status":"deleted"},{"patch":"@@ -55,0 +55,1 @@\n+include 'xml'\n","filename":"settings.gradle","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module {\n+    name = 'org.openjdk.skara.xml'\n+}\n+\n+publishing {\n+    publications {\n+        webrev(MavenPublication) {\n+            from components.java\n+        }\n+    }\n+}\n","filename":"xml\/build.gradle","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module org.openjdk.skara.xml {\n+    requires java.xml;\n+    exports org.openjdk.skara.xml;\n+}\n","filename":"xml\/src\/main\/java\/module-info.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.xml;\n+\n+import java.io.*;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.*;\n+import java.util.*;\n+import org.w3c.dom.*;\n+import org.xml.sax.*;\n+import javax.xml.parsers.*;\n+\n+public class XML {\n+    public static Document parse(Path p) throws IOException {\n+        return parse(new InputSource(Files.newInputStream(p)));\n+    }\n+\n+    public static Document parse(String p) throws IOException {\n+        try {\n+            var factory = DocumentBuilderFactory.newInstance();\n+            var builder = factory.newDocumentBuilder();\n+            return builder.parse(new InputSource(new ByteArrayInputStream(p.getBytes(StandardCharsets.UTF_8))));\n+        } catch (ParserConfigurationException | SAXException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static Document parse(List<String> lines) throws IOException {\n+        return parse(new InputSource(new StringReader(String.join(\"\\n\", lines))));\n+    }\n+\n+    private static Document parse(InputSource source) throws IOException {\n+        try {\n+            var factory = DocumentBuilderFactory.newInstance();\n+            var builder = factory.newDocumentBuilder();\n+            return builder.parse(source);\n+        } catch (ParserConfigurationException | SAXException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static List<Element> children(Element element, String name) {\n+        var result = new ArrayList<Element>();\n+\n+        var nodes = element.getChildNodes();\n+        for (int i = 0; i < nodes.getLength(); i++) {\n+            var node = nodes.item(i);\n+            if (node.getNodeType() == Node.ELEMENT_NODE) {\n+                Element child = (Element) node;\n+                if (child.getTagName().equals(name)) {\n+                    result.add(child);\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    public static List<Element> children(Document document, String name) {\n+        var result = new ArrayList<Element>();\n+\n+        var nodes = document.getElementsByTagName(name);\n+        for (int i = 0; i < nodes.getLength(); i++) {\n+            var node = nodes.item(i);\n+            if (node.getNodeType() == Node.ELEMENT_NODE) {\n+                result.add((Element) node);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    private static Element single(List<Element> elements) {\n+        if (elements.size() > 1) {\n+            throw new IllegalArgumentException(\"Too many children with name\");\n+        }\n+\n+        return elements.isEmpty() ? null : elements.get(0);\n+    }\n+\n+    public static Element child(Element element, String name) {\n+        var elements = children(element, name);\n+        return single(elements);\n+    }\n+\n+    public static Element child(Document document, String name) {\n+        var elements = children(document, name);\n+        return single(elements);\n+    }\n+\n+    public static String attribute(Element element, String name) {\n+        return element.getAttribute(name);\n+    }\n+\n+    public static boolean hasAttribute(Element element, String name) {\n+        return element.hasAttribute(name);\n+    }\n+}\n","filename":"xml\/src\/main\/java\/org\/openjdk\/skara\/xml\/XML.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"}]}