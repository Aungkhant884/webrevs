{"files":[{"patch":"@@ -154,1 +154,3 @@\n-  assert(_num_regions == (max_byte_size \/ reg_size_bytes), \"Must match\");\n+  assert(_num_regions == (max_byte_size \/ reg_size_bytes),\n+         \"Regions should cover entire heap exactly: \" SIZE_FORMAT \" != \" SIZE_FORMAT \"\/\" SIZE_FORMAT,\n+         _num_regions, max_byte_size, reg_size_bytes);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -544,4 +544,4 @@\n-  \/\/ Otherwise, uncommitting one region may falsely uncommit the adjacent\n-  \/\/ regions too.\n-  \/\/ Also see shenandoahArguments.cpp, where it handles UseLargePages.\n-  if (UseLargePages && ShenandoahUncommit) {\n+  \/\/ The heap sizes would be rounded by heap initialization code by\n+  \/\/ page size, so we need to round up the region size too, to cover\n+  \/\/ the heap exactly.\n+  if (UseLargePages) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test id=default\n+ * @requires vm.gc.Shenandoah\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -Xms128m -Xmx128m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC          -Xmx128m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -Xms128m          TestLargePages\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -Xms131m -Xmx131m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC          -Xmx131m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -Xms131m          TestLargePages\n+ *\/\n+\n+\/*\n+ * @test id=lp\n+ * @requires vm.gc.Shenandoah\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseLargePages -Xms128m -Xmx128m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseLargePages          -Xmx128m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseLargePages -Xms128m          TestLargePages\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseLargePages -Xms131m -Xmx131m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseLargePages          -Xmx131m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseLargePages -Xms131m          TestLargePages\n+ *\/\n+\n+\/*\n+ * @test id=thp\n+ * @requires vm.gc.Shenandoah\n+ * @requires os.family == \"linux\"\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseTransparentHugePages -Xms128m -Xmx128m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseTransparentHugePages          -Xmx128m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseTransparentHugePages -Xms128m          TestLargePages\n+ *\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseTransparentHugePages -Xms131m -Xmx131m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseTransparentHugePages          -Xmx131m TestLargePages\n+ * @run main\/othervm -XX:+UseShenandoahGC -XX:+UseTransparentHugePages -Xms131m          TestLargePages\n+ *\/\n+\n+public class TestLargePages {\n+    public static void main(String[] args) {\n+        \/\/ Everything is checked on initialization\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestLargePages.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}