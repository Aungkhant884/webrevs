{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## The FreeType Project: Freetype v2.10.2\n+## The FreeType Project: Freetype v2.10.4\n","filename":"src\/java.desktop\/share\/legal\/freetype.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,2 +25,1 @@\n-.\/include\/freetype\/ftlcdfil.h and .\/include\/freetype\/ftstroke.h have the\n-only trailing white space.\n+and .\/include\/freetype\/ftlcdfil.h have the only trailing white space.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/UPDATING.txt","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,527 +44,3 @@\n-\n-FT_BEGIN_HEADER\n-\n-\n-  \/**************************************************************************\n-   *\n-   *              PLATFORM-SPECIFIC CONFIGURATION MACROS\n-   *\n-   * These macros can be toggled to suit a specific system.  The current ones\n-   * are defaults used to compile FreeType in an ANSI C environment (16bit\n-   * compilers are also supported).  Copy this file to your own\n-   * `builds\/<system>` directory, and edit it to port the engine.\n-   *\n-   *\/\n-\n-\n-  \/* There are systems (like the Texas Instruments 'C54x) where a `char`  *\/\n-  \/* has 16~bits.  ANSI~C says that `sizeof(char)` is always~1.  Since an *\/\n-  \/* `int` has 16~bits also for this system, `sizeof(int)` gives~1 which  *\/\n-  \/* is probably unexpected.                                              *\/\n-  \/*                                                                      *\/\n-  \/* `CHAR_BIT` (defined in `limits.h`) gives the number of bits in a     *\/\n-  \/* `char` type.                                                         *\/\n-\n-#ifndef FT_CHAR_BIT\n-#define FT_CHAR_BIT  CHAR_BIT\n-#endif\n-\n-\n-  \/* The size of an `int` type. *\/\n-#if                                 FT_UINT_MAX == 0xFFFFUL\n-#define FT_SIZEOF_INT  ( 16 \/ FT_CHAR_BIT )\n-#elif                               FT_UINT_MAX == 0xFFFFFFFFUL\n-#define FT_SIZEOF_INT  ( 32 \/ FT_CHAR_BIT )\n-#elif FT_UINT_MAX > 0xFFFFFFFFUL && FT_UINT_MAX == 0xFFFFFFFFFFFFFFFFUL\n-#define FT_SIZEOF_INT  ( 64 \/ FT_CHAR_BIT )\n-#else\n-#error \"Unsupported size of `int' type!\"\n-#endif\n-\n-  \/* The size of a `long` type.  A five-byte `long` (as used e.g. on the *\/\n-  \/* DM642) is recognized but avoided.                                   *\/\n-#if                                  FT_ULONG_MAX == 0xFFFFFFFFUL\n-#define FT_SIZEOF_LONG  ( 32 \/ FT_CHAR_BIT )\n-#elif FT_ULONG_MAX > 0xFFFFFFFFUL && FT_ULONG_MAX == 0xFFFFFFFFFFUL\n-#define FT_SIZEOF_LONG  ( 32 \/ FT_CHAR_BIT )\n-#elif FT_ULONG_MAX > 0xFFFFFFFFUL && FT_ULONG_MAX == 0xFFFFFFFFFFFFFFFFUL\n-#define FT_SIZEOF_LONG  ( 64 \/ FT_CHAR_BIT )\n-#else\n-#error \"Unsupported size of `long' type!\"\n-#endif\n-\n-\n-  \/* `FT_UNUSED` indicates that a given parameter is not used --   *\/\n-  \/* this is only used to get rid of unpleasant compiler warnings. *\/\n-#ifndef FT_UNUSED\n-#define FT_UNUSED( arg )  ( (arg) = (arg) )\n-#endif\n-\n-\n-  \/**************************************************************************\n-   *\n-   *                    AUTOMATIC CONFIGURATION MACROS\n-   *\n-   * These macros are computed from the ones defined above.  Don't touch\n-   * their definition, unless you know precisely what you are doing.  No\n-   * porter should need to mess with them.\n-   *\n-   *\/\n-\n-\n-  \/**************************************************************************\n-   *\n-   * Mac support\n-   *\n-   *   This is the only necessary change, so it is defined here instead\n-   *   providing a new configuration file.\n-   *\/\n-#if defined( __APPLE__ ) || ( defined( __MWERKS__ ) && defined( macintosh ) )\n-  \/* No Carbon frameworks for 64bit 10.4.x.                         *\/\n-  \/* `AvailabilityMacros.h` is available since Mac OS X 10.2,       *\/\n-  \/* so guess the system version by maximum errno before inclusion. *\/\n-#include <errno.h>\n-#ifdef ECANCELED \/* defined since 10.2 *\/\n-#include \"AvailabilityMacros.h\"\n-#endif\n-#if defined( __LP64__ ) && \\\n-    ( MAC_OS_X_VERSION_MIN_REQUIRED <= MAC_OS_X_VERSION_10_4 )\n-#undef FT_MACINTOSH\n-#endif\n-\n-#elif defined( __SC__ ) || defined( __MRC__ )\n-  \/* Classic MacOS compilers *\/\n-#include \"ConditionalMacros.h\"\n-#if TARGET_OS_MAC\n-#define FT_MACINTOSH 1\n-#endif\n-\n-#endif\n-\n-\n-  \/* Fix compiler warning with sgi compiler. *\/\n-#if defined( __sgi ) && !defined( __GNUC__ )\n-#if defined( _COMPILER_VERSION ) && ( _COMPILER_VERSION >= 730 )\n-#pragma set woff 3505\n-#endif\n-#endif\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @section:\n-   *   basic_types\n-   *\n-   *\/\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @type:\n-   *   FT_Int16\n-   *\n-   * @description:\n-   *   A typedef for a 16bit signed integer type.\n-   *\/\n-  typedef signed short  FT_Int16;\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @type:\n-   *   FT_UInt16\n-   *\n-   * @description:\n-   *   A typedef for a 16bit unsigned integer type.\n-   *\/\n-  typedef unsigned short  FT_UInt16;\n-\n-  \/* *\/\n-\n-\n-  \/* this #if 0 ... #endif clause is for documentation purposes *\/\n-#if 0\n-\n-  \/**************************************************************************\n-   *\n-   * @type:\n-   *   FT_Int32\n-   *\n-   * @description:\n-   *   A typedef for a 32bit signed integer type.  The size depends on the\n-   *   configuration.\n-   *\/\n-  typedef signed XXX  FT_Int32;\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @type:\n-   *   FT_UInt32\n-   *\n-   *   A typedef for a 32bit unsigned integer type.  The size depends on the\n-   *   configuration.\n-   *\/\n-  typedef unsigned XXX  FT_UInt32;\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @type:\n-   *   FT_Int64\n-   *\n-   *   A typedef for a 64bit signed integer type.  The size depends on the\n-   *   configuration.  Only defined if there is real 64bit support;\n-   *   otherwise, it gets emulated with a structure (if necessary).\n-   *\/\n-  typedef signed XXX  FT_Int64;\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @type:\n-   *   FT_UInt64\n-   *\n-   *   A typedef for a 64bit unsigned integer type.  The size depends on the\n-   *   configuration.  Only defined if there is real 64bit support;\n-   *   otherwise, it gets emulated with a structure (if necessary).\n-   *\/\n-  typedef unsigned XXX  FT_UInt64;\n-\n-  \/* *\/\n-\n-#endif\n-\n-#if FT_SIZEOF_INT == ( 32 \/ FT_CHAR_BIT )\n-\n-  typedef signed int      FT_Int32;\n-  typedef unsigned int    FT_UInt32;\n-\n-#elif FT_SIZEOF_LONG == ( 32 \/ FT_CHAR_BIT )\n-\n-  typedef signed long     FT_Int32;\n-  typedef unsigned long   FT_UInt32;\n-\n-#else\n-#error \"no 32bit type found -- please check your configuration files\"\n-#endif\n-\n-\n-  \/* look up an integer type that is at least 32~bits *\/\n-#if FT_SIZEOF_INT >= ( 32 \/ FT_CHAR_BIT )\n-\n-  typedef int            FT_Fast;\n-  typedef unsigned int   FT_UFast;\n-\n-#elif FT_SIZEOF_LONG >= ( 32 \/ FT_CHAR_BIT )\n-\n-  typedef long           FT_Fast;\n-  typedef unsigned long  FT_UFast;\n-\n-#endif\n-\n-\n-  \/* determine whether we have a 64-bit `int` type for platforms without *\/\n-  \/* Autoconf                                                            *\/\n-#if FT_SIZEOF_LONG == ( 64 \/ FT_CHAR_BIT )\n-\n-  \/* `FT_LONG64` must be defined if a 64-bit type is available *\/\n-#define FT_LONG64\n-#define FT_INT64   long\n-#define FT_UINT64  unsigned long\n-\n-  \/**************************************************************************\n-   *\n-   * A 64-bit data type may create compilation problems if you compile in\n-   * strict ANSI mode.  To avoid them, we disable other 64-bit data types if\n-   * `__STDC__` is defined.  You can however ignore this rule by defining the\n-   * `FT_CONFIG_OPTION_FORCE_INT64` configuration macro.\n-   *\/\n-#elif !defined( __STDC__ ) || defined( FT_CONFIG_OPTION_FORCE_INT64 )\n-\n-#if defined( __STDC_VERSION__ ) && __STDC_VERSION__ >= 199901L\n-\n-#define FT_LONG64\n-#define FT_INT64   long long int\n-#define FT_UINT64  unsigned long long int\n-\n-#elif defined( _MSC_VER ) && _MSC_VER >= 900 \/* Visual C++ (and Intel C++) *\/\n-\n-  \/* this compiler provides the `__int64` type *\/\n-#define FT_LONG64\n-#define FT_INT64   __int64\n-#define FT_UINT64  unsigned __int64\n-\n-#elif defined( __BORLANDC__ )  \/* Borland C++ *\/\n-\n-  \/* XXXX: We should probably check the value of `__BORLANDC__` in order *\/\n-  \/*       to test the compiler version.                                 *\/\n-\n-  \/* this compiler provides the `__int64` type *\/\n-#define FT_LONG64\n-#define FT_INT64   __int64\n-#define FT_UINT64  unsigned __int64\n-\n-#elif defined( __WATCOMC__ )   \/* Watcom C++ *\/\n-\n-  \/* Watcom doesn't provide 64-bit data types *\/\n-\n-#elif defined( __MWERKS__ )    \/* Metrowerks CodeWarrior *\/\n-\n-#define FT_LONG64\n-#define FT_INT64   long long int\n-#define FT_UINT64  unsigned long long int\n-\n-#elif defined( __GNUC__ )\n-\n-  \/* GCC provides the `long long` type *\/\n-#define FT_LONG64\n-#define FT_INT64   long long int\n-#define FT_UINT64  unsigned long long int\n-\n-#endif \/* __STDC_VERSION__ >= 199901L *\/\n-\n-#endif \/* FT_SIZEOF_LONG == (64 \/ FT_CHAR_BIT) *\/\n-\n-#ifdef FT_LONG64\n-  typedef FT_INT64   FT_Int64;\n-  typedef FT_UINT64  FT_UInt64;\n-#endif\n-\n-\n-#ifdef _WIN64\n-  \/* only 64bit Windows uses the LLP64 data model, i.e., *\/\n-  \/* 32bit integers, 64bit pointers                      *\/\n-#define FT_UINT_TO_POINTER( x ) (void*)(unsigned __int64)(x)\n-#else\n-#define FT_UINT_TO_POINTER( x ) (void*)(unsigned long)(x)\n-#endif\n-\n-\n-  \/**************************************************************************\n-   *\n-   * miscellaneous\n-   *\n-   *\/\n-\n-\n-#define FT_BEGIN_STMNT  do {\n-#define FT_END_STMNT    } while ( 0 )\n-#define FT_DUMMY_STMNT  FT_BEGIN_STMNT FT_END_STMNT\n-\n-\n-  \/* `typeof` condition taken from gnulib's `intprops.h` header file *\/\n-#if ( ( defined( __GNUC__ ) && __GNUC__ >= 2 )                       || \\\n-      ( defined( __IBMC__ ) && __IBMC__ >= 1210 &&                      \\\n-        defined( __IBM__TYPEOF__ ) )                                 || \\\n-      ( defined( __SUNPRO_C ) && __SUNPRO_C >= 0x5110 && !__STDC__ ) )\n-#define FT_TYPEOF( type )  ( __typeof__ ( type ) )\n-#else\n-#define FT_TYPEOF( type )  \/* empty *\/\n-#endif\n-\n-\n-  \/* Use `FT_LOCAL` and `FT_LOCAL_DEF` to declare and define,            *\/\n-  \/* respectively, a function that gets used only within the scope of a  *\/\n-  \/* module.  Normally, both the header and source code files for such a *\/\n-  \/* function are within a single module directory.                      *\/\n-  \/*                                                                     *\/\n-  \/* Intra-module arrays should be tagged with `FT_LOCAL_ARRAY` and      *\/\n-  \/* `FT_LOCAL_ARRAY_DEF`.                                               *\/\n-  \/*                                                                     *\/\n-#ifdef FT_MAKE_OPTION_SINGLE_OBJECT\n-\n-#define FT_LOCAL( x )      static  x\n-#define FT_LOCAL_DEF( x )  static  x\n-\n-#else\n-\n-#ifdef __cplusplus\n-#define FT_LOCAL( x )      extern \"C\"  x\n-#define FT_LOCAL_DEF( x )  extern \"C\"  x\n-#else\n-#define FT_LOCAL( x )      extern  x\n-#define FT_LOCAL_DEF( x )  x\n-#endif\n-\n-#endif \/* FT_MAKE_OPTION_SINGLE_OBJECT *\/\n-\n-#define FT_LOCAL_ARRAY( x )      extern const  x\n-#define FT_LOCAL_ARRAY_DEF( x )  const  x\n-\n-\n-  \/* Use `FT_BASE` and `FT_BASE_DEF` to declare and define, respectively, *\/\n-  \/* functions that are used in more than a single module.  In the        *\/\n-  \/* current setup this implies that the declaration is in a header file  *\/\n-  \/* in the `include\/freetype\/internal` directory, and the function body  *\/\n-  \/* is in a file in `src\/base`.                                          *\/\n-  \/*                                                                      *\/\n-#ifndef FT_BASE\n-\n-#ifdef __cplusplus\n-#define FT_BASE( x )  extern \"C\"  x\n-#else\n-#define FT_BASE( x )  extern  x\n-#endif\n-\n-#endif \/* !FT_BASE *\/\n-\n-\n-#ifndef FT_BASE_DEF\n-\n-#ifdef __cplusplus\n-#define FT_BASE_DEF( x )  x\n-#else\n-#define FT_BASE_DEF( x )  x\n-#endif\n-\n-#endif \/* !FT_BASE_DEF *\/\n-\n-\n-  \/* When compiling FreeType as a DLL or DSO with hidden visibility    *\/\n-  \/* some systems\/compilers need a special attribute in front OR after *\/\n-  \/* the return type of function declarations.                         *\/\n-  \/*                                                                   *\/\n-  \/* Two macros are used within the FreeType source code to define     *\/\n-  \/* exported library functions: `FT_EXPORT` and `FT_EXPORT_DEF`.      *\/\n-  \/*                                                                   *\/\n-  \/* - `FT_EXPORT( return_type )`                                      *\/\n-  \/*                                                                   *\/\n-  \/*   is used in a function declaration, as in                        *\/\n-  \/*                                                                   *\/\n-  \/*   ```                                                             *\/\n-  \/*     FT_EXPORT( FT_Error )                                         *\/\n-  \/*     FT_Init_FreeType( FT_Library*  alibrary );                    *\/\n-  \/*   ```                                                             *\/\n-  \/*                                                                   *\/\n-  \/* - `FT_EXPORT_DEF( return_type )`                                  *\/\n-  \/*                                                                   *\/\n-  \/*   is used in a function definition, as in                         *\/\n-  \/*                                                                   *\/\n-  \/*   ```                                                             *\/\n-  \/*     FT_EXPORT_DEF( FT_Error )                                     *\/\n-  \/*     FT_Init_FreeType( FT_Library*  alibrary )                     *\/\n-  \/*     {                                                             *\/\n-  \/*       ... some code ...                                           *\/\n-  \/*       return FT_Err_Ok;                                           *\/\n-  \/*     }                                                             *\/\n-  \/*   ```                                                             *\/\n-  \/*                                                                   *\/\n-  \/* You can provide your own implementation of `FT_EXPORT` and        *\/\n-  \/* `FT_EXPORT_DEF` here if you want.                                 *\/\n-  \/*                                                                   *\/\n-  \/* To export a variable, use `FT_EXPORT_VAR`.                        *\/\n-  \/*                                                                   *\/\n-#ifndef FT_EXPORT\n-\n-#ifdef FT2_BUILD_LIBRARY\n-\n-#if defined( _WIN32 ) && defined( DLL_EXPORT )\n-#define FT_EXPORT( x )  __declspec( dllexport )  x\n-#elif defined( __GNUC__ ) && __GNUC__ >= 4\n-#define FT_EXPORT( x )  __attribute__(( visibility( \"default\" ) ))  x\n-#elif defined( __SUNPRO_C ) && __SUNPRO_C >= 0x550\n-#define FT_EXPORT( x )  __global  x\n-#elif defined( __cplusplus )\n-#define FT_EXPORT( x )  extern \"C\"  x\n-#else\n-#define FT_EXPORT( x )  extern  x\n-#endif\n-\n-#else\n-\n-#if defined( _WIN32 ) && defined( DLL_IMPORT )\n-#define FT_EXPORT( x )  __declspec( dllimport )  x\n-#elif defined( __cplusplus )\n-#define FT_EXPORT( x )  extern \"C\"  x\n-#else\n-#define FT_EXPORT( x )  extern  x\n-#endif\n-\n-#endif\n-\n-#endif \/* !FT_EXPORT *\/\n-\n-\n-#ifndef FT_EXPORT_DEF\n-\n-#ifdef __cplusplus\n-#define FT_EXPORT_DEF( x )  extern \"C\"  x\n-#else\n-#define FT_EXPORT_DEF( x )  extern  x\n-#endif\n-\n-#endif \/* !FT_EXPORT_DEF *\/\n-\n-\n-#ifndef FT_EXPORT_VAR\n-\n-#ifdef __cplusplus\n-#define FT_EXPORT_VAR( x )  extern \"C\"  x\n-#else\n-#define FT_EXPORT_VAR( x )  extern  x\n-#endif\n-\n-#endif \/* !FT_EXPORT_VAR *\/\n-\n-\n-  \/* The following macros are needed to compile the library with a   *\/\n-  \/* C++ compiler and with 16bit compilers.                          *\/\n-  \/*                                                                 *\/\n-\n-  \/* This is special.  Within C++, you must specify `extern \"C\"` for *\/\n-  \/* functions which are used via function pointers, and you also    *\/\n-  \/* must do that for structures which contain function pointers to  *\/\n-  \/* assure C linkage -- it's not possible to have (local) anonymous *\/\n-  \/* functions which are accessed by (global) function pointers.     *\/\n-  \/*                                                                 *\/\n-  \/*                                                                 *\/\n-  \/* FT_CALLBACK_DEF is used to _define_ a callback function,        *\/\n-  \/* located in the same source code file as the structure that uses *\/\n-  \/* it.                                                             *\/\n-  \/*                                                                 *\/\n-  \/* FT_BASE_CALLBACK and FT_BASE_CALLBACK_DEF are used to declare   *\/\n-  \/* and define a callback function, respectively, in a similar way  *\/\n-  \/* as FT_BASE and FT_BASE_DEF work.                                *\/\n-  \/*                                                                 *\/\n-  \/* FT_CALLBACK_TABLE is used to _declare_ a constant variable that *\/\n-  \/* contains pointers to callback functions.                        *\/\n-  \/*                                                                 *\/\n-  \/* FT_CALLBACK_TABLE_DEF is used to _define_ a constant variable   *\/\n-  \/* that contains pointers to callback functions.                   *\/\n-  \/*                                                                 *\/\n-  \/*                                                                 *\/\n-  \/* Some 16bit compilers have to redefine these macros to insert    *\/\n-  \/* the infamous `_cdecl` or `__fastcall` declarations.             *\/\n-  \/*                                                                 *\/\n-#ifndef FT_CALLBACK_DEF\n-#ifdef __cplusplus\n-#define FT_CALLBACK_DEF( x )  extern \"C\"  x\n-#else\n-#define FT_CALLBACK_DEF( x )  static  x\n-#endif\n-#endif \/* FT_CALLBACK_DEF *\/\n-\n-#ifndef FT_BASE_CALLBACK\n-#ifdef __cplusplus\n-#define FT_BASE_CALLBACK( x )      extern \"C\"  x\n-#define FT_BASE_CALLBACK_DEF( x )  extern \"C\"  x\n-#else\n-#define FT_BASE_CALLBACK( x )      extern  x\n-#define FT_BASE_CALLBACK_DEF( x )  x\n-#endif\n-#endif \/* FT_BASE_CALLBACK *\/\n-\n-#ifndef FT_CALLBACK_TABLE\n-#ifdef __cplusplus\n-#define FT_CALLBACK_TABLE      extern \"C\"\n-#define FT_CALLBACK_TABLE_DEF  extern \"C\"\n-#else\n-#define FT_CALLBACK_TABLE      extern\n-#define FT_CALLBACK_TABLE_DEF  \/* nothing *\/\n-#endif\n-#endif \/* FT_CALLBACK_TABLE *\/\n-\n-\n-FT_END_HEADER\n-\n+#include <freetype\/config\/integer-types.h>\n+#include <freetype\/config\/public-macros.h>\n+#include <freetype\/config\/mac-support.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftconfig.h","additions":3,"deletions":527,"binary":false,"changes":530,"status":"modified"},{"patch":"@@ -33,4 +33,6 @@\n-#ifdef __cplusplus\n-#define FT_BEGIN_HEADER  extern \"C\" {\n-#else\n-#define FT_BEGIN_HEADER  \/* nothing *\/\n+#ifndef FT_BEGIN_HEADER\n+#  ifdef __cplusplus\n+#    define FT_BEGIN_HEADER  extern \"C\" {\n+#  else\n+#  define FT_BEGIN_HEADER  \/* nothing *\/\n+#  endif\n@@ -51,4 +53,6 @@\n-#ifdef __cplusplus\n-#define FT_END_HEADER  }\n-#else\n-#define FT_END_HEADER  \/* nothing *\/\n+#ifndef FT_END_HEADER\n+#  ifdef __cplusplus\n+#    define FT_END_HEADER  }\n+#  else\n+#   define FT_END_HEADER  \/* nothing *\/\n+#  endif\n@@ -76,3 +80,10 @@\n-   *   The following macros are defined to the name of specific FreeType~2\n-   *   header files.  They can be used directly in `#include` statements as\n-   *   in:\n+   *   In addition to the normal scheme of including header files like\n+   *\n+   *   ```\n+   *     #include <freetype\/freetype.h>\n+   *     #include <freetype\/ftmm.h>\n+   *     #include <freetype\/ftglyph.h>\n+   *   ```\n+   *\n+   *   it is possible to used named macros instead.  They can be used\n+   *   directly in `#include` statements as in\n@@ -86,7 +97,3 @@\n-   *   There are several reasons why we are now using macros to name public\n-   *   header files.  The first one is that such macros are not limited to\n-   *   the infamous 8.3~naming rule required by DOS (and\n-   *   `FT_MULTIPLE_MASTERS_H` is a lot more meaningful than `ftmm.h`).\n-   *\n-   *   The second reason is that it allows for more flexibility in the way\n-   *   FreeType~2 is installed on a given system.\n+   *   These macros were introduced to overcome the infamous 8.3~naming rule\n+   *   required by DOS (and `FT_MULTIPLE_MASTERS_H` is a lot more meaningful\n+   *   than `ftmm.h`).\n@@ -800,5 +807,1 @@\n-\n-  \/*\n-   * Include internal headers definitions from `<internal\/...>` only when\n-   * building the library.\n-   *\/\n+\/* TODO(david): Move this section below to a different header *\/\n@@ -806,3 +809,1 @@\n-#define  FT_INTERNAL_INTERNAL_H  <freetype\/internal\/internal.h>\n-#include FT_INTERNAL_INTERNAL_H\n-#endif \/* FT2_BUILD_LIBRARY *\/\n+#if defined( _MSC_VER )      \/* Visual C++ (and Intel C++) *\/\n@@ -810,0 +811,9 @@\n+  \/* We disable the warning `conditional expression is constant' here *\/\n+  \/* in order to compile cleanly with the maximum level of warnings.  *\/\n+  \/* In particular, the warning complains about stuff like `while(0)' *\/\n+  \/* which is very useful in macro definitions.  There is no benefit  *\/\n+  \/* in having it enabled.                                            *\/\n+#pragma warning( disable : 4127 )\n+\n+#endif \/* _MSC_VER *\/\n+#endif \/* FT2_BUILD_LIBRARY *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftheader.h","additions":36,"deletions":26,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -18,4 +18,4 @@\n-\/\/FT_USE_MODULE( FT_Driver_ClassRec, pfr_driver_class )\n-\/\/FT_USE_MODULE( FT_Driver_ClassRec, t42_driver_class )\n-\/\/FT_USE_MODULE( FT_Driver_ClassRec, winfnt_driver_class )\n-\/\/FT_USE_MODULE( FT_Driver_ClassRec, pcf_driver_class )\n+\/\/ FT_USE_MODULE( FT_Driver_ClassRec, pfr_driver_class )\n+\/\/ FT_USE_MODULE( FT_Driver_ClassRec, t42_driver_class )\n+\/\/ FT_USE_MODULE( FT_Driver_ClassRec, winfnt_driver_class )\n+\/\/ FT_USE_MODULE( FT_Driver_ClassRec, pcf_driver_class )\n@@ -28,3 +28,1 @@\n-FT_USE_MODULE( FT_Renderer_Class, ft_smooth_lcd_renderer_class )\n-FT_USE_MODULE( FT_Renderer_Class, ft_smooth_lcdv_renderer_class )\n-\/\/FT_USE_MODULE( FT_Driver_ClassRec, bdf_driver_class )\n+\/\/ FT_USE_MODULE( FT_Driver_ClassRec, bdf_driver_class )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftmodule.h","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-   *   The default FreeType Makefiles and Jamfiles use the build directory\n+   *   The default FreeType Makefiles use the build directory\n@@ -124,4 +124,2 @@\n-   * Note that this feature is covered by several Microsoft patents and\n-   * should not be activated in any default build of the library.  When this\n-   * macro is not defined, FreeType offers alternative LCD rendering\n-   * technology that produces excellent output without LCD filtering.\n+   * When this macro is not defined, FreeType offers alternative LCD\n+   * rendering technology that produces excellent output.\n@@ -545,1 +543,1 @@\n-   * Define `TT_CONFIG_OPTION_COLOR_LAYERS` if you want to support coloured\n+   * Define `TT_CONFIG_OPTION_COLOR_LAYERS` if you want to support colored\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftoption.h","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,245 @@\n+\/****************************************************************************\n+ *\n+ * config\/integer-types.h\n+ *\n+ *   FreeType integer types definitions.\n+ *\n+ * Copyright (C) 1996-2020 by\n+ * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ *\n+ * This file is part of the FreeType project, and may only be used,\n+ * modified, and distributed under the terms of the FreeType project\n+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n+ * this file you indicate that you have read the license and\n+ * understand and accept it fully.\n+ *\n+ *\/\n+#ifndef FREETYPE_CONFIG_INTEGER_TYPES_H_\n+#define FREETYPE_CONFIG_INTEGER_TYPES_H_\n+\n+  \/* There are systems (like the Texas Instruments 'C54x) where a `char`  *\/\n+  \/* has 16~bits.  ANSI~C says that `sizeof(char)` is always~1.  Since an *\/\n+  \/* `int` has 16~bits also for this system, `sizeof(int)` gives~1 which  *\/\n+  \/* is probably unexpected.                                              *\/\n+  \/*                                                                      *\/\n+  \/* `CHAR_BIT` (defined in `limits.h`) gives the number of bits in a     *\/\n+  \/* `char` type.                                                         *\/\n+\n+#ifndef FT_CHAR_BIT\n+#define FT_CHAR_BIT  CHAR_BIT\n+#endif\n+\n+#ifndef FT_SIZEOF_INT\n+\n+  \/* The size of an `int` type. *\/\n+#if                                 FT_UINT_MAX == 0xFFFFUL\n+#define FT_SIZEOF_INT  ( 16 \/ FT_CHAR_BIT )\n+#elif                               FT_UINT_MAX == 0xFFFFFFFFUL\n+#define FT_SIZEOF_INT  ( 32 \/ FT_CHAR_BIT )\n+#elif FT_UINT_MAX > 0xFFFFFFFFUL && FT_UINT_MAX == 0xFFFFFFFFFFFFFFFFUL\n+#define FT_SIZEOF_INT  ( 64 \/ FT_CHAR_BIT )\n+#else\n+#error \"Unsupported size of `int' type!\"\n+#endif\n+\n+#endif  \/* !defined(FT_SIZEOF_INT) *\/\n+\n+#ifndef FT_SIZEOF_LONG\n+\n+  \/* The size of a `long` type.  A five-byte `long` (as used e.g. on the *\/\n+  \/* DM642) is recognized but avoided.                                   *\/\n+#if                                  FT_ULONG_MAX == 0xFFFFFFFFUL\n+#define FT_SIZEOF_LONG  ( 32 \/ FT_CHAR_BIT )\n+#elif FT_ULONG_MAX > 0xFFFFFFFFUL && FT_ULONG_MAX == 0xFFFFFFFFFFUL\n+#define FT_SIZEOF_LONG  ( 32 \/ FT_CHAR_BIT )\n+#elif FT_ULONG_MAX > 0xFFFFFFFFUL && FT_ULONG_MAX == 0xFFFFFFFFFFFFFFFFUL\n+#define FT_SIZEOF_LONG  ( 64 \/ FT_CHAR_BIT )\n+#else\n+#error \"Unsupported size of `long' type!\"\n+#endif\n+\n+#endif \/* !defined(FT_SIZEOF_LONG) *\/\n+\n+  \/**************************************************************************\n+   *\n+   * @section:\n+   *   basic_types\n+   *\n+   *\/\n+\n+\n+  \/**************************************************************************\n+   *\n+   * @type:\n+   *   FT_Int16\n+   *\n+   * @description:\n+   *   A typedef for a 16bit signed integer type.\n+   *\/\n+  typedef signed short  FT_Int16;\n+\n+\n+  \/**************************************************************************\n+   *\n+   * @type:\n+   *   FT_UInt16\n+   *\n+   * @description:\n+   *   A typedef for a 16bit unsigned integer type.\n+   *\/\n+  typedef unsigned short  FT_UInt16;\n+\n+  \/* *\/\n+\n+\n+  \/* this #if 0 ... #endif clause is for documentation purposes *\/\n+#if 0\n+\n+  \/**************************************************************************\n+   *\n+   * @type:\n+   *   FT_Int32\n+   *\n+   * @description:\n+   *   A typedef for a 32bit signed integer type.  The size depends on the\n+   *   configuration.\n+   *\/\n+  typedef signed XXX  FT_Int32;\n+\n+\n+  \/**************************************************************************\n+   *\n+   * @type:\n+   *   FT_UInt32\n+   *\n+   *   A typedef for a 32bit unsigned integer type.  The size depends on the\n+   *   configuration.\n+   *\/\n+  typedef unsigned XXX  FT_UInt32;\n+\n+\n+  \/**************************************************************************\n+   *\n+   * @type:\n+   *   FT_Int64\n+   *\n+   *   A typedef for a 64bit signed integer type.  The size depends on the\n+   *   configuration.  Only defined if there is real 64bit support;\n+   *   otherwise, it gets emulated with a structure (if necessary).\n+   *\/\n+  typedef signed XXX  FT_Int64;\n+\n+\n+  \/**************************************************************************\n+   *\n+   * @type:\n+   *   FT_UInt64\n+   *\n+   *   A typedef for a 64bit unsigned integer type.  The size depends on the\n+   *   configuration.  Only defined if there is real 64bit support;\n+   *   otherwise, it gets emulated with a structure (if necessary).\n+   *\/\n+  typedef unsigned XXX  FT_UInt64;\n+\n+  \/* *\/\n+\n+#endif\n+\n+#if FT_SIZEOF_INT == ( 32 \/ FT_CHAR_BIT )\n+\n+  typedef signed int      FT_Int32;\n+  typedef unsigned int    FT_UInt32;\n+\n+#elif FT_SIZEOF_LONG == ( 32 \/ FT_CHAR_BIT )\n+\n+  typedef signed long     FT_Int32;\n+  typedef unsigned long   FT_UInt32;\n+\n+#else\n+#error \"no 32bit type found -- please check your configuration files\"\n+#endif\n+\n+\n+  \/* look up an integer type that is at least 32~bits *\/\n+#if FT_SIZEOF_INT >= ( 32 \/ FT_CHAR_BIT )\n+\n+  typedef int            FT_Fast;\n+  typedef unsigned int   FT_UFast;\n+\n+#elif FT_SIZEOF_LONG >= ( 32 \/ FT_CHAR_BIT )\n+\n+  typedef long           FT_Fast;\n+  typedef unsigned long  FT_UFast;\n+\n+#endif\n+\n+\n+  \/* determine whether we have a 64-bit `int` type for platforms without *\/\n+  \/* Autoconf                                                            *\/\n+#if FT_SIZEOF_LONG == ( 64 \/ FT_CHAR_BIT )\n+\n+  \/* `FT_LONG64` must be defined if a 64-bit type is available *\/\n+#define FT_LONG64\n+#define FT_INT64   long\n+#define FT_UINT64  unsigned long\n+\n+  \/**************************************************************************\n+   *\n+   * A 64-bit data type may create compilation problems if you compile in\n+   * strict ANSI mode.  To avoid them, we disable other 64-bit data types if\n+   * `__STDC__` is defined.  You can however ignore this rule by defining the\n+   * `FT_CONFIG_OPTION_FORCE_INT64` configuration macro.\n+   *\/\n+#elif !defined( __STDC__ ) || defined( FT_CONFIG_OPTION_FORCE_INT64 )\n+\n+#if defined( __STDC_VERSION__ ) && __STDC_VERSION__ >= 199901L\n+\n+#define FT_LONG64\n+#define FT_INT64   long long int\n+#define FT_UINT64  unsigned long long int\n+\n+#elif defined( _MSC_VER ) && _MSC_VER >= 900 \/* Visual C++ (and Intel C++) *\/\n+\n+  \/* this compiler provides the `__int64` type *\/\n+#define FT_LONG64\n+#define FT_INT64   __int64\n+#define FT_UINT64  unsigned __int64\n+\n+#elif defined( __BORLANDC__ )  \/* Borland C++ *\/\n+\n+  \/* XXXX: We should probably check the value of `__BORLANDC__` in order *\/\n+  \/*       to test the compiler version.                                 *\/\n+\n+  \/* this compiler provides the `__int64` type *\/\n+#define FT_LONG64\n+#define FT_INT64   __int64\n+#define FT_UINT64  unsigned __int64\n+\n+#elif defined( __WATCOMC__ )   \/* Watcom C++ *\/\n+\n+  \/* Watcom doesn't provide 64-bit data types *\/\n+\n+#elif defined( __MWERKS__ )    \/* Metrowerks CodeWarrior *\/\n+\n+#define FT_LONG64\n+#define FT_INT64   long long int\n+#define FT_UINT64  unsigned long long int\n+\n+#elif defined( __GNUC__ )\n+\n+  \/* GCC provides the `long long` type *\/\n+#define FT_LONG64\n+#define FT_INT64   long long int\n+#define FT_UINT64  unsigned long long int\n+\n+#endif \/* __STDC_VERSION__ >= 199901L *\/\n+\n+#endif \/* FT_SIZEOF_LONG == (64 \/ FT_CHAR_BIT) *\/\n+\n+#ifdef FT_LONG64\n+  typedef FT_INT64   FT_Int64;\n+  typedef FT_UINT64  FT_UInt64;\n+#endif\n+\n+\n+#endif  \/* FREETYPE_CONFIG_INTEGER_TYPES_H_ *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/integer-types.h","additions":245,"deletions":0,"binary":false,"changes":245,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/****************************************************************************\n+ *\n+ * config\/mac-support.h\n+ *\n+ *   Mac\/OS X support configuration header.\n+ *\n+ * Copyright (C) 1996-2020 by\n+ * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ *\n+ * This file is part of the FreeType project, and may only be used,\n+ * modified, and distributed under the terms of the FreeType project\n+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n+ * this file you indicate that you have read the license and\n+ * understand and accept it fully.\n+ *\n+ *\/\n+#ifndef FREETYPE_CONFIG_MAC_SUPPORT_H_\n+#define FREETYPE_CONFIG_MAC_SUPPORT_H_\n+\n+  \/**************************************************************************\n+   *\n+   * Mac support\n+   *\n+   *   This is the only necessary change, so it is defined here instead\n+   *   providing a new configuration file.\n+   *\/\n+#if defined( __APPLE__ ) || ( defined( __MWERKS__ ) && defined( macintosh ) )\n+  \/* No Carbon frameworks for 64bit 10.4.x.                         *\/\n+  \/* `AvailabilityMacros.h` is available since Mac OS X 10.2,       *\/\n+  \/* so guess the system version by maximum errno before inclusion. *\/\n+#include <errno.h>\n+#ifdef ECANCELED \/* defined since 10.2 *\/\n+#include \"AvailabilityMacros.h\"\n+#endif\n+#if defined( __LP64__ ) && \\\n+    ( MAC_OS_X_VERSION_MIN_REQUIRED <= MAC_OS_X_VERSION_10_4 )\n+#undef FT_MACINTOSH\n+#endif\n+\n+#elif defined( __SC__ ) || defined( __MRC__ )\n+  \/* Classic MacOS compilers *\/\n+#include \"ConditionalMacros.h\"\n+#if TARGET_OS_MAC\n+#define FT_MACINTOSH 1\n+#endif\n+\n+#endif  \/* Mac support *\/\n+\n+#endif  \/* FREETYPE_CONFIG_MAC_SUPPORT_H_ *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/mac-support.h","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/****************************************************************************\n+ *\n+ * config\/public-macros.h\n+ *\n+ *   Define a set of compiler macros used in public FreeType headers.\n+ *\n+ * Copyright (C) 2020 by\n+ * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ *\n+ * This file is part of the FreeType project, and may only be used,\n+ * modified, and distributed under the terms of the FreeType project\n+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n+ * this file you indicate that you have read the license and\n+ * understand and accept it fully.\n+ *\n+ *\/\n+\n+  \/*\n+   * The definitions in this file are used by the public FreeType headers\n+   * and thus should be considered part of the public API.\n+   *\n+   * Other compiler-specific macro definitions that are not exposed by the\n+   * FreeType API should go into\n+   * `include\/freetype\/internal\/compiler-macros.h` instead.\n+   *\/\n+#ifndef FREETYPE_CONFIG_PUBLIC_MACROS_H_\n+#define FREETYPE_CONFIG_PUBLIC_MACROS_H_\n+\n+  \/*\n+   * `FT_BEGIN_HEADER` and `FT_END_HEADER` might have already been defined\n+   * by `freetype\/config\/ftheader.h`, but we don't want to include this\n+   * header here, so redefine the macros here only when needed.  Their\n+   * definition is very stable, so keeping them in sync with the ones in the\n+   * header should not be a maintenance issue.\n+   *\/\n+#ifndef FT_BEGIN_HEADER\n+#ifdef __cplusplus\n+#define FT_BEGIN_HEADER  extern \"C\" {\n+#else\n+#define FT_BEGIN_HEADER  \/* empty *\/\n+#endif\n+#endif  \/* FT_BEGIN_HEADER *\/\n+\n+#ifndef FT_END_HEADER\n+#ifdef __cplusplus\n+#define FT_END_HEADER  }\n+#else\n+#define FT_END_HEADER  \/* empty *\/\n+#endif\n+#endif  \/* FT_END_HEADER *\/\n+\n+\n+FT_BEGIN_HEADER\n+\n+  \/*\n+   * Mark a function declaration as public.  This ensures it will be\n+   * properly exported to client code.  Place this before a function\n+   * declaration.\n+   *\n+   * NOTE: This macro should be considered an internal implementation\n+   * detail, and not part of the FreeType API.  It is only defined here\n+   * because it is needed by `FT_EXPORT`.\n+   *\/\n+\n+  \/* Visual C, mingw *\/\n+#if defined( _WIN32 )\n+\n+#if defined( FT2_BUILD_LIBRARY ) && defined( DLL_EXPORT )\n+#define FT_PUBLIC_FUNCTION_ATTRIBUTE  __declspec( dllexport )\n+#elif defined( DLL_IMPORT )\n+#define FT_PUBLIC_FUNCTION_ATTRIBUTE  __declspec( dllimport )\n+#endif\n+\n+  \/* gcc, clang *\/\n+#elif ( defined( __GNUC__ ) && __GNUC__ >= 4 ) || defined( __clang__ )\n+#define FT_PUBLIC_FUNCTION_ATTRIBUTE \\\n+          __attribute__(( visibility( \"default\" ) ))\n+\n+  \/* Sun *\/\n+#elif defined( __SUNPRO_C ) && __SUNPRO_C >= 0x550\n+#define FT_PUBLIC_FUNCTION_ATTRIBUTE  __global\n+#endif\n+\n+\n+#ifndef FT_PUBLIC_FUNCTION_ATTRIBUTE\n+#define FT_PUBLIC_FUNCTION_ATTRIBUTE  \/* empty *\/\n+#endif\n+\n+\n+  \/*\n+   * Define a public FreeType API function.  This ensures it is properly\n+   * exported or imported at build time.  The macro parameter is the\n+   * function's return type as in:\n+   *\n+   *   FT_EXPORT( FT_Bool )\n+   *   FT_Object_Method( FT_Object  obj,\n+   *                     ... );\n+   *\n+   * NOTE: This requires that all `FT_EXPORT` uses are inside\n+   * `FT_BEGIN_HEADER ... FT_END_HEADER` blocks.  This guarantees that the\n+   * functions are exported with C linkage, even when the header is included\n+   * by a C++ source file.\n+   *\/\n+#define FT_EXPORT( x )  FT_PUBLIC_FUNCTION_ATTRIBUTE extern x\n+\n+  \/*\n+   * `FT_UNUSED` indicates that a given parameter is not used -- this is\n+   * only used to get rid of unpleasant compiler warnings.\n+   *\n+   * Technically, this was not meant to be part of the public API, but some\n+   * third-party code depends on it.\n+   *\/\n+#ifndef FT_UNUSED\n+#define FT_UNUSED( arg )  ( (arg) = (arg) )\n+#endif\n+\n+\n+FT_END_HEADER\n+\n+#endif  \/* FREETYPE_CONFIG_PUBLIC_MACROS_H_ *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/public-macros.h","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -23,9 +23,0 @@\n-#ifndef FT_FREETYPE_H\n-#error \"`ft2build.h' hasn't been included yet!\"\n-#error \"Please always use macros to include FreeType header files.\"\n-#error \"Example:\"\n-#error \"  #include <ft2build.h>\"\n-#error \"  #include FT_FREETYPE_H\"\n-#endif\n-\n-\n@@ -34,2 +25,2 @@\n-#include FT_TYPES_H\n-#include FT_ERRORS_H\n+#include <freetype\/fttypes.h>\n+#include <freetype\/fterrors.h>\n@@ -54,2 +45,2 @@\n-   *   To be as flexible as possible (and for historical reasons), FreeType\n-   *   uses a very special inclusion scheme to load header files, for example\n+   *   To be as flexible as possible (and for historical reasons), you must\n+   *   load file `ft2build.h` first before other header files, for example\n@@ -60,2 +51,2 @@\n-   *     #include FT_FREETYPE_H\n-   *     #include FT_OUTLINE_H\n+   *     #include <freetype\/freetype.h>\n+   *     #include <freetype\/ftoutln.h>\n@@ -63,7 +54,0 @@\n-   *\n-   *   A compiler and its preprocessor only needs an include path to find the\n-   *   file `ft2build.h`; the exact locations and names of the other FreeType\n-   *   header files are hidden by @header_file_macros, loaded by\n-   *   `ft2build.h`.  The API documentation always gives the header macro\n-   *   name needed for a particular function.\n-   *\n@@ -977,0 +961,3 @@\n+   *     Note that the bounding box does not vary in OpenType variable fonts\n+   *     and should only be used in relation to the default instance.\n+   *\n@@ -3191,0 +3178,6 @@\n+   *   This function is provided as a convenience, but keep in mind that\n+   *   @FT_Matrix coefficients are only 16.16 fixed point values, which can\n+   *   limit the accuracy of the results.  Using floating-point computations\n+   *   to perform the transform directly in client code instead will always\n+   *   yield better numbers.\n+   *\n@@ -3249,8 +3242,0 @@\n-   *   Should you define `FT_CONFIG_OPTION_SUBPIXEL_RENDERING` in your\n-   *   `ftoption.h`, which enables patented ClearType-style rendering, the\n-   *   LCD-optimized glyph bitmaps should be filtered to reduce color fringes\n-   *   inherent to this technology.  You can either set up LCD filtering with\n-   *   @FT_Library_SetLcdFilter or @FT_Face_Properties, or do the filtering\n-   *   yourself.  The default FreeType LCD rendering technology does not\n-   *   require filtering.\n-   *\n@@ -4092,1 +4077,1 @@\n-   *   alternative, multi-colour glyph representation: Instead of rendering\n+   *   alternative, multi-color glyph representation: Instead of rendering\n@@ -4785,1 +4770,1 @@\n-#define FREETYPE_PATCH  2\n+#define FREETYPE_PATCH  4\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/freetype.h","additions":17,"deletions":32,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -99,0 +98,1 @@\n+   *\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftadvanc.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbbox.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbdf.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_COLOR_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftcolor.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbitmap.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcid.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcolor.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,3 +22,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_PARAMETER_TAGS_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftparams.h>\n@@ -430,4 +429,0 @@\n-   *   By default, the Adobe engines for CFF, Type~1, and CID fonts darken\n-   *   stems at smaller sizes, regardless of hinting, to enhance contrast.\n-   *   Setting this property, stem darkening gets switched off.\n-   *\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftdriver.h","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-   *     #include FT_ERRORS_H\n+   *     #include <freetype\/fterrors.h>\n@@ -127,1 +127,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -200,1 +200,1 @@\n-#include FT_ERROR_DEFINITIONS_H\n+#include <freetype\/fterrdef.h>\n@@ -235,5 +235,10 @@\n-  \/* FT_INCLUDE_ERR_PROTOS:  Control if function prototypes should be       *\/\n-  \/*                         included with `#include FT_ERRORS_H'.  This is *\/\n-  \/*                         only true where `FT_ERRORDEF` is undefined.    *\/\n-  \/* FT_ERR_PROTOS_DEFINED:  Actual multiple-inclusion protection of        *\/\n-  \/*                         `fterrors.h`.                                  *\/\n+  \/* FT_INCLUDE_ERR_PROTOS: Control whether function prototypes should be *\/\n+  \/*                        included with                                 *\/\n+  \/*                                                                      *\/\n+  \/*                          #include <freetype\/fterrors.h>              *\/\n+  \/*                                                                      *\/\n+  \/*                        This is only true where `FT_ERRORDEF` is      *\/\n+  \/*                        undefined.                                    *\/\n+  \/*                                                                      *\/\n+  \/* FT_ERR_PROTOS_DEFINED: Actual multiple-inclusion protection of       *\/\n+  \/*                        `fterrors.h`.                                 *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fterrors.h","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftfntfmt.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftgasp.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,2 +36,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftglyph.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -46,0 +45,10 @@\n+   *   In certain builds of the library, gzip compression recognition is\n+   *   automatically handled when calling @FT_New_Face or @FT_Open_Face.\n+   *   This means that if no font driver is capable of handling the raw\n+   *   compressed file, the library will try to open a gzipped stream from it\n+   *   and re-open the face with it.\n+   *\n+   *   The stream implementation is very basic and resets the decompression\n+   *   process each time seeking backwards is needed within the stream,\n+   *   which significantly undermines the performance.\n+   *\n@@ -78,9 +87,0 @@\n-   *   The stream implementation is very basic and resets the decompression\n-   *   process each time seeking backwards is needed within the stream.\n-   *\n-   *   In certain builds of the library, gzip compression recognition is\n-   *   automatically handled when calling @FT_New_Face or @FT_Open_Face.\n-   *   This means that if no font driver is capable of handling the raw\n-   *   compressed file, the library will try to open a gzipped stream from it\n-   *   and re-open the face with it.\n-   *\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftgzip.h","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include <ft2build.h>\n@@ -404,0 +403,7 @@\n+   *   FT_OUTLINE_OVERLAP ::\n+   *     This flag indicates that this outline contains overlapping contrours\n+   *     and the anti-aliased renderer should perform oversampling to\n+   *     mitigate possible artifacts.  This flag should _not_ be set for\n+   *     well designed glyphs without overlaps because it quadruples the\n+   *     rendering time.\n+   *\n@@ -435,0 +441,1 @@\n+#define FT_OUTLINE_OVERLAP          0x40\n@@ -1007,3 +1014,2 @@\n-   *     An optional clipping box.  It is only used in direct rendering mode.\n-   *     Note that coordinates here should be expressed in _integer_ pixels\n-   *     (and not in 26.6 fixed-point units).\n+   *     An optional span clipping box expressed in _integer_ pixels\n+   *     (not in 26.6 fixed-point units).\n@@ -1012,9 +1018,16 @@\n-   *   An anti-aliased glyph bitmap is drawn if the @FT_RASTER_FLAG_AA bit\n-   *   flag is set in the `flags` field, otherwise a monochrome bitmap is\n-   *   generated.\n-   *\n-   *   If the @FT_RASTER_FLAG_DIRECT bit flag is set in `flags`, the raster\n-   *   will call the `gray_spans` callback to draw gray pixel spans.  This\n-   *   allows direct composition over a pre-existing bitmap through\n-   *   user-provided callbacks to perform the span drawing and composition.\n-   *   Not supported by the monochrome rasterizer.\n+   *   The @FT_RASTER_FLAG_AA bit flag must be set in the `flags` to\n+   *   generate an anti-aliased glyph bitmap, otherwise a monochrome bitmap\n+   *   is generated.  The `target` should have appropriate pixel mode and its\n+   *   dimensions define the clipping region.\n+   *\n+   *   If both @FT_RASTER_FLAG_AA and @FT_RASTER_FLAG_DIRECT bit flags\n+   *   are set in `flags`, the raster calls an @FT_SpanFunc callback\n+   *   `gray_spans` with `user` data as an argument ignoring `target`.  This\n+   *   allows direct composition over a pre-existing user surface to perform\n+   *   the span drawing and composition.  To optionally clip the spans, set\n+   *   the @FT_RASTER_FLAG_CLIP flag and `clip_box`.  The monochrome raster\n+   *   does not support the direct mode.\n+   *\n+   *   The gray-level rasterizer always uses 256 gray levels.  If you want\n+   *   fewer gray levels, you have to use @FT_RASTER_FLAG_DIRECT and reduce\n+   *   the levels in the callback function.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftimage.h","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -22,3 +22,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_PARAMETER_TAGS_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftparams.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftincrem.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_PARAMETER_TAGS_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftparams.h>\n@@ -50,1 +49,1 @@\n-   *   `ftoption.h` file, this enables patented ClearType-style rendering.\n+   *   `ftoption.h` file, this enables ClearType-style rendering.\n@@ -180,1 +179,1 @@\n-   *   This function is used to apply color filtering to LCD decimated\n+   *   This function is used to change filter applied to LCD decimated\n@@ -199,3 +198,4 @@\n-   *   This feature is always disabled by default.  Clients must make an\n-   *   explicit call to this function with a `filter` value other than\n-   *   @FT_LCD_FILTER_NONE in order to enable it.\n+   *   Since 2.10.3 the LCD filtering is enabled with @FT_LCD_FILTER_DEFAULT.\n+   *   It is no longer necessary to call this function explicitly except\n+   *   to choose a different filter or disable filtering altogether with\n+   *   @FT_LCD_FILTER_NONE.\n@@ -203,5 +203,3 @@\n-   *   Due to **PATENTS** covering subpixel rendering, this function doesn't\n-   *   do anything except returning `FT_Err_Unimplemented_Feature` if the\n-   *   configuration macro `FT_CONFIG_OPTION_SUBPIXEL_RENDERING` is not\n-   *   defined in your build of the library, which should correspond to all\n-   *   default builds of FreeType.\n+   *   This function does nothing but returns `FT_Err_Unimplemented_Feature`\n+   *   if the configuration macro `FT_CONFIG_OPTION_SUBPIXEL_RENDERING` is\n+   *   not defined in your build of the library.\n@@ -238,5 +236,3 @@\n-   *   Due to **PATENTS** covering subpixel rendering, this function doesn't\n-   *   do anything except returning `FT_Err_Unimplemented_Feature` if the\n-   *   configuration macro `FT_CONFIG_OPTION_SUBPIXEL_RENDERING` is not\n-   *   defined in your build of the library, which should correspond to all\n-   *   default builds of FreeType.\n+   *   This function does nothing but returns `FT_Err_Unimplemented_Feature`\n+   *   if the configuration macro `FT_CONFIG_OPTION_SUBPIXEL_RENDERING` is\n+   *   not defined in your build of the library.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlcdfil.h","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -31,2 +31,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlist.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmac.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_TYPE1_TABLES_H\n+#include <freetype\/t1tables.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmm.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -68,1 +67,1 @@\n-   *     smooth, smooth-lcd, smooth-lcdv\n+   *     smooth\n@@ -489,1 +488,1 @@\n-   *                         cff:no-stem-darkening=1 \\\n+   *                         cff:no-stem-darkening=0 \\\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmodapi.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-   *   #include FT_MODULE_ERRORS_H\n+   *   #include <freetype\/ftmoderr.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmoderr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,2 +24,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -486,5 +485,1 @@\n-   *   This advanced function uses @FT_Raster_Params as an argument,\n-   *   allowing FreeType rasterizer to be used for direct composition,\n-   *   translucency, etc.  You should know how to set up @FT_Raster_Params\n-   *   for this function to work.\n-   *\n+   *   This advanced function uses @FT_Raster_Params as an argument.\n@@ -493,6 +488,4 @@\n-   *   actually ignored.\n-   *\n-   *   The gray-level rasterizer always uses 256 gray levels.  If you want\n-   *   less gray levels, you have to provide your own span callback.  See the\n-   *   @FT_RASTER_FLAG_DIRECT value of the `flags` field in the\n-   *   @FT_Raster_Params structure for more details.\n+   *   actually ignored.  Either `params.target` must point to preallocated\n+   *   bitmap, or @FT_RASTER_FLAG_DIRECT must be set in `params.flags`\n+   *   allowing FreeType rasterizer to be used for direct composition,\n+   *   translucency, etc.  See @FT_Raster_Params for more details.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftoutln.h","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftparams.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_MODULE_H\n-#include FT_GLYPH_H\n+#include <freetype\/ftmodapi.h>\n+#include <freetype\/ftglyph.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftrender.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,2 +32,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsizes.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_PARAMETER_TAGS_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftparams.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsnames.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -22,3 +22,2 @@\n-#include <ft2build.h>\n-#include FT_OUTLINE_H\n-#include FT_GLYPH_H\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftglyph.h>\n@@ -47,1 +46,1 @@\n-   *    displayed with a coloured (and anti-aliased) border around their\n+   *    displayed with a colored (and anti-aliased) border around their\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftstroke.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,2 +48,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsynth.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsystem.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fttrigon.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#include FT_SYSTEM_H\n-#include FT_IMAGE_H\n+#include <freetype\/ftsystem.h>\n+#include <freetype\/ftimage.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fttypes.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,2 +73,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -211,0 +210,3 @@\n+#define FT_DECLARE_AUTOHINTER_INTERFACE( class_ )            \\\n+  FT_CALLBACK_TABLE const FT_AutoHinter_InterfaceRec  class_;\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/autohint.h","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -22,6 +22,5 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_CFF_TYPES_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/cfftypes.h>\n+#include <freetype\/internal\/tttypes.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/internal\/pshints.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/cffotypes.h","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -24,7 +24,6 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_TYPE1_TABLES_H\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/t1tables.h>\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/internal\/pshints.h>\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/cfftypes.h","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,307 @@\n+\/****************************************************************************\n+ *\n+ * internal\/compiler-macros.h\n+ *\n+ *   Compiler-specific macro definitions used internally by FreeType.\n+ *\n+ * Copyright (C) 2020 by\n+ * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ *\n+ * This file is part of the FreeType project, and may only be used,\n+ * modified, and distributed under the terms of the FreeType project\n+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n+ * this file you indicate that you have read the license and\n+ * understand and accept it fully.\n+ *\n+ *\/\n+\n+#ifndef INTERNAL_COMPILER_MACROS_H_\n+#define INTERNAL_COMPILER_MACROS_H_\n+\n+#include <freetype\/config\/public-macros.h>\n+\n+FT_BEGIN_HEADER\n+\n+  \/* Fix compiler warning with sgi compiler. *\/\n+#if defined( __sgi ) && !defined( __GNUC__ )\n+#  if defined( _COMPILER_VERSION ) && ( _COMPILER_VERSION >= 730 )\n+#    pragma set woff 3505\n+#  endif\n+#endif\n+\n+  \/* Fix compiler warning with sgi compiler. *\/\n+#if defined( __sgi ) && !defined( __GNUC__ )\n+#  if defined( _COMPILER_VERSION ) && ( _COMPILER_VERSION >= 730 )\n+#    pragma set woff 3505\n+#  endif\n+#endif\n+\n+  \/*\n+   * When defining a macro that expands to a non-trivial C statement, use\n+   * FT_BEGIN_STMNT and FT_END_STMNT to enclose the macro's body.  This\n+   * ensures there are no surprises when the macro is invoked in conditional\n+   * branches.\n+   *\n+   * Example:\n+   *\n+   *   #define  LOG( ... )        \\\n+   *     FT_BEGIN_STMNT           \\\n+   *       if ( logging_enabled ) \\\n+   *         log( __VA_ARGS__ );  \\\n+   *     FT_END_STMNT\n+   *\/\n+#define FT_BEGIN_STMNT  do {\n+#define FT_END_STMNT    } while ( 0 )\n+\n+  \/*\n+   * FT_DUMMY_STMNT expands to an empty C statement.  Useful for\n+   * conditionally defined statement macros.\n+   *\n+   * Example:\n+   *\n+   *   #ifdef BUILD_CONFIG_LOGGING\n+   *   #define  LOG( ... )         \\\n+   *      FT_BEGIN_STMNT           \\\n+   *        if ( logging_enabled ) \\\n+   *          log( __VA_ARGS__ );  \\\n+   *      FT_END_STMNT\n+   *   #else\n+   *   #  define LOG( ... )  FT_DUMMY_STMNT\n+   *   #endif\n+   *\/\n+#define FT_DUMMY_STMNT  FT_BEGIN_STMNT FT_END_STMNT\n+\n+#ifdef _WIN64\n+  \/* only 64bit Windows uses the LLP64 data model, i.e., *\/\n+  \/* 32-bit integers, 64-bit pointers.                   *\/\n+#define FT_UINT_TO_POINTER( x )  (void *)(unsigned __int64)(x)\n+#else\n+#define FT_UINT_TO_POINTER( x )  (void *)(unsigned long)(x)\n+#endif\n+\n+  \/*\n+   * Use `FT_TYPEOF( type )` to cast a value to `type`.  This is useful to\n+   * suppress signedness compilation warnings in macros.\n+   *\n+   * Example:\n+   *\n+   *   #define PAD_( x, n )  ( (x) & ~FT_TYPEOF( x )( (n) - 1 ) )\n+   *\n+   * (The `typeof` condition is taken from gnulib's `intprops.h` header\n+   * file.)\n+   *\/\n+#if ( ( defined( __GNUC__ ) && __GNUC__ >= 2 )                       || \\\n+      ( defined( __IBMC__ ) && __IBMC__ >= 1210 &&                      \\\n+        defined( __IBM__TYPEOF__ ) )                                 || \\\n+      ( defined( __SUNPRO_C ) && __SUNPRO_C >= 0x5110 && !__STDC__ ) )\n+#define FT_TYPEOF( type )  ( __typeof__ ( type ) )\n+#else\n+#define FT_TYPEOF( type )  \/* empty *\/\n+#endif\n+\n+  \/*\n+   * Mark a function declaration as internal to the library.  This ensures\n+   * that it will not be exposed by default to client code, and helps\n+   * generate smaller and faster code on ELF-based platforms.  Place this\n+   * before a function declaration.\n+   *\/\n+\n+  \/* Visual C, mingw *\/\n+#if defined( _WIN32 )\n+#define FT_INTERNAL_FUNCTION_ATTRIBUTE  \/* empty *\/\n+\n+  \/* gcc, clang *\/\n+#elif ( defined( __GNUC__ ) && __GNUC__ >= 4 ) || defined( __clang__ )\n+#define FT_INTERNAL_FUNCTION_ATTRIBUTE  \\\n+          __attribute__(( visibility( \"hidden\" ) ))\n+\n+  \/* Sun *\/\n+#elif defined( __SUNPRO_C ) && __SUNPRO_C >= 0x550\n+#define FT_INTERNAL_FUNCTION_ATTRIBUTE  __hidden\n+\n+#else\n+#define FT_INTERNAL_FUNCTION_ATTRIBUTE  \/* empty *\/\n+#endif\n+\n+  \/*\n+   * FreeType supports compilation of its C sources with a C++ compiler (in\n+   * C++ mode); this introduces a number of subtle issues.\n+   *\n+   * The main one is that a C++ function declaration and its definition must\n+   * have the same 'linkage'.  Because all FreeType headers declare their\n+   * functions with C linkage (i.e., within an `extern \"C\" { ... }` block\n+   * due to the magic of FT_BEGIN_HEADER and FT_END_HEADER), their\n+   * definition in FreeType sources should also be prefixed with `extern\n+   * \"C\"` when compiled in C++ mode.\n+   *\n+   * The `FT_FUNCTION_DECLARATION` and `FT_FUNCTION_DEFINITION` macros are\n+   * provided to deal with this case, as well as `FT_CALLBACK_DEF` and its\n+   * siblings below.\n+   *\/\n+\n+  \/*\n+   * `FT_FUNCTION_DECLARATION( type )` can be used to write a C function\n+   * declaration to ensure it will have C linkage when the library is built\n+   * with a C++ compiler.  The parameter is the function's return type, so a\n+   * declaration would look like\n+   *\n+   *    FT_FUNCTION_DECLARATION( int )\n+   *    foo( int x );\n+   *\n+   * NOTE: This requires that all uses are inside of `FT_BEGIN_HEADER ...\n+   * FT_END_HEADER` blocks, which guarantees that the declarations have C\n+   * linkage when the headers are included by C++ sources.\n+   *\n+   * NOTE: Do not use directly.  Use `FT_LOCAL`, `FT_BASE`, and `FT_EXPORT`\n+   * instead.\n+   *\/\n+#define FT_FUNCTION_DECLARATION( x )  extern x\n+\n+  \/*\n+   * Same as `FT_FUNCTION_DECLARATION`, but for function definitions instead.\n+   *\n+   * NOTE: Do not use directly.  Use `FT_LOCAL_DEF`, `FT_BASE_DEF`, and\n+   * `FT_EXPORT_DEF` instead.\n+   *\/\n+#ifdef __cplusplus\n+#define FT_FUNCTION_DEFINITION( x )  extern \"C\" x\n+#else\n+#define FT_FUNCTION_DEFINITION( x )  x\n+#endif\n+\n+  \/*\n+   * Use `FT_LOCAL` and `FT_LOCAL_DEF` to declare and define, respectively,\n+   * an internal FreeType function that is only used by the sources of a\n+   * single `src\/module\/` directory.  This ensures that the functions are\n+   * turned into static ones at build time, resulting in smaller and faster\n+   * code.\n+   *\/\n+#ifdef FT_MAKE_OPTION_SINGLE_OBJECT\n+\n+#define FT_LOCAL( x )      static x\n+#define FT_LOCAL_DEF( x )  static x\n+\n+#else\n+\n+#define FT_LOCAL( x )      FT_INTERNAL_FUNCTION_ATTRIBUTE \\\n+                           FT_FUNCTION_DECLARATION( x )\n+#define FT_LOCAL_DEF( x )  FT_FUNCTION_DEFINITION( x )\n+\n+#endif  \/* FT_MAKE_OPTION_SINGLE_OBJECT *\/\n+\n+  \/*\n+   * Use `FT_LOCAL_ARRAY` and `FT_LOCAL_ARRAY_DEF` to declare and define,\n+   * respectively, a constant array that must be accessed from several\n+   * sources in the same `src\/module\/` sub-directory, and which are internal\n+   * to the library.\n+   *\/\n+#define FT_LOCAL_ARRAY( x )      FT_INTERNAL_FUNCTION_ATTRIBUTE \\\n+                                 extern const x\n+#define FT_LOCAL_ARRAY_DEF( x )  FT_FUNCTION_DEFINITION( const x )\n+\n+  \/*\n+   * `Use FT_BASE` and `FT_BASE_DEF` to declare and define, respectively, an\n+   * internal library function that is used by more than a single module.\n+   *\/\n+#define FT_BASE( x )      FT_INTERNAL_FUNCTION_ATTRIBUTE \\\n+                          FT_FUNCTION_DECLARATION( x )\n+#define FT_BASE_DEF( x )  FT_FUNCTION_DEFINITION( x )\n+\n+\n+  \/*\n+   * NOTE: Conditionally define `FT_EXPORT_VAR` due to its definition in\n+   * `src\/smooth\/ftgrays.h` to make the header more portable.\n+   *\/\n+#ifndef FT_EXPORT_VAR\n+#define FT_EXPORT_VAR( x )  FT_FUNCTION_DECLARATION( x )\n+#endif\n+\n+  \/* When compiling FreeType as a DLL or DSO with hidden visibility,   *\/\n+  \/* some systems\/compilers need a special attribute in front OR after *\/\n+  \/* the return type of function declarations.                         *\/\n+  \/*                                                                   *\/\n+  \/* Two macros are used within the FreeType source code to define     *\/\n+  \/* exported library functions: `FT_EXPORT` and `FT_EXPORT_DEF`.      *\/\n+  \/*                                                                   *\/\n+  \/* - `FT_EXPORT( return_type )`                                      *\/\n+  \/*                                                                   *\/\n+  \/*   is used in a function declaration, as in                        *\/\n+  \/*                                                                   *\/\n+  \/*   ```                                                             *\/\n+  \/*     FT_EXPORT( FT_Error )                                         *\/\n+  \/*     FT_Init_FreeType( FT_Library*  alibrary );                    *\/\n+  \/*   ```                                                             *\/\n+  \/*                                                                   *\/\n+  \/* - `FT_EXPORT_DEF( return_type )`                                  *\/\n+  \/*                                                                   *\/\n+  \/*   is used in a function definition, as in                         *\/\n+  \/*                                                                   *\/\n+  \/*   ```                                                             *\/\n+  \/*     FT_EXPORT_DEF( FT_Error )                                     *\/\n+  \/*     FT_Init_FreeType( FT_Library*  alibrary )                     *\/\n+  \/*     {                                                             *\/\n+  \/*       ... some code ...                                           *\/\n+  \/*       return FT_Err_Ok;                                           *\/\n+  \/*     }                                                             *\/\n+  \/*   ```                                                             *\/\n+  \/*                                                                   *\/\n+  \/* You can provide your own implementation of `FT_EXPORT` and        *\/\n+  \/* `FT_EXPORT_DEF` here if you want.                                 *\/\n+  \/*                                                                   *\/\n+  \/* To export a variable, use `FT_EXPORT_VAR`.                        *\/\n+  \/*                                                                   *\/\n+\n+  \/* See `freetype\/config\/compiler_macros.h` for the `FT_EXPORT` definition *\/\n+#define FT_EXPORT_DEF( x )  FT_FUNCTION_DEFINITION( x )\n+\n+  \/* The following macros are needed to compile the library with a   *\/\n+  \/* C++ compiler and with 16bit compilers.                          *\/\n+  \/*                                                                 *\/\n+\n+  \/* This is special.  Within C++, you must specify `extern \"C\"` for *\/\n+  \/* functions which are used via function pointers, and you also    *\/\n+  \/* must do that for structures which contain function pointers to  *\/\n+  \/* assure C linkage -- it's not possible to have (local) anonymous *\/\n+  \/* functions which are accessed by (global) function pointers.     *\/\n+  \/*                                                                 *\/\n+  \/*                                                                 *\/\n+  \/* FT_CALLBACK_DEF is used to _define_ a callback function,        *\/\n+  \/* located in the same source code file as the structure that uses *\/\n+  \/* it.                                                             *\/\n+  \/*                                                                 *\/\n+  \/* FT_BASE_CALLBACK and FT_BASE_CALLBACK_DEF are used to declare   *\/\n+  \/* and define a callback function, respectively, in a similar way  *\/\n+  \/* as FT_BASE and FT_BASE_DEF work.                                *\/\n+  \/*                                                                 *\/\n+  \/* FT_CALLBACK_TABLE is used to _declare_ a constant variable that *\/\n+  \/* contains pointers to callback functions.                        *\/\n+  \/*                                                                 *\/\n+  \/* FT_CALLBACK_TABLE_DEF is used to _define_ a constant variable   *\/\n+  \/* that contains pointers to callback functions.                   *\/\n+  \/*                                                                 *\/\n+  \/*                                                                 *\/\n+  \/* Some 16bit compilers have to redefine these macros to insert    *\/\n+  \/* the infamous `_cdecl` or `__fastcall` declarations.             *\/\n+  \/*                                                                 *\/\n+#ifdef __cplusplus\n+#define FT_CALLBACK_DEF( x )  extern \"C\"  x\n+#else\n+#define FT_CALLBACK_DEF( x )  static  x\n+#endif\n+\n+#define FT_BASE_CALLBACK( x )      FT_FUNCTION_DECLARATION( x )\n+#define FT_BASE_CALLBACK_DEF( x )  FT_FUNCTION_DEFINITION( x )\n+\n+#ifndef FT_CALLBACK_TABLE\n+#ifdef __cplusplus\n+#define FT_CALLBACK_TABLE      extern \"C\"\n+#define FT_CALLBACK_TABLE_DEF  extern \"C\"\n+#else\n+#define FT_CALLBACK_TABLE      extern\n+#define FT_CALLBACK_TABLE_DEF  \/* nothing *\/\n+#endif\n+#endif \/* FT_CALLBACK_TABLE *\/\n+\n+FT_END_HEADER\n+\n+#endif  \/* INTERNAL_COMPILER_MACROS_H_ *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/compiler-macros.h","additions":307,"deletions":0,"binary":false,"changes":307,"status":"added"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -26,0 +25,1 @@\n+#include \"compiler-macros.h\"\n@@ -452,2 +452,1 @@\n-#define ROUND_F26DOT6( x )     ( x >= 0 ? (    ( (x) + 32 ) & -64 )     \\\n-                                        : ( -( ( 32 - (x) ) & -64 ) ) )\n+#define ROUND_F26DOT6( x )     ( ( (x) + 32 - ( x < 0 ) ) & -64 )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftcalc.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,3 @@\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n+\n+#include \"compiler-macros.h\"\n@@ -59,1 +61,1 @@\n-#include FT_INTERNAL_TRACE_H\n+#include <freetype\/internal\/fttrace.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftdebug.h","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_MODULE_H\n+#include <freetype\/ftmodapi.h>\n@@ -26,0 +25,1 @@\n+#include \"compiler-macros.h\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftdrv.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n@@ -141,2 +140,0 @@\n- \/* *\/\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftgloadr.h","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,2 +46,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/fthash.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include FT_TYPES_H\n+#include <freetype\/fttypes.h>\n@@ -27,0 +27,1 @@\n+#include \"compiler-macros.h\"\n@@ -392,2 +393,0 @@\n- \/* *\/\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftmemory.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,10 +29,9 @@\n-#include <ft2build.h>\n-#include FT_RENDER_H\n-#include FT_SIZES_H\n-#include FT_LCD_FILTER_H\n-#include FT_INTERNAL_MEMORY_H\n-#include FT_INTERNAL_GLYPH_LOADER_H\n-#include FT_INTERNAL_DRIVER_H\n-#include FT_INTERNAL_AUTOHINT_H\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_INTERNAL_CALC_H\n+#include <freetype\/ftrender.h>\n+#include <freetype\/ftsizes.h>\n+#include <freetype\/ftlcdfil.h>\n+#include <freetype\/internal\/ftmemory.h>\n+#include <freetype\/internal\/ftgloadr.h>\n+#include <freetype\/internal\/ftdrv.h>\n+#include <freetype\/internal\/autohint.h>\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/ftcalc.h>\n@@ -41,1 +40,1 @@\n-#include FT_INCREMENTAL_H\n+#include <freetype\/ftincrem.h>\n@@ -44,0 +43,1 @@\n+#include \"compiler-macros.h\"\n@@ -229,2 +229,2 @@\n-#define FT_DECLARE_CMAP_CLASS( class_ )              \\\n-  FT_CALLBACK_TABLE const  FT_CMap_ClassRec class_;\n+#define FT_DECLARE_CMAP_CLASS( class_ )            \\\n+  FT_CALLBACK_TABLE const FT_CMap_ClassRec  class_;\n@@ -656,1 +656,1 @@\n- \/* *\/\n+  \/* *\/\n@@ -1060,0 +1060,3 @@\n+#define FT_DECLARE_GLYPH( class_ )                \\\n+  FT_CALLBACK_TABLE const FT_Glyph_Class  class_;\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftobjs.h","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftpsprop.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftrfork.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"compiler-macros.h\"\n@@ -489,27 +490,0 @@\n-  \/*\n-   * The header files containing the services.\n-   *\/\n-\n-#define FT_SERVICE_BDF_H                <freetype\/internal\/services\/svbdf.h>\n-#define FT_SERVICE_CFF_TABLE_LOAD_H     <freetype\/internal\/services\/svcfftl.h>\n-#define FT_SERVICE_CID_H                <freetype\/internal\/services\/svcid.h>\n-#define FT_SERVICE_FONT_FORMAT_H        <freetype\/internal\/services\/svfntfmt.h>\n-#define FT_SERVICE_GLYPH_DICT_H         <freetype\/internal\/services\/svgldict.h>\n-#define FT_SERVICE_GX_VALIDATE_H        <freetype\/internal\/services\/svgxval.h>\n-#define FT_SERVICE_KERNING_H            <freetype\/internal\/services\/svkern.h>\n-#define FT_SERVICE_METRICS_VARIATIONS_H <freetype\/internal\/services\/svmetric.h>\n-#define FT_SERVICE_MULTIPLE_MASTERS_H   <freetype\/internal\/services\/svmm.h>\n-#define FT_SERVICE_OPENTYPE_VALIDATE_H  <freetype\/internal\/services\/svotval.h>\n-#define FT_SERVICE_PFR_H                <freetype\/internal\/services\/svpfr.h>\n-#define FT_SERVICE_POSTSCRIPT_CMAPS_H   <freetype\/internal\/services\/svpscmap.h>\n-#define FT_SERVICE_POSTSCRIPT_INFO_H    <freetype\/internal\/services\/svpsinfo.h>\n-#define FT_SERVICE_POSTSCRIPT_NAME_H    <freetype\/internal\/services\/svpostnm.h>\n-#define FT_SERVICE_PROPERTIES_H         <freetype\/internal\/services\/svprop.h>\n-#define FT_SERVICE_SFNT_H               <freetype\/internal\/services\/svsfnt.h>\n-#define FT_SERVICE_TRUETYPE_ENGINE_H    <freetype\/internal\/services\/svtteng.h>\n-#define FT_SERVICE_TRUETYPE_GLYF_H      <freetype\/internal\/services\/svttglyf.h>\n-#define FT_SERVICE_TT_CMAP_H            <freetype\/internal\/services\/svttcmap.h>\n-#define FT_SERVICE_WINFNT_H             <freetype\/internal\/services\/svwinfnt.h>\n-\n- \/* *\/\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftserv.h","additions":1,"deletions":27,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -24,2 +24,2 @@\n-#include FT_SYSTEM_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftsystem.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftstream.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n-#include FT_CONFIG_STANDARD_LIBRARY_H   \/* for ft_setjmp and ft_longjmp *\/\n+#include FT_CONFIG_STANDARD_LIBRARY_H   \/* for ft_jmpbuf *\/\n@@ -25,0 +25,1 @@\n+#include \"compiler-macros.h\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftvalid.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,67 +0,0 @@\n-\/****************************************************************************\n- *\n- * internal.h\n- *\n- *   Internal header files (specification only).\n- *\n- * Copyright (C) 1996-2020 by\n- * David Turner, Robert Wilhelm, and Werner Lemberg.\n- *\n- * This file is part of the FreeType project, and may only be used,\n- * modified, and distributed under the terms of the FreeType project\n- * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n- * this file you indicate that you have read the license and\n- * understand and accept it fully.\n- *\n- *\/\n-\n-\n-  \/**************************************************************************\n-   *\n-   * This file is automatically included by `ft2build.h`.  Do not include it\n-   * manually!\n-   *\n-   *\/\n-\n-\n-#define FT_INTERNAL_OBJECTS_H             <freetype\/internal\/ftobjs.h>\n-#define FT_INTERNAL_STREAM_H              <freetype\/internal\/ftstream.h>\n-#define FT_INTERNAL_MEMORY_H              <freetype\/internal\/ftmemory.h>\n-#define FT_INTERNAL_DEBUG_H               <freetype\/internal\/ftdebug.h>\n-#define FT_INTERNAL_CALC_H                <freetype\/internal\/ftcalc.h>\n-#define FT_INTERNAL_HASH_H                <freetype\/internal\/fthash.h>\n-#define FT_INTERNAL_DRIVER_H              <freetype\/internal\/ftdrv.h>\n-#define FT_INTERNAL_TRACE_H               <freetype\/internal\/fttrace.h>\n-#define FT_INTERNAL_GLYPH_LOADER_H        <freetype\/internal\/ftgloadr.h>\n-#define FT_INTERNAL_SFNT_H                <freetype\/internal\/sfnt.h>\n-#define FT_INTERNAL_SERVICE_H             <freetype\/internal\/ftserv.h>\n-#define FT_INTERNAL_RFORK_H               <freetype\/internal\/ftrfork.h>\n-#define FT_INTERNAL_VALIDATE_H            <freetype\/internal\/ftvalid.h>\n-\n-#define FT_INTERNAL_TRUETYPE_TYPES_H      <freetype\/internal\/tttypes.h>\n-#define FT_INTERNAL_TYPE1_TYPES_H         <freetype\/internal\/t1types.h>\n-#define FT_INTERNAL_WOFF_TYPES_H          <freetype\/internal\/wofftypes.h>\n-\n-#define FT_INTERNAL_POSTSCRIPT_AUX_H      <freetype\/internal\/psaux.h>\n-#define FT_INTERNAL_POSTSCRIPT_HINTS_H    <freetype\/internal\/pshints.h>\n-#define FT_INTERNAL_POSTSCRIPT_PROPS_H    <freetype\/internal\/ftpsprop.h>\n-\n-#define FT_INTERNAL_AUTOHINT_H            <freetype\/internal\/autohint.h>\n-\n-#define FT_INTERNAL_CFF_TYPES_H           <freetype\/internal\/cfftypes.h>\n-#define FT_INTERNAL_CFF_OBJECTS_TYPES_H   <freetype\/internal\/cffotypes.h>\n-\n-\n-#if defined( _MSC_VER )      \/* Visual C++ (and Intel C++) *\/\n-\n-  \/* We disable the warning `conditional expression is constant' here *\/\n-  \/* in order to compile cleanly with the maximum level of warnings.  *\/\n-  \/* In particular, the warning complains about stuff like `while(0)' *\/\n-  \/* which is very useful in macro definitions.  There is no benefit  *\/\n-  \/* in having it enabled.                                            *\/\n-#pragma warning( disable : 4127 )\n-\n-#endif \/* _MSC_VER *\/\n-\n-\n-\/* END *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/internal.h","additions":0,"deletions":67,"binary":false,"changes":67,"status":"deleted"},{"patch":"@@ -24,8 +24,7 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n-#include FT_INTERNAL_HASH_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_INTERNAL_CFF_TYPES_H\n-#include FT_INTERNAL_CFF_OBJECTS_TYPES_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/t1types.h>\n+#include <freetype\/internal\/fthash.h>\n+#include <freetype\/internal\/tttypes.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/internal\/cfftypes.h>\n+#include <freetype\/internal\/cffotypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/psaux.h","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -25,3 +25,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_TYPE1_TABLES_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/t1tables.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/pshints.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_BDF_H\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/ftbdf.h>\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svbdf.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_INTERNAL_CFF_TYPES_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/cfftypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svcfftl.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svcid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svfntfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svgldict.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n-#include FT_GX_VALIDATE_H\n-#include FT_INTERNAL_VALIDATE_H\n+#include <freetype\/ftgxval.h>\n+#include <freetype\/internal\/ftvalid.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svgxval.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_TRUETYPE_TABLES_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/tttables.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svkern.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svmetric.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svmm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_OPENTYPE_VALIDATE_H\n-#include FT_INTERNAL_VALIDATE_H\n+#include <freetype\/ftotval.h>\n+#include <freetype\/internal\/ftvalid.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svotval.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_PFR_H\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/ftpfr.h>\n+#include <freetype\/internal\/ftserv.h>\n@@ -59,1 +59,0 @@\n- \/* *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpfr.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_SERVICE_H\n+#include <freetype\/internal\/ftserv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpostnm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpscmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpsinfo.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_TRUETYPE_TABLES_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/tttables.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svsfnt.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_TRUETYPE_TABLES_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/tttables.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svttcmap.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_MODULE_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/ftmodapi.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svtteng.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -21,2 +21,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_TRUETYPE_TABLES_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/tttables.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svttglyf.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_WINFONTS_H\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/ftwinfnt.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svwinfnt.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,4 +23,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DRIVER_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n-#include FT_INTERNAL_WOFF_TYPES_H\n+#include <freetype\/internal\/ftdrv.h>\n+#include <freetype\/internal\/tttypes.h>\n+#include <freetype\/internal\/wofftypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/sfnt.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,6 +24,5 @@\n-#include <ft2build.h>\n-#include FT_TYPE1_TABLES_H\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_INTERNAL_HASH_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n+#include <freetype\/t1tables.h>\n+#include <freetype\/internal\/pshints.h>\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/fthash.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/t1types.h","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -24,4 +24,3 @@\n-#include <ft2build.h>\n-#include FT_TRUETYPE_TABLES_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_COLOR_H\n+#include <freetype\/tttables.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ftcolor.h>\n@@ -30,1 +29,1 @@\n-#include FT_MULTIPLE_MASTERS_H\n+#include <freetype\/ftmm.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/tttypes.h","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,3 +24,2 @@\n-#include <ft2build.h>\n-#include FT_TRUETYPE_TABLES_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/tttables.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/wofftypes.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -24,2 +24,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/t1tables.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ttnameid.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,2 +24,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/tttables.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/tttags.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -21,4 +21,2 @@\n-   * This is the 'entry point' for FreeType header file inclusions.  It is\n-   * the only header file which should be included directly; all other\n-   * FreeType header files should be accessed with macro names (after\n-   * including `ft2build.h`).\n+   * This is the 'entry point' for FreeType header file inclusions, to be\n+   * loaded before all other header files.\n@@ -30,1 +28,1 @@\n-   *   #include FT_FREETYPE_H\n+   *   #include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/ft2build.h","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-    '\\xE0', '\\xA4', '\\x95', ' ', '\\xE0', '\\xA4', '\\xAE', ' ', '\\xE0', '\\xA4', '\\x85', ' ', '\\xE0', '\\xA4', '\\x86', ' ', '\\xE0', '\\xA4', '\\xA5', ' ', '\\xE0', '\\xA4', '\\xA7', ' ', '\\xE0', '\\xA4', '\\xAD', ' ', '\\xE0', '\\xA4', '\\xB6',  \/* क म अ आ थ ध भ श *\/\n+    '\\xE0', '\\xA4', '\\x95', ' ', '\\xE0', '\\xA4', '\\xA8', ' ', '\\xE0', '\\xA4', '\\xAE', ' ', '\\xE0', '\\xA4', '\\x89', ' ', '\\xE0', '\\xA4', '\\x9B', ' ', '\\xE0', '\\xA4', '\\x9F', ' ', '\\xE0', '\\xA4', '\\xA0', ' ', '\\xE0', '\\xA4', '\\xA1',  \/* क न म उ छ ट ठ ड *\/\n@@ -299,0 +299,14 @@\n+    '\\xF0', '\\x96', '\\xB9', '\\x80', ' ', '\\xF0', '\\x96', '\\xB9', '\\x81', ' ', '\\xF0', '\\x96', '\\xB9', '\\x82', ' ', '\\xF0', '\\x96', '\\xB9', '\\x83', ' ', '\\xF0', '\\x96', '\\xB9', '\\x8F', ' ', '\\xF0', '\\x96', '\\xB9', '\\x9A', ' ', '\\xF0', '\\x96', '\\xB9', '\\x9F',  \/* 𖹀 𖹁 𖹂 𖹃 𖹏 𖹚 𖹟 *\/\n+    '\\0',\n+    '\\xF0', '\\x96', '\\xB9', '\\x80', ' ', '\\xF0', '\\x96', '\\xB9', '\\x81', ' ', '\\xF0', '\\x96', '\\xB9', '\\x82', ' ', '\\xF0', '\\x96', '\\xB9', '\\x83', ' ', '\\xF0', '\\x96', '\\xB9', '\\x8F', ' ', '\\xF0', '\\x96', '\\xB9', '\\x9A', ' ', '\\xF0', '\\x96', '\\xB9', '\\x92', ' ', '\\xF0', '\\x96', '\\xB9', '\\x93',  \/* 𖹀 𖹁 𖹂 𖹃 𖹏 𖹚 𖹒 𖹓 *\/\n+    '\\0',\n+    '\\xF0', '\\x96', '\\xB9', '\\xA4', ' ', '\\xF0', '\\x96', '\\xB9', '\\xAC', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA7', ' ', '\\xF0', '\\x96', '\\xB9', '\\xB4', ' ', '\\xF0', '\\x96', '\\xB9', '\\xB6', ' ', '\\xF0', '\\x96', '\\xB9', '\\xBE',  \/* 𖹤 𖹬 𖹧 𖹴 𖹶 𖹾 *\/\n+    '\\0',\n+    '\\xF0', '\\x96', '\\xB9', '\\xA0', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA1', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA2', ' ', '\\xF0', '\\x96', '\\xB9', '\\xB9', ' ', '\\xF0', '\\x96', '\\xB9', '\\xB3', ' ', '\\xF0', '\\x96', '\\xB9', '\\xAE',  \/* 𖹠 𖹡 𖹢 𖹹 𖹳 𖹮 *\/\n+    '\\0',\n+    '\\xF0', '\\x96', '\\xB9', '\\xA0', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA1', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA2', ' ', '\\xF0', '\\x96', '\\xB9', '\\xB3', ' ', '\\xF0', '\\x96', '\\xB9', '\\xAD', ' ', '\\xF0', '\\x96', '\\xB9', '\\xBD',  \/* 𖹠 𖹡 𖹢 𖹳 𖹭 𖹽 *\/\n+    '\\0',\n+    '\\xF0', '\\x96', '\\xB9', '\\xA5', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA8', ' ', '\\xF0', '\\x96', '\\xB9', '\\xA9',  \/* 𖹥 𖹨 𖹩 *\/\n+    '\\0',\n+    '\\xF0', '\\x96', '\\xBA', '\\x80', ' ', '\\xF0', '\\x96', '\\xBA', '\\x85', ' ', '\\xF0', '\\x96', '\\xBA', '\\x88', ' ', '\\xF0', '\\x96', '\\xBA', '\\x84', ' ', '\\xF0', '\\x96', '\\xBA', '\\x8D',  \/* 𖺀 𖺅 𖺈 𖺄 𖺍 *\/\n+    '\\0',\n@@ -497,8 +511,8 @@\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_TOP,             AF_BLUE_PROPERTY_LATIN_TOP        },\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_BOTTOM,          0                                 },\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_TOP,       AF_BLUE_PROPERTY_LATIN_TOP      |\n-                                                         AF_BLUE_PROPERTY_LATIN_X_HEIGHT   },\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_BOTTOM,    0                                 },\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_TOP,        AF_BLUE_PROPERTY_LATIN_TOP        },\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_BOTTOM,     0                                 },\n-    { AF_BLUE_STRING_MAX,                                0                                 },\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_TOP,          AF_BLUE_PROPERTY_LATIN_TOP        },\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_BOTTOM,       0                                 },\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_TOP,    AF_BLUE_PROPERTY_LATIN_TOP      |\n+                                                      AF_BLUE_PROPERTY_LATIN_X_HEIGHT   },\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_BOTTOM, 0                                 },\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_TOP,     AF_BLUE_PROPERTY_LATIN_TOP        },\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_BOTTOM,  0                                 },\n+    { AF_BLUE_STRING_MAX,                             0                                 },\n@@ -604,0 +618,3 @@\n+    { AF_BLUE_STRING_KANNADA_TOP,    AF_BLUE_PROPERTY_LATIN_TOP },\n+    { AF_BLUE_STRING_KANNADA_BOTTOM, 0                          },\n+    { AF_BLUE_STRING_MAX,            0                          },\n@@ -622,3 +639,0 @@\n-    { AF_BLUE_STRING_KANNADA_TOP,    AF_BLUE_PROPERTY_LATIN_TOP },\n-    { AF_BLUE_STRING_KANNADA_BOTTOM, 0                          },\n-    { AF_BLUE_STRING_MAX,            0                          },\n@@ -662,0 +676,9 @@\n+    { AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_TOP,     AF_BLUE_PROPERTY_LATIN_TOP        },\n+    { AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_BOTTOM,  0                                 },\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_F_TOP,     AF_BLUE_PROPERTY_LATIN_TOP        },\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_TOP,       AF_BLUE_PROPERTY_LATIN_TOP      |\n+                                                  AF_BLUE_PROPERTY_LATIN_X_HEIGHT   },\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_BOTTOM,    0                                 },\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_DESCENDER, 0                                 },\n+    { AF_BLUE_STRING_MEDEFAIDRIN_DIGIT_TOP,       AF_BLUE_PROPERTY_LATIN_TOP        },\n+    { AF_BLUE_STRING_MAX,                         0                                 },\n@@ -727,3 +750,0 @@\n-    { AF_BLUE_STRING_TIFINAGH, AF_BLUE_PROPERTY_LATIN_TOP },\n-    { AF_BLUE_STRING_TIFINAGH, 0                          },\n-    { AF_BLUE_STRING_MAX,      0                          },\n@@ -739,0 +759,3 @@\n+    { AF_BLUE_STRING_TIFINAGH, AF_BLUE_PROPERTY_LATIN_TOP },\n+    { AF_BLUE_STRING_TIFINAGH, 0                          },\n+    { AF_BLUE_STRING_MAX,      0                          },\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.c","additions":38,"deletions":15,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-    \"क म अ आ थ ध भ श\"\n+    \"क न म उ छ ट ठ ड\"\n@@ -395,0 +395,15 @@\n+  AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_TOP\n+    \"𖹀 𖹁 𖹂 𖹃 𖹏 𖹚 𖹟\"\n+  AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_BOTTOM\n+    \"𖹀 𖹁 𖹂 𖹃 𖹏 𖹚 𖹒 𖹓\"\n+  AF_BLUE_STRING_MEDEFAIDRIN_SMALL_F_TOP\n+    \"𖹤 𖹬 𖹧 𖹴 𖹶 𖹾\"\n+  AF_BLUE_STRING_MEDEFAIDRIN_SMALL_TOP\n+    \"𖹠 𖹡 𖹢 𖹹 𖹳 𖹮\"\n+  AF_BLUE_STRING_MEDEFAIDRIN_SMALL_BOTTOM\n+    \"𖹠 𖹡 𖹢 𖹳 𖹭 𖹽\"\n+  AF_BLUE_STRING_MEDEFAIDRIN_SMALL_DESCENDER\n+    \"𖹥 𖹨 𖹩\"\n+  AF_BLUE_STRING_MEDEFAIDRIN_DIGIT_TOP\n+    \"𖺀 𖺅 𖺈 𖺄 𖺍\"\n+\n@@ -744,8 +759,8 @@\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_TOP,             AF_BLUE_PROPERTY_LATIN_TOP        }\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_BOTTOM,          0                                 }\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_TOP,       AF_BLUE_PROPERTY_LATIN_TOP      |\n-                                                         AF_BLUE_PROPERTY_LATIN_X_HEIGHT   }\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_BOTTOM,    0                                 }\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_TOP,        AF_BLUE_PROPERTY_LATIN_TOP        }\n-    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_BOTTOM,     0                                 }\n-    { AF_BLUE_STRING_MAX,                                0                                 }\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_TOP,          AF_BLUE_PROPERTY_LATIN_TOP        }\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_BOTTOM,       0                                 }\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_TOP,    AF_BLUE_PROPERTY_LATIN_TOP      |\n+                                                      AF_BLUE_PROPERTY_LATIN_X_HEIGHT   }\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SMALL_BOTTOM, 0                                 }\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_TOP,     AF_BLUE_PROPERTY_LATIN_TOP        }\n+    { AF_BLUE_STRING_CANADIAN_SYLLABICS_SUPS_BOTTOM,  0                                 }\n+    { AF_BLUE_STRING_MAX,                             0                                 }\n@@ -884,0 +899,5 @@\n+  AF_BLUE_STRINGSET_KNDA\n+    { AF_BLUE_STRING_KANNADA_TOP,    AF_BLUE_PROPERTY_LATIN_TOP }\n+    { AF_BLUE_STRING_KANNADA_BOTTOM, 0                          }\n+    { AF_BLUE_STRING_MAX,            0                          }\n+\n@@ -908,5 +928,0 @@\n-  AF_BLUE_STRINGSET_KNDA\n-    { AF_BLUE_STRING_KANNADA_TOP,    AF_BLUE_PROPERTY_LATIN_TOP }\n-    { AF_BLUE_STRING_KANNADA_BOTTOM, 0                          }\n-    { AF_BLUE_STRING_MAX,            0                          }\n-\n@@ -962,0 +977,11 @@\n+  AF_BLUE_STRINGSET_MEDF\n+    { AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_TOP,     AF_BLUE_PROPERTY_LATIN_TOP        }\n+    { AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_BOTTOM,  0                                 }\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_F_TOP,     AF_BLUE_PROPERTY_LATIN_TOP        }\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_TOP,       AF_BLUE_PROPERTY_LATIN_TOP      |\n+                                                  AF_BLUE_PROPERTY_LATIN_X_HEIGHT   }\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_BOTTOM,    0                                 }\n+    { AF_BLUE_STRING_MEDEFAIDRIN_SMALL_DESCENDER, 0                                 }\n+    { AF_BLUE_STRING_MEDEFAIDRIN_DIGIT_TOP,       AF_BLUE_PROPERTY_LATIN_TOP        }\n+    { AF_BLUE_STRING_MAX,                         0                                 }\n+\n@@ -1059,5 +1085,0 @@\n-  AF_BLUE_STRINGSET_TFNG\n-    { AF_BLUE_STRING_TIFINAGH, AF_BLUE_PROPERTY_LATIN_TOP }\n-    { AF_BLUE_STRING_TIFINAGH, 0                          }\n-    { AF_BLUE_STRING_MAX,      0                          }\n-\n@@ -1075,0 +1096,5 @@\n+  AF_BLUE_STRINGSET_TFNG\n+    { AF_BLUE_STRING_TIFINAGH, AF_BLUE_PROPERTY_LATIN_TOP }\n+    { AF_BLUE_STRING_TIFINAGH, 0                          }\n+    { AF_BLUE_STRING_MAX,      0                          }\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.dat","additions":45,"deletions":19,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -215,55 +215,62 @@\n-    AF_BLUE_STRING_MONGOLIAN_TOP_BASE = 3614,\n-    AF_BLUE_STRING_MONGOLIAN_BOTTOM_BASE = 3658,\n-    AF_BLUE_STRING_MYANMAR_TOP = 3662,\n-    AF_BLUE_STRING_MYANMAR_BOTTOM = 3694,\n-    AF_BLUE_STRING_MYANMAR_ASCENDER = 3726,\n-    AF_BLUE_STRING_MYANMAR_DESCENDER = 3754,\n-    AF_BLUE_STRING_NKO_TOP = 3786,\n-    AF_BLUE_STRING_NKO_BOTTOM = 3810,\n-    AF_BLUE_STRING_NKO_SMALL_TOP = 3825,\n-    AF_BLUE_STRING_NKO_SMALL_BOTTOM = 3834,\n-    AF_BLUE_STRING_OL_CHIKI = 3846,\n-    AF_BLUE_STRING_OLD_TURKIC_TOP = 3870,\n-    AF_BLUE_STRING_OLD_TURKIC_BOTTOM = 3885,\n-    AF_BLUE_STRING_OSAGE_CAPITAL_TOP = 3905,\n-    AF_BLUE_STRING_OSAGE_CAPITAL_BOTTOM = 3945,\n-    AF_BLUE_STRING_OSAGE_CAPITAL_DESCENDER = 3975,\n-    AF_BLUE_STRING_OSAGE_SMALL_TOP = 3990,\n-    AF_BLUE_STRING_OSAGE_SMALL_BOTTOM = 4030,\n-    AF_BLUE_STRING_OSAGE_SMALL_ASCENDER = 4070,\n-    AF_BLUE_STRING_OSAGE_SMALL_DESCENDER = 4095,\n-    AF_BLUE_STRING_OSMANYA_TOP = 4110,\n-    AF_BLUE_STRING_OSMANYA_BOTTOM = 4150,\n-    AF_BLUE_STRING_ROHINGYA_TOP = 4190,\n-    AF_BLUE_STRING_ROHINGYA_BOTTOM = 4215,\n-    AF_BLUE_STRING_ROHINGYA_JOIN = 4240,\n-    AF_BLUE_STRING_SAURASHTRA_TOP = 4243,\n-    AF_BLUE_STRING_SAURASHTRA_BOTTOM = 4275,\n-    AF_BLUE_STRING_SHAVIAN_TOP = 4295,\n-    AF_BLUE_STRING_SHAVIAN_BOTTOM = 4305,\n-    AF_BLUE_STRING_SHAVIAN_DESCENDER = 4330,\n-    AF_BLUE_STRING_SHAVIAN_SMALL_TOP = 4340,\n-    AF_BLUE_STRING_SHAVIAN_SMALL_BOTTOM = 4375,\n-    AF_BLUE_STRING_SINHALA_TOP = 4390,\n-    AF_BLUE_STRING_SINHALA_BOTTOM = 4422,\n-    AF_BLUE_STRING_SINHALA_DESCENDER = 4454,\n-    AF_BLUE_STRING_SUNDANESE_TOP = 4498,\n-    AF_BLUE_STRING_SUNDANESE_BOTTOM = 4522,\n-    AF_BLUE_STRING_SUNDANESE_DESCENDER = 4554,\n-    AF_BLUE_STRING_TAI_VIET_TOP = 4562,\n-    AF_BLUE_STRING_TAI_VIET_BOTTOM = 4582,\n-    AF_BLUE_STRING_TAMIL_TOP = 4594,\n-    AF_BLUE_STRING_TAMIL_BOTTOM = 4626,\n-    AF_BLUE_STRING_TELUGU_TOP = 4658,\n-    AF_BLUE_STRING_TELUGU_BOTTOM = 4686,\n-    AF_BLUE_STRING_THAI_TOP = 4714,\n-    AF_BLUE_STRING_THAI_BOTTOM = 4738,\n-    AF_BLUE_STRING_THAI_ASCENDER = 4766,\n-    AF_BLUE_STRING_THAI_LARGE_ASCENDER = 4778,\n-    AF_BLUE_STRING_THAI_DESCENDER = 4790,\n-    AF_BLUE_STRING_THAI_LARGE_DESCENDER = 4806,\n-    AF_BLUE_STRING_THAI_DIGIT_TOP = 4814,\n-    AF_BLUE_STRING_TIFINAGH = 4826,\n-    AF_BLUE_STRING_VAI_TOP = 4858,\n-    AF_BLUE_STRING_VAI_BOTTOM = 4890,\n-    af_blue_1_1 = 4921,\n+    AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_TOP = 3614,\n+    AF_BLUE_STRING_MEDEFAIDRIN_CAPITAL_BOTTOM = 3649,\n+    AF_BLUE_STRING_MEDEFAIDRIN_SMALL_F_TOP = 3689,\n+    AF_BLUE_STRING_MEDEFAIDRIN_SMALL_TOP = 3719,\n+    AF_BLUE_STRING_MEDEFAIDRIN_SMALL_BOTTOM = 3749,\n+    AF_BLUE_STRING_MEDEFAIDRIN_SMALL_DESCENDER = 3779,\n+    AF_BLUE_STRING_MEDEFAIDRIN_DIGIT_TOP = 3794,\n+    AF_BLUE_STRING_MONGOLIAN_TOP_BASE = 3819,\n+    AF_BLUE_STRING_MONGOLIAN_BOTTOM_BASE = 3863,\n+    AF_BLUE_STRING_MYANMAR_TOP = 3867,\n+    AF_BLUE_STRING_MYANMAR_BOTTOM = 3899,\n+    AF_BLUE_STRING_MYANMAR_ASCENDER = 3931,\n+    AF_BLUE_STRING_MYANMAR_DESCENDER = 3959,\n+    AF_BLUE_STRING_NKO_TOP = 3991,\n+    AF_BLUE_STRING_NKO_BOTTOM = 4015,\n+    AF_BLUE_STRING_NKO_SMALL_TOP = 4030,\n+    AF_BLUE_STRING_NKO_SMALL_BOTTOM = 4039,\n+    AF_BLUE_STRING_OL_CHIKI = 4051,\n+    AF_BLUE_STRING_OLD_TURKIC_TOP = 4075,\n+    AF_BLUE_STRING_OLD_TURKIC_BOTTOM = 4090,\n+    AF_BLUE_STRING_OSAGE_CAPITAL_TOP = 4110,\n+    AF_BLUE_STRING_OSAGE_CAPITAL_BOTTOM = 4150,\n+    AF_BLUE_STRING_OSAGE_CAPITAL_DESCENDER = 4180,\n+    AF_BLUE_STRING_OSAGE_SMALL_TOP = 4195,\n+    AF_BLUE_STRING_OSAGE_SMALL_BOTTOM = 4235,\n+    AF_BLUE_STRING_OSAGE_SMALL_ASCENDER = 4275,\n+    AF_BLUE_STRING_OSAGE_SMALL_DESCENDER = 4300,\n+    AF_BLUE_STRING_OSMANYA_TOP = 4315,\n+    AF_BLUE_STRING_OSMANYA_BOTTOM = 4355,\n+    AF_BLUE_STRING_ROHINGYA_TOP = 4395,\n+    AF_BLUE_STRING_ROHINGYA_BOTTOM = 4420,\n+    AF_BLUE_STRING_ROHINGYA_JOIN = 4445,\n+    AF_BLUE_STRING_SAURASHTRA_TOP = 4448,\n+    AF_BLUE_STRING_SAURASHTRA_BOTTOM = 4480,\n+    AF_BLUE_STRING_SHAVIAN_TOP = 4500,\n+    AF_BLUE_STRING_SHAVIAN_BOTTOM = 4510,\n+    AF_BLUE_STRING_SHAVIAN_DESCENDER = 4535,\n+    AF_BLUE_STRING_SHAVIAN_SMALL_TOP = 4545,\n+    AF_BLUE_STRING_SHAVIAN_SMALL_BOTTOM = 4580,\n+    AF_BLUE_STRING_SINHALA_TOP = 4595,\n+    AF_BLUE_STRING_SINHALA_BOTTOM = 4627,\n+    AF_BLUE_STRING_SINHALA_DESCENDER = 4659,\n+    AF_BLUE_STRING_SUNDANESE_TOP = 4703,\n+    AF_BLUE_STRING_SUNDANESE_BOTTOM = 4727,\n+    AF_BLUE_STRING_SUNDANESE_DESCENDER = 4759,\n+    AF_BLUE_STRING_TAI_VIET_TOP = 4767,\n+    AF_BLUE_STRING_TAI_VIET_BOTTOM = 4787,\n+    AF_BLUE_STRING_TAMIL_TOP = 4799,\n+    AF_BLUE_STRING_TAMIL_BOTTOM = 4831,\n+    AF_BLUE_STRING_TELUGU_TOP = 4863,\n+    AF_BLUE_STRING_TELUGU_BOTTOM = 4891,\n+    AF_BLUE_STRING_THAI_TOP = 4919,\n+    AF_BLUE_STRING_THAI_BOTTOM = 4943,\n+    AF_BLUE_STRING_THAI_ASCENDER = 4971,\n+    AF_BLUE_STRING_THAI_LARGE_ASCENDER = 4983,\n+    AF_BLUE_STRING_THAI_DESCENDER = 4995,\n+    AF_BLUE_STRING_THAI_LARGE_DESCENDER = 5011,\n+    AF_BLUE_STRING_THAI_DIGIT_TOP = 5019,\n+    AF_BLUE_STRING_TIFINAGH = 5031,\n+    AF_BLUE_STRING_VAI_TOP = 5063,\n+    AF_BLUE_STRING_VAI_BOTTOM = 5095,\n+    af_blue_1_1 = 5126,\n@@ -353,4 +360,4 @@\n-    AF_BLUE_STRINGSET_KALI = 128,\n-    AF_BLUE_STRINGSET_KHMR = 134,\n-    AF_BLUE_STRINGSET_KHMS = 140,\n-    AF_BLUE_STRINGSET_KNDA = 143,\n+    AF_BLUE_STRINGSET_KNDA = 128,\n+    AF_BLUE_STRINGSET_KALI = 131,\n+    AF_BLUE_STRINGSET_KHMR = 137,\n+    AF_BLUE_STRINGSET_KHMS = 143,\n@@ -363,20 +370,21 @@\n-    AF_BLUE_STRINGSET_MONG = 179,\n-    AF_BLUE_STRINGSET_MYMR = 182,\n-    AF_BLUE_STRINGSET_NKOO = 187,\n-    AF_BLUE_STRINGSET_NONE = 192,\n-    AF_BLUE_STRINGSET_OLCK = 193,\n-    AF_BLUE_STRINGSET_ORKH = 196,\n-    AF_BLUE_STRINGSET_OSGE = 199,\n-    AF_BLUE_STRINGSET_OSMA = 207,\n-    AF_BLUE_STRINGSET_ROHG = 210,\n-    AF_BLUE_STRINGSET_SAUR = 214,\n-    AF_BLUE_STRINGSET_SHAW = 217,\n-    AF_BLUE_STRINGSET_SINH = 223,\n-    AF_BLUE_STRINGSET_SUND = 227,\n-    AF_BLUE_STRINGSET_TAML = 231,\n-    AF_BLUE_STRINGSET_TAVT = 234,\n-    AF_BLUE_STRINGSET_TELU = 237,\n-    AF_BLUE_STRINGSET_TFNG = 240,\n-    AF_BLUE_STRINGSET_THAI = 243,\n-    AF_BLUE_STRINGSET_VAII = 251,\n-    af_blue_2_1 = 254,\n+    AF_BLUE_STRINGSET_MEDF = 179,\n+    AF_BLUE_STRINGSET_MONG = 187,\n+    AF_BLUE_STRINGSET_MYMR = 190,\n+    AF_BLUE_STRINGSET_NKOO = 195,\n+    AF_BLUE_STRINGSET_NONE = 200,\n+    AF_BLUE_STRINGSET_OLCK = 201,\n+    AF_BLUE_STRINGSET_ORKH = 204,\n+    AF_BLUE_STRINGSET_OSGE = 207,\n+    AF_BLUE_STRINGSET_OSMA = 215,\n+    AF_BLUE_STRINGSET_ROHG = 218,\n+    AF_BLUE_STRINGSET_SAUR = 222,\n+    AF_BLUE_STRINGSET_SHAW = 225,\n+    AF_BLUE_STRINGSET_SINH = 231,\n+    AF_BLUE_STRINGSET_SUND = 235,\n+    AF_BLUE_STRINGSET_TAML = 239,\n+    AF_BLUE_STRINGSET_TAVT = 242,\n+    AF_BLUE_STRINGSET_TELU = 245,\n+    AF_BLUE_STRINGSET_THAI = 248,\n+    AF_BLUE_STRINGSET_TFNG = 256,\n+    AF_BLUE_STRINGSET_VAII = 259,\n+    af_blue_2_1 = 262,\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.h","additions":87,"deletions":79,"binary":false,"changes":166,"status":"modified"},{"patch":"@@ -25,3 +25,2 @@\n-#include <ft2build.h>\n-#include FT_ADVANCES_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/ftadvanc.h>\n+#include <freetype\/internal\/ftdebug.h>\n@@ -161,1 +160,1 @@\n-      FT_TRACE5(( \"standard character: U+%04lX (glyph index %d)\\n\",\n+      FT_TRACE5(( \"standard character: U+%04lX (glyph index %ld)\\n\",\n@@ -264,1 +263,1 @@\n-          FT_TRACE5(( \"  %d (standard)\", axis->standard_width ));\n+          FT_TRACE5(( \"  %ld (standard)\", axis->standard_width ));\n@@ -266,1 +265,1 @@\n-            FT_TRACE5(( \" %d\", axis->widths[i].org ));\n+            FT_TRACE5(( \" %ld\", axis->widths[i].org ));\n@@ -731,1 +730,1 @@\n-        FT_TRACE5(( \"delta: %d\", delta1 ));\n+        FT_TRACE5(( \"delta: %ld\", delta1 ));\n@@ -740,1 +739,1 @@\n-        FT_TRACE5(( \"\/%d\\n\", delta2 ));\n+        FT_TRACE5(( \"\/%ld\\n\", delta2 ));\n@@ -1647,1 +1646,1 @@\n-    FT_TRACE5(( \"  CJKLINK: edge %d @%d (opos=%.2f) linked to %.2f,\"\n+    FT_TRACE5(( \"  CJKLINK: edge %ld @%d (opos=%.2f) linked to %.2f,\"\n@@ -1869,1 +1868,1 @@\n-        FT_TRACE5(( \"  CJKBLUE: edge %d @%d (opos=%.2f) snapped to %.2f,\"\n+        FT_TRACE5(( \"  CJKBLUE: edge %ld @%d (opos=%.2f) snapped to %.2f,\"\n@@ -1933,1 +1932,1 @@\n-        FT_TRACE5(( \"ASSERTION FAILED for edge %d\\n\", edge2-edges ));\n+        FT_TRACE5(( \"ASSERTION FAILED for edge %ld\\n\", edge2-edges ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcjk.c","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aferrors.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -309,1 +309,1 @@\n-          FT_TRACE4(( \" %d\", idx ));\n+          FT_TRACE4(( \" %ld\", idx ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afglobal.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -21,2 +21,2 @@\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afhints.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_ADVANCES_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/ftadvanc.h>\n+#include <freetype\/internal\/ftdebug.h>\n@@ -158,1 +157,1 @@\n-      FT_TRACE5(( \"standard character: U+%04lX (glyph index %d)\\n\",\n+      FT_TRACE5(( \"standard character: U+%04lX (glyph index %ld)\\n\",\n@@ -261,1 +260,1 @@\n-          FT_TRACE5(( \"  %d (standard)\", axis->standard_width ));\n+          FT_TRACE5(( \"  %ld (standard)\", axis->standard_width ));\n@@ -263,1 +262,1 @@\n-            FT_TRACE5(( \" %d\", axis->widths[i].org ));\n+            FT_TRACE5(( \" %ld\", axis->widths[i].org ));\n@@ -1035,1 +1034,1 @@\n-                      \" adjusting %s %d to %ld\\n\",\n+                      \" adjusting %s %ld to %ld\\n\",\n@@ -1283,1 +1282,1 @@\n-                \" vertical scaling changed from %.5f to %.5f (by %d%%)\\n\"\n+                \" vertical scaling changed from %.5f to %.5f (by %ld%%)\\n\"\n@@ -1336,1 +1335,1 @@\n-      FT_TRACE5(( \"  %d scaled to %.2f\\n\",\n+      FT_TRACE5(( \"  %ld scaled to %.2f\\n\",\n@@ -1477,2 +1476,2 @@\n-        FT_TRACE5(( \"  reference %d: %d scaled to %.2f%s\\n\"\n-                    \"  overshoot %d: %d scaled to %.2f%s\\n\",\n+        FT_TRACE5(( \"  reference %d: %ld scaled to %.2f%s\\n\"\n+                    \"  overshoot %d: %ld scaled to %.2f%s\\n\",\n@@ -2948,1 +2947,1 @@\n-    FT_TRACE5(( \"  LINK: edge %d (opos=%.2f) linked to %.2f,\"\n+    FT_TRACE5(( \"  LINK: edge %ld (opos=%.2f) linked to %.2f,\"\n@@ -3072,2 +3071,2 @@\n-          FT_TRACE5(( \"  BLUE_ANCHOR: edge %d (opos=%.2f) snapped to %.2f,\"\n-                      \" was %.2f (anchor=edge %d)\\n\",\n+          FT_TRACE5(( \"  BLUE_ANCHOR: edge %ld (opos=%.2f) snapped to %.2f,\"\n+                      \" was %.2f (anchor=edge %ld)\\n\",\n@@ -3077,1 +3076,1 @@\n-          FT_TRACE5(( \"  BLUE: edge %d (opos=%.2f) snapped to %.2f,\"\n+          FT_TRACE5(( \"  BLUE: edge %ld (opos=%.2f) snapped to %.2f,\"\n@@ -3126,1 +3125,1 @@\n-        FT_TRACE5(( \"  ASSERTION FAILED for edge %d\\n\", edge2 - edges ));\n+        FT_TRACE5(( \"  ASSERTION FAILED for edge %ld\\n\", edge2 - edges ));\n@@ -3194,1 +3193,1 @@\n-        FT_TRACE5(( \"  ANCHOR: edge %d (opos=%.2f) and %d (opos=%.2f)\"\n+        FT_TRACE5(( \"  ANCHOR: edge %ld (opos=%.2f) and %ld (opos=%.2f)\"\n@@ -3223,1 +3222,1 @@\n-          FT_TRACE5(( \"  ADJUST: edge %d (pos=%.2f) moved to %.2f\\n\",\n+          FT_TRACE5(( \"  ADJUST: edge %ld (pos=%.2f) moved to %.2f\\n\",\n@@ -3264,1 +3263,1 @@\n-          FT_TRACE5(( \"  STEM: edge %d (opos=%.2f) linked to %d (opos=%.2f)\"\n+          FT_TRACE5(( \"  STEM: edge %ld (opos=%.2f) linked to %ld (opos=%.2f)\"\n@@ -3295,1 +3294,1 @@\n-          FT_TRACE5(( \"  STEM: edge %d (opos=%.2f) linked to %d (opos=%.2f)\"\n+          FT_TRACE5(( \"  STEM: edge %ld (opos=%.2f) linked to %ld (opos=%.2f)\"\n@@ -3318,1 +3317,1 @@\n-            FT_TRACE5(( \"  BOUND: edge %d (pos=%.2f) moved to %.2f\\n\",\n+            FT_TRACE5(( \"  BOUND: edge %ld (pos=%.2f) moved to %.2f\\n\",\n@@ -3420,1 +3419,1 @@\n-          FT_TRACE5(( \"  SERIF: edge %d (opos=%.2f) serif to %d (opos=%.2f)\"\n+          FT_TRACE5(( \"  SERIF: edge %ld (opos=%.2f) serif to %ld (opos=%.2f)\"\n@@ -3430,1 +3429,1 @@\n-          FT_TRACE5(( \"  SERIF_ANCHOR: edge %d (opos=%.2f)\"\n+          FT_TRACE5(( \"  SERIF_ANCHOR: edge %ld (opos=%.2f)\"\n@@ -3458,2 +3457,2 @@\n-            FT_TRACE5(( \"  SERIF_LINK1: edge %d (opos=%.2f) snapped to %.2f\"\n-                        \" from %d (opos=%.2f)\\n\",\n+            FT_TRACE5(( \"  SERIF_LINK1: edge %ld (opos=%.2f) snapped to %.2f\"\n+                        \" from %ld (opos=%.2f)\\n\",\n@@ -3468,1 +3467,1 @@\n-            FT_TRACE5(( \"  SERIF_LINK2: edge %d (opos=%.2f)\"\n+            FT_TRACE5(( \"  SERIF_LINK2: edge %ld (opos=%.2f)\"\n@@ -3488,1 +3487,1 @@\n-            FT_TRACE5(( \"  BOUND: edge %d (pos=%.2f) moved to %.2f\\n\",\n+            FT_TRACE5(( \"  BOUND: edge %ld (pos=%.2f) moved to %.2f\\n\",\n@@ -3509,1 +3508,1 @@\n-            FT_TRACE5(( \"  BOUND: edge %d (pos=%.2f) moved to %.2f\\n\",\n+            FT_TRACE5(( \"  BOUND: edge %ld (pos=%.2f) moved to %.2f\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aflatin.c","additions":27,"deletions":28,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include FT_INTERNAL_CALC_H\n+#include <freetype\/internal\/ftcalc.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afloader.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,4 +56,4 @@\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_DRIVER_H\n-#include FT_SERVICE_PROPERTIES_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/ftdriver.h>\n+#include <freetype\/internal\/services\/svprop.h>\n@@ -152,1 +152,1 @@\n-                    fallback_script, property_name ));\n+                    *fallback_script, property_name ));\n@@ -553,2 +553,2 @@\n-    (FT_AutoHinter_GlyphLoadFunc)af_autofitter_load_glyph )  \/* load_glyph *\/\n-\n+    (FT_AutoHinter_GlyphLoadFunc)af_autofitter_load_glyph    \/* load_glyph *\/\n+  )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afmodule.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -22,3 +22,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_MODULE_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ftmodapi.h>\n@@ -50,0 +49,1 @@\n+FT_DECLARE_AUTOHINTER_INTERFACE( af_autofitter_interface )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afmodule.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -667,0 +667,12 @@\n+  const AF_Script_UniRangeRec  af_medf_uniranges[] =\n+  {\n+    AF_UNIRANGE_REC( 0x16E40, 0x16E9F ),  \/* Medefaidrin *\/\n+    AF_UNIRANGE_REC(       0,       0 )\n+  };\n+\n+  const AF_Script_UniRangeRec  af_medf_nonbase_uniranges[] =\n+  {\n+    AF_UNIRANGE_REC(       0,       0 )\n+  };\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afranges.c","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -246,0 +246,6 @@\n+  SCRIPT( medf, MEDF,\n+          \"Medefaidrin\",\n+          HB_SCRIPT_MEDEFAIDRIN,\n+          HINTING_BOTTOM_TO_TOP,\n+          \"\\xF0\\x96\\xB9\\xA1 \\xF0\\x96\\xB9\\x9B \\xF0\\x96\\xB9\\xAF\" ) \/* 𖹡 𖹛 𖹯 *\/\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afscript.h","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_ADVANCES_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftadvanc.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afshaper.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afshaper.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -325,0 +325,7 @@\n+  STYLE( medf_dflt, MEDF_DFLT,\n+         \"Medefaidrin default style\",\n+         AF_WRITING_SYSTEM_LATIN,\n+         AF_SCRIPT_MEDF,\n+         AF_BLUE_STRINGSET_MEDF,\n+         AF_COVERAGE_DEFAULT )\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afstyles.h","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-#include <ft2build.h>\n@@ -37,4 +36,4 @@\n-#include FT_FREETYPE_H\n-#include FT_OUTLINE_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aftypes.h","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,2 +21,2 @@\n-#include FT_ADVANCES_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftadvanc.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftadvanc.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n@@ -30,0 +29,4 @@\n+  FT_DECLARE_GLYPH( ft_bitmap_glyph_class )\n+  FT_DECLARE_GLYPH( ft_outline_glyph_class )\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbase.h","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,2 +27,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -30,5 +29,5 @@\n-#include FT_BBOX_H\n-#include FT_IMAGE_H\n-#include FT_OUTLINE_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftbbox.h>\n+#include <freetype\/ftimage.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbbox.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,3 +21,3 @@\n-#include FT_BITMAP_H\n-#include FT_IMAGE_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftbitmap.h>\n+#include <freetype\/ftimage.h>\n+#include <freetype\/internal\/ftobjs.h>\n@@ -912,1 +911,1 @@\n-                \"  source bitmap: (%d, %d) -- (%d, %d); %d x %d\\n\",\n+                \"  source bitmap: (%ld, %ld) -- (%ld, %ld); %d x %d\\n\",\n@@ -918,1 +917,1 @@\n-      FT_TRACE5(( \"  target bitmap: (%d, %d) -- (%d, %d); %d x %d\\n\",\n+      FT_TRACE5(( \"  target bitmap: (%ld, %ld) -- (%ld, %ld); %d x %d\\n\",\n@@ -926,1 +925,1 @@\n-      FT_TRACE5(( \"  final bitmap: (%d, %d) -- (%d, %d); %d x %d\\n\",\n+      FT_TRACE5(( \"  final bitmap: (%ld, %ld) -- (%ld, %ld); %d x %d\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbitmap.c","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -35,6 +35,5 @@\n-#include <ft2build.h>\n-#include FT_GLYPH_H\n-#include FT_TRIGONOMETRY_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftglyph.h>\n+#include <freetype\/fttrigon.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcalc.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_CID_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_SERVICE_CID_H\n+#include <freetype\/ftcid.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/services\/svcid.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcid.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -21,5 +21,5 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_MEMORY_H\n-#include FT_SYSTEM_H\n-#include FT_ERRORS_H\n-#include FT_TYPES_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftmemory.h>\n+#include <freetype\/ftsystem.h>\n+#include <freetype\/fterrors.h>\n+#include <freetype\/fttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftdbgmem.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,3 +44,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/ftdebug.h>\n@@ -129,1 +128,1 @@\n-#include FT_INTERNAL_TRACE_H\n+#include <freetype\/internal\/fttrace.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftdebug.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_FONT_FORMATS_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_SERVICE_FONT_FORMAT_H\n+#include <freetype\/ftfntfmt.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/services\/svfntfmt.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftfntfmt.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -18,5 +18,4 @@\n-#include <ft2build.h>\n-#include FT_TYPE1_TABLES_H\n-#include FT_TRUETYPE_TABLES_H\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_SERVICE_POSTSCRIPT_INFO_H\n+#include <freetype\/t1tables.h>\n+#include <freetype\/tttables.h>\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/services\/svpsinfo.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftfstype.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_GASP_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/ftgasp.h>\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftgasp.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_GLYPH_LOADER_H\n-#include FT_INTERNAL_MEMORY_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftgloadr.h>\n+#include <freetype\/internal\/ftmemory.h>\n+#include <freetype\/internal\/ftobjs.h>\n@@ -96,0 +95,1 @@\n+    base->outline.flags      = 0;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftgloadr.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,2 +31,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -34,4 +33,6 @@\n-#include FT_GLYPH_H\n-#include FT_OUTLINE_H\n-#include FT_BITMAP_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftglyph.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftbitmap.h>\n+#include <freetype\/internal\/ftobjs.h>\n+\n+#include \"ftbase.h\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftglyph.c","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -42,3 +42,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_HASH_H\n-#include FT_INTERNAL_MEMORY_H\n+#include <freetype\/internal\/fthash.h>\n+#include <freetype\/internal\/ftmemory.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fthash.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_MODULE_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/ftmodapi.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftinit.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,3 +21,3 @@\n-#include FT_LCD_FILTER_H\n-#include FT_IMAGE_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftlcdfil.h>\n+#include <freetype\/ftimage.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftlcdfil.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -68,4 +68,3 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/ftstream.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmac.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,4 +21,4 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_METRICS_VARIATIONS_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/services\/svmm.h>\n+#include <freetype\/internal\/services\/svmetric.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmm.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -19,26 +19,25 @@\n-#include <ft2build.h>\n-#include FT_LIST_H\n-#include FT_OUTLINE_H\n-#include FT_FONT_FORMATS_H\n-\n-#include FT_INTERNAL_VALIDATE_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_RFORK_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H            \/* for SFNT_Load_Table_Func *\/\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H  \/* for PS_Driver            *\/\n-\n-#include FT_TRUETYPE_TABLES_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_TRUETYPE_IDS_H\n-\n-#include FT_SERVICE_PROPERTIES_H\n-#include FT_SERVICE_SFNT_H\n-#include FT_SERVICE_POSTSCRIPT_NAME_H\n-#include FT_SERVICE_GLYPH_DICT_H\n-#include FT_SERVICE_TT_CMAP_H\n-#include FT_SERVICE_KERNING_H\n-#include FT_SERVICE_TRUETYPE_ENGINE_H\n-\n-#include FT_DRIVER_H\n+#include <freetype\/ftlist.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftfntfmt.h>\n+\n+#include <freetype\/internal\/ftvalid.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftrfork.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>          \/* for SFNT_Load_Table_Func *\/\n+#include <freetype\/internal\/psaux.h>         \/* for PS_Driver            *\/\n+\n+#include <freetype\/tttables.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ttnameid.h>\n+\n+#include <freetype\/internal\/services\/svprop.h>\n+#include <freetype\/internal\/services\/svsfnt.h>\n+#include <freetype\/internal\/services\/svpostnm.h>\n+#include <freetype\/internal\/services\/svgldict.h>\n+#include <freetype\/internal\/services\/svttcmap.h>\n+#include <freetype\/internal\/services\/svkern.h>\n+#include <freetype\/internal\/services\/svtteng.h>\n+\n+#include <freetype\/ftdriver.h>\n@@ -53,1 +52,1 @@\n-#include FT_BITMAP_H\n+#include <freetype\/ftbitmap.h>\n@@ -1066,0 +1065,1 @@\n+    FT_TRACE5(( \"\\n\" ));\n@@ -1071,0 +1071,18 @@\n+    FT_TRACE5(( \"\\n\" ));\n+\n+    {\n+      FT_Glyph_Metrics*  metrics = &slot->metrics;\n+\n+\n+      FT_TRACE5(( \"  metrics:\\n\" ));\n+      FT_TRACE5(( \"    width:  %f\\n\", metrics->width  \/ 64.0 ));\n+      FT_TRACE5(( \"    height: %f\\n\", metrics->height \/ 64.0 ));\n+      FT_TRACE5(( \"\\n\" ));\n+      FT_TRACE5(( \"    horiBearingX: %f\\n\", metrics->horiBearingX \/ 64.0 ));\n+      FT_TRACE5(( \"    horiBearingY: %f\\n\", metrics->horiBearingY \/ 64.0 ));\n+      FT_TRACE5(( \"    horiAdvance:  %f\\n\", metrics->horiAdvance  \/ 64.0 ));\n+      FT_TRACE5(( \"\\n\" ));\n+      FT_TRACE5(( \"    vertBearingX: %f\\n\", metrics->vertBearingX \/ 64.0 ));\n+      FT_TRACE5(( \"    vertBearingY: %f\\n\", metrics->vertBearingY \/ 64.0 ));\n+      FT_TRACE5(( \"    vertAdvance:  %f\\n\", metrics->vertAdvance  \/ 64.0 ));\n+    }\n@@ -1845,2 +1863,2 @@\n-      FT_TRACE4(( \"                 POST fragment #%d: length=0x%08x\"\n-                  \" total pfb_len=0x%08x\\n\",\n+      FT_TRACE4(( \"                 POST fragment #%d: length=0x%08lx\"\n+                  \" total pfb_len=0x%08lx\\n\",\n@@ -1853,1 +1871,1 @@\n-                    \" 0x%08x\\n\",\n+                    \" 0x%08lx\\n\",\n@@ -1864,1 +1882,1 @@\n-                \" %d POST fragments: 0x%08x\\n\",\n+                \" %ld POST fragments: 0x%08lx\\n\",\n@@ -1870,1 +1888,1 @@\n-                  \" pfb_len confused: pfb_len=0x%08x\\n\",\n+                  \" pfb_len confused: pfb_len=0x%08lx\\n\",\n@@ -1913,1 +1931,1 @@\n-                  \" offsets=0x%08x, rlen=0x%08x, flags=0x%04x\\n\",\n+                  \" offsets=0x%08lx, rlen=0x%08lx, flags=0x%04x\\n\",\n@@ -1940,1 +1958,1 @@\n-                    \" %p + 0x%08x\\n\",\n+                    \" %p + 0x%08lx\\n\",\n@@ -1955,1 +1973,1 @@\n-                    \" %p + 0x%08x\\n\",\n+                    \" %p + 0x%08lx\\n\",\n@@ -1977,2 +1995,2 @@\n-      FT_TRACE3(( \"    Load POST fragment #%d (%d byte) to buffer\"\n-                  \" %p + 0x%08x\\n\",\n+      FT_TRACE3(( \"    Load POST fragment #%d (%ld byte) to buffer\"\n+                  \" %p + 0x%08lx\\n\",\n@@ -2263,1 +2281,1 @@\n-      FT_TRACE3(( \"Try rule %d: %s (offset=%d) ...\",\n+      FT_TRACE3(( \"Try rule %d: %s (offset=%ld) ...\",\n@@ -2861,0 +2879,2 @@\n+      if ( size )\n+        FT_FREE( size->internal );\n@@ -3216,1 +3236,1 @@\n-      FT_TRACE5(( \"  x scale: %d (%f)\\n\",\n+      FT_TRACE5(( \"  x scale: %ld (%f)\\n\",\n@@ -3218,1 +3238,1 @@\n-      FT_TRACE5(( \"  y scale: %d (%f)\\n\",\n+      FT_TRACE5(( \"  y scale: %ld (%f)\\n\",\n@@ -3291,1 +3311,1 @@\n-      FT_TRACE5(( \"  x scale: %d (%f)\\n\",\n+      FT_TRACE5(( \"  x scale: %ld (%f)\\n\",\n@@ -3293,1 +3313,1 @@\n-      FT_TRACE5(( \"  y scale: %d (%f)\\n\",\n+      FT_TRACE5(( \"  y scale: %ld (%f)\\n\",\n@@ -3453,1 +3473,1 @@\n-                            \" (%d, %d) scaled down to (%d, %d) pixels\\n\",\n+                            \" (%ld, %ld) scaled down to (%ld, %ld) pixels\\n\",\n@@ -3725,1 +3745,1 @@\n-        FT_TRACE1(( \" 0x%x is truncated\\n\", charcode ));\n+        FT_TRACE1(( \" 0x%lx is truncated\\n\", charcode ));\n@@ -3901,1 +3921,1 @@\n-          FT_TRACE1(( \" 0x%x is truncated\\n\", charcode ));\n+          FT_TRACE1(( \" 0x%lx is truncated\\n\", charcode ));\n@@ -3907,1 +3927,1 @@\n-          FT_TRACE1(( \" 0x%x is truncated\\n\", variantSelector ));\n+          FT_TRACE1(( \" 0x%lx is truncated\\n\", variantSelector ));\n@@ -3944,1 +3964,1 @@\n-          FT_TRACE1(( \" 0x%x is truncated\\n\", charcode ));\n+          FT_TRACE1(( \" 0x%lx is truncated\\n\", charcode ));\n@@ -3950,1 +3970,1 @@\n-          FT_TRACE1(( \" 0x%x is truncated\\n\", variantSelector ));\n+          FT_TRACE1(( \" 0x%lx is truncated\\n\", variantSelector ));\n@@ -4013,1 +4033,1 @@\n-          FT_TRACE1(( \" 0x%x is truncated\\n\", charcode ));\n+          FT_TRACE1(( \" 0x%lx is truncated\\n\", charcode ));\n@@ -4047,1 +4067,1 @@\n-          FT_TRACE1(( \" 0x%x is truncated\\n\", variantSelector ));\n+          FT_TRACE1(( \" 0x%lx is truncated\\n\", variantSelector ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftobjs.c","additions":70,"deletions":50,"binary":false,"changes":120,"status":"modified"},{"patch":"@@ -19,6 +19,5 @@\n-#include <ft2build.h>\n-#include FT_OUTLINE_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_TRIGONOMETRY_H\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/fttrigon.h>\n@@ -278,1 +277,1 @@\n-    FT_TRACE5(( \"FT_Outline_Decompose: Done\\n\", n ));\n+    FT_TRACE5(( \"FT_Outline_Decompose: Done\\n\" ));\n@@ -1063,0 +1062,5 @@\n+\n+    \/* Reject values large outlines. *\/\n+    if ( cbox.xMin < -0x1000000L || cbox.yMin < -0x1000000L ||\n+         cbox.xMax >  0x1000000L || cbox.yMax >  0x1000000L )\n+      return FT_ORIENTATION_NONE;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftoutln.c","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -19,7 +19,6 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_SERVICE_SFNT_H\n-#include FT_SERVICE_TRUETYPE_GLYF_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/services\/svsfnt.h>\n+#include <freetype\/internal\/services\/svttglyf.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftpatent.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -20,6 +20,5 @@\n-#include <ft2build.h>\n-#include FT_DRIVER_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_POSTSCRIPT_PROPS_H\n+#include <freetype\/ftdriver.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftpsprop.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftpsprop.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -27,4 +27,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_RFORK_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/ftrfork.h>\n@@ -243,1 +242,1 @@\n-      FT_TRACE3(( \"             : subcount=%d, suboffset=0x%04x\\n\",\n+      FT_TRACE3(( \"             : subcount=%d, suboffset=0x%04lx\\n\",\n@@ -289,1 +288,1 @@\n-                      \" resource_id=0x%04x, offset=0x%08x\\n\",\n+                      \" resource_id=0x%04x, offset=0x%08lx\\n\",\n@@ -305,1 +304,1 @@\n-                        \" resource_id=0x%04x, offset=0x%08x\\n\",\n+                        \" resource_id=0x%04x, offset=0x%08lx\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftrfork.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -22,2 +22,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -25,3 +24,3 @@\n-#include FT_SFNT_NAMES_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/ftsnames.h>\n+#include <freetype\/internal\/tttypes.h>\n+#include <freetype\/internal\/ftstream.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsnames.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftstream.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,7 +19,6 @@\n-#include <ft2build.h>\n-#include FT_STROKER_H\n-#include FT_TRIGONOMETRY_H\n-#include FT_OUTLINE_H\n-#include FT_INTERNAL_MEMORY_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/ftstroke.h>\n+#include <freetype\/fttrigon.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/internal\/ftmemory.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftstroke.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -19,6 +19,5 @@\n-#include <ft2build.h>\n-#include FT_SYNTHESIS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_OUTLINE_H\n-#include FT_BITMAP_H\n+#include <freetype\/ftsynth.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftbitmap.h>\n@@ -133,1 +132,1 @@\n-        FT_TRACE1(( \"too strong emboldening parameter ystr=%d\\n\", ystr ));\n+        FT_TRACE1(( \"too strong emboldening parameter ystr=%ld\\n\", ystr ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsynth.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -30,5 +30,5 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_SYSTEM_H\n-#include FT_ERRORS_H\n-#include FT_TYPES_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/ftsystem.h>\n+#include <freetype\/fterrors.h>\n+#include <freetype\/fttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsystem.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -32,4 +32,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_TRIGONOMETRY_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/fttrigon.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fttrigon.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_SERVICE_POSTSCRIPT_INFO_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/services\/svpsinfo.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fttype1.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_MEMORY_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_LIST_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftmemory.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ftlist.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftutil.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-#include FT_INTERNAL_CFF_OBJECTS_TYPES_H\n+#include <freetype\/internal\/cffotypes.h>\n@@ -46,1 +46,1 @@\n-  FT_DECLARE_CMAP_CLASS(cff_cmap_encoding_class_rec)\n+  FT_DECLARE_CMAP_CLASS( cff_cmap_encoding_class_rec )\n@@ -59,1 +59,1 @@\n-  FT_DECLARE_CMAP_CLASS(cff_cmap_unicode_class_rec)\n+  FT_DECLARE_CMAP_CLASS( cff_cmap_unicode_class_rec )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -19,12 +19,11 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_POSTSCRIPT_PROPS_H\n-#include FT_SERVICE_CID_H\n-#include FT_SERVICE_POSTSCRIPT_INFO_H\n-#include FT_SERVICE_POSTSCRIPT_NAME_H\n-#include FT_SERVICE_TT_CMAP_H\n-#include FT_SERVICE_CFF_TABLE_LOAD_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/ftpsprop.h>\n+#include <freetype\/internal\/services\/svcid.h>\n+#include <freetype\/internal\/services\/svpsinfo.h>\n+#include <freetype\/internal\/services\/svpostnm.h>\n+#include <freetype\/internal\/services\/svttcmap.h>\n+#include <freetype\/internal\/services\/svcfftl.h>\n@@ -40,2 +39,2 @@\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_METRICS_VARIATIONS_H\n+#include <freetype\/internal\/services\/svmm.h>\n+#include <freetype\/internal\/services\/svmetric.h>\n@@ -46,4 +45,4 @@\n-#include FT_SERVICE_FONT_FORMAT_H\n-#include FT_SERVICE_GLYPH_DICT_H\n-#include FT_SERVICE_PROPERTIES_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/services\/svfntfmt.h>\n+#include <freetype\/internal\/services\/svgldict.h>\n+#include <freetype\/internal\/services\/svprop.h>\n+#include <freetype\/ftdriver.h>\n@@ -741,1 +740,1 @@\n-          FT_TRACE1(( \"cff_get_ros: too large supplement %d is truncated\\n\",\n+          FT_TRACE1(( \"cff_get_ros: too large supplement %ld is truncated\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffdrivr.c","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DRIVER_H\n+#include <freetype\/internal\/ftdrv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffdrivr.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cfferrs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,8 +19,7 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_OUTLINE_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftdriver.h>\n@@ -210,2 +209,2 @@\n-    FT_Matrix    font_matrix;\n-    FT_Vector    font_offset;\n+    FT_Matrix  font_matrix;\n+    FT_Vector  font_offset;\n@@ -367,1 +366,0 @@\n-\n@@ -402,1 +400,0 @@\n-\n@@ -668,0 +665,1 @@\n+        {\n@@ -670,0 +668,3 @@\n+          metrics->vertBearingY = FT_MulFix( metrics->vertBearingY,\n+                                             glyph->y_scale );\n+        }\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.c","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_CFF_OBJECTS_TYPES_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/cffotypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,7 +19,6 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_TYPE1_TABLES_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/t1tables.h>\n+#include <freetype\/internal\/psaux.h>\n@@ -28,2 +27,2 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/services\/svmm.h>\n@@ -414,1 +413,1 @@\n-    FT_Byte**  t         = NULL;\n+    FT_Byte**  tbl       = NULL;\n@@ -431,1 +430,1 @@\n-         !FT_NEW_ARRAY( t, idx->count + 1 )            &&\n+         !FT_NEW_ARRAY( tbl, idx->count + 1 )          &&\n@@ -435,1 +434,1 @@\n-      FT_ULong  extra = 0;\n+      FT_ULong  extra     = 0;\n@@ -446,1 +445,1 @@\n-                    \" invalid first offset value %d set to zero\\n\",\n+                    \" invalid first offset value %ld set to zero\\n\",\n@@ -452,1 +451,1 @@\n-        t[0] = org_bytes + cur_offset;\n+        tbl[0] = org_bytes + cur_offset;\n@@ -454,1 +453,1 @@\n-        t[0] = new_bytes + cur_offset;\n+        tbl[0] = new_bytes + cur_offset;\n@@ -468,1 +467,1 @@\n-          t[n] = org_bytes + next_offset;\n+          tbl[n] = org_bytes + next_offset;\n@@ -471,1 +470,1 @@\n-          t[n] = new_bytes + next_offset + extra;\n+          tbl[n] = new_bytes + next_offset + extra;\n@@ -475,3 +474,5 @@\n-            FT_MEM_COPY( t[n - 1], org_bytes + cur_offset, t[n] - t[n - 1] );\n-            t[n][0] = '\\0';\n-            t[n]   += 1;\n+            FT_MEM_COPY( tbl[n - 1],\n+                         org_bytes + cur_offset,\n+                         tbl[n] - tbl[n - 1] );\n+            tbl[n][0] = '\\0';\n+            tbl[n]   += 1;\n@@ -484,1 +485,1 @@\n-      *table = t;\n+      *table = tbl;\n@@ -493,0 +494,5 @@\n+    if ( error && new_bytes )\n+      FT_FREE( new_bytes );\n+    if ( error && tbl )\n+      FT_FREE( tbl );\n+\n@@ -556,2 +562,2 @@\n-                   \" offset to next entry (%d)\"\n-                   \" exceeds the end of stream (%d)\\n\",\n+                   \" offset to next entry (%ld)\"\n+                   \" exceeds the end of stream (%ld)\\n\",\n@@ -981,1 +987,1 @@\n-                         \" nleft=%d -> %d\\n\", nleft, 0xFFFFL - glyph_sid ));\n+                         \" nleft=%d -> %ld\\n\", nleft, 0xFFFFL - glyph_sid ));\n@@ -1948,1 +1954,1 @@\n-                  \" setting unlikely BlueShift value %d to default (7)\\n\",\n+                  \" setting unlikely BlueShift value %ld to default (7)\\n\",\n@@ -1956,1 +1962,1 @@\n-                  \" setting unlikely BlueFuzz value %d to default (1)\\n\",\n+                  \" setting unlikely BlueFuzz value %ld to default (1)\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffload.c","additions":32,"deletions":26,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_CFF_TYPES_H\n+#include <freetype\/internal\/cfftypes.h>\n@@ -26,1 +25,1 @@\n-#include FT_INTERNAL_CFF_OBJECTS_TYPES_H  \/* for CFF_Face *\/\n+#include <freetype\/internal\/cffotypes.h>  \/* for CFF_Face *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffload.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -21,8 +20,8 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_ERRORS_H\n-#include FT_TRUETYPE_IDS_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/fterrors.h>\n+#include <freetype\/ttnameid.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/ftdriver.h>\n@@ -31,3 +30,3 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_METRICS_VARIATIONS_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/services\/svmm.h>\n+#include <freetype\/internal\/services\/svmetric.h>\n@@ -36,1 +35,1 @@\n-#include FT_INTERNAL_CFF_OBJECTS_TYPES_H\n+#include <freetype\/internal\/cffotypes.h>\n@@ -43,2 +42,2 @@\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_SERVICE_CFF_TABLE_LOAD_H\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/services\/svcfftl.h>\n@@ -170,0 +169,4 @@\n+    FT_Memory     memory   = cffsize->face->memory;\n+    CFF_Internal  internal = NULL;\n+    CFF_Face      face     = (CFF_Face)cffsize->face;\n+    CFF_Font      font     = (CFF_Font)face->extra.data;\n@@ -171,5 +174,1 @@\n-    if ( funcs )\n-    {\n-      CFF_Face      face     = (CFF_Face)cffsize->face;\n-      CFF_Font      font     = (CFF_Font)face->extra.data;\n-      CFF_Internal  internal = NULL;\n+    PS_PrivateRec priv;\n@@ -177,2 +176,1 @@\n-      PS_PrivateRec  priv;\n-      FT_Memory      memory = cffsize->face->memory;\n+    FT_UInt       i;\n@@ -180,1 +178,5 @@\n-      FT_UInt  i;\n+    if ( !funcs )\n+      goto Exit;\n+\n+    if ( FT_NEW( internal ) )\n+      goto Exit;\n@@ -182,0 +184,9 @@\n+    cff_make_private_dict( &font->top_font, &priv );\n+    error = funcs->create( cffsize->face->memory, &priv,\n+                             &internal->topfont );\n+    if ( error )\n+      goto Exit;\n+\n+    for ( i = font->num_subfonts; i > 0; i-- )\n+    {\n+      CFF_SubFont  sub = font->subfonts[i - 1];\n@@ -183,2 +194,0 @@\n-      if ( FT_NEW( internal ) )\n-        goto Exit;\n@@ -186,1 +195,1 @@\n-      cff_make_private_dict( &font->top_font, &priv );\n+      cff_make_private_dict( sub, &priv );\n@@ -188,1 +197,1 @@\n-                             &internal->topfont );\n+                               &internal->subfonts[i - 1] );\n@@ -191,0 +200,1 @@\n+    }\n@@ -192,3 +202,1 @@\n-      for ( i = font->num_subfonts; i > 0; i-- )\n-      {\n-        CFF_SubFont  sub = font->subfonts[i - 1];\n+    cffsize->internal->module_data = internal;\n@@ -196,0 +204,1 @@\n+    size->strike_index = 0xFFFFFFFFUL;\n@@ -197,5 +206,8 @@\n-        cff_make_private_dict( sub, &priv );\n-        error = funcs->create( cffsize->face->memory, &priv,\n-                               &internal->subfonts[i - 1] );\n-        if ( error )\n-          goto Exit;\n+  Exit:\n+    if ( error )\n+    {\n+      if ( internal )\n+      {\n+        for ( i = font->num_subfonts; i > 0; i-- )\n+          FT_FREE( internal->subfonts[i - 1] );\n+        FT_FREE( internal->topfont );\n@@ -204,1 +216,1 @@\n-      cffsize->internal->module_data = internal;\n+      FT_FREE( internal );\n@@ -207,3 +219,0 @@\n-    size->strike_index = 0xFFFFFFFFUL;\n-\n-  Exit:\n@@ -352,1 +361,2 @@\n-    slot->internal->glyph_hints = NULL;\n+    if ( slot->internal )\n+      slot->internal->glyph_hints = NULL;\n@@ -943,1 +953,2 @@\n-                remove_style( cffface->family_name, style_name );\n+                if ( style_name )\n+                  remove_style( cffface->family_name, style_name );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffobjs.c","additions":52,"deletions":41,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffobjs.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -21,5 +20,5 @@\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_LIST_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/ftlist.h>\n@@ -717,1 +716,1 @@\n-                    \" strange scaling values (minimum %d, maximum %d),\\n\"\n+                    \" strange scaling values (minimum %ld, maximum %ld),\\n\"\n@@ -814,1 +813,1 @@\n-      FT_TRACE4(( \" [%d %d %d %d]\\n\",\n+      FT_TRACE4(( \" [%ld %ld %ld %ld]\\n\",\n@@ -937,1 +936,1 @@\n-        FT_TRACE1(( \"cff_parse_cid_ros: negative supplement %d is found\\n\",\n+        FT_TRACE1(( \"cff_parse_cid_ros: negative supplement %ld is found\\n\",\n@@ -941,1 +940,1 @@\n-      FT_TRACE4(( \" %d %d %d\\n\",\n+      FT_TRACE4(( \" %d %d %ld\\n\",\n@@ -1267,5 +1266,5 @@\n-        FT_Fixed*     stack;\n-        FT_ListNode   node;\n-        CFF_T2_String t2;\n-        size_t        t2_size;\n-        FT_Byte*      q;\n+        FT_Fixed*      stack;\n+        FT_ListNode    node;\n+        CFF_T2_String  t2;\n+        FT_Fixed       t2_size;\n+        FT_Byte*       q;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffparse.c","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_CFF_TYPES_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/cfftypes.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffparse.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -36,1 +36,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/ciderrs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -22,8 +21,8 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_OUTLINE_H\n-#include FT_INTERNAL_CALC_H\n-\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_CFF_TYPES_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/internal\/ftcalc.h>\n+\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/cfftypes.h>\n+#include <freetype\/ftdriver.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidgload.c","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidgload.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -20,1 +20,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,3 +22,3 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/t1types.h>\n+#include <freetype\/internal\/psaux.h>\n@@ -257,1 +257,1 @@\n-    FT_TRACE4(( \" %d\\n\", num_dicts ));\n+    FT_TRACE4(( \" %ld\\n\", num_dicts ));\n@@ -278,1 +278,1 @@\n-                  \" (from %d to %d)\\n\",\n+                  \" (from %ld to %ld)\\n\",\n@@ -332,1 +332,1 @@\n-      FT_TRACE4(( \"%d\\n\", dict->expansion_factor ));\n+      FT_TRACE4(( \"%ld\\n\", dict->expansion_factor ));\n@@ -807,1 +807,1 @@\n-                    \"               (from %d to %d bytes)\\n\",\n+                    \"               (from %ld to %ld bytes)\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidload.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/internal\/ftstream.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidload.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n@@ -26,4 +25,4 @@\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/pshints.h>\n+#include <freetype\/ftdriver.h>\n@@ -53,1 +52,2 @@\n-    slot->internal->glyph_hints = NULL;\n+    if ( slot->internal )\n+      slot->internal->glyph_hints = NULL;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidobjs.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n@@ -26,1 +26,1 @@\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidobjs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftstream.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidparse.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,4 +23,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_TYPE1_TYPES_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/t1types.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidparse.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -22,2 +21,2 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_POSTSCRIPT_PROPS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftpsprop.h>\n@@ -27,6 +26,6 @@\n-#include FT_SERVICE_POSTSCRIPT_NAME_H\n-#include FT_SERVICE_FONT_FORMAT_H\n-#include FT_SERVICE_POSTSCRIPT_INFO_H\n-#include FT_SERVICE_CID_H\n-#include FT_SERVICE_PROPERTIES_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/services\/svpostnm.h>\n+#include <freetype\/internal\/services\/svfntfmt.h>\n+#include <freetype\/internal\/services\/svpsinfo.h>\n+#include <freetype\/internal\/services\/svcid.h>\n+#include <freetype\/internal\/services\/svprop.h>\n+#include <freetype\/ftdriver.h>\n@@ -34,1 +33,1 @@\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidriver.c","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DRIVER_H\n+#include <freetype\/internal\/ftdrv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidriver.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -18,4 +18,3 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/afmparse.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/afmparse.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_SERVICE_H\n-#include FT_SERVICE_CFF_TABLE_LOAD_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftserv.h>\n+#include <freetype\/internal\/services\/svcfftl.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psarrst.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxerr.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -174,3 +173,3 @@\n-  FT_CALLBACK_TABLE_DEF\n-  const FT_Module_Class  psaux_module_class =\n-  {\n+  FT_DEFINE_MODULE(\n+    psaux_module_class,\n+\n@@ -188,1 +187,1 @@\n-  };\n+  )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxmod.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_MODULE_H\n+#include <freetype\/ftmodapi.h>\n@@ -26,1 +25,1 @@\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/psaux.h>\n@@ -38,0 +37,11 @@\n+#ifndef T1_CONFIG_OPTION_NO_AFM\n+  FT_CALLBACK_TABLE\n+  const AFM_Parser_FuncsRec  afm_parser_funcs;\n+#endif\n+\n+  FT_CALLBACK_TABLE\n+  const T1_CMap_ClassesRec  t1_cmap_classes;\n+\n+  FT_CALLBACK_TABLE\n+  const CFF_Decoder_FuncsRec  cff_decoder_funcs;\n+\n@@ -42,0 +52,3 @@\n+  FT_DECLARE_MODULE( psaux_module_class )\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxmod.h","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psblues.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -52,1 +52,2 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n+#include <freetype\/internal\/compiler-macros.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/pserror.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,2 +39,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_CALC_H\n+#include <freetype\/internal\/ftcalc.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psfont.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-#include FT_SERVICE_CFF_TABLE_LOAD_H\n+#include <freetype\/internal\/services\/svcfftl.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psfont.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -48,2 +48,2 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/services\/svmm.h>\n@@ -52,1 +52,1 @@\n-#include FT_SERVICE_CFF_TABLE_LOAD_H\n+#include <freetype\/internal\/services\/svcfftl.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psft.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include <freetype\/internal\/compiler-macros.h>\n@@ -45,1 +46,0 @@\n-\n@@ -50,1 +50,1 @@\n-#include FT_SYSTEM_H\n+#include <freetype\/ftsystem.h>\n@@ -53,1 +53,1 @@\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H    \/* for PS_Decoder *\/\n+#include <freetype\/internal\/psaux.h>    \/* for PS_Decoder *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psft.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -313,1 +313,1 @@\n-      FT_TRACE6(( \"  %3d    %7.2f  %7.2f  %5d  %s%s%s%s\\n\",\n+      FT_TRACE6(( \"  %3ld    %7.2f  %7.2f  %5d  %s%s%s%s\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/pshints.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_SERVICE_CFF_TABLE_LOAD_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/services\/svcfftl.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psintrp.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/ftdriver.h>\n@@ -1236,1 +1235,1 @@\n-          FT_TRACE4(( \" [%d %d %d %d]\",\n+          FT_TRACE4(( \" [%ld %ld %ld %ld]\",\n@@ -1290,1 +1289,1 @@\n-            FT_TRACE4(( \" [%d %d %d %d]\",\n+            FT_TRACE4(( \" [%ld %ld %ld %ld]\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.c","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_CFF_OBJECTS_TYPES_H\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/cffotypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psread.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -62,6 +62,6 @@\n-    if ( !FT_NEW( stack ) )\n-    {\n-      \/* initialize the structure; FT_NEW zeroes it *\/\n-      stack->memory = memory;\n-      stack->error  = e;\n-    }\n+    if ( FT_NEW( stack ) )\n+      return NULL;\n+\n+    \/* initialize the structure; FT_NEW zeroes it *\/\n+    stack->memory = memory;\n+    stack->error  = e;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psstack.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#include <freetype\/internal\/compiler-macros.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psstack.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n+#include <freetype\/freetype.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/pstypes.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -21,1 +21,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1cmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,3 +22,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1cmap.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,6 +19,5 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n-#include FT_INTERNAL_HASH_H\n-#include FT_OUTLINE_H\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/pshints.h>\n+#include <freetype\/internal\/fthash.h>\n+#include <freetype\/ftoutln.h>\n@@ -1241,2 +1240,2 @@\n-          \/* the `metrics_only' indicates that we only want to compute *\/\n-          \/* the glyph's metrics (lsb + advance width), not load the   *\/\n+          \/* `metrics_only' indicates that we only want to compute the *\/\n+          \/* glyph's metrics (lsb + advance width) without loading the *\/\n@@ -1276,2 +1275,2 @@\n-          \/* the `metrics_only' indicates that we only want to compute *\/\n-          \/* the glyph's metrics (lsb + advance width), not load the   *\/\n+          \/* `metrics_only' indicates that we only want to compute the *\/\n+          \/* glyph's metrics (lsb + advance width) without loading the *\/\n@@ -1731,1 +1730,1 @@\n-        FT_TRACE5(( \" (%d)\", decoder->top - decoder->stack ));\n+        FT_TRACE5(( \" (%ld)\", decoder->top - decoder->stack ));\n@@ -1753,2 +1752,0 @@\n-      case 10:\n-      case 11:\n@@ -1763,0 +1760,7 @@\n+      case 10:\n+        op = op_callsubr;\n+        break;\n+      case 11:\n+        op = op_return;\n+        break;\n+\n@@ -1902,1 +1906,1 @@\n-        if ( op != op_div )\n+        switch ( op )\n@@ -1904,0 +1908,6 @@\n+        case op_callsubr:\n+        case op_div:\n+        case op_return:\n+          break;\n+\n+        default:\n@@ -1907,1 +1917,1 @@\n-                        \" (seen %d, expected %d)\\n\",\n+                        \" (seen %ld, expected %d)\\n\",\n@@ -1909,0 +1919,1 @@\n+          break;\n@@ -1929,2 +1940,2 @@\n-          \/* (lsb + advance width), not load the rest of *\/\n-          \/* it; so exit immediately                     *\/\n+          \/* (lsb + advance width) without loading the   *\/\n+          \/* rest of it; so exit immediately             *\/\n@@ -1948,2 +1959,2 @@\n-          \/* (lsb + advance width), not load the rest of *\/\n-          \/* it; so exit immediately                     *\/\n+          \/* (lsb + advance width), without loading the  *\/\n+          \/* rest of it; so exit immediately             *\/\n@@ -1965,0 +1976,85 @@\n+        case op_callsubr:\n+          {\n+            FT_Int  idx;\n+\n+\n+            FT_TRACE4(( \" callsubr\" ));\n+\n+            idx = Fix2Int( top[0] );\n+\n+            if ( decoder->subrs_hash )\n+            {\n+              size_t*  val = ft_hash_num_lookup( idx,\n+                                                 decoder->subrs_hash );\n+\n+\n+              if ( val )\n+                idx = *val;\n+              else\n+                idx = -1;\n+            }\n+\n+            if ( idx < 0 || idx >= decoder->num_subrs )\n+            {\n+              FT_ERROR(( \"t1_decoder_parse_metrics:\"\n+                         \" invalid subrs index\\n\" ));\n+              goto Syntax_Error;\n+            }\n+\n+            if ( zone - decoder->zones >= T1_MAX_SUBRS_CALLS )\n+            {\n+              FT_ERROR(( \"t1_decoder_parse_metrics:\"\n+                         \" too many nested subrs\\n\" ));\n+              goto Syntax_Error;\n+            }\n+\n+            zone->cursor = ip;  \/* save current instruction pointer *\/\n+\n+            zone++;\n+\n+            \/* The Type 1 driver stores subroutines without the seed bytes. *\/\n+            \/* The CID driver stores subroutines with seed bytes.  This     *\/\n+            \/* case is taken care of when decoder->subrs_len == 0.          *\/\n+            zone->base = decoder->subrs[idx];\n+\n+            if ( decoder->subrs_len )\n+              zone->limit = zone->base + decoder->subrs_len[idx];\n+            else\n+            {\n+              \/* We are using subroutines from a CID font.  We must adjust *\/\n+              \/* for the seed bytes.                                       *\/\n+              zone->base  += ( decoder->lenIV >= 0 ? decoder->lenIV : 0 );\n+              zone->limit  = decoder->subrs[idx + 1];\n+            }\n+\n+            zone->cursor = zone->base;\n+\n+            if ( !zone->base )\n+            {\n+              FT_ERROR(( \"t1_decoder_parse_metrics:\"\n+                         \" invoking empty subrs\\n\" ));\n+              goto Syntax_Error;\n+            }\n+\n+            decoder->zone = zone;\n+            ip            = zone->base;\n+            limit         = zone->limit;\n+            break;\n+          }\n+\n+        case op_return:\n+          FT_TRACE4(( \" return\" ));\n+\n+          if ( zone <= decoder->zones )\n+          {\n+            FT_ERROR(( \"t1_decoder_parse_metrics:\"\n+                       \" unexpected return\\n\" ));\n+            goto Syntax_Error;\n+          }\n+\n+          zone--;\n+          ip            = zone->cursor;\n+          limit         = zone->limit;\n+          decoder->zone = zone;\n+          break;\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1decode.c","additions":115,"deletions":19,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1decode.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshalgo.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -20,4 +20,3 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_CALC_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftcalc.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshglob.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,2 +23,2 @@\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/pshints.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshglob.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n@@ -23,0 +22,1 @@\n+#include \"pshmod.h\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshmod.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_MODULE_H\n+#include <freetype\/ftmodapi.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshmod.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -36,1 +36,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshnterr.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_FREETYPE_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n+#include <freetype\/freetype.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n@@ -878,1 +877,1 @@\n-                   \" (%d,%d) to hints table\\n\", stems[0], stems[1] ));\n+                   \" (%ld,%ld) to hints table\\n\", stems[0], stems[1] ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshrec.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -35,2 +35,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_POSTSCRIPT_HINTS_H\n+#include <freetype\/internal\/pshints.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshrec.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psmodule.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_MODULE_H\n+#include <freetype\/ftmodapi.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psmodule.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psnamerr.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-#include <ft2build.h>\n@@ -67,2 +66,2 @@\n-#include FT_INTERNAL_CALC_H   \/* for FT_MulDiv and FT_MulDiv_No_Round *\/\n-#include FT_OUTLINE_H         \/* for FT_Outline_Get_CBox              *\/\n+#include <freetype\/internal\/ftcalc.h> \/* for FT_MulDiv and FT_MulDiv_No_Round *\/\n+#include <freetype\/ftoutln.h>         \/* for FT_Outline_Get_CBox              *\/\n@@ -229,2 +228,2 @@\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H       \/* for FT_TRACE, FT_ERROR, and FT_THROW *\/\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h> \/* for FT_TRACE, FT_ERROR, and FT_THROW *\/\n@@ -463,0 +462,5 @@\n+  \/* Smart dropout rounding to find which pixel is closer to span ends. *\/\n+  \/* To mimick Windows, symmetric cases break down indepenently of the  *\/\n+  \/* precision.                                                         *\/\n+#define SMART( p, q )  FLOOR( ( (p) + (q) + ras.precision * 63 \/ 64 ) >> 1 )\n+\n@@ -677,1 +681,1 @@\n-      FT_TRACE6(( \"  new ascending profile = %p\\n\", ras.cProfile ));\n+      FT_TRACE6(( \"  new ascending profile = %p\\n\", (void *)ras.cProfile ));\n@@ -683,1 +687,1 @@\n-      FT_TRACE6(( \"  new descending profile = %p\\n\", ras.cProfile ));\n+      FT_TRACE6(( \"  new descending profile = %p\\n\", (void *)ras.cProfile ));\n@@ -740,1 +744,1 @@\n-                  ras.cProfile, ras.cProfile->start, h ));\n+                  (void *)ras.cProfile, ras.cProfile->start, h ));\n@@ -2245,1 +2249,1 @@\n-    FT_TRACE7(( \"  y=%d x=[%.12f;%.12f], drop-out=%d\",\n+    FT_TRACE7(( \"  y=%d x=[% .12f;% .12f]\",\n@@ -2248,2 +2252,1 @@\n-                x2 \/ (double)ras.precision,\n-                dropOutControl ));\n+                x2 \/ (double)ras.precision ));\n@@ -2277,1 +2280,1 @@\n-      FT_TRACE7(( \" -> x=[%d;%d]\", e1, e2 ));\n+      FT_TRACE7(( \" -> x=[%ld;%ld]\", e1, e2 ));\n@@ -2319,1 +2322,1 @@\n-    FT_TRACE7(( \"  y=%d x=[%.12f;%.12f]\",\n+    FT_TRACE7(( \"  y=%d x=[% .12f;% .12f]\",\n@@ -2356,2 +2359,0 @@\n-      FT_TRACE7(( \", drop-out=%d\", dropOutControl ));\n-\n@@ -2367,1 +2368,1 @@\n-          pxl = FLOOR( ( x1 + x2 - 1 ) \/ 2 + ras.precision_half );\n+          pxl = SMART( x1, x2 );\n@@ -2416,1 +2417,1 @@\n-            pxl = FLOOR( ( x1 + x2 - 1 ) \/ 2 + ras.precision_half );\n+            pxl = SMART( x1, x2 );\n@@ -2451,1 +2452,1 @@\n-      FT_TRACE7(( \" -> x=%d (drop-out)\", e1 ));\n+      FT_TRACE7(( \" -> x=%ld\", e1 ));\n@@ -2460,1 +2461,1 @@\n-    FT_TRACE7(( \"\\n\" ));\n+    FT_TRACE7(( \" dropout=%d\\n\", left->flags & 7 ));\n@@ -2498,0 +2499,2 @@\n+    Long  e1, e2;\n+\n@@ -2502,3 +2505,4 @@\n-    if ( x2 - x1 < ras.precision )\n-    {\n-      Long  e1, e2;\n+    FT_TRACE7(( \"  x=%d y=[% .12f;% .12f]\",\n+                y,\n+                x1 \/ (double)ras.precision,\n+                x2 \/ (double)ras.precision ));\n@@ -2506,0 +2510,5 @@\n+    \/* We should not need this procedure but the vertical sweep   *\/\n+    \/* mishandles horizontal lines through pixel centers.  So we  *\/\n+    \/* have to check perfectly aligned span edges here.           *\/\n+    \/*                                                            *\/\n+    \/* XXX: Can we handle horizontal lines better and drop this?  *\/\n@@ -2507,4 +2516,1 @@\n-      FT_TRACE7(( \"  x=%d y=[%.12f;%.12f]\",\n-                  y,\n-                  x1 \/ (double)ras.precision,\n-                  x2 \/ (double)ras.precision ));\n+    e1 = CEILING( x1 );\n@@ -2512,2 +2518,3 @@\n-      e1 = CEILING( x1 );\n-      e2 = FLOOR  ( x2 );\n+    if ( x1 == e1 )\n+    {\n+      e1 = TRUNC( e1 );\n@@ -2515,1 +2522,1 @@\n-      if ( e1 == e2 )\n+      if ( e1 >= 0 && (ULong)e1 < ras.target.rows )\n@@ -2517,6 +2524,2 @@\n-        e1 = TRUNC( e1 );\n-\n-        if ( e1 >= 0 && (ULong)e1 < ras.target.rows )\n-        {\n-          Byte   f1;\n-          PByte  bits;\n+        Byte   f1;\n+        PByte  bits;\n@@ -2525,1 +2528,2 @@\n-          FT_TRACE7(( \" -> y=%d (drop-out)\", e1 ));\n+        bits = ras.bOrigin + ( y >> 3 ) - e1 * ras.target.pitch;\n+        f1   = (Byte)( 0x80 >> ( y & 7 ) );\n@@ -2527,2 +2531,2 @@\n-          bits = ras.bOrigin + ( y >> 3 ) - e1 * ras.target.pitch;\n-          f1   = (Byte)( 0x80 >> ( y & 7 ) );\n+        FT_TRACE7(( bits[0] & f1 ? \" redundant\"\n+                                 : \" -> y=%ld edge\", e1 ));\n@@ -2530,2 +2534,1 @@\n-          bits[0] |= f1;\n-        }\n+        bits[0] |= f1;\n@@ -2533,0 +2536,13 @@\n+    }\n+\n+    e2 = FLOOR  ( x2 );\n+\n+    if ( x2 == e2 )\n+    {\n+      e2 = TRUNC( e2 );\n+\n+      if ( e2 >= 0 && (ULong)e2 < ras.target.rows )\n+      {\n+        Byte   f1;\n+        PByte  bits;\n+\n@@ -2534,1 +2550,8 @@\n-      FT_TRACE7(( \"\\n\" ));\n+        bits = ras.bOrigin + ( y >> 3 ) - e2 * ras.target.pitch;\n+        f1   = (Byte)( 0x80 >> ( y & 7 ) );\n+\n+        FT_TRACE7(( bits[0] & f1 ? \" redundant\"\n+                                 : \" -> y=%ld edge\", e2 ));\n+\n+        bits[0] |= f1;\n+      }\n@@ -2536,0 +2559,2 @@\n+\n+    FT_TRACE7(( \"\\n\" ));\n@@ -2551,1 +2576,1 @@\n-    FT_TRACE7(( \"  x=%d y=[%.12f;%.12f]\",\n+    FT_TRACE7(( \"  x=%d y=[% .12f;% .12f]\",\n@@ -2577,2 +2602,0 @@\n-      FT_TRACE7(( \", dropout=%d\", dropOutControl ));\n-\n@@ -2588,1 +2611,1 @@\n-          pxl = FLOOR( ( x1 + x2 - 1 ) \/ 2 + ras.precision_half );\n+          pxl = SMART( x1, x2 );\n@@ -2612,1 +2635,1 @@\n-            pxl = FLOOR( ( x1 + x2 - 1 ) \/ 2 + ras.precision_half );\n+            pxl = SMART( x1, x2 );\n@@ -2648,1 +2671,1 @@\n-      FT_TRACE7(( \" -> y=%d (drop-out)\", e1 ));\n+      FT_TRACE7(( \" -> y=%ld\", e1 ));\n@@ -2657,1 +2680,1 @@\n-    FT_TRACE7(( \"\\n\" ));\n+    FT_TRACE7(( \" dropout=%d\\n\", left->flags & 7 ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.c","additions":71,"deletions":48,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include FT_IMAGE_H\n+#include <freetype\/ftimage.h>\n@@ -27,0 +27,1 @@\n+#include <freetype\/internal\/compiler-macros.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_OUTLINE_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ftoutln.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftrend1.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_RENDER_H\n+#include <freetype\/ftrender.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftrend1.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/rasterrs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -20,4 +20,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n@@ -64,1 +63,6 @@\n-#if ( ( defined( __GNUC__ )                                &&             \\\n+    \/*                                                              *\/\n+    \/* Intel compilers do not currently support __builtin_shuffle;  *\/\n+\n+    \/* The Intel check must be first. *\/\n+#if !defined( __INTEL_COMPILER )                                       && \\\n+    ( ( defined( __GNUC__ )                                &&             \\\n@@ -331,0 +335,7 @@\n+      \/* reject too large bitmaps similarly to the rasterizer *\/\n+      if ( imgHeight > 0x7FFF || imgWidth > 0x7FFF )\n+      {\n+        error = FT_THROW( Array_Too_Large );\n+        goto DestroyExit;\n+      }\n+\n@@ -339,7 +350,0 @@\n-\n-      \/* reject too large bitmaps similarly to the rasterizer *\/\n-      if ( map->rows > 0x7FFF || map->width > 0x7FFF )\n-      {\n-        error = FT_THROW( Array_Too_Large );\n-        goto DestroyExit;\n-      }\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.c","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_TRUETYPE_IDS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ttnameid.h>\n@@ -46,1 +45,1 @@\n-#include FT_SERVICE_BDF_H\n+#include <freetype\/internal\/services\/svbdf.h>\n@@ -53,4 +52,4 @@\n-#include FT_SERVICE_GLYPH_DICT_H\n-#include FT_SERVICE_POSTSCRIPT_NAME_H\n-#include FT_SERVICE_SFNT_H\n-#include FT_SERVICE_TT_CMAP_H\n+#include <freetype\/internal\/services\/svgldict.h>\n+#include <freetype\/internal\/services\/svpostnm.h>\n+#include <freetype\/internal\/services\/svsfnt.h>\n+#include <freetype\/internal\/services\/svttcmap.h>\n@@ -59,2 +58,2 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/services\/svmm.h>\n@@ -198,1 +197,1 @@\n-      FT_TRACE0(( \"Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n\",\n+      FT_TRACE0(( \"Ignore glyph names for invalid GID 0x%08x - 0x%08lx\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfdriver.c","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_MODULE_H\n+#include <freetype\/ftmodapi.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfdriver.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -36,1 +36,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sferrors.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -26,6 +25,6 @@\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_TRUETYPE_IDS_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_SFNT_NAMES_H\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/ttnameid.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/ftsnames.h>\n@@ -34,2 +33,2 @@\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_METRICS_VARIATIONS_H\n+#include <freetype\/internal\/services\/svmm.h>\n+#include <freetype\/internal\/services\/svmetric.h>\n@@ -550,2 +549,2 @@\n-    FT_TRACE2(( \"sfnt_init_face: %08p (index %d)\\n\",\n-                face,\n+    FT_TRACE2(( \"sfnt_init_face: %p (index %d)\\n\",\n+                (void *)face,\n@@ -824,1 +823,1 @@\n-    FT_TRACE2(( \"sfnt_load_face: %08p\\n\\n\", face ));\n+    FT_TRACE2(( \"sfnt_load_face: %p\\n\\n\", (void *)face ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.c","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -21,4 +20,4 @@\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_GZIP_H\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/ftgzip.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -18,1 +18,0 @@\n-#include <ft2build.h>\n@@ -21,3 +20,3 @@\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n@@ -47,1 +46,2 @@\n-#define ROUND4( var )          ( ( var + 3 ) & ~3 )\n+  \/* `var' should be FT_ULong *\/\n+#define ROUND4( var )          ( ( var + 3 ) & ~3UL )\n@@ -67,6 +67,6 @@\n-#define WRITE_SHORT( p, v )        \\\n-          do                       \\\n-          {                        \\\n-            *(p)++ = ( (v) >> 8 ); \\\n-            *(p)++ = ( (v) >> 0 ); \\\n-                                   \\\n+#define WRITE_SHORT( p, v )                 \\\n+          do                                \\\n+          {                                 \\\n+            *(p)++ = (FT_Byte)( (v) >> 8 ); \\\n+            *(p)++ = (FT_Byte)( (v) >> 0 ); \\\n+                                            \\\n@@ -128,4 +128,4 @@\n-    static const FT_Int  oneMoreByteCode1 = 255;\n-    static const FT_Int  oneMoreByteCode2 = 254;\n-    static const FT_Int  wordCode         = 253;\n-    static const FT_Int  lowestUCode      = 253;\n+    const FT_Byte    oneMoreByteCode1 = 255;\n+    const FT_Byte    oneMoreByteCode2 = 254;\n+    const FT_Byte    wordCode         = 253;\n+    const FT_UShort  lowestUCode      = 253;\n@@ -284,1 +284,1 @@\n-  static FT_Long\n+  static FT_ULong\n@@ -289,1 +289,1 @@\n-    FT_ULong  aligned_size = size & ~3;\n+    FT_ULong  aligned_size = size & ~3UL;\n@@ -321,1 +321,3 @@\n-    FT_ULong             uncompressed_size = dst_size;\n+    \/* this cast is only of importance on 32bit systems; *\/\n+    \/* we don't validate it                              *\/\n+    FT_Offset            uncompressed_size = (FT_Offset)dst_size;\n@@ -540,6 +542,6 @@\n-    FT_Int    last_flag    = -1;\n-    FT_Int    repeat_count =  0;\n-    FT_Int    last_x       =  0;\n-    FT_Int    last_y       =  0;\n-    FT_UInt   x_bytes      =  0;\n-    FT_UInt   y_bytes      =  0;\n+    FT_Byte   last_flag    = 0xFFU;\n+    FT_Byte   repeat_count = 0;\n+    FT_Int    last_x       = 0;\n+    FT_Int    last_y       = 0;\n+    FT_UInt   x_bytes      = 0;\n+    FT_UInt   y_bytes      = 0;\n@@ -557,3 +559,3 @@\n-      FT_Int  flag = point.on_curve ? GLYF_ON_CURVE : 0;\n-      FT_Int  dx   = point.x - last_x;\n-      FT_Int  dy   = point.y - last_y;\n+      FT_Byte  flag = point.on_curve ? GLYF_ON_CURVE : 0;\n+      FT_Int   dx   = point.x - last_x;\n+      FT_Int   dy   = point.y - last_y;\n@@ -636,1 +638,1 @@\n-        dst[x_offset++] = FT_ABS( dx );\n+        dst[x_offset++] = (FT_Byte)FT_ABS( dx );\n@@ -649,1 +651,1 @@\n-        dst[y_offset++] = FT_ABS( dy );\n+        dst[y_offset++] = (FT_Byte)FT_ABS( dy );\n@@ -921,1 +923,1 @@\n-    bitmap_length                   = ( ( num_glyphs + 31 ) >> 5 ) << 2;\n+    bitmap_length                   = ( ( num_glyphs + 31U ) >> 5 ) << 2;\n@@ -1199,1 +1201,1 @@\n-        info->x_mins[i] = x_min;\n+        info->x_mins[i] = (FT_Short)x_min;\n@@ -1223,1 +1225,1 @@\n-    FT_TRACE4(( \"    checksum = %09x\\n\", *loca_checksum ));\n+    FT_TRACE4(( \"    checksum = %09lx\\n\", *loca_checksum ));\n@@ -1290,0 +1292,6 @@\n+    if ( !info->loca_table )\n+    {\n+      FT_ERROR(( \"`loca' table is missing.\\n\" ));\n+      return FT_THROW( Invalid_Table );\n+    }\n+\n@@ -1341,1 +1349,1 @@\n-      if ( FT_READ_USHORT( info->x_mins[i] ) )\n+      if ( FT_READ_SHORT( info->x_mins[i] ) )\n@@ -1568,1 +1576,1 @@\n-      FT_TRACE3(( \"Seeking to %d with table size %d.\\n\",\n+      FT_TRACE3(( \"Seeking to %ld with table size %ld.\\n\",\n@@ -1609,1 +1617,1 @@\n-        FT_TRACE4(( \"Checksum = %09x.\\n\", checksum ));\n+        FT_TRACE4(( \"Checksum = %09lx.\\n\", checksum ));\n@@ -1634,1 +1642,1 @@\n-          FT_TRACE4(( \"Checksum = %09x.\\n\", checksum ));\n+          FT_TRACE4(( \"Checksum = %09lx.\\n\", checksum ));\n@@ -1710,1 +1718,1 @@\n-    FT_TRACE2(( \"Final checksum = %09x.\\n\", font_checksum ));\n+    FT_TRACE2(( \"Final checksum = %09lx.\\n\", font_checksum ));\n@@ -1807,1 +1815,1 @@\n-    FT_TRACE4(( \"signature     -> 0x%X\\n\", woff2.signature ));\n+    FT_TRACE4(( \"signature     -> 0x%lX\\n\", woff2.signature ));\n@@ -1812,4 +1820,4 @@\n-    FT_TRACE4(( \"metaOffset    -> %hu\\n\", woff2.metaOffset ));\n-    FT_TRACE4(( \"metaLength    -> %hu\\n\", woff2.metaLength ));\n-    FT_TRACE4(( \"privOffset    -> %hu\\n\", woff2.privOffset ));\n-    FT_TRACE4(( \"privLength    -> %hu\\n\", woff2.privLength ));\n+    FT_TRACE4(( \"metaOffset    -> %lu\\n\", woff2.metaOffset ));\n+    FT_TRACE4(( \"metaLength    -> %lu\\n\", woff2.metaLength ));\n+    FT_TRACE4(( \"privOffset    -> %lu\\n\", woff2.privOffset ));\n+    FT_TRACE4(( \"privLength    -> %lu\\n\", woff2.privLength ));\n@@ -1847,3 +1855,5 @@\n-    FT_TRACE2(( \"\\n\"\n-                \"  tag    flags    transform   origLen   transformLen\\n\"\n-                \"  --------------------------------------------------\\n\" ));\n+    FT_TRACE2((\n+      \"\\n\"\n+      \"  tag    flags    transform  origLen   transformLen   offset\\n\"\n+      \"  -----------------------------------------------------------\\n\" ));\n+   \/* \"  XXXX  XXXXXXXX  XXXXXXXX   XXXXXXXX    XXXXXXXX    XXXXXXXX\" *\/\n@@ -1919,1 +1929,1 @@\n-      FT_TRACE2(( \"  %c%c%c%c  %08d  %08d    %08ld  %08ld\\n\",\n+      FT_TRACE2(( \"  %c%c%c%c  %08d  %08d   %08ld    %08ld    %08ld\\n\",\n@@ -1928,1 +1938,0 @@\n-                  table->src_length,\n@@ -1974,1 +1983,1 @@\n-      FT_TRACE4(( \"Number of fonts in TTC: %ld\\n\", woff2.num_fonts ));\n+      FT_TRACE4(( \"Number of fonts in TTC: %d\\n\", woff2.num_fonts ));\n@@ -1992,1 +2001,1 @@\n-        FT_TRACE5(( \"Number of tables in font %d: %ld\\n\",\n+        FT_TRACE5(( \"Number of tables in font %d: %d\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.c","additions":58,"deletions":49,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_SFNT_H\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/ftobjs.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,2 +19,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,1 +21,1 @@\n-#include \"sferrors.h\"           \/* must come before FT_INTERNAL_VALIDATE_H *\/\n+#include \"sferrors.h\"                      \/* must come before `ftvalid.h' *\/\n@@ -24,3 +23,3 @@\n-#include FT_INTERNAL_VALIDATE_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n+#include <freetype\/internal\/ftvalid.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n@@ -3755,0 +3754,1 @@\n+#undef  TTCMAPCITEM\n@@ -3791,1 +3791,1 @@\n-    limit     = table + face->cmap_size;\n+    FT_TRACE4(( \"tt_face_build_cmaps: %d cmaps\\n\", num_cmaps ));\n@@ -3793,0 +3793,1 @@\n+    limit = table + face->cmap_size;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.c","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -23,4 +23,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n-#include FT_INTERNAL_VALIDATE_H\n-#include FT_SERVICE_TT_CMAP_H\n+#include <freetype\/internal\/tttypes.h>\n+#include <freetype\/internal\/ftvalid.h>\n+#include <freetype\/internal\/services\/svttcmap.h>\n@@ -94,0 +93,5 @@\n+#undef  TTCMAPCITEM\n+#define TTCMAPCITEM( a )  FT_CALLBACK_TABLE  const TT_CMap_ClassRec  a;\n+#include \"ttcmapc.h\"\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.h","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,5 +30,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_COLOR_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ftcolor.h>\n@@ -43,3 +42,3 @@\n-#define BASE_GLYPH_SIZE            6\n-#define LAYER_SIZE                 4\n-#define COLR_HEADER_SIZE          14\n+#define BASE_GLYPH_SIZE            6U\n+#define LAYER_SIZE                 4U\n+#define COLR_HEADER_SIZE          14U\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcolr.c","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcolr.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,5 +30,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_COLOR_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ftcolor.h>\n@@ -43,2 +42,2 @@\n-#define CPAL_V0_HEADER_BASE_SIZE  12\n-#define COLOR_SIZE                 4\n+#define CPAL_V0_HEADER_BASE_SIZE  12U\n+#define COLOR_SIZE                 4U\n@@ -143,1 +142,1 @@\n-      p += face->palette_data.num_palettes * 2;\n+      p += face->palette_data.num_palettes * 2U;\n@@ -153,1 +152,1 @@\n-        if ( face->palette_data.num_palettes * 2 >\n+        if ( face->palette_data.num_palettes * 2U >\n@@ -174,1 +173,1 @@\n-        if ( face->palette_data.num_palettes * 2 >\n+        if ( face->palette_data.num_palettes * 2U >\n@@ -195,1 +194,1 @@\n-        if ( face->palette_data.num_palette_entries * 2 >\n+        if ( face->palette_data.num_palette_entries * 2U >\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcpal.c","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcpal.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -20,4 +20,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttkern.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,3 +24,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttkern.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -20,4 +20,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n@@ -68,2 +67,2 @@\n-    FT_TRACE4(( \"tt_face_lookup_table: %08p, `%c%c%c%c' -- \",\n-                face,\n+    FT_TRACE4(( \"tt_face_lookup_table: %p, `%c%c%c%c' -- \",\n+                (void *)face,\n@@ -366,1 +365,1 @@\n-    FT_TRACE2(( \"tt_face_load_font_dir: %08p\\n\", face ));\n+    FT_TRACE2(( \"tt_face_load_font_dir: %p\\n\", (void *)face ));\n@@ -1318,1 +1317,1 @@\n-    FT_TRACE3(( \"FormatType:   0x%x\\n\", post->FormatType ));\n+    FT_TRACE3(( \"FormatType:   0x%lx\\n\", post->FormatType ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttload.c","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -24,3 +24,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttload.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n@@ -25,1 +24,1 @@\n-#include FT_SERVICE_METRICS_VARIATIONS_H\n+#include <freetype\/internal\/services\/svmetric.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttmtx.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttmtx.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,4 +28,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n@@ -57,1 +56,1 @@\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n+#include <freetype\/internal\/services\/svpscmap.h>\n@@ -243,1 +242,1 @@\n-          FT_TRACE6(( \"load_format_20: %d byte left in post table\\n\",\n+          FT_TRACE6(( \"load_format_20: %ld byte left in post table\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttpost.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttpost.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,5 +22,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_BITMAP_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ftbitmap.h>\n@@ -351,1 +350,1 @@\n-                        \" values for strike %d (%dppem, %dppem)\\n\",\n+                        \" values for strike %ld (%dppem, %dppem)\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttsbit.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttsbit.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -19,3 +19,2 @@\n-#include <ft2build.h>\n-#include FT_TRUETYPE_TAGS_H\n-\n+#include <freetype\/tttags.h>\n+#include \"woff2tags.h\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/woff2tags.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2020 by\n+ * Copyright (C) 2019-2020 by\n@@ -23,2 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/compiler-macros.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/woff2tags.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -281,1 +281,0 @@\n-#include <ft2build.h>\n@@ -283,4 +282,4 @@\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_OUTLINE_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/ftoutln.h>\n@@ -1652,1 +1651,1 @@\n-      FT_TRACE7(( \"band [%d..%d]: %d cell%s\\n\",\n+      FT_TRACE7(( \"band [%d..%d]: %ld cell%s\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftgrays.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include FT_IMAGE_H\n+#include <freetype\/ftimage.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftgrays.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmerrs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,4 +19,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_OUTLINE_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/ftoutln.h>\n@@ -29,30 +28,0 @@\n-  \/* initialize renderer -- init its raster *\/\n-  static FT_Error\n-  ft_smooth_init( FT_Renderer  render )\n-  {\n-\n-#ifndef FT_CONFIG_OPTION_SUBPIXEL_RENDERING\n-\n-    FT_Vector*  sub = render->root.library->lcd_geometry;\n-\n-\n-    \/* set up default subpixel geometry for striped RGB panels. *\/\n-    sub[0].x = -21;\n-    sub[0].y = 0;\n-    sub[1].x = 0;\n-    sub[1].y = 0;\n-    sub[2].x = 21;\n-    sub[2].y = 0;\n-\n-#elif 0   \/* or else, once ClearType patents expire *\/\n-\n-    FT_Library_SetLcdFilter( render->root.library, FT_LCD_FILTER_DEFAULT );\n-\n-#endif\n-\n-    render->clazz->raster_class->raster_reset( render->raster, NULL, 0 );\n-\n-    return 0;\n-  }\n-\n-\n@@ -110,0 +79,6 @@\n+  typedef struct TOrigin_\n+  {\n+    unsigned char*  origin;  \/* pixmap origin at the bottom-left *\/\n+    int             pitch;   \/* pitch to go down one row *\/\n+\n+  } TOrigin;\n@@ -111,1 +86,3 @@\n-  \/* convert a slot's glyph image into a bitmap *\/\n+#ifndef FT_CONFIG_OPTION_SUBPIXEL_RENDERING\n+\n+  \/* initialize renderer -- init its raster *\/\n@@ -113,5 +90,342 @@\n-  ft_smooth_render_generic( FT_Renderer       render,\n-                            FT_GlyphSlot      slot,\n-                            FT_Render_Mode    mode,\n-                            const FT_Vector*  origin,\n-                            FT_Render_Mode    required_mode )\n+  ft_smooth_init( FT_Renderer  render )\n+  {\n+    FT_Vector*  sub = render->root.library->lcd_geometry;\n+\n+\n+    \/* set up default subpixel geometry for striped RGB panels. *\/\n+    sub[0].x = -21;\n+    sub[0].y = 0;\n+    sub[1].x = 0;\n+    sub[1].y = 0;\n+    sub[2].x = 21;\n+    sub[2].y = 0;\n+\n+    render->clazz->raster_class->raster_reset( render->raster, NULL, 0 );\n+\n+    return 0;\n+  }\n+\n+\n+  \/* This function writes every third byte in direct rendering mode *\/\n+  static void\n+  ft_smooth_lcd_spans( int             y,\n+                       int             count,\n+                       const FT_Span*  spans,\n+                       TOrigin*        target )\n+  {\n+    unsigned char*  dst_line = target->origin - y * target->pitch;\n+    unsigned char*  dst;\n+    unsigned short  w;\n+\n+\n+    for ( ; count--; spans++ )\n+      for ( dst = dst_line + spans->x * 3, w = spans->len; w--; dst += 3 )\n+        *dst = spans->coverage;\n+  }\n+\n+\n+  static FT_Error\n+  ft_smooth_raster_lcd( FT_Renderer  render,\n+                        FT_Outline*  outline,\n+                        FT_Bitmap*   bitmap )\n+  {\n+    FT_Error      error = FT_Err_Ok;\n+    FT_Vector*    sub   = render->root.library->lcd_geometry;\n+    FT_Pos        x, y;\n+\n+    FT_Raster_Params   params;\n+    TOrigin            target;\n+\n+\n+    \/* Render 3 separate coverage bitmaps, shifting the outline.  *\/\n+    \/* Set up direct rendering to record them on each third byte. *\/\n+    params.source     = outline;\n+    params.flags      = FT_RASTER_FLAG_AA | FT_RASTER_FLAG_DIRECT;\n+    params.gray_spans = (FT_SpanFunc)ft_smooth_lcd_spans;\n+    params.user       = &target;\n+\n+    params.clip_box.xMin = 0;\n+    params.clip_box.yMin = 0;\n+    params.clip_box.xMax = bitmap->width;\n+    params.clip_box.yMax = bitmap->rows;\n+\n+    if ( bitmap->pitch < 0 )\n+      target.origin = bitmap->buffer;\n+    else\n+      target.origin = bitmap->buffer\n+                      + ( bitmap->rows - 1 ) * (unsigned int)bitmap->pitch;\n+\n+    target.pitch = bitmap->pitch;\n+\n+    FT_Outline_Translate( outline,\n+                          -sub[0].x,\n+                          -sub[0].y );\n+    error = render->raster_render( render->raster, &params );\n+    x = sub[0].x;\n+    y = sub[0].y;\n+    if ( error )\n+      goto Exit;\n+\n+    target.origin++;\n+    FT_Outline_Translate( outline,\n+                          sub[0].x - sub[1].x,\n+                          sub[0].y - sub[1].y );\n+    error = render->raster_render( render->raster, &params );\n+    x = sub[1].x;\n+    y = sub[1].y;\n+    if ( error )\n+      goto Exit;\n+\n+    target.origin++;\n+    FT_Outline_Translate( outline,\n+                          sub[1].x - sub[2].x,\n+                          sub[1].y - sub[2].y );\n+    error = render->raster_render( render->raster, &params );\n+    x = sub[2].x;\n+    y = sub[2].y;\n+\n+  Exit:\n+    FT_Outline_Translate( outline, x, y );\n+\n+    return error;\n+  }\n+\n+\n+  static FT_Error\n+  ft_smooth_raster_lcdv( FT_Renderer  render,\n+                         FT_Outline*  outline,\n+                         FT_Bitmap*   bitmap )\n+  {\n+    FT_Error     error = FT_Err_Ok;\n+    int          pitch = bitmap->pitch;\n+    FT_Vector*   sub   = render->root.library->lcd_geometry;\n+    FT_Pos       x, y;\n+\n+    FT_Raster_Params  params;\n+\n+\n+    params.target = bitmap;\n+    params.source = outline;\n+    params.flags  = FT_RASTER_FLAG_AA;\n+\n+    \/* Render 3 separate coverage bitmaps, shifting the outline. *\/\n+    \/* Notice that the subpixel geometry vectors are rotated.    *\/\n+    \/* Triple the pitch to render on each third row.            *\/\n+    bitmap->pitch *= 3;\n+    bitmap->rows  \/= 3;\n+\n+    FT_Outline_Translate( outline,\n+                          -sub[0].y,\n+                          sub[0].x );\n+    error = render->raster_render( render->raster, &params );\n+    x = sub[0].y;\n+    y = -sub[0].x;\n+    if ( error )\n+      goto Exit;\n+\n+    bitmap->buffer += pitch;\n+    FT_Outline_Translate( outline,\n+                          sub[0].y - sub[1].y,\n+                          sub[1].x - sub[0].x );\n+    error = render->raster_render( render->raster, &params );\n+    x = sub[1].y;\n+    y = -sub[1].x;\n+    bitmap->buffer -= pitch;\n+    if ( error )\n+      goto Exit;\n+\n+    bitmap->buffer += 2 * pitch;\n+    FT_Outline_Translate( outline,\n+                          sub[1].y - sub[2].y,\n+                          sub[2].x - sub[1].x );\n+    error = render->raster_render( render->raster, &params );\n+    x = sub[2].y;\n+    y = -sub[2].x;\n+    bitmap->buffer -= 2 * pitch;\n+\n+  Exit:\n+    FT_Outline_Translate( outline, x, y );\n+\n+    bitmap->pitch \/= 3;\n+    bitmap->rows  *= 3;\n+\n+    return error;\n+  }\n+\n+#else   \/* FT_CONFIG_OPTION_SUBPIXEL_RENDERING *\/\n+\n+  \/* initialize renderer -- init its raster *\/\n+  static FT_Error\n+  ft_smooth_init( FT_Renderer  render )\n+  {\n+    \/* set up default LCD filtering *\/\n+    FT_Library_SetLcdFilter( render->root.library, FT_LCD_FILTER_DEFAULT );\n+\n+    render->clazz->raster_class->raster_reset( render->raster, NULL, 0 );\n+\n+    return 0;\n+  }\n+\n+\n+  static FT_Error\n+  ft_smooth_raster_lcd( FT_Renderer  render,\n+                        FT_Outline*  outline,\n+                        FT_Bitmap*   bitmap )\n+  {\n+    FT_Error    error      = FT_Err_Ok;\n+    FT_Vector*  points     = outline->points;\n+    FT_Vector*  points_end = FT_OFFSET( points, outline->n_points );\n+    FT_Vector*  vec;\n+\n+    FT_Raster_Params  params;\n+\n+\n+    params.target = bitmap;\n+    params.source = outline;\n+    params.flags  = FT_RASTER_FLAG_AA;\n+\n+    \/* implode outline *\/\n+    for ( vec = points; vec < points_end; vec++ )\n+      vec->x *= 3;\n+\n+    \/* render outline into the bitmap *\/\n+    error = render->raster_render( render->raster, &params );\n+\n+    \/* deflate outline *\/\n+    for ( vec = points; vec < points_end; vec++ )\n+      vec->x \/= 3;\n+\n+    return error;\n+  }\n+\n+\n+  static FT_Error\n+  ft_smooth_raster_lcdv( FT_Renderer  render,\n+                         FT_Outline*  outline,\n+                         FT_Bitmap*   bitmap )\n+  {\n+    FT_Error    error      = FT_Err_Ok;\n+    FT_Vector*  points     = outline->points;\n+    FT_Vector*  points_end = FT_OFFSET( points, outline->n_points );\n+    FT_Vector*  vec;\n+\n+    FT_Raster_Params  params;\n+\n+\n+    params.target = bitmap;\n+    params.source = outline;\n+    params.flags  = FT_RASTER_FLAG_AA;\n+\n+    \/* implode outline *\/\n+    for ( vec = points; vec < points_end; vec++ )\n+      vec->y *= 3;\n+\n+    \/* render outline into the bitmap *\/\n+    error = render->raster_render( render->raster, &params );\n+\n+    \/* deflate outline *\/\n+    for ( vec = points; vec < points_end; vec++ )\n+      vec->y \/= 3;\n+\n+    return error;\n+  }\n+\n+#endif  \/* FT_CONFIG_OPTION_SUBPIXEL_RENDERING *\/\n+\n+\/* Oversampling scale to be used in rendering overlaps *\/\n+#define SCALE  ( 1 << 2 )\n+\n+  \/* This function averages inflated spans in direct rendering mode *\/\n+  static void\n+  ft_smooth_overlap_spans( int             y,\n+                           int             count,\n+                           const FT_Span*  spans,\n+                           TOrigin*        target )\n+  {\n+    unsigned char*  dst = target->origin - ( y \/ SCALE ) * target->pitch;\n+    unsigned short  x;\n+    unsigned int    cover, sum;\n+\n+\n+    \/* When accumulating the oversampled spans we need to assure that  *\/\n+    \/* fully covered pixels are equal to 255 and do not overflow.      *\/\n+    \/* It is important that the SCALE is a power of 2, each subpixel   *\/\n+    \/* cover can also reach a power of 2 after rounding, and the total *\/\n+    \/* is clamped to 255 when it adds up to 256.                       *\/\n+    for ( ; count--; spans++ )\n+    {\n+      cover = ( spans->coverage + SCALE * SCALE \/ 2 ) \/ ( SCALE * SCALE );\n+      for ( x = 0; x < spans->len; x++ )\n+      {\n+        sum                           = dst[( spans->x + x ) \/ SCALE] + cover;\n+        dst[( spans->x + x ) \/ SCALE] = (unsigned char)( sum - ( sum >> 8 ) );\n+      }\n+    }\n+  }\n+\n+\n+  static FT_Error\n+  ft_smooth_raster_overlap( FT_Renderer  render,\n+                            FT_Outline*  outline,\n+                            FT_Bitmap*   bitmap )\n+  {\n+    FT_Error    error      = FT_Err_Ok;\n+    FT_Vector*  points     = outline->points;\n+    FT_Vector*  points_end = FT_OFFSET( points, outline->n_points );\n+    FT_Vector*  vec;\n+\n+    FT_Raster_Params   params;\n+    TOrigin            target;\n+\n+\n+    \/* Reject outlines that are too wide for 16-bit FT_Span.       *\/\n+    \/* Other limits are applied upstream with the same error code. *\/\n+    if ( bitmap->width * SCALE > 0x7FFF )\n+      return FT_THROW( Raster_Overflow );\n+\n+    \/* Set up direct rendering to average oversampled spans. *\/\n+    params.source     = outline;\n+    params.flags      = FT_RASTER_FLAG_AA | FT_RASTER_FLAG_DIRECT;\n+    params.gray_spans = (FT_SpanFunc)ft_smooth_overlap_spans;\n+    params.user       = &target;\n+\n+    params.clip_box.xMin = 0;\n+    params.clip_box.yMin = 0;\n+    params.clip_box.xMax = bitmap->width * SCALE;\n+    params.clip_box.yMax = bitmap->rows  * SCALE;\n+\n+    if ( bitmap->pitch < 0 )\n+      target.origin = bitmap->buffer;\n+    else\n+      target.origin = bitmap->buffer\n+                      + ( bitmap->rows - 1 ) * (unsigned int)bitmap->pitch;\n+\n+    target.pitch = bitmap->pitch;\n+\n+    \/* inflate outline *\/\n+    for ( vec = points; vec < points_end; vec++ )\n+    {\n+      vec->x *= SCALE;\n+      vec->y *= SCALE;\n+    }\n+\n+    \/* render outline into the bitmap *\/\n+    error = render->raster_render( render->raster, &params );\n+\n+    \/* deflate outline *\/\n+    for ( vec = points; vec < points_end; vec++ )\n+    {\n+      vec->x \/= SCALE;\n+      vec->y \/= SCALE;\n+    }\n+\n+    return error;\n+  }\n+\n+#undef SCALE\n+\n+  static FT_Error\n+  ft_smooth_render( FT_Renderer       render,\n+                    FT_GlyphSlot      slot,\n+                    FT_Render_Mode    mode,\n+                    const FT_Vector*  origin )\n@@ -125,4 +439,0 @@\n-    FT_Int       hmul    = ( mode == FT_RENDER_MODE_LCD );\n-    FT_Int       vmul    = ( mode == FT_RENDER_MODE_LCD_V );\n-\n-    FT_Raster_Params  params;\n@@ -139,1 +449,4 @@\n-    if ( mode != required_mode )\n+    if ( mode != FT_RENDER_MODE_NORMAL &&\n+         mode != FT_RENDER_MODE_LIGHT  &&\n+         mode != FT_RENDER_MODE_LCD    &&\n+         mode != FT_RENDER_MODE_LCD_V  )\n@@ -184,8 +497,2 @@\n-    \/* set up parameters *\/\n-    params.target = bitmap;\n-    params.source = outline;\n-    params.flags  = FT_RASTER_FLAG_AA;\n-\n-#ifdef FT_CONFIG_OPTION_SUBPIXEL_RENDERING\n-\n-    \/* implode outline if needed *\/\n+    if ( mode == FT_RENDER_MODE_NORMAL ||\n+         mode == FT_RENDER_MODE_LIGHT  )\n@@ -193,22 +500,5 @@\n-      FT_Vector*  points     = outline->points;\n-      FT_Vector*  points_end = FT_OFFSET( points, outline->n_points );\n-      FT_Vector*  vec;\n-\n-\n-      if ( hmul )\n-        for ( vec = points; vec < points_end; vec++ )\n-          vec->x *= 3;\n-\n-      if ( vmul )\n-        for ( vec = points; vec < points_end; vec++ )\n-          vec->y *= 3;\n-    }\n-\n-    \/* render outline into the bitmap *\/\n-    error = render->raster_render( render->raster, &params );\n-\n-    \/* deflate outline if needed *\/\n-    {\n-      FT_Vector*  points     = outline->points;\n-      FT_Vector*  points_end = FT_OFFSET( points, outline->n_points );\n-      FT_Vector*  vec;\n+      if ( outline->flags & FT_OUTLINE_OVERLAP )\n+        error = ft_smooth_raster_overlap( render, outline, bitmap );\n+      else\n+      {\n+        FT_Raster_Params  params;\n@@ -217,3 +507,3 @@\n-      if ( hmul )\n-        for ( vec = points; vec < points_end; vec++ )\n-          vec->x \/= 3;\n+        params.target = bitmap;\n+        params.source = outline;\n+        params.flags  = FT_RASTER_FLAG_AA;\n@@ -221,3 +511,2 @@\n-      if ( vmul )\n-        for ( vec = points; vec < points_end; vec++ )\n-          vec->y \/= 3;\n+        error = render->raster_render( render->raster, &params );\n+      }\n@@ -225,6 +514,1 @@\n-\n-    if ( error )\n-      goto Exit;\n-\n-    \/* finally apply filtering *\/\n-    if ( hmul || vmul )\n+    else\n@@ -232,2 +516,4 @@\n-      FT_Byte*                 lcd_weights;\n-      FT_Bitmap_LcdFilterFunc  lcd_filter_func;\n+      if ( mode == FT_RENDER_MODE_LCD )\n+        error = ft_smooth_raster_lcd ( render, outline, bitmap );\n+      else if ( mode == FT_RENDER_MODE_LCD_V )\n+        error = ft_smooth_raster_lcdv( render, outline, bitmap );\n@@ -235,0 +521,1 @@\n+#ifdef FT_CONFIG_OPTION_SUBPIXEL_RENDERING\n@@ -236,2 +523,1 @@\n-      \/* Per-face LCD filtering takes priority if set up. *\/\n-      if ( slot->face && slot->face->internal->lcd_filter_func )\n+      \/* finally apply filtering *\/\n@@ -239,8 +525,2 @@\n-        lcd_weights     = slot->face->internal->lcd_weights;\n-        lcd_filter_func = slot->face->internal->lcd_filter_func;\n-      }\n-      else\n-      {\n-        lcd_weights     = slot->library->lcd_weights;\n-        lcd_filter_func = slot->library->lcd_filter_func;\n-      }\n+        FT_Byte*                 lcd_weights;\n+        FT_Bitmap_LcdFilterFunc  lcd_filter_func;\n@@ -248,5 +528,0 @@\n-      if ( lcd_filter_func )\n-        lcd_filter_func( bitmap, lcd_weights );\n-    }\n-\n-#else \/* !FT_CONFIG_OPTION_SUBPIXEL_RENDERING *\/\n@@ -254,54 +529,2 @@\n-    if ( hmul )  \/* lcd *\/\n-    {\n-      FT_Byte*  line;\n-      FT_Byte*  temp = NULL;\n-      FT_UInt   i, j;\n-\n-      unsigned int  height = bitmap->rows;\n-      unsigned int  width  = bitmap->width;\n-      int           pitch  = bitmap->pitch;\n-\n-      FT_Vector*  sub = slot->library->lcd_geometry;\n-\n-\n-      \/* Render 3 separate monochrome bitmaps, shifting the outline.  *\/\n-      width \/= 3;\n-\n-      FT_Outline_Translate( outline,\n-                            -sub[0].x,\n-                            -sub[0].y );\n-      error = render->raster_render( render->raster, &params );\n-      if ( error )\n-        goto Exit;\n-\n-      bitmap->buffer += width;\n-      FT_Outline_Translate( outline,\n-                            sub[0].x - sub[1].x,\n-                            sub[0].y - sub[1].y );\n-      error = render->raster_render( render->raster, &params );\n-      bitmap->buffer -= width;\n-      if ( error )\n-        goto Exit;\n-\n-      bitmap->buffer += 2 * width;\n-      FT_Outline_Translate( outline,\n-                            sub[1].x - sub[2].x,\n-                            sub[1].y - sub[2].y );\n-      error = render->raster_render( render->raster, &params );\n-      bitmap->buffer -= 2 * width;\n-      if ( error )\n-        goto Exit;\n-\n-      x_shift -= sub[2].x;\n-      y_shift -= sub[2].y;\n-\n-      \/* XXX: Rearrange the bytes according to FT_PIXEL_MODE_LCD.    *\/\n-      \/* XXX: It is more efficient to render every third byte above. *\/\n-\n-      if ( FT_ALLOC( temp, (FT_ULong)pitch ) )\n-        goto Exit;\n-\n-      for ( i = 0; i < height; i++ )\n-      {\n-        line = bitmap->buffer + i * (FT_ULong)pitch;\n-        for ( j = 0; j < width; j++ )\n+        \/* Per-face LCD filtering takes priority if set up. *\/\n+        if ( slot->face && slot->face->internal->lcd_filter_func )\n@@ -309,3 +532,2 @@\n-          temp[3 * j    ] = line[j];\n-          temp[3 * j + 1] = line[j + width];\n-          temp[3 * j + 2] = line[j + width + width];\n+          lcd_weights     = slot->face->internal->lcd_weights;\n+          lcd_filter_func = slot->face->internal->lcd_filter_func;\n@@ -313,1 +535,8 @@\n-        FT_MEM_COPY( line, temp, pitch );\n+        else\n+        {\n+          lcd_weights     = slot->library->lcd_weights;\n+          lcd_filter_func = slot->library->lcd_filter_func;\n+        }\n+\n+        if ( lcd_filter_func )\n+          lcd_filter_func( bitmap, lcd_weights );\n@@ -316,48 +545,1 @@\n-      FT_FREE( temp );\n-    }\n-    else if ( vmul )  \/* lcd_v *\/\n-    {\n-      int  pitch  = bitmap->pitch;\n-\n-      FT_Vector*  sub = slot->library->lcd_geometry;\n-\n-\n-      \/* Render 3 separate monochrome bitmaps, shifting the outline. *\/\n-      \/* Notice that the subpixel geometry vectors are rotated.      *\/\n-      \/* Triple the pitch to render on each third row.               *\/\n-      bitmap->pitch *= 3;\n-      bitmap->rows  \/= 3;\n-\n-      FT_Outline_Translate( outline,\n-                            -sub[0].y,\n-                            sub[0].x );\n-      error = render->raster_render( render->raster, &params );\n-      if ( error )\n-        goto Exit;\n-\n-      bitmap->buffer += pitch;\n-      FT_Outline_Translate( outline,\n-                            sub[0].y - sub[1].y,\n-                            sub[1].x - sub[0].x );\n-      error = render->raster_render( render->raster, &params );\n-      bitmap->buffer -= pitch;\n-      if ( error )\n-        goto Exit;\n-\n-      bitmap->buffer += 2 * pitch;\n-      FT_Outline_Translate( outline,\n-                            sub[1].y - sub[2].y,\n-                            sub[2].x - sub[1].x );\n-      error = render->raster_render( render->raster, &params );\n-      bitmap->buffer -= 2 * pitch;\n-      if ( error )\n-        goto Exit;\n-\n-      x_shift -= sub[2].y;\n-      y_shift += sub[2].x;\n-\n-      bitmap->pitch \/= 3;\n-      bitmap->rows  *= 3;\n-    }\n-    else  \/* grayscale *\/\n-      error = render->raster_render( render->raster, &params );\n+#endif \/* FT_CONFIG_OPTION_SUBPIXEL_RENDERING *\/\n@@ -365,1 +547,1 @@\n-#endif \/* !FT_CONFIG_OPTION_SUBPIXEL_RENDERING *\/\n+    }\n@@ -386,39 +568,0 @@\n-  \/* convert a slot's glyph image into a bitmap *\/\n-  static FT_Error\n-  ft_smooth_render( FT_Renderer       render,\n-                    FT_GlyphSlot      slot,\n-                    FT_Render_Mode    mode,\n-                    const FT_Vector*  origin )\n-  {\n-    if ( mode == FT_RENDER_MODE_LIGHT )\n-      mode = FT_RENDER_MODE_NORMAL;\n-\n-    return ft_smooth_render_generic( render, slot, mode, origin,\n-                                     FT_RENDER_MODE_NORMAL );\n-  }\n-\n-\n-  \/* convert a slot's glyph image into a horizontal LCD bitmap *\/\n-  static FT_Error\n-  ft_smooth_render_lcd( FT_Renderer       render,\n-                        FT_GlyphSlot      slot,\n-                        FT_Render_Mode    mode,\n-                        const FT_Vector*  origin )\n-  {\n-    return ft_smooth_render_generic( render, slot, mode, origin,\n-                                     FT_RENDER_MODE_LCD );\n-  }\n-\n-\n-  \/* convert a slot's glyph image into a vertical LCD bitmap *\/\n-  static FT_Error\n-  ft_smooth_render_lcd_v( FT_Renderer       render,\n-                          FT_GlyphSlot      slot,\n-                          FT_Render_Mode    mode,\n-                          const FT_Vector*  origin )\n-  {\n-    return ft_smooth_render_generic( render, slot, mode, origin,\n-                                     FT_RENDER_MODE_LCD_V );\n-  }\n-\n-\n@@ -452,54 +595,0 @@\n-  FT_DEFINE_RENDERER(\n-    ft_smooth_lcd_renderer_class,\n-\n-      FT_MODULE_RENDERER,\n-      sizeof ( FT_RendererRec ),\n-\n-      \"smooth-lcd\",\n-      0x10000L,\n-      0x20000L,\n-\n-      NULL,    \/* module specific interface *\/\n-\n-      (FT_Module_Constructor)ft_smooth_init,  \/* module_init   *\/\n-      (FT_Module_Destructor) NULL,            \/* module_done   *\/\n-      (FT_Module_Requester)  NULL,            \/* get_interface *\/\n-\n-    FT_GLYPH_FORMAT_OUTLINE,\n-\n-    (FT_Renderer_RenderFunc)   ft_smooth_render_lcd,  \/* render_glyph    *\/\n-    (FT_Renderer_TransformFunc)ft_smooth_transform,   \/* transform_glyph *\/\n-    (FT_Renderer_GetCBoxFunc)  ft_smooth_get_cbox,    \/* get_glyph_cbox  *\/\n-    (FT_Renderer_SetModeFunc)  ft_smooth_set_mode,    \/* set_mode        *\/\n-\n-    (FT_Raster_Funcs*)&ft_grays_raster                \/* raster_class    *\/\n-  )\n-\n-\n-  FT_DEFINE_RENDERER(\n-    ft_smooth_lcdv_renderer_class,\n-\n-      FT_MODULE_RENDERER,\n-      sizeof ( FT_RendererRec ),\n-\n-      \"smooth-lcdv\",\n-      0x10000L,\n-      0x20000L,\n-\n-      NULL,    \/* module specific interface *\/\n-\n-      (FT_Module_Constructor)ft_smooth_init,  \/* module_init   *\/\n-      (FT_Module_Destructor) NULL,            \/* module_done   *\/\n-      (FT_Module_Requester)  NULL,            \/* get_interface *\/\n-\n-    FT_GLYPH_FORMAT_OUTLINE,\n-\n-    (FT_Renderer_RenderFunc)   ft_smooth_render_lcd_v,  \/* render_glyph    *\/\n-    (FT_Renderer_TransformFunc)ft_smooth_transform,     \/* transform_glyph *\/\n-    (FT_Renderer_GetCBoxFunc)  ft_smooth_get_cbox,      \/* get_glyph_cbox  *\/\n-    (FT_Renderer_SetModeFunc)  ft_smooth_set_mode,      \/* set_mode        *\/\n-\n-    (FT_Raster_Funcs*)&ft_grays_raster                  \/* raster_class    *\/\n-  )\n-\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmooth.c","additions":393,"deletions":304,"binary":false,"changes":697,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_RENDER_H\n+#include <freetype\/ftrender.h>\n@@ -32,4 +31,0 @@\n-  FT_DECLARE_RENDERER( ft_smooth_lcd_renderer_class )\n-\n-  FT_DECLARE_RENDERER( ft_smooth_lcdv_renderer_class )\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmooth.h","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_SERVICE_FONT_FORMAT_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/services\/svfntfmt.h>\n@@ -26,3 +25,3 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_METRICS_VARIATIONS_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/services\/svmm.h>\n+#include <freetype\/internal\/services\/svmetric.h>\n@@ -31,4 +30,4 @@\n-#include FT_SERVICE_TRUETYPE_ENGINE_H\n-#include FT_SERVICE_TRUETYPE_GLYF_H\n-#include FT_SERVICE_PROPERTIES_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/services\/svtteng.h>\n+#include <freetype\/internal\/services\/svttglyf.h>\n+#include <freetype\/internal\/services\/svprop.h>\n+#include <freetype\/ftdriver.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttdriver.c","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DRIVER_H\n+#include <freetype\/internal\/ftdrv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttdriver.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -37,1 +37,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/tterrors.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -20,1 +20,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -22,7 +22,7 @@\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_OUTLINE_H\n-#include FT_DRIVER_H\n-#include FT_LIST_H\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftdriver.h>\n+#include <freetype\/ftlist.h>\n@@ -63,1 +63,1 @@\n-#define OVERLAP_SIMPLE  0x40  \/* we ignore this value                     *\/\n+#define OVERLAP_SIMPLE  0x40  \/* retained as FT_OUTLINE_OVERLAP           *\/\n@@ -80,1 +80,1 @@\n-#define OVERLAP_COMPOUND           0x0400  \/* we ignore this value *\/\n+#define OVERLAP_COMPOUND           0x0400  \/* retained as FT_OUTLINE_OVERLAP *\/\n@@ -140,0 +140,5 @@\n+#ifdef FT_DEBUG_LEVEL_TRACE\n+    if ( !face->vertical_info )\n+      FT_TRACE5(( \"  [vertical metrics missing, computing values]\\n\" ));\n+#endif\n+\n@@ -336,1 +341,1 @@\n-    FT_TRACE5(( \"  xMin: %4d  xMax: %4d\\n\", loader->bbox.xMin,\n+    FT_TRACE5(( \"  xMin: %4ld  xMax: %4ld\\n\", loader->bbox.xMin,\n@@ -338,1 +343,1 @@\n-    FT_TRACE5(( \"  yMin: %4d  yMax: %4d\\n\", loader->bbox.yMin,\n+    FT_TRACE5(( \"  yMin: %4ld  yMax: %4ld\\n\", loader->bbox.yMin,\n@@ -492,0 +497,4 @@\n+    \/* retain the overlap flag *\/\n+    if ( n_points && outline->tags[0] & OVERLAP_SIMPLE )\n+      gloader->base.outline.flags |= FT_OUTLINE_OVERLAP;\n+\n@@ -2186,0 +2195,5 @@\n+\n+      \/* retain the overlap flag *\/\n+      if ( gloader->base.num_subglyphs                         &&\n+           gloader->base.subglyphs[0].flags & OVERLAP_COMPOUND )\n+        gloader->base.outline.flags |= FT_OUTLINE_OVERLAP;\n@@ -2984,2 +2998,0 @@\n-    tt_loader_done( &loader );\n-\n@@ -2994,0 +3006,9 @@\n+    FT_TRACE1(( \"  subglyphs = %u, contours = %hd, points = %hd,\"\n+                \" flags = 0x%.3x\\n\",\n+                loader.gloader->base.num_subglyphs,\n+                glyph->outline.n_contours,\n+                glyph->outline.n_points,\n+                glyph->outline.flags ));\n+\n+    tt_loader_done( &loader );\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.c","additions":35,"deletions":14,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -45,6 +45,6 @@\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_TRUETYPE_IDS_H\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_LIST_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ttnameid.h>\n+#include <freetype\/ftmm.h>\n+#include <freetype\/ftlist.h>\n@@ -1732,1 +1732,1 @@\n-        FT_TRACE6(( \"      tuple coordinate is zero, ignore\\n\", i ));\n+        FT_TRACE6(( \"      tuple coordinate is zero, ignore\\n\" ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgxvar.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgxvar.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,7 +23,6 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_TRIGONOMETRY_H\n-#include FT_SYSTEM_H\n-#include FT_DRIVER_H\n-#include FT_MULTIPLE_MASTERS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/fttrigon.h>\n+#include <freetype\/ftsystem.h>\n+#include <freetype\/ftdriver.h>\n+#include <freetype\/ftmm.h>\n@@ -297,1 +296,1 @@\n-    FT_TRACE1(( \"Init_Context: new object at 0x%08p\\n\", exec ));\n+    FT_TRACE1(( \"Init_Context: new object at %p\\n\", (void *)exec ));\n@@ -322,1 +321,1 @@\n-    FT_ERROR(( \"Init_Context: not enough memory for %p\\n\", exec ));\n+    FT_ERROR(( \"Init_Context: not enough memory for %p\\n\", (void *)exec ));\n@@ -1959,2 +1958,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -1968,1 +1967,1 @@\n-              FT_F26Dot6      compensation )\n+              FT_Int          color )\n@@ -1970,0 +1969,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -1972,2 +1972,0 @@\n-    FT_UNUSED( exc );\n-\n@@ -2003,2 +2001,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2012,1 +2010,1 @@\n-                 FT_F26Dot6      compensation )\n+                 FT_Int          color )\n@@ -2014,0 +2012,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2016,2 +2015,0 @@\n-    FT_UNUSED( exc );\n-\n@@ -2049,2 +2046,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2058,1 +2055,1 @@\n-                      FT_F26Dot6      compensation )\n+                      FT_Int          color )\n@@ -2060,0 +2057,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2062,2 +2060,0 @@\n-    FT_UNUSED( exc );\n-\n@@ -2097,2 +2093,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2106,1 +2102,1 @@\n-                      FT_F26Dot6      compensation )\n+                      FT_Int          color )\n@@ -2108,0 +2104,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2110,2 +2107,0 @@\n-    FT_UNUSED( exc );\n-\n@@ -2142,2 +2137,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2151,1 +2146,1 @@\n-                    FT_F26Dot6      compensation )\n+                    FT_Int          color )\n@@ -2153,0 +2148,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2155,2 +2151,0 @@\n-    FT_UNUSED( exc );\n-\n@@ -2188,2 +2182,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2197,1 +2191,1 @@\n-                        FT_F26Dot6      compensation )\n+                        FT_Int          color )\n@@ -2199,0 +2193,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2201,2 +2196,0 @@\n-    FT_UNUSED( exc );\n-\n@@ -2234,2 +2227,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2249,1 +2242,1 @@\n-               FT_F26Dot6      compensation )\n+               FT_Int          color )\n@@ -2251,0 +2244,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2289,2 +2283,2 @@\n-   *   compensation ::\n-   *     The engine compensation.\n+   *   color ::\n+   *     The engine compensation color.\n@@ -2302,1 +2296,1 @@\n-                  FT_F26Dot6      compensation )\n+                  FT_Int          color )\n@@ -2304,0 +2298,1 @@\n+    FT_F26Dot6  compensation = exc->tt_metrics.compensations[color];\n@@ -2902,1 +2897,1 @@\n-    args[0] = ( ( exc->func_round( exc, args[0], 0 ) & 127 ) == 64 );\n+    args[0] = ( ( exc->func_round( exc, args[0], 3 ) & 127 ) == 64 );\n@@ -2916,1 +2911,1 @@\n-    args[0] = ( ( exc->func_round( exc, args[0], 0 ) & 127 ) == 0 );\n+    args[0] = ( ( exc->func_round( exc, args[0], 3 ) & 127 ) == 0 );\n@@ -3246,4 +3241,1 @@\n-    args[0] = exc->func_round(\n-                exc,\n-                args[0],\n-                exc->tt_metrics.compensations[exc->opcode - 0x68] );\n+    args[0] = exc->func_round( exc, args[0], exc->opcode & 3 );\n@@ -3263,4 +3255,1 @@\n-    args[0] = Round_None(\n-                exc,\n-                args[0],\n-                exc->tt_metrics.compensations[exc->opcode - 0x6C] );\n+    args[0] = Round_None( exc, args[0], exc->opcode & 3 );\n@@ -5736,3 +5725,0 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    FT_Int      B1, B2;\n-#endif\n@@ -5773,1 +5759,2 @@\n-      if ( SUBPIXEL_HINTING_INFINALITY )\n+      if ( SUBPIXEL_HINTING_INFINALITY &&\n+           exc->ignore_x_mode          )\n@@ -5775,0 +5762,3 @@\n+        FT_Int  B1, B2;\n+\n+\n@@ -5783,1 +5773,4 @@\n-        if ( exc->ignore_x_mode )\n+        \/* save point for later comparison *\/\n+        B1 = exc->zp2.cur[point].y;\n+\n+        if ( exc->face->sph_compatibility_mode )\n@@ -5785,1 +5778,16 @@\n-          \/* save point for later comparison *\/\n+          if ( exc->sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )\n+            dy = FT_PIX_ROUND( B1 + dy ) - B1;\n+\n+          \/* skip post-iup deltas *\/\n+          if ( exc->iup_called                                          &&\n+               ( ( exc->sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1 ) ||\n+                 ( exc->sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2 ) ) )\n+            goto Skip;\n+\n+          if ( !( exc->sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP ) &&\n+                ( ( exc->is_composite && exc->GS.freeVector.y != 0 ) ||\n+                  ( exc->zp2.tags[point] & FT_CURVE_TAG_TOUCH_Y )    ||\n+                  ( exc->sph_tweak_flags & SPH_TWEAK_DO_SHPIX )      )  )\n+            Move_Zp2_Point( exc, point, 0, dy, TRUE );\n+\n+          \/* save new point *\/\n@@ -5787,6 +5795,0 @@\n-            B1 = exc->zp2.cur[point].y;\n-          else\n-            B1 = exc->zp2.cur[point].x;\n-\n-          if ( !exc->face->sph_compatibility_mode &&\n-               exc->GS.freeVector.y != 0          )\n@@ -5794,1 +5796,1 @@\n-            Move_Zp2_Point( exc, point, dx, dy, TRUE );\n+            B2 = exc->zp2.cur[point].y;\n@@ -5796,16 +5798,5 @@\n-            \/* save new point *\/\n-            if ( exc->GS.freeVector.y != 0 )\n-            {\n-              B2 = exc->zp2.cur[point].y;\n-\n-              \/* reverse any disallowed moves *\/\n-              if ( ( exc->sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) &&\n-                   ( B1 & 63 ) != 0                                           &&\n-                   ( B2 & 63 ) != 0                                           &&\n-                   B1 != B2                                                   )\n-                Move_Zp2_Point( exc,\n-                                point,\n-                                NEG_LONG( dx ),\n-                                NEG_LONG( dy ),\n-                                TRUE );\n-            }\n+            \/* reverse any disallowed moves *\/\n+            if ( ( B1 & 63 ) == 0 &&\n+                 ( B2 & 63 ) != 0 &&\n+                 B1 != B2         )\n+              Move_Zp2_Point( exc, point, 0, NEG_LONG( dy ), TRUE );\n@@ -5813,24 +5804,4 @@\n-          else if ( exc->face->sph_compatibility_mode )\n-          {\n-            if ( exc->sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )\n-            {\n-              dx = FT_PIX_ROUND( B1 + dx ) - B1;\n-              dy = FT_PIX_ROUND( B1 + dy ) - B1;\n-            }\n-\n-            \/* skip post-iup deltas *\/\n-            if ( exc->iup_called                                          &&\n-                 ( ( exc->sph_in_func_flags & SPH_FDEF_INLINE_DELTA_1 ) ||\n-                   ( exc->sph_in_func_flags & SPH_FDEF_INLINE_DELTA_2 ) ) )\n-              goto Skip;\n-\n-            if ( !( exc->sph_tweak_flags & SPH_TWEAK_ALWAYS_SKIP_DELTAP ) &&\n-                  ( ( exc->is_composite && exc->GS.freeVector.y != 0 ) ||\n-                    ( exc->zp2.tags[point] & FT_CURVE_TAG_TOUCH_Y )    ||\n-                    ( exc->sph_tweak_flags & SPH_TWEAK_DO_SHPIX )      )  )\n-              Move_Zp2_Point( exc, point, 0, dy, TRUE );\n-\n-            \/* save new point *\/\n-            if ( exc->GS.freeVector.y != 0 )\n-            {\n-              B2 = exc->zp2.cur[point].y;\n+        }\n+        else if ( exc->GS.freeVector.y != 0 )\n+        {\n+          Move_Zp2_Point( exc, point, dx, dy, TRUE );\n@@ -5838,9 +5809,13 @@\n-              \/* reverse any disallowed moves *\/\n-              if ( ( B1 & 63 ) == 0 &&\n-                   ( B2 & 63 ) != 0 &&\n-                   B1 != B2         )\n-                Move_Zp2_Point( exc, point, 0, NEG_LONG( dy ), TRUE );\n-            }\n-          }\n-          else if ( exc->sph_in_func_flags & SPH_FDEF_TYPEMAN_DIAGENDCTRL )\n-            Move_Zp2_Point( exc, point, dx, dy, TRUE );\n+          \/* save new point *\/\n+          B2 = exc->zp2.cur[point].y;\n+\n+          \/* reverse any disallowed moves *\/\n+          if ( ( exc->sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) &&\n+               ( B1 & 63 ) != 0                                           &&\n+               ( B2 & 63 ) != 0                                           &&\n+               B1 != B2                                                   )\n+            Move_Zp2_Point( exc,\n+                            point,\n+                            NEG_LONG( dx ),\n+                            NEG_LONG( dy ),\n+                            TRUE );\n@@ -5848,1 +5823,1 @@\n-        else\n+        else if ( exc->sph_in_func_flags & SPH_FDEF_TYPEMAN_DIAGENDCTRL )\n@@ -5896,3 +5871,0 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    FT_F26Dot6  control_value_cutin = 0;\n-    FT_F26Dot6  delta;\n@@ -5901,11 +5873,0 @@\n-    if ( SUBPIXEL_HINTING_INFINALITY )\n-    {\n-      control_value_cutin = exc->GS.control_value_cutin;\n-\n-      if ( exc->ignore_x_mode                                 &&\n-           exc->GS.freeVector.x != 0                          &&\n-           !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n-        control_value_cutin = 0;\n-    }\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n-\n@@ -5934,4 +5895,0 @@\n-    delta = SUB_LONG( distance, args[1] );\n-    if ( delta < 0 )\n-      delta = NEG_LONG( delta );\n-\n@@ -5939,5 +5896,18 @@\n-    if ( SUBPIXEL_HINTING_INFINALITY  &&\n-         exc->ignore_x_mode           &&\n-         exc->GS.freeVector.x != 0    &&\n-         delta >= control_value_cutin )\n-      distance = args[1];\n+    if ( SUBPIXEL_HINTING_INFINALITY &&\n+         exc->ignore_x_mode          &&\n+         exc->GS.freeVector.x != 0   )\n+    {\n+      FT_F26Dot6  control_value_cutin = exc->GS.control_value_cutin;\n+      FT_F26Dot6  delta;\n+\n+\n+      if ( !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n+        control_value_cutin = 0;\n+\n+      delta = SUB_LONG( distance, args[1] );\n+      if ( delta < 0 )\n+        delta = NEG_LONG( delta );\n+\n+      if ( delta >= control_value_cutin )\n+        distance = args[1];\n+    }\n@@ -5990,5 +5960,1 @@\n-        distance = SUB_LONG(\n-                     Round_None( exc,\n-                                 cur_dist,\n-                                 exc->tt_metrics.compensations[0] ),\n-                     cur_dist );\n+        distance = SUB_LONG( Round_None( exc, cur_dist, 3 ), cur_dist );\n@@ -5997,5 +5963,1 @@\n-        distance = SUB_LONG(\n-                     exc->func_round( exc,\n-                                      cur_dist,\n-                                      exc->tt_metrics.compensations[0] ),\n-                     cur_dist );\n+        distance = SUB_LONG( exc->func_round( exc, cur_dist, 3 ), cur_dist );\n@@ -6027,2 +5989,0 @@\n-    FT_F26Dot6  control_value_cutin;\n-\n@@ -6030,3 +5990,0 @@\n-    control_value_cutin = exc->GS.control_value_cutin;\n-    cvtEntry            = (FT_ULong)args[1];\n-    point               = (FT_UShort)args[0];\n@@ -6034,8 +5991,2 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    if ( SUBPIXEL_HINTING_INFINALITY                        &&\n-         exc->ignore_x_mode                                 &&\n-         exc->GS.freeVector.x != 0                          &&\n-         exc->GS.freeVector.y == 0                          &&\n-         !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n-      control_value_cutin = 0;\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n+    cvtEntry = (FT_ULong)args[1];\n+    point    = (FT_UShort)args[0];\n@@ -6085,1 +6036,1 @@\n-                                           exc->GS.freeVector.y ),\n+                                           exc->GS.freeVector.y );\n@@ -6101,0 +6052,1 @@\n+      FT_F26Dot6  control_value_cutin = exc->GS.control_value_cutin;\n@@ -6104,0 +6056,9 @@\n+#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n+      if ( SUBPIXEL_HINTING_INFINALITY                        &&\n+           exc->ignore_x_mode                                 &&\n+           exc->GS.freeVector.x != 0                          &&\n+           exc->GS.freeVector.y == 0                          &&\n+           !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n+        control_value_cutin = 0;\n+#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n+\n@@ -6115,3 +6076,1 @@\n-        distance = Round_None( exc,\n-                               distance,\n-                               exc->tt_metrics.compensations[0] );\n+        distance = Round_None( exc, distance, 3 );\n@@ -6120,3 +6079,1 @@\n-        distance = exc->func_round( exc,\n-                                    distance,\n-                                    exc->tt_metrics.compensations[0] );\n+        distance = exc->func_round( exc, distance, 3 );\n@@ -6144,2 +6101,1 @@\n-    FT_F26Dot6  org_dist, distance, minimum_distance;\n-\n+    FT_F26Dot6  org_dist, distance;\n@@ -6147,9 +6103,0 @@\n-    minimum_distance = exc->GS.minimum_distance;\n-\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    if ( SUBPIXEL_HINTING_INFINALITY                        &&\n-         exc->ignore_x_mode                                 &&\n-         exc->GS.freeVector.x != 0                          &&\n-         !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n-      minimum_distance = 0;\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n@@ -6229,4 +6176,1 @@\n-        distance = Round_None(\n-                     exc,\n-                     org_dist,\n-                     exc->tt_metrics.compensations[exc->opcode & 3] );\n+        distance = Round_None( exc, org_dist, exc->opcode & 3 );\n@@ -6235,4 +6179,1 @@\n-        distance = exc->func_round(\n-                     exc,\n-                     org_dist,\n-                     exc->tt_metrics.compensations[exc->opcode & 3] );\n+        distance = exc->func_round( exc, org_dist, exc->opcode & 3 );\n@@ -6241,4 +6182,1 @@\n-      distance = Round_None(\n-                   exc,\n-                   org_dist,\n-                   exc->tt_metrics.compensations[exc->opcode & 3] );\n+      distance = Round_None( exc, org_dist, exc->opcode & 3 );\n@@ -6250,0 +6188,11 @@\n+      FT_F26Dot6  minimum_distance = exc->GS.minimum_distance;\n+\n+\n+#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n+      if ( SUBPIXEL_HINTING_INFINALITY                        &&\n+           exc->ignore_x_mode                                 &&\n+           exc->GS.freeVector.x != 0                          &&\n+           !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n+        minimum_distance = 0;\n+#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n+\n@@ -6293,8 +6242,1 @@\n-                org_dist,\n-                control_value_cutin,\n-                minimum_distance;\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    FT_Int      B1           = 0; \/* pacify compiler *\/\n-    FT_Int      B2           = 0;\n-    FT_Bool     reverse_move = FALSE;\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n+                org_dist;\n@@ -6305,12 +6247,2 @@\n-    minimum_distance    = exc->GS.minimum_distance;\n-    control_value_cutin = exc->GS.control_value_cutin;\n-    point               = (FT_UShort)args[0];\n-    cvtEntry            = (FT_ULong)( ADD_LONG( args[1], 1 ) );\n-\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    if ( SUBPIXEL_HINTING_INFINALITY                        &&\n-         exc->ignore_x_mode                                 &&\n-         exc->GS.freeVector.x != 0                          &&\n-         !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n-      control_value_cutin = minimum_distance = 0;\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n+    point    = (FT_UShort)args[0];\n+    cvtEntry = (FT_ULong)( ADD_LONG( args[1], 1 ) );\n@@ -6374,13 +6306,0 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    if ( SUBPIXEL_HINTING_INFINALITY                               &&\n-         exc->ignore_x_mode                                        &&\n-         exc->GS.freeVector.y != 0                                 &&\n-         ( exc->sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK ) )\n-    {\n-      if ( cur_dist < -64 )\n-        cvt_dist -= 16;\n-      else if ( cur_dist > 64 && cur_dist < 84 )\n-        cvt_dist += 32;\n-    }\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n-\n@@ -6396,0 +6315,3 @@\n+        FT_F26Dot6  control_value_cutin = exc->GS.control_value_cutin;\n+\n+\n@@ -6416,4 +6338,1 @@\n-      distance = exc->func_round(\n-                   exc,\n-                   cvt_dist,\n-                   exc->tt_metrics.compensations[exc->opcode & 3] );\n+      distance = exc->func_round( exc, cvt_dist, exc->opcode & 3 );\n@@ -6430,0 +6349,16 @@\n+        FT_F26Dot6  control_value_cutin = exc->GS.control_value_cutin;\n+\n+\n+        if ( exc->GS.freeVector.x != 0                          &&\n+             !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n+          control_value_cutin = 0;\n+\n+        if ( exc->GS.freeVector.y != 0                                 &&\n+             ( exc->sph_tweak_flags & SPH_TWEAK_TIMES_NEW_ROMAN_HACK ) )\n+        {\n+          if ( cur_dist < -64 )\n+            cvt_dist -= 16;\n+          else if ( cur_dist > 64 && cur_dist < 84 )\n+            cvt_dist += 32;\n+        }\n+\n@@ -6439,4 +6374,1 @@\n-      distance = Round_None(\n-                   exc,\n-                   cvt_dist,\n-                   exc->tt_metrics.compensations[exc->opcode & 3] );\n+      distance = Round_None( exc, cvt_dist, exc->opcode & 3 );\n@@ -6449,0 +6381,11 @@\n+      FT_F26Dot6  minimum_distance    = exc->GS.minimum_distance;\n+\n+\n+#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n+      if ( SUBPIXEL_HINTING_INFINALITY                        &&\n+           exc->ignore_x_mode                                 &&\n+           exc->GS.freeVector.x != 0                          &&\n+           !( exc->sph_tweak_flags & SPH_TWEAK_NORMAL_ROUND ) )\n+        minimum_distance = 0;\n+#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n+\n@@ -6462,1 +6405,3 @@\n-    if ( SUBPIXEL_HINTING_INFINALITY )\n+    if ( SUBPIXEL_HINTING_INFINALITY &&\n+         exc->ignore_x_mode          &&\n+         exc->GS.freeVector.y != 0   )\n@@ -6464,0 +6409,3 @@\n+      FT_Int   B1, B2;\n+\n+\n@@ -6467,3 +6415,1 @@\n-      if ( exc->ignore_x_mode                                          &&\n-           exc->GS.freeVector.y != 0                                   &&\n-           ( exc->sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES ) )\n+      if ( exc->sph_tweak_flags & SPH_TWEAK_ROUND_NONPIXEL_Y_MOVES )\n@@ -6472,3 +6418,1 @@\n-      if ( exc->ignore_x_mode                                      &&\n-           exc->GS.freeVector.y != 0                               &&\n-           ( exc->opcode & 16 ) == 0                               &&\n+      if ( ( exc->opcode & 16 ) == 0                               &&\n@@ -6478,2 +6422,0 @@\n-    }\n-#endif \/* TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY *\/\n@@ -6481,4 +6423,4 @@\n-    exc->func_move( exc,\n-                    &exc->zp1,\n-                    point,\n-                    SUB_LONG( distance, cur_dist ) );\n+      exc->func_move( exc,\n+                      &exc->zp1,\n+                      point,\n+                      SUB_LONG( distance, cur_dist ) );\n@@ -6486,3 +6428,0 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    if ( SUBPIXEL_HINTING_INFINALITY )\n-    {\n@@ -6492,4 +6431,1 @@\n-      if ( exc->ignore_x_mode )\n-      {\n-        if ( exc->face->sph_compatibility_mode &&\n-             exc->GS.freeVector.y != 0         &&\n+      if ( ( exc->face->sph_compatibility_mode &&\n@@ -6497,11 +6433,4 @@\n-             ( B2 & 63 ) != 0                  )\n-          reverse_move = TRUE;\n-\n-        if ( ( exc->sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) &&\n-             exc->GS.freeVector.y != 0                                  &&\n-             ( B2 & 63 ) != 0                                           &&\n-             ( B1 & 63 ) != 0                                           )\n-          reverse_move = TRUE;\n-      }\n-\n-      if ( reverse_move )\n+             ( B2 & 63 ) != 0                  )                          ||\n+           ( ( exc->sph_tweak_flags & SPH_TWEAK_SKIP_NONPIXEL_Y_MOVES ) &&\n+             ( B1 & 63 ) != 0                                           &&\n+             ( B2 & 63 ) != 0                                           ) )\n@@ -6513,1 +6442,1 @@\n-\n+    else\n@@ -6516,0 +6445,5 @@\n+      exc->func_move( exc,\n+                      &exc->zp1,\n+                      point,\n+                      SUB_LONG( distance, cur_dist ) );\n+\n@@ -7188,2 +7122,0 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    FT_UShort  B1, B2;\n@@ -7192,0 +7124,1 @@\n+#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n@@ -7272,0 +7205,3 @@\n+              FT_UShort  B1, B2;\n+\n+\n@@ -7849,1 +7785,1 @@\n-                  \"           from %d to the more reasonable value %d\\n\",\n+                  \"           from %d to the more reasonable value %ld\\n\",\n@@ -7884,1 +7820,1 @@\n-                \" to %d\\n\", exc->loopcall_counter_max ));\n+                \" to %ld\\n\", exc->loopcall_counter_max ));\n@@ -7888,1 +7824,1 @@\n-                \" to %d\\n\", exc->neg_jump_counter_max ));\n+                \" to %ld\\n\", exc->neg_jump_counter_max ));\n@@ -7925,1 +7861,1 @@\n-        FT_TRACE7(( \"%06d \", exc->IP ));\n+        FT_TRACE7(( \"%06ld \", exc->IP ));\n@@ -7932,1 +7868,1 @@\n-          FT_TRACE7(( \" %d\", exc->stack[exc->top - n] ));\n+          FT_TRACE7(( \" %ld\", exc->stack[exc->top - n] ));\n@@ -8650,1 +8586,1 @@\n-    FT_TRACE4(( \"  %d instruction%s executed\\n\",\n+    FT_TRACE4(( \"  %ld instruction%s executed\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.c","additions":211,"deletions":275,"binary":false,"changes":486,"status":"modified"},{"patch":"@@ -22,1 +22,0 @@\n-#include <ft2build.h>\n@@ -55,1 +54,1 @@\n-                    FT_F26Dot6      compensation );\n+                    FT_Int          color );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -19,6 +19,5 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/ftdriver.h>\n@@ -1119,4 +1118,4 @@\n-      tt_metrics->compensations[0] = 0;   \/* gray             *\/\n-      tt_metrics->compensations[1] = 0;   \/* black            *\/\n-      tt_metrics->compensations[2] = 0;   \/* white            *\/\n-      tt_metrics->compensations[3] = 0;   \/* the same as gray *\/\n+      tt_metrics->compensations[0] = 0;   \/* gray  *\/\n+      tt_metrics->compensations[1] = 0;   \/* black *\/\n+      tt_metrics->compensations[2] = 0;   \/* white *\/\n+      tt_metrics->compensations[3] = 0;   \/* zero  *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttobjs.c","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttobjs.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -19,5 +19,4 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_OBJECTS_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_TAGS_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftobjs.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/tttags.h>\n@@ -127,1 +126,1 @@\n-      FT_TRACE2(( \"glyph count mismatch!  loca: %d, maxp: %d\\n\",\n+      FT_TRACE2(( \"glyph count mismatch!  loca: %ld, maxp: %ld\\n\",\n@@ -168,1 +167,1 @@\n-          FT_TRACE2(( \"adjusting num_locations to %d\\n\",\n+          FT_TRACE2(( \"adjusting num_locations to %ld\\n\",\n@@ -176,1 +175,1 @@\n-          FT_TRACE2(( \"adjusting num_glyphs to %d\\n\",\n+          FT_TRACE2(( \"adjusting num_glyphs to %ld\\n\",\n@@ -241,1 +240,1 @@\n-                  \" too large offset (0x%08lx) found for glyph index %ld,\\n\"\n+                  \" too large offset (0x%08lx) found for glyph index %d,\\n\"\n@@ -255,1 +254,1 @@\n-                    \" too large size (%ld bytes) found for glyph index %ld,\\n\"\n+                    \" too large size (%ld bytes) found for glyph index %d,\\n\"\n@@ -264,1 +263,1 @@\n-                    \" too large offset (0x%08lx) found for glyph index %ld,\\n\"\n+                    \" too large offset (0x%08lx) found for glyph index %d,\\n\"\n@@ -432,1 +431,1 @@\n-      FT_TRACE2(( \"loaded, %12d bytes\\n\", face->font_program_size ));\n+      FT_TRACE2(( \"loaded, %12ld bytes\\n\", face->font_program_size ));\n@@ -495,1 +494,1 @@\n-      FT_TRACE2(( \"loaded, %12d bytes\\n\", face->cvt_program_size ));\n+      FT_TRACE2(( \"loaded, %12ld bytes\\n\", face->cvt_program_size ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttpload.c","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_TRUETYPE_TYPES_H\n+#include <freetype\/internal\/tttypes.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttpload.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -18,8 +18,7 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_SFNT_H\n-#include FT_TRUETYPE_TAGS_H\n-#include FT_OUTLINE_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/tttags.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/ftdriver.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttsubpix.c","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -22,1 +22,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttsubpix.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -21,3 +20,3 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -22,1 +22,0 @@\n-#include <ft2build.h>\n@@ -24,1 +23,1 @@\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -30,14 +29,14 @@\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_HASH_H\n-#include FT_INTERNAL_POSTSCRIPT_PROPS_H\n-#include FT_DRIVER_H\n-\n-#include FT_SERVICE_MULTIPLE_MASTERS_H\n-#include FT_SERVICE_GLYPH_DICT_H\n-#include FT_SERVICE_FONT_FORMAT_H\n-#include FT_SERVICE_POSTSCRIPT_NAME_H\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_SERVICE_POSTSCRIPT_INFO_H\n-#include FT_SERVICE_PROPERTIES_H\n-#include FT_SERVICE_KERNING_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/fthash.h>\n+#include <freetype\/internal\/ftpsprop.h>\n+#include <freetype\/ftdriver.h>\n+\n+#include <freetype\/internal\/services\/svmm.h>\n+#include <freetype\/internal\/services\/svgldict.h>\n+#include <freetype\/internal\/services\/svfntfmt.h>\n+#include <freetype\/internal\/services\/svpostnm.h>\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/internal\/services\/svpsinfo.h>\n+#include <freetype\/internal\/services\/svprop.h>\n+#include <freetype\/internal\/services\/svkern.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1driver.c","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -23,2 +23,1 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DRIVER_H\n+#include <freetype\/internal\/ftdrv.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1driver.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include FT_MODULE_ERRORS_H\n+#include <freetype\/ftmoderr.h>\n@@ -36,1 +36,1 @@\n-#include FT_ERRORS_H\n+#include <freetype\/fterrors.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1errors.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -19,1 +19,0 @@\n-#include <ft2build.h>\n@@ -21,7 +20,7 @@\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_OUTLINE_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_INTERNAL_CFF_TYPES_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/ftoutln.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/internal\/cfftypes.h>\n+#include <freetype\/ftdriver.h>\n@@ -337,1 +336,1 @@\n-      FT_TRACE5(( \"  idx %d: advance width %d font unit%s\\n\",\n+      FT_TRACE5(( \"  idx %d: advance width %ld font unit%s\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1gload.c","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-#include <ft2build.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1gload.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-#include FT_INTERNAL_DEBUG_H\n+#include <freetype\/internal\/ftdebug.h>\n@@ -66,4 +66,4 @@\n-#include FT_MULTIPLE_MASTERS_H\n-#include FT_INTERNAL_TYPE1_TYPES_H\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_HASH_H\n+#include <freetype\/ftmm.h>\n+#include <freetype\/internal\/t1types.h>\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/fthash.h>\n@@ -1066,1 +1066,1 @@\n-        FT_TRACE4(( \" [%d %f]\",\n+        FT_TRACE4(( \" [%ld %f]\",\n@@ -1758,1 +1758,1 @@\n-                  \" (from %d to %d)\\n\",\n+                  \" (from %d to %ld)\\n\",\n@@ -1929,1 +1929,1 @@\n-                  \" (from %d to %d)\\n\",\n+                  \" (from %d to %ld)\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -23,4 +23,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n-#include FT_MULTIPLE_MASTERS_H\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/psaux.h>\n+#include <freetype\/ftmm.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,6 +19,5 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_CALC_H\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_TRUETYPE_IDS_H\n-#include FT_DRIVER_H\n+#include <freetype\/internal\/ftcalc.h>\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/ttnameid.h>\n+#include <freetype\/ftdriver.h>\n@@ -35,2 +34,2 @@\n-#include FT_SERVICE_POSTSCRIPT_CMAPS_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/services\/svpscmap.h>\n+#include <freetype\/internal\/psaux.h>\n@@ -350,2 +349,2 @@\n-    FT_TRACE2(( \"T1_Face_Init: %08p (index %d)\\n\",\n-                face,\n+    FT_TRACE2(( \"T1_Face_Init: %p (index %d)\\n\",\n+                (void *)face,\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1objs.c","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-#include FT_INTERNAL_OBJECTS_H\n+#include <freetype\/internal\/ftobjs.h>\n@@ -26,1 +26,1 @@\n-#include FT_INTERNAL_TYPE1_TYPES_H\n+#include <freetype\/internal\/t1types.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1objs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,4 +36,3 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_DEBUG_H\n-#include FT_INTERNAL_STREAM_H\n-#include FT_INTERNAL_POSTSCRIPT_AUX_H\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/ftstream.h>\n+#include <freetype\/internal\/psaux.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1parse.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -23,3 +23,2 @@\n-#include <ft2build.h>\n-#include FT_INTERNAL_TYPE1_TYPES_H\n-#include FT_INTERNAL_STREAM_H\n+#include <freetype\/internal\/t1types.h>\n+#include <freetype\/internal\/ftstream.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1parse.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}